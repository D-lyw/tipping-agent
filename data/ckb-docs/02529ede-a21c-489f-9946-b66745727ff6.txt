Directory structure:
└── ckb-devrel-ccc/
    ├── README.md
    ├── env.example.js
    ├── jest.config.js
    ├── package.json
    ├── pnpm-lock.yaml
    ├── pnpm-workspace.yaml
    ├── tsconfig.base.json
    ├── tsconfig.json
    ├── typedoc.base.json
    ├── typedoc.json
    ├── assets/
    │   ├── typedoc.css
    │   └── projects/
    ├── config/
    │   ├── eslint.config.mjs
    │   ├── tsconfig.base.json
    │   ├── tsconfig.commonjs.json
    │   ├── tsconfig.json
    │   ├── .npmignore
    │   ├── .prettierignore
    │   └── .prettierrc
    ├── packages/
    │   ├── ccc/
    │   │   ├── README.md
    │   │   ├── CHANGELOG.md
    │   │   ├── eslint.config.mjs
    │   │   ├── package.json
    │   │   ├── tsconfig.base.json
    │   │   ├── tsconfig.commonjs.json
    │   │   ├── tsconfig.json
    │   │   ├── typedoc.json
    │   │   ├── .npmignore
    │   │   ├── .prettierignore
    │   │   ├── .prettierrc
    │   │   ├── misc/
    │   │   │   └── basedirs/
    │   │   │       ├── dist/
    │   │   │       │   └── package.json
    │   │   │       └── dist.commonjs/
    │   │   │           └── package.json
    │   │   └── src/
    │   │       ├── advanced.ts
    │   │       ├── advancedBarrel.ts
    │   │       ├── barrel.ts
    │   │       ├── index.ts
    │   │       ├── signersController.ts
    │   │       └── assets/
    │   │           ├── eth.svg.ts
    │   │           ├── joy-id.svg.ts
    │   │           ├── metamask.svg.ts
    │   │           ├── nostr.svg.ts
    │   │           ├── okx.svg.ts
    │   │           ├── rei.svg.ts
    │   │           ├── uni-sat.svg.ts
    │   │           ├── utils.ts
    │   │           └── utxo-global.svg.ts
    │   ├── ckb-ccc/
    │   │   ├── README.md
    │   │   ├── CHANGELOG.md
    │   │   ├── eslint.config.mjs
    │   │   ├── package.json
    │   │   ├── tsconfig.base.json
    │   │   ├── tsconfig.commonjs.json
    │   │   ├── tsconfig.json
    │   │   ├── .npmignore
    │   │   ├── .prettierignore
    │   │   ├── .prettierrc
    │   │   ├── misc/
    │   │   │   └── basedirs/
    │   │   │       ├── dist/
    │   │   │       │   └── package.json
    │   │   │       └── dist.commonjs/
    │   │   │           └── package.json
    │   │   └── src/
    │   │       └── index.ts
    │   ├── connector/
    │   │   ├── README.md
    │   │   ├── CHANGELOG.md
    │   │   ├── eslint.config.mjs
    │   │   ├── package.json
    │   │   ├── tsconfig.base.json
    │   │   ├── tsconfig.commonjs.json
    │   │   ├── tsconfig.json
    │   │   ├── typedoc.json
    │   │   ├── .npmignore
    │   │   ├── .prettierignore
    │   │   ├── .prettierrc
    │   │   └── src/
    │   │       ├── advanced.ts
    │   │       ├── advancedBarrel.ts
    │   │       ├── barrel.ts
    │   │       ├── index.ts
    │   │       ├── assets/
    │   │       │   ├── close.svg.ts
    │   │       │   ├── diconnect.svg.ts
    │   │       │   ├── left.svg.ts
    │   │       │   ├── retry.svg.ts
    │   │       │   ├── swap.svg.ts
    │   │       │   ├── user.svg.ts
    │   │       │   ├── utils.ts
    │   │       │   └── chains/
    │   │       │       ├── btc.svg.ts
    │   │       │       ├── ckb.svg.ts
    │   │       │       ├── doge.svg.ts
    │   │       │       ├── eth.svg.ts
    │   │       │       ├── index.ts
    │   │       │       └── nostr.svg.ts
    │   │       ├── components/
    │   │       │   ├── button-pill.ts
    │   │       │   ├── button.ts
    │   │       │   ├── copy-button.ts
    │   │       │   ├── dialog.ts
    │   │       │   └── index.ts
    │   │       ├── connector/
    │   │       │   └── index.ts
    │   │       ├── events/
    │   │       │   └── index.ts
    │   │       ├── scenes/
    │   │       │   ├── connected.ts
    │   │       │   ├── index.ts
    │   │       │   └── selecting/
    │   │       │       ├── connecting.ts
    │   │       │       ├── index.ts
    │   │       │       ├── signers.ts
    │   │       │       └── wallets.ts
    │   │       └── signers/
    │   │           └── index.ts
    │   ├── connector-react/
    │   │   ├── README.md
    │   │   ├── CHANGELOG.md
    │   │   ├── eslint.config.mjs
    │   │   ├── package.json
    │   │   ├── tsconfig.base.json
    │   │   ├── tsconfig.commonjs.json
    │   │   ├── tsconfig.json
    │   │   ├── typedoc.json
    │   │   ├── .npmignore
    │   │   ├── .prettierignore
    │   │   ├── .prettierrc
    │   │   └── src/
    │   │       ├── advanced.ts
    │   │       ├── advancedBarrel.ts
    │   │       ├── barrel.ts
    │   │       ├── index.ts
    │   │       ├── components/
    │   │       │   └── index.ts
    │   │       └── hooks/
    │   │           ├── index.ts
    │   │           ├── useCcc.tsx
    │   │           └── useSigner.tsx
    │   ├── core/
    │   │   ├── README.md
    │   │   ├── CHANGELOG.md
    │   │   ├── eslint.config.mjs
    │   │   ├── jest.config.js
    │   │   ├── package.json
    │   │   ├── tsconfig.base.json
    │   │   ├── tsconfig.commonjs.json
    │   │   ├── tsconfig.json
    │   │   ├── typedoc.json
    │   │   ├── .npmignore
    │   │   ├── .prettierignore
    │   │   ├── .prettierrc
    │   │   ├── misc/
    │   │   │   └── basedirs/
    │   │   │       ├── dist/
    │   │   │       │   └── package.json
    │   │   │       └── dist.commonjs/
    │   │   │           └── package.json
    │   │   └── src/
    │   │       ├── advanced.ts
    │   │       ├── advancedBarrel.ts
    │   │       ├── barrel.ts
    │   │       ├── index.ts
    │   │       ├── address/
    │   │       │   ├── address.advanced.ts
    │   │       │   ├── advanced.ts
    │   │       │   └── index.ts
    │   │       ├── bytes/
    │   │       │   ├── advanced.ts
    │   │       │   └── index.ts
    │   │       ├── ckb/
    │   │       │   ├── advanced.ts
    │   │       │   ├── index.ts
    │   │       │   ├── script.advanced.ts
    │   │       │   ├── script.ts
    │   │       │   ├── transaction.advanced.ts
    │   │       │   ├── transaction.ts
    │   │       │   └── transactionLumos.ts
    │   │       ├── client/
    │   │       │   ├── advanced.ts
    │   │       │   ├── client.ts
    │   │       │   ├── clientPublicMainnet.advanced.ts
    │   │       │   ├── clientPublicMainnet.ts
    │   │       │   ├── clientPublicTestnet.advanced.ts
    │   │       │   ├── clientPublicTestnet.ts
    │   │       │   ├── clientTypes.advanced.ts
    │   │       │   ├── clientTypes.ts
    │   │       │   ├── index.ts
    │   │       │   ├── cache/
    │   │       │   │   ├── advanced.ts
    │   │       │   │   ├── cache.ts
    │   │       │   │   ├── index.ts
    │   │       │   │   ├── memory.advanced.ts
    │   │       │   │   └── memory.ts
    │   │       │   └── jsonRpc/
    │   │       │       ├── advanced.ts
    │   │       │       ├── client.ts
    │   │       │       ├── index.ts
    │   │       │       ├── transformers.ts
    │   │       │       └── types.ts
    │   │       ├── fixedPoint/
    │   │       │   ├── index.test.ts
    │   │       │   └── index.ts
    │   │       ├── hasher/
    │   │       │   ├── advanced.ts
    │   │       │   ├── hasher.ts
    │   │       │   ├── hasherCkb.ts
    │   │       │   ├── hasherKeecak256.ts
    │   │       │   └── index.ts
    │   │       ├── hex/
    │   │       │   └── index.ts
    │   │       ├── jsonRpc/
    │   │       │   ├── advanced.ts
    │   │       │   ├── index.ts
    │   │       │   ├── requestor.ts
    │   │       │   └── transports/
    │   │       │       ├── advanced.ts
    │   │       │       ├── factory.ts
    │   │       │       ├── fallback.ts
    │   │       │       ├── http.ts
    │   │       │       ├── transport.ts
    │   │       │       └── webSocket.ts
    │   │       ├── keystore/
    │   │       │   └── index.ts
    │   │       ├── molecule/
    │   │       │   ├── barrel.ts
    │   │       │   ├── codec.ts
    │   │       │   ├── entity.ts
    │   │       │   ├── index.ts
    │   │       │   └── predefined.ts
    │   │       ├── num/
    │   │       │   └── index.ts
    │   │       ├── signer/
    │   │       │   ├── index.ts
    │   │       │   ├── btc/
    │   │       │   │   ├── index.ts
    │   │       │   │   ├── signerBtc.ts
    │   │       │   │   ├── signerBtcPublicKeyReadonly.ts
    │   │       │   │   └── verify.ts
    │   │       │   ├── ckb/
    │   │       │   │   ├── index.ts
    │   │       │   │   ├── signerCkbPrivateKey.ts
    │   │       │   │   ├── signerCkbPublicKey.ts
    │   │       │   │   ├── signerCkbScriptReadonly.ts
    │   │       │   │   ├── verifyCkbSecp256k1.ts
    │   │       │   │   └── verifyJoyId.ts
    │   │       │   ├── doge/
    │   │       │   │   ├── index.ts
    │   │       │   │   ├── signerDoge.ts
    │   │       │   │   ├── signerDogeAddressReadonly.ts
    │   │       │   │   ├── signerDogePrivateKey.ts
    │   │       │   │   └── verify.ts
    │   │       │   ├── dummy/
    │   │       │   │   ├── alwaysError.ts
    │   │       │   │   ├── dummy.ts
    │   │       │   │   ├── index.ts
    │   │       │   │   └── openLink.ts
    │   │       │   ├── evm/
    │   │       │   │   ├── index.ts
    │   │       │   │   ├── signerEvm.ts
    │   │       │   │   ├── signerEvmAddressReadonly.ts
    │   │       │   │   └── verify.ts
    │   │       │   ├── nostr/
    │   │       │   │   ├── index.ts
    │   │       │   │   ├── signerNostr.ts
    │   │       │   │   ├── signerNostrPrivateKey.ts
    │   │       │   │   └── verify.ts
    │   │       │   └── signer/
    │   │       │       └── index.ts
    │   │       └── utils/
    │   │           └── index.ts
    │   ├── demo/
    │   │   ├── README.md
    │   │   ├── next.config.mjs
    │   │   ├── package.json
    │   │   ├── postcss.config.mjs
    │   │   ├── tailwind.config.ts
    │   │   ├── tsconfig.json
    │   │   ├── .eslintrc.json
    │   │   ├── .gitignore
    │   │   ├── .prettierrc
    │   │   ├── public/
    │   │   │   ├── .gitkeep
    │   │   │   └── background/
    │   │   └── src/
    │   │       ├── context.tsx
    │   │       ├── types.ts
    │   │       ├── utils.tsx
    │   │       ├── app/
    │   │       │   ├── globals.css
    │   │       │   ├── layout.tsx
    │   │       │   ├── layoutProvider.tsx
    │   │       │   ├── page.tsx
    │   │       │   ├── connectPrivateKey/
    │   │       │   │   └── page.tsx
    │   │       │   ├── connected/
    │   │       │   │   ├── layout.tsx
    │   │       │   │   ├── page.tsx
    │   │       │   │   └── (tools)/
    │   │       │   │       ├── layout.tsx
    │   │       │   │       ├── CreateSporeCluster/
    │   │       │   │       │   └── page.tsx
    │   │       │   │       ├── IssueXUdtSus/
    │   │       │   │       │   └── page.tsx
    │   │       │   │       ├── IssueXUdtTypeId/
    │   │       │   │       │   └── page.tsx
    │   │       │   │       ├── MintSpore/
    │   │       │   │       │   └── page.tsx
    │   │       │   │       ├── NervosDao/
    │   │       │   │       │   └── page.tsx
    │   │       │   │       ├── SSRI/
    │   │       │   │       │   ├── page.tsx
    │   │       │   │       │   ├── types.ts
    │   │       │   │       │   └── components/
    │   │       │   │       │       ├── HexArrayInput.tsx
    │   │       │   │       │       ├── ParameterInput.tsx
    │   │       │   │       │       ├── ScriptAmountInput.tsx
    │   │       │   │       │       └── TransactionSkeletonPanel.tsx
    │   │       │   │       ├── Sign/
    │   │       │   │       │   └── page.tsx
    │   │       │   │       ├── TimeLockedTransfer/
    │   │       │   │       │   └── page.tsx
    │   │       │   │       ├── Transfer/
    │   │       │   │       │   └── page.tsx
    │   │       │   │       ├── TransferLumos/
    │   │       │   │       │   └── page.tsx
    │   │       │   │       ├── TransferSpore/
    │   │       │   │       │   └── page.tsx
    │   │       │   │       ├── TransferSporeCluster/
    │   │       │   │       │   └── page.tsx
    │   │       │   │       └── TransferUdt/
    │   │       │   │           └── page.tsx
    │   │       │   └── utils/
    │   │       │       ├── page.tsx
    │   │       │       └── (tools)/
    │   │       │           ├── layout.tsx
    │   │       │           ├── Hash/
    │   │       │           │   └── page.tsx
    │   │       │           ├── Keystore/
    │   │       │           │   └── page.tsx
    │   │       │           └── Mnemonic/
    │   │       │               └── page.tsx
    │   │       └── components/
    │   │           ├── Background.tsx
    │   │           ├── BigButton.tsx
    │   │           ├── Button.tsx
    │   │           ├── ButtonsPanel.tsx
    │   │           ├── Dropdown.tsx
    │   │           ├── Icon.tsx
    │   │           ├── Input.tsx
    │   │           ├── Message.tsx
    │   │           ├── Notifications.tsx
    │   │           ├── RandomWalk.tsx
    │   │           └── Textarea.tsx
    │   ├── eip6963/
    │   │   ├── README.md
    │   │   ├── CHANGELOG.md
    │   │   ├── eslint.config.mjs
    │   │   ├── package.json
    │   │   ├── tsconfig.base.json
    │   │   ├── tsconfig.commonjs.json
    │   │   ├── tsconfig.json
    │   │   ├── typedoc.json
    │   │   ├── .npmignore
    │   │   ├── .prettierignore
    │   │   ├── .prettierrc
    │   │   ├── misc/
    │   │   │   └── basedirs/
    │   │   │       ├── dist/
    │   │   │       │   └── package.json
    │   │   │       └── dist.commonjs/
    │   │   │           └── package.json
    │   │   └── src/
    │   │       ├── advanced.ts
    │   │       ├── barrel.ts
    │   │       ├── eip1193.advanced.ts
    │   │       ├── eip6963.advanced.ts
    │   │       ├── index.ts
    │   │       ├── signer.ts
    │   │       └── signersFactory.ts
    │   ├── examples/
    │   │   ├── CHANGELOG.md
    │   │   ├── eslint.config.mjs
    │   │   ├── package.json
    │   │   ├── tsconfig.base.json
    │   │   ├── tsconfig.commonjs.json
    │   │   ├── tsconfig.json
    │   │   ├── .prettierignore
    │   │   ├── .prettierrc
    │   │   └── src/
    │   │       ├── customUi.ts
    │   │       ├── customUiWithController.ts
    │   │       ├── sign.ts
    │   │       ├── transfer.ts
    │   │       ├── transferAll.ts
    │   │       ├── transferUdt.ts
    │   │       └── playground/
    │   │           └── index.d.ts
    │   ├── faucet/
    │   │   ├── README.md
    │   │   ├── nest-cli.json
    │   │   ├── package.json
    │   │   ├── tsconfig.build.json
    │   │   ├── tsconfig.json
    │   │   ├── .eslintrc.js
    │   │   ├── .gitignore
    │   │   ├── .prettierignore
    │   │   ├── .prettierrc
    │   │   ├── config/
    │   │   │   └── config.yaml
    │   │   ├── libs/
    │   │   │   ├── commons/
    │   │   │   │   ├── tsconfig.lib.json
    │   │   │   │   └── src/
    │   │   │   │       ├── config.ts
    │   │   │   │       └── index.ts
    │   │   │   └── tap/
    │   │   │       ├── tsconfig.lib.json
    │   │   │       └── src/
    │   │   │           ├── index.ts
    │   │   │           ├── params.ts
    │   │   │           ├── tap.controller.ts
    │   │   │           ├── tap.module.ts
    │   │   │           └── tap.service.ts
    │   │   └── src/
    │   │       ├── app.module.ts
    │   │       └── main.ts
    │   ├── joy-id/
    │   │   ├── README.md
    │   │   ├── CHANGELOG.md
    │   │   ├── eslint.config.mjs
    │   │   ├── package.json
    │   │   ├── tsconfig.base.json
    │   │   ├── tsconfig.commonjs.json
    │   │   ├── tsconfig.json
    │   │   ├── typedoc.json
    │   │   ├── .npmignore
    │   │   ├── .prettierignore
    │   │   ├── .prettierrc
    │   │   ├── misc/
    │   │   │   └── basedirs/
    │   │   │       ├── dist/
    │   │   │       │   └── package.json
    │   │   │       └── dist.commonjs/
    │   │   │           └── package.json
    │   │   └── src/
    │   │       ├── advanced.ts
    │   │       ├── advancedBarrel.ts
    │   │       ├── barrel.ts
    │   │       ├── index.ts
    │   │       ├── btc/
    │   │       │   └── index.ts
    │   │       ├── ckb/
    │   │       │   └── index.ts
    │   │       ├── common/
    │   │       │   └── index.ts
    │   │       ├── connectionsStorage/
    │   │       │   └── index.ts
    │   │       ├── evm/
    │   │       │   └── index.ts
    │   │       ├── nostr/
    │   │       │   └── index.ts
    │   │       └── signerFactory/
    │   │           └── index.ts
    │   ├── lumos-patches/
    │   │   ├── README.md
    │   │   ├── CHANGELOG.md
    │   │   ├── eslint.config.mjs
    │   │   ├── package.json
    │   │   ├── tsconfig.base.json
    │   │   ├── tsconfig.commonjs.json
    │   │   ├── tsconfig.json
    │   │   ├── typedoc.json
    │   │   ├── .npmignore
    │   │   ├── .prettierignore
    │   │   ├── .prettierrc
    │   │   ├── misc/
    │   │   │   └── basedirs/
    │   │   │       ├── dist/
    │   │   │       │   └── package.json
    │   │   │       └── dist.commonjs/
    │   │   │           └── package.json
    │   │   └── src/
    │   │       ├── default.ts
    │   │       ├── index.ts
    │   │       └── utils.ts
    │   ├── nip07/
    │   │   ├── README.md
    │   │   ├── CHANGELOG.md
    │   │   ├── eslint.config.mjs
    │   │   ├── package.json
    │   │   ├── tsconfig.base.json
    │   │   ├── tsconfig.commonjs.json
    │   │   ├── tsconfig.json
    │   │   ├── typedoc.json
    │   │   ├── .npmignore
    │   │   ├── .prettierignore
    │   │   ├── .prettierrc
    │   │   ├── misc/
    │   │   │   └── basedirs/
    │   │   │       ├── dist/
    │   │   │       │   └── package.json
    │   │   │       └── dist.commonjs/
    │   │   │           └── package.json
    │   │   └── src/
    │   │       ├── advanced.ts
    │   │       ├── barrel.ts
    │   │       ├── index.ts
    │   │       ├── nip07.advanced.ts
    │   │       ├── signer.ts
    │   │       └── signersFactory.ts
    │   ├── okx/
    │   │   ├── README.md
    │   │   ├── CHANGELOG.md
    │   │   ├── eslint.config.mjs
    │   │   ├── package.json
    │   │   ├── tsconfig.base.json
    │   │   ├── tsconfig.commonjs.json
    │   │   ├── tsconfig.json
    │   │   ├── typedoc.json
    │   │   ├── .npmignore
    │   │   ├── .prettierignore
    │   │   ├── .prettierrc
    │   │   ├── misc/
    │   │   │   └── basedirs/
    │   │   │       ├── dist/
    │   │   │       │   └── package.json
    │   │   │       └── dist.commonjs/
    │   │   │           └── package.json
    │   │   └── src/
    │   │       ├── advanced.ts
    │   │       ├── advancedBarrel.ts
    │   │       ├── barrel.ts
    │   │       ├── index.ts
    │   │       ├── signersFactory.ts
    │   │       ├── btc/
    │   │       │   └── index.ts
    │   │       └── nostr/
    │   │           └── index.ts
    │   ├── playground/
    │   │   ├── README.md
    │   │   ├── CHANGELOG.md
    │   │   ├── next.config.mjs
    │   │   ├── package.json
    │   │   ├── postcss.config.mjs
    │   │   ├── tailwind.config.ts
    │   │   ├── tsconfig.json
    │   │   ├── .eslintrc.json
    │   │   ├── .gitignore
    │   │   ├── .prettierrc
    │   │   ├── assets/
    │   │   ├── public/
    │   │   └── src/
    │   │       └── app/
    │   │           ├── context.tsx
    │   │           ├── examples.ts
    │   │           ├── globals.css
    │   │           ├── layout.tsx
    │   │           ├── layoutProvider.tsx
    │   │           ├── page.tsx
    │   │           ├── utils.tsx
    │   │           ├── components/
    │   │           │   ├── BigButton.tsx
    │   │           │   ├── Button.tsx
    │   │           │   ├── Cell.tsx
    │   │           │   ├── Editor.tsx
    │   │           │   └── RandomWalk.tsx
    │   │           ├── execute/
    │   │           │   ├── index.ts
    │   │           │   └── vlq.ts
    │   │           ├── fonts/
    │   │           │   ├── GeistMonoVF.woff
    │   │           │   └── GeistVF.woff
    │   │           └── tabs/
    │   │               ├── About.tsx
    │   │               ├── Console.tsx
    │   │               ├── Scripts.tsx
    │   │               └── Transaction.tsx
    │   ├── rei/
    │   │   ├── README.md
    │   │   ├── CHANGELOG.md
    │   │   ├── eslint.config.mjs
    │   │   ├── package.json
    │   │   ├── tsconfig.base.json
    │   │   ├── tsconfig.commonjs.json
    │   │   ├── tsconfig.json
    │   │   ├── typedoc.json
    │   │   ├── .npmignore
    │   │   ├── .prettierignore
    │   │   ├── .prettierrc
    │   │   ├── misc/
    │   │   │   └── basedirs/
    │   │   │       ├── dist/
    │   │   │       │   └── package.json
    │   │   │       └── dist.commonjs/
    │   │   │           └── package.json
    │   │   └── src/
    │   │       ├── advanced.ts
    │   │       ├── advancedBarrel.ts
    │   │       ├── barrel.ts
    │   │       ├── index.ts
    │   │       ├── signer.ts
    │   │       └── signersFactory.ts
    │   ├── shell/
    │   │   ├── README.md
    │   │   ├── CHANGELOG.md
    │   │   ├── eslint.config.mjs
    │   │   ├── package.json
    │   │   ├── tsconfig.base.json
    │   │   ├── tsconfig.commonjs.json
    │   │   ├── tsconfig.json
    │   │   ├── typedoc.json
    │   │   ├── .npmignore
    │   │   ├── .prettierignore
    │   │   ├── .prettierrc
    │   │   ├── misc/
    │   │   │   └── basedirs/
    │   │   │       ├── dist/
    │   │   │       │   └── package.json
    │   │   │       └── dist.commonjs/
    │   │   │           └── package.json
    │   │   └── src/
    │   │       ├── advanced.ts
    │   │       ├── advancedBarrel.ts
    │   │       ├── barrel.ts
    │   │       └── index.ts
    │   ├── spore/
    │   │   ├── README.md
    │   │   ├── CHANGELOG.md
    │   │   ├── eslint.config.mjs
    │   │   ├── package.json
    │   │   ├── tsconfig.base.json
    │   │   ├── tsconfig.commonjs.json
    │   │   ├── tsconfig.json
    │   │   ├── typedoc.json
    │   │   ├── .npmignore
    │   │   ├── .prettierignore
    │   │   ├── .prettierrc
    │   │   ├── misc/
    │   │   │   └── basedirs/
    │   │   │       ├── dist/
    │   │   │       │   └── package.json
    │   │   │       └── dist.commonjs/
    │   │   │           └── package.json
    │   │   └── src/
    │   │       ├── advanced.ts
    │   │       ├── advancedBarrel.ts
    │   │       ├── barrel.ts
    │   │       ├── index.ts
    │   │       ├── __examples__/
    │   │       │   ├── createDobCluster.test.ts
    │   │       │   ├── createDobSpore.test.ts
    │   │       │   ├── createSporeWithoutCluster.test.ts
    │   │       │   ├── decodeDob.test.ts
    │   │       │   ├── meltSpore.test.ts
    │   │       │   ├── meltThenCreateSpore.test.ts
    │   │       │   ├── searchClusters.test.ts
    │   │       │   ├── searchSpores.test.ts
    │   │       │   ├── transferCluster.test.ts
    │   │       │   └── transferSpore.test.ts
    │   │       ├── cluster/
    │   │       │   └── index.ts
    │   │       ├── cobuild/
    │   │       │   └── index.ts
    │   │       ├── codec/
    │   │       │   ├── cluster.ts
    │   │       │   ├── index.ts
    │   │       │   ├── spore.ts
    │   │       │   └── cobuild/
    │   │       │       ├── buildingPacket.ts
    │   │       │       ├── index.ts
    │   │       │       ├── sporeAction.ts
    │   │       │       └── witnessLayout.ts
    │   │       ├── dob/
    │   │       │   ├── index.ts
    │   │       │   ├── api/
    │   │       │   │   ├── decode.ts
    │   │       │   │   ├── encode.ts
    │   │       │   │   └── index.ts
    │   │       │   ├── config/
    │   │       │   │   ├── index.ts
    │   │       │   │   └── predefined.ts
    │   │       │   └── helper/
    │   │       │       ├── check.ts
    │   │       │       ├── error.ts
    │   │       │       ├── index.ts
    │   │       │       └── object.ts
    │   │       ├── helper/
    │   │       │   └── index.ts
    │   │       ├── predefined/
    │   │       │   ├── advanced.ts
    │   │       │   ├── index.ts
    │   │       │   ├── mainnet.advanced.ts
    │   │       │   ├── testnet.advanced.ts
    │   │       │   ├── types.ts
    │   │       │   └── utils.ts
    │   │       └── spore/
    │   │           ├── advanced.ts
    │   │           └── index.ts
    │   ├── ssri/
    │   │   ├── README.md
    │   │   ├── CHANGELOG.md
    │   │   ├── eslint.config.mjs
    │   │   ├── jest.config.js
    │   │   ├── package.json
    │   │   ├── tsconfig.base.json
    │   │   ├── tsconfig.commonjs.json
    │   │   ├── tsconfig.json
    │   │   ├── typedoc.json
    │   │   ├── .npmignore
    │   │   ├── .prettierignore
    │   │   ├── .prettierrc
    │   │   ├── misc/
    │   │   │   └── basedirs/
    │   │   │       ├── dist/
    │   │   │       │   └── package.json
    │   │   │       └── dist.commonjs/
    │   │   │           └── package.json
    │   │   └── src/
    │   │       ├── barrel.ts
    │   │       ├── executor.ts
    │   │       ├── index.ts
    │   │       ├── trait.ts
    │   │       └── utils.ts
    │   ├── udt/
    │   │   ├── README.md
    │   │   ├── CHANGELOG.md
    │   │   ├── eslint.config.mjs
    │   │   ├── jest.config.js
    │   │   ├── package.json
    │   │   ├── tsconfig.base.json
    │   │   ├── tsconfig.commonjs.json
    │   │   ├── tsconfig.json
    │   │   ├── typedoc.json
    │   │   ├── .npmignore
    │   │   ├── .prettierignore
    │   │   ├── .prettierrc
    │   │   ├── misc/
    │   │   │   └── basedirs/
    │   │   │       ├── dist/
    │   │   │       │   └── package.json
    │   │   │       └── dist.commonjs/
    │   │   │           └── package.json
    │   │   └── src/
    │   │       ├── barrel.ts
    │   │       ├── index.ts
    │   │       ├── udt/
    │   │       │   └── index.ts
    │   │       └── udtPausable/
    │   │           └── index.ts
    │   ├── uni-sat/
    │   │   ├── README.md
    │   │   ├── CHANGELOG.md
    │   │   ├── eslint.config.mjs
    │   │   ├── package.json
    │   │   ├── tsconfig.base.json
    │   │   ├── tsconfig.commonjs.json
    │   │   ├── tsconfig.json
    │   │   ├── typedoc.json
    │   │   ├── .npmignore
    │   │   ├── .prettierignore
    │   │   ├── .prettierrc
    │   │   ├── misc/
    │   │   │   └── basedirs/
    │   │   │       ├── dist/
    │   │   │       │   └── package.json
    │   │   │       └── dist.commonjs/
    │   │   │           └── package.json
    │   │   └── src/
    │   │       ├── advanced.ts
    │   │       ├── advancedBarrel.ts
    │   │       ├── barrel.ts
    │   │       ├── index.ts
    │   │       ├── signer.ts
    │   │       └── signersFactory.ts
    │   ├── utxo-global/
    │   │   ├── README.md
    │   │   ├── CHANGELOG.md
    │   │   ├── eslint.config.mjs
    │   │   ├── package.json
    │   │   ├── tsconfig.base.json
    │   │   ├── tsconfig.commonjs.json
    │   │   ├── tsconfig.json
    │   │   ├── typedoc.json
    │   │   ├── .npmignore
    │   │   ├── .prettierignore
    │   │   ├── .prettierrc
    │   │   ├── misc/
    │   │   │   └── basedirs/
    │   │   │       ├── dist/
    │   │   │       │   └── package.json
    │   │   │       └── dist.commonjs/
    │   │   │           └── package.json
    │   │   └── src/
    │   │       ├── advanced.ts
    │   │       ├── advancedBarrel.ts
    │   │       ├── barrel.ts
    │   │       ├── index.ts
    │   │       ├── signersFactory.ts
    │   │       ├── btc/
    │   │       │   └── index.ts
    │   │       ├── ckb/
    │   │       │   └── index.ts
    │   │       └── doge/
    │   │           └── index.ts
    │   └── xverse/
    │       ├── README.md
    │       ├── CHANGELOG.md
    │       ├── eslint.config.mjs
    │       ├── package.json
    │       ├── tsconfig.base.json
    │       ├── tsconfig.commonjs.json
    │       ├── tsconfig.json
    │       ├── typedoc.json
    │       ├── .npmignore
    │       ├── .prettierignore
    │       ├── .prettierrc
    │       ├── misc/
    │       │   └── basedirs/
    │       │       ├── dist/
    │       │       │   └── package.json
    │       │       └── dist.commonjs/
    │       │           └── package.json
    │       └── src/
    │           ├── advanced.ts
    │           ├── advancedBarrel.ts
    │           ├── barrel.ts
    │           ├── index.ts
    │           ├── signer.ts
    │           ├── signersFactory.ts
    │           └── sat-connect-core/
    │               ├── advanced.ts
    │               ├── btcMethods.advanced.ts
    │               ├── provider.advanced.ts
    │               ├── requests.advanced.ts
    │               ├── types.advanced.ts
    │               └── walletMethods.advanced.ts
    ├── patches/
    │   └── bs58check@4.0.0.patch
    ├── .changeset/
    │   ├── README.md
    │   ├── chilled-pumas-reflect.md
    │   ├── config.json
    │   ├── lemon-ads-laugh.md
    │   ├── light-vans-arrive.md
    │   ├── proud-crabs-grow.md
    │   ├── rude-numbers-deny.md
    │   ├── strong-countries-help.md
    │   └── violet-foxes-destroy.md
    └── .github/
        └── workflows/
            ├── check.yaml
            ├── publish-canary.yaml
            └── publish.yaml

================================================
File: README.md
================================================
<p align="center">
  <a href="https://app.ckbccc.com/">
    <img alt="Logo" src="https://raw.githubusercontent.com/ckb-devrel/ccc/master/assets/logoAndText.svg" style="height: 8rem; max-width: 90%; padding: 0.5rem 0;" />
  </a>
</p>

<h1 align="center" style="font-size: 64px;">
  CCC
</h1>

<p align="center">
  <a href="https://www.npmjs.com/package/@ckb-ccc/ccc"><img
    alt="NPM Version" src="https://img.shields.io/npm/v/%40ckb-ccc%2Fccc"
  /></a>
  <img alt="GitHub commit activity" src="https://img.shields.io/github/commit-activity/m/ckb-devrel/ccc" />
  <img alt="GitHub last commit" src="https://img.shields.io/github/last-commit/ckb-devrel/ccc/master" />
  <img alt="GitHub branch check runs" src="https://img.shields.io/github/check-runs/ckb-devrel/ccc/master" />
  <a href="https://live.ckbccc.com/"><img
    alt="Playground" src="https://img.shields.io/website?url=https%3A%2F%2Flive.ckbccc.com%2F&label=Playground"
  /></a>
  <a href="https://app.ckbccc.com/"><img
    alt="App" src="https://img.shields.io/website?url=https%3A%2F%2Fapp.ckbccc.com%2F&label=App"
  /></a>
  <a href="https://docs.ckbccc.com/"><img
    alt="Docs" src="https://img.shields.io/website?url=https%3A%2F%2Fdocs.ckbccc.com%2F&label=Docs"
  /></a>
</p>

<p align="center">
  CCC - CKBers' Codebase is a one-stop solution for your CKB JS/TS ecosystem development.
  <br />
  Empower yourself with CCC to discover the unlimited potential of CKB.
  <br />
  Interoperate with wallets from different chain ecosystems.
  <br />
  Fully enabling CKB's Turing completeness and cryptographic freedom power.
</p>

## Use Cases

<p align="center">
  <a href="https://app.ckbccc.com/">
    <img src="https://raw.githubusercontent.com/ckb-devrel/ccc/master/assets/appPreview.png" width="50%" />
  </a>
</p>

For non-developers, you can [try CCC's app now here](https://app.ckbccc.com/) ([Project source code](https://github.com/ckb-devrel/ccc/tree/master/packages/demo)). It showcases how to use CCC for some basic scenarios in CKB:

- [Sign and verify any message.](<https://github.com/ckb-devrel/ccc/tree/master/packages/demo/src/app/connected/(tools)/Sign/page.tsx>) ([Playground](https://live.ckbccc.com/?src=https://raw.githubusercontent.com/ckb-devrel/ccc/refs/heads/master/packages/examples/src/sign.ts))
- [Transfer native CKB token.](<https://github.com/ckb-devrel/ccc/tree/master/packages/demo/src/app/connected/(tools)/Transfer/page.tsx>) ([Playground](https://live.ckbccc.com/?src=https://raw.githubusercontent.com/ckb-devrel/ccc/refs/heads/master/packages/examples/src/transfer.ts))
- [Transfer UDT token.](<https://github.com/ckb-devrel/ccc/tree/master/packages/demo/src/app/connected/(tools)/TransferUdt/page.tsx>) ([Playground](https://live.ckbccc.com/?src=https://raw.githubusercontent.com/ckb-devrel/ccc/refs/heads/master/packages/examples/src/transferUdt.ts))
- See [Misc: Single-Use-Seals](https://talk.nervos.org/t/en-cn-misc-single-use-seals/8279) to learn how token issuing works in the cell model.
  - [Issue xUDT token with the Single-Use Lock.](<https://github.com/ckb-devrel/ccc/tree/master/packages/demo/src/app/connected/(tools)/IssueXUdtSus/page.tsx>)
  - [Issue xUDT token controlled by a Type ID cell.](<https://github.com/ckb-devrel/ccc/tree/master/packages/demo/src/app/connected/(tools)/IssueXUdtTypeId/page.tsx>)
- [Spore Protocol](https://docs.spore.pro/) SDK.
  - [Create spore cluster.](<https://github.com/ckb-devrel/ccc/blob/master/packages/demo/src/app/connected/(tools)/CreateSporeCluster/page.tsx>)
  - [Mint spore.](<https://github.com/ckb-devrel/ccc/blob/master/packages/demo/src/app/connected/(tools)/MintSpore/page.tsx>)
  - [Transfer/Melt spore.](<https://github.com/ckb-devrel/ccc/blob/master/packages/demo/src/app/connected/(tools)/TransferSpore/page.tsx>)
  - [Transfer spore cluster.](<https://github.com/ckb-devrel/ccc/blob/master/packages/demo/src/app/connected/(tools)/TransferSporeCluster/page.tsx>)
- [Manage Nervos DAO.](<https://github.com/ckb-devrel/ccc/tree/master/packages/demo/src/app/connected/(tools)/NervosDao/page.tsx>)
- [Transfer native CKB token with time lock.](<https://github.com/ckb-devrel/ccc/blob/master/packages/demo/src/app/connected/(tools)/TimeLockedTransfer/page.tsx>)
- [Calculate the CKB hash of any messages.](<https://github.com/ckb-devrel/ccc/tree/master/packages/demo/src/app/utils/(tools)/Hash/page.tsx>)
- [Generate mnemonic and keypairs. Encrypt to a keystore.](<https://github.com/ckb-devrel/ccc/tree/master/packages/demo/src/app/utils/(tools)/Mnemonic/page.tsx>)
- [Decrypt a keystore.](<https://github.com/ckb-devrel/ccc/tree/master/packages/demo/src/app/utils/(tools)/Keystore/page.tsx>)
- [Transfer the native CKB token with the old Lumos SDK.](<https://github.com/ckb-devrel/ccc/tree/master/packages/demo/src/app/connected/(tools)/TransferLumos/page.tsx>)

## Examples

<p align="center">
  <a href="https://live.ckbccc.com/">
    <img src="https://raw.githubusercontent.com/ckb-devrel/ccc/master/assets/preview.png" width="90%" />
  </a>
</p>

Check our [full documents for all detailed APIs](https://docs.ckbccc.com) to understand these examples better. If you are new to the CKB, we recommend checking [Nervos CKB Docs](https://docs.nervos.org/) for basic knowledge. We build examples based on [the CCC playground](https://live.ckbccc.com/).

<p align="center">
  <a href="https://live.ckbccc.com/">
    <img src="https://raw.githubusercontent.com/ckb-devrel/ccc/master/assets/playgroundCell.png" width="40%" />
  </a>
</p>

Cells are represented with graphs in the playground. The three layers of cells represent occupancy, type and lock from inside to outside. The filled center circle means that all CKB of this cell is used to store data.

When cells share the same color, the same script governs them. They are owned by the same address (the outside ring) or the same type of assets (the inside ring). Check the script details in the "Scripts" tab.

### Transaction Composing

Here's an example for transferring CKB:

```typescript
const tx = ccc.Transaction.from({
  outputs: [{ lock: toLock, capacity: ccc.fixedPointFrom(amount) }],
});
```

Tell CCC what you need, and then...

```typescript
await tx.completeInputsByCapacity(signer);
await tx.completeFeeBy(signer); // Transaction fee rate is calculated automatically
const txHash = await signer.sendTransaction(tx);
```

We have done everything!

- [Use specified wallet in custom UI.](https://live.ckbccc.com/?src=https://raw.githubusercontent.com/ckb-devrel/ccc/refs/heads/master/packages/examples/src/customUi.ts)
- [Use all supported wallets in custom UI.](https://live.ckbccc.com/?src=https://raw.githubusercontent.com/ckb-devrel/ccc/refs/heads/master/packages/examples/src/customUiWithController.ts)
- [Sign and verify any message.](https://live.ckbccc.com/?src=https://raw.githubusercontent.com/ckb-devrel/ccc/refs/heads/master/packages/examples/src/sign.ts)
- [Transfer native CKB token.](https://live.ckbccc.com/?src=https://raw.githubusercontent.com/ckb-devrel/ccc/refs/heads/master/packages/examples/src/transfer.ts)
- [Transfer all native CKB token.](https://live.ckbccc.com/?src=https://raw.githubusercontent.com/ckb-devrel/ccc/refs/heads/master/packages/examples/src/transferAll.ts)
- [Transfer UDT token.](https://live.ckbccc.com/?src=https://raw.githubusercontent.com/ckb-devrel/ccc/refs/heads/master/packages/examples/src/transferUdt.ts)

## Quick Start with `create-ccc-app` (Recommended)

To quickly bootstrap a new CCC-based application, you can use our CLI tool `create-ccc-app`:

```bash
# Using npx
npx create-ccc-app@latest my-ccc-app
```

```bash
# Using yarn
yarn create ccc-app my-ccc-app
```

```bash
# Using pnpm
pnpm create ccc-app my-ccc-app
```

Follow the prompts to select your preferred framework template and start building your CCC application.

## Manual Installation

We design CCC for both front-end and back-end developers. You need only one package to fulfil all your needs:

- [NodeJS](https://www.npmjs.com/package/@ckb-ccc/shell): `npm install @ckb-ccc/shell`
- [Custom UI](https://www.npmjs.com/package/@ckb-ccc/ccc): `npm install @ckb-ccc/ccc`
- [Web Component](https://www.npmjs.com/package/@ckb-ccc/connector): `npm install @ckb-ccc/connector`
- [React](https://www.npmjs.com/package/@ckb-ccc/connector-react) ([Docs](https://docs.ckbccc.com/modules/_ckb_ccc_connector_react.html)): `npm install @ckb-ccc/connector-react`

CCC exports everything on the `ccc` object:

```typescript
import { ccc } from "@ckb-ccc/<package-name>";
```

For advanced developers, we provided the `cccA` object to fulfil all your needs. You should notice that these interfaces are not stable:

```typescript
import { cccA } from "@ckb-ccc/<package-name>/advanced";
```

## Build and Run

Run the demo of CCC in two steps:

1. Install packages and build the project

```shell
# Navigate to the project directory and run the following commands to install all necessary packages and build the project:
pnpm install
pnpm build
```

2. Run the demo in development mode

```shell
# Go to the demo directory and start the development server:
cd packages/demo
pnpm run dev
```

## Who uses CCC?

| [<img height="50" src="https://raw.githubusercontent.com/ckb-devrel/ccc/master/assets/projects/nervdao.svg" />](https://nervdao.com/) | [<img height="50" src="https://raw.githubusercontent.com/ckb-devrel/ccc/master/assets/projects/utxoglobal.svg" />](https://utxo.global/) | [<img height="50" src="https://raw.githubusercontent.com/ckb-devrel/ccc/master/assets/projects/mobit.svg" />](https://mobit.app/) | [<img height="50" src="https://raw.githubusercontent.com/ckb-devrel/ccc/master/assets/projects/omiga.svg" />](https://omiga.io/) |
| ------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------- |

| [<img height="50" src="https://raw.githubusercontent.com/ckb-devrel/ccc/master/assets/projects/nervape.svg" />](https://www.nervape.com/) | [<img height="50" src="https://raw.githubusercontent.com/ckb-devrel/ccc/master/assets/projects/utxoswap.svg" />](https://utxoswap.xyz/) | [<img height="50" src="https://raw.githubusercontent.com/ckb-devrel/ccc/master/assets/projects/did.svg" />](https://d.id/) | [<img height="50" src="https://raw.githubusercontent.com/ckb-devrel/ccc/master/assets/projects/boolnetwork.svg" />](https://bool.network/) |
| ----------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------ |

| [<img height="50" src="https://raw.githubusercontent.com/ckb-devrel/ccc/master/assets/projects/world3.svg" />](https://world3.ai/) | [<img height="50" src="assets/projects/rgbcat.svg" />](https://catnip.rgbcat.io/) |
| ---------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------- |

## FAQs

### Property '\*' does not exist on type 'typeof import("\*/@ckb-ccc/connector-react/dist/barrel")'.ts(2339)

CCC uses JS's [Package Entry Points](https://nodejs.org/api/packages.html#packages_package_entry_points) feature to help tree shaking while exporting everything on the `ccc` object. Ensure in your `tsconfig.json`, `moduleResolution` is set to `node16`, `nodenext`, or `bundler`, and `resolvePackageJsonExports` is not disabled.

Read the [TypeScript's Guide](https://www.typescriptlang.org/docs/handbook/modules/reference.html#packagejson-exports) for more.

### TypeError: (0, react....createContext) is not a function

CCC UI only works on the client side. If you are using the [React Server Component](https://react.dev/reference/rsc/use-client), add

```tsx
"use client";
```

at the beginning of files using `ccc.Provider`.

### Can I use Lumos with CCC?

While we recommend using CCC for composing transactions, we also provide Lumos patches to:

- Support the JoyID Wallet.
- Support the Nostr Wallet.
- Support the Portal Wallet.

See [lumos-patches](https://www.npmjs.com/package/@ckb-ccc/lumos-patches): `npm install @ckb-ccc/lumos-patches`

You can apply patches by:

```typescript
import { generateDefaultScriptInfos } from "@ckb-ccc/lumos-patches";

// Before using Lumos. You don't need @ckb-lumos/joyid anymore.
registerCustomLockScriptInfos(generateDefaultScriptInfos());
```

## Links

- [CCC Playground](https://live.ckbccc.com/) and its [source code](https://github.com/ckb-devrel/ccc/tree/master/packages/playground) help you experiment with CCC instantly in browsers.
- [Nervos CKB Docs](https://docs.nervos.org/) is the documentation website of Nervos CKB.
- [Lumos](https://github.com/ckb-js/lumos) and its [Docs](https://lumos-website.vercel.app/): Lumos provides utils to help compose CKB transactions.
- [RGB++ SDK](https://github.com/ckb-cell/rgbpp-sdk) and its [Design](https://github.com/ckb-cell/RGBPlusPlus-design): RGB++ is a protocol for issuing assets with Turing-completed VM on BTC L1.
- [Spore SDK](https://github.com/sporeprotocol/spore-sdk) and its [Docs](https://docs.spore.pro/): The on-chain digital object (DOBs) protocol designed to empower ownership, distribution, and value capture.
- [PW SDK](https://talk.nervos.org/t/lay2-pw-sdk-build-dapps-on-ckb-and-run-them-everywhere/4289) is not maintained anymore. It is the early-age wallet connector and a brave pioneer of the CKB ecosystem.


================================================
File: env.example.js
================================================
process.env.PRIVATE_KEY =
  "0x0000000000000000000000000000000000000000000000000000000000000000";


================================================
File: jest.config.js
================================================
/** @type {import('ts-jest').JestConfigWithTsJest} */
module.exports = {
  preset: "ts-jest",
  testEnvironment: "node",
  setupFiles: ["<rootDir>/.env.js"],
  moduleNameMapper: {
    "^(\\.\\.?\\/.+)\\.js$": "$1",
  },
};


================================================
File: package.json
================================================
{
  "private": true,
  "workspaces": [
    "packages/*"
  ],
  "scripts": {
    "test": "jest",
    "test:cov": "jest --coverage",
    "build:prepare": "pnpm -r --filter !./packages/demo --filter !./packages/faucet --filter !./packages/examples --filter !./packages/playground --filter !. install",
    "build": "pnpm -r --filter !./packages/demo --filter !./packages/faucet --filter !./packages/examples --filter !./packages/playground run build",
    "build:all": "pnpm -r run build",
    "lint": "pnpm -r run lint",
    "format": "pnpm -r run format",
    "sync:config": "pnpm -r --filter !./packages/demo --filter !./packages/faucet --filter !./packages/playground -c exec \"cp ../../config/* . && cp ../../config/.* .\"",
    "change": "pnpm changeset",
    "version": "pnpm changeset version",
    "publish": "pnpm publish -r",
    "docs": "typedoc"
  },
  "devDependencies": {
    "@changesets/changelog-github": "^0.5.0",
    "@changesets/cli": "^2.27.7",
    "@types/jest": "^29.5.12",
    "jest": "30.0.0-alpha.6",
    "ts-jest": "^29.2.5",
    "typedoc": "^0.26.6",
    "typedoc-material-theme": "^1.1.0",
    "typedoc-plugin-extras": "^3.1.0",
    "typescript": "^5.4.5"
  },
  "pnpm": {
    "patchedDependencies": {
      "bs58check@4.0.0": "patches/bs58check@4.0.0.patch"
    }
  }
}

================================================
File: pnpm-lock.yaml
================================================
lockfileVersion: '9.0'

settings:
  autoInstallPeers: true
  excludeLinksFromLockfile: false

patchedDependencies:
  bs58check@4.0.0:
    hash: xkju25h33uk7ay46aspcygifve
    path: patches/bs58check@4.0.0.patch

importers:

  .:
    devDependencies:
      '@changesets/changelog-github':
        specifier: ^0.5.0
        version: 0.5.0
      '@changesets/cli':
        specifier: ^2.27.7
        version: 2.27.12
      '@types/jest':
        specifier: ^29.5.12
        version: 29.5.14
      jest:
        specifier: 30.0.0-alpha.6
        version: 30.0.0-alpha.6(@types/node@22.13.1)(ts-node@10.9.2(@types/node@22.13.1)(typescript@5.7.3))
      ts-jest:
        specifier: ^29.2.5
        version: 29.2.5(@babel/core@7.26.8)(@jest/transform@29.7.0)(@jest/types@29.6.3)(babel-jest@29.7.0(@babel/core@7.26.8))(jest@30.0.0-alpha.6(@types/node@22.13.1)(ts-node@10.9.2(@types/node@22.13.1)(typescript@5.7.3)))(typescript@5.7.3)
      typedoc:
        specifier: ^0.26.6
        version: 0.26.11(typescript@5.7.3)
      typedoc-material-theme:
        specifier: ^1.1.0
        version: 1.3.0(typedoc@0.26.11(typescript@5.7.3))
      typedoc-plugin-extras:
        specifier: ^3.1.0
        version: 3.1.0(typedoc@0.26.11(typescript@5.7.3))
      typescript:
        specifier: ^5.4.5
        version: 5.7.3

  packages/ccc:
    dependencies:
      '@ckb-ccc/eip6963':
        specifier: workspace:*
        version: link:../eip6963
      '@ckb-ccc/joy-id':
        specifier: workspace:*
        version: link:../joy-id
      '@ckb-ccc/nip07':
        specifier: workspace:*
        version: link:../nip07
      '@ckb-ccc/okx':
        specifier: workspace:*
        version: link:../okx
      '@ckb-ccc/rei':
        specifier: workspace:*
        version: link:../rei
      '@ckb-ccc/shell':
        specifier: workspace:*
        version: link:../shell
      '@ckb-ccc/uni-sat':
        specifier: workspace:*
        version: link:../uni-sat
      '@ckb-ccc/utxo-global':
        specifier: workspace:*
        version: link:../utxo-global
      '@ckb-ccc/xverse':
        specifier: workspace:*
        version: link:../xverse
    devDependencies:
      '@eslint/js':
        specifier: ^9.1.1
        version: 9.20.0
      copyfiles:
        specifier: ^2.4.1
        version: 2.4.1
      eslint:
        specifier: ^9.1.0
        version: 9.20.0(jiti@1.21.7)
      eslint-config-prettier:
        specifier: ^9.1.0
        version: 9.1.0(eslint@9.20.0(jiti@1.21.7))
      eslint-plugin-prettier:
        specifier: ^5.1.3
        version: 5.2.3(@types/eslint@9.6.1)(eslint-config-prettier@9.1.0(eslint@9.20.0(jiti@1.21.7)))(eslint@9.20.0(jiti@1.21.7))(prettier@3.4.2)
      prettier:
        specifier: ^3.2.5
        version: 3.4.2
      prettier-plugin-organize-imports:
        specifier: ^3.2.4
        version: 3.2.4(prettier@3.4.2)(typescript@5.7.3)
      rimraf:
        specifier: ^5.0.5
        version: 5.0.10
      typescript:
        specifier: ^5.4.5
        version: 5.7.3
      typescript-eslint:
        specifier: ^7.7.0
        version: 7.18.0(eslint@9.20.0(jiti@1.21.7))(typescript@5.7.3)

  packages/ckb-ccc:
    dependencies:
      '@ckb-ccc/ccc':
        specifier: workspace:*
        version: link:../ccc
    devDependencies:
      '@eslint/js':
        specifier: ^9.1.1
        version: 9.20.0
      copyfiles:
        specifier: ^2.4.1
        version: 2.4.1
      eslint:
        specifier: ^9.1.0
        version: 9.20.0(jiti@1.21.7)
      eslint-config-prettier:
        specifier: ^9.1.0
        version: 9.1.0(eslint@9.20.0(jiti@1.21.7))
      eslint-plugin-prettier:
        specifier: ^5.1.3
        version: 5.2.3(@types/eslint@9.6.1)(eslint-config-prettier@9.1.0(eslint@9.20.0(jiti@1.21.7)))(eslint@9.20.0(jiti@1.21.7))(prettier@3.4.2)
      prettier:
        specifier: ^3.2.5
        version: 3.4.2
      prettier-plugin-organize-imports:
        specifier: ^3.2.4
        version: 3.2.4(prettier@3.4.2)(typescript@5.7.3)
      rimraf:
        specifier: ^5.0.5
        version: 5.0.10
      typescript:
        specifier: ^5.4.5
        version: 5.7.3
      typescript-eslint:
        specifier: ^7.7.0
        version: 7.18.0(eslint@9.20.0(jiti@1.21.7))(typescript@5.7.3)

  packages/connector:
    dependencies:
      '@ckb-ccc/ccc':
        specifier: workspace:*
        version: link:../ccc
      lit:
        specifier: ^3.1.3
        version: 3.2.1
    devDependencies:
      '@eslint/js':
        specifier: ^9.1.1
        version: 9.20.0
      eslint:
        specifier: ^9.1.0
        version: 9.20.0(jiti@1.21.7)
      eslint-config-prettier:
        specifier: ^9.1.0
        version: 9.1.0(eslint@9.20.0(jiti@1.21.7))
      eslint-plugin-prettier:
        specifier: ^5.1.3
        version: 5.2.3(@types/eslint@9.6.1)(eslint-config-prettier@9.1.0(eslint@9.20.0(jiti@1.21.7)))(eslint@9.20.0(jiti@1.21.7))(prettier@3.4.2)
      prettier:
        specifier: ^3.2.5
        version: 3.4.2
      prettier-plugin-organize-imports:
        specifier: ^3.2.4
        version: 3.2.4(prettier@3.4.2)(typescript@5.7.3)
      rimraf:
        specifier: ^5.0.5
        version: 5.0.10
      typescript:
        specifier: ^5.4.5
        version: 5.7.3
      typescript-eslint:
        specifier: ^7.7.0
        version: 7.18.0(eslint@9.20.0(jiti@1.21.7))(typescript@5.7.3)

  packages/connector-react:
    dependencies:
      '@ckb-ccc/connector':
        specifier: workspace:*
        version: link:../connector
      '@lit/react':
        specifier: ^1.0.5
        version: 1.0.7(@types/react@18.3.18)
      react:
        specifier: '>=16'
        version: 18.3.1
    devDependencies:
      '@eslint/js':
        specifier: ^9.1.1
        version: 9.20.0
      '@types/react':
        specifier: ^18
        version: 18.3.18
      eslint:
        specifier: ^9.1.0
        version: 9.20.0(jiti@1.21.7)
      eslint-config-prettier:
        specifier: ^9.1.0
        version: 9.1.0(eslint@9.20.0(jiti@1.21.7))
      eslint-plugin-prettier:
        specifier: ^5.1.3
        version: 5.2.3(@types/eslint@9.6.1)(eslint-config-prettier@9.1.0(eslint@9.20.0(jiti@1.21.7)))(eslint@9.20.0(jiti@1.21.7))(prettier@3.4.2)
      prettier:
        specifier: ^3.2.5
        version: 3.4.2
      prettier-plugin-organize-imports:
        specifier: ^3.2.4
        version: 3.2.4(prettier@3.4.2)(typescript@5.7.3)
      rimraf:
        specifier: ^5.0.5
        version: 5.0.10
      typescript:
        specifier: ^5.4.5
        version: 5.7.3
      typescript-eslint:
        specifier: ^7.7.0
        version: 7.18.0(eslint@9.20.0(jiti@1.21.7))(typescript@5.7.3)

  packages/core:
    dependencies:
      '@joyid/ckb':
        specifier: ^1.0.1
        version: 1.1.0(typescript@5.7.3)
      '@noble/ciphers':
        specifier: ^0.5.3
        version: 0.5.3
      '@noble/curves':
        specifier: ^1.4.2
        version: 1.8.1
      '@noble/hashes':
        specifier: ^1.4.0
        version: 1.7.1
      abort-controller:
        specifier: ^3.0.0
        version: 3.0.0
      bech32:
        specifier: ^2.0.0
        version: 2.0.0
      bitcoinjs-message:
        specifier: ^2.2.0
        version: 2.2.0
      bs58check:
        specifier: ^4.0.0
        version: 4.0.0(patch_hash=xkju25h33uk7ay46aspcygifve)
      buffer:
        specifier: ^6.0.3
        version: 6.0.3
      cross-fetch:
        specifier: ^4.0.0
        version: 4.1.0
      ethers:
        specifier: ^6.13.1
        version: 6.13.5
      isomorphic-ws:
        specifier: ^5.0.0
        version: 5.0.0(ws@8.18.0)
      ws:
        specifier: ^8.18.0
        version: 8.18.0
    devDependencies:
      '@eslint/js':
        specifier: ^9.1.1
        version: 9.20.0
      '@types/blake2b':
        specifier: ^2.1.3
        version: 2.1.3
      '@types/jest':
        specifier: ^29.5.12
        version: 29.5.14
      '@types/ws':
        specifier: ^8.5.12
        version: 8.5.14
      copyfiles:
        specifier: ^2.4.1
        version: 2.4.1
      eslint:
        specifier: ^9.1.0
        version: 9.20.0(jiti@1.21.7)
      eslint-config-prettier:
        specifier: ^9.1.0
        version: 9.1.0(eslint@9.20.0(jiti@1.21.7))
      eslint-plugin-prettier:
        specifier: ^5.1.3
        version: 5.2.3(@types/eslint@9.6.1)(eslint-config-prettier@9.1.0(eslint@9.20.0(jiti@1.21.7)))(eslint@9.20.0(jiti@1.21.7))(prettier@3.4.2)
      jest:
        specifier: ^29.7.0
        version: 29.7.0(@types/node@22.13.1)(ts-node@10.9.2(@types/node@22.13.1)(typescript@5.7.3))
      prettier:
        specifier: ^3.2.5
        version: 3.4.2
      prettier-plugin-organize-imports:
        specifier: ^3.2.4
        version: 3.2.4(prettier@3.4.2)(typescript@5.7.3)
      rimraf:
        specifier: ^5.0.5
        version: 5.0.10
      ts-essentials:
        specifier: ^9.4.2
        version: 9.4.2(typescript@5.7.3)
      ts-jest:
        specifier: ^29.1.4
        version: 29.2.5(@babel/core@7.26.8)(@jest/transform@29.7.0)(@jest/types@29.6.3)(babel-jest@29.7.0(@babel/core@7.26.8))(jest@29.7.0(@types/node@22.13.1)(ts-node@10.9.2(@types/node@22.13.1)(typescript@5.7.3)))(typescript@5.7.3)
      typescript:
        specifier: ^5.4.5
        version: 5.7.3
      typescript-eslint:
        specifier: ^7.7.0
        version: 7.18.0(eslint@9.20.0(jiti@1.21.7))(typescript@5.7.3)

  packages/demo:
    dependencies:
      '@lit/react':
        specifier: ^1.0.5
        version: 1.0.7(@types/react@18.3.18)
      '@uiw/react-json-view':
        specifier: 2.0.0-alpha.30
        version: 2.0.0-alpha.30(@babel/runtime@7.26.7)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      lucide-react:
        specifier: ^0.427.0
        version: 0.427.0(react@18.3.1)
      next:
        specifier: 14.2.10
        version: 14.2.10(@babel/core@7.26.8)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      react:
        specifier: ^18
        version: 18.3.1
      react-dom:
        specifier: ^18
        version: 18.3.1(react@18.3.1)
    devDependencies:
      '@ckb-ccc/connector-react':
        specifier: workspace:*
        version: link:../connector-react
      '@ckb-ccc/lumos-patches':
        specifier: workspace:*
        version: link:../lumos-patches
      '@ckb-ccc/ssri':
        specifier: workspace:*
        version: link:../ssri
      '@ckb-ccc/udt':
        specifier: workspace:*
        version: link:../udt
      '@ckb-lumos/ckb-indexer':
        specifier: ^0.24.0-next.1
        version: 0.24.0-next.2
      '@ckb-lumos/common-scripts':
        specifier: ^0.24.0-next.1
        version: 0.24.0-next.2
      '@ckb-lumos/config-manager':
        specifier: ^0.24.0-next.1
        version: 0.24.0-next.2
      '@ckb-lumos/helpers':
        specifier: ^0.24.0-next.1
        version: 0.24.0-next.2
      '@headlessui/react':
        specifier: ^1.7.19
        version: 1.7.19(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@heroicons/react':
        specifier: ^2.1.3
        version: 2.2.0(react@18.3.1)
      '@scure/bip32':
        specifier: ^1.4.0
        version: 1.6.2
      '@scure/bip39':
        specifier: ^1.3.0
        version: 1.5.4
      '@types/node':
        specifier: ^20
        version: 20.17.17
      '@types/react':
        specifier: ^18
        version: 18.3.18
      '@types/react-dom':
        specifier: ^18
        version: 18.3.5(@types/react@18.3.18)
      eslint:
        specifier: ^8
        version: 8.57.1
      eslint-config-next:
        specifier: 14.2.2
        version: 14.2.2(eslint@8.57.1)(typescript@5.7.3)
      eslint-config-prettier:
        specifier: ^10.0.1
        version: 10.0.1(eslint@8.57.1)
      eslint-plugin-prettier:
        specifier: ^5.2.3
        version: 5.2.3(@types/eslint@9.6.1)(eslint-config-prettier@10.0.1(eslint@8.57.1))(eslint@8.57.1)(prettier@3.4.2)
      postcss:
        specifier: ^8
        version: 8.5.1
      prettier:
        specifier: ^3.2.5
        version: 3.4.2
      prettier-plugin-tailwindcss:
        specifier: ^0.5.14
        version: 0.5.14(prettier-plugin-organize-imports@3.2.4(prettier@3.4.2)(typescript@5.7.3))(prettier@3.4.2)
      tailwindcss:
        specifier: ^3.4.1
        version: 3.4.17(ts-node@10.9.2(@types/node@20.17.17)(typescript@5.7.3))
      typescript:
        specifier: ^5
        version: 5.7.3

  packages/eip6963:
    dependencies:
      '@ckb-ccc/core':
        specifier: workspace:*
        version: link:../core
    devDependencies:
      '@eslint/js':
        specifier: ^9.1.1
        version: 9.20.0
      copyfiles:
        specifier: ^2.4.1
        version: 2.4.1
      eslint:
        specifier: ^9.1.0
        version: 9.20.0(jiti@1.21.7)
      eslint-config-prettier:
        specifier: ^9.1.0
        version: 9.1.0(eslint@9.20.0(jiti@1.21.7))
      eslint-plugin-prettier:
        specifier: ^5.1.3
        version: 5.2.3(@types/eslint@9.6.1)(eslint-config-prettier@9.1.0(eslint@9.20.0(jiti@1.21.7)))(eslint@9.20.0(jiti@1.21.7))(prettier@3.4.2)
      prettier:
        specifier: ^3.2.5
        version: 3.4.2
      prettier-plugin-organize-imports:
        specifier: ^3.2.4
        version: 3.2.4(prettier@3.4.2)(typescript@5.7.3)
      rimraf:
        specifier: ^5.0.5
        version: 5.0.10
      typescript:
        specifier: ^5.4.5
        version: 5.7.3
      typescript-eslint:
        specifier: ^7.7.0
        version: 7.18.0(eslint@9.20.0(jiti@1.21.7))(typescript@5.7.3)

  packages/examples:
    dependencies:
      '@ckb-ccc/ccc':
        specifier: workspace:*
        version: link:../ccc
      '@ckb-ccc/playground':
        specifier: file:./src/playground
        version: playground@file:packages/examples/src/playground
    devDependencies:
      '@eslint/js':
        specifier: ^9.1.1
        version: 9.20.0
      eslint:
        specifier: ^9.1.0
        version: 9.20.0(jiti@1.21.7)
      eslint-config-prettier:
        specifier: ^9.1.0
        version: 9.1.0(eslint@9.20.0(jiti@1.21.7))
      eslint-plugin-prettier:
        specifier: ^5.1.3
        version: 5.2.3(@types/eslint@9.6.1)(eslint-config-prettier@9.1.0(eslint@9.20.0(jiti@1.21.7)))(eslint@9.20.0(jiti@1.21.7))(prettier@3.4.2)
      prettier:
        specifier: ^3.2.5
        version: 3.4.2
      prettier-plugin-organize-imports:
        specifier: ^3.2.4
        version: 3.2.4(prettier@3.4.2)(typescript@5.7.3)
      rimraf:
        specifier: ^5.0.5
        version: 5.0.10
      typescript:
        specifier: ^5.4.5
        version: 5.7.3
      typescript-eslint:
        specifier: ^7.7.0
        version: 7.18.0(eslint@9.20.0(jiti@1.21.7))(typescript@5.7.3)

  packages/faucet:
    dependencies:
      '@ckb-ccc/core':
        specifier: workspace:*
        version: link:../core
      '@nestjs/common':
        specifier: ^10.0.0
        version: 10.4.15(class-transformer@0.5.1)(class-validator@0.14.1)(reflect-metadata@0.2.2)(rxjs@7.8.1)
      '@nestjs/config':
        specifier: ^3.2.3
        version: 3.3.0(@nestjs/common@10.4.15(class-transformer@0.5.1)(class-validator@0.14.1)(reflect-metadata@0.2.2)(rxjs@7.8.1))(rxjs@7.8.1)
      '@nestjs/core':
        specifier: ^10.0.0
        version: 10.4.15(@nestjs/common@10.4.15(class-transformer@0.5.1)(class-validator@0.14.1)(reflect-metadata@0.2.2)(rxjs@7.8.1))(@nestjs/platform-express@10.4.15)(reflect-metadata@0.2.2)(rxjs@7.8.1)
      '@nestjs/platform-express':
        specifier: ^10.0.0
        version: 10.4.15(@nestjs/common@10.4.15(class-transformer@0.5.1)(class-validator@0.14.1)(reflect-metadata@0.2.2)(rxjs@7.8.1))(@nestjs/core@10.4.15)
      '@scure/bip32':
        specifier: ^1.4.0
        version: 1.6.2
      '@scure/bip39':
        specifier: ^1.3.0
        version: 1.5.4
      class-transformer:
        specifier: ^0.5.1
        version: 0.5.1
      class-validator:
        specifier: ^0.14.1
        version: 0.14.1
      js-yaml:
        specifier: ^4.1.0
        version: 4.1.0
      reflect-metadata:
        specifier: ^0.2.0
        version: 0.2.2
      rxjs:
        specifier: ^7.8.1
        version: 7.8.1
    devDependencies:
      '@nestjs/cli':
        specifier: ^10.0.0
        version: 10.4.9
      '@nestjs/schematics':
        specifier: ^10.0.0
        version: 10.2.3(chokidar@3.6.0)(typescript@5.7.3)
      '@nestjs/testing':
        specifier: ^10.0.0
        version: 10.4.15(@nestjs/common@10.4.15(class-transformer@0.5.1)(class-validator@0.14.1)(reflect-metadata@0.2.2)(rxjs@7.8.1))(@nestjs/core@10.4.15(@nestjs/common@10.4.15(class-transformer@0.5.1)(class-validator@0.14.1)(reflect-metadata@0.2.2)(rxjs@7.8.1))(@nestjs/platform-express@10.4.15)(reflect-metadata@0.2.2)(rxjs@7.8.1))(@nestjs/platform-express@10.4.15(@nestjs/common@10.4.15(class-transformer@0.5.1)(class-validator@0.14.1)(reflect-metadata@0.2.2)(rxjs@7.8.1))(@nestjs/core@10.4.15))
      '@types/express':
        specifier: ^4.17.17
        version: 4.17.21
      '@types/jest':
        specifier: ^29.5.2
        version: 29.5.14
      '@types/js-yaml':
        specifier: ^4.0.9
        version: 4.0.9
      '@types/node':
        specifier: ^20.3.1
        version: 20.17.17
      '@types/supertest':
        specifier: ^6.0.0
        version: 6.0.2
      '@typescript-eslint/eslint-plugin':
        specifier: ^7.0.0
        version: 7.18.0(@typescript-eslint/parser@7.18.0(eslint@8.57.1)(typescript@5.7.3))(eslint@8.57.1)(typescript@5.7.3)
      '@typescript-eslint/parser':
        specifier: ^7.0.0
        version: 7.18.0(eslint@8.57.1)(typescript@5.7.3)
      eslint:
        specifier: ^8.42.0
        version: 8.57.1
      eslint-config-prettier:
        specifier: ^9.0.0
        version: 9.1.0(eslint@8.57.1)
      eslint-plugin-prettier:
        specifier: ^5.0.0
        version: 5.2.3(@types/eslint@9.6.1)(eslint-config-prettier@9.1.0(eslint@8.57.1))(eslint@8.57.1)(prettier@3.4.2)
      jest:
        specifier: ^29.5.0
        version: 29.7.0(@types/node@20.17.17)(ts-node@10.9.2(@types/node@20.17.17)(typescript@5.7.3))
      prettier:
        specifier: ^3.0.0
        version: 3.4.2
      source-map-support:
        specifier: ^0.5.21
        version: 0.5.21
      supertest:
        specifier: ^7.0.0
        version: 7.0.0
      ts-jest:
        specifier: ^29.1.0
        version: 29.2.5(@babel/core@7.26.8)(@jest/transform@29.7.0)(@jest/types@29.6.3)(babel-jest@29.7.0(@babel/core@7.26.8))(jest@29.7.0(@types/node@20.17.17)(ts-node@10.9.2(@types/node@20.17.17)(typescript@5.7.3)))(typescript@5.7.3)
      ts-loader:
        specifier: ^9.4.3
        version: 9.5.2(typescript@5.7.3)(webpack@5.97.1)
      ts-node:
        specifier: ^10.9.1
        version: 10.9.2(@types/node@20.17.17)(typescript@5.7.3)
      tsconfig-paths:
        specifier: ^4.2.0
        version: 4.2.0
      typescript:
        specifier: ^5.1.3
        version: 5.7.3

  packages/joy-id:
    dependencies:
      '@ckb-ccc/core':
        specifier: workspace:*
        version: link:../core
      '@joyid/ckb':
        specifier: ^1.0.1
        version: 1.1.0(typescript@5.7.3)
      '@joyid/common':
        specifier: ^0.2.0
        version: 0.2.0(typescript@5.7.3)
    devDependencies:
      '@eslint/js':
        specifier: ^9.1.1
        version: 9.20.0
      copyfiles:
        specifier: ^2.4.1
        version: 2.4.1
      eslint:
        specifier: ^9.1.0
        version: 9.20.0(jiti@1.21.7)
      eslint-config-prettier:
        specifier: ^9.1.0
        version: 9.1.0(eslint@9.20.0(jiti@1.21.7))
      eslint-plugin-prettier:
        specifier: ^5.1.3
        version: 5.2.3(@types/eslint@9.6.1)(eslint-config-prettier@9.1.0(eslint@9.20.0(jiti@1.21.7)))(eslint@9.20.0(jiti@1.21.7))(prettier@3.4.2)
      prettier:
        specifier: ^3.2.5
        version: 3.4.2
      prettier-plugin-organize-imports:
        specifier: ^3.2.4
        version: 3.2.4(prettier@3.4.2)(typescript@5.7.3)
      rimraf:
        specifier: ^5.0.5
        version: 5.0.10
      typescript:
        specifier: ^5.4.5
        version: 5.7.3
      typescript-eslint:
        specifier: ^7.7.0
        version: 7.18.0(eslint@9.20.0(jiti@1.21.7))(typescript@5.7.3)

  packages/lumos-patches:
    dependencies:
      '@ckb-ccc/core':
        specifier: workspace:*
        version: link:../core
      '@ckb-lumos/base':
        specifier: ^0.24.0-next.1
        version: 0.24.0-next.2
      '@ckb-lumos/codec':
        specifier: ^0.24.0-next.1
        version: 0.24.0-next.2
      '@ckb-lumos/common-scripts':
        specifier: ^0.24.0-next.1
        version: 0.24.0-next.2
      '@ckb-lumos/config-manager':
        specifier: ^0.24.0-next.1
        version: 0.24.0-next.2
      '@ckb-lumos/helpers':
        specifier: ^0.24.0-next.1
        version: 0.24.0-next.2
      '@joyid/ckb':
        specifier: ^1.0.1
        version: 1.1.0(typescript@5.7.3)
    devDependencies:
      '@eslint/js':
        specifier: ^9.1.1
        version: 9.20.0
      copyfiles:
        specifier: ^2.4.1
        version: 2.4.1
      eslint:
        specifier: ^9.1.0
        version: 9.20.0(jiti@1.21.7)
      eslint-config-prettier:
        specifier: ^9.1.0
        version: 9.1.0(eslint@9.20.0(jiti@1.21.7))
      eslint-plugin-prettier:
        specifier: ^5.1.3
        version: 5.2.3(@types/eslint@9.6.1)(eslint-config-prettier@9.1.0(eslint@9.20.0(jiti@1.21.7)))(eslint@9.20.0(jiti@1.21.7))(prettier@3.4.2)
      prettier:
        specifier: ^3.2.5
        version: 3.4.2
      prettier-plugin-organize-imports:
        specifier: ^3.2.4
        version: 3.2.4(prettier@3.4.2)(typescript@5.7.3)
      rimraf:
        specifier: ^5.0.5
        version: 5.0.10
      typescript:
        specifier: ^5.4.5
        version: 5.7.3
      typescript-eslint:
        specifier: ^7.7.0
        version: 7.18.0(eslint@9.20.0(jiti@1.21.7))(typescript@5.7.3)

  packages/nip07:
    dependencies:
      '@ckb-ccc/core':
        specifier: workspace:*
        version: link:../core
    devDependencies:
      '@eslint/js':
        specifier: ^9.1.1
        version: 9.20.0
      copyfiles:
        specifier: ^2.4.1
        version: 2.4.1
      eslint:
        specifier: ^9.1.0
        version: 9.20.0(jiti@1.21.7)
      eslint-config-prettier:
        specifier: ^9.1.0
        version: 9.1.0(eslint@9.20.0(jiti@1.21.7))
      eslint-plugin-prettier:
        specifier: ^5.1.3
        version: 5.2.3(@types/eslint@9.6.1)(eslint-config-prettier@9.1.0(eslint@9.20.0(jiti@1.21.7)))(eslint@9.20.0(jiti@1.21.7))(prettier@3.4.2)
      prettier:
        specifier: ^3.2.5
        version: 3.4.2
      prettier-plugin-organize-imports:
        specifier: ^3.2.4
        version: 3.2.4(prettier@3.4.2)(typescript@5.7.3)
      rimraf:
        specifier: ^5.0.5
        version: 5.0.10
      typescript:
        specifier: ^5.4.5
        version: 5.7.3
      typescript-eslint:
        specifier: ^7.7.0
        version: 7.18.0(eslint@9.20.0(jiti@1.21.7))(typescript@5.7.3)

  packages/okx:
    dependencies:
      '@ckb-ccc/core':
        specifier: workspace:*
        version: link:../core
      '@ckb-ccc/nip07':
        specifier: workspace:*
        version: link:../nip07
      '@ckb-ccc/uni-sat':
        specifier: workspace:*
        version: link:../uni-sat
    devDependencies:
      '@eslint/js':
        specifier: ^9.1.1
        version: 9.20.0
      copyfiles:
        specifier: ^2.4.1
        version: 2.4.1
      eslint:
        specifier: ^9.1.0
        version: 9.20.0(jiti@1.21.7)
      eslint-config-prettier:
        specifier: ^9.1.0
        version: 9.1.0(eslint@9.20.0(jiti@1.21.7))
      eslint-plugin-prettier:
        specifier: ^5.1.3
        version: 5.2.3(@types/eslint@9.6.1)(eslint-config-prettier@9.1.0(eslint@9.20.0(jiti@1.21.7)))(eslint@9.20.0(jiti@1.21.7))(prettier@3.4.2)
      prettier:
        specifier: ^3.2.5
        version: 3.4.2
      prettier-plugin-organize-imports:
        specifier: ^3.2.4
        version: 3.2.4(prettier@3.4.2)(typescript@5.7.3)
      rimraf:
        specifier: ^5.0.5
        version: 5.0.10
      typescript:
        specifier: ^5.4.5
        version: 5.7.3
      typescript-eslint:
        specifier: ^7.7.0
        version: 7.18.0(eslint@9.20.0(jiti@1.21.7))(typescript@5.7.3)

  packages/playground:
    dependencies:
      '@ckb-ccc/ccc':
        specifier: workspace:*
        version: link:../ccc
      '@ckb-ccc/connector-react':
        specifier: workspace:*
        version: link:../connector-react
      '@monaco-editor/react':
        specifier: ^4.6.0
        version: 4.6.0(monaco-editor@0.51.0)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      axios:
        specifier: ^1.7.7
        version: 1.7.9
      bech32:
        specifier: ^2.0.0
        version: 2.0.0
      html2canvas:
        specifier: ^1.4.1
        version: 1.4.1
      isomorphic-ws:
        specifier: ^5.0.0
        version: 5.0.0(ws@8.18.0)
      lucide-react:
        specifier: ^0.438.0
        version: 0.438.0(react@18.3.1)
      monaco-editor:
        specifier: ^0.51.0
        version: 0.51.0
      next:
        specifier: 14.2.8
        version: 14.2.8(@babel/core@7.26.8)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      react:
        specifier: ^18
        version: 18.3.1
      react-dom:
        specifier: ^18
        version: 18.3.1(react@18.3.1)
      typescript:
        specifier: ^5
        version: 5.7.3
    devDependencies:
      '@types/node':
        specifier: ^20
        version: 20.17.17
      '@types/react':
        specifier: ^18
        version: 18.3.18
      '@types/react-dom':
        specifier: ^18
        version: 18.3.5(@types/react@18.3.18)
      '@types/webpack-env':
        specifier: ^1.18.5
        version: 1.18.8
      eslint:
        specifier: ^8
        version: 8.57.1
      eslint-config-next:
        specifier: 14.2.8
        version: 14.2.8(eslint@8.57.1)(typescript@5.7.3)
      eslint-config-prettier:
        specifier: ^10.0.1
        version: 10.0.1(eslint@8.57.1)
      eslint-plugin-prettier:
        specifier: ^5.2.3
        version: 5.2.3(@types/eslint@9.6.1)(eslint-config-prettier@10.0.1(eslint@8.57.1))(eslint@8.57.1)(prettier@3.5.1)
      postcss:
        specifier: ^8
        version: 8.5.1
      prettier:
        specifier: ^3.5.1
        version: 3.5.1
      prettier-plugin-tailwindcss:
        specifier: ^0.5.14
        version: 0.5.14(prettier-plugin-organize-imports@3.2.4(prettier@3.5.1)(typescript@5.7.3))(prettier@3.5.1)
      raw-loader:
        specifier: ^4.0.2
        version: 4.0.2(webpack@5.97.1)
      tailwindcss:
        specifier: ^3.4.1
        version: 3.4.17(ts-node@10.9.2(@types/node@20.17.17)(typescript@5.7.3))

  packages/rei:
    dependencies:
      '@ckb-ccc/core':
        specifier: workspace:*
        version: link:../core
    devDependencies:
      '@eslint/js':
        specifier: ^9.1.1
        version: 9.20.0
      copyfiles:
        specifier: ^2.4.1
        version: 2.4.1
      eslint:
        specifier: ^9.1.0
        version: 9.20.0(jiti@1.21.7)
      eslint-config-prettier:
        specifier: ^9.1.0
        version: 9.1.0(eslint@9.20.0(jiti@1.21.7))
      eslint-plugin-prettier:
        specifier: ^5.1.3
        version: 5.2.3(@types/eslint@9.6.1)(eslint-config-prettier@9.1.0(eslint@9.20.0(jiti@1.21.7)))(eslint@9.20.0(jiti@1.21.7))(prettier@3.4.2)
      prettier:
        specifier: ^3.2.5
        version: 3.4.2
      prettier-plugin-organize-imports:
        specifier: ^3.2.4
        version: 3.2.4(prettier@3.4.2)(typescript@5.7.3)
      rimraf:
        specifier: ^5.0.5
        version: 5.0.10
      typescript:
        specifier: ^5.4.5
        version: 5.7.3
      typescript-eslint:
        specifier: ^7.7.0
        version: 7.18.0(eslint@9.20.0(jiti@1.21.7))(typescript@5.7.3)

  packages/shell:
    dependencies:
      '@ckb-ccc/core':
        specifier: workspace:*
        version: link:../core
      '@ckb-ccc/spore':
        specifier: workspace:*
        version: link:../spore
      '@ckb-ccc/ssri':
        specifier: workspace:*
        version: link:../ssri
      '@ckb-ccc/udt':
        specifier: workspace:*
        version: link:../udt
    devDependencies:
      '@eslint/js':
        specifier: ^9.1.1
        version: 9.20.0
      copyfiles:
        specifier: ^2.4.1
        version: 2.4.1
      eslint:
        specifier: ^9.1.0
        version: 9.20.0(jiti@1.21.7)
      eslint-config-prettier:
        specifier: ^9.1.0
        version: 9.1.0(eslint@9.20.0(jiti@1.21.7))
      eslint-plugin-prettier:
        specifier: ^5.1.3
        version: 5.2.3(@types/eslint@9.6.1)(eslint-config-prettier@9.1.0(eslint@9.20.0(jiti@1.21.7)))(eslint@9.20.0(jiti@1.21.7))(prettier@3.4.2)
      prettier:
        specifier: ^3.2.5
        version: 3.4.2
      prettier-plugin-organize-imports:
        specifier: ^3.2.4
        version: 3.2.4(prettier@3.4.2)(typescript@5.7.3)
      rimraf:
        specifier: ^5.0.5
        version: 5.0.10
      typescript:
        specifier: ^5.4.5
        version: 5.7.3
      typescript-eslint:
        specifier: ^7.7.0
        version: 7.18.0(eslint@9.20.0(jiti@1.21.7))(typescript@5.7.3)

  packages/spore:
    dependencies:
      '@ckb-ccc/core':
        specifier: workspace:*
        version: link:../core
      axios:
        specifier: ^1.7.7
        version: 1.7.9
    devDependencies:
      '@eslint/js':
        specifier: ^9.1.1
        version: 9.20.0
      '@types/node':
        specifier: ^22.10.0
        version: 22.13.1
      copyfiles:
        specifier: ^2.4.1
        version: 2.4.1
      dotenv:
        specifier: ^16.4.5
        version: 16.4.7
      eslint:
        specifier: ^9.1.0
        version: 9.20.0(jiti@1.21.7)
      eslint-config-prettier:
        specifier: ^9.1.0
        version: 9.1.0(eslint@9.20.0(jiti@1.21.7))
      eslint-plugin-prettier:
        specifier: ^5.1.3
        version: 5.2.3(@types/eslint@9.6.1)(eslint-config-prettier@9.1.0(eslint@9.20.0(jiti@1.21.7)))(eslint@9.20.0(jiti@1.21.7))(prettier@3.4.2)
      prettier:
        specifier: ^3.2.5
        version: 3.4.2
      prettier-plugin-organize-imports:
        specifier: ^3.2.4
        version: 3.2.4(prettier@3.4.2)(typescript@5.7.3)
      rimraf:
        specifier: ^5.0.5
        version: 5.0.10
      typescript:
        specifier: ^5.4.5
        version: 5.7.3
      typescript-eslint:
        specifier: ^7.7.0
        version: 7.18.0(eslint@9.20.0(jiti@1.21.7))(typescript@5.7.3)

  packages/ssri:
    dependencies:
      '@ckb-ccc/core':
        specifier: workspace:*
        version: link:../core
    devDependencies:
      '@eslint/js':
        specifier: ^9.1.1
        version: 9.20.0
      '@types/jest':
        specifier: ^29.5.12
        version: 29.5.14
      '@types/node':
        specifier: ^22.10.2
        version: 22.13.1
      copyfiles:
        specifier: ^2.4.1
        version: 2.4.1
      eslint:
        specifier: ^9.1.0
        version: 9.20.0(jiti@1.21.7)
      eslint-config-prettier:
        specifier: ^9.1.0
        version: 9.1.0(eslint@9.20.0(jiti@1.21.7))
      eslint-plugin-prettier:
        specifier: ^5.1.3
        version: 5.2.3(@types/eslint@9.6.1)(eslint-config-prettier@9.1.0(eslint@9.20.0(jiti@1.21.7)))(eslint@9.20.0(jiti@1.21.7))(prettier@3.4.2)
      jest:
        specifier: ^29.7.0
        version: 29.7.0(@types/node@22.13.1)(ts-node@10.9.2(@types/node@22.13.1)(typescript@5.7.3))
      prettier:
        specifier: ^3.2.5
        version: 3.4.2
      prettier-plugin-organize-imports:
        specifier: ^3.2.4
        version: 3.2.4(prettier@3.4.2)(typescript@5.7.3)
      rimraf:
        specifier: ^5.0.5
        version: 5.0.10
      ts-jest:
        specifier: ^29.1.4
        version: 29.2.5(@babel/core@7.26.8)(@jest/transform@29.7.0)(@jest/types@29.6.3)(babel-jest@29.7.0(@babel/core@7.26.8))(jest@29.7.0(@types/node@22.13.1)(ts-node@10.9.2(@types/node@22.13.1)(typescript@5.7.3)))(typescript@5.7.3)
      typescript:
        specifier: ^5.4.5
        version: 5.7.3
      typescript-eslint:
        specifier: ^7.7.0
        version: 7.18.0(eslint@9.20.0(jiti@1.21.7))(typescript@5.7.3)

  packages/udt:
    dependencies:
      '@ckb-ccc/core':
        specifier: workspace:*
        version: link:../core
      '@ckb-ccc/ssri':
        specifier: workspace:*
        version: link:../ssri
    devDependencies:
      '@eslint/js':
        specifier: ^9.1.1
        version: 9.20.0
      '@types/jest':
        specifier: ^29.5.12
        version: 29.5.14
      '@types/node':
        specifier: ^22.10.2
        version: 22.13.1
      copyfiles:
        specifier: ^2.4.1
        version: 2.4.1
      eslint:
        specifier: ^9.1.0
        version: 9.20.0(jiti@1.21.7)
      eslint-config-prettier:
        specifier: ^9.1.0
        version: 9.1.0(eslint@9.20.0(jiti@1.21.7))
      eslint-plugin-prettier:
        specifier: ^5.1.3
        version: 5.2.3(@types/eslint@9.6.1)(eslint-config-prettier@9.1.0(eslint@9.20.0(jiti@1.21.7)))(eslint@9.20.0(jiti@1.21.7))(prettier@3.4.2)
      jest:
        specifier: ^29.7.0
        version: 29.7.0(@types/node@22.13.1)(ts-node@10.9.2(@types/node@22.13.1)(typescript@5.7.3))
      prettier:
        specifier: ^3.2.5
        version: 3.4.2
      prettier-plugin-organize-imports:
        specifier: ^3.2.4
        version: 3.2.4(prettier@3.4.2)(typescript@5.7.3)
      rimraf:
        specifier: ^5.0.5
        version: 5.0.10
      ts-jest:
        specifier: ^29.1.4
        version: 29.2.5(@babel/core@7.26.8)(@jest/transform@29.7.0)(@jest/types@29.6.3)(babel-jest@29.7.0(@babel/core@7.26.8))(jest@29.7.0(@types/node@22.13.1)(ts-node@10.9.2(@types/node@22.13.1)(typescript@5.7.3)))(typescript@5.7.3)
      typescript:
        specifier: ^5.4.5
        version: 5.7.3
      typescript-eslint:
        specifier: ^7.7.0
        version: 7.18.0(eslint@9.20.0(jiti@1.21.7))(typescript@5.7.3)

  packages/uni-sat:
    dependencies:
      '@ckb-ccc/core':
        specifier: workspace:*
        version: link:../core
    devDependencies:
      '@eslint/js':
        specifier: ^9.1.1
        version: 9.20.0
      copyfiles:
        specifier: ^2.4.1
        version: 2.4.1
      eslint:
        specifier: ^9.1.0
        version: 9.20.0(jiti@1.21.7)
      eslint-config-prettier:
        specifier: ^9.1.0
        version: 9.1.0(eslint@9.20.0(jiti@1.21.7))
      eslint-plugin-prettier:
        specifier: ^5.1.3
        version: 5.2.3(@types/eslint@9.6.1)(eslint-config-prettier@9.1.0(eslint@9.20.0(jiti@1.21.7)))(eslint@9.20.0(jiti@1.21.7))(prettier@3.4.2)
      prettier:
        specifier: ^3.2.5
        version: 3.4.2
      prettier-plugin-organize-imports:
        specifier: ^3.2.4
        version: 3.2.4(prettier@3.4.2)(typescript@5.7.3)
      rimraf:
        specifier: ^5.0.5
        version: 5.0.10
      typescript:
        specifier: ^5.4.5
        version: 5.7.3
      typescript-eslint:
        specifier: ^7.7.0
        version: 7.18.0(eslint@9.20.0(jiti@1.21.7))(typescript@5.7.3)

  packages/utxo-global:
    dependencies:
      '@ckb-ccc/core':
        specifier: workspace:*
        version: link:../core
    devDependencies:
      '@eslint/js':
        specifier: ^9.1.1
        version: 9.20.0
      copyfiles:
        specifier: ^2.4.1
        version: 2.4.1
      eslint:
        specifier: ^9.1.0
        version: 9.20.0(jiti@1.21.7)
      eslint-config-prettier:
        specifier: ^9.1.0
        version: 9.1.0(eslint@9.20.0(jiti@1.21.7))
      eslint-plugin-prettier:
        specifier: ^5.1.3
        version: 5.2.3(@types/eslint@9.6.1)(eslint-config-prettier@9.1.0(eslint@9.20.0(jiti@1.21.7)))(eslint@9.20.0(jiti@1.21.7))(prettier@3.4.2)
      prettier:
        specifier: ^3.2.5
        version: 3.4.2
      prettier-plugin-organize-imports:
        specifier: ^3.2.4
        version: 3.2.4(prettier@3.4.2)(typescript@5.7.3)
      rimraf:
        specifier: ^5.0.5
        version: 5.0.10
      typescript:
        specifier: ^5.4.5
        version: 5.7.3
      typescript-eslint:
        specifier: ^7.7.0
        version: 7.18.0(eslint@9.20.0(jiti@1.21.7))(typescript@5.7.3)

  packages/xverse:
    dependencies:
      '@ckb-ccc/core':
        specifier: workspace:*
        version: link:../core
      valibot:
        specifier: ^0.42.1
        version: 0.42.1(typescript@5.7.3)
    devDependencies:
      '@eslint/js':
        specifier: ^9.1.1
        version: 9.20.0
      copyfiles:
        specifier: ^2.4.1
        version: 2.4.1
      eslint:
        specifier: ^9.1.0
        version: 9.20.0(jiti@1.21.7)
      eslint-config-prettier:
        specifier: ^9.1.0
        version: 9.1.0(eslint@9.20.0(jiti@1.21.7))
      eslint-plugin-prettier:
        specifier: ^5.1.3
        version: 5.2.3(@types/eslint@9.6.1)(eslint-config-prettier@9.1.0(eslint@9.20.0(jiti@1.21.7)))(eslint@9.20.0(jiti@1.21.7))(prettier@3.4.2)
      prettier:
        specifier: ^3.2.5
        version: 3.4.2
      prettier-plugin-organize-imports:
        specifier: ^3.2.4
        version: 3.2.4(prettier@3.4.2)(typescript@5.7.3)
      rimraf:
        specifier: ^5.0.5
        version: 5.0.10
      typescript:
        specifier: ^5.4.5
        version: 5.7.3
      typescript-eslint:
        specifier: ^7.7.0
        version: 7.18.0(eslint@9.20.0(jiti@1.21.7))(typescript@5.7.3)

packages:

  '@adraffy/ens-normalize@1.10.1':
    resolution: {integrity: sha512-96Z2IP3mYmF1Xg2cDm8f1gWGf/HUVedQ3FMifV4kG/PQ4yEP51xDtRAEfhVNt5f/uzpNkZHwWQuUcu6D6K+Ekw==}

  '@alloc/quick-lru@5.2.0':
    resolution: {integrity: sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==}
    engines: {node: '>=10'}

  '@ampproject/remapping@2.3.0':
    resolution: {integrity: sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==}
    engines: {node: '>=6.0.0'}

  '@angular-devkit/core@17.3.11':
    resolution: {integrity: sha512-vTNDYNsLIWpYk2I969LMQFH29GTsLzxNk/0cLw5q56ARF0v5sIWfHYwGTS88jdDqIpuuettcSczbxeA7EuAmqQ==}
    engines: {node: ^18.13.0 || >=20.9.0, npm: ^6.11.0 || ^7.5.6 || >=8.0.0, yarn: '>= 1.13.0'}
    peerDependencies:
      chokidar: ^3.5.2
    peerDependenciesMeta:
      chokidar:
        optional: true

  '@angular-devkit/schematics-cli@17.3.11':
    resolution: {integrity: sha512-kcOMqp+PHAKkqRad7Zd7PbpqJ0LqLaNZdY1+k66lLWmkEBozgq8v4ASn/puPWf9Bo0HpCiK+EzLf0VHE8Z/y6Q==}
    engines: {node: ^18.13.0 || >=20.9.0, npm: ^6.11.0 || ^7.5.6 || >=8.0.0, yarn: '>= 1.13.0'}
    hasBin: true

  '@angular-devkit/schematics@17.3.11':
    resolution: {integrity: sha512-I5wviiIqiFwar9Pdk30Lujk8FczEEc18i22A5c6Z9lbmhPQdTroDnEQdsfXjy404wPe8H62s0I15o4pmMGfTYQ==}
    engines: {node: ^18.13.0 || >=20.9.0, npm: ^6.11.0 || ^7.5.6 || >=8.0.0, yarn: '>= 1.13.0'}

  '@babel/code-frame@7.26.2':
    resolution: {integrity: sha512-RJlIHRueQgwWitWgF8OdFYGZX328Ax5BCemNGlqHfplnRT9ESi8JkFlvaVYbS+UubVY6dpv87Fs2u5M29iNFVQ==}
    engines: {node: '>=6.9.0'}

  '@babel/compat-data@7.26.8':
    resolution: {integrity: sha512-oH5UPLMWR3L2wEFLnFJ1TZXqHufiTKAiLfqw5zkhS4dKXLJ10yVztfil/twG8EDTA4F/tvVNw9nOl4ZMslB8rQ==}
    engines: {node: '>=6.9.0'}

  '@babel/core@7.26.8':
    resolution: {integrity: sha512-l+lkXCHS6tQEc5oUpK28xBOZ6+HwaH7YwoYQbLFiYb4nS2/l1tKnZEtEWkD0GuiYdvArf9qBS0XlQGXzPMsNqQ==}
    engines: {node: '>=6.9.0'}

  '@babel/generator@7.26.8':
    resolution: {integrity: sha512-ef383X5++iZHWAXX0SXQR6ZyQhw/0KtTkrTz61WXRhFM6dhpHulO/RJz79L8S6ugZHJkOOkUrUdxgdF2YiPFnA==}
    engines: {node: '>=6.9.0'}

  '@babel/helper-compilation-targets@7.26.5':
    resolution: {integrity: sha512-IXuyn5EkouFJscIDuFF5EsiSolseme1s0CZB+QxVugqJLYmKdxI1VfIBOst0SUu4rnk2Z7kqTwmoO1lp3HIfnA==}
    engines: {node: '>=6.9.0'}

  '@babel/helper-module-imports@7.25.9':
    resolution: {integrity: sha512-tnUA4RsrmflIM6W6RFTLFSXITtl0wKjgpnLgXyowocVPrbYrLUXSBXDgTs8BlbmIzIdlBySRQjINYs2BAkiLtw==}
    engines: {node: '>=6.9.0'}

  '@babel/helper-module-transforms@7.26.0':
    resolution: {integrity: sha512-xO+xu6B5K2czEnQye6BHA7DolFFmS3LB7stHZFaOLb1pAwO1HWLS8fXA+eh0A2yIvltPVmx3eNNDBJA2SLHXFw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0

  '@babel/helper-plugin-utils@7.26.5':
    resolution: {integrity: sha512-RS+jZcRdZdRFzMyr+wcsaqOmld1/EqTghfaBGQQd/WnRdzdlvSZ//kF7U8VQTxf1ynZ4cjUcYgjVGx13ewNPMg==}
    engines: {node: '>=6.9.0'}

  '@babel/helper-string-parser@7.25.9':
    resolution: {integrity: sha512-4A/SCr/2KLd5jrtOMFzaKjVtAei3+2r/NChoBNoZ3EyP/+GlhoaEGoWOZUmFmoITP7zOJyHIMm+DYRd8o3PvHA==}
    engines: {node: '>=6.9.0'}

  '@babel/helper-validator-identifier@7.25.9':
    resolution: {integrity: sha512-Ed61U6XJc3CVRfkERJWDz4dJwKe7iLmmJsbOGu9wSloNSFttHV0I8g6UAgb7qnK5ly5bGLPd4oXZlxCdANBOWQ==}
    engines: {node: '>=6.9.0'}

  '@babel/helper-validator-option@7.25.9':
    resolution: {integrity: sha512-e/zv1co8pp55dNdEcCynfj9X7nyUKUXoUEwfXqaZt0omVOmDe9oOTdKStH4GmAw6zxMFs50ZayuMfHDKlO7Tfw==}
    engines: {node: '>=6.9.0'}

  '@babel/helpers@7.26.7':
    resolution: {integrity: sha512-8NHiL98vsi0mbPQmYAGWwfcFaOy4j2HY49fXJCfuDcdE7fMIsH9a7GdaeXpIBsbT7307WU8KCMp5pUVDNL4f9A==}
    engines: {node: '>=6.9.0'}

  '@babel/parser@7.26.8':
    resolution: {integrity: sha512-TZIQ25pkSoaKEYYaHbbxkfL36GNsQ6iFiBbeuzAkLnXayKR1yP1zFe+NxuZWWsUyvt8icPU9CCq0sgWGXR1GEw==}
    engines: {node: '>=6.0.0'}
    hasBin: true

  '@babel/plugin-syntax-async-generators@7.8.4':
    resolution: {integrity: sha512-tycmZxkGfZaxhMRbXlPXuVFpdWlXpir2W4AMhSJgRKzk/eDlIXOhb2LHWoLpDF7TEHylV5zNhykX6KAgHJmTNw==}
    peerDependencies:
      '@babel/core': ^7.0.0-0

  '@babel/plugin-syntax-bigint@7.8.3':
    resolution: {integrity: sha512-wnTnFlG+YxQm3vDxpGE57Pj0srRU4sHE/mDkt1qv2YJJSeUAec2ma4WLUnUPeKjyrfntVwe/N6dCXpU+zL3Npg==}
    peerDependencies:
      '@babel/core': ^7.0.0-0

  '@babel/plugin-syntax-class-properties@7.12.13':
    resolution: {integrity: sha512-fm4idjKla0YahUNgFNLCB0qySdsoPiZP3iQE3rky0mBUtMZ23yDJ9SJdg6dXTSDnulOVqiF3Hgr9nbXvXTQZYA==}
    peerDependencies:
      '@babel/core': ^7.0.0-0

  '@babel/plugin-syntax-class-static-block@7.14.5':
    resolution: {integrity: sha512-b+YyPmr6ldyNnM6sqYeMWE+bgJcJpO6yS4QD7ymxgH34GBPNDM/THBh8iunyvKIZztiwLH4CJZ0RxTk9emgpjw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0

  '@babel/plugin-syntax-import-attributes@7.26.0':
    resolution: {integrity: sha512-e2dttdsJ1ZTpi3B9UYGLw41hifAubg19AtCu/2I/F1QNVclOBr1dYpTdmdyZ84Xiz43BS/tCUkMAZNLv12Pi+A==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0

  '@babel/plugin-syntax-import-meta@7.10.4':
    resolution: {integrity: sha512-Yqfm+XDx0+Prh3VSeEQCPU81yC+JWZ2pDPFSS4ZdpfZhp4MkFMaDC1UqseovEKwSUpnIL7+vK+Clp7bfh0iD7g==}
    peerDependencies:
      '@babel/core': ^7.0.0-0

  '@babel/plugin-syntax-json-strings@7.8.3':
    resolution: {integrity: sha512-lY6kdGpWHvjoe2vk4WrAapEuBR69EMxZl+RoGRhrFGNYVK8mOPAW8VfbT/ZgrFbXlDNiiaxQnAtgVCZ6jv30EA==}
    peerDependencies:
      '@babel/core': ^7.0.0-0

  '@babel/plugin-syntax-jsx@7.25.9':
    resolution: {integrity: sha512-ld6oezHQMZsZfp6pWtbjaNDF2tiiCYYDqQszHt5VV437lewP9aSi2Of99CK0D0XB21k7FLgnLcmQKyKzynfeAA==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0

  '@babel/plugin-syntax-logical-assignment-operators@7.10.4':
    resolution: {integrity: sha512-d8waShlpFDinQ5MtvGU9xDAOzKH47+FFoney2baFIoMr952hKOLp1HR7VszoZvOsV/4+RRszNY7D17ba0te0ig==}
    peerDependencies:
      '@babel/core': ^7.0.0-0

  '@babel/plugin-syntax-nullish-coalescing-operator@7.8.3':
    resolution: {integrity: sha512-aSff4zPII1u2QD7y+F8oDsz19ew4IGEJg9SVW+bqwpwtfFleiQDMdzA/R+UlWDzfnHFCxxleFT0PMIrR36XLNQ==}
    peerDependencies:
      '@babel/core': ^7.0.0-0

  '@babel/plugin-syntax-numeric-separator@7.10.4':
    resolution: {integrity: sha512-9H6YdfkcK/uOnY/K7/aA2xpzaAgkQn37yzWUMRK7OaPOqOpGS1+n0H5hxT9AUw9EsSjPW8SVyMJwYRtWs3X3ug==}
    peerDependencies:
      '@babel/core': ^7.0.0-0

  '@babel/plugin-syntax-object-rest-spread@7.8.3':
    resolution: {integrity: sha512-XoqMijGZb9y3y2XskN+P1wUGiVwWZ5JmoDRwx5+3GmEplNyVM2s2Dg8ILFQm8rWM48orGy5YpI5Bl8U1y7ydlA==}
    peerDependencies:
      '@babel/core': ^7.0.0-0

  '@babel/plugin-syntax-optional-catch-binding@7.8.3':
    resolution: {integrity: sha512-6VPD0Pc1lpTqw0aKoeRTMiB+kWhAoT24PA+ksWSBrFtl5SIRVpZlwN3NNPQjehA2E/91FV3RjLWoVTglWcSV3Q==}
    peerDependencies:
      '@babel/core': ^7.0.0-0

  '@babel/plugin-syntax-optional-chaining@7.8.3':
    resolution: {integrity: sha512-KoK9ErH1MBlCPxV0VANkXW2/dw4vlbGDrFgz8bmUsBGYkFRcbRwMh6cIJubdPrkxRwuGdtCk0v/wPTKbQgBjkg==}
    peerDependencies:
      '@babel/core': ^7.0.0-0

  '@babel/plugin-syntax-private-property-in-object@7.14.5':
    resolution: {integrity: sha512-0wVnp9dxJ72ZUJDV27ZfbSj6iHLoytYZmh3rFcxNnvsJF3ktkzLDZPy/mA17HGsaQT3/DQsWYX1f1QGWkCoVUg==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0

  '@babel/plugin-syntax-top-level-await@7.14.5':
    resolution: {integrity: sha512-hx++upLv5U1rgYfwe1xBQUhRmU41NEvpUvrp8jkrSCdvGSnM5/qdRMtylJ6PG5OFkBaHkbTAKTnd3/YyESRHFw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0

  '@babel/plugin-syntax-typescript@7.25.9':
    resolution: {integrity: sha512-hjMgRy5hb8uJJjUcdWunWVcoi9bGpJp8p5Ol1229PoN6aytsLwNMgmdftO23wnCLMfVmTwZDWMPNq/D1SY60JQ==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0

  '@babel/runtime@7.26.7':
    resolution: {integrity: sha512-AOPI3D+a8dXnja+iwsUqGRjr1BbZIe771sXdapOtYI531gSqpi92vXivKcq2asu/DFpdl1ceFAKZyRzK2PCVcQ==}
    engines: {node: '>=6.9.0'}

  '@babel/template@7.26.8':
    resolution: {integrity: sha512-iNKaX3ZebKIsCvJ+0jd6embf+Aulaa3vNBqZ41kM7iTWjx5qzWKXGHiJUW3+nTpQ18SG11hdF8OAzKrpXkb96Q==}
    engines: {node: '>=6.9.0'}

  '@babel/traverse@7.26.8':
    resolution: {integrity: sha512-nic9tRkjYH0oB2dzr/JoGIm+4Q6SuYeLEiIiZDwBscRMYFJ+tMAz98fuel9ZnbXViA2I0HVSSRRK8DW5fjXStA==}
    engines: {node: '>=6.9.0'}

  '@babel/types@7.26.8':
    resolution: {integrity: sha512-eUuWapzEGWFEpHFxgEaBG8e3n6S8L3MSu0oda755rOfabWPnh0Our1AozNFVUxGFIhbKgd1ksprsoDGMinTOTA==}
    engines: {node: '>=6.9.0'}

  '@bcoe/v8-coverage@0.2.3':
    resolution: {integrity: sha512-0hYQ8SB4Db5zvZB4axdMHGwEaQjkZzFjQiN9LVYvIFB2nSUHW9tYpxWriPrWDASIxiaXax83REcLxuSdnGPZtw==}

  '@changesets/apply-release-plan@7.0.8':
    resolution: {integrity: sha512-qjMUj4DYQ1Z6qHawsn7S71SujrExJ+nceyKKyI9iB+M5p9lCL55afuEd6uLBPRpLGWQwkwvWegDHtwHJb1UjpA==}

  '@changesets/assemble-release-plan@6.0.5':
    resolution: {integrity: sha512-IgvBWLNKZd6k4t72MBTBK3nkygi0j3t3zdC1zrfusYo0KpdsvnDjrMM9vPnTCLCMlfNs55jRL4gIMybxa64FCQ==}

  '@changesets/changelog-git@0.2.0':
    resolution: {integrity: sha512-bHOx97iFI4OClIT35Lok3sJAwM31VbUM++gnMBV16fdbtBhgYu4dxsphBF/0AZZsyAHMrnM0yFcj5gZM1py6uQ==}

  '@changesets/changelog-github@0.5.0':
    resolution: {integrity: sha512-zoeq2LJJVcPJcIotHRJEEA2qCqX0AQIeFE+L21L8sRLPVqDhSXY8ZWAt2sohtBpFZkBwu+LUwMSKRr2lMy3LJA==}

  '@changesets/cli@2.27.12':
    resolution: {integrity: sha512-9o3fOfHYOvBnyEn0mcahB7wzaA3P4bGJf8PNqGit5PKaMEFdsRixik+txkrJWd2VX+O6wRFXpxQL8j/1ANKE9g==}
    hasBin: true

  '@changesets/config@3.0.5':
    resolution: {integrity: sha512-QyXLSSd10GquX7hY0Mt4yQFMEeqnO5z/XLpbIr4PAkNNoQNKwDyiSrx4yd749WddusH1v3OSiA0NRAYmH/APpQ==}

  '@changesets/errors@0.2.0':
    resolution: {integrity: sha512-6BLOQUscTpZeGljvyQXlWOItQyU71kCdGz7Pi8H8zdw6BI0g3m43iL4xKUVPWtG+qrrL9DTjpdn8eYuCQSRpow==}

  '@changesets/get-dependents-graph@2.1.2':
    resolution: {integrity: sha512-sgcHRkiBY9i4zWYBwlVyAjEM9sAzs4wYVwJUdnbDLnVG3QwAaia1Mk5P8M7kraTOZN+vBET7n8KyB0YXCbFRLQ==}

  '@changesets/get-github-info@0.6.0':
    resolution: {integrity: sha512-v/TSnFVXI8vzX9/w3DU2Ol+UlTZcu3m0kXTjTT4KlAdwSvwutcByYwyYn9hwerPWfPkT2JfpoX0KgvCEi8Q/SA==}

  '@changesets/get-release-plan@4.0.6':
    resolution: {integrity: sha512-FHRwBkY7Eili04Y5YMOZb0ezQzKikTka4wL753vfUA5COSebt7KThqiuCN9BewE4/qFGgF/5t3AuzXx1/UAY4w==}

  '@changesets/get-version-range-type@0.4.0':
    resolution: {integrity: sha512-hwawtob9DryoGTpixy1D3ZXbGgJu1Rhr+ySH2PvTLHvkZuQ7sRT4oQwMh0hbqZH1weAooedEjRsbrWcGLCeyVQ==}

  '@changesets/git@3.0.2':
    resolution: {integrity: sha512-r1/Kju9Y8OxRRdvna+nxpQIsMsRQn9dhhAZt94FLDeu0Hij2hnOozW8iqnHBgvu+KdnJppCveQwK4odwfw/aWQ==}

  '@changesets/logger@0.1.1':
    resolution: {integrity: sha512-OQtR36ZlnuTxKqoW4Sv6x5YIhOmClRd5pWsjZsddYxpWs517R0HkyiefQPIytCVh4ZcC5x9XaG8KTdd5iRQUfg==}

  '@changesets/parse@0.4.0':
    resolution: {integrity: sha512-TS/9KG2CdGXS27S+QxbZXgr8uPsP4yNJYb4BC2/NeFUj80Rni3TeD2qwWmabymxmrLo7JEsytXH1FbpKTbvivw==}

  '@changesets/pre@2.0.1':
    resolution: {integrity: sha512-vvBJ/If4jKM4tPz9JdY2kGOgWmCowUYOi5Ycv8dyLnEE8FgpYYUo1mgJZxcdtGGP3aG8rAQulGLyyXGSLkIMTQ==}

  '@changesets/read@0.6.2':
    resolution: {integrity: sha512-wjfQpJvryY3zD61p8jR87mJdyx2FIhEcdXhKUqkja87toMrP/3jtg/Yg29upN+N4Ckf525/uvV7a4tzBlpk6gg==}

  '@changesets/should-skip-package@0.1.1':
    resolution: {integrity: sha512-H9LjLbF6mMHLtJIc/eHR9Na+MifJ3VxtgP/Y+XLn4BF7tDTEN1HNYtH6QMcjP1uxp9sjaFYmW8xqloaCi/ckTg==}

  '@changesets/types@4.1.0':
    resolution: {integrity: sha512-LDQvVDv5Kb50ny2s25Fhm3d9QSZimsoUGBsUioj6MC3qbMUCuC8GPIvk/M6IvXx3lYhAs0lwWUQLb+VIEUCECw==}

  '@changesets/types@6.0.0':
    resolution: {integrity: sha512-b1UkfNulgKoWfqyHtzKS5fOZYSJO+77adgL7DLRDr+/7jhChN+QcHnbjiQVOz/U+Ts3PGNySq7diAItzDgugfQ==}

  '@changesets/write@0.3.2':
    resolution: {integrity: sha512-kDxDrPNpUgsjDbWBvUo27PzKX4gqeKOlhibaOXDJA6kuBisGqNHv/HwGJrAu8U/dSf8ZEFIeHIPtvSlZI1kULw==}

  '@ckb-lumos/base@0.24.0-next.2':
    resolution: {integrity: sha512-VCXYpykJ+OhjbcCp3imwt9rk3Ie2T8jyCjSXExkoyKY+QT+EI856p37KBbBdO4r7gguVtADnJS+WLIZoNm5Bvw==}
    engines: {node: '>=12.0.0'}

  '@ckb-lumos/bi@0.24.0-next.2':
    resolution: {integrity: sha512-KGRv2M0EsZw08qIjauew43VBoG8X6IPiPrW7Bn5nnrqWh0i+JE8ZC4fsS6kGmAhUMw3OcTzinU7cQ318CjaC3Q==}
    engines: {node: '>=12.0.0'}

  '@ckb-lumos/ckb-indexer@0.24.0-next.2':
    resolution: {integrity: sha512-VuTyXjulQR1fl3RzfObSBRlFfCdzRi13G120MP9OChH7zaLNartWmPycPF1xcv/FfZIcfCT+dGqUFc+vc7qfGw==}
    engines: {node: '>=12.0.0'}

  '@ckb-lumos/codec@0.24.0-next.2':
    resolution: {integrity: sha512-yPrAwJyLJw4jf2GMMcJHRE2Z/I9ZD0e7VzzHA0rwTNaaXHpjZWdR5ffBqHGjNAobIrIlJlv9FVDLZTukO1RohA==}
    engines: {node: '>=12.0.0'}

  '@ckb-lumos/common-scripts@0.24.0-next.2':
    resolution: {integrity: sha512-wPaAHYWoxOuYLkkfRImtTxaElfMuL5mYA/L5nSCTCkMCncvt3loMjbYlBZY6IBMMclwobTfMPej5Bg5cUpHadA==}
    engines: {node: '>=12.0.0'}

  '@ckb-lumos/config-manager@0.24.0-next.2':
    resolution: {integrity: sha512-/HL0fjFXFnTaJNRyZqHk6/MiioDWeB6bVcm6MO97E6tJVBxTJjIe/cvRjqohEAO3SRst9X81vh2WIB7lCIBjfA==}
    engines: {node: '>=12.0.0'}

  '@ckb-lumos/crypto@0.24.0-next.2':
    resolution: {integrity: sha512-wJ1gE5ThZX15q45wRLX0oUoZ/qyE3jIIBnM7wuOWjAVEdp7LVRgNDoYHd7pFCYDH2j6rJwLNhJW41o1f7Aqqlg==}
    engines: {node: '>=18.0.0'}

  '@ckb-lumos/helpers@0.24.0-next.2':
    resolution: {integrity: sha512-yHn1Ty1lyOTRKyEKGzH88eBE4iio7iDpoyejsWVZVk6Eetkv1XS/zNA2J5w7KVhjOzbNK7GUUU9v/3kzYWpG0A==}
    engines: {node: '>=12.0.0'}

  '@ckb-lumos/rpc@0.24.0-next.2':
    resolution: {integrity: sha512-C/Vjvbh+GStxA/9vcj6oI1apZQRoydIvc8T1DR5Dh3F9K1q8NUSnJ43bLNOcwusdMWDkRNNS0jyoKirtLJy5Hg==}
    engines: {node: '>=12.0.0'}

  '@ckb-lumos/toolkit@0.24.0-next.2':
    resolution: {integrity: sha512-faqOZpj0H21vsqfQXfzRRQUEgF3vZ9i3PcqyF7hNbrNeR6VUcIzJL8QskhjFhBusxAvKf56QbX0/T06/PAgbfg==}
    engines: {node: '>=12.0.0'}

  '@colors/colors@1.5.0':
    resolution: {integrity: sha512-ooWCrlZP11i8GImSjTHYHLkvFDP48nS4+204nGb1RiX/WXYHmJA2III9/e2DWVabCESdW7hBAEzHRqUn9OUVvQ==}
    engines: {node: '>=0.1.90'}

  '@cspotcode/source-map-support@0.8.1':
    resolution: {integrity: sha512-IchNf6dN4tHoMFIn/7OE8LWZ19Y6q/67Bmf6vnGREv8RSbBVb9LPJxEcnwrcwX6ixSvaiGoomAUvu4YSxXrVgw==}
    engines: {node: '>=12'}

  '@eslint-community/eslint-utils@4.4.1':
    resolution: {integrity: sha512-s3O3waFUrMV8P/XaF/+ZTp1X9XBZW1a4B97ZnjQF2KYWaFD2A8KyFBsrsfSjEmjn3RGWAIuvlneuZm3CUK3jbA==}
    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}
    peerDependencies:
      eslint: ^6.0.0 || ^7.0.0 || >=8.0.0

  '@eslint-community/regexpp@4.12.1':
    resolution: {integrity: sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==}
    engines: {node: ^12.0.0 || ^14.0.0 || >=16.0.0}

  '@eslint/config-array@0.19.2':
    resolution: {integrity: sha512-GNKqxfHG2ySmJOBSHg7LxeUx4xpuCoFjacmlCoYWEbaPXLwvfIjixRI12xCQZeULksQb23uiA8F40w5TojpV7w==}
    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}

  '@eslint/core@0.10.0':
    resolution: {integrity: sha512-gFHJ+xBOo4G3WRlR1e/3G8A6/KZAH6zcE/hkLRCZTi/B9avAG365QhFA8uOGzTMqgTghpn7/fSnscW++dpMSAw==}
    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}

  '@eslint/core@0.11.0':
    resolution: {integrity: sha512-DWUB2pksgNEb6Bz2fggIy1wh6fGgZP4Xyy/Mt0QZPiloKKXerbqq9D3SBQTlCRYOrcRPu4vuz+CGjwdfqxnoWA==}
    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}

  '@eslint/eslintrc@2.1.4':
    resolution: {integrity: sha512-269Z39MS6wVJtsoUl10L60WdkhJVdPG24Q4eZTH3nnF6lpvSShEK3wQjDX9JRWAUPvPh7COouPpU9IrqaZFvtQ==}
    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}

  '@eslint/eslintrc@3.2.0':
    resolution: {integrity: sha512-grOjVNN8P3hjJn/eIETF1wwd12DdnwFDoyceUJLYYdkpbwq3nLi+4fqrTAONx7XDALqlL220wC/RHSC/QTI/0w==}
    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}

  '@eslint/js@8.57.1':
    resolution: {integrity: sha512-d9zaMRSTIKDLhctzH12MtXvJKSSUhaHcjV+2Z+GK+EEY7XKpP5yR4x+N3TAcHTcu963nIr+TMcCb4DBCYX1z6Q==}
    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}

  '@eslint/js@9.20.0':
    resolution: {integrity: sha512-iZA07H9io9Wn836aVTytRaNqh00Sad+EamwOVJT12GTLw1VGMFV/4JaME+JjLtr9fiGaoWgYnS54wrfWsSs4oQ==}
    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}

  '@eslint/object-schema@2.1.6':
    resolution: {integrity: sha512-RBMg5FRL0I0gs51M/guSAj5/e14VQ4tpZnQNWwuDT66P14I43ItmPfIZRhO9fUVIPOAQXU47atlywZ/czoqFPA==}
    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}

  '@eslint/plugin-kit@0.2.5':
    resolution: {integrity: sha512-lB05FkqEdUg2AA0xEbUz0SnkXT1LcCTa438W4IWTUh4hdOnVbQyOJ81OrDXsJk/LSiJHubgGEFoR5EHq1NsH1A==}
    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}

  '@headlessui/react@1.7.19':
    resolution: {integrity: sha512-Ll+8q3OlMJfJbAKM/+/Y2q6PPYbryqNTXDbryx7SXLIDamkF6iQFbriYHga0dY44PvDhvvBWCx1Xj4U5+G4hOw==}
    engines: {node: '>=10'}
    peerDependencies:
      react: ^16 || ^17 || ^18
      react-dom: ^16 || ^17 || ^18

  '@heroicons/react@2.2.0':
    resolution: {integrity: sha512-LMcepvRaS9LYHJGsF0zzmgKCUim/X3N/DQKc4jepAXJ7l8QxJ1PmxJzqplF2Z3FE4PqBAIGyJAQ/w4B5dsqbtQ==}
    peerDependencies:
      react: '>= 16 || ^19.0.0-rc'

  '@humanfs/core@0.19.1':
    resolution: {integrity: sha512-5DyQ4+1JEUzejeK1JGICcideyfUbGixgS9jNgex5nqkW+cY7WZhxBigmieN5Qnw9ZosSNVC9KQKyb+GUaGyKUA==}
    engines: {node: '>=18.18.0'}

  '@humanfs/node@0.16.6':
    resolution: {integrity: sha512-YuI2ZHQL78Q5HbhDiBA1X4LmYdXCKCMQIfw0pw7piHJwyREFebJUvrQN4cMssyES6x+vfUbx1CIpaQUKYdQZOw==}
    engines: {node: '>=18.18.0'}

  '@humanwhocodes/config-array@0.13.0':
    resolution: {integrity: sha512-DZLEEqFWQFiyK6h5YIeynKx7JlvCYWL0cImfSRXZ9l4Sg2efkFGTuFf6vzXjK1cq6IYkU+Eg/JizXw+TD2vRNw==}
    engines: {node: '>=10.10.0'}
    deprecated: Use @eslint/config-array instead

  '@humanwhocodes/module-importer@1.0.1':
    resolution: {integrity: sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==}
    engines: {node: '>=12.22'}

  '@humanwhocodes/object-schema@2.0.3':
    resolution: {integrity: sha512-93zYdMES/c1D69yZiKDBj0V24vqNzB/koF26KPaagAfd3P/4gUlh3Dys5ogAK+Exi9QyzlD8x/08Zt7wIKcDcA==}
    deprecated: Use @eslint/object-schema instead

  '@humanwhocodes/retry@0.3.1':
    resolution: {integrity: sha512-JBxkERygn7Bv/GbN5Rv8Ul6LVknS+5Bp6RgDC/O8gEBU/yeH5Ui5C/OlWrTb6qct7LjjfT6Re2NxB0ln0yYybA==}
    engines: {node: '>=18.18'}

  '@humanwhocodes/retry@0.4.1':
    resolution: {integrity: sha512-c7hNEllBlenFTHBky65mhq8WD2kbN9Q6gk0bTk8lSBvc554jpXSkST1iePudpt7+A/AQvuHs9EMqjHDXMY1lrA==}
    engines: {node: '>=18.18'}

  '@isaacs/cliui@8.0.2':
    resolution: {integrity: sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==}
    engines: {node: '>=12'}

  '@istanbuljs/load-nyc-config@1.1.0':
    resolution: {integrity: sha512-VjeHSlIzpv/NyD3N0YuHfXOPDIixcA1q2ZV98wsMqcYlPmv2n3Yb2lYP9XMElnaFVXg5A7YLTeLu6V84uQDjmQ==}
    engines: {node: '>=8'}

  '@istanbuljs/schema@0.1.3':
    resolution: {integrity: sha512-ZXRY4jNvVgSVQ8DL3LTcakaAtXwTVUxE81hslsyD2AtoXW/wVob10HkOJ1X/pAlcI7D+2YoZKg5do8G/w6RYgA==}
    engines: {node: '>=8'}

  '@jest/console@29.7.0':
    resolution: {integrity: sha512-5Ni4CU7XHQi32IJ398EEP4RrB8eV09sXP2ROqD4bksHrnTree52PsxvX8tpL8LvTZ3pFzXyPbNQReSN41CAhOg==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  '@jest/console@30.0.0-alpha.6':
    resolution: {integrity: sha512-08BeAnuabmauj5B+Xa4GNPAotQUGm3PLKSE3rnpnmxniZzR4tXhx8+AA2+HGTri4bbVRY/r3Jl0vJnkhvHTkeQ==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  '@jest/core@29.7.0':
    resolution: {integrity: sha512-n7aeXWKMnGtDA48y8TLWJPJmLmmZ642Ceo78cYWEpiD7FzDgmNDV/GCVRorPABdXLJZ/9wzzgZAlHjXjxDHGsg==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
    peerDependencies:
      node-notifier: ^8.0.1 || ^9.0.0 || ^10.0.0
    peerDependenciesMeta:
      node-notifier:
        optional: true

  '@jest/core@30.0.0-alpha.6':
    resolution: {integrity: sha512-Qsvu9/I0hUOpeelp3jlTmg6cg3C+w18v4hxWVGchCRJAChvuxmsomB1Cm+DKB6NiMy2EvUvpwdT8X31lERtemw==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}
    peerDependencies:
      node-notifier: ^8.0.1 || ^9.0.0 || ^10.0.0
    peerDependenciesMeta:
      node-notifier:
        optional: true

  '@jest/environment@29.7.0':
    resolution: {integrity: sha512-aQIfHDq33ExsN4jP1NWGXhxgQ/wixs60gDiKO+XVMd8Mn0NWPWgc34ZQDTb2jKaUWQ7MuwoitXAsN2XVXNMpAw==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  '@jest/environment@30.0.0-alpha.6':
    resolution: {integrity: sha512-pjNYNkzq761hh8D2grrG77L6nhe2VBCFFM+G1hyqhaJ2MAzhp2Gh+G94uF3px7luSzLh8GYvGJQGYy197EUOGQ==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  '@jest/expect-utils@29.7.0':
    resolution: {integrity: sha512-GlsNBWiFQFCVi9QVSx7f5AgMeLxe9YCCs5PuP2O2LdjDAA8Jh9eX7lA1Jq/xdXw3Wb3hyvlFNfZIfcRetSzYcA==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  '@jest/expect-utils@30.0.0-alpha.6':
    resolution: {integrity: sha512-QMySMhaCUl0ZQd7Tx5X3fVWY5jtQxZNrTll0OyavdQ70ZTLgk0kU9K+XovcMWO26MK9R5EX7bBgD/j7w9hUM4w==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  '@jest/expect@29.7.0':
    resolution: {integrity: sha512-8uMeAMycttpva3P1lBHB8VciS9V0XAr3GymPpipdyQXbBcuhkLQOSe8E/p92RyAdToS6ZD1tFkX+CkhoECE0dQ==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  '@jest/expect@30.0.0-alpha.6':
    resolution: {integrity: sha512-3O74pygTwUBzUjO958IgNwmp0WrjASbiWdMEfUMePVqtiGoyS4Nxj9hsx4uKsNVivNJSZiiayYoP6dLhWerJXQ==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  '@jest/fake-timers@29.7.0':
    resolution: {integrity: sha512-q4DH1Ha4TTFPdxLsqDXK1d3+ioSL7yL5oCMJZgDYm6i+6CygW5E5xVr/D1HdsGxjt1ZWSfUAs9OxSB/BNelWrQ==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  '@jest/fake-timers@30.0.0-alpha.6':
    resolution: {integrity: sha512-deka0RmhJgEKPJM6cXPd4TJQ6fLczErdMN7Oxzr16UTDFHxtFd79tduJ8uP92dQyO4zy63N/dlFK6d+FHyWUDw==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  '@jest/globals@29.7.0':
    resolution: {integrity: sha512-mpiz3dutLbkW2MNFubUGUEVLkTGiqW6yLVTA+JbP6fI6J5iL9Y0Nlg8k95pcF8ctKwCS7WVxteBs29hhfAotzQ==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  '@jest/globals@30.0.0-alpha.6':
    resolution: {integrity: sha512-+uJMoPUos9RH6+52iNgKJBbx1Hd2QsCZjExi5XpVvTjJ/gE4eJ1X7irUMt+14sH0QkeZ3GnjeTJFopyjOCsu+Q==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  '@jest/pattern@30.0.0-alpha.6':
    resolution: {integrity: sha512-eoV3sjS1M5k3YdrFWezqdndfgepwB86gwyXC0BzV2saZdJ42ySUoEDBGKuwta8A6Zh3w8tVHNFxz1BqiFraHCQ==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  '@jest/reporters@29.7.0':
    resolution: {integrity: sha512-DApq0KJbJOEzAFYjHADNNxAE3KbhxQB1y5Kplb5Waqw6zVbuWatSnMjE5gs8FUgEPmNsnZA3NCWl9NG0ia04Pg==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
    peerDependencies:
      node-notifier: ^8.0.1 || ^9.0.0 || ^10.0.0
    peerDependenciesMeta:
      node-notifier:
        optional: true

  '@jest/reporters@30.0.0-alpha.6':
    resolution: {integrity: sha512-jzW0t2OtEzBYwlG4EMJKG4q5RPaVvLPDm/nBS08hd+XPoLJJ9b5thyo/MoThIqJfdi0lHqFlDQUmlL205CMoSw==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}
    peerDependencies:
      node-notifier: ^8.0.1 || ^9.0.0 || ^10.0.0
    peerDependenciesMeta:
      node-notifier:
        optional: true

  '@jest/schemas@29.6.3':
    resolution: {integrity: sha512-mo5j5X+jIZmJQveBKeS/clAueipV7KgiX1vMgCxam1RNYiqE1w62n0/tJJnHtjW8ZHcQco5gY85jA3mi0L+nSA==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  '@jest/schemas@30.0.0-alpha.6':
    resolution: {integrity: sha512-Ukr3kR/VsBq8+JHU92xArhSJeFQHVHs5T1laPO00GrrNzv3DvoHn3/EVVagGn9CHbLeAyJHXFRHYxq3+520kiA==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  '@jest/snapshot-utils@30.0.0-alpha.6':
    resolution: {integrity: sha512-iDtIFCyRT8ZyLmz6kYbS8GR/MBXKA6uZPBfdTcnd2y0T987DV3GVlvwkAC+iFTc1w3HgwQe8LTf+y3i+O2ISCw==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  '@jest/source-map@29.6.3':
    resolution: {integrity: sha512-MHjT95QuipcPrpLM+8JMSzFx6eHp5Bm+4XeFDJlwsvVBjmKNiIAvasGK2fxz2WbGRlnvqehFbh07MMa7n3YJnw==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  '@jest/source-map@30.0.0-alpha.6':
    resolution: {integrity: sha512-7rSrxehVyzqw5O+F2ds7wLAm9f6QxqYsJU42LNyUpaFlJqtWz3PeQ2Wu3DVoPzGu0C66EhDHKYmeN0mXnRDZmQ==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  '@jest/test-result@29.7.0':
    resolution: {integrity: sha512-Fdx+tv6x1zlkJPcWXmMDAG2HBnaR9XPSd5aDWQVsfrZmLVT3lU1cwyxLgRmXR9yrq4NBoEm9BMsfgFzTQAbJYA==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  '@jest/test-result@30.0.0-alpha.6':
    resolution: {integrity: sha512-Jlg8lCm7VQ6YvQ0eZx2nQEtej/ng+ulV8cXH7Nj5i33hNZq8EZvWM4gQDWDzRe1X7cVE3Bd42On5f6s2rqqIjw==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  '@jest/test-sequencer@29.7.0':
    resolution: {integrity: sha512-GQwJ5WZVrKnOJuiYiAF52UNUJXgTZx1NHjFSEB0qEMmSZKAkdMoIzw/Cj6x6NF4AvV23AUqDpFzQkN/eYCYTxw==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  '@jest/test-sequencer@30.0.0-alpha.6':
    resolution: {integrity: sha512-5M89jbSQWkBjGlFrRk2wXjRJVxR+uN553sFN0q2TglH0/a4OMSVxRBcCmnIqqDMDizGAlYTxW6BaXxHGHpvrRQ==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  '@jest/transform@29.7.0':
    resolution: {integrity: sha512-ok/BTPFzFKVMwO5eOHRrvnBVHdRy9IrsrW1GpMaQ9MCnilNLXQKmAX8s1YXDFaai9xJpac2ySzV0YeRRECr2Vw==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  '@jest/transform@30.0.0-alpha.6':
    resolution: {integrity: sha512-4L8BZm38BJASswsqruc4c3F0AExYLvp0xq8067e7fIyg4hfwa4zUA+N2idf+eTTjDWevVVdIBfELzJ8b7nvO4Q==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  '@jest/types@29.6.3':
    resolution: {integrity: sha512-u3UPsIilWKOM3F9CXtrG8LEJmNxwoCQC/XVj4IKYXvvpx7QIi/Kg1LI5uDmDpKlac62NUtX7eLjRh+jVZcLOzw==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  '@jest/types@30.0.0-alpha.6':
    resolution: {integrity: sha512-qUjAm8uvIR7oExn/Fp7/bvn58HSZng5itQDM9x0vaxXWxxGH/8MDmqX/h7OUBz9ka+KfYRaTxe4Y6wiM8+nphw==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  '@joyid/ckb@1.1.0':
    resolution: {integrity: sha512-idexvr4sY28ij1RfVkIZ46EVbeOqnmrxsWj1YV6H/AAv+tM/fT2ODh3ETaN4EE0FRvJMulZppMXPDiPVuiVBUg==}

  '@joyid/common@0.2.0':
    resolution: {integrity: sha512-WBZtgdEccWxjiGHIoDgRFIbnC42ZvmfvFRCTxmx9D4BLvtiFdhAa+g70lUmiHwO28GjgHIHgzHRGNRdLuk81xw==}

  '@jridgewell/gen-mapping@0.3.8':
    resolution: {integrity: sha512-imAbBGkb+ebQyxKgzv5Hu2nmROxoDOXHh80evxdoXNOrvAnVx7zimzc1Oo5h9RlfV4vPXaE2iM5pOFbvOCClWA==}
    engines: {node: '>=6.0.0'}

  '@jridgewell/resolve-uri@3.1.2':
    resolution: {integrity: sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==}
    engines: {node: '>=6.0.0'}

  '@jridgewell/set-array@1.2.1':
    resolution: {integrity: sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==}
    engines: {node: '>=6.0.0'}

  '@jridgewell/source-map@0.3.6':
    resolution: {integrity: sha512-1ZJTZebgqllO79ue2bm3rIGud/bOe0pP5BjSRCRxxYkEZS8STV7zN84UBbiYu7jy+eCKSnVIUgoWWE/tt+shMQ==}

  '@jridgewell/sourcemap-codec@1.5.0':
    resolution: {integrity: sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==}

  '@jridgewell/trace-mapping@0.3.25':
    resolution: {integrity: sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==}

  '@jridgewell/trace-mapping@0.3.9':
    resolution: {integrity: sha512-3Belt6tdc8bPgAtbcmdtNJlirVoTmEb5e2gC94PnkwEW9jI6CAHUeoG85tjWP5WquqfavoMtMwiG4P926ZKKuQ==}

  '@lit-labs/ssr-dom-shim@1.3.0':
    resolution: {integrity: sha512-nQIWonJ6eFAvUUrSlwyHDm/aE8PBDu5kRpL0vHMg6K8fK3Diq1xdPjTnsJSwxABhaZ+5eBi1btQB5ShUTKo4nQ==}

  '@lit/react@1.0.7':
    resolution: {integrity: sha512-cencnwwLXQKiKxjfFzSgZRngcWJzUDZi/04E0fSaF86wZgchMdvTyu+lE36DrUfvuus3bH8+xLPrhM1cTjwpzw==}
    peerDependencies:
      '@types/react': 17 || 18 || 19

  '@lit/reactive-element@2.0.4':
    resolution: {integrity: sha512-GFn91inaUa2oHLak8awSIigYz0cU0Payr1rcFsrkf5OJ5eSPxElyZfKh0f2p9FsTiZWXQdWGJeXZICEfXXYSXQ==}

  '@ljharb/through@2.3.14':
    resolution: {integrity: sha512-ajBvlKpWucBB17FuQYUShqpqy8GRgYEpJW0vWJbUu1CV9lWyrDCapy0lScU8T8Z6qn49sSwJB3+M+evYIdGg+A==}
    engines: {node: '>= 0.4'}

  '@lukeed/csprng@1.1.0':
    resolution: {integrity: sha512-Z7C/xXCiGWsg0KuKsHTKJxbWhpI3Vs5GwLfOean7MGyVFGqdRgBbAjOCh6u4bbjPc/8MJ2pZmK/0DLdCbivLDA==}
    engines: {node: '>=8'}

  '@manypkg/find-root@1.1.0':
    resolution: {integrity: sha512-mki5uBvhHzO8kYYix/WRy2WX8S3B5wdVSc9D6KcU5lQNglP2yt58/VfLuAK49glRXChosY8ap2oJ1qgma3GUVA==}

  '@manypkg/get-packages@1.1.3':
    resolution: {integrity: sha512-fo+QhuU3qE/2TQMQmbVMqaQ6EWbMhi4ABWP+O4AM1NqPBuy0OrApV5LO6BrrgnhtAHS2NH6RrVk9OL181tTi8A==}

  '@material/material-color-utilities@0.3.0':
    resolution: {integrity: sha512-ztmtTd6xwnuh2/xu+Vb01btgV8SQWYCaK56CkRK8gEkWe5TuDyBcYJ0wgkMRn+2VcE9KUmhvkz+N9GHrqw/C0g==}

  '@monaco-editor/loader@1.4.0':
    resolution: {integrity: sha512-00ioBig0x642hytVspPl7DbQyaSWRaolYie/UFNjoTdvoKPzo6xrXLhTk9ixgIKcLH5b5vDOjVNiGyY+uDCUlg==}
    peerDependencies:
      monaco-editor: '>= 0.21.0 < 1'

  '@monaco-editor/react@4.6.0':
    resolution: {integrity: sha512-RFkU9/i7cN2bsq/iTkurMWOEErmYcY6JiQI3Jn+WeR/FGISH8JbHERjpS9oRuSOPvDMJI0Z8nJeKkbOs9sBYQw==}
    peerDependencies:
      monaco-editor: '>= 0.25.0 < 1'
      react: ^16.8.0 || ^17.0.0 || ^18.0.0
      react-dom: ^16.8.0 || ^17.0.0 || ^18.0.0

  '@nervosnetwork/ckb-sdk-utils@0.109.4':
    resolution: {integrity: sha512-Td/vGKHMQ2zxumt1ViFLqMGBws/G2j5XvcOdXAqhKV4vKIdzhmR18ve6fNhdIjE7xGWH5bHO/dbXVbgVGUsPNQ==}

  '@nervosnetwork/ckb-types@0.109.4':
    resolution: {integrity: sha512-paA5URfnR58enL3OvT/Bv0ZuQpAZGlk5pjvzly4Q/pkRAeJVA0ks94zf4y8hTcvBCjSlEG8KCt0fI4r/sAylTg==}

  '@nestjs/cli@10.4.9':
    resolution: {integrity: sha512-s8qYd97bggqeK7Op3iD49X2MpFtW4LVNLAwXFkfbRxKME6IYT7X0muNTJ2+QfI8hpbNx9isWkrLWIp+g5FOhiA==}
    engines: {node: '>= 16.14'}
    hasBin: true
    peerDependencies:
      '@swc/cli': ^0.1.62 || ^0.3.0 || ^0.4.0 || ^0.5.0
      '@swc/core': ^1.3.62
    peerDependenciesMeta:
      '@swc/cli':
        optional: true
      '@swc/core':
        optional: true

  '@nestjs/common@10.4.15':
    resolution: {integrity: sha512-vaLg1ZgwhG29BuLDxPA9OAcIlgqzp9/N8iG0wGapyUNTf4IY4O6zAHgN6QalwLhFxq7nOI021vdRojR1oF3bqg==}
    peerDependencies:
      class-transformer: '*'
      class-validator: '*'
      reflect-metadata: ^0.1.12 || ^0.2.0
      rxjs: ^7.1.0
    peerDependenciesMeta:
      class-transformer:
        optional: true
      class-validator:
        optional: true

  '@nestjs/config@3.3.0':
    resolution: {integrity: sha512-pdGTp8m9d0ZCrjTpjkUbZx6gyf2IKf+7zlkrPNMsJzYZ4bFRRTpXrnj+556/5uiI6AfL5mMrJc2u7dB6bvM+VA==}
    peerDependencies:
      '@nestjs/common': ^8.0.0 || ^9.0.0 || ^10.0.0
      rxjs: ^7.1.0

  '@nestjs/core@10.4.15':
    resolution: {integrity: sha512-UBejmdiYwaH6fTsz2QFBlC1cJHM+3UDeLZN+CiP9I1fRv2KlBZsmozGLbV5eS1JAVWJB4T5N5yQ0gjN8ZvcS2w==}
    peerDependencies:
      '@nestjs/common': ^10.0.0
      '@nestjs/microservices': ^10.0.0
      '@nestjs/platform-express': ^10.0.0
      '@nestjs/websockets': ^10.0.0
      reflect-metadata: ^0.1.12 || ^0.2.0
      rxjs: ^7.1.0
    peerDependenciesMeta:
      '@nestjs/microservices':
        optional: true
      '@nestjs/platform-express':
        optional: true
      '@nestjs/websockets':
        optional: true

  '@nestjs/platform-express@10.4.15':
    resolution: {integrity: sha512-63ZZPkXHjoDyO7ahGOVcybZCRa7/Scp6mObQKjcX/fTEq1YJeU75ELvMsuQgc8U2opMGOBD7GVuc4DV0oeDHoA==}
    peerDependencies:
      '@nestjs/common': ^10.0.0
      '@nestjs/core': ^10.0.0

  '@nestjs/schematics@10.2.3':
    resolution: {integrity: sha512-4e8gxaCk7DhBxVUly2PjYL4xC2ifDFexCqq1/u4TtivLGXotVk0wHdYuPYe1tHTHuR1lsOkRbfOCpkdTnigLVg==}
    peerDependencies:
      typescript: '>=4.8.2'

  '@nestjs/testing@10.4.15':
    resolution: {integrity: sha512-eGlWESkACMKti+iZk1hs6FUY/UqObmMaa8HAN9JLnaYkoLf1Jeh+EuHlGnfqo/Rq77oznNLIyaA3PFjrFDlNUg==}
    peerDependencies:
      '@nestjs/common': ^10.0.0
      '@nestjs/core': ^10.0.0
      '@nestjs/microservices': ^10.0.0
      '@nestjs/platform-express': ^10.0.0
    peerDependenciesMeta:
      '@nestjs/microservices':
        optional: true
      '@nestjs/platform-express':
        optional: true

  '@next/env@14.2.10':
    resolution: {integrity: sha512-dZIu93Bf5LUtluBXIv4woQw2cZVZ2DJTjax5/5DOs3lzEOeKLy7GxRSr4caK9/SCPdaW6bCgpye6+n4Dh9oJPw==}

  '@next/env@14.2.8':
    resolution: {integrity: sha512-L44a+ynqkolyNBnYfF8VoCiSrjSZWgEHYKkKLGcs/a80qh7AkfVUD/MduVPgdsWZ31tgROR+yJRA0PZjSVBXWQ==}

  '@next/eslint-plugin-next@14.2.2':
    resolution: {integrity: sha512-q+Ec2648JtBpKiu/FSJm8HAsFXlNvioHeBCbTP12T1SGcHYwhqHULSfQgFkPgHDu3kzNp2Kem4J54bK4rPQ5SQ==}

  '@next/eslint-plugin-next@14.2.8':
    resolution: {integrity: sha512-ue5vcq9Fjk3asACRDrzYjcGMEN7pMMDQ5zUD+FenkqvlPCVUD1x7PxBNOLfPYDZOrk/Vnl4GHmjj2mZDqPW8TQ==}

  '@next/swc-darwin-arm64@14.2.10':
    resolution: {integrity: sha512-V3z10NV+cvMAfxQUMhKgfQnPbjw+Ew3cnr64b0lr8MDiBJs3eLnM6RpGC46nhfMZsiXgQngCJKWGTC/yDcgrDQ==}
    engines: {node: '>= 10'}
    cpu: [arm64]
    os: [darwin]

  '@next/swc-darwin-arm64@14.2.8':
    resolution: {integrity: sha512-1VrQlG8OzdyvvGZhGJFnaNE2P10Jjy/2FopnqbY0nSa/gr8If3iINxvOEW3cmVeoAYkmW0RsBazQecA2dBFOSw==}
    engines: {node: '>= 10'}
    cpu: [arm64]
    os: [darwin]

  '@next/swc-darwin-x64@14.2.10':
    resolution: {integrity: sha512-Y0TC+FXbFUQ2MQgimJ/7Ina2mXIKhE7F+GUe1SgnzRmwFY3hX2z8nyVCxE82I2RicspdkZnSWMn4oTjIKz4uzA==}
    engines: {node: '>= 10'}
    cpu: [x64]
    os: [darwin]

  '@next/swc-darwin-x64@14.2.8':
    resolution: {integrity: sha512-87t3I86rNRSOJB1gXIUzaQWWSWrkWPDyZGsR0Z7JAPtLeX3uUOW2fHxl7dNWD2BZvbvftctTQjgtfpp7nMtmWg==}
    engines: {node: '>= 10'}
    cpu: [x64]
    os: [darwin]

  '@next/swc-linux-arm64-gnu@14.2.10':
    resolution: {integrity: sha512-ZfQ7yOy5zyskSj9rFpa0Yd7gkrBnJTkYVSya95hX3zeBG9E55Z6OTNPn1j2BTFWvOVVj65C3T+qsjOyVI9DQpA==}
    engines: {node: '>= 10'}
    cpu: [arm64]
    os: [linux]

  '@next/swc-linux-arm64-gnu@14.2.8':
    resolution: {integrity: sha512-ta2sfVzbOpTbgBrF9HM5m+U58dv6QPuwU4n5EX4LLyCJGKc433Z0D9h9gay/HSOjLEXJ2fJYrMP5JYYbHdxhtw==}
    engines: {node: '>= 10'}
    cpu: [arm64]
    os: [linux]

  '@next/swc-linux-arm64-musl@14.2.10':
    resolution: {integrity: sha512-n2i5o3y2jpBfXFRxDREr342BGIQCJbdAUi/K4q6Env3aSx8erM9VuKXHw5KNROK9ejFSPf0LhoSkU/ZiNdacpQ==}
    engines: {node: '>= 10'}
    cpu: [arm64]
    os: [linux]

  '@next/swc-linux-arm64-musl@14.2.8':
    resolution: {integrity: sha512-+IoLTPK6Z5uIgDhgeWnQF5/o5GBN7+zyUNrs4Bes1W3g9++YELb8y0unFybS8s87ntAKMDl6jeQ+mD7oNwp/Ng==}
    engines: {node: '>= 10'}
    cpu: [arm64]
    os: [linux]

  '@next/swc-linux-x64-gnu@14.2.10':
    resolution: {integrity: sha512-GXvajAWh2woTT0GKEDlkVhFNxhJS/XdDmrVHrPOA83pLzlGPQnixqxD8u3bBB9oATBKB//5e4vpACnx5Vaxdqg==}
    engines: {node: '>= 10'}
    cpu: [x64]
    os: [linux]

  '@next/swc-linux-x64-gnu@14.2.8':
    resolution: {integrity: sha512-pO+hVXC+mvzUOQJJRG4RX4wJsRJ5BkURSf6dD6EjUXAX4Ml9es1WsEfkaZ4lcpmFzFvY47IkDaffks/GdCn9ag==}
    engines: {node: '>= 10'}
    cpu: [x64]
    os: [linux]

  '@next/swc-linux-x64-musl@14.2.10':
    resolution: {integrity: sha512-opFFN5B0SnO+HTz4Wq4HaylXGFV+iHrVxd3YvREUX9K+xfc4ePbRrxqOuPOFjtSuiVouwe6uLeDtabjEIbkmDA==}
    engines: {node: '>= 10'}
    cpu: [x64]
    os: [linux]

  '@next/swc-linux-x64-musl@14.2.8':
    resolution: {integrity: sha512-bCat9izctychCtf3uL1nqHq31N5e1VxvdyNcBQflkudPMLbxVnlrw45Vi87K+lt1CwrtVayHqzo4ie0Szcpwzg==}
    engines: {node: '>= 10'}
    cpu: [x64]
    os: [linux]

  '@next/swc-win32-arm64-msvc@14.2.10':
    resolution: {integrity: sha512-9NUzZuR8WiXTvv+EiU/MXdcQ1XUvFixbLIMNQiVHuzs7ZIFrJDLJDaOF1KaqttoTujpcxljM/RNAOmw1GhPPQQ==}
    engines: {node: '>= 10'}
    cpu: [arm64]
    os: [win32]

  '@next/swc-win32-arm64-msvc@14.2.8':
    resolution: {integrity: sha512-gbxfUaSPV7EyUobpavida2Hwi62GhSJaSg7iBjmBWoxkxlmETOD7U4tWt763cGIsyE6jM7IoNavq0BXqwdW2QA==}
    engines: {node: '>= 10'}
    cpu: [arm64]
    os: [win32]

  '@next/swc-win32-ia32-msvc@14.2.10':
    resolution: {integrity: sha512-fr3aEbSd1GeW3YUMBkWAu4hcdjZ6g4NBl1uku4gAn661tcxd1bHs1THWYzdsbTRLcCKLjrDZlNp6j2HTfrw+Bg==}
    engines: {node: '>= 10'}
    cpu: [ia32]
    os: [win32]

  '@next/swc-win32-ia32-msvc@14.2.8':
    resolution: {integrity: sha512-PUXzEzjTTlUh3b5VAn1nlpwvujTnuCMMwbiCnaTazoVlN1nA3kWjlmp42IfURA2N/nyrlVEw7pURa/o4Qxj1cw==}
    engines: {node: '>= 10'}
    cpu: [ia32]
    os: [win32]

  '@next/swc-win32-x64-msvc@14.2.10':
    resolution: {integrity: sha512-UjeVoRGKNL2zfbcQ6fscmgjBAS/inHBh63mjIlfPg/NG8Yn2ztqylXt5qilYb6hoHIwaU2ogHknHWWmahJjgZQ==}
    engines: {node: '>= 10'}
    cpu: [x64]
    os: [win32]

  '@next/swc-win32-x64-msvc@14.2.8':
    resolution: {integrity: sha512-EnPKv0ttq02E9/1KZ/8Dn7kuutv6hy1CKc0HlNcvzOQcm4/SQtvfws5gY0zrG9tuupd3HfC2L/zcTrnBhpjTuQ==}
    engines: {node: '>= 10'}
    cpu: [x64]
    os: [win32]

  '@noble/ciphers@0.5.3':
    resolution: {integrity: sha512-B0+6IIHiqEs3BPMT0hcRmHvEj2QHOLu+uwt+tqDDeVd0oyVzh7BPrDcPjRnV1PV/5LaknXJJQvOuRGR0zQJz+w==}

  '@noble/curves@1.2.0':
    resolution: {integrity: sha512-oYclrNgRaM9SsBUBVbb8M6DTV7ZHRTKugureoYEncY5c65HOmRzvSiTE3y5CYaPYJA/GVkrhXEoF0M3Ya9PMnw==}

  '@noble/curves@1.8.1':
    resolution: {integrity: sha512-warwspo+UYUPep0Q+vtdVB4Ugn8GGQj8iyB3gnRWsztmUHTI3S1nhdiWNsPUGL0vud7JlRRk1XEu7Lq1KGTnMQ==}
    engines: {node: ^14.21.3 || >=16}

  '@noble/hashes@1.3.2':
    resolution: {integrity: sha512-MVC8EAQp7MvEcm30KWENFjgR+Mkmf+D189XJTkFIlwohU5hcBbn1ZkKq7KVTi2Hme3PMGF390DaL52beVrIihQ==}
    engines: {node: '>= 16'}

  '@noble/hashes@1.7.1':
    resolution: {integrity: sha512-B8XBPsn4vT/KJAGqDzbwztd+6Yte3P4V7iafm24bxgDe/mlRuK6xmWPuCNrKt2vDafZ8MfJLlchDG/vYafQEjQ==}
    engines: {node: ^14.21.3 || >=16}

  '@nodelib/fs.scandir@2.1.5':
    resolution: {integrity: sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==}
    engines: {node: '>= 8'}

  '@nodelib/fs.stat@2.0.5':
    resolution: {integrity: sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==}
    engines: {node: '>= 8'}

  '@nodelib/fs.walk@1.2.8':
    resolution: {integrity: sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==}
    engines: {node: '>= 8'}

  '@nolyfill/is-core-module@1.0.39':
    resolution: {integrity: sha512-nn5ozdjYQpUCZlWGuxcJY/KpxkWQs4DcbMCmKojjyrYDEAGy4Ce19NN4v5MduafTwJlbKc99UA8YhSVqq9yPZA==}
    engines: {node: '>=12.4.0'}

  '@nuxtjs/opencollective@0.3.2':
    resolution: {integrity: sha512-um0xL3fO7Mf4fDxcqx9KryrB7zgRM5JSlvGN5AGkP6JLM5XEKyjeAiPbNxdXVXQ16isuAhYpvP88NgL2BGd6aA==}
    engines: {node: '>=8.0.0', npm: '>=5.0.0'}
    hasBin: true

  '@pkgjs/parseargs@0.11.0':
    resolution: {integrity: sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==}
    engines: {node: '>=14'}

  '@pkgr/core@0.1.1':
    resolution: {integrity: sha512-cq8o4cWH0ibXh9VGi5P20Tu9XF/0fFXl9EUinr9QfTM7a7p0oTA4iJRCQWppXR1Pg8dSM0UCItCkPwsk9qWWYA==}
    engines: {node: ^12.20.0 || ^14.18.0 || >=16.0.0}

  '@rtsao/scc@1.1.0':
    resolution: {integrity: sha512-zt6OdqaDoOnJ1ZYsCYGt9YmWzDXl4vQdKTyJev62gFhRGKdx7mcT54V9KIjg+d2wi9EXsPvAPKe7i7WjfVWB8g==}

  '@rushstack/eslint-patch@1.10.5':
    resolution: {integrity: sha512-kkKUDVlII2DQiKy7UstOR1ErJP8kUKAQ4oa+SQtM0K+lPdmmjj0YnnxBgtTVYH7mUKtbsxeFC9y0AmK7Yb78/A==}

  '@scure/base@1.2.4':
    resolution: {integrity: sha512-5Yy9czTO47mqz+/J8GM6GIId4umdCk1wc1q8rKERQulIoc8VP9pzDcghv10Tl2E7R96ZUx/PhND3ESYUQX8NuQ==}

  '@scure/bip32@1.6.2':
    resolution: {integrity: sha512-t96EPDMbtGgtb7onKKqxRLfE5g05k7uHnHRM2xdE6BP/ZmxaLtPek4J4KfVn/90IQNrU1IOAqMgiDtUdtbe3nw==}

  '@scure/bip39@1.5.4':
    resolution: {integrity: sha512-TFM4ni0vKvCfBpohoh+/lY05i9gRbSwXWngAsF4CABQxoaOHijxuaZ2R6cStDQ5CHtHO9aGJTr4ksVJASRRyMA==}

  '@shikijs/core@1.29.2':
    resolution: {integrity: sha512-vju0lY9r27jJfOY4Z7+Rt/nIOjzJpZ3y+nYpqtUZInVoXQ/TJZcfGnNOGnKjFdVZb8qexiCuSlZRKcGfhhTTZQ==}

  '@shikijs/engine-javascript@1.29.2':
    resolution: {integrity: sha512-iNEZv4IrLYPv64Q6k7EPpOCE/nuvGiKl7zxdq0WFuRPF5PAE9PRo2JGq/d8crLusM59BRemJ4eOqrFrC4wiQ+A==}

  '@shikijs/engine-oniguruma@1.29.2':
    resolution: {integrity: sha512-7iiOx3SG8+g1MnlzZVDYiaeHe7Ez2Kf2HrJzdmGwkRisT7r4rak0e655AcM/tF9JG/kg5fMNYlLLKglbN7gBqA==}

  '@shikijs/langs@1.29.2':
    resolution: {integrity: sha512-FIBA7N3LZ+223U7cJDUYd5shmciFQlYkFXlkKVaHsCPgfVLiO+e12FmQE6Tf9vuyEsFe3dIl8qGWKXgEHL9wmQ==}

  '@shikijs/themes@1.29.2':
    resolution: {integrity: sha512-i9TNZlsq4uoyqSbluIcZkmPL9Bfi3djVxRnofUHwvx/h6SRW3cwgBC5SML7vsDcWyukY0eCzVN980rqP6qNl9g==}

  '@shikijs/types@1.29.2':
    resolution: {integrity: sha512-VJjK0eIijTZf0QSTODEXCqinjBn0joAHQ+aPSBzrv4O2d/QSbsMw+ZeSRx03kV34Hy7NzUvV/7NqfYGRLrASmw==}

  '@shikijs/vscode-textmate@10.0.1':
    resolution: {integrity: sha512-fTIQwLF+Qhuws31iw7Ncl1R3HUDtGwIipiJ9iU+UsDUwMhegFcQKQHd51nZjb7CArq0MvON8rbgCGQYWHUKAdg==}

  '@sinclair/typebox@0.27.8':
    resolution: {integrity: sha512-+Fj43pSMwJs4KRrH/938Uf+uAELIgVBmQzg/q1YG10djyfA3TnrU8N8XzqCh/okZdszqBQTZf96idMfE5lnwTA==}

  '@sinclair/typebox@0.33.22':
    resolution: {integrity: sha512-auUj4k+f4pyrIVf4GW5UKquSZFHJWri06QgARy9C0t9ZTjJLIuNIrr1yl9bWcJWJ1Gz1vOvYN1D+QPaIlNMVkQ==}

  '@sinonjs/commons@3.0.1':
    resolution: {integrity: sha512-K3mCHKQ9sVh8o1C9cxkwxaOmXoAMlDxC1mYyHrjqOWEcBjYr76t96zL2zlj5dUGZ3HSw240X1qgH3Mjf1yJWpQ==}

  '@sinonjs/fake-timers@10.3.0':
    resolution: {integrity: sha512-V4BG07kuYSUkTCSBHG8G8TNhM+F19jXFWnQtzj+we8DrkpSBCee9Z3Ms8yiGer/dlmhe35/Xdgyo3/0rQKg7YA==}

  '@sinonjs/fake-timers@11.3.1':
    resolution: {integrity: sha512-EVJO7nW5M/F5Tur0Rf2z/QoMo+1Ia963RiMtapiQrEWvY0iBUvADo8Beegwjpnle5BHkyHuoxSTW3jF43H1XRA==}

  '@swc/counter@0.1.3':
    resolution: {integrity: sha512-e2BR4lsJkkRlKZ/qCHPw9ZaSxc0MVUd7gtbtaB7aMvHeJVYe8sOB8DBZkP2DtISHGSku9sCK6T6cnY0CtXrOCQ==}

  '@swc/helpers@0.5.5':
    resolution: {integrity: sha512-KGYxvIOXcceOAbEk4bi/dVLEK9z8sZ0uBB3Il5b1rhfClSpcX0yfRO0KmTkqR2cnQDymwLB+25ZyMzICg/cm/A==}

  '@tanstack/react-virtual@3.13.0':
    resolution: {integrity: sha512-CchF0NlLIowiM2GxtsoKBkXA4uqSnY2KvnXo+kyUFD4a4ll6+J0qzoRsUPMwXV/H26lRsxgJIr/YmjYum2oEjg==}
    peerDependencies:
      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0
      react-dom: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0

  '@tanstack/virtual-core@3.13.0':
    resolution: {integrity: sha512-NBKJP3OIdmZY3COJdWkSonr50FMVIi+aj5ZJ7hI/DTpEKg2RMfo/KvP8A3B/zOSpMgIe52B5E2yn7rryULzA6g==}

  '@tsconfig/node10@1.0.11':
    resolution: {integrity: sha512-DcRjDCujK/kCk/cUe8Xz8ZSpm8mS3mNNpta+jGCA6USEDfktlNvm1+IuZ9eTcDbNk41BHwpHHeW+N1lKCz4zOw==}

  '@tsconfig/node12@1.0.11':
    resolution: {integrity: sha512-cqefuRsh12pWyGsIoBKJA9luFu3mRxCA+ORZvA4ktLSzIuCUtWVxGIuXigEwO5/ywWFMZ2QEGKWvkZG1zDMTag==}

  '@tsconfig/node14@1.0.3':
    resolution: {integrity: sha512-ysT8mhdixWK6Hw3i1V2AeRqZ5WfXg1G43mqoYlM2nc6388Fq5jcXyr5mRsqViLx/GJYdoL0bfXD8nmF+Zn/Iow==}

  '@tsconfig/node16@1.0.4':
    resolution: {integrity: sha512-vxhUy4J8lyeyinH7Azl1pdd43GJhZH/tP2weN8TntQblOY+A0XbT8DJk1/oCPuOOyg/Ja757rG0CgHcWC8OfMA==}

  '@types/babel__core@7.20.5':
    resolution: {integrity: sha512-qoQprZvz5wQFJwMDqeseRXWv3rqMvhgpbXFfVyWhbx9X47POIA6i/+dXefEmZKoAgOaTdaIgNSMqMIU61yRyzA==}

  '@types/babel__generator@7.6.8':
    resolution: {integrity: sha512-ASsj+tpEDsEiFr1arWrlN6V3mdfjRMZt6LtK/Vp/kreFLnr5QH5+DhvD5nINYZXzwJvXeGq+05iUXcAzVrqWtw==}

  '@types/babel__template@7.4.4':
    resolution: {integrity: sha512-h/NUaSyG5EyxBIp8YRxo4RMe2/qQgvyowRwVMzhYhBCONbW8PUsg4lkFMrhgZhUe5z3L3MiLDuvyJ/CaPa2A8A==}

  '@types/babel__traverse@7.20.6':
    resolution: {integrity: sha512-r1bzfrm0tomOI8g1SzvCaQHo6Lcv6zu0EA+W2kHrt8dyrHQxGzBBL4kdkzIS+jBMV+EYcMAEAqXqYaLJq5rOZg==}

  '@types/blake2b@2.1.3':
    resolution: {integrity: sha512-MFCdX0MNxFBP/xEILO5Td0kv6nI7+Q2iRWZbTL/yzH2/eDVZS5Wd1LHdsmXClvsCyzqaZfHFzZaN6BUeUCfSDA==}

  '@types/body-parser@1.19.5':
    resolution: {integrity: sha512-fB3Zu92ucau0iQ0JMCFQE7b/dv8Ot07NI3KaZIkIUNXq82k4eBAqUaneXfleGY9JWskeS9y+u0nXMyspcuQrCg==}

  '@types/connect@3.4.38':
    resolution: {integrity: sha512-K6uROf1LD88uDQqJCktA4yzL1YYAK6NgfsI0v/mTgyPKWsX1CnJ0XPSDhViejru1GcRkLWb8RlzFYJRqGUbaug==}

  '@types/cookiejar@2.1.5':
    resolution: {integrity: sha512-he+DHOWReW0nghN24E1WUqM0efK4kI9oTqDm6XmK8ZPe2djZ90BSNdGnIyCLzCPw7/pogPlGbzI2wHGGmi4O/Q==}

  '@types/deep-freeze-strict@1.1.2':
    resolution: {integrity: sha512-VvMETBojHvhX4f+ocYTySQlXMZfxKV3Jyb7iCWlWaC+exbedkv6Iv2bZZqI736qXjVguH6IH7bzwMBMfTT+zuQ==}

  '@types/eslint-scope@3.7.7':
    resolution: {integrity: sha512-MzMFlSLBqNF2gcHWO0G1vP/YQyfvrxZ0bF+u7mzUdZ1/xK4A4sru+nraZz5i3iEIk1l1uyicaDVTB4QbbEkAYg==}

  '@types/eslint@9.6.1':
    resolution: {integrity: sha512-FXx2pKgId/WyYo2jXw63kk7/+TY7u7AziEJxJAnSFzHlqTAS3Ync6SvgYAN/k4/PQpnnVuzoMuVnByKK2qp0ag==}

  '@types/estree@1.0.6':
    resolution: {integrity: sha512-AYnb1nQyY49te+VRAVgmzfcgjYS91mY5P0TKUDCLEM+gNnA+3T6rWITXRLYCpahpqSQbN5cE+gHpnPyXjHWxcw==}

  '@types/express-serve-static-core@4.19.6':
    resolution: {integrity: sha512-N4LZ2xG7DatVqhCZzOGb1Yi5lMbXSZcmdLDe9EzSndPV2HpWYWzRbaerl2n27irrm94EPpprqa8KpskPT085+A==}

  '@types/express@4.17.21':
    resolution: {integrity: sha512-ejlPM315qwLpaQlQDTjPdsUFSc6ZsP4AN6AlWnogPjQ7CVi7PYF3YVz+CY3jE2pwYf7E/7HlDAN0rV2GxTG0HQ==}

  '@types/gensync@1.0.4':
    resolution: {integrity: sha512-C3YYeRQWp2fmq9OryX+FoDy8nXS6scQ7dPptD8LnFDAUNcKWJjXQKDNJD3HVm+kOUsXhTOkpi69vI4EuAr95bA==}

  '@types/graceful-fs@4.1.9':
    resolution: {integrity: sha512-olP3sd1qOEe5dXTSaFvQG+02VdRXcdytWLAZsAq1PecU8uqQAhkrnbli7DagjtXKW/Bl7YJbUsa8MPcuc8LHEQ==}

  '@types/hast@3.0.4':
    resolution: {integrity: sha512-WPs+bbQw5aCj+x6laNGWLH3wviHtoCv/P3+otBhbOhJgG8qtpdAMlTCxLtsTWA7LH1Oh/bFCHsBn0TPS5m30EQ==}

  '@types/http-errors@2.0.4':
    resolution: {integrity: sha512-D0CFMMtydbJAegzOyHjtiKPLlvnm3iTZyZRSZoLq2mRhDdmLfIWOCYPfQJ4cu2erKghU++QvjcUjp/5h7hESpA==}

  '@types/istanbul-lib-coverage@2.0.6':
    resolution: {integrity: sha512-2QF/t/auWm0lsy8XtKVPG19v3sSOQlJe/YHZgfjb/KBBHOGSV+J2q/S671rcq9uTBrLAXmZpqJiaQbMT+zNU1w==}

  '@types/istanbul-lib-report@3.0.3':
    resolution: {integrity: sha512-NQn7AHQnk/RSLOxrBbGyJM/aVQ+pjj5HCgasFxc0K/KhoATfQ/47AyUl15I2yBUpihjmas+a+VJBOqecrFH+uA==}

  '@types/istanbul-reports@3.0.4':
    resolution: {integrity: sha512-pk2B1NWalF9toCRu6gjBzR69syFjP4Od8WRAX+0mmf9lAjCRicLOWc+ZrxZHx/0XRjotgkF9t6iaMJ+aXcOdZQ==}

  '@types/jest@29.5.14':
    resolution: {integrity: sha512-ZN+4sdnLUbo8EVvVc2ao0GFW6oVrQRPn4K2lglySj7APvSrgzxHiNNK99us4WDMi57xxA2yggblIAMNhXOotLQ==}

  '@types/js-yaml@4.0.9':
    resolution: {integrity: sha512-k4MGaQl5TGo/iipqb2UDG2UwjXziSWkh0uysQelTlJpX1qGlpUZYm8PnO4DxG1qBomtJUdYJ6qR6xdIah10JLg==}

  '@types/json-schema@7.0.15':
    resolution: {integrity: sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==}

  '@types/json5@0.0.29':
    resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}

  '@types/lodash.isequal@4.5.8':
    resolution: {integrity: sha512-uput6pg4E/tj2LGxCZo9+y27JNyB2OZuuI/T5F+ylVDYuqICLG2/ktjxx0v6GvVntAf8TvEzeQLcV0ffRirXuA==}

  '@types/lodash@4.17.15':
    resolution: {integrity: sha512-w/P33JFeySuhN6JLkysYUK2gEmy9kHHFN7E8ro0tkfmlDOgxBDzWEZ/J8cWA+fHqFevpswDTFZnDx+R9lbL6xw==}

  '@types/mdast@4.0.4':
    resolution: {integrity: sha512-kGaNbPh1k7AFzgpud/gMdvIm5xuECykRR+JnWKQno9TAXVa6WIVCGTPvYGekIDL4uwCZQSYbUxNBSb1aUo79oA==}

  '@types/methods@1.1.4':
    resolution: {integrity: sha512-ymXWVrDiCxTBE3+RIrrP533E70eA+9qu7zdWoHuOmGujkYtzf4HQF96b8nwHLqhuf4ykX61IGRIB38CC6/sImQ==}

  '@types/mime@1.3.5':
    resolution: {integrity: sha512-/pyBZWSLD2n0dcHE3hq8s8ZvcETHtEuF+3E7XVt0Ig2nvsVQXdghHVcEkIWjy9A0wKfTn97a/PSDYohKIlnP/w==}

  '@types/node@12.20.55':
    resolution: {integrity: sha512-J8xLz7q2OFulZ2cyGTLE1TbbZcjpno7FaN6zdJNrgAdrJ+DZzh/uFR6YrTb4C+nXakvud8Q4+rbhoIWlYQbUFQ==}

  '@types/node@20.17.17':
    resolution: {integrity: sha512-/WndGO4kIfMicEQLTi/mDANUu/iVUhT7KboZPdEqqHQ4aTS+3qT3U5gIqWDFV+XouorjfgGqvKILJeHhuQgFYg==}

  '@types/node@22.13.1':
    resolution: {integrity: sha512-jK8uzQlrvXqEU91UxiK5J7pKHyzgnI1Qnl0QDHIgVGuolJhRb9EEl28Cj9b3rGR8B2lhFCtvIm5os8lFnO/1Ew==}

  '@types/node@22.7.5':
    resolution: {integrity: sha512-jML7s2NAzMWc//QSJ1a3prpk78cOPchGvXJsC3C6R6PSMoooztvRVQEz89gmBTBY1SPMaqo5teB4uNHPdetShQ==}

  '@types/prop-types@15.7.14':
    resolution: {integrity: sha512-gNMvNH49DJ7OJYv+KAKn0Xp45p8PLl6zo2YnvDIbTd4J6MER2BmWN49TG7n9LvkyihINxeKW8+3bfS2yDC9dzQ==}

  '@types/qs@6.9.18':
    resolution: {integrity: sha512-kK7dgTYDyGqS+e2Q4aK9X3D7q234CIZ1Bv0q/7Z5IwRDoADNU81xXJK/YVyLbLTZCoIwUoDoffFeF+p/eIklAA==}

  '@types/range-parser@1.2.7':
    resolution: {integrity: sha512-hKormJbkJqzQGhziax5PItDUTMAM9uE2XXQmM37dyd4hVM+5aVl7oVxMVUiVQn2oCQFN/LKCZdvSM0pFRqbSmQ==}

  '@types/react-dom@18.3.5':
    resolution: {integrity: sha512-P4t6saawp+b/dFrUr2cvkVsfvPguwsxtH6dNIYRllMsefqFzkZk5UIjzyDOv5g1dXIPdG4Sp1yCR4Z6RCUsG/Q==}
    peerDependencies:
      '@types/react': ^18.0.0

  '@types/react@18.3.18':
    resolution: {integrity: sha512-t4yC+vtgnkYjNSKlFx1jkAhH8LgTo2N/7Qvi83kdEaUtMDiwpbLAktKDaAMlRcJ5eSxZkH74eEGt1ky31d7kfQ==}

  '@types/semver@7.5.8':
    resolution: {integrity: sha512-I8EUhyrgfLrcTkzV3TSsGyl1tSuPrEDzr0yd5m90UgNxQkyDXULk3b6MlQqTCpZpNtWe1K0hzclnZkTcLBe2UQ==}

  '@types/send@0.17.4':
    resolution: {integrity: sha512-x2EM6TJOybec7c52BX0ZspPodMsQUd5L6PRwOunVyVUhXiBSKf3AezDL8Dgvgt5o0UfKNfuA0eMLr2wLT4AiBA==}

  '@types/serve-static@1.15.7':
    resolution: {integrity: sha512-W8Ym+h8nhuRwaKPaDw34QUkwsGi6Rc4yYqvKFo5rm2FUEhCFbzVWrxXUxuKK8TASjWsysJY0nsmNCGhCOIsrOw==}

  '@types/stack-utils@2.0.3':
    resolution: {integrity: sha512-9aEbYZ3TbYMznPdcdr3SmIrLXwC/AKZXQeCf9Pgao5CKb8CyHuEX5jzWPTkvregvhRJHcpRO6BFoGW9ycaOkYw==}

  '@types/superagent@8.1.9':
    resolution: {integrity: sha512-pTVjI73witn+9ILmoJdajHGW2jkSaOzhiFYF1Rd3EQ94kymLqB9PjD9ISg7WaALC7+dCHT0FGe9T2LktLq/3GQ==}

  '@types/supertest@6.0.2':
    resolution: {integrity: sha512-137ypx2lk/wTQbW6An6safu9hXmajAifU/s7szAHLN/FeIm5w7yR0Wkl9fdJMRSHwOn4HLAI0DaB2TOORuhPDg==}

  '@types/trusted-types@2.0.7':
    resolution: {integrity: sha512-ScaPdn1dQczgbl0QFTeTOmVHFULt394XJgOQNoyVhZ6r2vLnMLJfBPd53SB52T/3G36VI1/g2MZaX0cwDuXsfw==}

  '@types/unist@3.0.3':
    resolution: {integrity: sha512-ko/gIFJRv177XgZsZcBwnqJN5x/Gien8qNOn0D5bQU/zAzVf9Zt3BlcUiLqhV9y4ARk0GbT3tnUiPNgnTXzc/Q==}

  '@types/validator@13.12.2':
    resolution: {integrity: sha512-6SlHBzUW8Jhf3liqrGGXyTJSIFe4nqlJ5A5KaMZ2l/vbM3Wh3KSybots/wfWVzNLK4D1NZluDlSQIbIEPx6oyA==}

  '@types/webpack-env@1.18.8':
    resolution: {integrity: sha512-G9eAoJRMLjcvN4I08wB5I7YofOb/kaJNd5uoCMX+LbKXTPCF+ZIHuqTnFaK9Jz1rgs035f9JUPUhNFtqgucy/A==}

  '@types/ws@8.5.14':
    resolution: {integrity: sha512-bd/YFLW+URhBzMXurx7lWByOu+xzU9+kb3RboOteXYDfW+tr+JZa99OyNmPINEGB/ahzKrEuc8rcv4gnpJmxTw==}

  '@types/yargs-parser@21.0.3':
    resolution: {integrity: sha512-I4q9QU9MQv4oEOz4tAHJtNz1cwuLxn2F3xcc2iV5WdqLPpUnj30aUuxt1mAxYTG+oe8CZMV/+6rU4S4gRDzqtQ==}

  '@types/yargs@17.0.33':
    resolution: {integrity: sha512-WpxBCKWPLr4xSsHgz511rFJAM+wS28w2zEO1QDNY5zM/S8ok70NNfztH0xwhqKyaK0OHCbN98LDAZuy1ctxDkA==}

  '@typescript-eslint/eslint-plugin@7.18.0':
    resolution: {integrity: sha512-94EQTWZ40mzBc42ATNIBimBEDltSJ9RQHCC8vc/PDbxi4k8dVwUAv4o98dk50M1zB+JGFxp43FP7f8+FP8R6Sw==}
    engines: {node: ^18.18.0 || >=20.0.0}
    peerDependencies:
      '@typescript-eslint/parser': ^7.0.0
      eslint: ^8.56.0
      typescript: '*'
    peerDependenciesMeta:
      typescript:
        optional: true

  '@typescript-eslint/eslint-plugin@7.2.0':
    resolution: {integrity: sha512-mdekAHOqS9UjlmyF/LSs6AIEvfceV749GFxoBAjwAv0nkevfKHWQFDMcBZWUiIC5ft6ePWivXoS36aKQ0Cy3sw==}
    engines: {node: ^16.0.0 || >=18.0.0}
    peerDependencies:
      '@typescript-eslint/parser': ^7.0.0
      eslint: ^8.56.0
      typescript: '*'
    peerDependenciesMeta:
      typescript:
        optional: true

  '@typescript-eslint/parser@7.18.0':
    resolution: {integrity: sha512-4Z+L8I2OqhZV8qA132M4wNL30ypZGYOQVBfMgxDH/K5UX0PNqTu1c6za9ST5r9+tavvHiTWmBnKzpCJ/GlVFtg==}
    engines: {node: ^18.18.0 || >=20.0.0}
    peerDependencies:
      eslint: ^8.56.0
      typescript: '*'
    peerDependenciesMeta:
      typescript:
        optional: true

  '@typescript-eslint/parser@7.2.0':
    resolution: {integrity: sha512-5FKsVcHTk6TafQKQbuIVkXq58Fnbkd2wDL4LB7AURN7RUOu1utVP+G8+6u3ZhEroW3DF6hyo3ZEXxgKgp4KeCg==}
    engines: {node: ^16.0.0 || >=18.0.0}
    peerDependencies:
      eslint: ^8.56.0
      typescript: '*'
    peerDependenciesMeta:
      typescript:
        optional: true

  '@typescript-eslint/scope-manager@7.18.0':
    resolution: {integrity: sha512-jjhdIE/FPF2B7Z1uzc6i3oWKbGcHb87Qw7AWj6jmEqNOfDFbJWtjt/XfwCpvNkpGWlcJaog5vTR+VV8+w9JflA==}
    engines: {node: ^18.18.0 || >=20.0.0}

  '@typescript-eslint/scope-manager@7.2.0':
    resolution: {integrity: sha512-Qh976RbQM/fYtjx9hs4XkayYujB/aPwglw2choHmf3zBjB4qOywWSdt9+KLRdHubGcoSwBnXUH2sR3hkyaERRg==}
    engines: {node: ^16.0.0 || >=18.0.0}

  '@typescript-eslint/type-utils@7.18.0':
    resolution: {integrity: sha512-XL0FJXuCLaDuX2sYqZUUSOJ2sG5/i1AAze+axqmLnSkNEVMVYLF+cbwlB2w8D1tinFuSikHmFta+P+HOofrLeA==}
    engines: {node: ^18.18.0 || >=20.0.0}
    peerDependencies:
      eslint: ^8.56.0
      typescript: '*'
    peerDependenciesMeta:
      typescript:
        optional: true

  '@typescript-eslint/type-utils@7.2.0':
    resolution: {integrity: sha512-xHi51adBHo9O9330J8GQYQwrKBqbIPJGZZVQTHHmy200hvkLZFWJIFtAG/7IYTWUyun6DE6w5InDReePJYJlJA==}
    engines: {node: ^16.0.0 || >=18.0.0}
    peerDependencies:
      eslint: ^8.56.0
      typescript: '*'
    peerDependenciesMeta:
      typescript:
        optional: true

  '@typescript-eslint/types@7.18.0':
    resolution: {integrity: sha512-iZqi+Ds1y4EDYUtlOOC+aUmxnE9xS/yCigkjA7XpTKV6nCBd3Hp/PRGGmdwnfkV2ThMyYldP1wRpm/id99spTQ==}
    engines: {node: ^18.18.0 || >=20.0.0}

  '@typescript-eslint/types@7.2.0':
    resolution: {integrity: sha512-XFtUHPI/abFhm4cbCDc5Ykc8npOKBSJePY3a3s+lwumt7XWJuzP5cZcfZ610MIPHjQjNsOLlYK8ASPaNG8UiyA==}
    engines: {node: ^16.0.0 || >=18.0.0}

  '@typescript-eslint/typescript-estree@7.18.0':
    resolution: {integrity: sha512-aP1v/BSPnnyhMHts8cf1qQ6Q1IFwwRvAQGRvBFkWlo3/lH29OXA3Pts+c10nxRxIBrDnoMqzhgdwVe5f2D6OzA==}
    engines: {node: ^18.18.0 || >=20.0.0}
    peerDependencies:
      typescript: '*'
    peerDependenciesMeta:
      typescript:
        optional: true

  '@typescript-eslint/typescript-estree@7.2.0':
    resolution: {integrity: sha512-cyxS5WQQCoBwSakpMrvMXuMDEbhOo9bNHHrNcEWis6XHx6KF518tkF1wBvKIn/tpq5ZpUYK7Bdklu8qY0MsFIA==}
    engines: {node: ^16.0.0 || >=18.0.0}
    peerDependencies:
      typescript: '*'
    peerDependenciesMeta:
      typescript:
        optional: true

  '@typescript-eslint/utils@7.18.0':
    resolution: {integrity: sha512-kK0/rNa2j74XuHVcoCZxdFBMF+aq/vH83CXAOHieC+2Gis4mF8jJXT5eAfyD3K0sAxtPuwxaIOIOvhwzVDt/kw==}
    engines: {node: ^18.18.0 || >=20.0.0}
    peerDependencies:
      eslint: ^8.56.0

  '@typescript-eslint/utils@7.2.0':
    resolution: {integrity: sha512-YfHpnMAGb1Eekpm3XRK8hcMwGLGsnT6L+7b2XyRv6ouDuJU1tZir1GS2i0+VXRatMwSI1/UfcyPe53ADkU+IuA==}
    engines: {node: ^16.0.0 || >=18.0.0}
    peerDependencies:
      eslint: ^8.56.0

  '@typescript-eslint/visitor-keys@7.18.0':
    resolution: {integrity: sha512-cDF0/Gf81QpY3xYyJKDV14Zwdmid5+uuENhjH2EqFaF0ni+yAyq/LzMaIJdhNJXZI7uLzwIlA+V7oWoyn6Curg==}
    engines: {node: ^18.18.0 || >=20.0.0}

  '@typescript-eslint/visitor-keys@7.2.0':
    resolution: {integrity: sha512-c6EIQRHhcpl6+tO8EMR+kjkkV+ugUNXOmeASA1rlzkd8EPIriavpWoiEz1HR/VLhbVIdhqnV6E7JZm00cBDx2A==}
    engines: {node: ^16.0.0 || >=18.0.0}

  '@uiw/react-json-view@2.0.0-alpha.30':
    resolution: {integrity: sha512-ufvvirUQcITU9s4R12b7hn/t7ngLCYp1KbBxE+eAD35o3Ey+uxfKvgWmIwGFhV3hFXXxMJ8SHQKwl/ywNCHsDA==}
    peerDependencies:
      '@babel/runtime': '>=7.10.0'
      react: '>=18.0.0'
      react-dom: '>=18.0.0'

  '@ungap/structured-clone@1.3.0':
    resolution: {integrity: sha512-WmoN8qaIAo7WTYWbAZuG8PYEhn5fkz7dZrqTBZ7dtt//lL2Gwms1IcnQ5yHqjDfX8Ft5j4YzDM23f87zBfDe9g==}

  '@webassemblyjs/ast@1.14.1':
    resolution: {integrity: sha512-nuBEDgQfm1ccRp/8bCQrx1frohyufl4JlbMMZ4P1wpeOfDhF6FQkxZJ1b/e+PLwr6X1Nhw6OLme5usuBWYBvuQ==}

  '@webassemblyjs/floating-point-hex-parser@1.13.2':
    resolution: {integrity: sha512-6oXyTOzbKxGH4steLbLNOu71Oj+C8Lg34n6CqRvqfS2O71BxY6ByfMDRhBytzknj9yGUPVJ1qIKhRlAwO1AovA==}

  '@webassemblyjs/helper-api-error@1.13.2':
    resolution: {integrity: sha512-U56GMYxy4ZQCbDZd6JuvvNV/WFildOjsaWD3Tzzvmw/mas3cXzRJPMjP83JqEsgSbyrmaGjBfDtV7KDXV9UzFQ==}

  '@webassemblyjs/helper-buffer@1.14.1':
    resolution: {integrity: sha512-jyH7wtcHiKssDtFPRB+iQdxlDf96m0E39yb0k5uJVhFGleZFoNw1c4aeIcVUPPbXUVJ94wwnMOAqUHyzoEPVMA==}

  '@webassemblyjs/helper-numbers@1.13.2':
    resolution: {integrity: sha512-FE8aCmS5Q6eQYcV3gI35O4J789wlQA+7JrqTTpJqn5emA4U2hvwJmvFRC0HODS+3Ye6WioDklgd6scJ3+PLnEA==}

  '@webassemblyjs/helper-wasm-bytecode@1.13.2':
    resolution: {integrity: sha512-3QbLKy93F0EAIXLh0ogEVR6rOubA9AoZ+WRYhNbFyuB70j3dRdwH9g+qXhLAO0kiYGlg3TxDV+I4rQTr/YNXkA==}

  '@webassemblyjs/helper-wasm-section@1.14.1':
    resolution: {integrity: sha512-ds5mXEqTJ6oxRoqjhWDU83OgzAYjwsCV8Lo/N+oRsNDmx/ZDpqalmrtgOMkHwxsG0iI//3BwWAErYRHtgn0dZw==}

  '@webassemblyjs/ieee754@1.13.2':
    resolution: {integrity: sha512-4LtOzh58S/5lX4ITKxnAK2USuNEvpdVV9AlgGQb8rJDHaLeHciwG4zlGr0j/SNWlr7x3vO1lDEsuePvtcDNCkw==}

  '@webassemblyjs/leb128@1.13.2':
    resolution: {integrity: sha512-Lde1oNoIdzVzdkNEAWZ1dZ5orIbff80YPdHx20mrHwHrVNNTjNr8E3xz9BdpcGqRQbAEa+fkrCb+fRFTl/6sQw==}

  '@webassemblyjs/utf8@1.13.2':
    resolution: {integrity: sha512-3NQWGjKTASY1xV5m7Hr0iPeXD9+RDobLll3T9d2AO+g3my8xy5peVyjSag4I50mR1bBSN/Ct12lo+R9tJk0NZQ==}

  '@webassemblyjs/wasm-edit@1.14.1':
    resolution: {integrity: sha512-RNJUIQH/J8iA/1NzlE4N7KtyZNHi3w7at7hDjvRNm5rcUXa00z1vRz3glZoULfJ5mpvYhLybmVcwcjGrC1pRrQ==}

  '@webassemblyjs/wasm-gen@1.14.1':
    resolution: {integrity: sha512-AmomSIjP8ZbfGQhumkNvgC33AY7qtMCXnN6bL2u2Js4gVCg8fp735aEiMSBbDR7UQIj90n4wKAFUSEd0QN2Ukg==}

  '@webassemblyjs/wasm-opt@1.14.1':
    resolution: {integrity: sha512-PTcKLUNvBqnY2U6E5bdOQcSM+oVP/PmrDY9NzowJjislEjwP/C4an2303MCVS2Mg9d3AJpIGdUFIQQWbPds0Sw==}

  '@webassemblyjs/wasm-parser@1.14.1':
    resolution: {integrity: sha512-JLBl+KZ0R5qB7mCnud/yyX08jWFw5MsoalJ1pQ4EdFlgj9VdXKGuENGsiCIjegI1W7p91rUlcB/LB5yRJKNTcQ==}

  '@webassemblyjs/wast-printer@1.14.1':
    resolution: {integrity: sha512-kPSSXE6De1XOR820C90RIo2ogvZG+c3KiHzqUoO/F34Y2shGzesfqv7o57xrxovZJH/MetF5UjroJ/R/3isoiw==}

  '@xtuc/ieee754@1.2.0':
    resolution: {integrity: sha512-DX8nKgqcGwsc0eJSqYt5lwP4DH5FlHnmuWWBRy7X0NcaGR0ZtuyeESgMwTYVEtxmsNGY+qit4QYT/MIYTOTPeA==}

  '@xtuc/long@4.2.2':
    resolution: {integrity: sha512-NuHqBY1PB/D8xU6s/thBgOAiAP7HOYDQ32+BFZILJ8ivkUkAHQnWfn6WhL79Owj1qmUnoN/YPhktdIoucipkAQ==}

  abitype@0.8.7:
    resolution: {integrity: sha512-wQ7hV8Yg/yKmGyFpqrNZufCxbszDe5es4AZGYPBitocfSqXtjrTG9JMWFcc4N30ukl2ve48aBTwt7NJxVQdU3w==}
    peerDependencies:
      typescript: '>=5.0.4'
      zod: ^3 >=3.19.1
    peerDependenciesMeta:
      zod:
        optional: true

  abort-controller@3.0.0:
    resolution: {integrity: sha512-h8lQ8tacZYnR3vNQTgibj+tODHI5/+l06Au2Pcriv/Gmet0eaj4TwWH41sO9wnHDiQsEj19q0drzdWdeAHtweg==}
    engines: {node: '>=6.5'}

  accepts@1.3.8:
    resolution: {integrity: sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==}
    engines: {node: '>= 0.6'}

  acorn-jsx@5.3.2:
    resolution: {integrity: sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==}
    peerDependencies:
      acorn: ^6.0.0 || ^7.0.0 || ^8.0.0

  acorn-walk@8.3.4:
    resolution: {integrity: sha512-ueEepnujpqee2o5aIYnvHU6C0A42MNdsIDeqy5BydrkuC5R1ZuUFnm27EeFJGoEHJQgn3uleRvmTXaJgfXbt4g==}
    engines: {node: '>=0.4.0'}

  acorn@8.14.0:
    resolution: {integrity: sha512-cl669nCJTZBsL97OF4kUQm5g5hC2uihk0NxY3WENAC0TYdILVkAyHymAntgxGkl7K+t0cXIrH5siy5S4XkFycA==}
    engines: {node: '>=0.4.0'}
    hasBin: true

  aes-js@4.0.0-beta.5:
    resolution: {integrity: sha512-G965FqalsNyrPqgEGON7nIx1e/OVENSgiEIzyC63haUMuvNnwIgIjMs52hlTCKhkBny7A2ORNlfY9Zu+jmGk1Q==}

  ajv-formats@2.1.1:
    resolution: {integrity: sha512-Wx0Kx52hxE7C18hkMEggYlEifqWZtYaRgouJor+WMdPnQyEK13vgEWyVNup7SoeeoLMsr4kf5h6dOW11I15MUA==}
    peerDependencies:
      ajv: ^8.0.0
    peerDependenciesMeta:
      ajv:
        optional: true

  ajv-keywords@3.5.2:
    resolution: {integrity: sha512-5p6WTN0DdTGVQk6VjcEju19IgaHudalcfabD7yhDGeA6bcQnmL+CpveLJq/3hvfwd1aof6L386Ougkx6RfyMIQ==}
    peerDependencies:
      ajv: ^6.9.1

  ajv-keywords@5.1.0:
    resolution: {integrity: sha512-YCS/JNFAUyr5vAuhk1DWm1CBxRHW9LbJ2ozWeemrIqpbsqKjHVxYPyi5GC0rjZIT5JxJ3virVTS8wk4i/Z+krw==}
    peerDependencies:
      ajv: ^8.8.2

  ajv@6.12.6:
    resolution: {integrity: sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==}

  ajv@8.12.0:
    resolution: {integrity: sha512-sRu1kpcO9yLtYxBKvqfTeh9KzZEwO3STyX1HT+4CaDzC6HpTGYhIhPIzj9XuKU7KYDwnaeh5hcOwjy1QuJzBPA==}

  ajv@8.17.1:
    resolution: {integrity: sha512-B/gBuNg5SiMTrPkC+A2+cW0RszwxYmn6VYxB/inlBStS5nx6xHIt/ehKRhIMhqusl7a8LjQoZnjCs5vhwxOQ1g==}

  ansi-colors@4.1.3:
    resolution: {integrity: sha512-/6w/C21Pm1A7aZitlI5Ni/2J6FFQN8i1Cvz3kHABAAbw93v/NlvKdVOqz7CCWz/3iv/JplRSEEZ83XION15ovw==}
    engines: {node: '>=6'}

  ansi-escapes@4.3.2:
    resolution: {integrity: sha512-gKXj5ALrKWQLsYG9jlTRmR/xKluxHV+Z9QEwNIgCfM1/uwPMCuzVVnh5mwTd+OuBZcwSIMbqssNWRm1lE51QaQ==}
    engines: {node: '>=8'}

  ansi-regex@5.0.1:
    resolution: {integrity: sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==}
    engines: {node: '>=8'}

  ansi-regex@6.1.0:
    resolution: {integrity: sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==}
    engines: {node: '>=12'}

  ansi-styles@4.3.0:
    resolution: {integrity: sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==}
    engines: {node: '>=8'}

  ansi-styles@5.2.0:
    resolution: {integrity: sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==}
    engines: {node: '>=10'}

  ansi-styles@6.2.1:
    resolution: {integrity: sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==}
    engines: {node: '>=12'}

  any-promise@1.3.0:
    resolution: {integrity: sha512-7UvmKalWRt1wgjL1RrGxoSJW/0QZFIegpeGvZG9kjp8vrRu55XTHbwnqq2GpXm9uLbcuhxm3IqX9OB4MZR1b2A==}

  anymatch@3.1.3:
    resolution: {integrity: sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==}
    engines: {node: '>= 8'}

  append-field@1.0.0:
    resolution: {integrity: sha512-klpgFSWLW1ZEs8svjfb7g4qWY0YS5imI82dTg+QahUvJ8YqAY0P10Uk8tTyh9ZGuYEZEMaeJYCF5BFuX552hsw==}

  arg@4.1.3:
    resolution: {integrity: sha512-58S9QDqG0Xx27YwPSt9fJxivjYl432YCwfDMfZ+71RAqUrZef7LrKQZ3LHLOwCS4FLNBplP533Zx895SeOCHvA==}

  arg@5.0.2:
    resolution: {integrity: sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg==}

  argparse@1.0.10:
    resolution: {integrity: sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==}

  argparse@2.0.1:
    resolution: {integrity: sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==}

  aria-query@5.3.2:
    resolution: {integrity: sha512-COROpnaoap1E2F000S62r6A60uHZnmlvomhfyT2DlTcrY1OrBKn2UhH7qn5wTC9zMvD0AY7csdPSNwKP+7WiQw==}
    engines: {node: '>= 0.4'}

  array-buffer-byte-length@1.0.2:
    resolution: {integrity: sha512-LHE+8BuR7RYGDKvnrmcuSq3tDcKv9OFEXQt/HpbZhY7V6h0zlUXutnAD82GiFx9rdieCMjkvtcsPqBwgUl1Iiw==}
    engines: {node: '>= 0.4'}

  array-flatten@1.1.1:
    resolution: {integrity: sha512-PCVAQswWemu6UdxsDFFX/+gVeYqKAod3D3UVm91jHwynguOwAvYPhx8nNlM++NqRcK6CxxpUafjmhIdKiHibqg==}

  array-includes@3.1.8:
    resolution: {integrity: sha512-itaWrbYbqpGXkGhZPGUulwnhVf5Hpy1xiCFsGqyIGglbBxmG5vSjxQen3/WGOjPpNEv1RtBLKxbmVXm8HpJStQ==}
    engines: {node: '>= 0.4'}

  array-timsort@1.0.3:
    resolution: {integrity: sha512-/+3GRL7dDAGEfM6TseQk/U+mi18TU2Ms9I3UlLdUMhz2hbvGNTKdj9xniwXfUqgYhHxRx0+8UnKkvlNwVU+cWQ==}

  array-union@2.1.0:
    resolution: {integrity: sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==}
    engines: {node: '>=8'}

  array.prototype.findlast@1.2.5:
    resolution: {integrity: sha512-CVvd6FHg1Z3POpBLxO6E6zr+rSKEQ9L6rZHAaY7lLfhKsWYUBBOuMs0e9o24oopj6H+geRCX0YJ+TJLBK2eHyQ==}
    engines: {node: '>= 0.4'}

  array.prototype.findlastindex@1.2.5:
    resolution: {integrity: sha512-zfETvRFA8o7EiNn++N5f/kaCw221hrpGsDmcpndVupkPzEc1Wuf3VgC0qby1BbHs7f5DVYjgtEU2LLh5bqeGfQ==}
    engines: {node: '>= 0.4'}

  array.prototype.flat@1.3.3:
    resolution: {integrity: sha512-rwG/ja1neyLqCuGZ5YYrznA62D4mZXg0i1cIskIUKSiqF3Cje9/wXAls9B9s1Wa2fomMsIv8czB8jZcPmxCXFg==}
    engines: {node: '>= 0.4'}

  array.prototype.flatmap@1.3.3:
    resolution: {integrity: sha512-Y7Wt51eKJSyi80hFrJCePGGNo5ktJCslFuboqJsbf57CCPcm5zztluPlc4/aD8sWsKvlwatezpV4U1efk8kpjg==}
    engines: {node: '>= 0.4'}

  array.prototype.tosorted@1.1.4:
    resolution: {integrity: sha512-p6Fx8B7b7ZhL/gmUsAy0D15WhvDccw3mnGNbZpi3pmeJdxtWsj2jEaI4Y6oo3XiHfzuSgPwKc04MYt6KgvC/wA==}
    engines: {node: '>= 0.4'}

  arraybuffer.prototype.slice@1.0.4:
    resolution: {integrity: sha512-BNoCY6SXXPQ7gF2opIP4GBE+Xw7U+pHMYKuzjgCN3GwiaIR09UUeKfheyIry77QtrCBlC0KK0q5/TER/tYh3PQ==}
    engines: {node: '>= 0.4'}

  asap@2.0.6:
    resolution: {integrity: sha512-BSHWgDSAiKs50o2Re8ppvp3seVHXSRM44cdSsT9FfNEUUZLOGWVCsiWaRPWM1Znn+mqZ1OfVZ3z3DWEzSp7hRA==}

  ast-types-flow@0.0.8:
    resolution: {integrity: sha512-OH/2E5Fg20h2aPrbe+QL8JZQFko0YZaF+j4mnQ7BGhfavO7OpSLa8a0y9sBwomHdSbkhTS8TQNayBfnW5DwbvQ==}

  async-function@1.0.0:
    resolution: {integrity: sha512-hsU18Ae8CDTR6Kgu9DYf0EbCr/a5iGL0rytQDobUcdpYOKokk8LEjVphnXkDkgpi0wYVsqrXuP0bZxJaTqdgoA==}
    engines: {node: '>= 0.4'}

  async@3.2.6:
    resolution: {integrity: sha512-htCUDlxyyCLMgaM3xXg0C0LW2xqfuQ6p05pCEIsXuyQ+a1koYKTuBMzRNwmybfLgvJDMd0r1LTn4+E0Ti6C2AA==}

  asynckit@0.4.0:
    resolution: {integrity: sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q==}

  available-typed-arrays@1.0.7:
    resolution: {integrity: sha512-wvUjBtSGN7+7SjNpq/9M2Tg350UZD3q62IFZLbRAR1bSMlCo1ZaeW+BJ+D090e4hIIZLBcTDWe4Mh4jvUDajzQ==}
    engines: {node: '>= 0.4'}

  axe-core@4.10.2:
    resolution: {integrity: sha512-RE3mdQ7P3FRSe7eqCWoeQ/Z9QXrtniSjp1wUjt5nRC3WIpz5rSCve6o3fsZ2aCpJtrZjSZgjwXAoTO5k4tEI0w==}
    engines: {node: '>=4'}

  axios@1.7.9:
    resolution: {integrity: sha512-LhLcE7Hbiryz8oMDdDptSrWowmB4Bl6RCt6sIJKpRB4XtVf0iEgewX3au/pJqm+Py1kCASkb/FFKjxQaLtxJvw==}

  axobject-query@4.1.0:
    resolution: {integrity: sha512-qIj0G9wZbMGNLjLmg1PT6v2mE9AH2zlnADJD/2tC6E00hgmhUOfEB6greHPAfLRSufHqROIUTkw6E+M3lH0PTQ==}
    engines: {node: '>= 0.4'}

  b4a@1.6.7:
    resolution: {integrity: sha512-OnAYlL5b7LEkALw87fUVafQw5rVR9RjwGd4KUwNQ6DrrNmaVaUCgLipfVlzrPQ4tWOR9P0IXGNOx50jYCCdSJg==}

  babel-jest@29.7.0:
    resolution: {integrity: sha512-BrvGY3xZSwEcCzKvKsCi2GgHqDqsYkOP4/by5xCgIwGXQxIEh+8ew3gmrE1y7XRR6LHZIj6yLYnUi/mm2KXKBg==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
    peerDependencies:
      '@babel/core': ^7.8.0

  babel-jest@30.0.0-alpha.6:
    resolution: {integrity: sha512-WOQkqpBz2q8d/AT6D6rZXW5xnKHDmk3kIukaXlzUyoBBIvLh1SEvi2RGS4fboEtS0kNkyL+zf1rSfkt5OCIgmw==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}
    peerDependencies:
      '@babel/core': ^7.11.0

  babel-plugin-istanbul@6.1.1:
    resolution: {integrity: sha512-Y1IQok9821cC9onCx5otgFfRm7Lm+I+wwxOx738M/WLPZ9Q42m4IG5W0FNX8WLL2gYMZo3JkuXIH2DOpWM+qwA==}
    engines: {node: '>=8'}

  babel-plugin-istanbul@7.0.0:
    resolution: {integrity: sha512-C5OzENSx/A+gt7t4VH1I2XsflxyPUmXRFPKBxt33xncdOmq7oROVM3bZv9Ysjjkv8OJYDMa+tKuKMvqU/H3xdw==}
    engines: {node: '>=12'}

  babel-plugin-jest-hoist@29.6.3:
    resolution: {integrity: sha512-ESAc/RJvGTFEzRwOTT4+lNDk/GNHMkKbNzsvT0qKRfDyyYTskxB5rnU2njIDYVxXCBHHEI1c0YwHob3WaYujOg==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  babel-plugin-jest-hoist@30.0.0-alpha.6:
    resolution: {integrity: sha512-e/aPv0pmnvJqXM5SfCBpyMwZFEZrKW1Mb4unwTkxewk6/0TjwBk6l3B3F9H9OKZ3ErhkH4b+Epd3IIM5E53I2g==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  babel-preset-current-node-syntax@1.1.0:
    resolution: {integrity: sha512-ldYss8SbBlWva1bs28q78Ju5Zq1F+8BrqBZZ0VFhLBvhh6lCpC2o3gDJi/5DRLs9FgYZCnmPYIVFU4lRXCkyUw==}
    peerDependencies:
      '@babel/core': ^7.0.0

  babel-preset-jest@29.6.3:
    resolution: {integrity: sha512-0B3bhxR6snWXJZtR/RliHTDPRgn1sNHOR0yVtq/IiQFyuOVjFS+wuio/R4gSNkyYmKmJB4wGZv2NZanmKmTnNA==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
    peerDependencies:
      '@babel/core': ^7.0.0

  babel-preset-jest@30.0.0-alpha.6:
    resolution: {integrity: sha512-Xsis7RI2oT2zlyCIEzMtjDiES0wKoQxTUo5BGzx1q3ZemnDE1/7xTC4/lI4eBLmAtwk/hpZLRYwltvbQEvyRWw==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}
    peerDependencies:
      '@babel/core': ^7.11.0

  balanced-match@1.0.2:
    resolution: {integrity: sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==}

  base-x@3.0.10:
    resolution: {integrity: sha512-7d0s06rR9rYaIWHkpfLIFICM/tkSVdoPC9qYAQRpxn9DdKNWNsKC0uk++akckyLq16Tx2WIinnZ6WRriAt6njQ==}

  base-x@4.0.0:
    resolution: {integrity: sha512-FuwxlW4H5kh37X/oW59pwTzzTKRzfrrQwhmyspRM7swOEZcHtDZSCt45U6oKgtuFE+WYPblePMVIPR4RZrh/hw==}

  base-x@5.0.0:
    resolution: {integrity: sha512-sMW3VGSX1QWVFA6l8U62MLKz29rRfpTlYdCqLdpLo1/Yd4zZwSbnUaDfciIAowAqvq7YFnWq9hrhdg1KYgc1lQ==}

  base64-arraybuffer@1.0.2:
    resolution: {integrity: sha512-I3yl4r9QB5ZRY3XuJVEPfc2XhZO6YweFPI+UovAzn+8/hb3oJ6lnysaFcjVpkCPfVWFUDvoZ8kmVDP7WyRtYtQ==}
    engines: {node: '>= 0.6.0'}

  base64-js@1.5.1:
    resolution: {integrity: sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==}

  bech32@1.1.4:
    resolution: {integrity: sha512-s0IrSOzLlbvX7yp4WBfPITzpAU8sqQcpsmwXDiKwrG4r491vwCO/XpejasRNl0piBMe/DvP4Tz0mIS/X1DPJBQ==}

  bech32@2.0.0:
    resolution: {integrity: sha512-LcknSilhIGatDAsY1ak2I8VtGaHNhgMSYVxFrGLXv+xLHytaKZKcaUJJUE7qmBr7h33o5YQwP55pMI0xmkpJwg==}

  better-path-resolve@1.0.0:
    resolution: {integrity: sha512-pbnl5XzGBdrFU/wT4jqmJVPn2B6UHPBOhzMQkY/SPUPB6QtUXtmBHBIwCbXJol93mOpGMnQyP/+BB19q04xj7g==}
    engines: {node: '>=4'}

  big.js@5.2.2:
    resolution: {integrity: sha512-vyL2OymJxmarO8gxMr0mhChsO9QGwhynfuu4+MHTAW6czfq9humCB7rKpUjDd9YUiDPU4mzpyupFSvOClAwbmQ==}

  binary-extensions@2.3.0:
    resolution: {integrity: sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==}
    engines: {node: '>=8'}

  bindings@1.5.0:
    resolution: {integrity: sha512-p2q/t/mhvuOj/UeLlV6566GD/guowlr0hHxClI0W9m7MWYkL1F0hLo+0Aexs9HSPCtR1SXQ0TD3MMKrXZajbiQ==}

  bip66@1.1.5:
    resolution: {integrity: sha512-nemMHz95EmS38a26XbbdxIYj5csHd3RMP3H5bwQknX0WYHF01qhpufP42mLOwVICuH2JmhIhXiWs89MfUGL7Xw==}

  bitcoinjs-message@2.2.0:
    resolution: {integrity: sha512-103Wy3xg8Y9o+pdhGP4M3/mtQQuUWs6sPuOp1mYphSUoSMHjHTlkj32K4zxU8qMH0Ckv23emfkGlFWtoWZ7YFA==}
    engines: {node: '>=0.10'}

  bl@4.1.0:
    resolution: {integrity: sha512-1W07cM9gS6DcLperZfFSj+bWLtaPGSOHWhPiGzXmvVJbRLdG82sH/Kn8EtW1VqWVA54AKf2h5k5BbnIbwF3h6w==}

  blake2b-wasm@2.4.0:
    resolution: {integrity: sha512-S1kwmW2ZhZFFFOghcx73+ZajEfKBqhP82JMssxtLVMxlaPea1p9uoLiUZ5WYyHn0KddwbLc+0vh4wR0KBNoT5w==}

  blake2b@2.1.4:
    resolution: {integrity: sha512-AyBuuJNI64gIvwx13qiICz6H6hpmjvYS5DGkG6jbXMOT8Z3WUJ3V1X0FlhIoT1b/5JtHE3ki+xjtMvu1nn+t9A==}

  bn.js@4.12.1:
    resolution: {integrity: sha512-k8TVBiPkPJT9uHLdOKfFpqcfprwBFOAAXXozRubr7R7PfIuKvQlzcI4M0pALeqXN09vdaMbUdUj+pass+uULAg==}

  body-parser@1.20.3:
    resolution: {integrity: sha512-7rAxByjUMqQ3/bHJy7D6OGXvx/MMc4IqBn/X0fcM1QUcAItpZrBEYhWGem+tzXH90c+G01ypMcYJBO9Y30203g==}
    engines: {node: '>= 0.8', npm: 1.2.8000 || >= 1.4.16}

  brace-expansion@1.1.11:
    resolution: {integrity: sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==}

  brace-expansion@2.0.1:
    resolution: {integrity: sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==}

  braces@3.0.3:
    resolution: {integrity: sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==}
    engines: {node: '>=8'}

  brorand@1.1.0:
    resolution: {integrity: sha512-cKV8tMCEpQs4hK/ik71d6LrPOnpkpGBR0wzxqr68g2m/LB2GxVYQroAjMJZRVM1Y4BCjCKc3vAamxSzOY2RP+w==}

  browserify-aes@1.2.0:
    resolution: {integrity: sha512-+7CHXqGuspUn/Sl5aO7Ea0xWGAtETPXNSAjHo48JfLdPWcMng33Xe4znFvQweqc/uzk5zSOI3H52CYnjCfb5hA==}

  browserslist@4.24.4:
    resolution: {integrity: sha512-KDi1Ny1gSePi1vm0q4oxSF8b4DR44GF4BbmS2YdhPLOEqd8pDviZOGH/GsmRwoWJ2+5Lr085X7naowMwKHDG1A==}
    engines: {node: ^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7}
    hasBin: true

  bs-logger@0.2.6:
    resolution: {integrity: sha512-pd8DCoxmbgc7hyPKOvxtqNcjYoOsABPQdcCUjGp3d42VR2CX1ORhk2A87oqqu5R1kk+76nsxZupkmyd+MVtCog==}
    engines: {node: '>= 6'}

  bs58@4.0.1:
    resolution: {integrity: sha512-Ok3Wdf5vOIlBrgCvTq96gBkJw+JUEzdBgyaza5HLtPm7yTHkjRy8+JzNyHF7BHa0bNWOQIp3m5YF0nnFcOIKLw==}

  bs58@5.0.0:
    resolution: {integrity: sha512-r+ihvQJvahgYT50JD05dyJNKlmmSlMoOGwn1lCcEzanPglg7TxYjioQUYehQ9mAR/+hOSd2jRc/Z2y5UxBymvQ==}

  bs58@6.0.0:
    resolution: {integrity: sha512-PD0wEnEYg6ijszw/u8s+iI3H17cTymlrwkKhDhPZq+Sokl3AU4htyBFTjAeNAlCCmg0f53g6ih3jATyCKftTfw==}

  bs58check@2.1.2:
    resolution: {integrity: sha512-0TS1jicxdU09dwJMNZtVAfzPi6Q6QeN0pM1Fkzrjn+XYHvzMKPU3pHVpva+769iNVSfIYWf7LJ6WR+BuuMf8cA==}

  bs58check@4.0.0:
    resolution: {integrity: sha512-FsGDOnFg9aVI9erdriULkd/JjEWONV/lQE5aYziB5PoBsXRind56lh8doIZIc9X4HoxT5x4bLjMWN1/NB8Zp5g==}

  bser@2.1.1:
    resolution: {integrity: sha512-gQxTNE/GAfIIrmHLUE3oJyp5FO6HRBfhjnw4/wMmA63ZGDJnWBmgY/lyQBpnDUkGmAhbSe39tx2d/iTOAfglwQ==}

  buffer-equals@1.0.4:
    resolution: {integrity: sha512-99MsCq0j5+RhubVEtKQgKaD6EM+UP3xJgIvQqwJ3SOLDUekzxMX1ylXBng+Wa2sh7mGT0W6RUly8ojjr1Tt6nA==}
    engines: {node: '>=0.10.0'}

  buffer-from@1.1.2:
    resolution: {integrity: sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==}

  buffer-xor@1.0.3:
    resolution: {integrity: sha512-571s0T7nZWK6vB67HI5dyUF7wXiNcfaPPPTl6zYCNApANjIvYJTg7hlud/+cJpdAhS7dVzqMLmfhfHR3rAcOjQ==}

  buffer@5.7.1:
    resolution: {integrity: sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==}

  buffer@6.0.3:
    resolution: {integrity: sha512-FTiCpNxtwiZZHEZbcbTIcZjERVICn9yq/pDFkTl95/AxzD1naBctN7YO68riM/gLSDY7sdrMby8hofADYuuqOA==}

  busboy@1.6.0:
    resolution: {integrity: sha512-8SFQbg/0hQ9xy3UNTB0YEnsNBbWfhf7RtnzpL7TkBiTBRfrQ9Fxcnz7VJsleJpyp6rVLvXiuORqjlHi5q+PYuA==}
    engines: {node: '>=10.16.0'}

  bytes@3.1.2:
    resolution: {integrity: sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==}
    engines: {node: '>= 0.8'}

  call-bind-apply-helpers@1.0.1:
    resolution: {integrity: sha512-BhYE+WDaywFg2TBWYNXAE+8B1ATnThNBqXHP5nQu0jWJdVvY2hvkpyB3qOmtmDePiS5/BDQ8wASEWGMWRG148g==}
    engines: {node: '>= 0.4'}

  call-bind@1.0.8:
    resolution: {integrity: sha512-oKlSFMcMwpUg2ednkhQ454wfWiU/ul3CkJe/PEHcTKuiX6RpbehUiFMXu13HalGZxfUwCQzZG747YXBn1im9ww==}
    engines: {node: '>= 0.4'}

  call-bound@1.0.3:
    resolution: {integrity: sha512-YTd+6wGlNlPxSuri7Y6X8tY2dmm12UMH66RpKMhiX6rsk5wXXnYgbUcOt8kiS31/AjfoTOvCsE+w8nZQLQnzHA==}
    engines: {node: '>= 0.4'}

  callsites@3.1.0:
    resolution: {integrity: sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==}
    engines: {node: '>=6'}

  camelcase-css@2.0.1:
    resolution: {integrity: sha512-QOSvevhslijgYwRx6Rv7zKdMF8lbRmx+uQGx2+vDc+KI/eBnsy9kit5aj23AgGu3pa4t9AgwbnXWqS+iOY+2aA==}
    engines: {node: '>= 6'}

  camelcase@5.3.1:
    resolution: {integrity: sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==}
    engines: {node: '>=6'}

  camelcase@6.3.0:
    resolution: {integrity: sha512-Gmy6FhYlCY7uOElZUSbxo2UCDH8owEk996gkbrpsgGtrJLM3J7jGxl9Ic7Qwwj4ivOE5AWZWRMecDdF7hqGjFA==}
    engines: {node: '>=10'}

  caniuse-lite@1.0.30001698:
    resolution: {integrity: sha512-xJ3km2oiG/MbNU8G6zIq6XRZ6HtAOVXsbOrP/blGazi52kc5Yy7b6sDA5O+FbROzRrV7BSTllLHuNvmawYUJjw==}

  ccount@2.0.1:
    resolution: {integrity: sha512-eyrF0jiFpY+3drT6383f1qhkbGsLSifNAjA61IUjZjmLCWjItY6LB9ft9YhoDgwfmclB2zhu51Lc7+95b8NRAg==}

  chalk@4.1.2:
    resolution: {integrity: sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==}
    engines: {node: '>=10'}

  chalk@5.4.1:
    resolution: {integrity: sha512-zgVZuo2WcZgfUEmsn6eO3kINexW8RAE4maiQ8QNs8CtpPCSyMiYsULR3HQYkm3w8FIA3SberyMJMSldGsW+U3w==}
    engines: {node: ^12.17.0 || ^14.13 || >=16.0.0}

  char-regex@1.0.2:
    resolution: {integrity: sha512-kWWXztvZ5SBQV+eRgKFeh8q5sLuZY2+8WUIzlxWVTg+oGwY14qylx1KbKzHd8P6ZYkAg0xyIDU9JMHhyJMZ1jw==}
    engines: {node: '>=10'}

  character-entities-html4@2.1.0:
    resolution: {integrity: sha512-1v7fgQRj6hnSwFpq1Eu0ynr/CDEw0rXo2B61qXrLNdHZmPKgb7fqS1a2JwF0rISo9q77jDI8VMEHoApn8qDoZA==}

  character-entities-legacy@3.0.0:
    resolution: {integrity: sha512-RpPp0asT/6ufRm//AJVwpViZbGM/MkjQFxJccQRHmISF/22NBtsHqAWmL+/pmkPWoIUJdWyeVleTl1wydHATVQ==}

  chardet@0.7.0:
    resolution: {integrity: sha512-mT8iDcrh03qDGRRmoA2hmBJnxpllMR+0/0qlzjqZES6NdiWDcZkCNAk4rPFZ9Q85r27unkiNNg8ZOiwZXBHwcA==}

  chokidar@3.6.0:
    resolution: {integrity: sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==}
    engines: {node: '>= 8.10.0'}

  chrome-trace-event@1.0.4:
    resolution: {integrity: sha512-rNjApaLzuwaOTjCiT8lSDdGN1APCiqkChLMJxJPWLunPAt5fy8xgU9/jNOchV84wfIxrA0lRQB7oCT8jrn/wrQ==}
    engines: {node: '>=6.0'}

  ci-info@3.9.0:
    resolution: {integrity: sha512-NIxF55hv4nSqQswkAeiOi1r83xy8JldOFDTWiug55KBu9Jnblncd2U6ViHmYgHf01TPZS77NJBhBMKdWj9HQMQ==}
    engines: {node: '>=8'}

  ci-info@4.1.0:
    resolution: {integrity: sha512-HutrvTNsF48wnxkzERIXOe5/mlcfFcbfCmwcg6CJnizbSue78AbDt+1cgl26zwn61WFxhcPykPfZrbqjGmBb4A==}
    engines: {node: '>=8'}

  cipher-base@1.0.6:
    resolution: {integrity: sha512-3Ek9H3X6pj5TgenXYtNWdaBon1tgYCaebd+XPg0keyjEbEfkD4KkmAxkQ/i1vYvxdcT5nscLBfq9VJRmCBcFSw==}
    engines: {node: '>= 0.10'}

  cjs-module-lexer@1.4.3:
    resolution: {integrity: sha512-9z8TZaGM1pfswYeXrUpzPrkx8UnWYdhJclsiYMm6x/w5+nN+8Tf/LnAgfLGQCm59qAOxU8WwHEq2vNwF6i4j+Q==}

  class-transformer@0.5.1:
    resolution: {integrity: sha512-SQa1Ws6hUbfC98vKGxZH3KFY0Y1lm5Zm0SY8XX9zbK7FJCyVEac3ATW0RIpwzW+oOfmHE5PMPufDG9hCfoEOMw==}

  class-validator@0.14.1:
    resolution: {integrity: sha512-2VEG9JICxIqTpoK1eMzZqaV+u/EiwEJkMGzTrZf6sU/fwsnOITVgYJ8yojSy6CaXtO9V0Cc6ZQZ8h8m4UBuLwQ==}

  cli-cursor@3.1.0:
    resolution: {integrity: sha512-I/zHAwsKf9FqGoXM4WWRACob9+SNukZTd94DWF57E4toouRulbCxcUh6RKUEOQlYTHJnzkPMySvPNaaSLNfLZw==}
    engines: {node: '>=8'}

  cli-spinners@2.9.2:
    resolution: {integrity: sha512-ywqV+5MmyL4E7ybXgKys4DugZbX0FC6LnwrhjuykIjnK9k8OQacQ7axGKnjDXWNhns0xot3bZI5h55H8yo9cJg==}
    engines: {node: '>=6'}

  cli-table3@0.6.5:
    resolution: {integrity: sha512-+W/5efTR7y5HRD7gACw9yQjqMVvEMLBHmboM/kPWam+H+Hmyrgjh6YncVKK122YZkXrLudzTuAukUw9FnMf7IQ==}
    engines: {node: 10.* || >= 12.*}

  cli-width@3.0.0:
    resolution: {integrity: sha512-FxqpkPPwu1HjuN93Omfm4h8uIanXofW0RxVEW3k5RKx+mJJYSthzNhp32Kzxxy3YAEZ/Dc/EWN1vZRY0+kOhbw==}
    engines: {node: '>= 10'}

  cli-width@4.1.0:
    resolution: {integrity: sha512-ouuZd4/dm2Sw5Gmqy6bGyNNNe1qt9RpmxveLSO7KcgsTnU7RXfsw+/bukWGo1abgBiMAic068rclZsO4IWmmxQ==}
    engines: {node: '>= 12'}

  client-only@0.0.1:
    resolution: {integrity: sha512-IV3Ou0jSMzZrd3pZ48nLkT9DA7Ag1pnPzaiQhpW7c3RbcqqzvzzVu+L8gfqMp/8IM2MQtSiqaCxrrcfu8I8rMA==}

  cliui@7.0.4:
    resolution: {integrity: sha512-OcRE68cOsVMXp1Yvonl/fzkQOyjLSu/8bhPDfQt0e0/Eb283TKP20Fs2MqoPsr9SwA595rRCA+QMzYc9nBP+JQ==}

  cliui@8.0.1:
    resolution: {integrity: sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==}
    engines: {node: '>=12'}

  clone@1.0.4:
    resolution: {integrity: sha512-JQHZ2QMW6l3aH/j6xCqQThY/9OH4D/9ls34cgkUBiEeocRTU04tHfKPBsUK1PqZCUQM7GiA0IIXJSuXHI64Kbg==}
    engines: {node: '>=0.8'}

  co@4.6.0:
    resolution: {integrity: sha512-QVb0dM5HvG+uaxitm8wONl7jltx8dqhfU33DcqtOZcLSVIKSDDLDi7+0LbAKiyI8hD9u42m2YxXSkMGWThaecQ==}
    engines: {iojs: '>= 1.0.0', node: '>= 0.12.0'}

  collect-v8-coverage@1.0.2:
    resolution: {integrity: sha512-lHl4d5/ONEbLlJvaJNtsF/Lz+WvB07u2ycqTYbdrq7UypDXailES4valYb2eWiJFxZlVmpGekfqoxQhzyFdT4Q==}

  color-convert@2.0.1:
    resolution: {integrity: sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==}
    engines: {node: '>=7.0.0'}

  color-name@1.1.4:
    resolution: {integrity: sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==}

  combined-stream@1.0.8:
    resolution: {integrity: sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==}
    engines: {node: '>= 0.8'}

  comma-separated-tokens@2.0.3:
    resolution: {integrity: sha512-Fu4hJdvzeylCfQPp9SGWidpzrMs7tTrlu6Vb8XGaRGck8QSNZJJp538Wrb60Lax4fPwR64ViY468OIUTbRlGZg==}

  commander@2.20.3:
    resolution: {integrity: sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==}

  commander@4.1.1:
    resolution: {integrity: sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==}
    engines: {node: '>= 6'}

  comment-json@4.2.5:
    resolution: {integrity: sha512-bKw/r35jR3HGt5PEPm1ljsQQGyCrR8sFGNiN5L+ykDHdpO8Smxkrkla9Yi6NkQyUrb8V54PGhfMs6NrIwtxtdw==}
    engines: {node: '>= 6'}

  component-emitter@1.3.1:
    resolution: {integrity: sha512-T0+barUSQRTUQASh8bx02dl+DhF54GtIDY13Y3m9oWTklKbb3Wv974meRpeZ3lp1JpLVECWWNHC4vaG2XHXouQ==}

  concat-map@0.0.1:
    resolution: {integrity: sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==}

  concat-stream@1.6.2:
    resolution: {integrity: sha512-27HBghJxjiZtIk3Ycvn/4kbJk/1uZuJFfuPEns6LaEvpvG1f0hTea8lilrouyo9mVc2GWdcEZ8OLoGmSADlrCw==}
    engines: {'0': node >= 0.8}

  consola@2.15.3:
    resolution: {integrity: sha512-9vAdYbHj6x2fLKC4+oPH0kFzY/orMZyG2Aj+kNylHxKGJ/Ed4dpNyAQYwJOdqO4zdM7XpVHmyejQDcQHrnuXbw==}

  content-disposition@0.5.4:
    resolution: {integrity: sha512-FveZTNuGw04cxlAiWbzi6zTAL/lhehaWbTtgluJh4/E95DqMwTmha3KZN1aAWA8cFIhHzMZUvLevkw5Rqk+tSQ==}
    engines: {node: '>= 0.6'}

  content-type@1.0.5:
    resolution: {integrity: sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==}
    engines: {node: '>= 0.6'}

  convert-source-map@2.0.0:
    resolution: {integrity: sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==}

  cookie-signature@1.0.6:
    resolution: {integrity: sha512-QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ==}

  cookie@0.7.1:
    resolution: {integrity: sha512-6DnInpx7SJ2AK3+CTUE/ZM0vWTUboZCegxhC2xiIydHR9jNuTAASBrfEpHhiGOZw/nX51bHt6YQl8jsGo4y/0w==}
    engines: {node: '>= 0.6'}

  cookiejar@2.1.4:
    resolution: {integrity: sha512-LDx6oHrK+PhzLKJU9j5S7/Y3jM/mUHvD/DeI1WQmJn652iPC5Y4TBzC9l+5OMOXlyTTA+SmVUPm0HQUwpD5Jqw==}

  copyfiles@2.4.1:
    resolution: {integrity: sha512-fereAvAvxDrQDOXybk3Qu3dPbOoKoysFMWtkY3mv5BsL8//OSZVL5DCLYqgRfY5cWirgRzlC+WSrxp6Bo3eNZg==}
    hasBin: true

  core-util-is@1.0.3:
    resolution: {integrity: sha512-ZQBvi1DcpJ4GDqanjucZ2Hj3wEO5pZDS89BWbkcrvdxksJorwUDDZamX9ldFkp9aw2lmBDLgkObEA4DWNJ9FYQ==}

  cors@2.8.5:
    resolution: {integrity: sha512-KIHbLJqu73RGr/hnbrO9uBeixNGuvSQjul/jdFvS/KFSIH1hWVd1ng7zOHx+YrEfInLG7q4n6GHQ9cDtxv/P6g==}
    engines: {node: '>= 0.10'}

  cosmiconfig@8.3.6:
    resolution: {integrity: sha512-kcZ6+W5QzcJ3P1Mt+83OUv/oHFqZHIx8DuxG6eZ5RGMERoLqp4BuGjhHLYGK+Kf5XVkQvqBSmAy/nGWN3qDgEA==}
    engines: {node: '>=14'}
    peerDependencies:
      typescript: '>=4.9.5'
    peerDependenciesMeta:
      typescript:
        optional: true

  create-hash@1.2.0:
    resolution: {integrity: sha512-z00bCGNHDG8mHAkP7CtT1qVu+bFQUPjYq/4Iv3C3kWjTFV10zIjfSoeqXo9Asws8gwSHDGj/hl2u4OGIjapeCg==}

  create-hmac@1.1.7:
    resolution: {integrity: sha512-MJG9liiZ+ogc4TzUwuvbER1JRdgvUFSB5+VR/g5h82fGaIRWMWddtKBHi7/sVhfjQZ6SehlyhvQYrcYkaUIpLg==}

  create-jest@29.7.0:
    resolution: {integrity: sha512-Adz2bdH0Vq3F53KEMJOoftQFutWCukm6J24wbPWRO4k1kMY7gS7ds/uoJkNuV8wDCtWWnuwGcJwpWcih+zEW1Q==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
    hasBin: true

  create-require@1.1.1:
    resolution: {integrity: sha512-dcKFX3jn0MpIaXjisoRvexIJVEKzaq7z2rZKxf+MSr9TkdmHmsU4m2lcLojrj/FHl8mk5VxMmYA+ftRkP/3oKQ==}

  cross-fetch@3.2.0:
    resolution: {integrity: sha512-Q+xVJLoGOeIMXZmbUK4HYk+69cQH6LudR0Vu/pRm2YlU/hDV9CiS0gKUMaWY5f2NeUH9C1nV3bsTlCo0FsTV1Q==}

  cross-fetch@4.0.0:
    resolution: {integrity: sha512-e4a5N8lVvuLgAWgnCrLr2PP0YyDOTHa9H/Rj54dirp61qXnNq46m82bRhNqIA5VccJtWBvPTFRV3TtvHUKPB1g==}

  cross-fetch@4.1.0:
    resolution: {integrity: sha512-uKm5PU+MHTootlWEY+mZ4vvXoCn4fLQxT9dSc1sXVMSFkINTJVN8cAQROpwcKm8bJ/c7rgZVIBWzH5T78sNZZw==}

  cross-spawn@7.0.6:
    resolution: {integrity: sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==}
    engines: {node: '>= 8'}

  css-line-break@2.1.0:
    resolution: {integrity: sha512-FHcKFCZcAha3LwfVBhCQbW2nCNbkZXn7KVUJcsT5/P8YmfsVja0FMPJr0B903j/E69HUphKiV9iQArX8SDYA4w==}

  cssesc@3.0.0:
    resolution: {integrity: sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==}
    engines: {node: '>=4'}
    hasBin: true

  csstype@3.1.3:
    resolution: {integrity: sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==}

  damerau-levenshtein@1.0.8:
    resolution: {integrity: sha512-sdQSFB7+llfUcQHUQO3+B8ERRj0Oa4w9POWMI/puGtuf7gFywGmkaLCElnudfTiKZV+NvHqL0ifzdrI8Ro7ESA==}

  data-view-buffer@1.0.2:
    resolution: {integrity: sha512-EmKO5V3OLXh1rtK2wgXRansaK1/mtVdTUEiEI0W8RkvgT05kfxaH29PliLnpLP73yYO6142Q72QNa8Wx/A5CqQ==}
    engines: {node: '>= 0.4'}

  data-view-byte-length@1.0.2:
    resolution: {integrity: sha512-tuhGbE6CfTM9+5ANGf+oQb72Ky/0+s3xKUpHvShfiz2RxMFgFPjsXuRLBVMtvMs15awe45SRb83D6wH4ew6wlQ==}
    engines: {node: '>= 0.4'}

  data-view-byte-offset@1.0.1:
    resolution: {integrity: sha512-BS8PfmtDGnrgYdOonGZQdLZslWIeCGFP9tpan0hi1Co2Zr2NKADsvGYA8XxuG/4UWgJ6Cjtv+YJnB6MM69QGlQ==}
    engines: {node: '>= 0.4'}

  dataloader@1.4.0:
    resolution: {integrity: sha512-68s5jYdlvasItOJnCuI2Q9s4q98g0pCyL3HrcKJu8KNugUl8ahgmZYg38ysLTgQjjXX3H8CJLkAvWrclWfcalw==}

  debug@2.6.9:
    resolution: {integrity: sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==}
    peerDependencies:
      supports-color: '*'
    peerDependenciesMeta:
      supports-color:
        optional: true

  debug@3.2.7:
    resolution: {integrity: sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==}
    peerDependencies:
      supports-color: '*'
    peerDependenciesMeta:
      supports-color:
        optional: true

  debug@4.4.0:
    resolution: {integrity: sha512-6WTZ/IxCY/T6BALoZHaE4ctp9xm+Z5kY/pzYaCHRFeyVhojxlrm+46y68HA6hr0TcwEssoxNiDEUJQjfPZ/RYA==}
    engines: {node: '>=6.0'}
    peerDependencies:
      supports-color: '*'
    peerDependenciesMeta:
      supports-color:
        optional: true

  dedent@1.5.3:
    resolution: {integrity: sha512-NHQtfOOW68WD8lgypbLA5oT+Bt0xXJhiYvoR6SmmNXZfpzOGXwdKWmcwG8N7PwVVWV3eF/68nmD9BaJSsTBhyQ==}
    peerDependencies:
      babel-plugin-macros: ^3.1.0
    peerDependenciesMeta:
      babel-plugin-macros:
        optional: true

  deep-freeze-strict@1.1.1:
    resolution: {integrity: sha512-QemROZMM2IvhAcCFvahdX2Vbm4S/txeq5rFYU9fh4mQP79WTMW5c/HkQ2ICl1zuzcDZdPZ6zarDxQeQMsVYoNA==}

  deep-is@0.1.4:
    resolution: {integrity: sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==}

  deepmerge@4.3.1:
    resolution: {integrity: sha512-3sUqbMEc77XqpdNO7FRyRog+eW3ph+GYCbj+rK+uYyRMuwsVy0rMiVtPn+QJlKFvWP/1PYpapqYn0Me2knFn+A==}
    engines: {node: '>=0.10.0'}

  defaults@1.0.4:
    resolution: {integrity: sha512-eFuaLoy/Rxalv2kr+lqMlUnrDWV+3j4pljOIJgLIhI058IQfWJ7vXhyEIHu+HtC738klGALYxOKDO0bQP3tg8A==}

  define-data-property@1.1.4:
    resolution: {integrity: sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==}
    engines: {node: '>= 0.4'}

  define-properties@1.2.1:
    resolution: {integrity: sha512-8QmQKqEASLd5nx0U1B1okLElbUuuttJ/AnYmRXbbbGDWh6uS208EjD4Xqq/I9wK7u0v6O08XhTWnt5XtEbR6Dg==}
    engines: {node: '>= 0.4'}

  delayed-stream@1.0.0:
    resolution: {integrity: sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==}
    engines: {node: '>=0.4.0'}

  depd@2.0.0:
    resolution: {integrity: sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==}
    engines: {node: '>= 0.8'}

  dequal@2.0.3:
    resolution: {integrity: sha512-0je+qPKHEMohvfRTCEo3CrPG6cAzAYgmzKyxRiYSSDkS6eGJdyVJm7WaYA5ECaAD9wLB2T4EEeymA5aFVcYXCA==}
    engines: {node: '>=6'}

  destroy@1.2.0:
    resolution: {integrity: sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==}
    engines: {node: '>= 0.8', npm: 1.2.8000 || >= 1.4.16}

  detect-indent@6.1.0:
    resolution: {integrity: sha512-reYkTUJAZb9gUuZ2RvVCNhVHdg62RHnJ7WJl8ftMi4diZ6NWlciOzQN88pUhSELEwflJht4oQDv0F0BMlwaYtA==}
    engines: {node: '>=8'}

  detect-newline@3.1.0:
    resolution: {integrity: sha512-TLz+x/vEXm/Y7P7wn1EJFNLxYpUD4TgMosxY6fAVJUnJMbupHBOncxyWUG9OpTaH9EBD7uFI5LfEgmMOc54DsA==}
    engines: {node: '>=8'}

  devlop@1.1.0:
    resolution: {integrity: sha512-RWmIqhcFf1lRYBvNmr7qTNuyCt/7/ns2jbpp1+PalgE/rDQcBT0fioSMUpJ93irlUhC5hrg4cYqe6U+0ImW0rA==}

  dezalgo@1.0.4:
    resolution: {integrity: sha512-rXSP0bf+5n0Qonsb+SVVfNfIsimO4HEtmnIpPHY8Q1UCzKlQrDMfdobr8nJOOsRgWCyMRqeSBQzmWUMq7zvVig==}

  didyoumean@1.2.2:
    resolution: {integrity: sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==}

  diff-sequences@29.6.3:
    resolution: {integrity: sha512-EjePK1srD3P08o2j4f0ExnylqRs5B9tJjcp9t1krH2qRi8CCdsYfwe9JgSLurFBWwq4uOlipzfk5fHNvwFKr8Q==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  diff-sequences@30.0.0-alpha.6:
    resolution: {integrity: sha512-DVGt3/yzbneMUTuupsMqyfSXMnU2fE0lVsC9uFsJmRpluvSi7ZhrS0GX5tnMna6Ta788FGfOUx+irI/+cAZ4EA==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  diff@4.0.2:
    resolution: {integrity: sha512-58lmxKSA4BNyLz+HHMUzlOEpg09FV+ev6ZMe3vJihgdxzgcwZ8VoEEPmALCZG9LmqfVoNMMKpttIYTVG6uDY7A==}
    engines: {node: '>=0.3.1'}

  dir-glob@3.0.1:
    resolution: {integrity: sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==}
    engines: {node: '>=8'}

  dlv@1.1.3:
    resolution: {integrity: sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA==}

  doctrine@2.1.0:
    resolution: {integrity: sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==}
    engines: {node: '>=0.10.0'}

  doctrine@3.0.0:
    resolution: {integrity: sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==}
    engines: {node: '>=6.0.0'}

  dotenv-expand@10.0.0:
    resolution: {integrity: sha512-GopVGCpVS1UKH75VKHGuQFqS1Gusej0z4FyQkPdwjil2gNIv+LNsqBlboOzpJFZKVT95GkCyWJbBSdFEFUWI2A==}
    engines: {node: '>=12'}

  dotenv@16.4.5:
    resolution: {integrity: sha512-ZmdL2rui+eB2YwhsWzjInR8LldtZHGDoQ1ugH85ppHKwpUHL7j7rN0Ti9NCnGiQbhaZ11FpR+7ao1dNsmduNUg==}
    engines: {node: '>=12'}

  dotenv@16.4.7:
    resolution: {integrity: sha512-47qPchRCykZC03FhkYAhrvwU4xDBFIj1QPqaarj6mdM/hgUzfPHcpkHJOn3mJAufFeeAxAzeGsr5X0M4k6fLZQ==}
    engines: {node: '>=12'}

  dotenv@8.6.0:
    resolution: {integrity: sha512-IrPdXQsk2BbzvCBGBOTmmSH5SodmqZNt4ERAZDmW4CT+tL8VtvinqywuANaFu4bOMWki16nqf0e4oC0QIaDr/g==}
    engines: {node: '>=10'}

  drbg.js@1.0.1:
    resolution: {integrity: sha512-F4wZ06PvqxYLFEZKkFxTDcns9oFNk34hvmJSEwdzsxVQ8YI5YaxtACgQatkYgv2VI2CFkUd2Y+xosPQnHv809g==}
    engines: {node: '>=0.10'}

  dunder-proto@1.0.1:
    resolution: {integrity: sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==}
    engines: {node: '>= 0.4'}

  eastasianwidth@0.2.0:
    resolution: {integrity: sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==}

  ee-first@1.1.1:
    resolution: {integrity: sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==}

  ejs@3.1.10:
    resolution: {integrity: sha512-UeJmFfOrAQS8OJWPZ4qtgHyWExa088/MtK5UEyoJGFH67cDEXkZSviOiKRCZ4Xij0zxI3JECgYs3oKx+AizQBA==}
    engines: {node: '>=0.10.0'}
    hasBin: true

  electron-to-chromium@1.5.96:
    resolution: {integrity: sha512-8AJUW6dh75Fm/ny8+kZKJzI1pgoE8bKLZlzDU2W1ENd+DXKJrx7I7l9hb8UWR4ojlnb5OlixMt00QWiYJoVw1w==}

  elliptic@6.6.0:
    resolution: {integrity: sha512-dpwoQcLc/2WLQvJvLRHKZ+f9FgOdjnq11rurqwekGQygGPsYSK29OMMD2WalatiqQ+XGFDglTNixpPfI+lpaAA==}

  elliptic@6.6.1:
    resolution: {integrity: sha512-RaddvvMatK2LJHqFJ+YA4WysVN5Ita9E35botqIYspQ4TkRAlCicdzKOjlyv/1Za5RyTNn7di//eEV0uTAfe3g==}

  emittery@0.13.1:
    resolution: {integrity: sha512-DeWwawk6r5yR9jFgnDKYt4sLS0LmHJJi3ZOnb5/JdbYwj3nW+FxQnHIjhBKz8YLC7oRNPVM9NQ47I3CVx34eqQ==}
    engines: {node: '>=12'}

  emoji-regex-xs@1.0.0:
    resolution: {integrity: sha512-LRlerrMYoIDrT6jgpeZ2YYl/L8EulRTt5hQcYjy5AInh7HWXKimpqx68aknBFpGL2+/IcogTcaydJEgaTmOpDg==}

  emoji-regex@8.0.0:
    resolution: {integrity: sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==}

  emoji-regex@9.2.2:
    resolution: {integrity: sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==}

  emojis-list@3.0.0:
    resolution: {integrity: sha512-/kyM18EfinwXZbno9FyUGeFh87KC8HRQBQGildHZbEuRyWFOmv1U10o9BBp8XVZDVNNuQKyIGIu5ZYAAXJ0V2Q==}
    engines: {node: '>= 4'}

  encodeurl@1.0.2:
    resolution: {integrity: sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==}
    engines: {node: '>= 0.8'}

  encodeurl@2.0.0:
    resolution: {integrity: sha512-Q0n9HRi4m6JuGIV1eFlmvJB7ZEVxu93IrMyiMsGC0lrMJMWzRgx6WGquyfQgZVb31vhGgXnfmPNNXmxnOkRBrg==}
    engines: {node: '>= 0.8'}

  enhanced-resolve@5.18.1:
    resolution: {integrity: sha512-ZSW3ma5GkcQBIpwZTSRAI8N71Uuwgs93IezB7mf7R60tC8ZbJideoDNKjHn2O9KIlx6rkGTTEk1xUCK2E1Y2Yg==}
    engines: {node: '>=10.13.0'}

  enquirer@2.4.1:
    resolution: {integrity: sha512-rRqJg/6gd538VHvR3PSrdRBb/1Vy2YfzHqzvbhGIQpDRKIa4FgV/54b5Q1xYSxOOwKvjXweS26E0Q+nAMwp2pQ==}
    engines: {node: '>=8.6'}

  entities@4.5.0:
    resolution: {integrity: sha512-V0hjH4dGPh9Ao5p0MoRY6BVqtwCjhz6vI5LT8AJ55H+4g9/4vbHx1I54fS0XuclLhDHArPQCiMjDxjaL8fPxhw==}
    engines: {node: '>=0.12'}

  error-ex@1.3.2:
    resolution: {integrity: sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==}

  es-abstract@1.23.9:
    resolution: {integrity: sha512-py07lI0wjxAC/DcfK1S6G7iANonniZwTISvdPzk9hzeH0IZIshbuuFxLIU96OyF89Yb9hiqWn8M/bY83KY5vzA==}
    engines: {node: '>= 0.4'}

  es-define-property@1.0.1:
    resolution: {integrity: sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==}
    engines: {node: '>= 0.4'}

  es-errors@1.3.0:
    resolution: {integrity: sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==}
    engines: {node: '>= 0.4'}

  es-iterator-helpers@1.2.1:
    resolution: {integrity: sha512-uDn+FE1yrDzyC0pCo961B2IHbdM8y/ACZsKD4dG6WqrjV53BADjwa7D+1aom2rsNVfLyDgU/eigvlJGJ08OQ4w==}
    engines: {node: '>= 0.4'}

  es-module-lexer@1.6.0:
    resolution: {integrity: sha512-qqnD1yMU6tk/jnaMosogGySTZP8YtUgAffA9nMN+E/rjxcfRQ6IEk7IiozUjgxKoFHBGjTLnrHB/YC45r/59EQ==}

  es-object-atoms@1.1.1:
    resolution: {integrity: sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==}
    engines: {node: '>= 0.4'}

  es-set-tostringtag@2.1.0:
    resolution: {integrity: sha512-j6vWzfrGVfyXxge+O0x5sh6cvxAog0a/4Rdd2K36zCMV5eJ+/+tOAngRO8cODMNWbVRdVlmGZQL2YS3yR8bIUA==}
    engines: {node: '>= 0.4'}

  es-shim-unscopables@1.0.2:
    resolution: {integrity: sha512-J3yBRXCzDu4ULnQwxyToo/OjdMx6akgVC7K6few0a7F/0wLtmKKN7I73AH5T2836UuXRqN7Qg+IIUw/+YJksRw==}

  es-to-primitive@1.3.0:
    resolution: {integrity: sha512-w+5mJ3GuFL+NjVtJlvydShqE1eN3h3PbI7/5LAsYJP/2qtuMXjfL2LpHSRqo4b4eSF5K/DH1JXKUAHSB2UW50g==}
    engines: {node: '>= 0.4'}

  escalade@3.2.0:
    resolution: {integrity: sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==}
    engines: {node: '>=6'}

  escape-html@1.0.3:
    resolution: {integrity: sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==}

  escape-string-regexp@1.0.5:
    resolution: {integrity: sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==}
    engines: {node: '>=0.8.0'}

  escape-string-regexp@2.0.0:
    resolution: {integrity: sha512-UpzcLCXolUWcNu5HtVMHYdXJjArjsF9C0aNnquZYY4uW/Vu0miy5YoWvbV345HauVvcAUnpRuhMMcqTcGOY2+w==}
    engines: {node: '>=8'}

  escape-string-regexp@4.0.0:
    resolution: {integrity: sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==}
    engines: {node: '>=10'}

  eslint-config-next@14.2.2:
    resolution: {integrity: sha512-12/uFc0KX+wUs7EDpOUGKMXBXZJiBVGdK5/m/QgXOCg2mQ0bQWoKSWNrCeOg7Vum6Kw1d1TW453W6xh+GbHquw==}
    peerDependencies:
      eslint: ^7.23.0 || ^8.0.0
      typescript: '>=3.3.1'
    peerDependenciesMeta:
      typescript:
        optional: true

  eslint-config-next@14.2.8:
    resolution: {integrity: sha512-gRqxHkSuCrQro6xqXnmXphcq8rdiw7FI+nLXpWmIlp/AfUzHCgXNQE7mOK+oco+SRaJbhqCg/68uRln1qjkF+Q==}
    peerDependencies:
      eslint: ^7.23.0 || ^8.0.0
      typescript: '>=3.3.1'
    peerDependenciesMeta:
      typescript:
        optional: true

  eslint-config-prettier@10.0.1:
    resolution: {integrity: sha512-lZBts941cyJyeaooiKxAtzoPHTN+GbQTJFAIdQbRhA4/8whaAraEh47Whw/ZFfrjNSnlAxqfm9i0XVAEkULjCw==}
    hasBin: true
    peerDependencies:
      eslint: '>=7.0.0'

  eslint-config-prettier@9.1.0:
    resolution: {integrity: sha512-NSWl5BFQWEPi1j4TjVNItzYV7dZXZ+wP6I6ZhrBGpChQhZRUaElihE9uRRkcbRnNb76UMKDF3r+WTmNcGPKsqw==}
    hasBin: true
    peerDependencies:
      eslint: '>=7.0.0'

  eslint-import-resolver-node@0.3.9:
    resolution: {integrity: sha512-WFj2isz22JahUv+B788TlO3N6zL3nNJGU8CcZbPZvVEkBPaJdCV4vy5wyghty5ROFbCRnm132v8BScu5/1BQ8g==}

  eslint-import-resolver-typescript@3.7.0:
    resolution: {integrity: sha512-Vrwyi8HHxY97K5ebydMtffsWAn1SCR9eol49eCd5fJS4O1WV7PaAjbcjmbfJJSMz/t4Mal212Uz/fQZrOB8mow==}
    engines: {node: ^14.18.0 || >=16.0.0}
    peerDependencies:
      eslint: '*'
      eslint-plugin-import: '*'
      eslint-plugin-import-x: '*'
    peerDependenciesMeta:
      eslint-plugin-import:
        optional: true
      eslint-plugin-import-x:
        optional: true

  eslint-module-utils@2.12.0:
    resolution: {integrity: sha512-wALZ0HFoytlyh/1+4wuZ9FJCD/leWHQzzrxJ8+rebyReSLk7LApMyd3WJaLVoN+D5+WIdJyDK1c6JnE65V4Zyg==}
    engines: {node: '>=4'}
    peerDependencies:
      '@typescript-eslint/parser': '*'
      eslint: '*'
      eslint-import-resolver-node: '*'
      eslint-import-resolver-typescript: '*'
      eslint-import-resolver-webpack: '*'
    peerDependenciesMeta:
      '@typescript-eslint/parser':
        optional: true
      eslint:
        optional: true
      eslint-import-resolver-node:
        optional: true
      eslint-import-resolver-typescript:
        optional: true
      eslint-import-resolver-webpack:
        optional: true

  eslint-plugin-import@2.31.0:
    resolution: {integrity: sha512-ixmkI62Rbc2/w8Vfxyh1jQRTdRTF52VxwRVHl/ykPAmqG+Nb7/kNn+byLP0LxPgI7zWA16Jt82SybJInmMia3A==}
    engines: {node: '>=4'}
    peerDependencies:
      '@typescript-eslint/parser': '*'
      eslint: ^2 || ^3 || ^4 || ^5 || ^6 || ^7.2.0 || ^8 || ^9
    peerDependenciesMeta:
      '@typescript-eslint/parser':
        optional: true

  eslint-plugin-jsx-a11y@6.10.2:
    resolution: {integrity: sha512-scB3nz4WmG75pV8+3eRUQOHZlNSUhFNq37xnpgRkCCELU3XMvXAxLk1eqWWyE22Ki4Q01Fnsw9BA3cJHDPgn2Q==}
    engines: {node: '>=4.0'}
    peerDependencies:
      eslint: ^3 || ^4 || ^5 || ^6 || ^7 || ^8 || ^9

  eslint-plugin-prettier@5.2.3:
    resolution: {integrity: sha512-qJ+y0FfCp/mQYQ/vWQ3s7eUlFEL4PyKfAJxsnYTJ4YT73nsJBWqmEpFryxV9OeUiqmsTsYJ5Y+KDNaeP31wrRw==}
    engines: {node: ^14.18.0 || >=16.0.0}
    peerDependencies:
      '@types/eslint': '>=8.0.0'
      eslint: '>=8.0.0'
      eslint-config-prettier: '*'
      prettier: '>=3.0.0'
    peerDependenciesMeta:
      '@types/eslint':
        optional: true
      eslint-config-prettier:
        optional: true

  eslint-plugin-react-hooks@5.0.0-canary-7118f5dd7-20230705:
    resolution: {integrity: sha512-AZYbMo/NW9chdL7vk6HQzQhT+PvTAEVqWk9ziruUoW2kAOcN5qNyelv70e0F1VNQAbvutOC9oc+xfWycI9FxDw==}
    engines: {node: '>=10'}
    peerDependencies:
      eslint: ^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0 || ^7.0.0 || ^8.0.0-0

  eslint-plugin-react@7.37.4:
    resolution: {integrity: sha512-BGP0jRmfYyvOyvMoRX/uoUeW+GqNj9y16bPQzqAHf3AYII/tDs+jMN0dBVkl88/OZwNGwrVFxE7riHsXVfy/LQ==}
    engines: {node: '>=4'}
    peerDependencies:
      eslint: ^3 || ^4 || ^5 || ^6 || ^7 || ^8 || ^9.7

  eslint-scope@5.1.1:
    resolution: {integrity: sha512-2NxwbF/hZ0KpepYN0cNbo+FN6XoK7GaHlQhgx/hIZl6Va0bF45RQOOwhLIy8lQDbuCiadSLCBnH2CFYquit5bw==}
    engines: {node: '>=8.0.0'}

  eslint-scope@7.2.2:
    resolution: {integrity: sha512-dOt21O7lTMhDM+X9mB4GX+DZrZtCUJPL/wlcTqxyrx5IvO0IYtILdtrQGQp+8n5S0gwSVmOf9NQrjMOgfQZlIg==}
    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}

  eslint-scope@8.2.0:
    resolution: {integrity: sha512-PHlWUfG6lvPc3yvP5A4PNyBL1W8fkDUccmI21JUu/+GKZBoH/W5u6usENXUrWFRsyoW5ACUjFGgAFQp5gUlb/A==}
    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}

  eslint-visitor-keys@3.4.3:
    resolution: {integrity: sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==}
    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}

  eslint-visitor-keys@4.2.0:
    resolution: {integrity: sha512-UyLnSehNt62FFhSwjZlHmeokpRK59rcz29j+F1/aDgbkbRTk7wIc9XzdoasMUbRNKDM0qQt/+BJ4BrpFeABemw==}
    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}

  eslint@8.57.1:
    resolution: {integrity: sha512-ypowyDxpVSYpkXr9WPv2PAZCtNip1Mv5KTW0SCurXv/9iOpcrH9PaqUElksqEB6pChqHGDRCFTyrZlGhnLNGiA==}
    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}
    deprecated: This version is no longer supported. Please see https://eslint.org/version-support for other options.
    hasBin: true

  eslint@9.20.0:
    resolution: {integrity: sha512-aL4F8167Hg4IvsW89ejnpTwx+B/UQRzJPGgbIOl+4XqffWsahVVsLEWoZvnrVuwpWmnRd7XeXmQI1zlKcFDteA==}
    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
    hasBin: true
    peerDependencies:
      jiti: '*'
    peerDependenciesMeta:
      jiti:
        optional: true

  espree@10.3.0:
    resolution: {integrity: sha512-0QYC8b24HWY8zjRnDTL6RiHfDbAWn63qb4LMj1Z4b076A4une81+z03Kg7l7mn/48PUTqoLptSXez8oknU8Clg==}
    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}

  espree@9.6.1:
    resolution: {integrity: sha512-oruZaFkjorTpF32kDSI5/75ViwGeZginGGy2NoOSg3Q9bnwlnmDm4HLnkl0RE3n+njDXR037aY1+x58Z/zFdwQ==}
    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}

  esprima@4.0.1:
    resolution: {integrity: sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==}
    engines: {node: '>=4'}
    hasBin: true

  esquery@1.6.0:
    resolution: {integrity: sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==}
    engines: {node: '>=0.10'}

  esrecurse@4.3.0:
    resolution: {integrity: sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==}
    engines: {node: '>=4.0'}

  estraverse@4.3.0:
    resolution: {integrity: sha512-39nnKffWz8xN1BU/2c79n9nB9HDzo0niYUqx6xyqUnyoAnQyyWpOTdZEeiCch8BBu515t4wp9ZmgVfVhn9EBpw==}
    engines: {node: '>=4.0'}

  estraverse@5.3.0:
    resolution: {integrity: sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==}
    engines: {node: '>=4.0'}

  esutils@2.0.3:
    resolution: {integrity: sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==}
    engines: {node: '>=0.10.0'}

  etag@1.8.1:
    resolution: {integrity: sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==}
    engines: {node: '>= 0.6'}

  ethers@6.13.5:
    resolution: {integrity: sha512-+knKNieu5EKRThQJWwqaJ10a6HE9sSehGeqWN65//wE7j47ZpFhKAnHB/JJFibwwg61I/koxaPsXbXpD/skNOQ==}
    engines: {node: '>=14.0.0'}

  event-target-shim@5.0.1:
    resolution: {integrity: sha512-i/2XbnSz/uxRCU6+NdVJgKWDTM427+MqYbkQzD321DuCQJUqOuJKIA0IM2+W2xtYHdKOmZ4dR6fExsd4SXL+WQ==}
    engines: {node: '>=6'}

  events@3.3.0:
    resolution: {integrity: sha512-mQw+2fkQbALzQ7V0MY0IqdnXNOeTtP4r0lN9z7AAawCXgqea7bDii20AYrIBrFd/Hx0M2Ocz6S111CaFkUcb0Q==}
    engines: {node: '>=0.8.x'}

  evp_bytestokey@1.0.3:
    resolution: {integrity: sha512-/f2Go4TognH/KvCISP7OUsHn85hT9nUkxxA9BEWxFn+Oj9o8ZNLm/40hdlgSLyuOimsrTKLUMEorQexp/aPQeA==}

  execa@5.1.1:
    resolution: {integrity: sha512-8uSpZZocAZRBAPIEINJj3Lo9HyGitllczc27Eh5YYojjMFMn8yHMDMaUHE2Jqfq05D/wucwI4JGURyXt1vchyg==}
    engines: {node: '>=10'}

  exit@0.1.2:
    resolution: {integrity: sha512-Zk/eNKV2zbjpKzrsQ+n1G6poVbErQxJ0LBOJXaKZ1EViLzH+hrLu9cdXI4zw9dBQJslwBEpbQ2P1oS7nDxs6jQ==}
    engines: {node: '>= 0.8.0'}

  expect@29.7.0:
    resolution: {integrity: sha512-2Zks0hf1VLFYI1kbh0I5jP3KHHyCHpkfyHBzsSXRFgl/Bg9mWYfMW8oD+PdMPlEwy5HNsR9JutYy6pMeOh61nw==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  expect@30.0.0-alpha.6:
    resolution: {integrity: sha512-WVi2V4iHKw/vHEyye00Q9CSZz7KHDbJkJyteUI8kTih9jiyMl3bIk7wLYFcY9D1Blnadlyb5w5NBuNjQBow99g==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  express@4.21.2:
    resolution: {integrity: sha512-28HqgMZAmih1Czt9ny7qr6ek2qddF4FclbMzwhCREB6OFfH+rXAnuNCwo1/wFvrtbgsQDb4kSbX9de9lFbrXnA==}
    engines: {node: '>= 0.10.0'}

  extendable-error@0.1.7:
    resolution: {integrity: sha512-UOiS2in6/Q0FK0R0q6UY9vYpQ21mr/Qn1KOnte7vsACuNJf514WvCCUHSRCPcgjPT2bAhNIJdlE6bVap1GKmeg==}

  external-editor@3.1.0:
    resolution: {integrity: sha512-hMQ4CX1p1izmuLYyZqLMO/qGNw10wSv9QDCPfzXfyFrOaCSSoRfqE1Kf1s5an66J5JZC62NewG+mK49jOCtQew==}
    engines: {node: '>=4'}

  fast-deep-equal@3.1.3:
    resolution: {integrity: sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==}

  fast-diff@1.3.0:
    resolution: {integrity: sha512-VxPP4NqbUjj6MaAOafWeUn2cXWLcCtljklUtZf0Ind4XQ+QPtmA0b18zZy0jIQx+ExRVCR/ZQpBmik5lXshNsw==}

  fast-glob@3.3.3:
    resolution: {integrity: sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==}
    engines: {node: '>=8.6.0'}

  fast-json-stable-stringify@2.1.0:
    resolution: {integrity: sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==}

  fast-levenshtein@2.0.6:
    resolution: {integrity: sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==}

  fast-safe-stringify@2.1.1:
    resolution: {integrity: sha512-W+KJc2dmILlPplD/H4K9l9LcAHAfPtP6BY84uVLXQ6Evcz9Lcg33Y2z1IVblT6xdY54PXYVHEv+0Wpq8Io6zkA==}

  fast-uri@3.0.6:
    resolution: {integrity: sha512-Atfo14OibSv5wAp4VWNsFYE1AchQRTv9cBGWET4pZWHzYshFSS9NQI6I57rdKn9croWVMbYFbLhJ+yJvmZIIHw==}

  fastq@1.19.0:
    resolution: {integrity: sha512-7SFSRCNjBQIZH/xZR3iy5iQYR8aGBE0h3VG6/cwlbrpdciNYBMotQav8c1XI3HjHH+NikUpP53nPdlZSdWmFzA==}

  fb-watchman@2.0.2:
    resolution: {integrity: sha512-p5161BqbuCaSnB8jIbzQHOlpgsPmK5rJVDfDKO91Axs5NC1uu3HRQm6wt9cd9/+GtQQIO53JdGXXoyDpTAsgYA==}

  figures@3.2.0:
    resolution: {integrity: sha512-yaduQFRKLXYOGgEn6AZau90j3ggSOyiqXU0F9JZfeXYhNa+Jk4X+s45A2zg5jns87GAFa34BBm2kXw4XpNcbdg==}
    engines: {node: '>=8'}

  file-entry-cache@6.0.1:
    resolution: {integrity: sha512-7Gps/XWymbLk2QLYK4NzpMOrYjMhdIxXuIvy2QBsLE6ljuodKvdkWs/cpyJJ3CVIVpH0Oi1Hvg1ovbMzLdFBBg==}
    engines: {node: ^10.12.0 || >=12.0.0}

  file-entry-cache@8.0.0:
    resolution: {integrity: sha512-XXTUwCvisa5oacNGRP9SfNtYBNAMi+RPwBFmblZEF7N7swHYQS6/Zfk7SRwx4D5j3CH211YNRco1DEMNVfZCnQ==}
    engines: {node: '>=16.0.0'}

  file-uri-to-path@1.0.0:
    resolution: {integrity: sha512-0Zt+s3L7Vf1biwWZ29aARiVYLx7iMGnEUl9x33fbB/j3jR81u/O2LbqK+Bm1CDSNDKVtJ/YjwY7TUd5SkeLQLw==}

  filelist@1.0.4:
    resolution: {integrity: sha512-w1cEuf3S+DrLCQL7ET6kz+gmlJdbq9J7yXCSjK/OZCPA+qEN1WyF4ZAf0YYJa4/shHJra2t/d/r8SV4Ji+x+8Q==}

  fill-range@7.1.1:
    resolution: {integrity: sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==}
    engines: {node: '>=8'}

  finalhandler@1.3.1:
    resolution: {integrity: sha512-6BN9trH7bp3qvnrRyzsBz+g3lZxTNZTbVO2EV1CS0WIcDbawYVdYvGflME/9QP0h0pYlCDBCTjYa9nZzMDpyxQ==}
    engines: {node: '>= 0.8'}

  find-up@4.1.0:
    resolution: {integrity: sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==}
    engines: {node: '>=8'}

  find-up@5.0.0:
    resolution: {integrity: sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==}
    engines: {node: '>=10'}

  flat-cache@3.2.0:
    resolution: {integrity: sha512-CYcENa+FtcUKLmhhqyctpclsq7QF38pKjZHsGNiSQF5r4FtoKDWabFDl3hzaEQMvT1LHEysw5twgLvpYYb4vbw==}
    engines: {node: ^10.12.0 || >=12.0.0}

  flat-cache@4.0.1:
    resolution: {integrity: sha512-f7ccFPK3SXFHpx15UIGyRJ/FJQctuKZ0zVuN3frBo4HnK3cay9VEW0R6yPYFHC0AgqhukPzKjq22t5DmAyqGyw==}
    engines: {node: '>=16'}

  flatted@3.3.2:
    resolution: {integrity: sha512-AiwGJM8YcNOaobumgtng+6NHuOqC3A7MixFeDafM3X9cIUM+xUXoS5Vfgf+OihAYe20fxqNM9yPBXJzRtZ/4eA==}

  follow-redirects@1.15.9:
    resolution: {integrity: sha512-gew4GsXizNgdoRyqmyfMHyAmXsZDk6mHkSxZFCzW9gwlbtOW44CDtYavM+y+72qD/Vq2l550kMF52DT8fOLJqQ==}
    engines: {node: '>=4.0'}
    peerDependencies:
      debug: '*'
    peerDependenciesMeta:
      debug:
        optional: true

  for-each@0.3.4:
    resolution: {integrity: sha512-kKaIINnFpzW6ffJNDjjyjrk21BkDx38c0xa/klsT8VzLCaMEefv4ZTacrcVR4DmgTeBra++jMDAfS/tS799YDw==}
    engines: {node: '>= 0.4'}

  foreground-child@3.3.0:
    resolution: {integrity: sha512-Ld2g8rrAyMYFXBhEqMz8ZAHBi4J4uS1i/CxGMDnjyFWddMXLVcDp051DZfu+t7+ab7Wv6SMqpWmyFIj5UbfFvg==}
    engines: {node: '>=14'}

  fork-ts-checker-webpack-plugin@9.0.2:
    resolution: {integrity: sha512-Uochze2R8peoN1XqlSi/rGUkDQpRogtLFocP9+PGu68zk1BDAKXfdeCdyVZpgTk8V8WFVQXdEz426VKjXLO1Gg==}
    engines: {node: '>=12.13.0', yarn: '>=1.0.0'}
    peerDependencies:
      typescript: '>3.6.0'
      webpack: ^5.11.0

  form-data@4.0.1:
    resolution: {integrity: sha512-tzN8e4TX8+kkxGPK8D5u0FNmjPUjw3lwC9lSLxxoB/+GtsJG91CO8bSWy73APlgAZzZbXEYZJuxjkHH2w+Ezhw==}
    engines: {node: '>= 6'}

  formidable@3.5.2:
    resolution: {integrity: sha512-Jqc1btCy3QzRbJaICGwKcBfGWuLADRerLzDqi2NwSt/UkXLsHJw2TVResiaoBufHVHy9aSgClOHCeJsSsFLTbg==}

  forwarded@0.2.0:
    resolution: {integrity: sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==}
    engines: {node: '>= 0.6'}

  fresh@0.5.2:
    resolution: {integrity: sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q==}
    engines: {node: '>= 0.6'}

  fs-extra@10.1.0:
    resolution: {integrity: sha512-oRXApq54ETRj4eMiFzGnHWGy+zo5raudjuxN0b8H7s/RU2oW0Wvsx9O0ACRN/kRq9E8Vu/ReskGB5o3ji+FzHQ==}
    engines: {node: '>=12'}

  fs-extra@7.0.1:
    resolution: {integrity: sha512-YJDaCJZEnBmcbw13fvdAM9AwNOJwOzrE4pqMqBq5nFiEqXUqHwlK4B+3pUw6JNvfSPtX05xFHtYy/1ni01eGCw==}
    engines: {node: '>=6 <7 || >=8'}

  fs-extra@8.1.0:
    resolution: {integrity: sha512-yhlQgA6mnOJUKOsRUFsgJdQCvkKhcz8tlZG5HBQfReYZy46OwLcY+Zia0mtdHsOo9y/hP+CxMN0TU9QxoOtG4g==}
    engines: {node: '>=6 <7 || >=8'}

  fs-monkey@1.0.6:
    resolution: {integrity: sha512-b1FMfwetIKymC0eioW7mTywihSQE4oLzQn1dB6rZB5fx/3NpNEdAWeCSMB+60/AeT0TCXsxzAlcYVEFCTAksWg==}

  fs.realpath@1.0.0:
    resolution: {integrity: sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==}

  fsevents@2.3.3:
    resolution: {integrity: sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==}
    engines: {node: ^8.16.0 || ^10.6.0 || >=11.0.0}
    os: [darwin]

  function-bind@1.1.2:
    resolution: {integrity: sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==}

  function.prototype.name@1.1.8:
    resolution: {integrity: sha512-e5iwyodOHhbMr/yNrc7fDYG4qlbIvI5gajyzPnb5TCwyhjApznQh1BMFou9b30SevY43gCJKXycoCBjMbsuW0Q==}
    engines: {node: '>= 0.4'}

  functions-have-names@1.2.3:
    resolution: {integrity: sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==}

  gensync@1.0.0-beta.2:
    resolution: {integrity: sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==}
    engines: {node: '>=6.9.0'}

  get-caller-file@2.0.5:
    resolution: {integrity: sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==}
    engines: {node: 6.* || 8.* || >= 10.*}

  get-intrinsic@1.2.7:
    resolution: {integrity: sha512-VW6Pxhsrk0KAOqs3WEd0klDiF/+V7gQOpAvY1jVU/LHmaD/kQO4523aiJuikX/QAKYiW6x8Jh+RJej1almdtCA==}
    engines: {node: '>= 0.4'}

  get-package-type@0.1.0:
    resolution: {integrity: sha512-pjzuKtY64GYfWizNAJ0fr9VqttZkNiK2iS430LtIHzjBEr6bX8Am2zm4sW4Ro5wjWW5cAlRL1qAMTcXbjNAO2Q==}
    engines: {node: '>=8.0.0'}

  get-proto@1.0.1:
    resolution: {integrity: sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==}
    engines: {node: '>= 0.4'}

  get-stream@6.0.1:
    resolution: {integrity: sha512-ts6Wi+2j3jQjqi70w5AlN8DFnkSwC+MqmxEzdEALB2qXZYV3X/b1CTfgPLGJNMeAWxdPfU8FO1ms3NUfaHCPYg==}
    engines: {node: '>=10'}

  get-symbol-description@1.1.0:
    resolution: {integrity: sha512-w9UMqWwJxHNOvoNzSJ2oPF5wvYcvP7jUvYzhp67yEhTi17ZDBBC1z9pTdGuzjD+EFIqLSYRweZjqfiPzQ06Ebg==}
    engines: {node: '>= 0.4'}

  get-tsconfig@4.10.0:
    resolution: {integrity: sha512-kGzZ3LWWQcGIAmg6iWvXn0ei6WDtV26wzHRMwDSzmAbcXrTEXxHy6IehI6/4eT6VRKyMP1eF1VqwrVUmE/LR7A==}

  glob-parent@5.1.2:
    resolution: {integrity: sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==}
    engines: {node: '>= 6'}

  glob-parent@6.0.2:
    resolution: {integrity: sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==}
    engines: {node: '>=10.13.0'}

  glob-to-regexp@0.4.1:
    resolution: {integrity: sha512-lkX1HJXwyMcprw/5YUZc2s7DrpAiHB21/V+E1rHUrVNokkvB6bqMzT0VfV6/86ZNabt1k14YOIaT7nDvOX3Iiw==}

  glob@10.3.10:
    resolution: {integrity: sha512-fa46+tv1Ak0UPK1TOy/pZrIybNNt4HCv7SDzwyfiOZkvZLEbjsZkJBPtDHVshZjbecAoAGSC20MjLDG/qr679g==}
    engines: {node: '>=16 || 14 >=14.17'}
    hasBin: true

  glob@10.4.5:
    resolution: {integrity: sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==}
    hasBin: true

  glob@7.2.3:
    resolution: {integrity: sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==}
    deprecated: Glob versions prior to v9 are no longer supported

  globals@11.12.0:
    resolution: {integrity: sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==}
    engines: {node: '>=4'}

  globals@13.24.0:
    resolution: {integrity: sha512-AhO5QUcj8llrbG09iWhPU2B204J1xnPeL8kQmVorSsy+Sjj1sk8gIyh6cUocGmH4L0UuhAJy+hJMRA4mgA4mFQ==}
    engines: {node: '>=8'}

  globals@14.0.0:
    resolution: {integrity: sha512-oahGvuMGQlPw/ivIYBjVSrWAfWLBeku5tpPE2fOPLi+WHffIWbuh2tCjhyQhTBPMf5E9jDEH4FOmTYgYwbKwtQ==}
    engines: {node: '>=18'}

  globalthis@1.0.4:
    resolution: {integrity: sha512-DpLKbNU4WylpxJykQujfCcwYWiV/Jhm50Goo0wrVILAv5jOr9d+H+UR3PhSCD2rCCEIg0uc+G+muBTwD54JhDQ==}
    engines: {node: '>= 0.4'}

  globby@11.1.0:
    resolution: {integrity: sha512-jhIXaOzy1sb8IyocaruWSn1TjmnBVs8Ayhcy83rmxNJ8q2uWKCAj3CnJY+KpGSXCueAPc0i05kVvVKtP1t9S3g==}
    engines: {node: '>=10'}

  gopd@1.2.0:
    resolution: {integrity: sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==}
    engines: {node: '>= 0.4'}

  graceful-fs@4.2.11:
    resolution: {integrity: sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==}

  graphemer@1.4.0:
    resolution: {integrity: sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==}

  has-bigints@1.1.0:
    resolution: {integrity: sha512-R3pbpkcIqv2Pm3dUwgjclDRVmWpTJW2DcMzcIhEXEx1oh/CEMObMm3KLmRJOdvhM7o4uQBnwr8pzRK2sJWIqfg==}
    engines: {node: '>= 0.4'}

  has-flag@4.0.0:
    resolution: {integrity: sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==}
    engines: {node: '>=8'}

  has-own-prop@2.0.0:
    resolution: {integrity: sha512-Pq0h+hvsVm6dDEa8x82GnLSYHOzNDt7f0ddFa3FqcQlgzEiptPqL+XrOJNavjOzSYiYWIrgeVYYgGlLmnxwilQ==}
    engines: {node: '>=8'}

  has-property-descriptors@1.0.2:
    resolution: {integrity: sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==}

  has-proto@1.2.0:
    resolution: {integrity: sha512-KIL7eQPfHQRC8+XluaIw7BHUwwqL19bQn4hzNgdr+1wXoU0KKj6rufu47lhY7KbJR2C6T6+PfyN0Ea7wkSS+qQ==}
    engines: {node: '>= 0.4'}

  has-symbols@1.1.0:
    resolution: {integrity: sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==}
    engines: {node: '>= 0.4'}

  has-tostringtag@1.0.2:
    resolution: {integrity: sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==}
    engines: {node: '>= 0.4'}

  hash-base@3.1.0:
    resolution: {integrity: sha512-1nmYp/rhMDiE7AYkDw+lLwlAzz0AntGIe51F3RfFfEqyQ3feY2eI/NcwC6umIQVOASPMsWJLJScWKSSvzL9IVA==}
    engines: {node: '>=4'}

  hash.js@1.1.7:
    resolution: {integrity: sha512-taOaskGt4z4SOANNseOviYDvjEJinIkRgmp7LbKP2YTTmVxWBl87s/uzK9r+44BclBSp2X7K1hqeNfz9JbBeXA==}

  hasown@2.0.2:
    resolution: {integrity: sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==}
    engines: {node: '>= 0.4'}

  hast-util-to-html@9.0.4:
    resolution: {integrity: sha512-wxQzXtdbhiwGAUKrnQJXlOPmHnEehzphwkK7aluUPQ+lEc1xefC8pblMgpp2w5ldBTEfveRIrADcrhGIWrlTDA==}

  hast-util-whitespace@3.0.0:
    resolution: {integrity: sha512-88JUN06ipLwsnv+dVn+OIYOvAuvBMy/Qoi6O7mQHxdPXpjy+Cd6xRkWwux7DKO+4sYILtLBRIKgsdpS2gQc7qw==}

  hexoid@2.0.0:
    resolution: {integrity: sha512-qlspKUK7IlSQv2o+5I7yhUd7TxlOG2Vr5LTa3ve2XSNVKAL/n/u/7KLvKmFNimomDIKvZFXWHv0T12mv7rT8Aw==}
    engines: {node: '>=8'}

  hmac-drbg@1.0.1:
    resolution: {integrity: sha512-Tti3gMqLdZfhOQY1Mzf/AanLiqh1WTiJgEj26ZuYQ9fbkLomzGchCws4FyrSd4VkpBfiNhaE1On+lOz894jvXg==}

  html-escaper@2.0.2:
    resolution: {integrity: sha512-H2iMtd0I4Mt5eYiapRdIDjp+XzelXQ0tFE4JS7YFwFevXXMmOp9myNrUvCg0D6ws8iqkRPBfKHgbwig1SmlLfg==}

  html-void-elements@3.0.0:
    resolution: {integrity: sha512-bEqo66MRXsUGxWHV5IP0PUiAWwoEjba4VCzg0LjFJBpchPaTfyfCKTG6bc5F8ucKec3q5y6qOdGyYTSBEvhCrg==}

  html2canvas@1.4.1:
    resolution: {integrity: sha512-fPU6BHNpsyIhr8yyMpTLLxAbkaK8ArIBcmZIRiBLiDhjeqvXolaEmDGmELFuX9I4xDcaKKcJl+TKZLqruBbmWA==}
    engines: {node: '>=8.0.0'}

  http-errors@2.0.0:
    resolution: {integrity: sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==}
    engines: {node: '>= 0.8'}

  human-id@1.0.2:
    resolution: {integrity: sha512-UNopramDEhHJD+VR+ehk8rOslwSfByxPIZyJRfV739NDhN5LF1fa1MqnzKm2lGTQRjNrjK19Q5fhkgIfjlVUKw==}

  human-signals@2.1.0:
    resolution: {integrity: sha512-B4FFZ6q/T2jhhksgkbEW3HBvWIfDW85snkQgawt07S7J5QXTk6BkNV+0yAeZrM5QpMAdYlocGoljn0sJ/WQkFw==}
    engines: {node: '>=10.17.0'}

  iconv-lite@0.4.24:
    resolution: {integrity: sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==}
    engines: {node: '>=0.10.0'}

  ieee754@1.2.1:
    resolution: {integrity: sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA==}

  ignore@5.3.2:
    resolution: {integrity: sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==}
    engines: {node: '>= 4'}

  immutable@4.3.7:
    resolution: {integrity: sha512-1hqclzwYwjRDFLjcFxOM5AYkkG0rpFPpr1RLPMEuGczoS7YA8gLhy8SWXYRAA/XwfEHpfo3cw5JGioS32fnMRw==}

  import-fresh@3.3.1:
    resolution: {integrity: sha512-TR3KfrTZTYLPB6jUjfx6MF9WcWrHL9su5TObK4ZkYgBdWKPOFoSoQIdEuTuR82pmtxH2spWG9h6etwfr1pLBqQ==}
    engines: {node: '>=6'}

  import-local@3.2.0:
    resolution: {integrity: sha512-2SPlun1JUPWoM6t3F0dw0FkCF/jWY8kttcY4f599GLTSjh2OCuuhdTkJQsEcZzBqbXZGKMK2OqW1oZsjtf/gQA==}
    engines: {node: '>=8'}
    hasBin: true

  imurmurhash@0.1.4:
    resolution: {integrity: sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==}
    engines: {node: '>=0.8.19'}

  inflight@1.0.6:
    resolution: {integrity: sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==}
    deprecated: This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.

  inherits@2.0.4:
    resolution: {integrity: sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==}

  inquirer@8.2.6:
    resolution: {integrity: sha512-M1WuAmb7pn9zdFRtQYk26ZBoY043Sse0wVDdk4Bppr+JOXyQYybdtvK+l9wUibhtjdjvtoiNy8tk+EgsYIUqKg==}
    engines: {node: '>=12.0.0'}

  inquirer@9.2.15:
    resolution: {integrity: sha512-vI2w4zl/mDluHt9YEQ/543VTCwPKWiHzKtm9dM2V0NdFcqEexDAjUHzO1oA60HRNaVifGXXM1tRRNluLVHa0Kg==}
    engines: {node: '>=18'}

  internal-slot@1.1.0:
    resolution: {integrity: sha512-4gd7VpWNQNB4UKKCFFVcp1AVv+FMOgs9NKzjHKusc8jTMhd5eL1NqQqOpE0KzMds804/yHlglp3uxgluOqAPLw==}
    engines: {node: '>= 0.4'}

  ipaddr.js@1.9.1:
    resolution: {integrity: sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==}
    engines: {node: '>= 0.10'}

  is-array-buffer@3.0.5:
    resolution: {integrity: sha512-DDfANUiiG2wC1qawP66qlTugJeL5HyzMpfr8lLK+jMQirGzNod0B12cFB/9q838Ru27sBwfw78/rdoU7RERz6A==}
    engines: {node: '>= 0.4'}

  is-arrayish@0.2.1:
    resolution: {integrity: sha512-zz06S8t0ozoDXMG+ube26zeCTNXcKIPJZJi8hBrF4idCLms4CG9QtK7qBl1boi5ODzFpjswb5JPmHCbMpjaYzg==}

  is-async-function@2.1.1:
    resolution: {integrity: sha512-9dgM/cZBnNvjzaMYHVoxxfPj2QXt22Ev7SuuPrs+xav0ukGB0S6d4ydZdEiM48kLx5kDV+QBPrpVnFyefL8kkQ==}
    engines: {node: '>= 0.4'}

  is-bigint@1.1.0:
    resolution: {integrity: sha512-n4ZT37wG78iz03xPRKJrHTdZbe3IicyucEtdRsV5yglwc3GyUfbAfpSeD0FJ41NbUNSt5wbhqfp1fS+BgnvDFQ==}
    engines: {node: '>= 0.4'}

  is-binary-path@2.1.0:
    resolution: {integrity: sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==}
    engines: {node: '>=8'}

  is-boolean-object@1.2.2:
    resolution: {integrity: sha512-wa56o2/ElJMYqjCjGkXri7it5FbebW5usLw/nPmCMs5DeZ7eziSYZhSmPRn0txqeW4LnAmQQU7FgqLpsEFKM4A==}
    engines: {node: '>= 0.4'}

  is-bun-module@1.3.0:
    resolution: {integrity: sha512-DgXeu5UWI0IsMQundYb5UAOzm6G2eVnarJ0byP6Tm55iZNKceD59LNPA2L4VvsScTtHcw0yEkVwSf7PC+QoLSA==}

  is-callable@1.2.7:
    resolution: {integrity: sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==}
    engines: {node: '>= 0.4'}

  is-core-module@2.16.1:
    resolution: {integrity: sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==}
    engines: {node: '>= 0.4'}

  is-data-view@1.0.2:
    resolution: {integrity: sha512-RKtWF8pGmS87i2D6gqQu/l7EYRlVdfzemCJN/P3UOs//x1QE7mfhvzHIApBTRf7axvT6DMGwSwBXYCT0nfB9xw==}
    engines: {node: '>= 0.4'}

  is-date-object@1.1.0:
    resolution: {integrity: sha512-PwwhEakHVKTdRNVOw+/Gyh0+MzlCl4R6qKvkhuvLtPMggI1WAHt9sOwZxQLSGpUaDnrdyDsomoRgNnCfKNSXXg==}
    engines: {node: '>= 0.4'}

  is-extglob@2.1.1:
    resolution: {integrity: sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==}
    engines: {node: '>=0.10.0'}

  is-finalizationregistry@1.1.1:
    resolution: {integrity: sha512-1pC6N8qWJbWoPtEjgcL2xyhQOP491EQjeUo3qTKcmV8YSDDJrOepfG8pcC7h/QgnQHYSv0mJ3Z/ZWxmatVrysg==}
    engines: {node: '>= 0.4'}

  is-fullwidth-code-point@3.0.0:
    resolution: {integrity: sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==}
    engines: {node: '>=8'}

  is-generator-fn@2.1.0:
    resolution: {integrity: sha512-cTIB4yPYL/Grw0EaSzASzg6bBy9gqCofvWN8okThAYIxKJZC+udlRAmGbM0XLeniEJSs8uEgHPGuHSe1XsOLSQ==}
    engines: {node: '>=6'}

  is-generator-function@1.1.0:
    resolution: {integrity: sha512-nPUB5km40q9e8UfN/Zc24eLlzdSf9OfKByBw9CIdw4H1giPMeA0OIJvbchsCu4npfI2QcMVBsGEBHKZ7wLTWmQ==}
    engines: {node: '>= 0.4'}

  is-glob@4.0.3:
    resolution: {integrity: sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==}
    engines: {node: '>=0.10.0'}

  is-interactive@1.0.0:
    resolution: {integrity: sha512-2HvIEKRoqS62guEC+qBjpvRubdX910WCMuJTZ+I9yvqKU2/12eSL549HMwtabb4oupdj2sMP50k+XJfB/8JE6w==}
    engines: {node: '>=8'}

  is-map@2.0.3:
    resolution: {integrity: sha512-1Qed0/Hr2m+YqxnM09CjA2d/i6YZNfF6R2oRAOj36eUdS6qIV/huPJNSEpKbupewFs+ZsJlxsjjPbc0/afW6Lw==}
    engines: {node: '>= 0.4'}

  is-number-object@1.1.1:
    resolution: {integrity: sha512-lZhclumE1G6VYD8VHe35wFaIif+CTy5SJIi5+3y4psDgWu4wPDoBhF8NxUOinEc7pHgiTsT6MaBb92rKhhD+Xw==}
    engines: {node: '>= 0.4'}

  is-number@7.0.0:
    resolution: {integrity: sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==}
    engines: {node: '>=0.12.0'}

  is-path-inside@3.0.3:
    resolution: {integrity: sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==}
    engines: {node: '>=8'}

  is-regex@1.2.1:
    resolution: {integrity: sha512-MjYsKHO5O7mCsmRGxWcLWheFqN9DJ/2TmngvjKXihe6efViPqc274+Fx/4fYj/r03+ESvBdTXK0V6tA3rgez1g==}
    engines: {node: '>= 0.4'}

  is-set@2.0.3:
    resolution: {integrity: sha512-iPAjerrse27/ygGLxw+EBR9agv9Y6uLeYVJMu+QNCoouJ1/1ri0mGrcWpfCqFZuzzx3WjtwxG098X+n4OuRkPg==}
    engines: {node: '>= 0.4'}

  is-shared-array-buffer@1.0.4:
    resolution: {integrity: sha512-ISWac8drv4ZGfwKl5slpHG9OwPNty4jOWPRIhBpxOoD+hqITiwuipOQ2bNthAzwA3B4fIjO4Nln74N0S9byq8A==}
    engines: {node: '>= 0.4'}

  is-stream@2.0.1:
    resolution: {integrity: sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg==}
    engines: {node: '>=8'}

  is-string@1.1.1:
    resolution: {integrity: sha512-BtEeSsoaQjlSPBemMQIrY1MY0uM6vnS1g5fmufYOtnxLGUZM2178PKbhsk7Ffv58IX+ZtcvoGwccYsh0PglkAA==}
    engines: {node: '>= 0.4'}

  is-subdir@1.2.0:
    resolution: {integrity: sha512-2AT6j+gXe/1ueqbW6fLZJiIw3F8iXGJtt0yDrZaBhAZEG1raiTxKWU+IPqMCzQAXOUCKdA4UDMgacKH25XG2Cw==}
    engines: {node: '>=4'}

  is-symbol@1.1.1:
    resolution: {integrity: sha512-9gGx6GTtCQM73BgmHQXfDmLtfjjTUDSyoxTCbp5WtoixAhfgsDirWIcVQ/IHpvI5Vgd5i/J5F7B9cN/WlVbC/w==}
    engines: {node: '>= 0.4'}

  is-typed-array@1.1.15:
    resolution: {integrity: sha512-p3EcsicXjit7SaskXHs1hA91QxgTw46Fv6EFKKGS5DRFLD8yKnohjF3hxoju94b/OcMZoQukzpPpBE9uLVKzgQ==}
    engines: {node: '>= 0.4'}

  is-unicode-supported@0.1.0:
    resolution: {integrity: sha512-knxG2q4UC3u8stRGyAVJCOdxFmv5DZiRcdlIaAQXAbSfJya+OhopNotLQrstBhququ4ZpuKbDc/8S6mgXgPFPw==}
    engines: {node: '>=10'}

  is-weakmap@2.0.2:
    resolution: {integrity: sha512-K5pXYOm9wqY1RgjpL3YTkF39tni1XajUIkawTLUo9EZEVUFga5gSQJF8nNS7ZwJQ02y+1YCNYcMh+HIf1ZqE+w==}
    engines: {node: '>= 0.4'}

  is-weakref@1.1.1:
    resolution: {integrity: sha512-6i9mGWSlqzNMEqpCp93KwRS1uUOodk2OJ6b+sq7ZPDSy2WuI5NFIxp/254TytR8ftefexkWn5xNiHUNpPOfSew==}
    engines: {node: '>= 0.4'}

  is-weakset@2.0.4:
    resolution: {integrity: sha512-mfcwb6IzQyOKTs84CQMrOwW4gQcaTOAWJ0zzJCl2WSPDrWk/OzDaImWFH3djXhb24g4eudZfLRozAvPGw4d9hQ==}
    engines: {node: '>= 0.4'}

  is-windows@1.0.2:
    resolution: {integrity: sha512-eXK1UInq2bPmjyX6e3VHIzMLobc4J94i4AWn+Hpq3OU5KkrRC96OAcR3PRJ/pGu6m8TRnBHP9dkXQVsT/COVIA==}
    engines: {node: '>=0.10.0'}

  isarray@0.0.1:
    resolution: {integrity: sha512-D2S+3GLxWH+uhrNEcoh/fnmYeP8E8/zHl644d/jdA0g2uyXvy3sb0qxotE+ne0LtccHknQzWwZEzhak7oJ0COQ==}

  isarray@1.0.0:
    resolution: {integrity: sha512-VLghIWNM6ELQzo7zwmcg0NmTVyWKYjvIeM83yjp0wRDTmUnrM678fQbcKBo6n2CJEF0szoG//ytg+TKla89ALQ==}

  isarray@2.0.5:
    resolution: {integrity: sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==}

  isexe@2.0.0:
    resolution: {integrity: sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==}

  isomorphic-ws@5.0.0:
    resolution: {integrity: sha512-muId7Zzn9ywDsyXgTIafTry2sV3nySZeUDe6YedVd1Hvuuep5AsIlqK+XefWpYTyJG5e503F2xIuT2lcU6rCSw==}
    peerDependencies:
      ws: '*'

  istanbul-lib-coverage@3.2.2:
    resolution: {integrity: sha512-O8dpsF+r0WV/8MNRKfnmrtCWhuKjxrq2w+jpzBL5UZKTi2LeVWnWOmWRxFlesJONmc+wLAGvKQZEOanko0LFTg==}
    engines: {node: '>=8'}

  istanbul-lib-instrument@5.2.1:
    resolution: {integrity: sha512-pzqtp31nLv/XFOzXGuvhCb8qhjmTVo5vjVk19XE4CRlSWz0KoeJ3bw9XsA7nOp9YBf4qHjwBxkDzKcME/J29Yg==}
    engines: {node: '>=8'}

  istanbul-lib-instrument@6.0.3:
    resolution: {integrity: sha512-Vtgk7L/R2JHyyGW07spoFlB8/lpjiOLTjMdms6AFMraYt3BaJauod/NGrfnVG/y4Ix1JEuMRPDPEj2ua+zz1/Q==}
    engines: {node: '>=10'}

  istanbul-lib-report@3.0.1:
    resolution: {integrity: sha512-GCfE1mtsHGOELCU8e/Z7YWzpmybrx/+dSTfLrvY8qRmaY6zXTKWn6WQIjaAFw069icm6GVMNkgu0NzI4iPZUNw==}
    engines: {node: '>=10'}

  istanbul-lib-source-maps@4.0.1:
    resolution: {integrity: sha512-n3s8EwkdFIJCG3BPKBYvskgXGoy88ARzvegkitk60NxRdwltLOTaH7CUiMRXvwYorl0Q712iEjcWB+fK/MrWVw==}
    engines: {node: '>=10'}

  istanbul-lib-source-maps@5.0.6:
    resolution: {integrity: sha512-yg2d+Em4KizZC5niWhQaIomgf5WlL4vOOjZ5xGCmF8SnPE/mDWWXgvRExdcpCgh9lLRRa1/fSYp2ymmbJ1pI+A==}
    engines: {node: '>=10'}

  istanbul-reports@3.1.7:
    resolution: {integrity: sha512-BewmUXImeuRk2YY0PVbxgKAysvhRPUQE0h5QRM++nVWyubKGV0l8qQ5op8+B2DOmwSe63Jivj0BjkPQVf8fP5g==}
    engines: {node: '>=8'}

  iterare@1.2.1:
    resolution: {integrity: sha512-RKYVTCjAnRthyJes037NX/IiqeidgN1xc3j1RjFfECFp28A1GVwK9nA+i0rJPaHqSZwygLzRnFlzUuHFoWWy+Q==}
    engines: {node: '>=6'}

  iterator.prototype@1.1.5:
    resolution: {integrity: sha512-H0dkQoCa3b2VEeKQBOxFph+JAbcrQdE7KC0UkqwpLmv2EC4P41QXP+rqo9wYodACiG5/WM5s9oDApTU8utwj9g==}
    engines: {node: '>= 0.4'}

  jackspeak@2.3.6:
    resolution: {integrity: sha512-N3yCS/NegsOBokc8GAdM8UcmfsKiSS8cipheD/nivzr700H+nsMOxJjQnvwOcRYVuFkdH0wGUvW2WbXGmrZGbQ==}
    engines: {node: '>=14'}

  jackspeak@3.4.3:
    resolution: {integrity: sha512-OGlZQpz2yfahA/Rd1Y8Cd9SIEsqvXkLVoSw/cgwhnhFMDbsQFeZYoJJ7bIZBS9BcamUW96asq/npPWugM+RQBw==}

  jake@10.9.2:
    resolution: {integrity: sha512-2P4SQ0HrLQ+fw6llpLnOaGAvN2Zu6778SJMrCUwns4fOoG9ayrTiZk3VV8sCPkVZF8ab0zksVpS8FDY5pRCNBA==}
    engines: {node: '>=10'}
    hasBin: true

  jest-changed-files@29.7.0:
    resolution: {integrity: sha512-fEArFiwf1BpQ+4bXSprcDc3/x4HSzL4al2tozwVpDFpsxALjLYdyiIK4e5Vz66GQJIbXJ82+35PtysofptNX2w==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  jest-changed-files@30.0.0-alpha.6:
    resolution: {integrity: sha512-Fmyt6W27L4fRBl/gReFC4WU+3XIqB7ySHu+a9QxrERapfCb43o7y81TCvTwJHSw5dxGzXLOObVB0tRMDWMafnw==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  jest-circus@29.7.0:
    resolution: {integrity: sha512-3E1nCMgipcTkCocFwM90XXQab9bS+GMsjdpmPrlelaxwD93Ad8iVEjX/vvHPdLPnFf+L40u+5+iutRdA1N9myw==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  jest-circus@30.0.0-alpha.6:
    resolution: {integrity: sha512-1C62WeTyWinn6zR61syYKe5yqVbV+ftf21vOgj8AtTxGfMUAlGCpeZ5zh4Kc9Qk7r/PiPiHWZtgZmeT4oe9Dug==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  jest-cli@29.7.0:
    resolution: {integrity: sha512-OVVobw2IubN/GSYsxETi+gOe7Ka59EFMR/twOU3Jb2GnKKeMGJB5SGUUrEz3SFVmJASUdZUzy83sLNNQ2gZslg==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
    hasBin: true
    peerDependencies:
      node-notifier: ^8.0.1 || ^9.0.0 || ^10.0.0
    peerDependenciesMeta:
      node-notifier:
        optional: true

  jest-cli@30.0.0-alpha.6:
    resolution: {integrity: sha512-3VYzI2KgpMNAsf+LdRAQtAbhH3IDyFnT36U6URXot+2JWwoCGQQ6w4HIfqyOSlH4aejKgTPSfxki2shRPDFtlQ==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}
    hasBin: true
    peerDependencies:
      node-notifier: ^8.0.1 || ^9.0.0 || ^10.0.0
    peerDependenciesMeta:
      node-notifier:
        optional: true

  jest-config@29.7.0:
    resolution: {integrity: sha512-uXbpfeQ7R6TZBqI3/TxCU4q4ttk3u0PJeC+E0zbfSoSjq6bJ7buBPxzQPL0ifrkY4DNu4JUdk0ImlBUYi840eQ==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
    peerDependencies:
      '@types/node': '*'
      ts-node: '>=9.0.0'
    peerDependenciesMeta:
      '@types/node':
        optional: true
      ts-node:
        optional: true

  jest-config@30.0.0-alpha.6:
    resolution: {integrity: sha512-Tq9rH1mg9+nlIhh3efGwMSogFVKZ9z7c6P33ZlK74iJlnqqIAKYERZL2nNmNC5+5p8uxlTPSFZfBz9O8NGKotw==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}
    peerDependencies:
      '@types/node': '*'
      esbuild-register: '>=3.4.0'
      ts-node: '>=9.0.0'
    peerDependenciesMeta:
      '@types/node':
        optional: true
      esbuild-register:
        optional: true
      ts-node:
        optional: true

  jest-diff@29.7.0:
    resolution: {integrity: sha512-LMIgiIrhigmPrs03JHpxUh2yISK3vLFPkAodPeo0+BuF7wA2FoQbkEg1u8gBYBThncu7e1oEDUfIXVuTqLRUjw==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  jest-diff@30.0.0-alpha.6:
    resolution: {integrity: sha512-43j1DoYwVKrkbB67a2gC0ijjIY9biF0JSPXv7H6zlOkzNlqYg8hSDzrurLNo6zGKatW4JSBLE79LmXPJPj1m6A==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  jest-docblock@29.7.0:
    resolution: {integrity: sha512-q617Auw3A612guyaFgsbFeYpNP5t2aoUNLwBUbc/0kD1R4t9ixDbyFTHd1nok4epoVFpr7PmeWHrhvuV3XaJ4g==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  jest-docblock@30.0.0-alpha.6:
    resolution: {integrity: sha512-KXRLgRo7/rF1wqxQupsFCZa6wOp1qrDg4GdSXKfIHODYQb0dpi4rYaYA8xV5l2g9KwYc9/zV7l1tPe9TOr27ew==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  jest-each@29.7.0:
    resolution: {integrity: sha512-gns+Er14+ZrEoC5fhOfYCY1LOHHr0TI+rQUHZS8Ttw2l7gl+80eHc/gFf2Ktkw0+SIACDTeWvpFcv3B04VembQ==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  jest-each@30.0.0-alpha.6:
    resolution: {integrity: sha512-snLI2JNYkoBMlZRrNk67XiauUy+uEzRCszKdj+cqHyZ4/MU8fz7gCxbn3g0zmiGUxr0RX0534UxMjc82Sk++tg==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  jest-environment-node@29.7.0:
    resolution: {integrity: sha512-DOSwCRqXirTOyheM+4d5YZOrWcdu0LNZ87ewUoywbcb2XR4wKgqiG8vNeYwhjFMbEkfju7wx2GYH0P2gevGvFw==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  jest-environment-node@30.0.0-alpha.6:
    resolution: {integrity: sha512-UN9W3dFzO150Bqj1x+1pq7dMUqw/QhpqhdtmC3B1P6GD9eKEMFGuRw3EButx5SGzrZOqRNlF+tUNC8CoWGW2Og==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  jest-get-type@29.6.3:
    resolution: {integrity: sha512-zrteXnqYxfQh7l5FHyL38jL39di8H8rHoecLH3JNxH3BwOrBsNeabdap5e0I23lD4HHI8W5VFBZqG4Eaq5LNcw==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  jest-get-type@30.0.0-alpha.6:
    resolution: {integrity: sha512-lJEoQdCY4ICN6+T0lJ9BODKuqPOEpCv2NnJsEO1nmsK0fbWZmN/pgOPHVqLfK8i3jZpUmgupJ1w8r36mc8iiBQ==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  jest-haste-map@29.7.0:
    resolution: {integrity: sha512-fP8u2pyfqx0K1rGn1R9pyE0/KTn+G7PxktWidOBTqFPLYX0b9ksaMFkhK5vrS3DVun09pckLdlx90QthlW7AmA==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  jest-haste-map@30.0.0-alpha.6:
    resolution: {integrity: sha512-NR/Kw8HyOkuWIdT8ynsp9KnsTDvWnlz8WSOmtQxySTIzOWbZaeJ2FJi9LoDL6+vhKpdlLfUvhgZVtnFJSLCzew==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  jest-leak-detector@29.7.0:
    resolution: {integrity: sha512-kYA8IJcSYtST2BY9I+SMC32nDpBT3J2NvWJx8+JCuCdl/CR1I4EKUJROiP8XtCcxqgTTBGJNdbB1A8XRKbTetw==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  jest-leak-detector@30.0.0-alpha.6:
    resolution: {integrity: sha512-a6fh/6h6dCDyj+aplGqkajVqzmi+qYHs5X8orMZv+u56++gUezJZJf8GCiQqw2vtxcsWVPUuQXa3kF33tAYzNQ==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  jest-matcher-utils@29.7.0:
    resolution: {integrity: sha512-sBkD+Xi9DtcChsI3L3u0+N0opgPYnCRPtGcQYrgXmR+hmt/fYfWAL0xRXYU8eWOdfuLgBe0YCW3AFtnRLagq/g==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  jest-matcher-utils@30.0.0-alpha.6:
    resolution: {integrity: sha512-jaq7+HznsK54G0qzu96ZwfMEKHmlPiDqg6qG2p/hVQzr6Y/qVMRh8abI9Y1lX6SSXkr+S9mPAkmOsuJNLTLYmQ==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  jest-message-util@29.7.0:
    resolution: {integrity: sha512-GBEV4GRADeP+qtB2+6u61stea8mGcOT4mCtrYISZwfu9/ISHFJ/5zOMXYbpBE9RsS5+Gb63DW4FgmnKJ79Kf6w==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  jest-message-util@30.0.0-alpha.6:
    resolution: {integrity: sha512-XAGJqkrBo7m3bFxWqiNqL0PyAWGf1XHR6bTve90MjBKJuIzhJsounGTzBNUw8JoU7Uzcj5Z6ZmEhaE3CDnwjfw==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  jest-mock@29.7.0:
    resolution: {integrity: sha512-ITOMZn+UkYS4ZFh83xYAOzWStloNzJFO2s8DWrE4lhtGD+AorgnbkiKERe4wQVBydIGPx059g6riW5Btp6Llnw==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  jest-mock@30.0.0-alpha.6:
    resolution: {integrity: sha512-ezW02IXiKyFYAgDuxfAlONWULitSaB66t411fq2BJxQtgyMGtv59CsnhgbKb0gQp+9vig5MO5ytDCUPalTbarg==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  jest-pnp-resolver@1.2.3:
    resolution: {integrity: sha512-+3NpwQEnRoIBtx4fyhblQDPgJI0H1IEIkX7ShLUjPGA7TtUTvI1oiKi3SR4oBR0hQhQR80l4WAe5RrXBwWMA8w==}
    engines: {node: '>=6'}
    peerDependencies:
      jest-resolve: '*'
    peerDependenciesMeta:
      jest-resolve:
        optional: true

  jest-regex-util@29.6.3:
    resolution: {integrity: sha512-KJJBsRCyyLNWCNBOvZyRDnAIfUiRJ8v+hOBQYGn8gDyF3UegwiP4gwRR3/SDa42g1YbVycTidUF3rKjyLFDWbg==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  jest-regex-util@30.0.0-alpha.6:
    resolution: {integrity: sha512-XcsAVaqc69QyMz1/FChyhWSoAMaKcDPhFOuWJz/H51LppsyZRAJPXkPnMopsS+qfut8cggExr9QLcsYaX6hqqA==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  jest-resolve-dependencies@29.7.0:
    resolution: {integrity: sha512-un0zD/6qxJ+S0et7WxeI3H5XSe9lTBBR7bOHCHXkKR6luG5mwDDlIzVQ0V5cZCuoTgEdcdwzTghYkTWfubi+nA==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  jest-resolve-dependencies@30.0.0-alpha.6:
    resolution: {integrity: sha512-G+st0nBR4FNIvVCHq8YNJBiG6t7u0+cxM099lbtOoJNJU+ZTdIxSyzPnnmp/C+YHd1QOlDNlplvL+xe1KHhPUA==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  jest-resolve@29.7.0:
    resolution: {integrity: sha512-IOVhZSrg+UvVAshDSDtHyFCCBUl/Q3AAJv8iZ6ZjnZ74xzvwuzLXid9IIIPgTnY62SJjfuupMKZsZQRsCvxEgA==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  jest-resolve@30.0.0-alpha.6:
    resolution: {integrity: sha512-0EyeId+RFng52qHvuxOzKjZd2uDF/2Hdzpzt54+biGgY/VVAvf8mYE9UV7g6154Ozpq6KLztSqqMCfPgVs4CbA==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  jest-runner@29.7.0:
    resolution: {integrity: sha512-fsc4N6cPCAahybGBfTRcq5wFR6fpLznMg47sY5aDpsoejOcVYFb07AHuSnR0liMcPTgBsA3ZJL6kFOjPdoNipQ==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  jest-runner@30.0.0-alpha.6:
    resolution: {integrity: sha512-SoADy4YnspMpXLNnRCXNIoinm1N5SMci+iF6Y29Duv3wnWhcL14XjEOcyUKBB+AIL52YwouLeUHkCyCspbBk1Q==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  jest-runtime@29.7.0:
    resolution: {integrity: sha512-gUnLjgwdGqW7B4LvOIkbKs9WGbn+QLqRQQ9juC6HndeDiezIwhDP+mhMwHWCEcfQ5RUXa6OPnFF8BJh5xegwwQ==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  jest-runtime@30.0.0-alpha.6:
    resolution: {integrity: sha512-p7w7DSFFzwHyR4HsNXca/p32VpL9MLT1c71+VplFJIEgeRHvyqxrARentlul6uJniwtlqvZrVVf5baCQ5a5GUw==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  jest-snapshot@29.7.0:
    resolution: {integrity: sha512-Rm0BMWtxBcioHr1/OX5YCP8Uov4riHvKPknOGs804Zg9JGZgmIBkbtlxJC/7Z4msKYVbIJtfU+tKb8xlYNfdkw==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  jest-snapshot@30.0.0-alpha.6:
    resolution: {integrity: sha512-YCBUxSNJ9YGch3tyQdxQkOUitbmXahHL6UhSQeSMERFfX1UMrHyEDHggglocCUg4G3jdU8YzshxOJ/oaR6Ph8w==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  jest-util@29.7.0:
    resolution: {integrity: sha512-z6EbKajIpqGKU56y5KBUgy1dt1ihhQJgWzUlZHArA/+X2ad7Cb5iF+AK1EWVL/Bo7Rz9uurpqw6SiBCefUbCGA==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  jest-util@30.0.0-alpha.6:
    resolution: {integrity: sha512-JlimakOVDyoMC8TEG+knoufxUqLG+Btihf1G8o5sHxz54C6oL54Wetfepp+Nhuj/1hSL0sQtkovvjlEycf9i0w==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  jest-validate@29.7.0:
    resolution: {integrity: sha512-ZB7wHqaRGVw/9hST/OuFUReG7M8vKeq0/J2egIGLdvjHCmYqGARhzXmtgi+gVeZ5uXFF219aOc3Ls2yLg27tkw==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  jest-validate@30.0.0-alpha.6:
    resolution: {integrity: sha512-sINLwCenOUeJVzS5p+o1NhwKsY0de5Es0J7bsaSuZJQGRY67W20idceflr+aZ2akrKgvvqU8Tsg6lkFQyq+a6Q==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  jest-watcher@29.7.0:
    resolution: {integrity: sha512-49Fg7WXkU3Vl2h6LbLtMQ/HyB6rXSIX7SqvBLQmssRBGN9I0PNvPmAmCWSOY6SOvrjhI/F7/bGAv9RtnsPA03g==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  jest-watcher@30.0.0-alpha.6:
    resolution: {integrity: sha512-+zL1y3GSJG8EOxVSc2p0dndis0rNDcwKTs4b1bpNTI0XneeTiZlCpRBNYI+sqBl/eZtJBrQdiBRSYz7kJqg7NQ==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  jest-worker@27.5.1:
    resolution: {integrity: sha512-7vuh85V5cdDofPyxn58nrPjBktZo0u9x1g8WtjQol+jZDaE+fhN+cIvTj11GndBnMnyfrUOG1sZQxCdjKh+DKg==}
    engines: {node: '>= 10.13.0'}

  jest-worker@29.7.0:
    resolution: {integrity: sha512-eIz2msL/EzL9UFTFFx7jBTkeZfku0yUAyZZZmJ93H2TYEiroIx2PQjEXcwYtYl8zXCxb+PAmA2hLIt/6ZEkPHw==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  jest-worker@30.0.0-alpha.6:
    resolution: {integrity: sha512-qlzX7zFT/QdUV/LWsJwZBlaIBaJ+E2VH3d1gArGVP+9hUHGpJkEzCSBK7yuZrkt+M/U0Jre5+maPRmkinEF4DA==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  jest@29.7.0:
    resolution: {integrity: sha512-NIy3oAFp9shda19hy4HK0HRTWKtPJmGdnvywu01nOqNC2vZg+Z+fvJDxpMQA88eb2I9EcafcdjYgsDthnYTvGw==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
    hasBin: true
    peerDependencies:
      node-notifier: ^8.0.1 || ^9.0.0 || ^10.0.0
    peerDependenciesMeta:
      node-notifier:
        optional: true

  jest@30.0.0-alpha.6:
    resolution: {integrity: sha512-9T3nAcIAcEpCX2MdxcjG2IDfG/0tjumnCkVNGh+AKkRXcWF4Er5jLROKvXsgXUJCmr/nMqLF6LG0GrDJ0kjFag==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}
    hasBin: true
    peerDependencies:
      node-notifier: ^8.0.1 || ^9.0.0 || ^10.0.0
    peerDependenciesMeta:
      node-notifier:
        optional: true

  jiti@1.21.7:
    resolution: {integrity: sha512-/imKNG4EbWNrVjoNC/1H5/9GFy+tqjGBHCaSsN+P2RnPqjsLmv6UD3Ej+Kj8nBWaRAwyk7kK5ZUc+OEatnTR3A==}
    hasBin: true

  js-tokens@4.0.0:
    resolution: {integrity: sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==}

  js-xxhash@1.0.4:
    resolution: {integrity: sha512-S/6Oo7ruxx5k8m4qlMnbpwQdJjRsvvfcIhIk1dA9c5y5GNhYHKYKu9krEK3QgBax6CxJuf4gRL2opgLkdzWIKg==}
    engines: {node: '>=8.0.0'}

  js-yaml@3.14.1:
    resolution: {integrity: sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==}
    hasBin: true

  js-yaml@4.1.0:
    resolution: {integrity: sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==}
    hasBin: true

  jsbi@3.1.3:
    resolution: {integrity: sha512-nBJqA0C6Qns+ZxurbEoIR56wyjiUszpNy70FHvxO5ervMoCbZVE3z3kxr5nKGhlxr/9MhKTSUBs7cAwwuf3g9w==}

  jsbi@4.3.0:
    resolution: {integrity: sha512-SnZNcinB4RIcnEyZqFPdGPVgrg2AcnykiBy0sHVJQKHYeaLUvi3Exj+iaPpLnFVkDPZIV4U0yvgC9/R4uEAZ9g==}

  jsesc@3.1.0:
    resolution: {integrity: sha512-/sM3dO2FOzXjKQhJuo0Q173wf2KOo8t4I8vHy6lF9poUp7bKT0/NHE8fPX23PwfhnykfqnC2xRxOnVw5XuGIaA==}
    engines: {node: '>=6'}
    hasBin: true

  json-buffer@3.0.1:
    resolution: {integrity: sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==}

  json-parse-even-better-errors@2.3.1:
    resolution: {integrity: sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w==}

  json-schema-traverse@0.4.1:
    resolution: {integrity: sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==}

  json-schema-traverse@1.0.0:
    resolution: {integrity: sha512-NM8/P9n3XjXhIZn1lLhkFaACTOURQXjWhV4BA/RnOv8xvgqtqpAX9IO4mRQxSx1Rlo4tqzeqb0sOlruaOy3dug==}

  json-stable-stringify-without-jsonify@1.0.1:
    resolution: {integrity: sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==}

  json5@1.0.2:
    resolution: {integrity: sha512-g1MWMLBiz8FKi1e4w0UyVL3w+iJceWAFBAaBnnGKOpNa5f8TLktkbre1+s6oICydWAm+HRUGTmI+//xv2hvXYA==}
    hasBin: true

  json5@2.2.3:
    resolution: {integrity: sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==}
    engines: {node: '>=6'}
    hasBin: true

  jsonc-parser@3.2.1:
    resolution: {integrity: sha512-AilxAyFOAcK5wA1+LeaySVBrHsGQvUFCDWXKpZjzaL0PqW+xfBOttn8GNtWKFWqneyMZj41MWF9Kl6iPWLwgOA==}

  jsonc-parser@3.3.1:
    resolution: {integrity: sha512-HUgH65KyejrUFPvHFPbqOY0rsFip3Bo5wb4ngvdi1EpCYWUQDC5V+Y7mZws+DLkr4M//zQJoanu1SP+87Dv1oQ==}

  jsonfile@4.0.0:
    resolution: {integrity: sha512-m6F1R3z8jjlf2imQHS2Qez5sjKWQzbuuhuJ/FKYFRZvPE3PuHcSMVZzfsLhGVOkfd20obL5SWEBew5ShlquNxg==}

  jsonfile@6.1.0:
    resolution: {integrity: sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==}

  jsx-ast-utils@3.3.5:
    resolution: {integrity: sha512-ZZow9HBI5O6EPgSJLUb8n2NKgmVWTwCvHGwFuJlMjvLFqlGG6pjirPhtdsseaLZjSibD8eegzmYpUZwoIlj2cQ==}
    engines: {node: '>=4.0'}

  keyv@4.5.4:
    resolution: {integrity: sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==}

  kleur@3.0.3:
    resolution: {integrity: sha512-eTIzlVOSUR+JxdDFepEYcBMtZ9Qqdef+rnzWdRZuMbOywu5tO2w2N7rqjoANZ5k9vywhL6Br1VRjUIgTQx4E8w==}
    engines: {node: '>=6'}

  language-subtag-registry@0.3.23:
    resolution: {integrity: sha512-0K65Lea881pHotoGEa5gDlMxt3pctLi2RplBb7Ezh4rRdLEOtgi7n4EwK9lamnUCkKBqaeKRVebTq6BAxSkpXQ==}

  language-tags@1.0.9:
    resolution: {integrity: sha512-MbjN408fEndfiQXbFQ1vnd+1NoLDsnQW41410oQBXiyXDMYH5z505juWa4KUE1LqxRC7DgOgZDbKLxHIwm27hA==}
    engines: {node: '>=0.10'}

  leven@3.1.0:
    resolution: {integrity: sha512-qsda+H8jTaUaN/x5vzW2rzc+8Rw4TAQ/4KjB46IwK5VH+IlVeeeje/EoZRpiXvIqjFgK84QffqPztGI3VBLG1A==}
    engines: {node: '>=6'}

  levn@0.4.1:
    resolution: {integrity: sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==}
    engines: {node: '>= 0.8.0'}

  libphonenumber-js@1.11.19:
    resolution: {integrity: sha512-bW/Yp/9dod6fmyR+XqSUL1N5JE7QRxQ3KrBIbYS1FTv32e5i3SEtQVX+71CYNv8maWNSOgnlCoNp9X78f/cKiA==}

  lilconfig@3.1.3:
    resolution: {integrity: sha512-/vlFKAoH5Cgt3Ie+JLhRbwOsCQePABiU3tJ1egGvyQ+33R/vcwM2Zl2QR/LzjsBeItPt3oSVXapn+m4nQDvpzw==}
    engines: {node: '>=14'}

  lines-and-columns@1.2.4:
    resolution: {integrity: sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==}

  linkify-it@5.0.0:
    resolution: {integrity: sha512-5aHCbzQRADcdP+ATqnDuhhJ/MRIqDkZX5pyjFHRRysS8vZ5AbqGEoFIb6pYHPZ+L/OC2Lc+xT8uHVVR5CAK/wQ==}

  lit-element@4.1.1:
    resolution: {integrity: sha512-HO9Tkkh34QkTeUmEdNYhMT8hzLid7YlMlATSi1q4q17HE5d9mrrEHJ/o8O2D0cMi182zK1F3v7x0PWFjrhXFew==}

  lit-html@3.2.1:
    resolution: {integrity: sha512-qI/3lziaPMSKsrwlxH/xMgikhQ0EGOX2ICU73Bi/YHFvz2j/yMCIrw4+puF2IpQ4+upd3EWbvnHM9+PnJn48YA==}

  lit@3.2.1:
    resolution: {integrity: sha512-1BBa1E/z0O9ye5fZprPtdqnc0BFzxIxTTOO/tQFmyC/hj1O3jL4TfmLBw0WEwjAokdLwpclkvGgDJwTIh0/22w==}

  loader-runner@4.3.0:
    resolution: {integrity: sha512-3R/1M+yS3j5ou80Me59j7F9IMs4PXs3VqRrm0TU3AbKPxlmpoY1TNscJV/oGJXo8qCatFGTfDbY6W6ipGOYXfg==}
    engines: {node: '>=6.11.5'}

  loader-utils@2.0.4:
    resolution: {integrity: sha512-xXqpXoINfFhgua9xiqD8fPFHgkoq1mmmpE92WlDbm9rNRd/EbRb+Gqf908T2DMfuHjjJlksiK2RbHVOdD/MqSw==}
    engines: {node: '>=8.9.0'}

  locate-path@5.0.0:
    resolution: {integrity: sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==}
    engines: {node: '>=8'}

  locate-path@6.0.0:
    resolution: {integrity: sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==}
    engines: {node: '>=10'}

  lodash.memoize@4.1.2:
    resolution: {integrity: sha512-t7j+NzmgnQzTAYXcsHYLgimltOV1MXHtlOWf6GjL9Kj8GK5FInw5JotxvbOs+IvV1/Dzo04/fCGfLVs7aXb4Ag==}

  lodash.merge@4.6.2:
    resolution: {integrity: sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==}

  lodash.startcase@4.4.0:
    resolution: {integrity: sha512-+WKqsK294HMSc2jEbNgpHpd0JfIBhp7rEV4aqXWqFr6AlXov+SlcgB1Fv01y2kGe3Gc8nMW7VA0SrGuSkRfIEg==}

  lodash@4.17.21:
    resolution: {integrity: sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==}

  log-symbols@4.1.0:
    resolution: {integrity: sha512-8XPvpAA8uyhfteu8pIvQxpJZ7SYYdpUivZpGy6sFsBuKRY/7rQGavedeB8aK+Zkyq6upMFVL/9AW6vOYzfRyLg==}
    engines: {node: '>=10'}

  loose-envify@1.4.0:
    resolution: {integrity: sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==}
    hasBin: true

  lru-cache@10.4.3:
    resolution: {integrity: sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==}

  lru-cache@5.1.1:
    resolution: {integrity: sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==}

  lucide-react@0.427.0:
    resolution: {integrity: sha512-lv9s6c5BDF/ccuA0EgTdskTxIe11qpwBDmzRZHJAKtp8LTewAvDvOM+pTES9IpbBuTqkjiMhOmGpJ/CB+mKjFw==}
    peerDependencies:
      react: ^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0-rc

  lucide-react@0.438.0:
    resolution: {integrity: sha512-uq6yCB+IzVfgIPMK8ibkecXSWTTSOMs9UjUgZigfrDCVqgdwkpIgYg1fSYnf0XXF2AoSyCJZhoZXQwzoai7VGw==}
    peerDependencies:
      react: ^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0-rc

  lunr@2.3.9:
    resolution: {integrity: sha512-zTU3DaZaF3Rt9rhN3uBMGQD3dD2/vFQqnvZCDv4dl5iOzq2IZQqTxu90r4E5J+nP70J3ilqVCrbho2eWaeW8Ow==}

  magic-string@0.30.8:
    resolution: {integrity: sha512-ISQTe55T2ao7XtlAStud6qwYPZjE4GK1S/BeVPus4jrq6JuOnQ00YKQC581RWhR122W7msZV263KzVeLoqidyQ==}
    engines: {node: '>=12'}

  make-dir@4.0.0:
    resolution: {integrity: sha512-hXdUTZYIVOt1Ex//jAQi+wTZZpUpwBj/0QsOzqegb3rGMMeJiSEu5xLHnYfBrRV4RH2+OCSOO95Is/7x1WJ4bw==}
    engines: {node: '>=10'}

  make-error@1.3.6:
    resolution: {integrity: sha512-s8UhlNe7vPKomQhC1qFelMokr/Sc3AgNbso3n74mVPA5LTZwkB9NlXf4XPamLxJE8h0gh73rM94xvwRT2CVInw==}

  makeerror@1.0.12:
    resolution: {integrity: sha512-JmqCvUhmt43madlpFzG4BQzG2Z3m6tvQDNKdClZnO3VbIudJYmxsT0FNJMeiB2+JTSlTQTSbU8QdesVmwJcmLg==}

  markdown-it@14.1.0:
    resolution: {integrity: sha512-a54IwgWPaeBCAAsv13YgmALOF1elABB08FxO9i+r4VFk5Vl4pKokRPeX8u5TCgSsPi6ec1otfLjdOpVcgbpshg==}
    hasBin: true

  math-intrinsics@1.1.0:
    resolution: {integrity: sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==}
    engines: {node: '>= 0.4'}

  md5.js@1.3.5:
    resolution: {integrity: sha512-xitP+WxNPcTTOgnTJcrhM0xvdPepipPSf3I8EIpGKeFLjt3PlJLIDG3u8EX53ZIubkb+5U2+3rELYpEhHhzdkg==}

  mdast-util-to-hast@13.2.0:
    resolution: {integrity: sha512-QGYKEuUsYT9ykKBCMOEDLsU5JRObWQusAolFMeko/tYPufNkRffBAQjIE+99jbA87xv6FgmjLtwjh9wBWajwAA==}

  mdurl@2.0.0:
    resolution: {integrity: sha512-Lf+9+2r+Tdp5wXDXC4PcIBjTDtq4UKjCPMQhKIuzpJNW0b96kVqSwW0bT7FhRSfmAiFYgP+SCRvdrDozfh0U5w==}

  media-typer@0.3.0:
    resolution: {integrity: sha512-dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ==}
    engines: {node: '>= 0.6'}

  memfs@3.5.3:
    resolution: {integrity: sha512-UERzLsxzllchadvbPs5aolHh65ISpKpM+ccLbOJ8/vvpBKmAWf+la7dXFy7Mr0ySHbdHrFv5kGFCUHHe6GFEmw==}
    engines: {node: '>= 4.0.0'}

  merge-descriptors@1.0.3:
    resolution: {integrity: sha512-gaNvAS7TZ897/rVaZ0nMtAyxNyi/pdbjbAwUpFQpN70GqnVfOiXpeUUMKRBmzXaSQ8DdTX4/0ms62r2K+hE6mQ==}

  merge-stream@2.0.0:
    resolution: {integrity: sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==}

  merge2@1.4.1:
    resolution: {integrity: sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==}
    engines: {node: '>= 8'}

  methods@1.1.2:
    resolution: {integrity: sha512-iclAHeNqNm68zFtnZ0e+1L2yUIdvzNoauKU4WBA3VvH/vPFieF7qfRlwUZU+DA9P9bPXIS90ulxoUoCH23sV2w==}
    engines: {node: '>= 0.6'}

  micromark-util-character@2.1.1:
    resolution: {integrity: sha512-wv8tdUTJ3thSFFFJKtpYKOYiGP2+v96Hvk4Tu8KpCAsTMs6yi+nVmGh1syvSCsaxz45J6Jbw+9DD6g97+NV67Q==}

  micromark-util-encode@2.0.1:
    resolution: {integrity: sha512-c3cVx2y4KqUnwopcO9b/SCdo2O67LwJJ/UyqGfbigahfegL9myoEFoDYZgkT7f36T0bLrM9hZTAaAyH+PCAXjw==}

  micromark-util-sanitize-uri@2.0.1:
    resolution: {integrity: sha512-9N9IomZ/YuGGZZmQec1MbgxtlgougxTodVwDzzEouPKo3qFWvymFHWcnDi2vzV1ff6kas9ucW+o3yzJK9YB1AQ==}

  micromark-util-symbol@2.0.1:
    resolution: {integrity: sha512-vs5t8Apaud9N28kgCrRUdEed4UJ+wWNvicHLPxCa9ENlYuAY31M0ETy5y1vA33YoNPDFTghEbnh6efaE8h4x0Q==}

  micromark-util-types@2.0.1:
    resolution: {integrity: sha512-534m2WhVTddrcKVepwmVEVnUAmtrx9bfIjNoQHRqfnvdaHQiFytEhJoTgpWJvDEXCO5gLTQh3wYC1PgOJA4NSQ==}

  micromatch@4.0.8:
    resolution: {integrity: sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==}
    engines: {node: '>=8.6'}

  mime-db@1.52.0:
    resolution: {integrity: sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==}
    engines: {node: '>= 0.6'}

  mime-types@2.1.35:
    resolution: {integrity: sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==}
    engines: {node: '>= 0.6'}

  mime@1.6.0:
    resolution: {integrity: sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==}
    engines: {node: '>=4'}
    hasBin: true

  mime@2.6.0:
    resolution: {integrity: sha512-USPkMeET31rOMiarsBNIHZKLGgvKc/LrjofAnBlOttf5ajRvqiRA8QsenbcooctK6d6Ts6aqZXBA+XbkKthiQg==}
    engines: {node: '>=4.0.0'}
    hasBin: true

  mimic-fn@2.1.0:
    resolution: {integrity: sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==}
    engines: {node: '>=6'}

  minimalistic-assert@1.0.1:
    resolution: {integrity: sha512-UtJcAD4yEaGtjPezWuO9wC4nwUnVH/8/Im3yEHQP4b67cXlD/Qr9hdITCU1xDbSEXg2XKNaP8jsReV7vQd00/A==}

  minimalistic-crypto-utils@1.0.1:
    resolution: {integrity: sha512-JIYlbt6g8i5jKfJ3xz7rF0LXmv2TkDxBLUkiBeZ7bAx4GnnNMr8xFpGnOxn6GhTEHx3SjRrZEoU+j04prX1ktg==}

  minimatch@3.1.2:
    resolution: {integrity: sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==}

  minimatch@5.1.6:
    resolution: {integrity: sha512-lKwV/1brpG6mBUFHtb7NUmtABCb2WZZmm2wNiOA5hAb8VdCS4B3dtMWyvcoViccwAW/COERjXLt0zP1zXUN26g==}
    engines: {node: '>=10'}

  minimatch@9.0.3:
    resolution: {integrity: sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==}
    engines: {node: '>=16 || 14 >=14.17'}

  minimatch@9.0.5:
    resolution: {integrity: sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==}
    engines: {node: '>=16 || 14 >=14.17'}

  minimist@1.2.8:
    resolution: {integrity: sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==}

  minipass@7.1.2:
    resolution: {integrity: sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==}
    engines: {node: '>=16 || 14 >=14.17'}

  mkdirp@0.5.6:
    resolution: {integrity: sha512-FP+p8RB8OWpF3YZBCrP5gtADmtXApB5AMLn+vdyA+PyxCjrCs00mjyUozssO33cwDeT3wNGdLxJ5M//YqtHAJw==}
    hasBin: true

  mkdirp@1.0.4:
    resolution: {integrity: sha512-vVqVZQyf3WLx2Shd0qJ9xuvqgAyKPLAiqITEtqW0oIUjzo3PePDd6fW9iFz30ef7Ysp/oiWqbhszeGWW2T6Gzw==}
    engines: {node: '>=10'}
    hasBin: true

  monaco-editor@0.51.0:
    resolution: {integrity: sha512-xaGwVV1fq343cM7aOYB6lVE4Ugf0UyimdD/x5PWcWBMKENwectaEu77FAN7c5sFiyumqeJdX1RPTh1ocioyDjw==}

  mri@1.2.0:
    resolution: {integrity: sha512-tzzskb3bG8LvYGFF/mDTpq3jpI6Q9wc3LEmBaghu+DdCssd1FakN7Bc0hVNmEyGq1bq3RgfkCb3cmQLpNPOroA==}
    engines: {node: '>=4'}

  ms@2.0.0:
    resolution: {integrity: sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==}

  ms@2.1.3:
    resolution: {integrity: sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==}

  multer@1.4.4-lts.1:
    resolution: {integrity: sha512-WeSGziVj6+Z2/MwQo3GvqzgR+9Uc+qt8SwHKh3gvNPiISKfsMfG4SvCOFYlxxgkXt7yIV2i1yczehm0EOKIxIg==}
    engines: {node: '>= 6.0.0'}

  mute-stream@0.0.8:
    resolution: {integrity: sha512-nnbWWOkoWyUsTjKrhgD0dcz22mdkSnpYqbEjIm2nhwhuxlSkpywJmBo8h0ZqJdkp73mb90SssHkN4rsRaBAfAA==}

  mute-stream@1.0.0:
    resolution: {integrity: sha512-avsJQhyd+680gKXyG/sQc0nXaC6rBkPOfyHYcFb9+hdkqQkR9bdnkJ0AMZhke0oesPqIO+mFFJ+IdBc7mst4IA==}
    engines: {node: ^14.17.0 || ^16.13.0 || >=18.0.0}

  mz@2.7.0:
    resolution: {integrity: sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==}

  nan@2.22.0:
    resolution: {integrity: sha512-nbajikzWTMwsW+eSsNm3QwlOs7het9gGJU5dDZzRTQGk03vyBOauxgI4VakDzE0PtsGTmXPsXTbbjVhRwR5mpw==}

  nanoassert@2.0.0:
    resolution: {integrity: sha512-7vO7n28+aYO4J+8w96AzhmU8G+Y/xpPDJz/se19ICsqj/momRbb9mh9ZUtkoJ5X3nTnPdhEJyc0qnM6yAsHBaA==}

  nanoid@3.3.8:
    resolution: {integrity: sha512-WNLf5Sd8oZxOm+TzppcYk8gVOgP+l58xNy58D0nbUnOxOWRWvlcCV4kUF7ltmI6PsrLl/BgKEyS4mqsGChFN0w==}
    engines: {node: ^10 || ^12 || ^13.7 || ^14 || >=15.0.1}
    hasBin: true

  natural-compare@1.4.0:
    resolution: {integrity: sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==}

  negotiator@0.6.3:
    resolution: {integrity: sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==}
    engines: {node: '>= 0.6'}

  neo-async@2.6.2:
    resolution: {integrity: sha512-Yd3UES5mWCSqR+qNT93S3UoYUkqAZ9lLg8a7g9rimsWmYGK8cVToA4/sF3RrshdyV3sAGMXVUmpMYOw+dLpOuw==}

  next@14.2.10:
    resolution: {integrity: sha512-sDDExXnh33cY3RkS9JuFEKaS4HmlWmDKP1VJioucCG6z5KuA008DPsDZOzi8UfqEk3Ii+2NCQSJrfbEWtZZfww==}
    engines: {node: '>=18.17.0'}
    hasBin: true
    peerDependencies:
      '@opentelemetry/api': ^1.1.0
      '@playwright/test': ^1.41.2
      react: ^18.2.0
      react-dom: ^18.2.0
      sass: ^1.3.0
    peerDependenciesMeta:
      '@opentelemetry/api':
        optional: true
      '@playwright/test':
        optional: true
      sass:
        optional: true

  next@14.2.8:
    resolution: {integrity: sha512-EyEyJZ89r8C5FPlS/401AiF3O8jeMtHIE+bLom9MwcdWJJFBgRl+MR/2VgO0v5bI6tQORNY0a0DR5sjpFNrjbg==}
    engines: {node: '>=18.17.0'}
    hasBin: true
    peerDependencies:
      '@opentelemetry/api': ^1.1.0
      '@playwright/test': ^1.41.2
      react: ^18.2.0
      react-dom: ^18.2.0
      sass: ^1.3.0
    peerDependenciesMeta:
      '@opentelemetry/api':
        optional: true
      '@playwright/test':
        optional: true
      sass:
        optional: true

  node-abort-controller@3.1.1:
    resolution: {integrity: sha512-AGK2yQKIjRuqnc6VkX2Xj5d+QW8xZ87pa1UK6yA6ouUyuxfHuMP6umE5QK7UmTeOAymo+Zx1Fxiuw9rVx8taHQ==}

  node-emoji@1.11.0:
    resolution: {integrity: sha512-wo2DpQkQp7Sjm2A0cq+sN7EHKO6Sl0ctXeBdFZrL9T9+UywORbufTcTZxom8YqpLQt/FqNMUkOpkZrJVYSKD3A==}

  node-fetch@2.7.0:
    resolution: {integrity: sha512-c4FRfUm/dbcWZ7U+1Wq0AwCyFL+3nt2bEw05wfxSz+DWpWsitgmSgYmy2dQdWyKC1694ELPqMs/YzUSNozLt8A==}
    engines: {node: 4.x || >=6.0.0}
    peerDependencies:
      encoding: ^0.1.0
    peerDependenciesMeta:
      encoding:
        optional: true

  node-int64@0.4.0:
    resolution: {integrity: sha512-O5lz91xSOeoXP6DulyHfllpq+Eg00MWitZIbtPfoSEvqIHdl5gfcY6hYzDWnj0qD5tz52PI08u9qUvSVeUBeHw==}

  node-releases@2.0.19:
    resolution: {integrity: sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw==}

  noms@0.0.0:
    resolution: {integrity: sha512-lNDU9VJaOPxUmXcLb+HQFeUgQQPtMI24Gt6hgfuMHRJgMRHMF/qZ4HJD3GDru4sSw9IQl2jPjAYnQrdIeLbwow==}

  normalize-path@3.0.0:
    resolution: {integrity: sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==}
    engines: {node: '>=0.10.0'}

  npm-run-path@4.0.1:
    resolution: {integrity: sha512-S48WzZW777zhNIrn7gxOlISNAqi9ZC/uQFnRdbeIHhZhCA6UqpkOT8T1G7BvfdgP4Er8gF4sUbaS0i7QvIfCWw==}
    engines: {node: '>=8'}

  object-assign@4.1.1:
    resolution: {integrity: sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==}
    engines: {node: '>=0.10.0'}

  object-hash@3.0.0:
    resolution: {integrity: sha512-RSn9F68PjH9HqtltsSnqYC1XXoWe9Bju5+213R98cNGttag9q9yAOTzdbsqvIa7aNm5WffBZFpWYr2aWrklWAw==}
    engines: {node: '>= 6'}

  object-inspect@1.13.4:
    resolution: {integrity: sha512-W67iLl4J2EXEGTbfeHCffrjDfitvLANg0UlX3wFUUSTx92KXRFegMHUVgSqE+wvhAbi4WqjGg9czysTV2Epbew==}
    engines: {node: '>= 0.4'}

  object-keys@1.1.1:
    resolution: {integrity: sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==}
    engines: {node: '>= 0.4'}

  object.assign@4.1.7:
    resolution: {integrity: sha512-nK28WOo+QIjBkDduTINE4JkF/UJJKyf2EJxvJKfblDpyg0Q+pkOHNTL0Qwy6NP6FhE/EnzV73BxxqcJaXY9anw==}
    engines: {node: '>= 0.4'}

  object.entries@1.1.8:
    resolution: {integrity: sha512-cmopxi8VwRIAw/fkijJohSfpef5PdN0pMQJN6VC/ZKvn0LIknWD8KtgY6KlQdEc4tIjcQ3HxSMmnvtzIscdaYQ==}
    engines: {node: '>= 0.4'}

  object.fromentries@2.0.8:
    resolution: {integrity: sha512-k6E21FzySsSK5a21KRADBd/NGneRegFO5pLHfdQLpRDETUNJueLXs3WCzyQ3tFRDYgbq3KHGXfTbi2bs8WQ6rQ==}
    engines: {node: '>= 0.4'}

  object.groupby@1.0.3:
    resolution: {integrity: sha512-+Lhy3TQTuzXI5hevh8sBGqbmurHbbIjAi0Z4S63nthVLmLxfbj4T54a4CfZrXIrt9iP4mVAPYMo/v99taj3wjQ==}
    engines: {node: '>= 0.4'}

  object.values@1.2.1:
    resolution: {integrity: sha512-gXah6aZrcUxjWg2zR2MwouP2eHlCBzdV4pygudehaKXSGW4v2AsRQUK+lwwXhii6KFZcunEnmSUoYp5CXibxtA==}
    engines: {node: '>= 0.4'}

  on-finished@2.4.1:
    resolution: {integrity: sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==}
    engines: {node: '>= 0.8'}

  once@1.4.0:
    resolution: {integrity: sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==}

  onetime@5.1.2:
    resolution: {integrity: sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==}
    engines: {node: '>=6'}

  oniguruma-to-es@2.3.0:
    resolution: {integrity: sha512-bwALDxriqfKGfUufKGGepCzu9x7nJQuoRoAFp4AnwehhC2crqrDIAP/uN2qdlsAvSMpeRC3+Yzhqc7hLmle5+g==}

  optionator@0.9.4:
    resolution: {integrity: sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==}
    engines: {node: '>= 0.8.0'}

  ora@5.4.1:
    resolution: {integrity: sha512-5b6Y85tPxZZ7QytO+BQzysW31HJku27cRIlkbAXaNx+BdcVi+LlRFmVXzeF6a7JCwJpyw5c4b+YSVImQIrBpuQ==}
    engines: {node: '>=10'}

  os-tmpdir@1.0.2:
    resolution: {integrity: sha512-D2FR03Vir7FIu45XBY20mTb+/ZSWB00sjU9jdQXt83gDrI4Ztz5Fs7/yy74g2N5SVQY4xY1qDr4rNddwYRVX0g==}
    engines: {node: '>=0.10.0'}

  outdent@0.5.0:
    resolution: {integrity: sha512-/jHxFIzoMXdqPzTaCpFzAAWhpkSjZPF4Vsn6jAfNpmbH/ymsmd7Qc6VE9BGn0L6YMj6uwpQLxCECpus4ukKS9Q==}

  own-keys@1.0.1:
    resolution: {integrity: sha512-qFOyK5PjiWZd+QQIh+1jhdb9LpxTF0qs7Pm8o5QHYZ0M3vKqSqzsZaEB6oWlxZ+q2sJBMI/Ktgd2N5ZwQoRHfg==}
    engines: {node: '>= 0.4'}

  p-filter@2.1.0:
    resolution: {integrity: sha512-ZBxxZ5sL2HghephhpGAQdoskxplTwr7ICaehZwLIlfL6acuVgZPm8yBNuRAFBGEqtD/hmUeq9eqLg2ys9Xr/yw==}
    engines: {node: '>=8'}

  p-limit@2.3.0:
    resolution: {integrity: sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==}
    engines: {node: '>=6'}

  p-limit@3.1.0:
    resolution: {integrity: sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==}
    engines: {node: '>=10'}

  p-locate@4.1.0:
    resolution: {integrity: sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==}
    engines: {node: '>=8'}

  p-locate@5.0.0:
    resolution: {integrity: sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==}
    engines: {node: '>=10'}

  p-map@2.1.0:
    resolution: {integrity: sha512-y3b8Kpd8OAN444hxfBbFfj1FY/RjtTd8tzYwhUqNYXx0fXx2iX4maP4Qr6qhIKbQXI02wTLAda4fYUbDagTUFw==}
    engines: {node: '>=6'}

  p-try@2.2.0:
    resolution: {integrity: sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==}
    engines: {node: '>=6'}

  package-json-from-dist@1.0.1:
    resolution: {integrity: sha512-UEZIS3/by4OC8vL3P2dTXRETpebLI2NiI5vIrjaD/5UtrkFX/tNbwjTSRAGC/+7CAo2pIcBaRgWmcBBHcsaCIw==}

  package-manager-detector@0.2.9:
    resolution: {integrity: sha512-+vYvA/Y31l8Zk8dwxHhL3JfTuHPm6tlxM2A3GeQyl7ovYnSp1+mzAxClxaOr0qO1TtPxbQxetI7v5XqKLJZk7Q==}

  parent-module@1.0.1:
    resolution: {integrity: sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==}
    engines: {node: '>=6'}

  parse-json@5.2.0:
    resolution: {integrity: sha512-ayCKvm/phCGxOkYRSCM82iDwct8/EonSEgCSxWxD7ve6jHggsFl4fZVQBPRNgQoKiuV/odhFrGzQXZwbifC8Rg==}
    engines: {node: '>=8'}

  parseurl@1.3.3:
    resolution: {integrity: sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==}
    engines: {node: '>= 0.8'}

  path-exists@4.0.0:
    resolution: {integrity: sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==}
    engines: {node: '>=8'}

  path-is-absolute@1.0.1:
    resolution: {integrity: sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==}
    engines: {node: '>=0.10.0'}

  path-key@3.1.1:
    resolution: {integrity: sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==}
    engines: {node: '>=8'}

  path-parse@1.0.7:
    resolution: {integrity: sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==}

  path-scurry@1.11.1:
    resolution: {integrity: sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==}
    engines: {node: '>=16 || 14 >=14.18'}

  path-to-regexp@0.1.12:
    resolution: {integrity: sha512-RA1GjUVMnvYFxuqovrEqZoxxW5NUZqbwKtYz/Tt7nXerk0LbLblQmrsgdeOxV5SFHf0UDggjS/bSeOZwt1pmEQ==}

  path-to-regexp@3.3.0:
    resolution: {integrity: sha512-qyCH421YQPS2WFDxDjftfc1ZR5WKQzVzqsp4n9M2kQhVOo/ByahFoUNJfl58kOcEGfQ//7weFTDhm+ss8Ecxgw==}

  path-type@4.0.0:
    resolution: {integrity: sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==}
    engines: {node: '>=8'}

  picocolors@1.1.1:
    resolution: {integrity: sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==}

  picomatch@2.3.1:
    resolution: {integrity: sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==}
    engines: {node: '>=8.6'}

  picomatch@4.0.1:
    resolution: {integrity: sha512-xUXwsxNjwTQ8K3GnT4pCJm+xq3RUPQbmkYJTP5aFIfNIvbcc/4MUxgBaaRSZJ6yGJZiGSyYlM6MzwTsRk8SYCg==}
    engines: {node: '>=12'}

  picomatch@4.0.2:
    resolution: {integrity: sha512-M7BAV6Rlcy5u+m6oPhAPFgJTzAioX/6B0DxyvDlo9l8+T3nLKbrczg2WLUyzd45L8RqfUMyGPzekbMvX2Ldkwg==}
    engines: {node: '>=12'}

  pify@2.3.0:
    resolution: {integrity: sha512-udgsAY+fTnvv7kI7aaxbqwWNb0AHiB0qBO89PZKPkoTmGOgdbrHDKD+0B2X4uTfJ/FT1R09r9gTsjUjNJotuog==}
    engines: {node: '>=0.10.0'}

  pify@4.0.1:
    resolution: {integrity: sha512-uB80kBFb/tfd68bVleG9T5GGsGPjJrLAUpR5PZIrhBnIaRTQRjqdJSsIKkOP6OAIFbj7GOrcudc5pNjZ+geV2g==}
    engines: {node: '>=6'}

  pirates@4.0.6:
    resolution: {integrity: sha512-saLsH7WeYYPiD25LDuLRRY/i+6HaPYr6G1OUlN39otzkSTxKnubR9RTxS3/Kk50s1g2JTgFwWQDQyplC5/SHZg==}
    engines: {node: '>= 6'}

  pkg-dir@4.2.0:
    resolution: {integrity: sha512-HRDzbaKjC+AOWVXxAU/x54COGeIv9eb+6CkDSQoNTt4XyWoIJvuPsXizxu/Fr23EiekbtZwmh1IcIG/l/a10GQ==}
    engines: {node: '>=8'}

  playground@file:packages/examples/src/playground:
    resolution: {directory: packages/examples/src/playground, type: directory}

  pluralize@8.0.0:
    resolution: {integrity: sha512-Nc3IT5yHzflTfbjgqWcCPpo7DaKy4FnpB0l/zCAW0Tc7jxAiuqSxHasntB3D7887LSrA93kDJ9IXovxJYxyLCA==}
    engines: {node: '>=4'}

  possible-typed-array-names@1.1.0:
    resolution: {integrity: sha512-/+5VFTchJDoVj3bhoqi6UeymcD00DAwb1nJwamzPvHEszJ4FpF6SNNbUbOS8yI56qHzdV8eK0qEfOSiodkTdxg==}
    engines: {node: '>= 0.4'}

  postcss-import@15.1.0:
    resolution: {integrity: sha512-hpr+J05B2FVYUAXHeK1YyI267J/dDDhMU6B6civm8hSY1jYJnBXxzKDKDswzJmtLHryrjhnDjqqp/49t8FALew==}
    engines: {node: '>=14.0.0'}
    peerDependencies:
      postcss: ^8.0.0

  postcss-js@4.0.1:
    resolution: {integrity: sha512-dDLF8pEO191hJMtlHFPRa8xsizHaM82MLfNkUHdUtVEV3tgTp5oj+8qbEqYM57SLfc74KSbw//4SeJma2LRVIw==}
    engines: {node: ^12 || ^14 || >= 16}
    peerDependencies:
      postcss: ^8.4.21

  postcss-load-config@4.0.2:
    resolution: {integrity: sha512-bSVhyJGL00wMVoPUzAVAnbEoWyqRxkjv64tUl427SKnPrENtq6hJwUojroMz2VB+Q1edmi4IfrAPpami5VVgMQ==}
    engines: {node: '>= 14'}
    peerDependencies:
      postcss: '>=8.0.9'
      ts-node: '>=9.0.0'
    peerDependenciesMeta:
      postcss:
        optional: true
      ts-node:
        optional: true

  postcss-nested@6.2.0:
    resolution: {integrity: sha512-HQbt28KulC5AJzG+cZtj9kvKB93CFCdLvog1WFLf1D+xmMvPGlBstkpTEZfK5+AN9hfJocyBFCNiqyS48bpgzQ==}
    engines: {node: '>=12.0'}
    peerDependencies:
      postcss: ^8.2.14

  postcss-selector-parser@6.1.2:
    resolution: {integrity: sha512-Q8qQfPiZ+THO/3ZrOrO0cJJKfpYCagtMUkXbnEfmgUjwXg6z/WBeOyS9APBBPCTSiDV+s4SwQGu8yFsiMRIudg==}
    engines: {node: '>=4'}

  postcss-value-parser@4.2.0:
    resolution: {integrity: sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==}

  postcss@8.4.31:
    resolution: {integrity: sha512-PS08Iboia9mts/2ygV3eLpY5ghnUcfLV/EXTOW1E2qYxJKGGBUtNjN76FYHnMs36RmARn41bC0AZmn+rR0OVpQ==}
    engines: {node: ^10 || ^12 || >=14}

  postcss@8.5.1:
    resolution: {integrity: sha512-6oz2beyjc5VMn/KV1pPw8fliQkhBXrVn1Z3TVyqZxU8kZpzEKhBdmCFqI6ZbmGtamQvQGuU1sgPTk8ZrXDD7jQ==}
    engines: {node: ^10 || ^12 || >=14}

  prelude-ls@1.2.1:
    resolution: {integrity: sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==}
    engines: {node: '>= 0.8.0'}

  prettier-linter-helpers@1.0.0:
    resolution: {integrity: sha512-GbK2cP9nraSSUF9N2XwUwqfzlAFlMNYYl+ShE/V+H8a9uNl/oUqB1w2EL54Jh0OlyRSd8RfWYJ3coVS4TROP2w==}
    engines: {node: '>=6.0.0'}

  prettier-plugin-organize-imports@3.2.4:
    resolution: {integrity: sha512-6m8WBhIp0dfwu0SkgfOxJqh+HpdyfqSSLfKKRZSFbDuEQXDDndb8fTpRWkUrX/uBenkex3MgnVk0J3b3Y5byog==}
    peerDependencies:
      '@volar/vue-language-plugin-pug': ^1.0.4
      '@volar/vue-typescript': ^1.0.4
      prettier: '>=2.0'
      typescript: '>=2.9'
    peerDependenciesMeta:
      '@volar/vue-language-plugin-pug':
        optional: true
      '@volar/vue-typescript':
        optional: true

  prettier-plugin-tailwindcss@0.5.14:
    resolution: {integrity: sha512-Puaz+wPUAhFp8Lo9HuciYKM2Y2XExESjeT+9NQoVFXZsPPnc9VYss2SpxdQ6vbatmt8/4+SN0oe0I1cPDABg9Q==}
    engines: {node: '>=14.21.3'}
    peerDependencies:
      '@ianvs/prettier-plugin-sort-imports': '*'
      '@prettier/plugin-pug': '*'
      '@shopify/prettier-plugin-liquid': '*'
      '@trivago/prettier-plugin-sort-imports': '*'
      '@zackad/prettier-plugin-twig-melody': '*'
      prettier: ^3.0
      prettier-plugin-astro: '*'
      prettier-plugin-css-order: '*'
      prettier-plugin-import-sort: '*'
      prettier-plugin-jsdoc: '*'
      prettier-plugin-marko: '*'
      prettier-plugin-organize-attributes: '*'
      prettier-plugin-organize-imports: '*'
      prettier-plugin-sort-imports: '*'
      prettier-plugin-style-order: '*'
      prettier-plugin-svelte: '*'
    peerDependenciesMeta:
      '@ianvs/prettier-plugin-sort-imports':
        optional: true
      '@prettier/plugin-pug':
        optional: true
      '@shopify/prettier-plugin-liquid':
        optional: true
      '@trivago/prettier-plugin-sort-imports':
        optional: true
      '@zackad/prettier-plugin-twig-melody':
        optional: true
      prettier-plugin-astro:
        optional: true
      prettier-plugin-css-order:
        optional: true
      prettier-plugin-import-sort:
        optional: true
      prettier-plugin-jsdoc:
        optional: true
      prettier-plugin-marko:
        optional: true
      prettier-plugin-organize-attributes:
        optional: true
      prettier-plugin-organize-imports:
        optional: true
      prettier-plugin-sort-imports:
        optional: true
      prettier-plugin-style-order:
        optional: true
      prettier-plugin-svelte:
        optional: true

  prettier@2.8.8:
    resolution: {integrity: sha512-tdN8qQGvNjw4CHbY+XXk0JgCXn9QiF21a55rBe5LJAU+kDyC4WQn4+awm2Xfk2lQMk5fKup9XgzTZtGkjBdP9Q==}
    engines: {node: '>=10.13.0'}
    hasBin: true

  prettier@3.4.2:
    resolution: {integrity: sha512-e9MewbtFo+Fevyuxn/4rrcDAaq0IYxPGLvObpQjiZBMAzB9IGmzlnG9RZy3FFas+eBMu2vA0CszMeduow5dIuQ==}
    engines: {node: '>=14'}
    hasBin: true

  prettier@3.5.1:
    resolution: {integrity: sha512-hPpFQvHwL3Qv5AdRvBFMhnKo4tYxp0ReXiPn2bxkiohEX6mBeBwEpBSQTkD458RaaDKQMYSp4hX4UtfUTA5wDw==}
    engines: {node: '>=14'}
    hasBin: true

  pretty-format@29.7.0:
    resolution: {integrity: sha512-Pdlw/oPxN+aXdmM9R00JVC9WVFoCLTKJvDVLgmJ+qAffBMxsV85l/Lu7sNx4zSzPyoL2euImuEwHhOXdEgNFZQ==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  pretty-format@30.0.0-alpha.6:
    resolution: {integrity: sha512-xkeffkZoqQmRrcNewpOsUCKNOl+CkPqjt3Ld749uz1S7/O7GuPNPv2fZk3v/1U/FE8/B4Zz0llVL80MKON1tOQ==}
    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}

  process-nextick-args@2.0.1:
    resolution: {integrity: sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag==}

  prompts@2.4.2:
    resolution: {integrity: sha512-NxNv/kLguCA7p3jE8oL2aEBsrJWgAakBpgmgK6lpPWV+WuOmY6r2/zbAVnP+T8bQlA0nzHXSJSJW0Hq7ylaD2Q==}
    engines: {node: '>= 6'}

  prop-types@15.8.1:
    resolution: {integrity: sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==}

  property-information@6.5.0:
    resolution: {integrity: sha512-PgTgs/BlvHxOu8QuEN7wi5A0OmXaBcHpmCSTehcs6Uuu9IkDIEo13Hy7n898RHfrQ49vKCoGeWZSaAK01nwVig==}

  proxy-addr@2.0.7:
    resolution: {integrity: sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==}
    engines: {node: '>= 0.10'}

  proxy-from-env@1.1.0:
    resolution: {integrity: sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg==}

  punycode.js@2.3.1:
    resolution: {integrity: sha512-uxFIHU0YlHYhDQtV4R9J6a52SLx28BCjT+4ieh7IGbgwVJWO+km431c4yRlREUAsAmt/uMjQUyQHNEPf0M39CA==}
    engines: {node: '>=6'}

  punycode@2.3.1:
    resolution: {integrity: sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==}
    engines: {node: '>=6'}

  pure-rand@6.1.0:
    resolution: {integrity: sha512-bVWawvoZoBYpp6yIoQtQXHZjmz35RSVHnUOTefl8Vcjr8snTPY1wnpSPMWekcFwbxI6gtmT7rSYPFvz71ldiOA==}

  qs@6.13.0:
    resolution: {integrity: sha512-+38qI9SOr8tfZ4QmJNplMUxqjbe7LKvvZgWdExBOmd+egZTtjLB67Gu0HRX3u/XOq7UU2Nx6nsjvS16Z9uwfpg==}
    engines: {node: '>=0.6'}

  qs@6.14.0:
    resolution: {integrity: sha512-YWWTjgABSKcvs/nWBi9PycY/JiPJqOD4JA6o9Sej2AtvSGarXxKC3OQSk4pAarbdQlKAh5D4FCQkJNkW+GAn3w==}
    engines: {node: '>=0.6'}

  queue-microtask@1.2.3:
    resolution: {integrity: sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==}

  randombytes@2.1.0:
    resolution: {integrity: sha512-vYl3iOX+4CKUWuxGi9Ukhie6fsqXqS9FE2Zaic4tNFD2N2QQaXOMFbuKK4QmDHC0JO6B1Zp41J0LpT0oR68amQ==}

  range-parser@1.2.1:
    resolution: {integrity: sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==}
    engines: {node: '>= 0.6'}

  raw-body@2.5.2:
    resolution: {integrity: sha512-8zGqypfENjCIqGhgXToC8aB2r7YrBX+AQAfIPs/Mlk+BtPTztOvTS01NRW/3Eh60J+a48lt8qsCzirQ6loCVfA==}
    engines: {node: '>= 0.8'}

  raw-loader@4.0.2:
    resolution: {integrity: sha512-ZnScIV3ag9A4wPX/ZayxL/jZH+euYb6FcUinPcgiQW0+UBtEv0O6Q3lGd3cqJ+GHH+rksEv3Pj99oxJ3u3VIKA==}
    engines: {node: '>= 10.13.0'}
    peerDependencies:
      webpack: ^4.0.0 || ^5.0.0

  react-dom@18.3.1:
    resolution: {integrity: sha512-5m4nQKp+rZRb09LNH59GM4BxTh9251/ylbKIbpe7TpGxfJ+9kv6BLkLBXIjjspbgbnIBNqlI23tRnTWT0snUIw==}
    peerDependencies:
      react: ^18.3.1

  react-is@16.13.1:
    resolution: {integrity: sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==}

  react-is@18.3.1:
    resolution: {integrity: sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==}

  react@18.3.1:
    resolution: {integrity: sha512-wS+hAgJShR0KhEvPJArfuPVN1+Hz1t0Y6n5jLrGQbkb4urgPE/0Rve+1kMB1v/oWgHgm4WIcV+i7F2pTVj+2iQ==}
    engines: {node: '>=0.10.0'}

  read-cache@1.0.0:
    resolution: {integrity: sha512-Owdv/Ft7IjOgm/i0xvNDZ1LrRANRfew4b2prF3OWMQLxLfu3bS8FVhCsrSCMK4lR56Y9ya+AThoTpDCTxCmpRA==}

  read-yaml-file@1.1.0:
    resolution: {integrity: sha512-VIMnQi/Z4HT2Fxuwg5KrY174U1VdUIASQVWXXyqtNRtxSr9IYkn1rsI6Tb6HsrHCmB7gVpNwX6JxPTHcH6IoTA==}
    engines: {node: '>=6'}

  readable-stream@1.0.34:
    resolution: {integrity: sha512-ok1qVCJuRkNmvebYikljxJA/UEsKwLl2nI1OmaqAu4/UE+h0wKCHok4XkL/gvi39OacXvw59RJUOFUkDib2rHg==}

  readable-stream@2.3.8:
    resolution: {integrity: sha512-8p0AUk4XODgIewSi0l8Epjs+EVnWiK7NoDIEGU0HhE7+ZyY8D1IMY7odu5lRrFXGg71L15KG8QrPmum45RTtdA==}

  readable-stream@3.6.2:
    resolution: {integrity: sha512-9u/sniCrY3D5WdsERHzHE4G2YCXqoG5FTHUiCC4SIbr6XcLZBY05ya9EKjYek9O5xOAwjGq+1JdGBAS7Q9ScoA==}
    engines: {node: '>= 6'}

  readdirp@3.6.0:
    resolution: {integrity: sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==}
    engines: {node: '>=8.10.0'}

  reflect-metadata@0.2.2:
    resolution: {integrity: sha512-urBwgfrvVP/eAyXx4hluJivBKzuEbSQs9rKWCrCkbSxNv8mxPcUZKeuoF3Uy4mJl3Lwprp6yy5/39VWigZ4K6Q==}

  reflect.getprototypeof@1.0.10:
    resolution: {integrity: sha512-00o4I+DVrefhv+nX0ulyi3biSHCPDe+yLv5o/p6d/UVlirijB8E16FtfwSAi4g3tcqrQ4lRAqQSoFEZJehYEcw==}
    engines: {node: '>= 0.4'}

  regenerator-runtime@0.14.1:
    resolution: {integrity: sha512-dYnhHh0nJoMfnkZs6GmmhFknAGRrLznOu5nc9ML+EJxGvrx6H7teuevqVqCuPcPK//3eDrrjQhehXVx9cnkGdw==}

  regex-recursion@5.1.1:
    resolution: {integrity: sha512-ae7SBCbzVNrIjgSbh7wMznPcQel1DNlDtzensnFxpiNpXt1U2ju/bHugH422r+4LAVS1FpW1YCwilmnNsjum9w==}

  regex-utilities@2.3.0:
    resolution: {integrity: sha512-8VhliFJAWRaUiVvREIiW2NXXTmHs4vMNnSzuJVhscgmGav3g9VDxLrQndI3dZZVVdp0ZO/5v0xmX516/7M9cng==}

  regex@5.1.1:
    resolution: {integrity: sha512-dN5I359AVGPnwzJm2jN1k0W9LPZ+ePvoOeVMMfqIMFz53sSwXkxaJoxr50ptnsC771lK95BnTrVSZxq0b9yCGw==}

  regexp.prototype.flags@1.5.4:
    resolution: {integrity: sha512-dYqgNSZbDwkaJ2ceRd9ojCGjBq+mOm9LmtXnAnEGyHhN/5R7iDW2TRw3h+o/jCFxus3P2LfWIIiwowAjANm7IA==}
    engines: {node: '>= 0.4'}

  repeat-string@1.6.1:
    resolution: {integrity: sha512-PV0dzCYDNfRi1jCDbJzpW7jNNDRuCOG/jI5ctQcGKt/clZD+YcPS3yIlWuTJMmESC8aevCFmWJy5wjAFgNqN6w==}
    engines: {node: '>=0.10'}

  require-directory@2.1.1:
    resolution: {integrity: sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==}
    engines: {node: '>=0.10.0'}

  require-from-string@2.0.2:
    resolution: {integrity: sha512-Xf0nWe6RseziFMu+Ap9biiUbmplq6S9/p+7w7YXP/JBHhrUDDUhwa+vANyubuqfZWTveU//DYVGsDG7RKL/vEw==}
    engines: {node: '>=0.10.0'}

  resolve-cwd@3.0.0:
    resolution: {integrity: sha512-OrZaX2Mb+rJCpH/6CpSqt9xFVpN++x01XnN2ie9g6P5/3xelLAkXWVADpdz1IHD/KFfEXyE6V0U01OQ3UO2rEg==}
    engines: {node: '>=8'}

  resolve-from@4.0.0:
    resolution: {integrity: sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==}
    engines: {node: '>=4'}

  resolve-from@5.0.0:
    resolution: {integrity: sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw==}
    engines: {node: '>=8'}

  resolve-pkg-maps@1.0.0:
    resolution: {integrity: sha512-seS2Tj26TBVOC2NIc2rOe2y2ZO7efxITtLZcGSOnHHNOQ7CkiUBfw0Iw2ck6xkIhPwLhKNLS8BO+hEpngQlqzw==}

  resolve.exports@2.0.3:
    resolution: {integrity: sha512-OcXjMsGdhL4XnbShKpAcSqPMzQoYkYyhbEaeSko47MjRP9NfEQMhZkXL1DoFlt9LWQn4YttrdnV6X2OiyzBi+A==}
    engines: {node: '>=10'}

  resolve@1.22.10:
    resolution: {integrity: sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==}
    engines: {node: '>= 0.4'}
    hasBin: true

  resolve@2.0.0-next.5:
    resolution: {integrity: sha512-U7WjGVG9sH8tvjW5SmGbQuui75FiyjAX72HX15DwBBwF9dNiQZRQAg9nnPhYy+TUnE0+VcrttuvNI8oSxZcocA==}
    hasBin: true

  restore-cursor@3.1.0:
    resolution: {integrity: sha512-l+sSefzHpj5qimhFSE5a8nufZYAM3sBSVMAPtYkmC+4EH2anSGaEMXSD0izRQbu9nfyQ9y5JrVmp7E8oZrUjvA==}
    engines: {node: '>=8'}

  reusify@1.0.4:
    resolution: {integrity: sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==}
    engines: {iojs: '>=1.0.0', node: '>=0.10.0'}

  rimraf@3.0.2:
    resolution: {integrity: sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==}
    deprecated: Rimraf versions prior to v4 are no longer supported
    hasBin: true

  rimraf@5.0.10:
    resolution: {integrity: sha512-l0OE8wL34P4nJH/H2ffoaniAokM2qSmrtXHmlpvYr5AVVX8msAyW0l8NVJFDxlSK4u3Uh/f41cQheDVdnYijwQ==}
    hasBin: true

  ripemd160@2.0.2:
    resolution: {integrity: sha512-ii4iagi25WusVoiC4B4lq7pbXfAp3D9v5CwfkY33vffw2+pkDjY1D8GaN7spsxvCSx8dkPqOZCEZyfxcmJG2IA==}

  run-async@2.4.1:
    resolution: {integrity: sha512-tvVnVv01b8c1RrA6Ep7JkStj85Guv/YrMcwqYQnwjsAS2cTmmPGBBjAjpCW7RrSodNSoE2/qg9O4bceNvUuDgQ==}
    engines: {node: '>=0.12.0'}

  run-async@3.0.0:
    resolution: {integrity: sha512-540WwVDOMxA6dN6We19EcT9sc3hkXPw5mzRNGM3FkdN/vtE9NFvj5lFAPNwUDmJjXidm3v7TC1cTE7t17Ulm1Q==}
    engines: {node: '>=0.12.0'}

  run-parallel@1.2.0:
    resolution: {integrity: sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==}

  rxjs@7.8.1:
    resolution: {integrity: sha512-AA3TVj+0A2iuIoQkWEK/tqFjBq2j+6PO6Y0zJcvzLAFhEFIO3HL0vls9hWLncZbAAbK0mar7oZ4V079I/qPMxg==}

  safe-array-concat@1.1.3:
    resolution: {integrity: sha512-AURm5f0jYEOydBj7VQlVvDrjeFgthDdEF5H1dP+6mNpoXOMo1quQqJ4wvJDyRZ9+pO3kGWoOdmV08cSv2aJV6Q==}
    engines: {node: '>=0.4'}

  safe-buffer@5.1.2:
    resolution: {integrity: sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==}

  safe-buffer@5.2.1:
    resolution: {integrity: sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==}

  safe-push-apply@1.0.0:
    resolution: {integrity: sha512-iKE9w/Z7xCzUMIZqdBsp6pEQvwuEebH4vdpjcDWnyzaI6yl6O9FHvVpmGelvEHNsoY6wGblkxR6Zty/h00WiSA==}
    engines: {node: '>= 0.4'}

  safe-regex-test@1.1.0:
    resolution: {integrity: sha512-x/+Cz4YrimQxQccJf5mKEbIa1NzeCRNI5Ecl/ekmlYaampdNLPalVyIcCZNNH3MvmqBugV5TMYZXv0ljslUlaw==}
    engines: {node: '>= 0.4'}

  safer-buffer@2.1.2:
    resolution: {integrity: sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==}

  scheduler@0.23.2:
    resolution: {integrity: sha512-UOShsPwz7NrMUqhR6t0hWjFduvOzbtv7toDH1/hIrfRNIDBnnBWd0CwJTGvTpngVlmwGCdP9/Zl/tVrDqcuYzQ==}

  schema-utils@3.3.0:
    resolution: {integrity: sha512-pN/yOAvcC+5rQ5nERGuwrjLlYvLTbCibnZ1I7B1LaiAz9BRBlE9GMgE/eqV30P7aJQUf7Ddimy/RsbYO/GrVGg==}
    engines: {node: '>= 10.13.0'}

  schema-utils@4.3.0:
    resolution: {integrity: sha512-Gf9qqc58SpCA/xdziiHz35F4GNIWYWZrEshUc/G/r5BnLph6xpKuLeoJoQuj5WfBIx/eQLf+hmVPYHaxJu7V2g==}
    engines: {node: '>= 10.13.0'}

  secp256k1@3.8.1:
    resolution: {integrity: sha512-tArjQw2P0RTdY7QmkNehgp6TVvQXq6ulIhxv8gaH6YubKG/wxxAoNKcbuXjDhybbc+b2Ihc7e0xxiGN744UIiQ==}
    engines: {node: '>=4.0.0'}

  semver@6.3.1:
    resolution: {integrity: sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==}
    hasBin: true

  semver@7.7.1:
    resolution: {integrity: sha512-hlq8tAfn0m/61p4BVRcPzIGr6LKiMwo4VM6dGi6pt4qcRkmNzTcWq6eCEjEh+qXjkMDvPlOFFSGwQjoEa6gyMA==}
    engines: {node: '>=10'}
    hasBin: true

  send@0.19.0:
    resolution: {integrity: sha512-dW41u5VfLXu8SJh5bwRmyYUbAoSB3c9uQh6L8h/KtsFREPWpbX1lrljJo186Jc4nmci/sGUZ9a0a0J2zgfq2hw==}
    engines: {node: '>= 0.8.0'}

  serialize-javascript@6.0.2:
    resolution: {integrity: sha512-Saa1xPByTTq2gdeFZYLLo+RFE35NHZkAbqZeWNd3BpzppeVisAqpDjcp8dyf6uIvEqJRd46jemmyA4iFIeVk8g==}

  serve-static@1.16.2:
    resolution: {integrity: sha512-VqpjJZKadQB/PEbEwvFdO43Ax5dFBZ2UECszz8bQ7pi7wt//PWe1P6MN7eCnjsatYtBT6EuiClbjSWP2WrIoTw==}
    engines: {node: '>= 0.8.0'}

  set-function-length@1.2.2:
    resolution: {integrity: sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==}
    engines: {node: '>= 0.4'}

  set-function-name@2.0.2:
    resolution: {integrity: sha512-7PGFlmtwsEADb0WYyvCMa1t+yke6daIG4Wirafur5kcf+MhUnPms1UeR0CKQdTZD81yESwMHbtn+TR+dMviakQ==}
    engines: {node: '>= 0.4'}

  set-proto@1.0.0:
    resolution: {integrity: sha512-RJRdvCo6IAnPdsvP/7m6bsQqNnn1FCBX5ZNtFL98MmFF/4xAIJTIg1YbHW5DC2W5SKZanrC6i4HsJqlajw/dZw==}
    engines: {node: '>= 0.4'}

  setprototypeof@1.2.0:
    resolution: {integrity: sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==}

  sha.js@2.4.11:
    resolution: {integrity: sha512-QMEp5B7cftE7APOjk5Y6xgrbWu+WkLVQwk8JNjZ8nKRciZaByEW6MubieAiToS7+dwvrjGhH8jRXz3MVd0AYqQ==}
    hasBin: true

  shebang-command@2.0.0:
    resolution: {integrity: sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==}
    engines: {node: '>=8'}

  shebang-regex@3.0.0:
    resolution: {integrity: sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==}
    engines: {node: '>=8'}

  shiki@1.29.2:
    resolution: {integrity: sha512-njXuliz/cP+67jU2hukkxCNuH1yUi4QfdZZY+sMr5PPrIyXSu5iTb/qYC4BiWWB0vZ+7TbdvYUCeL23zpwCfbg==}

  side-channel-list@1.0.0:
    resolution: {integrity: sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==}
    engines: {node: '>= 0.4'}

  side-channel-map@1.0.1:
    resolution: {integrity: sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==}
    engines: {node: '>= 0.4'}

  side-channel-weakmap@1.0.2:
    resolution: {integrity: sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==}
    engines: {node: '>= 0.4'}

  side-channel@1.1.0:
    resolution: {integrity: sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==}
    engines: {node: '>= 0.4'}

  signal-exit@3.0.7:
    resolution: {integrity: sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ==}

  signal-exit@4.1.0:
    resolution: {integrity: sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==}
    engines: {node: '>=14'}

  sisteransi@1.0.5:
    resolution: {integrity: sha512-bLGGlR1QxBcynn2d5YmDX4MGjlZvy2MRBDRNHLJ8VI6l6+9FUiyTFNJ0IveOSP0bcXgVDPRcfGqA0pjaqUpfVg==}

  slash@3.0.0:
    resolution: {integrity: sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==}
    engines: {node: '>=8'}

  source-map-js@1.2.1:
    resolution: {integrity: sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==}
    engines: {node: '>=0.10.0'}

  source-map-support@0.5.13:
    resolution: {integrity: sha512-SHSKFHadjVA5oR4PPqhtAVdcBWwRYVd6g6cAXnIbRiIwc2EhPrTuKUBdSLvlEKyIP3GCf89fltvcZiP9MMFA1w==}

  source-map-support@0.5.21:
    resolution: {integrity: sha512-uBHU3L3czsIyYXKX88fdrGovxdSCoTGDRZ6SYXtSRxLZUzHg5P/66Ht6uoUlHu9EZod+inXhKo3qQgwXUT/y1w==}

  source-map@0.6.1:
    resolution: {integrity: sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==}
    engines: {node: '>=0.10.0'}

  source-map@0.7.4:
    resolution: {integrity: sha512-l3BikUxvPOcn5E74dZiq5BGsTb5yEwhaTSzccU6t4sDOH8NWJCstKO5QT2CvtFoK6F0saL7p9xHAqHOlCPJygA==}
    engines: {node: '>= 8'}

  space-separated-tokens@2.0.2:
    resolution: {integrity: sha512-PEGlAwrG8yXGXRjW32fGbg66JAlOAwbObuqVoJpv/mRgoWDQfgH1wDPvtzWyUSNAXBGSk8h755YDbbcEy3SH2Q==}

  spawndamnit@3.0.1:
    resolution: {integrity: sha512-MmnduQUuHCoFckZoWnXsTg7JaiLBJrKFj9UI2MbRPGaJeVpsLcVBu6P/IGZovziM/YBsellCmsprgNA+w0CzVg==}

  sprintf-js@1.0.3:
    resolution: {integrity: sha512-D9cPgkvLlV3t3IzL0D0YLvGA9Ahk4PcvVwUbN0dSGr1aP0Nrt4AEnTUbuGvquEC0mA64Gqt1fzirlRs5ibXx8g==}

  stable-hash@0.0.4:
    resolution: {integrity: sha512-LjdcbuBeLcdETCrPn9i8AYAZ1eCtu4ECAWtP7UleOiZ9LzVxRzzUZEoZ8zB24nhkQnDWyET0I+3sWokSDS3E7g==}

  stack-utils@2.0.6:
    resolution: {integrity: sha512-XlkWvfIm6RmsWtNJx+uqtKLS8eqFbxUg0ZzLXqY0caEy9l7hruX8IpiDnjsLavoBgqCCR71TqWO8MaXYheJ3RQ==}
    engines: {node: '>=10'}

  state-local@1.0.7:
    resolution: {integrity: sha512-HTEHMNieakEnoe33shBYcZ7NX83ACUjCu8c40iOGEZsngj9zRnkqS9j1pqQPXwobB0ZcVTk27REb7COQ0UR59w==}

  statuses@2.0.1:
    resolution: {integrity: sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==}
    engines: {node: '>= 0.8'}

  streamsearch@1.1.0:
    resolution: {integrity: sha512-Mcc5wHehp9aXz1ax6bZUyY5afg9u2rv5cqQI3mRrYkGC8rW2hM02jWuwjtL++LS5qinSyhj2QfLyNsuc+VsExg==}
    engines: {node: '>=10.0.0'}

  string-length@4.0.2:
    resolution: {integrity: sha512-+l6rNN5fYHNhZZy41RXsYptCjA2Igmq4EG7kZAYFQI1E1VTXarr6ZPXBg6eq7Y6eK4FEhY6AJlyuFIb/v/S0VQ==}
    engines: {node: '>=10'}

  string-width@4.2.3:
    resolution: {integrity: sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==}
    engines: {node: '>=8'}

  string-width@5.1.2:
    resolution: {integrity: sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==}
    engines: {node: '>=12'}

  string.prototype.includes@2.0.1:
    resolution: {integrity: sha512-o7+c9bW6zpAdJHTtujeePODAhkuicdAryFsfVKwA+wGw89wJ4GTY484WTucM9hLtDEOpOvI+aHnzqnC5lHp4Rg==}
    engines: {node: '>= 0.4'}

  string.prototype.matchall@4.0.12:
    resolution: {integrity: sha512-6CC9uyBL+/48dYizRf7H7VAYCMCNTBeM78x/VTUe9bFEaxBepPJDa1Ow99LqI/1yF7kuy7Q3cQsYMrcjGUcskA==}
    engines: {node: '>= 0.4'}

  string.prototype.repeat@1.0.0:
    resolution: {integrity: sha512-0u/TldDbKD8bFCQ/4f5+mNRrXwZ8hg2w7ZR8wa16e8z9XpePWl3eGEcUD0OXpEH/VJH/2G3gjUtR3ZOiBe2S/w==}

  string.prototype.trim@1.2.10:
    resolution: {integrity: sha512-Rs66F0P/1kedk5lyYyH9uBzuiI/kNRmwJAR9quK6VOtIpZ2G+hMZd+HQbbv25MgCA6gEffoMZYxlTod4WcdrKA==}
    engines: {node: '>= 0.4'}

  string.prototype.trimend@1.0.9:
    resolution: {integrity: sha512-G7Ok5C6E/j4SGfyLCloXTrngQIQU3PWtXGst3yM7Bea9FRURf1S42ZHlZZtsNque2FN2PoUhfZXYLNWwEr4dLQ==}
    engines: {node: '>= 0.4'}

  string.prototype.trimstart@1.0.8:
    resolution: {integrity: sha512-UXSH262CSZY1tfu3G3Secr6uGLCFVPMhIqHjlgCUtCCcgihYc/xKs9djMTMUOb2j1mVSeU8EU6NWc/iQKU6Gfg==}
    engines: {node: '>= 0.4'}

  string_decoder@0.10.31:
    resolution: {integrity: sha512-ev2QzSzWPYmy9GuqfIVildA4OdcGLeFZQrq5ys6RtiuF+RQQiZWr8TZNyAcuVXyQRYfEO+MsoB/1BuQVhOJuoQ==}

  string_decoder@1.1.1:
    resolution: {integrity: sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==}

  string_decoder@1.3.0:
    resolution: {integrity: sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==}

  stringify-entities@4.0.4:
    resolution: {integrity: sha512-IwfBptatlO+QCJUo19AqvrPNqlVMpW9YEL2LIVY+Rpv2qsjCGxaDLNRgeGsQWJhfItebuJhsGSLjaBbNSQ+ieg==}

  strip-ansi@6.0.1:
    resolution: {integrity: sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==}
    engines: {node: '>=8'}

  strip-ansi@7.1.0:
    resolution: {integrity: sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==}
    engines: {node: '>=12'}

  strip-bom@3.0.0:
    resolution: {integrity: sha512-vavAMRXOgBVNF6nyEEmL3DBK19iRpDcoIwW+swQ+CbGiu7lju6t+JklA1MHweoWtadgt4ISVUsXLyDq34ddcwA==}
    engines: {node: '>=4'}

  strip-bom@4.0.0:
    resolution: {integrity: sha512-3xurFv5tEgii33Zi8Jtp55wEIILR9eh34FAW00PZf+JnSsTmV/ioewSgQl97JHvgjoRGwPShsWm+IdrxB35d0w==}
    engines: {node: '>=8'}

  strip-final-newline@2.0.0:
    resolution: {integrity: sha512-BrpvfNAE3dcvq7ll3xVumzjKjZQ5tI1sEUIKr3Uoks0XUl45St3FlatVqef9prk4jRDzhW6WZg+3bk93y6pLjA==}
    engines: {node: '>=6'}

  strip-json-comments@3.1.1:
    resolution: {integrity: sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==}
    engines: {node: '>=8'}

  styled-jsx@5.1.1:
    resolution: {integrity: sha512-pW7uC1l4mBZ8ugbiZrcIsiIvVx1UmTfw7UkC3Um2tmfUq9Bhk8IiyEIPl6F8agHgjzku6j0xQEZbfA5uSgSaCw==}
    engines: {node: '>= 12.0.0'}
    peerDependencies:
      '@babel/core': '*'
      babel-plugin-macros: '*'
      react: '>= 16.8.0 || 17.x.x || ^18.0.0-0'
    peerDependenciesMeta:
      '@babel/core':
        optional: true
      babel-plugin-macros:
        optional: true

  sucrase@3.35.0:
    resolution: {integrity: sha512-8EbVDiu9iN/nESwxeSxDKe0dunta1GOlHufmSSXxMD2z2/tMZpDMpvXQGsc+ajGo8y2uYUmixaSRUc/QPoQ0GA==}
    engines: {node: '>=16 || 14 >=14.17'}
    hasBin: true

  superagent@9.0.2:
    resolution: {integrity: sha512-xuW7dzkUpcJq7QnhOsnNUgtYp3xRwpt2F7abdRYIpCsAt0hhUqia0EdxyXZQQpNmGtsCzYHryaKSV3q3GJnq7w==}
    engines: {node: '>=14.18.0'}

  supertest@7.0.0:
    resolution: {integrity: sha512-qlsr7fIC0lSddmA3tzojvzubYxvlGtzumcdHgPwbFWMISQwL22MhM2Y3LNt+6w9Yyx7559VW5ab70dgphm8qQA==}
    engines: {node: '>=14.18.0'}

  supports-color@7.2.0:
    resolution: {integrity: sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==}
    engines: {node: '>=8'}

  supports-color@8.1.1:
    resolution: {integrity: sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q==}
    engines: {node: '>=10'}

  supports-preserve-symlinks-flag@1.0.0:
    resolution: {integrity: sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==}
    engines: {node: '>= 0.4'}

  symbol-observable@4.0.0:
    resolution: {integrity: sha512-b19dMThMV4HVFynSAM1++gBHAbk2Tc/osgLIBZMKsyqh34jb2e8Os7T6ZW/Bt3pJFdBTd2JwAnAAEQV7rSNvcQ==}
    engines: {node: '>=0.10'}

  synckit@0.9.2:
    resolution: {integrity: sha512-vrozgXDQwYO72vHjUb/HnFbQx1exDjoKzqx23aXEg2a9VIg2TSFZ8FmeZpTjUCFMYw7mpX4BE2SFu8wI7asYsw==}
    engines: {node: ^14.18.0 || >=16.0.0}

  tailwindcss@3.4.17:
    resolution: {integrity: sha512-w33E2aCvSDP0tW9RZuNXadXlkHXqFzSkQew/aIa2i/Sj8fThxwovwlXHSPXTbAHwEIhBFXAedUhP2tueAKP8Og==}
    engines: {node: '>=14.0.0'}
    hasBin: true

  tapable@2.2.1:
    resolution: {integrity: sha512-GNzQvQTOIP6RyTfE2Qxb8ZVlNmw0n88vp1szwWRimP02mnTsx3Wtn5qRdqY9w2XduFNUgvOwhNnQsjwCp+kqaQ==}
    engines: {node: '>=6'}

  term-size@2.2.1:
    resolution: {integrity: sha512-wK0Ri4fOGjv/XPy8SBHZChl8CM7uMc5VML7SqiQ0zG7+J5Vr+RMQDoHa2CNT6KHUnTGIXH34UDMkPzAUyapBZg==}
    engines: {node: '>=8'}

  terser-webpack-plugin@5.3.11:
    resolution: {integrity: sha512-RVCsMfuD0+cTt3EwX8hSl2Ks56EbFHWmhluwcqoPKtBnfjiT6olaq7PRIRfhyU8nnC2MrnDrBLfrD/RGE+cVXQ==}
    engines: {node: '>= 10.13.0'}
    peerDependencies:
      '@swc/core': '*'
      esbuild: '*'
      uglify-js: '*'
      webpack: ^5.1.0
    peerDependenciesMeta:
      '@swc/core':
        optional: true
      esbuild:
        optional: true
      uglify-js:
        optional: true

  terser@5.38.1:
    resolution: {integrity: sha512-GWANVlPM/ZfYzuPHjq0nxT+EbOEDDN3Jwhwdg1D8TU8oSkktp8w64Uq4auuGLxFSoNTRDncTq2hQHX1Ld9KHkA==}
    engines: {node: '>=10'}
    hasBin: true

  test-exclude@6.0.0:
    resolution: {integrity: sha512-cAGWPIyOHU6zlmg88jwm7VRyXnMN7iV68OGAbYDk/Mh/xC/pzVPlQtY6ngoIH/5/tciuhGfvESU8GrHrcxD56w==}
    engines: {node: '>=8'}

  text-segmentation@1.0.3:
    resolution: {integrity: sha512-iOiPUo/BGnZ6+54OsWxZidGCsdU8YbE4PSpdPinp7DeMtUJNJBoJ/ouUSTJjHkh1KntHaltHl/gDs2FC4i5+Nw==}

  text-table@0.2.0:
    resolution: {integrity: sha512-N+8UisAXDGk8PFXP4HAzVR9nbfmVJ3zYLAWiTIoqC5v5isinhr+r5uaO8+7r3BMfuNIufIsA7RdpVgacC2cSpw==}

  thenify-all@1.6.0:
    resolution: {integrity: sha512-RNxQH/qI8/t3thXJDwcstUO4zeqo64+Uy/+sNVRBx4Xn2OX+OZ9oP+iJnNFqplFra2ZUVeKCSa2oVWi3T4uVmA==}
    engines: {node: '>=0.8'}

  thenify@3.3.1:
    resolution: {integrity: sha512-RVZSIV5IG10Hk3enotrhvz0T9em6cyHBLkH/YAZuKqd8hRkKhSfCGIcP2KUY0EPxndzANBmNllzWPwak+bheSw==}

  through2@2.0.5:
    resolution: {integrity: sha512-/mrRod8xqpA+IHSLyGCQ2s8SPHiCDEeQJSep1jqLYeEUClOFG2Qsh+4FU6G9VeqpZnGW/Su8LQGc4YKni5rYSQ==}

  through@2.3.8:
    resolution: {integrity: sha512-w89qg7PI8wAdvX60bMDP+bFoD5Dvhm9oLheFp5O4a2QF0cSBGsBX4qZmadPMvVqlLJBBci+WqGGOAPvcDeNSVg==}

  tmp@0.0.33:
    resolution: {integrity: sha512-jRCJlojKnZ3addtTOjdIqoRuPEKBvNXcGYqzO6zWZX8KfKEpnGY5jfggJQ3EjKuu8D4bJRr0y+cYJFmYbImXGw==}
    engines: {node: '>=0.6.0'}

  tmpl@1.0.5:
    resolution: {integrity: sha512-3f0uOEAQwIqGuWW2MVzYg8fV/QNnc/IpuJNG837rLuczAaLVHslWHZQj4IGiEl5Hs3kkbhwL9Ab7Hrsmuj+Smw==}

  to-regex-range@5.0.1:
    resolution: {integrity: sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==}
    engines: {node: '>=8.0'}

  toidentifier@1.0.1:
    resolution: {integrity: sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==}
    engines: {node: '>=0.6'}

  tr46@0.0.3:
    resolution: {integrity: sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw==}

  tree-kill@1.2.2:
    resolution: {integrity: sha512-L0Orpi8qGpRG//Nd+H90vFB+3iHnue1zSSGmNOOCh1GLJ7rUKVwV2HvijphGQS2UmhUZewS9VgvxYIdgr+fG1A==}
    hasBin: true

  trim-lines@3.0.1:
    resolution: {integrity: sha512-kRj8B+YHZCc9kQYdWfJB2/oUl9rA99qbowYYBtr4ui4mZyAQ2JpvVBd/6U2YloATfqBhBTSMhTpgBHtU0Mf3Rg==}

  ts-api-utils@1.4.3:
    resolution: {integrity: sha512-i3eMG77UTMD0hZhgRS562pv83RC6ukSAC2GMNWc+9dieh/+jDM5u5YG+NHX6VNDRHQcHwmsTHctP9LhbC3WxVw==}
    engines: {node: '>=16'}
    peerDependencies:
      typescript: '>=4.2.0'

  ts-essentials@9.4.2:
    resolution: {integrity: sha512-mB/cDhOvD7pg3YCLk2rOtejHjjdSi9in/IBYE13S+8WA5FBSraYf4V/ws55uvs0IvQ/l0wBOlXy5yBNZ9Bl8ZQ==}
    peerDependencies:
      typescript: '>=4.1.0'
    peerDependenciesMeta:
      typescript:
        optional: true

  ts-interface-checker@0.1.13:
    resolution: {integrity: sha512-Y/arvbn+rrz3JCKl9C4kVNfTfSm2/mEp5FSz5EsZSANGPSlQrpRI5M4PKF+mJnE52jOO90PnPSc3Ur3bTQw0gA==}

  ts-jest@29.2.5:
    resolution: {integrity: sha512-KD8zB2aAZrcKIdGk4OwpJggeLcH1FgrICqDSROWqlnJXGCXK4Mn6FcdK2B6670Xr73lHMG1kHw8R87A0ecZ+vA==}
    engines: {node: ^14.15.0 || ^16.10.0 || ^18.0.0 || >=20.0.0}
    hasBin: true
    peerDependencies:
      '@babel/core': '>=7.0.0-beta.0 <8'
      '@jest/transform': ^29.0.0
      '@jest/types': ^29.0.0
      babel-jest: ^29.0.0
      esbuild: '*'
      jest: ^29.0.0
      typescript: '>=4.3 <6'
    peerDependenciesMeta:
      '@babel/core':
        optional: true
      '@jest/transform':
        optional: true
      '@jest/types':
        optional: true
      babel-jest:
        optional: true
      esbuild:
        optional: true

  ts-loader@9.5.2:
    resolution: {integrity: sha512-Qo4piXvOTWcMGIgRiuFa6nHNm+54HbYaZCKqc9eeZCLRy3XqafQgwX2F7mofrbJG3g7EEb+lkiR+z2Lic2s3Zw==}
    engines: {node: '>=12.0.0'}
    peerDependencies:
      typescript: '*'
      webpack: ^5.0.0

  ts-node@10.9.2:
    resolution: {integrity: sha512-f0FFpIdcHgn8zcPSbf1dRevwt047YMnaiJM3u2w2RewrB+fob/zePZcrOyQoLMMO7aBIddLcQIEK5dYjkLnGrQ==}
    hasBin: true
    peerDependencies:
      '@swc/core': '>=1.2.50'
      '@swc/wasm': '>=1.2.50'
      '@types/node': '*'
      typescript: '>=2.7'
    peerDependenciesMeta:
      '@swc/core':
        optional: true
      '@swc/wasm':
        optional: true

  tsconfig-paths-webpack-plugin@4.2.0:
    resolution: {integrity: sha512-zbem3rfRS8BgeNK50Zz5SIQgXzLafiHjOwUAvk/38/o1jHn/V5QAgVUcz884or7WYcPaH3N2CIfUc2u0ul7UcA==}
    engines: {node: '>=10.13.0'}

  tsconfig-paths@3.15.0:
    resolution: {integrity: sha512-2Ac2RgzDe/cn48GvOe3M+o82pEFewD3UPbyoUHHdKasHwJKjds4fLXWf/Ux5kATBKN20oaFGu+jbElp1pos0mg==}

  tsconfig-paths@4.2.0:
    resolution: {integrity: sha512-NoZ4roiN7LnbKn9QqE1amc9DJfzvZXxF4xDavcOWt1BPkdx+m+0gJuPM+S0vCe7zTJMYUP0R8pO2XMr+Y8oLIg==}
    engines: {node: '>=6'}

  tslib@2.3.1:
    resolution: {integrity: sha512-77EbyPPpMz+FRFRuAFlWMtmgUWGe9UOG2Z25NqCwiIjRhOf5iKGuzSe5P2w1laq+FkRy4p+PCuVkJSGkzTEKVw==}

  tslib@2.7.0:
    resolution: {integrity: sha512-gLXCKdN1/j47AiHiOkJN69hJmcbGTHI0ImLmbYLHykhgeN0jVGola9yVjFgzCUklsZQMW55o+dW7IXv3RCXDzA==}

  tslib@2.8.1:
    resolution: {integrity: sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==}

  type-check@0.4.0:
    resolution: {integrity: sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==}
    engines: {node: '>= 0.8.0'}

  type-detect@4.0.8:
    resolution: {integrity: sha512-0fr/mIH1dlO+x7TlcMy+bIDqKPsw/70tVyeHW787goQjhmqaZe10uwLujubK9q9Lg6Fiho1KUKDYz0Z7k7g5/g==}
    engines: {node: '>=4'}

  type-fest@0.20.2:
    resolution: {integrity: sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==}
    engines: {node: '>=10'}

  type-fest@0.21.3:
    resolution: {integrity: sha512-t0rzBq87m3fVcduHDUFhKmyyX+9eo6WQjZvf51Ea/M0Q7+T374Jp1aUiyUl0GKxp8M/OETVHSDvmkyPgvX+X2w==}
    engines: {node: '>=10'}

  type-fest@4.6.0:
    resolution: {integrity: sha512-rLjWJzQFOq4xw7MgJrCZ6T1jIOvvYElXT12r+y0CC6u67hegDHaxcPqb2fZHOGlqxugGQPNB1EnTezjBetkwkw==}
    engines: {node: '>=16'}

  type-is@1.6.18:
    resolution: {integrity: sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==}
    engines: {node: '>= 0.6'}

  typed-array-buffer@1.0.3:
    resolution: {integrity: sha512-nAYYwfY3qnzX30IkA6AQZjVbtK6duGontcQm1WSG1MD94YLqK0515GNApXkoxKOWMusVssAHWLh9SeaoefYFGw==}
    engines: {node: '>= 0.4'}

  typed-array-byte-length@1.0.3:
    resolution: {integrity: sha512-BaXgOuIxz8n8pIq3e7Atg/7s+DpiYrxn4vdot3w9KbnBhcRQq6o3xemQdIfynqSeXeDrF32x+WvfzmOjPiY9lg==}
    engines: {node: '>= 0.4'}

  typed-array-byte-offset@1.0.4:
    resolution: {integrity: sha512-bTlAFB/FBYMcuX81gbL4OcpH5PmlFHqlCCpAl8AlEzMz5k53oNDvN8p1PNOWLEmI2x4orp3raOFB51tv9X+MFQ==}
    engines: {node: '>= 0.4'}

  typed-array-length@1.0.7:
    resolution: {integrity: sha512-3KS2b+kL7fsuk/eJZ7EQdnEmQoaho/r6KUef7hxvltNA5DR8NAUM+8wJMbJyZ4G9/7i3v5zPBIMN5aybAh2/Jg==}
    engines: {node: '>= 0.4'}

  typedarray@0.0.6:
    resolution: {integrity: sha512-/aCDEGatGvZ2BIk+HmLf4ifCJFwvKFNb9/JeZPMulfgFracn9QFcAf5GO8B/mweUjSoblS5In0cWhqpfs/5PQA==}

  typedoc-material-theme@1.3.0:
    resolution: {integrity: sha512-4vY68NUBBkMc3gKAltDtvT0KbIYX1uaFAT/3brDwhnUxhfTiYRtfg8VXR2lr8f+9VNDh7BfEtj8gpRO7Y93TWQ==}
    engines: {node: '>=18.0.0', npm: '>=8.6.0'}
    peerDependencies:
      typedoc: ^0.25.13 || ^0.26.x || ^0.27.x

  typedoc-plugin-extras@3.1.0:
    resolution: {integrity: sha512-8tNeq2fgl2HCUZ6eZuAoLLKEvB/WrRS4He9MtTfo3X3Pa8Iw3TS5D0g8krDhUXUk1uHpXVAVHm8rSOMS2mdJRw==}
    peerDependencies:
      typedoc: 0.26.x

  typedoc@0.26.11:
    resolution: {integrity: sha512-sFEgRRtrcDl2FxVP58Ze++ZK2UQAEvtvvH8rRlig1Ja3o7dDaMHmaBfvJmdGnNEFaLTpQsN8dpvZaTqJSu/Ugw==}
    engines: {node: '>= 18'}
    hasBin: true
    peerDependencies:
      typescript: 4.6.x || 4.7.x || 4.8.x || 4.9.x || 5.0.x || 5.1.x || 5.2.x || 5.3.x || 5.4.x || 5.5.x || 5.6.x

  typescript-eslint@7.18.0:
    resolution: {integrity: sha512-PonBkP603E3tt05lDkbOMyaxJjvKqQrXsnow72sVeOFINDE/qNmnnd+f9b4N+U7W6MXnnYyrhtmF2t08QWwUbA==}
    engines: {node: ^18.18.0 || >=20.0.0}
    peerDependencies:
      eslint: ^8.56.0
      typescript: '*'
    peerDependenciesMeta:
      typescript:
        optional: true

  typescript@5.7.2:
    resolution: {integrity: sha512-i5t66RHxDvVN40HfDd1PsEThGNnlMCMT3jMUuoh9/0TaqWevNontacunWyN02LA9/fIbEWlcHZcgTKb9QoaLfg==}
    engines: {node: '>=14.17'}
    hasBin: true

  typescript@5.7.3:
    resolution: {integrity: sha512-84MVSjMEHP+FQRPy3pX9sTVV/INIex71s9TL2Gm5FG/WG1SqXeKyZ0k7/blY/4FdOzI12CBy1vGc4og/eus0fw==}
    engines: {node: '>=14.17'}
    hasBin: true

  uc.micro@2.1.0:
    resolution: {integrity: sha512-ARDJmphmdvUk6Glw7y9DQ2bFkKBHwQHLi2lsaH6PPmz/Ka9sFOBsBluozhDltWmnv9u/cF6Rt87znRTPV+yp/A==}

  uid@2.0.2:
    resolution: {integrity: sha512-u3xV3X7uzvi5b1MncmZo3i2Aw222Zk1keqLA1YkHldREkAhAqi65wuPfe7lHx8H/Wzy+8CE7S7uS3jekIM5s8g==}
    engines: {node: '>=8'}

  unbox-primitive@1.1.0:
    resolution: {integrity: sha512-nWJ91DjeOkej/TA8pXQ3myruKpKEYgqvpw9lz4OPHj/NWFNluYrjbz9j01CJ8yKQd2g4jFoOkINCTW2I5LEEyw==}
    engines: {node: '>= 0.4'}

  uncrypto@0.1.3:
    resolution: {integrity: sha512-Ql87qFHB3s/De2ClA9e0gsnS6zXG27SkTiSJwjCc9MebbfapQfuPzumMIUMi38ezPZVNFcHI9sUIepeQfw8J8Q==}

  undici-types@6.19.8:
    resolution: {integrity: sha512-ve2KP6f/JnbPBFyobGHuerC9g1FYGn/F8n1LWTwNxCEzd6IfqTwUQcNXgEtmmQ6DlRrC1hrSrBnCZPokRrDHjw==}

  undici-types@6.20.0:
    resolution: {integrity: sha512-Ny6QZ2Nju20vw1SRHe3d9jVu6gJ+4e3+MMpqu7pqE5HT6WsTSlce++GQmK5UXS8mzV8DSYHrQH+Xrf2jVcuKNg==}

  unist-util-is@6.0.0:
    resolution: {integrity: sha512-2qCTHimwdxLfz+YzdGfkqNlH0tLi9xjTnHddPmJwtIG9MGsdbutfTc4P+haPD7l7Cjxf/WZj+we5qfVPvvxfYw==}

  unist-util-position@5.0.0:
    resolution: {integrity: sha512-fucsC7HjXvkB5R3kTCO7kUjRdrS0BJt3M/FPxmHMBOm8JQi2BsHAHFsy27E0EolP8rp0NzXsJ+jNPyDWvOJZPA==}

  unist-util-stringify-position@4.0.0:
    resolution: {integrity: sha512-0ASV06AAoKCDkS2+xw5RXJywruurpbC4JZSm7nr7MOt1ojAzvyyaO+UxZf18j8FCF6kmzCZKcAgN/yu2gm2XgQ==}

  unist-util-visit-parents@6.0.1:
    resolution: {integrity: sha512-L/PqWzfTP9lzzEa6CKs0k2nARxTdZduw3zyh8d2NVBnsyvHjSX4TWse388YrrQKbvI8w20fGjGlhgT96WwKykw==}

  unist-util-visit@5.0.0:
    resolution: {integrity: sha512-MR04uvD+07cwl/yhVuVWAtw+3GOR/knlL55Nd/wAdblk27GCVt3lqpTivy/tkJcZoNPzTwS1Y+KMojlLDhoTzg==}

  universalify@0.1.2:
    resolution: {integrity: sha512-rBJeI5CXAlmy1pV+617WB9J63U6XcazHHF2f2dbJix4XzpUF0RS3Zbj0FGIOCAva5P/d/GBOYaACQ1w+0azUkg==}
    engines: {node: '>= 4.0.0'}

  universalify@2.0.1:
    resolution: {integrity: sha512-gptHNQghINnc/vTGIk0SOFGFNXw7JVrlRUtConJRlvaw6DuX0wO5Jeko9sWrMBhh+PsYAZ7oXAiOnf/UKogyiw==}
    engines: {node: '>= 10.0.0'}

  unpipe@1.0.0:
    resolution: {integrity: sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==}
    engines: {node: '>= 0.8'}

  untildify@4.0.0:
    resolution: {integrity: sha512-KK8xQ1mkzZeg9inewmFVDNkg3l5LUhoq9kN6iWYB/CC9YMG8HA+c1Q8HwDe6dEX7kErrEVNVBO3fWsVq5iDgtw==}
    engines: {node: '>=8'}

  update-browserslist-db@1.1.2:
    resolution: {integrity: sha512-PPypAm5qvlD7XMZC3BujecnaOxwhrtoFR+Dqkk5Aa/6DssiH0ibKoketaj9w8LP7Bont1rYeoV5plxD7RTEPRg==}
    hasBin: true
    peerDependencies:
      browserslist: '>= 4.21.0'

  uri-js@4.4.1:
    resolution: {integrity: sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==}

  util-deprecate@1.0.2:
    resolution: {integrity: sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==}

  utils-merge@1.0.1:
    resolution: {integrity: sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA==}
    engines: {node: '>= 0.4.0'}

  utrie@1.0.2:
    resolution: {integrity: sha512-1MLa5ouZiOmQzUbjbu9VmjLzn1QLXBhwpUa7kdLUQK+KQ5KA9I1vk5U4YHe/X2Ch7PYnJfWuWT+VbuxbGwljhw==}

  v8-compile-cache-lib@3.0.1:
    resolution: {integrity: sha512-wa7YjyUGfNZngI/vtK0UHAN+lgDCxBPCylVXGp0zu59Fz5aiGtNXaq3DhIov063MorB+VfufLh3JlF2KdTK3xg==}

  v8-to-istanbul@9.3.0:
    resolution: {integrity: sha512-kiGUalWN+rgBJ/1OHZsBtU4rXZOfj/7rKQxULKlIzwzQSvMJUUNgPwJEEh7gU6xEVxC0ahoOBvN2YI8GH6FNgA==}
    engines: {node: '>=10.12.0'}

  valibot@0.42.1:
    resolution: {integrity: sha512-3keXV29Ar5b//Hqi4MbSdV7lfVp6zuYLZuA9V1PvQUsXqogr+u5lvLPLk3A4f74VUXDnf/JfWMN6sB+koJ/FFw==}
    peerDependencies:
      typescript: '>=5'
    peerDependenciesMeta:
      typescript:
        optional: true

  validator@13.12.0:
    resolution: {integrity: sha512-c1Q0mCiPlgdTVVVIJIrBuxNicYE+t/7oKeI9MWLj3fh/uq2Pxh/3eeWbVZ4OcGW1TUf53At0njHw5SMdA3tmMg==}
    engines: {node: '>= 0.10'}

  varuint-bitcoin@1.1.2:
    resolution: {integrity: sha512-4EVb+w4rx+YfVM32HQX42AbbT7/1f5zwAYhIujKXKk8NQK+JfRVl3pqT3hjNn/L+RstigmGGKVwHA/P0wgITZw==}

  vary@1.1.2:
    resolution: {integrity: sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==}
    engines: {node: '>= 0.8'}

  vfile-message@4.0.2:
    resolution: {integrity: sha512-jRDZ1IMLttGj41KcZvlrYAaI3CfqpLpfpf+Mfig13viT6NKvRzWZ+lXz0Y5D60w6uJIBAOGq9mSHf0gktF0duw==}

  vfile@6.0.3:
    resolution: {integrity: sha512-KzIbH/9tXat2u30jf+smMwFCsno4wHVdNmzFyL+T/L3UGqqk6JKfVqOFOZEpZSHADH1k40ab6NUIXZq422ov3Q==}

  walker@1.0.8:
    resolution: {integrity: sha512-ts/8E8l5b7kY0vlWLewOkDXMmPdLcVV4GmOQLyxuSswIJsweeFZtAsMF7k1Nszz+TYBQrlYRmzOnr398y1JemQ==}

  watchpack@2.4.2:
    resolution: {integrity: sha512-TnbFSbcOCcDgjZ4piURLCbJ3nJhznVh9kw6F6iokjiFPl8ONxe9A6nMDVXDiNbrSfLILs6vB07F7wLBrwPYzJw==}
    engines: {node: '>=10.13.0'}

  wcwidth@1.0.1:
    resolution: {integrity: sha512-XHPEwS0q6TaxcvG85+8EYkbiCux2XtWG2mkc47Ng2A77BQu9+DqIOJldST4HgPkuea7dvKSj5VgX3P1d4rW8Tg==}

  webidl-conversions@3.0.1:
    resolution: {integrity: sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ==}

  webpack-node-externals@3.0.0:
    resolution: {integrity: sha512-LnL6Z3GGDPht/AigwRh2dvL9PQPFQ8skEpVrWZXLWBYmqcaojHNN0onvHzie6rq7EWKrrBfPYqNEzTJgiwEQDQ==}
    engines: {node: '>=6'}

  webpack-sources@3.2.3:
    resolution: {integrity: sha512-/DyMEOrDgLKKIG0fmvtz+4dUX/3Ghozwgm6iPp8KRhvn+eQf9+Q7GWxVNMk3+uCPWfdXYC4ExGBckIXdFEfH1w==}
    engines: {node: '>=10.13.0'}

  webpack@5.97.1:
    resolution: {integrity: sha512-EksG6gFY3L1eFMROS/7Wzgrii5mBAFe4rIr3r2BTfo7bcc+DWwFZ4OJ/miOuHJO/A85HwyI4eQ0F6IKXesO7Fg==}
    engines: {node: '>=10.13.0'}
    hasBin: true
    peerDependencies:
      webpack-cli: '*'
    peerDependenciesMeta:
      webpack-cli:
        optional: true

  whatwg-url@5.0.0:
    resolution: {integrity: sha512-saE57nupxk6v3HY35+jzBwYa0rKSy0XR8JSxZPwgLr7ys0IBzhGviA1/TUGJLmSVqs8pb9AnvICXEuOHLprYTw==}

  which-boxed-primitive@1.1.1:
    resolution: {integrity: sha512-TbX3mj8n0odCBFVlY8AxkqcHASw3L60jIuF8jFP78az3C2YhmGvqbHBpAjTRH2/xqYunrJ9g1jSyjCjpoWzIAA==}
    engines: {node: '>= 0.4'}

  which-builtin-type@1.2.1:
    resolution: {integrity: sha512-6iBczoX+kDQ7a3+YJBnh3T+KZRxM/iYNPXicqk66/Qfm1b93iu+yOImkg0zHbj5LNOcNv1TEADiZ0xa34B4q6Q==}
    engines: {node: '>= 0.4'}

  which-collection@1.0.2:
    resolution: {integrity: sha512-K4jVyjnBdgvc86Y6BkaLZEN933SwYOuBFkdmBu9ZfkcAbdVbpITnDmjvZ/aQjRXQrv5EPkTnD1s39GiiqbngCw==}
    engines: {node: '>= 0.4'}

  which-typed-array@1.1.18:
    resolution: {integrity: sha512-qEcY+KJYlWyLH9vNbsr6/5j59AXk5ni5aakf8ldzBvGde6Iz4sxZGkJyWSAueTG7QhOvNRYb1lDdFmL5Td0QKA==}
    engines: {node: '>= 0.4'}

  which@2.0.2:
    resolution: {integrity: sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==}
    engines: {node: '>= 8'}
    hasBin: true

  word-wrap@1.2.5:
    resolution: {integrity: sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==}
    engines: {node: '>=0.10.0'}

  wrap-ansi@6.2.0:
    resolution: {integrity: sha512-r6lPcBGxZXlIcymEu7InxDMhdW0KDxpLgoFLcguasxCaJ/SOIZwINatK9KY/tf+ZrlywOKU0UDj3ATXUBfxJXA==}
    engines: {node: '>=8'}

  wrap-ansi@7.0.0:
    resolution: {integrity: sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==}
    engines: {node: '>=10'}

  wrap-ansi@8.1.0:
    resolution: {integrity: sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==}
    engines: {node: '>=12'}

  wrappy@1.0.2:
    resolution: {integrity: sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==}

  write-file-atomic@4.0.2:
    resolution: {integrity: sha512-7KxauUdBmSdWnmpaGFg+ppNjKF8uNLry8LyzjauQDOVONfFLNKrKvQOxZ/VuTIcS/gge/YNahf5RIIQWTSarlg==}
    engines: {node: ^12.13.0 || ^14.15.0 || >=16.0.0}

  write-file-atomic@5.0.1:
    resolution: {integrity: sha512-+QU2zd6OTD8XWIJCbffaiQeH9U73qIqafo1x6V1snCWYGJf6cVE0cDR4D8xRzcEnfI21IFrUPzPGtcPf8AC+Rw==}
    engines: {node: ^14.17.0 || ^16.13.0 || >=18.0.0}

  ws@8.17.1:
    resolution: {integrity: sha512-6XQFvXTkbfUOZOKKILFG1PDK2NDQs4azKQl26T0YS5CxqWLgXajbPZ+h4gZekJyRqFU8pvnbAbbs/3TgRPy+GQ==}
    engines: {node: '>=10.0.0'}
    peerDependencies:
      bufferutil: ^4.0.1
      utf-8-validate: '>=5.0.2'
    peerDependenciesMeta:
      bufferutil:
        optional: true
      utf-8-validate:
        optional: true

  ws@8.18.0:
    resolution: {integrity: sha512-8VbfWfHLbbwu3+N6OKsOMpBdT4kXPDDB9cJk2bJ6mh9ucxdlnNvH1e+roYkKmN9Nxw2yjz7VzeO9oOz2zJ04Pw==}
    engines: {node: '>=10.0.0'}
    peerDependencies:
      bufferutil: ^4.0.1
      utf-8-validate: '>=5.0.2'
    peerDependenciesMeta:
      bufferutil:
        optional: true
      utf-8-validate:
        optional: true

  xtend@4.0.2:
    resolution: {integrity: sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==}
    engines: {node: '>=0.4'}

  y18n@5.0.8:
    resolution: {integrity: sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==}
    engines: {node: '>=10'}

  yallist@3.1.1:
    resolution: {integrity: sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==}

  yaml@2.7.0:
    resolution: {integrity: sha512-+hSoy/QHluxmC9kCIJyL/uyFmLmc+e5CFR5Wa+bpIhIj85LVb9ZH2nVnqrHoSvKogwODv0ClqZkmiSSaIH5LTA==}
    engines: {node: '>= 14'}
    hasBin: true

  yargs-parser@20.2.9:
    resolution: {integrity: sha512-y11nGElTIV+CT3Zv9t7VKl+Q3hTQoT9a1Qzezhhl6Rp21gJ/IVTW7Z3y9EWXhuUBC2Shnf+DX0antecpAwSP8w==}
    engines: {node: '>=10'}

  yargs-parser@21.1.1:
    resolution: {integrity: sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==}
    engines: {node: '>=12'}

  yargs@16.2.0:
    resolution: {integrity: sha512-D1mvvtDG0L5ft/jGWkLpG1+m0eQxOfaBvTNELraWj22wSVUMWxZUvYgJYcKh6jGGIkJFhH4IZPQhR4TKpc8mBw==}
    engines: {node: '>=10'}

  yargs@17.7.2:
    resolution: {integrity: sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==}
    engines: {node: '>=12'}

  yn@3.1.1:
    resolution: {integrity: sha512-Ux4ygGWsu2c7isFWe8Yu1YluJmqVhxqK2cLXNQA5AcC3QfbGNpM7fu0Y8b/z16pXLnFxZYvWhd3fhBY9DLmC6Q==}
    engines: {node: '>=6'}

  yocto-queue@0.1.0:
    resolution: {integrity: sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==}
    engines: {node: '>=10'}

  zwitch@2.0.4:
    resolution: {integrity: sha512-bXE4cR/kVZhKZX/RjPEflHaKVhUVl85noU3v6b8apfQEc1x4A+zBxjZ4lN8LqGd6WZ3dl98pY4o717VFmoPp+A==}

snapshots:

  '@adraffy/ens-normalize@1.10.1': {}

  '@alloc/quick-lru@5.2.0': {}

  '@ampproject/remapping@2.3.0':
    dependencies:
      '@jridgewell/gen-mapping': 0.3.8
      '@jridgewell/trace-mapping': 0.3.25

  '@angular-devkit/core@17.3.11(chokidar@3.6.0)':
    dependencies:
      ajv: 8.12.0
      ajv-formats: 2.1.1(ajv@8.12.0)
      jsonc-parser: 3.2.1
      picomatch: 4.0.1
      rxjs: 7.8.1
      source-map: 0.7.4
    optionalDependencies:
      chokidar: 3.6.0

  '@angular-devkit/schematics-cli@17.3.11(chokidar@3.6.0)':
    dependencies:
      '@angular-devkit/core': 17.3.11(chokidar@3.6.0)
      '@angular-devkit/schematics': 17.3.11(chokidar@3.6.0)
      ansi-colors: 4.1.3
      inquirer: 9.2.15
      symbol-observable: 4.0.0
      yargs-parser: 21.1.1
    transitivePeerDependencies:
      - chokidar

  '@angular-devkit/schematics@17.3.11(chokidar@3.6.0)':
    dependencies:
      '@angular-devkit/core': 17.3.11(chokidar@3.6.0)
      jsonc-parser: 3.2.1
      magic-string: 0.30.8
      ora: 5.4.1
      rxjs: 7.8.1
    transitivePeerDependencies:
      - chokidar

  '@babel/code-frame@7.26.2':
    dependencies:
      '@babel/helper-validator-identifier': 7.25.9
      js-tokens: 4.0.0
      picocolors: 1.1.1

  '@babel/compat-data@7.26.8': {}

  '@babel/core@7.26.8':
    dependencies:
      '@ampproject/remapping': 2.3.0
      '@babel/code-frame': 7.26.2
      '@babel/generator': 7.26.8
      '@babel/helper-compilation-targets': 7.26.5
      '@babel/helper-module-transforms': 7.26.0(@babel/core@7.26.8)
      '@babel/helpers': 7.26.7
      '@babel/parser': 7.26.8
      '@babel/template': 7.26.8
      '@babel/traverse': 7.26.8
      '@babel/types': 7.26.8
      '@types/gensync': 1.0.4
      convert-source-map: 2.0.0
      debug: 4.4.0
      gensync: 1.0.0-beta.2
      json5: 2.2.3
      semver: 6.3.1
    transitivePeerDependencies:
      - supports-color

  '@babel/generator@7.26.8':
    dependencies:
      '@babel/parser': 7.26.8
      '@babel/types': 7.26.8
      '@jridgewell/gen-mapping': 0.3.8
      '@jridgewell/trace-mapping': 0.3.25
      jsesc: 3.1.0

  '@babel/helper-compilation-targets@7.26.5':
    dependencies:
      '@babel/compat-data': 7.26.8
      '@babel/helper-validator-option': 7.25.9
      browserslist: 4.24.4
      lru-cache: 5.1.1
      semver: 6.3.1

  '@babel/helper-module-imports@7.25.9':
    dependencies:
      '@babel/traverse': 7.26.8
      '@babel/types': 7.26.8
    transitivePeerDependencies:
      - supports-color

  '@babel/helper-module-transforms@7.26.0(@babel/core@7.26.8)':
    dependencies:
      '@babel/core': 7.26.8
      '@babel/helper-module-imports': 7.25.9
      '@babel/helper-validator-identifier': 7.25.9
      '@babel/traverse': 7.26.8
    transitivePeerDependencies:
      - supports-color

  '@babel/helper-plugin-utils@7.26.5': {}

  '@babel/helper-string-parser@7.25.9': {}

  '@babel/helper-validator-identifier@7.25.9': {}

  '@babel/helper-validator-option@7.25.9': {}

  '@babel/helpers@7.26.7':
    dependencies:
      '@babel/template': 7.26.8
      '@babel/types': 7.26.8

  '@babel/parser@7.26.8':
    dependencies:
      '@babel/types': 7.26.8

  '@babel/plugin-syntax-async-generators@7.8.4(@babel/core@7.26.8)':
    dependencies:
      '@babel/core': 7.26.8
      '@babel/helper-plugin-utils': 7.26.5

  '@babel/plugin-syntax-bigint@7.8.3(@babel/core@7.26.8)':
    dependencies:
      '@babel/core': 7.26.8
      '@babel/helper-plugin-utils': 7.26.5

  '@babel/plugin-syntax-class-properties@7.12.13(@babel/core@7.26.8)':
    dependencies:
      '@babel/core': 7.26.8
      '@babel/helper-plugin-utils': 7.26.5

  '@babel/plugin-syntax-class-static-block@7.14.5(@babel/core@7.26.8)':
    dependencies:
      '@babel/core': 7.26.8
      '@babel/helper-plugin-utils': 7.26.5

  '@babel/plugin-syntax-import-attributes@7.26.0(@babel/core@7.26.8)':
    dependencies:
      '@babel/core': 7.26.8
      '@babel/helper-plugin-utils': 7.26.5

  '@babel/plugin-syntax-import-meta@7.10.4(@babel/core@7.26.8)':
    dependencies:
      '@babel/core': 7.26.8
      '@babel/helper-plugin-utils': 7.26.5

  '@babel/plugin-syntax-json-strings@7.8.3(@babel/core@7.26.8)':
    dependencies:
      '@babel/core': 7.26.8
      '@babel/helper-plugin-utils': 7.26.5

  '@babel/plugin-syntax-jsx@7.25.9(@babel/core@7.26.8)':
    dependencies:
      '@babel/core': 7.26.8
      '@babel/helper-plugin-utils': 7.26.5

  '@babel/plugin-syntax-logical-assignment-operators@7.10.4(@babel/core@7.26.8)':
    dependencies:
      '@babel/core': 7.26.8
      '@babel/helper-plugin-utils': 7.26.5

  '@babel/plugin-syntax-nullish-coalescing-operator@7.8.3(@babel/core@7.26.8)':
    dependencies:
      '@babel/core': 7.26.8
      '@babel/helper-plugin-utils': 7.26.5

  '@babel/plugin-syntax-numeric-separator@7.10.4(@babel/core@7.26.8)':
    dependencies:
      '@babel/core': 7.26.8
      '@babel/helper-plugin-utils': 7.26.5

  '@babel/plugin-syntax-object-rest-spread@7.8.3(@babel/core@7.26.8)':
    dependencies:
      '@babel/core': 7.26.8
      '@babel/helper-plugin-utils': 7.26.5

  '@babel/plugin-syntax-optional-catch-binding@7.8.3(@babel/core@7.26.8)':
    dependencies:
      '@babel/core': 7.26.8
      '@babel/helper-plugin-utils': 7.26.5

  '@babel/plugin-syntax-optional-chaining@7.8.3(@babel/core@7.26.8)':
    dependencies:
      '@babel/core': 7.26.8
      '@babel/helper-plugin-utils': 7.26.5

  '@babel/plugin-syntax-private-property-in-object@7.14.5(@babel/core@7.26.8)':
    dependencies:
      '@babel/core': 7.26.8
      '@babel/helper-plugin-utils': 7.26.5

  '@babel/plugin-syntax-top-level-await@7.14.5(@babel/core@7.26.8)':
    dependencies:
      '@babel/core': 7.26.8
      '@babel/helper-plugin-utils': 7.26.5

  '@babel/plugin-syntax-typescript@7.25.9(@babel/core@7.26.8)':
    dependencies:
      '@babel/core': 7.26.8
      '@babel/helper-plugin-utils': 7.26.5

  '@babel/runtime@7.26.7':
    dependencies:
      regenerator-runtime: 0.14.1

  '@babel/template@7.26.8':
    dependencies:
      '@babel/code-frame': 7.26.2
      '@babel/parser': 7.26.8
      '@babel/types': 7.26.8

  '@babel/traverse@7.26.8':
    dependencies:
      '@babel/code-frame': 7.26.2
      '@babel/generator': 7.26.8
      '@babel/parser': 7.26.8
      '@babel/template': 7.26.8
      '@babel/types': 7.26.8
      debug: 4.4.0
      globals: 11.12.0
    transitivePeerDependencies:
      - supports-color

  '@babel/types@7.26.8':
    dependencies:
      '@babel/helper-string-parser': 7.25.9
      '@babel/helper-validator-identifier': 7.25.9

  '@bcoe/v8-coverage@0.2.3': {}

  '@changesets/apply-release-plan@7.0.8':
    dependencies:
      '@changesets/config': 3.0.5
      '@changesets/get-version-range-type': 0.4.0
      '@changesets/git': 3.0.2
      '@changesets/should-skip-package': 0.1.1
      '@changesets/types': 6.0.0
      '@manypkg/get-packages': 1.1.3
      detect-indent: 6.1.0
      fs-extra: 7.0.1
      lodash.startcase: 4.4.0
      outdent: 0.5.0
      prettier: 2.8.8
      resolve-from: 5.0.0
      semver: 7.7.1

  '@changesets/assemble-release-plan@6.0.5':
    dependencies:
      '@changesets/errors': 0.2.0
      '@changesets/get-dependents-graph': 2.1.2
      '@changesets/should-skip-package': 0.1.1
      '@changesets/types': 6.0.0
      '@manypkg/get-packages': 1.1.3
      semver: 7.7.1

  '@changesets/changelog-git@0.2.0':
    dependencies:
      '@changesets/types': 6.0.0

  '@changesets/changelog-github@0.5.0':
    dependencies:
      '@changesets/get-github-info': 0.6.0
      '@changesets/types': 6.0.0
      dotenv: 8.6.0
    transitivePeerDependencies:
      - encoding

  '@changesets/cli@2.27.12':
    dependencies:
      '@changesets/apply-release-plan': 7.0.8
      '@changesets/assemble-release-plan': 6.0.5
      '@changesets/changelog-git': 0.2.0
      '@changesets/config': 3.0.5
      '@changesets/errors': 0.2.0
      '@changesets/get-dependents-graph': 2.1.2
      '@changesets/get-release-plan': 4.0.6
      '@changesets/git': 3.0.2
      '@changesets/logger': 0.1.1
      '@changesets/pre': 2.0.1
      '@changesets/read': 0.6.2
      '@changesets/should-skip-package': 0.1.1
      '@changesets/types': 6.0.0
      '@changesets/write': 0.3.2
      '@manypkg/get-packages': 1.1.3
      ansi-colors: 4.1.3
      ci-info: 3.9.0
      enquirer: 2.4.1
      external-editor: 3.1.0
      fs-extra: 7.0.1
      mri: 1.2.0
      p-limit: 2.3.0
      package-manager-detector: 0.2.9
      picocolors: 1.1.1
      resolve-from: 5.0.0
      semver: 7.7.1
      spawndamnit: 3.0.1
      term-size: 2.2.1

  '@changesets/config@3.0.5':
    dependencies:
      '@changesets/errors': 0.2.0
      '@changesets/get-dependents-graph': 2.1.2
      '@changesets/logger': 0.1.1
      '@changesets/types': 6.0.0
      '@manypkg/get-packages': 1.1.3
      fs-extra: 7.0.1
      micromatch: 4.0.8

  '@changesets/errors@0.2.0':
    dependencies:
      extendable-error: 0.1.7

  '@changesets/get-dependents-graph@2.1.2':
    dependencies:
      '@changesets/types': 6.0.0
      '@manypkg/get-packages': 1.1.3
      picocolors: 1.1.1
      semver: 7.7.1

  '@changesets/get-github-info@0.6.0':
    dependencies:
      dataloader: 1.4.0
      node-fetch: 2.7.0
    transitivePeerDependencies:
      - encoding

  '@changesets/get-release-plan@4.0.6':
    dependencies:
      '@changesets/assemble-release-plan': 6.0.5
      '@changesets/config': 3.0.5
      '@changesets/pre': 2.0.1
      '@changesets/read': 0.6.2
      '@changesets/types': 6.0.0
      '@manypkg/get-packages': 1.1.3

  '@changesets/get-version-range-type@0.4.0': {}

  '@changesets/git@3.0.2':
    dependencies:
      '@changesets/errors': 0.2.0
      '@manypkg/get-packages': 1.1.3
      is-subdir: 1.2.0
      micromatch: 4.0.8
      spawndamnit: 3.0.1

  '@changesets/logger@0.1.1':
    dependencies:
      picocolors: 1.1.1

  '@changesets/parse@0.4.0':
    dependencies:
      '@changesets/types': 6.0.0
      js-yaml: 3.14.1

  '@changesets/pre@2.0.1':
    dependencies:
      '@changesets/errors': 0.2.0
      '@changesets/types': 6.0.0
      '@manypkg/get-packages': 1.1.3
      fs-extra: 7.0.1

  '@changesets/read@0.6.2':
    dependencies:
      '@changesets/git': 3.0.2
      '@changesets/logger': 0.1.1
      '@changesets/parse': 0.4.0
      '@changesets/types': 6.0.0
      fs-extra: 7.0.1
      p-filter: 2.1.0
      picocolors: 1.1.1

  '@changesets/should-skip-package@0.1.1':
    dependencies:
      '@changesets/types': 6.0.0
      '@manypkg/get-packages': 1.1.3

  '@changesets/types@4.1.0': {}

  '@changesets/types@6.0.0': {}

  '@changesets/write@0.3.2':
    dependencies:
      '@changesets/types': 6.0.0
      fs-extra: 7.0.1
      human-id: 1.0.2
      prettier: 2.8.8

  '@ckb-lumos/base@0.24.0-next.2':
    dependencies:
      '@ckb-lumos/bi': 0.24.0-next.2
      '@ckb-lumos/codec': 0.24.0-next.2
      '@ckb-lumos/toolkit': 0.24.0-next.2
      '@types/blake2b': 2.1.3
      '@types/lodash.isequal': 4.5.8
      blake2b: 2.1.4
      js-xxhash: 1.0.4

  '@ckb-lumos/bi@0.24.0-next.2':
    dependencies:
      jsbi: 4.3.0

  '@ckb-lumos/ckb-indexer@0.24.0-next.2':
    dependencies:
      '@ckb-lumos/base': 0.24.0-next.2
      '@ckb-lumos/bi': 0.24.0-next.2
      '@ckb-lumos/codec': 0.24.0-next.2
      '@ckb-lumos/rpc': 0.24.0-next.2
      '@ckb-lumos/toolkit': 0.24.0-next.2
      cross-fetch: 3.2.0
      events: 3.3.0
    transitivePeerDependencies:
      - encoding

  '@ckb-lumos/codec@0.24.0-next.2':
    dependencies:
      '@ckb-lumos/bi': 0.24.0-next.2

  '@ckb-lumos/common-scripts@0.24.0-next.2':
    dependencies:
      '@ckb-lumos/base': 0.24.0-next.2
      '@ckb-lumos/bi': 0.24.0-next.2
      '@ckb-lumos/codec': 0.24.0-next.2
      '@ckb-lumos/config-manager': 0.24.0-next.2
      '@ckb-lumos/crypto': 0.24.0-next.2
      '@ckb-lumos/helpers': 0.24.0-next.2
      '@ckb-lumos/rpc': 0.24.0-next.2
      '@ckb-lumos/toolkit': 0.24.0-next.2
      bech32: 2.0.0
      bs58: 5.0.0
      immutable: 4.3.7
    transitivePeerDependencies:
      - encoding

  '@ckb-lumos/config-manager@0.24.0-next.2':
    dependencies:
      '@ckb-lumos/base': 0.24.0-next.2
      '@ckb-lumos/bi': 0.24.0-next.2
      '@ckb-lumos/codec': 0.24.0-next.2
      '@ckb-lumos/rpc': 0.24.0-next.2
      '@types/deep-freeze-strict': 1.1.2
      deep-freeze-strict: 1.1.1
    transitivePeerDependencies:
      - encoding

  '@ckb-lumos/crypto@0.24.0-next.2':
    dependencies:
      '@noble/ciphers': 0.5.3
      '@noble/hashes': 1.7.1

  '@ckb-lumos/helpers@0.24.0-next.2':
    dependencies:
      '@ckb-lumos/base': 0.24.0-next.2
      '@ckb-lumos/bi': 0.24.0-next.2
      '@ckb-lumos/codec': 0.24.0-next.2
      '@ckb-lumos/config-manager': 0.24.0-next.2
      '@ckb-lumos/toolkit': 0.24.0-next.2
      bech32: 2.0.0
      immutable: 4.3.7
    transitivePeerDependencies:
      - encoding

  '@ckb-lumos/rpc@0.24.0-next.2':
    dependencies:
      '@ckb-lumos/base': 0.24.0-next.2
      '@ckb-lumos/bi': 0.24.0-next.2
      abort-controller: 3.0.0
      cross-fetch: 3.2.0
    transitivePeerDependencies:
      - encoding

  '@ckb-lumos/toolkit@0.24.0-next.2':
    dependencies:
      '@ckb-lumos/bi': 0.24.0-next.2

  '@colors/colors@1.5.0':
    optional: true

  '@cspotcode/source-map-support@0.8.1':
    dependencies:
      '@jridgewell/trace-mapping': 0.3.9

  '@eslint-community/eslint-utils@4.4.1(eslint@8.57.1)':
    dependencies:
      eslint: 8.57.1
      eslint-visitor-keys: 3.4.3

  '@eslint-community/eslint-utils@4.4.1(eslint@9.20.0(jiti@1.21.7))':
    dependencies:
      eslint: 9.20.0(jiti@1.21.7)
      eslint-visitor-keys: 3.4.3

  '@eslint-community/regexpp@4.12.1': {}

  '@eslint/config-array@0.19.2':
    dependencies:
      '@eslint/object-schema': 2.1.6
      debug: 4.4.0
      minimatch: 3.1.2
    transitivePeerDependencies:
      - supports-color

  '@eslint/core@0.10.0':
    dependencies:
      '@types/json-schema': 7.0.15

  '@eslint/core@0.11.0':
    dependencies:
      '@types/json-schema': 7.0.15

  '@eslint/eslintrc@2.1.4':
    dependencies:
      ajv: 6.12.6
      debug: 4.4.0
      espree: 9.6.1
      globals: 13.24.0
      ignore: 5.3.2
      import-fresh: 3.3.1
      js-yaml: 4.1.0
      minimatch: 3.1.2
      strip-json-comments: 3.1.1
    transitivePeerDependencies:
      - supports-color

  '@eslint/eslintrc@3.2.0':
    dependencies:
      ajv: 6.12.6
      debug: 4.4.0
      espree: 10.3.0
      globals: 14.0.0
      ignore: 5.3.2
      import-fresh: 3.3.1
      js-yaml: 4.1.0
      minimatch: 3.1.2
      strip-json-comments: 3.1.1
    transitivePeerDependencies:
      - supports-color

  '@eslint/js@8.57.1': {}

  '@eslint/js@9.20.0': {}

  '@eslint/object-schema@2.1.6': {}

  '@eslint/plugin-kit@0.2.5':
    dependencies:
      '@eslint/core': 0.10.0
      levn: 0.4.1

  '@headlessui/react@1.7.19(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@tanstack/react-virtual': 3.13.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      client-only: 0.0.1
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)

  '@heroicons/react@2.2.0(react@18.3.1)':
    dependencies:
      react: 18.3.1

  '@humanfs/core@0.19.1': {}

  '@humanfs/node@0.16.6':
    dependencies:
      '@humanfs/core': 0.19.1
      '@humanwhocodes/retry': 0.3.1

  '@humanwhocodes/config-array@0.13.0':
    dependencies:
      '@humanwhocodes/object-schema': 2.0.3
      debug: 4.4.0
      minimatch: 3.1.2
    transitivePeerDependencies:
      - supports-color

  '@humanwhocodes/module-importer@1.0.1': {}

  '@humanwhocodes/object-schema@2.0.3': {}

  '@humanwhocodes/retry@0.3.1': {}

  '@humanwhocodes/retry@0.4.1': {}

  '@isaacs/cliui@8.0.2':
    dependencies:
      string-width: 5.1.2
      string-width-cjs: string-width@4.2.3
      strip-ansi: 7.1.0
      strip-ansi-cjs: strip-ansi@6.0.1
      wrap-ansi: 8.1.0
      wrap-ansi-cjs: wrap-ansi@7.0.0

  '@istanbuljs/load-nyc-config@1.1.0':
    dependencies:
      camelcase: 5.3.1
      find-up: 4.1.0
      get-package-type: 0.1.0
      js-yaml: 3.14.1
      resolve-from: 5.0.0

  '@istanbuljs/schema@0.1.3': {}

  '@jest/console@29.7.0':
    dependencies:
      '@jest/types': 29.6.3
      '@types/node': 22.13.1
      chalk: 4.1.2
      jest-message-util: 29.7.0
      jest-util: 29.7.0
      slash: 3.0.0

  '@jest/console@30.0.0-alpha.6':
    dependencies:
      '@jest/types': 30.0.0-alpha.6
      '@types/node': 22.13.1
      chalk: 4.1.2
      jest-message-util: 30.0.0-alpha.6
      jest-util: 30.0.0-alpha.6
      slash: 3.0.0

  '@jest/core@29.7.0(ts-node@10.9.2(@types/node@20.17.17)(typescript@5.7.3))':
    dependencies:
      '@jest/console': 29.7.0
      '@jest/reporters': 29.7.0
      '@jest/test-result': 29.7.0
      '@jest/transform': 29.7.0
      '@jest/types': 29.6.3
      '@types/node': 22.13.1
      ansi-escapes: 4.3.2
      chalk: 4.1.2
      ci-info: 3.9.0
      exit: 0.1.2
      graceful-fs: 4.2.11
      jest-changed-files: 29.7.0
      jest-config: 29.7.0(@types/node@22.13.1)(ts-node@10.9.2(@types/node@20.17.17)(typescript@5.7.3))
      jest-haste-map: 29.7.0
      jest-message-util: 29.7.0
      jest-regex-util: 29.6.3
      jest-resolve: 29.7.0
      jest-resolve-dependencies: 29.7.0
      jest-runner: 29.7.0
      jest-runtime: 29.7.0
      jest-snapshot: 29.7.0
      jest-util: 29.7.0
      jest-validate: 29.7.0
      jest-watcher: 29.7.0
      micromatch: 4.0.8
      pretty-format: 29.7.0
      slash: 3.0.0
      strip-ansi: 6.0.1
    transitivePeerDependencies:
      - babel-plugin-macros
      - supports-color
      - ts-node

  '@jest/core@29.7.0(ts-node@10.9.2(@types/node@22.13.1)(typescript@5.7.3))':
    dependencies:
      '@jest/console': 29.7.0
      '@jest/reporters': 29.7.0
      '@jest/test-result': 29.7.0
      '@jest/transform': 29.7.0
      '@jest/types': 29.6.3
      '@types/node': 22.13.1
      ansi-escapes: 4.3.2
      chalk: 4.1.2
      ci-info: 3.9.0
      exit: 0.1.2
      graceful-fs: 4.2.11
      jest-changed-files: 29.7.0
      jest-config: 29.7.0(@types/node@22.13.1)(ts-node@10.9.2(@types/node@22.13.1)(typescript@5.7.3))
      jest-haste-map: 29.7.0
      jest-message-util: 29.7.0
      jest-regex-util: 29.6.3
      jest-resolve: 29.7.0
      jest-resolve-dependencies: 29.7.0
      jest-runner: 29.7.0
      jest-runtime: 29.7.0
      jest-snapshot: 29.7.0
      jest-util: 29.7.0
      jest-validate: 29.7.0
      jest-watcher: 29.7.0
      micromatch: 4.0.8
      pretty-format: 29.7.0
      slash: 3.0.0
      strip-ansi: 6.0.1
    transitivePeerDependencies:
      - babel-plugin-macros
      - supports-color
      - ts-node

  '@jest/core@30.0.0-alpha.6(ts-node@10.9.2(@types/node@22.13.1)(typescript@5.7.3))':
    dependencies:
      '@jest/console': 30.0.0-alpha.6
      '@jest/pattern': 30.0.0-alpha.6
      '@jest/reporters': 30.0.0-alpha.6
      '@jest/test-result': 30.0.0-alpha.6
      '@jest/transform': 30.0.0-alpha.6
      '@jest/types': 30.0.0-alpha.6
      '@types/node': 22.13.1
      ansi-escapes: 4.3.2
      chalk: 4.1.2
      ci-info: 4.1.0
      exit: 0.1.2
      graceful-fs: 4.2.11
      jest-changed-files: 30.0.0-alpha.6
      jest-config: 30.0.0-alpha.6(@types/node@22.13.1)(ts-node@10.9.2(@types/node@22.13.1)(typescript@5.7.3))
      jest-haste-map: 30.0.0-alpha.6
      jest-message-util: 30.0.0-alpha.6
      jest-regex-util: 30.0.0-alpha.6
      jest-resolve: 30.0.0-alpha.6
      jest-resolve-dependencies: 30.0.0-alpha.6
      jest-runner: 30.0.0-alpha.6
      jest-runtime: 30.0.0-alpha.6
      jest-snapshot: 30.0.0-alpha.6
      jest-util: 30.0.0-alpha.6
      jest-validate: 30.0.0-alpha.6
      jest-watcher: 30.0.0-alpha.6
      micromatch: 4.0.8
      pretty-format: 30.0.0-alpha.6
      slash: 3.0.0
      strip-ansi: 6.0.1
    transitivePeerDependencies:
      - babel-plugin-macros
      - esbuild-register
      - supports-color
      - ts-node

  '@jest/environment@29.7.0':
    dependencies:
      '@jest/fake-timers': 29.7.0
      '@jest/types': 29.6.3
      '@types/node': 22.13.1
      jest-mock: 29.7.0

  '@jest/environment@30.0.0-alpha.6':
    dependencies:
      '@jest/fake-timers': 30.0.0-alpha.6
      '@jest/types': 30.0.0-alpha.6
      '@types/node': 22.13.1
      jest-mock: 30.0.0-alpha.6

  '@jest/expect-utils@29.7.0':
    dependencies:
      jest-get-type: 29.6.3

  '@jest/expect-utils@30.0.0-alpha.6':
    dependencies:
      jest-get-type: 30.0.0-alpha.6

  '@jest/expect@29.7.0':
    dependencies:
      expect: 29.7.0
      jest-snapshot: 29.7.0
    transitivePeerDependencies:
      - supports-color

  '@jest/expect@30.0.0-alpha.6':
    dependencies:
      expect: 30.0.0-alpha.6
      jest-snapshot: 30.0.0-alpha.6
    transitivePeerDependencies:
      - supports-color

  '@jest/fake-timers@29.7.0':
    dependencies:
      '@jest/types': 29.6.3
      '@sinonjs/fake-timers': 10.3.0
      '@types/node': 22.13.1
      jest-message-util: 29.7.0
      jest-mock: 29.7.0
      jest-util: 29.7.0

  '@jest/fake-timers@30.0.0-alpha.6':
    dependencies:
      '@jest/types': 30.0.0-alpha.6
      '@sinonjs/fake-timers': 11.3.1
      '@types/node': 22.13.1
      jest-message-util: 30.0.0-alpha.6
      jest-mock: 30.0.0-alpha.6
      jest-util: 30.0.0-alpha.6

  '@jest/globals@29.7.0':
    dependencies:
      '@jest/environment': 29.7.0
      '@jest/expect': 29.7.0
      '@jest/types': 29.6.3
      jest-mock: 29.7.0
    transitivePeerDependencies:
      - supports-color

  '@jest/globals@30.0.0-alpha.6':
    dependencies:
      '@jest/environment': 30.0.0-alpha.6
      '@jest/expect': 30.0.0-alpha.6
      '@jest/types': 30.0.0-alpha.6
      jest-mock: 30.0.0-alpha.6
    transitivePeerDependencies:
      - supports-color

  '@jest/pattern@30.0.0-alpha.6':
    dependencies:
      '@types/node': 22.13.1
      jest-regex-util: 30.0.0-alpha.6

  '@jest/reporters@29.7.0':
    dependencies:
      '@bcoe/v8-coverage': 0.2.3
      '@jest/console': 29.7.0
      '@jest/test-result': 29.7.0
      '@jest/transform': 29.7.0
      '@jest/types': 29.6.3
      '@jridgewell/trace-mapping': 0.3.25
      '@types/node': 22.13.1
      chalk: 4.1.2
      collect-v8-coverage: 1.0.2
      exit: 0.1.2
      glob: 7.2.3
      graceful-fs: 4.2.11
      istanbul-lib-coverage: 3.2.2
      istanbul-lib-instrument: 6.0.3
      istanbul-lib-report: 3.0.1
      istanbul-lib-source-maps: 4.0.1
      istanbul-reports: 3.1.7
      jest-message-util: 29.7.0
      jest-util: 29.7.0
      jest-worker: 29.7.0
      slash: 3.0.0
      string-length: 4.0.2
      strip-ansi: 6.0.1
      v8-to-istanbul: 9.3.0
    transitivePeerDependencies:
      - supports-color

  '@jest/reporters@30.0.0-alpha.6':
    dependencies:
      '@bcoe/v8-coverage': 0.2.3
      '@jest/console': 30.0.0-alpha.6
      '@jest/test-result': 30.0.0-alpha.6
      '@jest/transform': 30.0.0-alpha.6
      '@jest/types': 30.0.0-alpha.6
      '@jridgewell/trace-mapping': 0.3.25
      '@types/node': 22.13.1
      chalk: 4.1.2
      collect-v8-coverage: 1.0.2
      exit: 0.1.2
      glob: 10.4.5
      graceful-fs: 4.2.11
      istanbul-lib-coverage: 3.2.2
      istanbul-lib-instrument: 6.0.3
      istanbul-lib-report: 3.0.1
      istanbul-lib-source-maps: 5.0.6
      istanbul-reports: 3.1.7
      jest-message-util: 30.0.0-alpha.6
      jest-util: 30.0.0-alpha.6
      jest-worker: 30.0.0-alpha.6
      slash: 3.0.0
      string-length: 4.0.2
      strip-ansi: 6.0.1
      v8-to-istanbul: 9.3.0
    transitivePeerDependencies:
      - supports-color

  '@jest/schemas@29.6.3':
    dependencies:
      '@sinclair/typebox': 0.27.8

  '@jest/schemas@30.0.0-alpha.6':
    dependencies:
      '@sinclair/typebox': 0.33.22

  '@jest/snapshot-utils@30.0.0-alpha.6':
    dependencies:
      '@jest/types': 30.0.0-alpha.6
      chalk: 4.1.2
      graceful-fs: 4.2.11
      natural-compare: 1.4.0

  '@jest/source-map@29.6.3':
    dependencies:
      '@jridgewell/trace-mapping': 0.3.25
      callsites: 3.1.0
      graceful-fs: 4.2.11

  '@jest/source-map@30.0.0-alpha.6':
    dependencies:
      '@jridgewell/trace-mapping': 0.3.25
      callsites: 3.1.0
      graceful-fs: 4.2.11

  '@jest/test-result@29.7.0':
    dependencies:
      '@jest/console': 29.7.0
      '@jest/types': 29.6.3
      '@types/istanbul-lib-coverage': 2.0.6
      collect-v8-coverage: 1.0.2

  '@jest/test-result@30.0.0-alpha.6':
    dependencies:
      '@jest/console': 30.0.0-alpha.6
      '@jest/types': 30.0.0-alpha.6
      '@types/istanbul-lib-coverage': 2.0.6
      collect-v8-coverage: 1.0.2

  '@jest/test-sequencer@29.7.0':
    dependencies:
      '@jest/test-result': 29.7.0
      graceful-fs: 4.2.11
      jest-haste-map: 29.7.0
      slash: 3.0.0

  '@jest/test-sequencer@30.0.0-alpha.6':
    dependencies:
      '@jest/test-result': 30.0.0-alpha.6
      graceful-fs: 4.2.11
      jest-haste-map: 30.0.0-alpha.6
      slash: 3.0.0

  '@jest/transform@29.7.0':
    dependencies:
      '@babel/core': 7.26.8
      '@jest/types': 29.6.3
      '@jridgewell/trace-mapping': 0.3.25
      babel-plugin-istanbul: 6.1.1
      chalk: 4.1.2
      convert-source-map: 2.0.0
      fast-json-stable-stringify: 2.1.0
      graceful-fs: 4.2.11
      jest-haste-map: 29.7.0
      jest-regex-util: 29.6.3
      jest-util: 29.7.0
      micromatch: 4.0.8
      pirates: 4.0.6
      slash: 3.0.0
      write-file-atomic: 4.0.2
    transitivePeerDependencies:
      - supports-color

  '@jest/transform@30.0.0-alpha.6':
    dependencies:
      '@babel/core': 7.26.8
      '@jest/types': 30.0.0-alpha.6
      '@jridgewell/trace-mapping': 0.3.25
      babel-plugin-istanbul: 7.0.0
      chalk: 4.1.2
      convert-source-map: 2.0.0
      fast-json-stable-stringify: 2.1.0
      graceful-fs: 4.2.11
      jest-haste-map: 30.0.0-alpha.6
      jest-regex-util: 30.0.0-alpha.6
      jest-util: 30.0.0-alpha.6
      micromatch: 4.0.8
      pirates: 4.0.6
      slash: 3.0.0
      write-file-atomic: 5.0.1
    transitivePeerDependencies:
      - supports-color

  '@jest/types@29.6.3':
    dependencies:
      '@jest/schemas': 29.6.3
      '@types/istanbul-lib-coverage': 2.0.6
      '@types/istanbul-reports': 3.0.4
      '@types/node': 22.13.1
      '@types/yargs': 17.0.33
      chalk: 4.1.2

  '@jest/types@30.0.0-alpha.6':
    dependencies:
      '@jest/pattern': 30.0.0-alpha.6
      '@jest/schemas': 30.0.0-alpha.6
      '@types/istanbul-lib-coverage': 2.0.6
      '@types/istanbul-reports': 3.0.4
      '@types/node': 22.13.1
      '@types/yargs': 17.0.33
      chalk: 4.1.2

  '@joyid/ckb@1.1.0(typescript@5.7.3)':
    dependencies:
      '@joyid/common': 0.2.0(typescript@5.7.3)
      '@nervosnetwork/ckb-sdk-utils': 0.109.4
      cross-fetch: 4.0.0
      uncrypto: 0.1.3
    transitivePeerDependencies:
      - encoding
      - typescript
      - zod

  '@joyid/common@0.2.0(typescript@5.7.3)':
    dependencies:
      abitype: 0.8.7(typescript@5.7.3)
      type-fest: 4.6.0
    transitivePeerDependencies:
      - typescript
      - zod

  '@jridgewell/gen-mapping@0.3.8':
    dependencies:
      '@jridgewell/set-array': 1.2.1
      '@jridgewell/sourcemap-codec': 1.5.0
      '@jridgewell/trace-mapping': 0.3.25

  '@jridgewell/resolve-uri@3.1.2': {}

  '@jridgewell/set-array@1.2.1': {}

  '@jridgewell/source-map@0.3.6':
    dependencies:
      '@jridgewell/gen-mapping': 0.3.8
      '@jridgewell/trace-mapping': 0.3.25

  '@jridgewell/sourcemap-codec@1.5.0': {}

  '@jridgewell/trace-mapping@0.3.25':
    dependencies:
      '@jridgewell/resolve-uri': 3.1.2
      '@jridgewell/sourcemap-codec': 1.5.0

  '@jridgewell/trace-mapping@0.3.9':
    dependencies:
      '@jridgewell/resolve-uri': 3.1.2
      '@jridgewell/sourcemap-codec': 1.5.0

  '@lit-labs/ssr-dom-shim@1.3.0': {}

  '@lit/react@1.0.7(@types/react@18.3.18)':
    dependencies:
      '@types/react': 18.3.18

  '@lit/reactive-element@2.0.4':
    dependencies:
      '@lit-labs/ssr-dom-shim': 1.3.0

  '@ljharb/through@2.3.14':
    dependencies:
      call-bind: 1.0.8

  '@lukeed/csprng@1.1.0': {}

  '@manypkg/find-root@1.1.0':
    dependencies:
      '@babel/runtime': 7.26.7
      '@types/node': 12.20.55
      find-up: 4.1.0
      fs-extra: 8.1.0

  '@manypkg/get-packages@1.1.3':
    dependencies:
      '@babel/runtime': 7.26.7
      '@changesets/types': 4.1.0
      '@manypkg/find-root': 1.1.0
      fs-extra: 8.1.0
      globby: 11.1.0
      read-yaml-file: 1.1.0

  '@material/material-color-utilities@0.3.0': {}

  '@monaco-editor/loader@1.4.0(monaco-editor@0.51.0)':
    dependencies:
      monaco-editor: 0.51.0
      state-local: 1.0.7

  '@monaco-editor/react@4.6.0(monaco-editor@0.51.0)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@monaco-editor/loader': 1.4.0(monaco-editor@0.51.0)
      monaco-editor: 0.51.0
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)

  '@nervosnetwork/ckb-sdk-utils@0.109.4':
    dependencies:
      '@nervosnetwork/ckb-types': 0.109.4
      bech32: 2.0.0
      elliptic: 6.6.0
      jsbi: 3.1.3
      tslib: 2.3.1

  '@nervosnetwork/ckb-types@0.109.4': {}

  '@nestjs/cli@10.4.9':
    dependencies:
      '@angular-devkit/core': 17.3.11(chokidar@3.6.0)
      '@angular-devkit/schematics': 17.3.11(chokidar@3.6.0)
      '@angular-devkit/schematics-cli': 17.3.11(chokidar@3.6.0)
      '@nestjs/schematics': 10.2.3(chokidar@3.6.0)(typescript@5.7.2)
      chalk: 4.1.2
      chokidar: 3.6.0
      cli-table3: 0.6.5
      commander: 4.1.1
      fork-ts-checker-webpack-plugin: 9.0.2(typescript@5.7.2)(webpack@5.97.1)
      glob: 10.4.5
      inquirer: 8.2.6
      node-emoji: 1.11.0
      ora: 5.4.1
      tree-kill: 1.2.2
      tsconfig-paths: 4.2.0
      tsconfig-paths-webpack-plugin: 4.2.0
      typescript: 5.7.2
      webpack: 5.97.1
      webpack-node-externals: 3.0.0
    transitivePeerDependencies:
      - esbuild
      - uglify-js
      - webpack-cli

  '@nestjs/common@10.4.15(class-transformer@0.5.1)(class-validator@0.14.1)(reflect-metadata@0.2.2)(rxjs@7.8.1)':
    dependencies:
      iterare: 1.2.1
      reflect-metadata: 0.2.2
      rxjs: 7.8.1
      tslib: 2.8.1
      uid: 2.0.2
    optionalDependencies:
      class-transformer: 0.5.1
      class-validator: 0.14.1

  '@nestjs/config@3.3.0(@nestjs/common@10.4.15(class-transformer@0.5.1)(class-validator@0.14.1)(reflect-metadata@0.2.2)(rxjs@7.8.1))(rxjs@7.8.1)':
    dependencies:
      '@nestjs/common': 10.4.15(class-transformer@0.5.1)(class-validator@0.14.1)(reflect-metadata@0.2.2)(rxjs@7.8.1)
      dotenv: 16.4.5
      dotenv-expand: 10.0.0
      lodash: 4.17.21
      rxjs: 7.8.1

  '@nestjs/core@10.4.15(@nestjs/common@10.4.15(class-transformer@0.5.1)(class-validator@0.14.1)(reflect-metadata@0.2.2)(rxjs@7.8.1))(@nestjs/platform-express@10.4.15)(reflect-metadata@0.2.2)(rxjs@7.8.1)':
    dependencies:
      '@nestjs/common': 10.4.15(class-transformer@0.5.1)(class-validator@0.14.1)(reflect-metadata@0.2.2)(rxjs@7.8.1)
      '@nuxtjs/opencollective': 0.3.2
      fast-safe-stringify: 2.1.1
      iterare: 1.2.1
      path-to-regexp: 3.3.0
      reflect-metadata: 0.2.2
      rxjs: 7.8.1
      tslib: 2.8.1
      uid: 2.0.2
    optionalDependencies:
      '@nestjs/platform-express': 10.4.15(@nestjs/common@10.4.15(class-transformer@0.5.1)(class-validator@0.14.1)(reflect-metadata@0.2.2)(rxjs@7.8.1))(@nestjs/core@10.4.15)
    transitivePeerDependencies:
      - encoding

  '@nestjs/platform-express@10.4.15(@nestjs/common@10.4.15(class-transformer@0.5.1)(class-validator@0.14.1)(reflect-metadata@0.2.2)(rxjs@7.8.1))(@nestjs/core@10.4.15)':
    dependencies:
      '@nestjs/common': 10.4.15(class-transformer@0.5.1)(class-validator@0.14.1)(reflect-metadata@0.2.2)(rxjs@7.8.1)
      '@nestjs/core': 10.4.15(@nestjs/common@10.4.15(class-transformer@0.5.1)(class-validator@0.14.1)(reflect-metadata@0.2.2)(rxjs@7.8.1))(@nestjs/platform-express@10.4.15)(reflect-metadata@0.2.2)(rxjs@7.8.1)
      body-parser: 1.20.3
      cors: 2.8.5
      express: 4.21.2
      multer: 1.4.4-lts.1
      tslib: 2.8.1
    transitivePeerDependencies:
      - supports-color

  '@nestjs/schematics@10.2.3(chokidar@3.6.0)(typescript@5.7.2)':
    dependencies:
      '@angular-devkit/core': 17.3.11(chokidar@3.6.0)
      '@angular-devkit/schematics': 17.3.11(chokidar@3.6.0)
      comment-json: 4.2.5
      jsonc-parser: 3.3.1
      pluralize: 8.0.0
      typescript: 5.7.2
    transitivePeerDependencies:
      - chokidar

  '@nestjs/schematics@10.2.3(chokidar@3.6.0)(typescript@5.7.3)':
    dependencies:
      '@angular-devkit/core': 17.3.11(chokidar@3.6.0)
      '@angular-devkit/schematics': 17.3.11(chokidar@3.6.0)
      comment-json: 4.2.5
      jsonc-parser: 3.3.1
      pluralize: 8.0.0
      typescript: 5.7.3
    transitivePeerDependencies:
      - chokidar

  '@nestjs/testing@10.4.15(@nestjs/common@10.4.15(class-transformer@0.5.1)(class-validator@0.14.1)(reflect-metadata@0.2.2)(rxjs@7.8.1))(@nestjs/core@10.4.15(@nestjs/common@10.4.15(class-transformer@0.5.1)(class-validator@0.14.1)(reflect-metadata@0.2.2)(rxjs@7.8.1))(@nestjs/platform-express@10.4.15)(reflect-metadata@0.2.2)(rxjs@7.8.1))(@nestjs/platform-express@10.4.15(@nestjs/common@10.4.15(class-transformer@0.5.1)(class-validator@0.14.1)(reflect-metadata@0.2.2)(rxjs@7.8.1))(@nestjs/core@10.4.15))':
    dependencies:
      '@nestjs/common': 10.4.15(class-transformer@0.5.1)(class-validator@0.14.1)(reflect-metadata@0.2.2)(rxjs@7.8.1)
      '@nestjs/core': 10.4.15(@nestjs/common@10.4.15(class-transformer@0.5.1)(class-validator@0.14.1)(reflect-metadata@0.2.2)(rxjs@7.8.1))(@nestjs/platform-express@10.4.15)(reflect-metadata@0.2.2)(rxjs@7.8.1)
      tslib: 2.8.1
    optionalDependencies:
      '@nestjs/platform-express': 10.4.15(@nestjs/common@10.4.15(class-transformer@0.5.1)(class-validator@0.14.1)(reflect-metadata@0.2.2)(rxjs@7.8.1))(@nestjs/core@10.4.15)

  '@next/env@14.2.10': {}

  '@next/env@14.2.8': {}

  '@next/eslint-plugin-next@14.2.2':
    dependencies:
      glob: 10.3.10

  '@next/eslint-plugin-next@14.2.8':
    dependencies:
      glob: 10.3.10

  '@next/swc-darwin-arm64@14.2.10':
    optional: true

  '@next/swc-darwin-arm64@14.2.8':
    optional: true

  '@next/swc-darwin-x64@14.2.10':
    optional: true

  '@next/swc-darwin-x64@14.2.8':
    optional: true

  '@next/swc-linux-arm64-gnu@14.2.10':
    optional: true

  '@next/swc-linux-arm64-gnu@14.2.8':
    optional: true

  '@next/swc-linux-arm64-musl@14.2.10':
    optional: true

  '@next/swc-linux-arm64-musl@14.2.8':
    optional: true

  '@next/swc-linux-x64-gnu@14.2.10':
    optional: true

  '@next/swc-linux-x64-gnu@14.2.8':
    optional: true

  '@next/swc-linux-x64-musl@14.2.10':
    optional: true

  '@next/swc-linux-x64-musl@14.2.8':
    optional: true

  '@next/swc-win32-arm64-msvc@14.2.10':
    optional: true

  '@next/swc-win32-arm64-msvc@14.2.8':
    optional: true

  '@next/swc-win32-ia32-msvc@14.2.10':
    optional: true

  '@next/swc-win32-ia32-msvc@14.2.8':
    optional: true

  '@next/swc-win32-x64-msvc@14.2.10':
    optional: true

  '@next/swc-win32-x64-msvc@14.2.8':
    optional: true

  '@noble/ciphers@0.5.3': {}

  '@noble/curves@1.2.0':
    dependencies:
      '@noble/hashes': 1.3.2

  '@noble/curves@1.8.1':
    dependencies:
      '@noble/hashes': 1.7.1

  '@noble/hashes@1.3.2': {}

  '@noble/hashes@1.7.1': {}

  '@nodelib/fs.scandir@2.1.5':
    dependencies:
      '@nodelib/fs.stat': 2.0.5
      run-parallel: 1.2.0

  '@nodelib/fs.stat@2.0.5': {}

  '@nodelib/fs.walk@1.2.8':
    dependencies:
      '@nodelib/fs.scandir': 2.1.5
      fastq: 1.19.0

  '@nolyfill/is-core-module@1.0.39': {}

  '@nuxtjs/opencollective@0.3.2':
    dependencies:
      chalk: 4.1.2
      consola: 2.15.3
      node-fetch: 2.7.0
    transitivePeerDependencies:
      - encoding

  '@pkgjs/parseargs@0.11.0':
    optional: true

  '@pkgr/core@0.1.1': {}

  '@rtsao/scc@1.1.0': {}

  '@rushstack/eslint-patch@1.10.5': {}

  '@scure/base@1.2.4': {}

  '@scure/bip32@1.6.2':
    dependencies:
      '@noble/curves': 1.8.1
      '@noble/hashes': 1.7.1
      '@scure/base': 1.2.4

  '@scure/bip39@1.5.4':
    dependencies:
      '@noble/hashes': 1.7.1
      '@scure/base': 1.2.4

  '@shikijs/core@1.29.2':
    dependencies:
      '@shikijs/engine-javascript': 1.29.2
      '@shikijs/engine-oniguruma': 1.29.2
      '@shikijs/types': 1.29.2
      '@shikijs/vscode-textmate': 10.0.1
      '@types/hast': 3.0.4
      hast-util-to-html: 9.0.4

  '@shikijs/engine-javascript@1.29.2':
    dependencies:
      '@shikijs/types': 1.29.2
      '@shikijs/vscode-textmate': 10.0.1
      oniguruma-to-es: 2.3.0

  '@shikijs/engine-oniguruma@1.29.2':
    dependencies:
      '@shikijs/types': 1.29.2
      '@shikijs/vscode-textmate': 10.0.1

  '@shikijs/langs@1.29.2':
    dependencies:
      '@shikijs/types': 1.29.2

  '@shikijs/themes@1.29.2':
    dependencies:
      '@shikijs/types': 1.29.2

  '@shikijs/types@1.29.2':
    dependencies:
      '@shikijs/vscode-textmate': 10.0.1
      '@types/hast': 3.0.4

  '@shikijs/vscode-textmate@10.0.1': {}

  '@sinclair/typebox@0.27.8': {}

  '@sinclair/typebox@0.33.22': {}

  '@sinonjs/commons@3.0.1':
    dependencies:
      type-detect: 4.0.8

  '@sinonjs/fake-timers@10.3.0':
    dependencies:
      '@sinonjs/commons': 3.0.1

  '@sinonjs/fake-timers@11.3.1':
    dependencies:
      '@sinonjs/commons': 3.0.1

  '@swc/counter@0.1.3': {}

  '@swc/helpers@0.5.5':
    dependencies:
      '@swc/counter': 0.1.3
      tslib: 2.8.1

  '@tanstack/react-virtual@3.13.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@tanstack/virtual-core': 3.13.0
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)

  '@tanstack/virtual-core@3.13.0': {}

  '@tsconfig/node10@1.0.11': {}

  '@tsconfig/node12@1.0.11': {}

  '@tsconfig/node14@1.0.3': {}

  '@tsconfig/node16@1.0.4': {}

  '@types/babel__core@7.20.5':
    dependencies:
      '@babel/parser': 7.26.8
      '@babel/types': 7.26.8
      '@types/babel__generator': 7.6.8
      '@types/babel__template': 7.4.4
      '@types/babel__traverse': 7.20.6

  '@types/babel__generator@7.6.8':
    dependencies:
      '@babel/types': 7.26.8

  '@types/babel__template@7.4.4':
    dependencies:
      '@babel/parser': 7.26.8
      '@babel/types': 7.26.8

  '@types/babel__traverse@7.20.6':
    dependencies:
      '@babel/types': 7.26.8

  '@types/blake2b@2.1.3': {}

  '@types/body-parser@1.19.5':
    dependencies:
      '@types/connect': 3.4.38
      '@types/node': 20.17.17

  '@types/connect@3.4.38':
    dependencies:
      '@types/node': 20.17.17

  '@types/cookiejar@2.1.5': {}

  '@types/deep-freeze-strict@1.1.2': {}

  '@types/eslint-scope@3.7.7':
    dependencies:
      '@types/eslint': 9.6.1
      '@types/estree': 1.0.6

  '@types/eslint@9.6.1':
    dependencies:
      '@types/estree': 1.0.6
      '@types/json-schema': 7.0.15

  '@types/estree@1.0.6': {}

  '@types/express-serve-static-core@4.19.6':
    dependencies:
      '@types/node': 20.17.17
      '@types/qs': 6.9.18
      '@types/range-parser': 1.2.7
      '@types/send': 0.17.4

  '@types/express@4.17.21':
    dependencies:
      '@types/body-parser': 1.19.5
      '@types/express-serve-static-core': 4.19.6
      '@types/qs': 6.9.18
      '@types/serve-static': 1.15.7

  '@types/gensync@1.0.4': {}

  '@types/graceful-fs@4.1.9':
    dependencies:
      '@types/node': 22.13.1

  '@types/hast@3.0.4':
    dependencies:
      '@types/unist': 3.0.3

  '@types/http-errors@2.0.4': {}

  '@types/istanbul-lib-coverage@2.0.6': {}

  '@types/istanbul-lib-report@3.0.3':
    dependencies:
      '@types/istanbul-lib-coverage': 2.0.6

  '@types/istanbul-reports@3.0.4':
    dependencies:
      '@types/istanbul-lib-report': 3.0.3

  '@types/jest@29.5.14':
    dependencies:
      expect: 29.7.0
      pretty-format: 29.7.0

  '@types/js-yaml@4.0.9': {}

  '@types/json-schema@7.0.15': {}

  '@types/json5@0.0.29': {}

  '@types/lodash.isequal@4.5.8':
    dependencies:
      '@types/lodash': 4.17.15

  '@types/lodash@4.17.15': {}

  '@types/mdast@4.0.4':
    dependencies:
      '@types/unist': 3.0.3

  '@types/methods@1.1.4': {}

  '@types/mime@1.3.5': {}

  '@types/node@12.20.55': {}

  '@types/node@20.17.17':
    dependencies:
      undici-types: 6.19.8

  '@types/node@22.13.1':
    dependencies:
      undici-types: 6.20.0

  '@types/node@22.7.5':
    dependencies:
      undici-types: 6.19.8

  '@types/prop-types@15.7.14': {}

  '@types/qs@6.9.18': {}

  '@types/range-parser@1.2.7': {}

  '@types/react-dom@18.3.5(@types/react@18.3.18)':
    dependencies:
      '@types/react': 18.3.18

  '@types/react@18.3.18':
    dependencies:
      '@types/prop-types': 15.7.14
      csstype: 3.1.3

  '@types/semver@7.5.8': {}

  '@types/send@0.17.4':
    dependencies:
      '@types/mime': 1.3.5
      '@types/node': 20.17.17

  '@types/serve-static@1.15.7':
    dependencies:
      '@types/http-errors': 2.0.4
      '@types/node': 20.17.17
      '@types/send': 0.17.4

  '@types/stack-utils@2.0.3': {}

  '@types/superagent@8.1.9':
    dependencies:
      '@types/cookiejar': 2.1.5
      '@types/methods': 1.1.4
      '@types/node': 20.17.17
      form-data: 4.0.1

  '@types/supertest@6.0.2':
    dependencies:
      '@types/methods': 1.1.4
      '@types/superagent': 8.1.9

  '@types/trusted-types@2.0.7': {}

  '@types/unist@3.0.3': {}

  '@types/validator@13.12.2': {}

  '@types/webpack-env@1.18.8': {}

  '@types/ws@8.5.14':
    dependencies:
      '@types/node': 22.13.1

  '@types/yargs-parser@21.0.3': {}

  '@types/yargs@17.0.33':
    dependencies:
      '@types/yargs-parser': 21.0.3

  '@typescript-eslint/eslint-plugin@7.18.0(@typescript-eslint/parser@7.18.0(eslint@8.57.1)(typescript@5.7.3))(eslint@8.57.1)(typescript@5.7.3)':
    dependencies:
      '@eslint-community/regexpp': 4.12.1
      '@typescript-eslint/parser': 7.18.0(eslint@8.57.1)(typescript@5.7.3)
      '@typescript-eslint/scope-manager': 7.18.0
      '@typescript-eslint/type-utils': 7.18.0(eslint@8.57.1)(typescript@5.7.3)
      '@typescript-eslint/utils': 7.18.0(eslint@8.57.1)(typescript@5.7.3)
      '@typescript-eslint/visitor-keys': 7.18.0
      eslint: 8.57.1
      graphemer: 1.4.0
      ignore: 5.3.2
      natural-compare: 1.4.0
      ts-api-utils: 1.4.3(typescript@5.7.3)
    optionalDependencies:
      typescript: 5.7.3
    transitivePeerDependencies:
      - supports-color

  '@typescript-eslint/eslint-plugin@7.18.0(@typescript-eslint/parser@7.18.0(eslint@9.20.0(jiti@1.21.7))(typescript@5.7.3))(eslint@9.20.0(jiti@1.21.7))(typescript@5.7.3)':
    dependencies:
      '@eslint-community/regexpp': 4.12.1
      '@typescript-eslint/parser': 7.18.0(eslint@9.20.0(jiti@1.21.7))(typescript@5.7.3)
      '@typescript-eslint/scope-manager': 7.18.0
      '@typescript-eslint/type-utils': 7.18.0(eslint@9.20.0(jiti@1.21.7))(typescript@5.7.3)
      '@typescript-eslint/utils': 7.18.0(eslint@9.20.0(jiti@1.21.7))(typescript@5.7.3)
      '@typescript-eslint/visitor-keys': 7.18.0
      eslint: 9.20.0(jiti@1.21.7)
      graphemer: 1.4.0
      ignore: 5.3.2
      natural-compare: 1.4.0
      ts-api-utils: 1.4.3(typescript@5.7.3)
    optionalDependencies:
      typescript: 5.7.3
    transitivePeerDependencies:
      - supports-color

  '@typescript-eslint/eslint-plugin@7.2.0(@typescript-eslint/parser@7.2.0(eslint@8.57.1)(typescript@5.7.3))(eslint@8.57.1)(typescript@5.7.3)':
    dependencies:
      '@eslint-community/regexpp': 4.12.1
      '@typescript-eslint/parser': 7.2.0(eslint@8.57.1)(typescript@5.7.3)
      '@typescript-eslint/scope-manager': 7.2.0
      '@typescript-eslint/type-utils': 7.2.0(eslint@8.57.1)(typescript@5.7.3)
      '@typescript-eslint/utils': 7.2.0(eslint@8.57.1)(typescript@5.7.3)
      '@typescript-eslint/visitor-keys': 7.2.0
      debug: 4.4.0
      eslint: 8.57.1
      graphemer: 1.4.0
      ignore: 5.3.2
      natural-compare: 1.4.0
      semver: 7.7.1
      ts-api-utils: 1.4.3(typescript@5.7.3)
    optionalDependencies:
      typescript: 5.7.3
    transitivePeerDependencies:
      - supports-color

  '@typescript-eslint/parser@7.18.0(eslint@8.57.1)(typescript@5.7.3)':
    dependencies:
      '@typescript-eslint/scope-manager': 7.18.0
      '@typescript-eslint/types': 7.18.0
      '@typescript-eslint/typescript-estree': 7.18.0(typescript@5.7.3)
      '@typescript-eslint/visitor-keys': 7.18.0
      debug: 4.4.0
      eslint: 8.57.1
    optionalDependencies:
      typescript: 5.7.3
    transitivePeerDependencies:
      - supports-color

  '@typescript-eslint/parser@7.18.0(eslint@9.20.0(jiti@1.21.7))(typescript@5.7.3)':
    dependencies:
      '@typescript-eslint/scope-manager': 7.18.0
      '@typescript-eslint/types': 7.18.0
      '@typescript-eslint/typescript-estree': 7.18.0(typescript@5.7.3)
      '@typescript-eslint/visitor-keys': 7.18.0
      debug: 4.4.0
      eslint: 9.20.0(jiti@1.21.7)
    optionalDependencies:
      typescript: 5.7.3
    transitivePeerDependencies:
      - supports-color

  '@typescript-eslint/parser@7.2.0(eslint@8.57.1)(typescript@5.7.3)':
    dependencies:
      '@typescript-eslint/scope-manager': 7.2.0
      '@typescript-eslint/types': 7.2.0
      '@typescript-eslint/typescript-estree': 7.2.0(typescript@5.7.3)
      '@typescript-eslint/visitor-keys': 7.2.0
      debug: 4.4.0
      eslint: 8.57.1
    optionalDependencies:
      typescript: 5.7.3
    transitivePeerDependencies:
      - supports-color

  '@typescript-eslint/scope-manager@7.18.0':
    dependencies:
      '@typescript-eslint/types': 7.18.0
      '@typescript-eslint/visitor-keys': 7.18.0

  '@typescript-eslint/scope-manager@7.2.0':
    dependencies:
      '@typescript-eslint/types': 7.2.0
      '@typescript-eslint/visitor-keys': 7.2.0

  '@typescript-eslint/type-utils@7.18.0(eslint@8.57.1)(typescript@5.7.3)':
    dependencies:
      '@typescript-eslint/typescript-estree': 7.18.0(typescript@5.7.3)
      '@typescript-eslint/utils': 7.18.0(eslint@8.57.1)(typescript@5.7.3)
      debug: 4.4.0
      eslint: 8.57.1
      ts-api-utils: 1.4.3(typescript@5.7.3)
    optionalDependencies:
      typescript: 5.7.3
    transitivePeerDependencies:
      - supports-color

  '@typescript-eslint/type-utils@7.18.0(eslint@9.20.0(jiti@1.21.7))(typescript@5.7.3)':
    dependencies:
      '@typescript-eslint/typescript-estree': 7.18.0(typescript@5.7.3)
      '@typescript-eslint/utils': 7.18.0(eslint@9.20.0(jiti@1.21.7))(typescript@5.7.3)
      debug: 4.4.0
      eslint: 9.20.0(jiti@1.21.7)
      ts-api-utils: 1.4.3(typescript@5.7.3)
    optionalDependencies:
      typescript: 5.7.3
    transitivePeerDependencies:
      - supports-color

  '@typescript-eslint/type-utils@7.2.0(eslint@8.57.1)(typescript@5.7.3)':
    dependencies:
      '@typescript-eslint/typescript-estree': 7.2.0(typescript@5.7.3)
      '@typescript-eslint/utils': 7.2.0(eslint@8.57.1)(typescript@5.7.3)
      debug: 4.4.0
      eslint: 8.57.1
      ts-api-utils: 1.4.3(typescript@5.7.3)
    optionalDependencies:
      typescript: 5.7.3
    transitivePeerDependencies:
      - supports-color

  '@typescript-eslint/types@7.18.0': {}

  '@typescript-eslint/types@7.2.0': {}

  '@typescript-eslint/typescript-estree@7.18.0(typescript@5.7.3)':
    dependencies:
      '@typescript-eslint/types': 7.18.0
      '@typescript-eslint/visitor-keys': 7.18.0
      debug: 4.4.0
      globby: 11.1.0
      is-glob: 4.0.3
      minimatch: 9.0.5
      semver: 7.7.1
      ts-api-utils: 1.4.3(typescript@5.7.3)
    optionalDependencies:
      typescript: 5.7.3
    transitivePeerDependencies:
      - supports-color

  '@typescript-eslint/typescript-estree@7.2.0(typescript@5.7.3)':
    dependencies:
      '@typescript-eslint/types': 7.2.0
      '@typescript-eslint/visitor-keys': 7.2.0
      debug: 4.4.0
      globby: 11.1.0
      is-glob: 4.0.3
      minimatch: 9.0.3
      semver: 7.7.1
      ts-api-utils: 1.4.3(typescript@5.7.3)
    optionalDependencies:
      typescript: 5.7.3
    transitivePeerDependencies:
      - supports-color

  '@typescript-eslint/utils@7.18.0(eslint@8.57.1)(typescript@5.7.3)':
    dependencies:
      '@eslint-community/eslint-utils': 4.4.1(eslint@8.57.1)
      '@typescript-eslint/scope-manager': 7.18.0
      '@typescript-eslint/types': 7.18.0
      '@typescript-eslint/typescript-estree': 7.18.0(typescript@5.7.3)
      eslint: 8.57.1
    transitivePeerDependencies:
      - supports-color
      - typescript

  '@typescript-eslint/utils@7.18.0(eslint@9.20.0(jiti@1.21.7))(typescript@5.7.3)':
    dependencies:
      '@eslint-community/eslint-utils': 4.4.1(eslint@9.20.0(jiti@1.21.7))
      '@typescript-eslint/scope-manager': 7.18.0
      '@typescript-eslint/types': 7.18.0
      '@typescript-eslint/typescript-estree': 7.18.0(typescript@5.7.3)
      eslint: 9.20.0(jiti@1.21.7)
    transitivePeerDependencies:
      - supports-color
      - typescript

  '@typescript-eslint/utils@7.2.0(eslint@8.57.1)(typescript@5.7.3)':
    dependencies:
      '@eslint-community/eslint-utils': 4.4.1(eslint@8.57.1)
      '@types/json-schema': 7.0.15
      '@types/semver': 7.5.8
      '@typescript-eslint/scope-manager': 7.2.0
      '@typescript-eslint/types': 7.2.0
      '@typescript-eslint/typescript-estree': 7.2.0(typescript@5.7.3)
      eslint: 8.57.1
      semver: 7.7.1
    transitivePeerDependencies:
      - supports-color
      - typescript

  '@typescript-eslint/visitor-keys@7.18.0':
    dependencies:
      '@typescript-eslint/types': 7.18.0
      eslint-visitor-keys: 3.4.3

  '@typescript-eslint/visitor-keys@7.2.0':
    dependencies:
      '@typescript-eslint/types': 7.2.0
      eslint-visitor-keys: 3.4.3

  '@uiw/react-json-view@2.0.0-alpha.30(@babel/runtime@7.26.7)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@babel/runtime': 7.26.7
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)

  '@ungap/structured-clone@1.3.0': {}

  '@webassemblyjs/ast@1.14.1':
    dependencies:
      '@webassemblyjs/helper-numbers': 1.13.2
      '@webassemblyjs/helper-wasm-bytecode': 1.13.2

  '@webassemblyjs/floating-point-hex-parser@1.13.2': {}

  '@webassemblyjs/helper-api-error@1.13.2': {}

  '@webassemblyjs/helper-buffer@1.14.1': {}

  '@webassemblyjs/helper-numbers@1.13.2':
    dependencies:
      '@webassemblyjs/floating-point-hex-parser': 1.13.2
      '@webassemblyjs/helper-api-error': 1.13.2
      '@xtuc/long': 4.2.2

  '@webassemblyjs/helper-wasm-bytecode@1.13.2': {}

  '@webassemblyjs/helper-wasm-section@1.14.1':
    dependencies:
      '@webassemblyjs/ast': 1.14.1
      '@webassemblyjs/helper-buffer': 1.14.1
      '@webassemblyjs/helper-wasm-bytecode': 1.13.2
      '@webassemblyjs/wasm-gen': 1.14.1

  '@webassemblyjs/ieee754@1.13.2':
    dependencies:
      '@xtuc/ieee754': 1.2.0

  '@webassemblyjs/leb128@1.13.2':
    dependencies:
      '@xtuc/long': 4.2.2

  '@webassemblyjs/utf8@1.13.2': {}

  '@webassemblyjs/wasm-edit@1.14.1':
    dependencies:
      '@webassemblyjs/ast': 1.14.1
      '@webassemblyjs/helper-buffer': 1.14.1
      '@webassemblyjs/helper-wasm-bytecode': 1.13.2
      '@webassemblyjs/helper-wasm-section': 1.14.1
      '@webassemblyjs/wasm-gen': 1.14.1
      '@webassemblyjs/wasm-opt': 1.14.1
      '@webassemblyjs/wasm-parser': 1.14.1
      '@webassemblyjs/wast-printer': 1.14.1

  '@webassemblyjs/wasm-gen@1.14.1':
    dependencies:
      '@webassemblyjs/ast': 1.14.1
      '@webassemblyjs/helper-wasm-bytecode': 1.13.2
      '@webassemblyjs/ieee754': 1.13.2
      '@webassemblyjs/leb128': 1.13.2
      '@webassemblyjs/utf8': 1.13.2

  '@webassemblyjs/wasm-opt@1.14.1':
    dependencies:
      '@webassemblyjs/ast': 1.14.1
      '@webassemblyjs/helper-buffer': 1.14.1
      '@webassemblyjs/wasm-gen': 1.14.1
      '@webassemblyjs/wasm-parser': 1.14.1

  '@webassemblyjs/wasm-parser@1.14.1':
    dependencies:
      '@webassemblyjs/ast': 1.14.1
      '@webassemblyjs/helper-api-error': 1.13.2
      '@webassemblyjs/helper-wasm-bytecode': 1.13.2
      '@webassemblyjs/ieee754': 1.13.2
      '@webassemblyjs/leb128': 1.13.2
      '@webassemblyjs/utf8': 1.13.2

  '@webassemblyjs/wast-printer@1.14.1':
    dependencies:
      '@webassemblyjs/ast': 1.14.1
      '@xtuc/long': 4.2.2

  '@xtuc/ieee754@1.2.0': {}

  '@xtuc/long@4.2.2': {}

  abitype@0.8.7(typescript@5.7.3):
    dependencies:
      typescript: 5.7.3

  abort-controller@3.0.0:
    dependencies:
      event-target-shim: 5.0.1

  accepts@1.3.8:
    dependencies:
      mime-types: 2.1.35
      negotiator: 0.6.3

  acorn-jsx@5.3.2(acorn@8.14.0):
    dependencies:
      acorn: 8.14.0

  acorn-walk@8.3.4:
    dependencies:
      acorn: 8.14.0

  acorn@8.14.0: {}

  aes-js@4.0.0-beta.5: {}

  ajv-formats@2.1.1(ajv@8.12.0):
    optionalDependencies:
      ajv: 8.12.0

  ajv-formats@2.1.1(ajv@8.17.1):
    optionalDependencies:
      ajv: 8.17.1

  ajv-keywords@3.5.2(ajv@6.12.6):
    dependencies:
      ajv: 6.12.6

  ajv-keywords@5.1.0(ajv@8.17.1):
    dependencies:
      ajv: 8.17.1
      fast-deep-equal: 3.1.3

  ajv@6.12.6:
    dependencies:
      fast-deep-equal: 3.1.3
      fast-json-stable-stringify: 2.1.0
      json-schema-traverse: 0.4.1
      uri-js: 4.4.1

  ajv@8.12.0:
    dependencies:
      fast-deep-equal: 3.1.3
      json-schema-traverse: 1.0.0
      require-from-string: 2.0.2
      uri-js: 4.4.1

  ajv@8.17.1:
    dependencies:
      fast-deep-equal: 3.1.3
      fast-uri: 3.0.6
      json-schema-traverse: 1.0.0
      require-from-string: 2.0.2

  ansi-colors@4.1.3: {}

  ansi-escapes@4.3.2:
    dependencies:
      type-fest: 0.21.3

  ansi-regex@5.0.1: {}

  ansi-regex@6.1.0: {}

  ansi-styles@4.3.0:
    dependencies:
      color-convert: 2.0.1

  ansi-styles@5.2.0: {}

  ansi-styles@6.2.1: {}

  any-promise@1.3.0: {}

  anymatch@3.1.3:
    dependencies:
      normalize-path: 3.0.0
      picomatch: 2.3.1

  append-field@1.0.0: {}

  arg@4.1.3: {}

  arg@5.0.2: {}

  argparse@1.0.10:
    dependencies:
      sprintf-js: 1.0.3

  argparse@2.0.1: {}

  aria-query@5.3.2: {}

  array-buffer-byte-length@1.0.2:
    dependencies:
      call-bound: 1.0.3
      is-array-buffer: 3.0.5

  array-flatten@1.1.1: {}

  array-includes@3.1.8:
    dependencies:
      call-bind: 1.0.8
      define-properties: 1.2.1
      es-abstract: 1.23.9
      es-object-atoms: 1.1.1
      get-intrinsic: 1.2.7
      is-string: 1.1.1

  array-timsort@1.0.3: {}

  array-union@2.1.0: {}

  array.prototype.findlast@1.2.5:
    dependencies:
      call-bind: 1.0.8
      define-properties: 1.2.1
      es-abstract: 1.23.9
      es-errors: 1.3.0
      es-object-atoms: 1.1.1
      es-shim-unscopables: 1.0.2

  array.prototype.findlastindex@1.2.5:
    dependencies:
      call-bind: 1.0.8
      define-properties: 1.2.1
      es-abstract: 1.23.9
      es-errors: 1.3.0
      es-object-atoms: 1.1.1
      es-shim-unscopables: 1.0.2

  array.prototype.flat@1.3.3:
    dependencies:
      call-bind: 1.0.8
      define-properties: 1.2.1
      es-abstract: 1.23.9
      es-shim-unscopables: 1.0.2

  array.prototype.flatmap@1.3.3:
    dependencies:
      call-bind: 1.0.8
      define-properties: 1.2.1
      es-abstract: 1.23.9
      es-shim-unscopables: 1.0.2

  array.prototype.tosorted@1.1.4:
    dependencies:
      call-bind: 1.0.8
      define-properties: 1.2.1
      es-abstract: 1.23.9
      es-errors: 1.3.0
      es-shim-unscopables: 1.0.2

  arraybuffer.prototype.slice@1.0.4:
    dependencies:
      array-buffer-byte-length: 1.0.2
      call-bind: 1.0.8
      define-properties: 1.2.1
      es-abstract: 1.23.9
      es-errors: 1.3.0
      get-intrinsic: 1.2.7
      is-array-buffer: 3.0.5

  asap@2.0.6: {}

  ast-types-flow@0.0.8: {}

  async-function@1.0.0: {}

  async@3.2.6: {}

  asynckit@0.4.0: {}

  available-typed-arrays@1.0.7:
    dependencies:
      possible-typed-array-names: 1.1.0

  axe-core@4.10.2: {}

  axios@1.7.9:
    dependencies:
      follow-redirects: 1.15.9
      form-data: 4.0.1
      proxy-from-env: 1.1.0
    transitivePeerDependencies:
      - debug

  axobject-query@4.1.0: {}

  b4a@1.6.7: {}

  babel-jest@29.7.0(@babel/core@7.26.8):
    dependencies:
      '@babel/core': 7.26.8
      '@jest/transform': 29.7.0
      '@types/babel__core': 7.20.5
      babel-plugin-istanbul: 6.1.1
      babel-preset-jest: 29.6.3(@babel/core@7.26.8)
      chalk: 4.1.2
      graceful-fs: 4.2.11
      slash: 3.0.0
    transitivePeerDependencies:
      - supports-color

  babel-jest@30.0.0-alpha.6(@babel/core@7.26.8):
    dependencies:
      '@babel/core': 7.26.8
      '@jest/transform': 30.0.0-alpha.6
      '@types/babel__core': 7.20.5
      babel-plugin-istanbul: 7.0.0
      babel-preset-jest: 30.0.0-alpha.6(@babel/core@7.26.8)
      chalk: 4.1.2
      graceful-fs: 4.2.11
      slash: 3.0.0
    transitivePeerDependencies:
      - supports-color

  babel-plugin-istanbul@6.1.1:
    dependencies:
      '@babel/helper-plugin-utils': 7.26.5
      '@istanbuljs/load-nyc-config': 1.1.0
      '@istanbuljs/schema': 0.1.3
      istanbul-lib-instrument: 5.2.1
      test-exclude: 6.0.0
    transitivePeerDependencies:
      - supports-color

  babel-plugin-istanbul@7.0.0:
    dependencies:
      '@babel/helper-plugin-utils': 7.26.5
      '@istanbuljs/load-nyc-config': 1.1.0
      '@istanbuljs/schema': 0.1.3
      istanbul-lib-instrument: 6.0.3
      test-exclude: 6.0.0
    transitivePeerDependencies:
      - supports-color

  babel-plugin-jest-hoist@29.6.3:
    dependencies:
      '@babel/template': 7.26.8
      '@babel/types': 7.26.8
      '@types/babel__core': 7.20.5
      '@types/babel__traverse': 7.20.6

  babel-plugin-jest-hoist@30.0.0-alpha.6:
    dependencies:
      '@babel/template': 7.26.8
      '@babel/types': 7.26.8
      '@types/babel__core': 7.20.5

  babel-preset-current-node-syntax@1.1.0(@babel/core@7.26.8):
    dependencies:
      '@babel/core': 7.26.8
      '@babel/plugin-syntax-async-generators': 7.8.4(@babel/core@7.26.8)
      '@babel/plugin-syntax-bigint': 7.8.3(@babel/core@7.26.8)
      '@babel/plugin-syntax-class-properties': 7.12.13(@babel/core@7.26.8)
      '@babel/plugin-syntax-class-static-block': 7.14.5(@babel/core@7.26.8)
      '@babel/plugin-syntax-import-attributes': 7.26.0(@babel/core@7.26.8)
      '@babel/plugin-syntax-import-meta': 7.10.4(@babel/core@7.26.8)
      '@babel/plugin-syntax-json-strings': 7.8.3(@babel/core@7.26.8)
      '@babel/plugin-syntax-logical-assignment-operators': 7.10.4(@babel/core@7.26.8)
      '@babel/plugin-syntax-nullish-coalescing-operator': 7.8.3(@babel/core@7.26.8)
      '@babel/plugin-syntax-numeric-separator': 7.10.4(@babel/core@7.26.8)
      '@babel/plugin-syntax-object-rest-spread': 7.8.3(@babel/core@7.26.8)
      '@babel/plugin-syntax-optional-catch-binding': 7.8.3(@babel/core@7.26.8)
      '@babel/plugin-syntax-optional-chaining': 7.8.3(@babel/core@7.26.8)
      '@babel/plugin-syntax-private-property-in-object': 7.14.5(@babel/core@7.26.8)
      '@babel/plugin-syntax-top-level-await': 7.14.5(@babel/core@7.26.8)

  babel-preset-jest@29.6.3(@babel/core@7.26.8):
    dependencies:
      '@babel/core': 7.26.8
      babel-plugin-jest-hoist: 29.6.3
      babel-preset-current-node-syntax: 1.1.0(@babel/core@7.26.8)

  babel-preset-jest@30.0.0-alpha.6(@babel/core@7.26.8):
    dependencies:
      '@babel/core': 7.26.8
      babel-plugin-jest-hoist: 30.0.0-alpha.6
      babel-preset-current-node-syntax: 1.1.0(@babel/core@7.26.8)

  balanced-match@1.0.2: {}

  base-x@3.0.10:
    dependencies:
      safe-buffer: 5.2.1

  base-x@4.0.0: {}

  base-x@5.0.0: {}

  base64-arraybuffer@1.0.2: {}

  base64-js@1.5.1: {}

  bech32@1.1.4: {}

  bech32@2.0.0: {}

  better-path-resolve@1.0.0:
    dependencies:
      is-windows: 1.0.2

  big.js@5.2.2: {}

  binary-extensions@2.3.0: {}

  bindings@1.5.0:
    dependencies:
      file-uri-to-path: 1.0.0

  bip66@1.1.5:
    dependencies:
      safe-buffer: 5.2.1

  bitcoinjs-message@2.2.0:
    dependencies:
      bech32: 1.1.4
      bs58check: 2.1.2
      buffer-equals: 1.0.4
      create-hash: 1.2.0
      secp256k1: 3.8.1
      varuint-bitcoin: 1.1.2

  bl@4.1.0:
    dependencies:
      buffer: 5.7.1
      inherits: 2.0.4
      readable-stream: 3.6.2

  blake2b-wasm@2.4.0:
    dependencies:
      b4a: 1.6.7
      nanoassert: 2.0.0

  blake2b@2.1.4:
    dependencies:
      blake2b-wasm: 2.4.0
      nanoassert: 2.0.0

  bn.js@4.12.1: {}

  body-parser@1.20.3:
    dependencies:
      bytes: 3.1.2
      content-type: 1.0.5
      debug: 2.6.9
      depd: 2.0.0
      destroy: 1.2.0
      http-errors: 2.0.0
      iconv-lite: 0.4.24
      on-finished: 2.4.1
      qs: 6.13.0
      raw-body: 2.5.2
      type-is: 1.6.18
      unpipe: 1.0.0
    transitivePeerDependencies:
      - supports-color

  brace-expansion@1.1.11:
    dependencies:
      balanced-match: 1.0.2
      concat-map: 0.0.1

  brace-expansion@2.0.1:
    dependencies:
      balanced-match: 1.0.2

  braces@3.0.3:
    dependencies:
      fill-range: 7.1.1

  brorand@1.1.0: {}

  browserify-aes@1.2.0:
    dependencies:
      buffer-xor: 1.0.3
      cipher-base: 1.0.6
      create-hash: 1.2.0
      evp_bytestokey: 1.0.3
      inherits: 2.0.4
      safe-buffer: 5.2.1

  browserslist@4.24.4:
    dependencies:
      caniuse-lite: 1.0.30001698
      electron-to-chromium: 1.5.96
      node-releases: 2.0.19
      update-browserslist-db: 1.1.2(browserslist@4.24.4)

  bs-logger@0.2.6:
    dependencies:
      fast-json-stable-stringify: 2.1.0

  bs58@4.0.1:
    dependencies:
      base-x: 3.0.10

  bs58@5.0.0:
    dependencies:
      base-x: 4.0.0

  bs58@6.0.0:
    dependencies:
      base-x: 5.0.0

  bs58check@2.1.2:
    dependencies:
      bs58: 4.0.1
      create-hash: 1.2.0
      safe-buffer: 5.2.1

  bs58check@4.0.0(patch_hash=xkju25h33uk7ay46aspcygifve):
    dependencies:
      '@noble/hashes': 1.7.1
      bs58: 6.0.0

  bser@2.1.1:
    dependencies:
      node-int64: 0.4.0

  buffer-equals@1.0.4: {}

  buffer-from@1.1.2: {}

  buffer-xor@1.0.3: {}

  buffer@5.7.1:
    dependencies:
      base64-js: 1.5.1
      ieee754: 1.2.1

  buffer@6.0.3:
    dependencies:
      base64-js: 1.5.1
      ieee754: 1.2.1

  busboy@1.6.0:
    dependencies:
      streamsearch: 1.1.0

  bytes@3.1.2: {}

  call-bind-apply-helpers@1.0.1:
    dependencies:
      es-errors: 1.3.0
      function-bind: 1.1.2

  call-bind@1.0.8:
    dependencies:
      call-bind-apply-helpers: 1.0.1
      es-define-property: 1.0.1
      get-intrinsic: 1.2.7
      set-function-length: 1.2.2

  call-bound@1.0.3:
    dependencies:
      call-bind-apply-helpers: 1.0.1
      get-intrinsic: 1.2.7

  callsites@3.1.0: {}

  camelcase-css@2.0.1: {}

  camelcase@5.3.1: {}

  camelcase@6.3.0: {}

  caniuse-lite@1.0.30001698: {}

  ccount@2.0.1: {}

  chalk@4.1.2:
    dependencies:
      ansi-styles: 4.3.0
      supports-color: 7.2.0

  chalk@5.4.1: {}

  char-regex@1.0.2: {}

  character-entities-html4@2.1.0: {}

  character-entities-legacy@3.0.0: {}

  chardet@0.7.0: {}

  chokidar@3.6.0:
    dependencies:
      anymatch: 3.1.3
      braces: 3.0.3
      glob-parent: 5.1.2
      is-binary-path: 2.1.0
      is-glob: 4.0.3
      normalize-path: 3.0.0
      readdirp: 3.6.0
    optionalDependencies:
      fsevents: 2.3.3

  chrome-trace-event@1.0.4: {}

  ci-info@3.9.0: {}

  ci-info@4.1.0: {}

  cipher-base@1.0.6:
    dependencies:
      inherits: 2.0.4
      safe-buffer: 5.2.1

  cjs-module-lexer@1.4.3: {}

  class-transformer@0.5.1: {}

  class-validator@0.14.1:
    dependencies:
      '@types/validator': 13.12.2
      libphonenumber-js: 1.11.19
      validator: 13.12.0

  cli-cursor@3.1.0:
    dependencies:
      restore-cursor: 3.1.0

  cli-spinners@2.9.2: {}

  cli-table3@0.6.5:
    dependencies:
      string-width: 4.2.3
    optionalDependencies:
      '@colors/colors': 1.5.0

  cli-width@3.0.0: {}

  cli-width@4.1.0: {}

  client-only@0.0.1: {}

  cliui@7.0.4:
    dependencies:
      string-width: 4.2.3
      strip-ansi: 6.0.1
      wrap-ansi: 7.0.0

  cliui@8.0.1:
    dependencies:
      string-width: 4.2.3
      strip-ansi: 6.0.1
      wrap-ansi: 7.0.0

  clone@1.0.4: {}

  co@4.6.0: {}

  collect-v8-coverage@1.0.2: {}

  color-convert@2.0.1:
    dependencies:
      color-name: 1.1.4

  color-name@1.1.4: {}

  combined-stream@1.0.8:
    dependencies:
      delayed-stream: 1.0.0

  comma-separated-tokens@2.0.3: {}

  commander@2.20.3: {}

  commander@4.1.1: {}

  comment-json@4.2.5:
    dependencies:
      array-timsort: 1.0.3
      core-util-is: 1.0.3
      esprima: 4.0.1
      has-own-prop: 2.0.0
      repeat-string: 1.6.1

  component-emitter@1.3.1: {}

  concat-map@0.0.1: {}

  concat-stream@1.6.2:
    dependencies:
      buffer-from: 1.1.2
      inherits: 2.0.4
      readable-stream: 2.3.8
      typedarray: 0.0.6

  consola@2.15.3: {}

  content-disposition@0.5.4:
    dependencies:
      safe-buffer: 5.2.1

  content-type@1.0.5: {}

  convert-source-map@2.0.0: {}

  cookie-signature@1.0.6: {}

  cookie@0.7.1: {}

  cookiejar@2.1.4: {}

  copyfiles@2.4.1:
    dependencies:
      glob: 7.2.3
      minimatch: 3.1.2
      mkdirp: 1.0.4
      noms: 0.0.0
      through2: 2.0.5
      untildify: 4.0.0
      yargs: 16.2.0

  core-util-is@1.0.3: {}

  cors@2.8.5:
    dependencies:
      object-assign: 4.1.1
      vary: 1.1.2

  cosmiconfig@8.3.6(typescript@5.7.2):
    dependencies:
      import-fresh: 3.3.1
      js-yaml: 4.1.0
      parse-json: 5.2.0
      path-type: 4.0.0
    optionalDependencies:
      typescript: 5.7.2

  create-hash@1.2.0:
    dependencies:
      cipher-base: 1.0.6
      inherits: 2.0.4
      md5.js: 1.3.5
      ripemd160: 2.0.2
      sha.js: 2.4.11

  create-hmac@1.1.7:
    dependencies:
      cipher-base: 1.0.6
      create-hash: 1.2.0
      inherits: 2.0.4
      ripemd160: 2.0.2
      safe-buffer: 5.2.1
      sha.js: 2.4.11

  create-jest@29.7.0(@types/node@20.17.17)(ts-node@10.9.2(@types/node@20.17.17)(typescript@5.7.3)):
    dependencies:
      '@jest/types': 29.6.3
      chalk: 4.1.2
      exit: 0.1.2
      graceful-fs: 4.2.11
      jest-config: 29.7.0(@types/node@20.17.17)(ts-node@10.9.2(@types/node@20.17.17)(typescript@5.7.3))
      jest-util: 29.7.0
      prompts: 2.4.2
    transitivePeerDependencies:
      - '@types/node'
      - babel-plugin-macros
      - supports-color
      - ts-node

  create-jest@29.7.0(@types/node@22.13.1)(ts-node@10.9.2(@types/node@22.13.1)(typescript@5.7.3)):
    dependencies:
      '@jest/types': 29.6.3
      chalk: 4.1.2
      exit: 0.1.2
      graceful-fs: 4.2.11
      jest-config: 29.7.0(@types/node@22.13.1)(ts-node@10.9.2(@types/node@22.13.1)(typescript@5.7.3))
      jest-util: 29.7.0
      prompts: 2.4.2
    transitivePeerDependencies:
      - '@types/node'
      - babel-plugin-macros
      - supports-color
      - ts-node

  create-require@1.1.1: {}

  cross-fetch@3.2.0:
    dependencies:
      node-fetch: 2.7.0
    transitivePeerDependencies:
      - encoding

  cross-fetch@4.0.0:
    dependencies:
      node-fetch: 2.7.0
    transitivePeerDependencies:
      - encoding

  cross-fetch@4.1.0:
    dependencies:
      node-fetch: 2.7.0
    transitivePeerDependencies:
      - encoding

  cross-spawn@7.0.6:
    dependencies:
      path-key: 3.1.1
      shebang-command: 2.0.0
      which: 2.0.2

  css-line-break@2.1.0:
    dependencies:
      utrie: 1.0.2

  cssesc@3.0.0: {}

  csstype@3.1.3: {}

  damerau-levenshtein@1.0.8: {}

  data-view-buffer@1.0.2:
    dependencies:
      call-bound: 1.0.3
      es-errors: 1.3.0
      is-data-view: 1.0.2

  data-view-byte-length@1.0.2:
    dependencies:
      call-bound: 1.0.3
      es-errors: 1.3.0
      is-data-view: 1.0.2

  data-view-byte-offset@1.0.1:
    dependencies:
      call-bound: 1.0.3
      es-errors: 1.3.0
      is-data-view: 1.0.2

  dataloader@1.4.0: {}

  debug@2.6.9:
    dependencies:
      ms: 2.0.0

  debug@3.2.7:
    dependencies:
      ms: 2.1.3

  debug@4.4.0:
    dependencies:
      ms: 2.1.3

  dedent@1.5.3: {}

  deep-freeze-strict@1.1.1: {}

  deep-is@0.1.4: {}

  deepmerge@4.3.1: {}

  defaults@1.0.4:
    dependencies:
      clone: 1.0.4

  define-data-property@1.1.4:
    dependencies:
      es-define-property: 1.0.1
      es-errors: 1.3.0
      gopd: 1.2.0

  define-properties@1.2.1:
    dependencies:
      define-data-property: 1.1.4
      has-property-descriptors: 1.0.2
      object-keys: 1.1.1

  delayed-stream@1.0.0: {}

  depd@2.0.0: {}

  dequal@2.0.3: {}

  destroy@1.2.0: {}

  detect-indent@6.1.0: {}

  detect-newline@3.1.0: {}

  devlop@1.1.0:
    dependencies:
      dequal: 2.0.3

  dezalgo@1.0.4:
    dependencies:
      asap: 2.0.6
      wrappy: 1.0.2

  didyoumean@1.2.2: {}

  diff-sequences@29.6.3: {}

  diff-sequences@30.0.0-alpha.6: {}

  diff@4.0.2: {}

  dir-glob@3.0.1:
    dependencies:
      path-type: 4.0.0

  dlv@1.1.3: {}

  doctrine@2.1.0:
    dependencies:
      esutils: 2.0.3

  doctrine@3.0.0:
    dependencies:
      esutils: 2.0.3

  dotenv-expand@10.0.0: {}

  dotenv@16.4.5: {}

  dotenv@16.4.7: {}

  dotenv@8.6.0: {}

  drbg.js@1.0.1:
    dependencies:
      browserify-aes: 1.2.0
      create-hash: 1.2.0
      create-hmac: 1.1.7

  dunder-proto@1.0.1:
    dependencies:
      call-bind-apply-helpers: 1.0.1
      es-errors: 1.3.0
      gopd: 1.2.0

  eastasianwidth@0.2.0: {}

  ee-first@1.1.1: {}

  ejs@3.1.10:
    dependencies:
      jake: 10.9.2

  electron-to-chromium@1.5.96: {}

  elliptic@6.6.0:
    dependencies:
      bn.js: 4.12.1
      brorand: 1.1.0
      hash.js: 1.1.7
      hmac-drbg: 1.0.1
      inherits: 2.0.4
      minimalistic-assert: 1.0.1
      minimalistic-crypto-utils: 1.0.1

  elliptic@6.6.1:
    dependencies:
      bn.js: 4.12.1
      brorand: 1.1.0
      hash.js: 1.1.7
      hmac-drbg: 1.0.1
      inherits: 2.0.4
      minimalistic-assert: 1.0.1
      minimalistic-crypto-utils: 1.0.1

  emittery@0.13.1: {}

  emoji-regex-xs@1.0.0: {}

  emoji-regex@8.0.0: {}

  emoji-regex@9.2.2: {}

  emojis-list@3.0.0: {}

  encodeurl@1.0.2: {}

  encodeurl@2.0.0: {}

  enhanced-resolve@5.18.1:
    dependencies:
      graceful-fs: 4.2.11
      tapable: 2.2.1

  enquirer@2.4.1:
    dependencies:
      ansi-colors: 4.1.3
      strip-ansi: 6.0.1

  entities@4.5.0: {}

  error-ex@1.3.2:
    dependencies:
      is-arrayish: 0.2.1

  es-abstract@1.23.9:
    dependencies:
      array-buffer-byte-length: 1.0.2
      arraybuffer.prototype.slice: 1.0.4
      available-typed-arrays: 1.0.7
      call-bind: 1.0.8
      call-bound: 1.0.3
      data-view-buffer: 1.0.2
      data-view-byte-length: 1.0.2
      data-view-byte-offset: 1.0.1
      es-define-property: 1.0.1
      es-errors: 1.3.0
      es-object-atoms: 1.1.1
      es-set-tostringtag: 2.1.0
      es-to-primitive: 1.3.0
      function.prototype.name: 1.1.8
      get-intrinsic: 1.2.7
      get-proto: 1.0.1
      get-symbol-description: 1.1.0
      globalthis: 1.0.4
      gopd: 1.2.0
      has-property-descriptors: 1.0.2
      has-proto: 1.2.0
      has-symbols: 1.1.0
      hasown: 2.0.2
      internal-slot: 1.1.0
      is-array-buffer: 3.0.5
      is-callable: 1.2.7
      is-data-view: 1.0.2
      is-regex: 1.2.1
      is-shared-array-buffer: 1.0.4
      is-string: 1.1.1
      is-typed-array: 1.1.15
      is-weakref: 1.1.1
      math-intrinsics: 1.1.0
      object-inspect: 1.13.4
      object-keys: 1.1.1
      object.assign: 4.1.7
      own-keys: 1.0.1
      regexp.prototype.flags: 1.5.4
      safe-array-concat: 1.1.3
      safe-push-apply: 1.0.0
      safe-regex-test: 1.1.0
      set-proto: 1.0.0
      string.prototype.trim: 1.2.10
      string.prototype.trimend: 1.0.9
      string.prototype.trimstart: 1.0.8
      typed-array-buffer: 1.0.3
      typed-array-byte-length: 1.0.3
      typed-array-byte-offset: 1.0.4
      typed-array-length: 1.0.7
      unbox-primitive: 1.1.0
      which-typed-array: 1.1.18

  es-define-property@1.0.1: {}

  es-errors@1.3.0: {}

  es-iterator-helpers@1.2.1:
    dependencies:
      call-bind: 1.0.8
      call-bound: 1.0.3
      define-properties: 1.2.1
      es-abstract: 1.23.9
      es-errors: 1.3.0
      es-set-tostringtag: 2.1.0
      function-bind: 1.1.2
      get-intrinsic: 1.2.7
      globalthis: 1.0.4
      gopd: 1.2.0
      has-property-descriptors: 1.0.2
      has-proto: 1.2.0
      has-symbols: 1.1.0
      internal-slot: 1.1.0
      iterator.prototype: 1.1.5
      safe-array-concat: 1.1.3

  es-module-lexer@1.6.0: {}

  es-object-atoms@1.1.1:
    dependencies:
      es-errors: 1.3.0

  es-set-tostringtag@2.1.0:
    dependencies:
      es-errors: 1.3.0
      get-intrinsic: 1.2.7
      has-tostringtag: 1.0.2
      hasown: 2.0.2

  es-shim-unscopables@1.0.2:
    dependencies:
      hasown: 2.0.2

  es-to-primitive@1.3.0:
    dependencies:
      is-callable: 1.2.7
      is-date-object: 1.1.0
      is-symbol: 1.1.1

  escalade@3.2.0: {}

  escape-html@1.0.3: {}

  escape-string-regexp@1.0.5: {}

  escape-string-regexp@2.0.0: {}

  escape-string-regexp@4.0.0: {}

  eslint-config-next@14.2.2(eslint@8.57.1)(typescript@5.7.3):
    dependencies:
      '@next/eslint-plugin-next': 14.2.2
      '@rushstack/eslint-patch': 1.10.5
      '@typescript-eslint/parser': 7.2.0(eslint@8.57.1)(typescript@5.7.3)
      eslint: 8.57.1
      eslint-import-resolver-node: 0.3.9
      eslint-import-resolver-typescript: 3.7.0(eslint-plugin-import@2.31.0)(eslint@8.57.1)
      eslint-plugin-import: 2.31.0(eslint@8.57.1)
      eslint-plugin-jsx-a11y: 6.10.2(eslint@8.57.1)
      eslint-plugin-react: 7.37.4(eslint@8.57.1)
      eslint-plugin-react-hooks: 5.0.0-canary-7118f5dd7-20230705(eslint@8.57.1)
    optionalDependencies:
      typescript: 5.7.3
    transitivePeerDependencies:
      - eslint-import-resolver-webpack
      - eslint-plugin-import-x
      - supports-color

  eslint-config-next@14.2.8(eslint@8.57.1)(typescript@5.7.3):
    dependencies:
      '@next/eslint-plugin-next': 14.2.8
      '@rushstack/eslint-patch': 1.10.5
      '@typescript-eslint/eslint-plugin': 7.2.0(@typescript-eslint/parser@7.2.0(eslint@8.57.1)(typescript@5.7.3))(eslint@8.57.1)(typescript@5.7.3)
      '@typescript-eslint/parser': 7.2.0(eslint@8.57.1)(typescript@5.7.3)
      eslint: 8.57.1
      eslint-import-resolver-node: 0.3.9
      eslint-import-resolver-typescript: 3.7.0(eslint-plugin-import@2.31.0)(eslint@8.57.1)
      eslint-plugin-import: 2.31.0(@typescript-eslint/parser@7.2.0(eslint@8.57.1)(typescript@5.7.3))(eslint-import-resolver-typescript@3.7.0)(eslint@8.57.1)
      eslint-plugin-jsx-a11y: 6.10.2(eslint@8.57.1)
      eslint-plugin-react: 7.37.4(eslint@8.57.1)
      eslint-plugin-react-hooks: 5.0.0-canary-7118f5dd7-20230705(eslint@8.57.1)
    optionalDependencies:
      typescript: 5.7.3
    transitivePeerDependencies:
      - eslint-import-resolver-webpack
      - eslint-plugin-import-x
      - supports-color

  eslint-config-prettier@10.0.1(eslint@8.57.1):
    dependencies:
      eslint: 8.57.1

  eslint-config-prettier@9.1.0(eslint@8.57.1):
    dependencies:
      eslint: 8.57.1

  eslint-config-prettier@9.1.0(eslint@9.20.0(jiti@1.21.7)):
    dependencies:
      eslint: 9.20.0(jiti@1.21.7)

  eslint-import-resolver-node@0.3.9:
    dependencies:
      debug: 3.2.7
      is-core-module: 2.16.1
      resolve: 1.22.10
    transitivePeerDependencies:
      - supports-color

  eslint-import-resolver-typescript@3.7.0(eslint-plugin-import@2.31.0)(eslint@8.57.1):
    dependencies:
      '@nolyfill/is-core-module': 1.0.39
      debug: 4.4.0
      enhanced-resolve: 5.18.1
      eslint: 8.57.1
      fast-glob: 3.3.3
      get-tsconfig: 4.10.0
      is-bun-module: 1.3.0
      is-glob: 4.0.3
      stable-hash: 0.0.4
    optionalDependencies:
      eslint-plugin-import: 2.31.0(@typescript-eslint/parser@7.2.0(eslint@8.57.1)(typescript@5.7.3))(eslint-import-resolver-typescript@3.7.0)(eslint@8.57.1)
    transitivePeerDependencies:
      - supports-color

  eslint-module-utils@2.12.0(@typescript-eslint/parser@7.2.0(eslint@8.57.1)(typescript@5.7.3))(eslint-import-resolver-node@0.3.9)(eslint-import-resolver-typescript@3.7.0(eslint-plugin-import@2.31.0)(eslint@8.57.1))(eslint@8.57.1):
    dependencies:
      debug: 3.2.7
    optionalDependencies:
      '@typescript-eslint/parser': 7.2.0(eslint@8.57.1)(typescript@5.7.3)
      eslint: 8.57.1
      eslint-import-resolver-node: 0.3.9
      eslint-import-resolver-typescript: 3.7.0(eslint-plugin-import@2.31.0)(eslint@8.57.1)
    transitivePeerDependencies:
      - supports-color

  eslint-plugin-import@2.31.0(@typescript-eslint/parser@7.2.0(eslint@8.57.1)(typescript@5.7.3))(eslint-import-resolver-typescript@3.7.0)(eslint@8.57.1):
    dependencies:
      '@rtsao/scc': 1.1.0
      array-includes: 3.1.8
      array.prototype.findlastindex: 1.2.5
      array.prototype.flat: 1.3.3
      array.prototype.flatmap: 1.3.3
      debug: 3.2.7
      doctrine: 2.1.0
      eslint: 8.57.1
      eslint-import-resolver-node: 0.3.9
      eslint-module-utils: 2.12.0(@typescript-eslint/parser@7.2.0(eslint@8.57.1)(typescript@5.7.3))(eslint-import-resolver-node@0.3.9)(eslint-import-resolver-typescript@3.7.0(eslint-plugin-import@2.31.0)(eslint@8.57.1))(eslint@8.57.1)
      hasown: 2.0.2
      is-core-module: 2.16.1
      is-glob: 4.0.3
      minimatch: 3.1.2
      object.fromentries: 2.0.8
      object.groupby: 1.0.3
      object.values: 1.2.1
      semver: 6.3.1
      string.prototype.trimend: 1.0.9
      tsconfig-paths: 3.15.0
    optionalDependencies:
      '@typescript-eslint/parser': 7.2.0(eslint@8.57.1)(typescript@5.7.3)
    transitivePeerDependencies:
      - eslint-import-resolver-typescript
      - eslint-import-resolver-webpack
      - supports-color

  eslint-plugin-import@2.31.0(eslint@8.57.1):
    dependencies:
      '@rtsao/scc': 1.1.0
      array-includes: 3.1.8
      array.prototype.findlastindex: 1.2.5
      array.prototype.flat: 1.3.3
      array.prototype.flatmap: 1.3.3
      debug: 3.2.7
      doctrine: 2.1.0
      eslint: 8.57.1
      eslint-import-resolver-node: 0.3.9
      eslint-module-utils: 2.12.0(@typescript-eslint/parser@7.2.0(eslint@8.57.1)(typescript@5.7.3))(eslint-import-resolver-node@0.3.9)(eslint-import-resolver-typescript@3.7.0(eslint-plugin-import@2.31.0)(eslint@8.57.1))(eslint@8.57.1)
      hasown: 2.0.2
      is-core-module: 2.16.1
      is-glob: 4.0.3
      minimatch: 3.1.2
      object.fromentries: 2.0.8
      object.groupby: 1.0.3
      object.values: 1.2.1
      semver: 6.3.1
      string.prototype.trimend: 1.0.9
      tsconfig-paths: 3.15.0
    transitivePeerDependencies:
      - eslint-import-resolver-typescript
      - eslint-import-resolver-webpack
      - supports-color

  eslint-plugin-jsx-a11y@6.10.2(eslint@8.57.1):
    dependencies:
      aria-query: 5.3.2
      array-includes: 3.1.8
      array.prototype.flatmap: 1.3.3
      ast-types-flow: 0.0.8
      axe-core: 4.10.2
      axobject-query: 4.1.0
      damerau-levenshtein: 1.0.8
      emoji-regex: 9.2.2
      eslint: 8.57.1
      hasown: 2.0.2
      jsx-ast-utils: 3.3.5
      language-tags: 1.0.9
      minimatch: 3.1.2
      object.fromentries: 2.0.8
      safe-regex-test: 1.1.0
      string.prototype.includes: 2.0.1

  eslint-plugin-prettier@5.2.3(@types/eslint@9.6.1)(eslint-config-prettier@10.0.1(eslint@8.57.1))(eslint@8.57.1)(prettier@3.4.2):
    dependencies:
      eslint: 8.57.1
      prettier: 3.4.2
      prettier-linter-helpers: 1.0.0
      synckit: 0.9.2
    optionalDependencies:
      '@types/eslint': 9.6.1
      eslint-config-prettier: 10.0.1(eslint@8.57.1)

  eslint-plugin-prettier@5.2.3(@types/eslint@9.6.1)(eslint-config-prettier@10.0.1(eslint@8.57.1))(eslint@8.57.1)(prettier@3.5.1):
    dependencies:
      eslint: 8.57.1
      prettier: 3.5.1
      prettier-linter-helpers: 1.0.0
      synckit: 0.9.2
    optionalDependencies:
      '@types/eslint': 9.6.1
      eslint-config-prettier: 10.0.1(eslint@8.57.1)

  eslint-plugin-prettier@5.2.3(@types/eslint@9.6.1)(eslint-config-prettier@9.1.0(eslint@8.57.1))(eslint@8.57.1)(prettier@3.4.2):
    dependencies:
      eslint: 8.57.1
      prettier: 3.4.2
      prettier-linter-helpers: 1.0.0
      synckit: 0.9.2
    optionalDependencies:
      '@types/eslint': 9.6.1
      eslint-config-prettier: 9.1.0(eslint@8.57.1)

  eslint-plugin-prettier@5.2.3(@types/eslint@9.6.1)(eslint-config-prettier@9.1.0(eslint@9.20.0(jiti@1.21.7)))(eslint@9.20.0(jiti@1.21.7))(prettier@3.4.2):
    dependencies:
      eslint: 9.20.0(jiti@1.21.7)
      prettier: 3.4.2
      prettier-linter-helpers: 1.0.0
      synckit: 0.9.2
    optionalDependencies:
      '@types/eslint': 9.6.1
      eslint-config-prettier: 9.1.0(eslint@9.20.0(jiti@1.21.7))

  eslint-plugin-react-hooks@5.0.0-canary-7118f5dd7-20230705(eslint@8.57.1):
    dependencies:
      eslint: 8.57.1

  eslint-plugin-react@7.37.4(eslint@8.57.1):
    dependencies:
      array-includes: 3.1.8
      array.prototype.findlast: 1.2.5
      array.prototype.flatmap: 1.3.3
      array.prototype.tosorted: 1.1.4
      doctrine: 2.1.0
      es-iterator-helpers: 1.2.1
      eslint: 8.57.1
      estraverse: 5.3.0
      hasown: 2.0.2
      jsx-ast-utils: 3.3.5
      minimatch: 3.1.2
      object.entries: 1.1.8
      object.fromentries: 2.0.8
      object.values: 1.2.1
      prop-types: 15.8.1
      resolve: 2.0.0-next.5
      semver: 6.3.1
      string.prototype.matchall: 4.0.12
      string.prototype.repeat: 1.0.0

  eslint-scope@5.1.1:
    dependencies:
      esrecurse: 4.3.0
      estraverse: 4.3.0

  eslint-scope@7.2.2:
    dependencies:
      esrecurse: 4.3.0
      estraverse: 5.3.0

  eslint-scope@8.2.0:
    dependencies:
      esrecurse: 4.3.0
      estraverse: 5.3.0

  eslint-visitor-keys@3.4.3: {}

  eslint-visitor-keys@4.2.0: {}

  eslint@8.57.1:
    dependencies:
      '@eslint-community/eslint-utils': 4.4.1(eslint@8.57.1)
      '@eslint-community/regexpp': 4.12.1
      '@eslint/eslintrc': 2.1.4
      '@eslint/js': 8.57.1
      '@humanwhocodes/config-array': 0.13.0
      '@humanwhocodes/module-importer': 1.0.1
      '@nodelib/fs.walk': 1.2.8
      '@ungap/structured-clone': 1.3.0
      ajv: 6.12.6
      chalk: 4.1.2
      cross-spawn: 7.0.6
      debug: 4.4.0
      doctrine: 3.0.0
      escape-string-regexp: 4.0.0
      eslint-scope: 7.2.2
      eslint-visitor-keys: 3.4.3
      espree: 9.6.1
      esquery: 1.6.0
      esutils: 2.0.3
      fast-deep-equal: 3.1.3
      file-entry-cache: 6.0.1
      find-up: 5.0.0
      glob-parent: 6.0.2
      globals: 13.24.0
      graphemer: 1.4.0
      ignore: 5.3.2
      imurmurhash: 0.1.4
      is-glob: 4.0.3
      is-path-inside: 3.0.3
      js-yaml: 4.1.0
      json-stable-stringify-without-jsonify: 1.0.1
      levn: 0.4.1
      lodash.merge: 4.6.2
      minimatch: 3.1.2
      natural-compare: 1.4.0
      optionator: 0.9.4
      strip-ansi: 6.0.1
      text-table: 0.2.0
    transitivePeerDependencies:
      - supports-color

  eslint@9.20.0(jiti@1.21.7):
    dependencies:
      '@eslint-community/eslint-utils': 4.4.1(eslint@9.20.0(jiti@1.21.7))
      '@eslint-community/regexpp': 4.12.1
      '@eslint/config-array': 0.19.2
      '@eslint/core': 0.11.0
      '@eslint/eslintrc': 3.2.0
      '@eslint/js': 9.20.0
      '@eslint/plugin-kit': 0.2.5
      '@humanfs/node': 0.16.6
      '@humanwhocodes/module-importer': 1.0.1
      '@humanwhocodes/retry': 0.4.1
      '@types/estree': 1.0.6
      '@types/json-schema': 7.0.15
      ajv: 6.12.6
      chalk: 4.1.2
      cross-spawn: 7.0.6
      debug: 4.4.0
      escape-string-regexp: 4.0.0
      eslint-scope: 8.2.0
      eslint-visitor-keys: 4.2.0
      espree: 10.3.0
      esquery: 1.6.0
      esutils: 2.0.3
      fast-deep-equal: 3.1.3
      file-entry-cache: 8.0.0
      find-up: 5.0.0
      glob-parent: 6.0.2
      ignore: 5.3.2
      imurmurhash: 0.1.4
      is-glob: 4.0.3
      json-stable-stringify-without-jsonify: 1.0.1
      lodash.merge: 4.6.2
      minimatch: 3.1.2
      natural-compare: 1.4.0
      optionator: 0.9.4
    optionalDependencies:
      jiti: 1.21.7
    transitivePeerDependencies:
      - supports-color

  espree@10.3.0:
    dependencies:
      acorn: 8.14.0
      acorn-jsx: 5.3.2(acorn@8.14.0)
      eslint-visitor-keys: 4.2.0

  espree@9.6.1:
    dependencies:
      acorn: 8.14.0
      acorn-jsx: 5.3.2(acorn@8.14.0)
      eslint-visitor-keys: 3.4.3

  esprima@4.0.1: {}

  esquery@1.6.0:
    dependencies:
      estraverse: 5.3.0

  esrecurse@4.3.0:
    dependencies:
      estraverse: 5.3.0

  estraverse@4.3.0: {}

  estraverse@5.3.0: {}

  esutils@2.0.3: {}

  etag@1.8.1: {}

  ethers@6.13.5:
    dependencies:
      '@adraffy/ens-normalize': 1.10.1
      '@noble/curves': 1.2.0
      '@noble/hashes': 1.3.2
      '@types/node': 22.7.5
      aes-js: 4.0.0-beta.5
      tslib: 2.7.0
      ws: 8.17.1
    transitivePeerDependencies:
      - bufferutil
      - utf-8-validate

  event-target-shim@5.0.1: {}

  events@3.3.0: {}

  evp_bytestokey@1.0.3:
    dependencies:
      md5.js: 1.3.5
      safe-buffer: 5.2.1

  execa@5.1.1:
    dependencies:
      cross-spawn: 7.0.6
      get-stream: 6.0.1
      human-signals: 2.1.0
      is-stream: 2.0.1
      merge-stream: 2.0.0
      npm-run-path: 4.0.1
      onetime: 5.1.2
      signal-exit: 3.0.7
      strip-final-newline: 2.0.0

  exit@0.1.2: {}

  expect@29.7.0:
    dependencies:
      '@jest/expect-utils': 29.7.0
      jest-get-type: 29.6.3
      jest-matcher-utils: 29.7.0
      jest-message-util: 29.7.0
      jest-util: 29.7.0

  expect@30.0.0-alpha.6:
    dependencies:
      '@jest/expect-utils': 30.0.0-alpha.6
      jest-get-type: 30.0.0-alpha.6
      jest-matcher-utils: 30.0.0-alpha.6
      jest-message-util: 30.0.0-alpha.6
      jest-mock: 30.0.0-alpha.6
      jest-util: 30.0.0-alpha.6

  express@4.21.2:
    dependencies:
      accepts: 1.3.8
      array-flatten: 1.1.1
      body-parser: 1.20.3
      content-disposition: 0.5.4
      content-type: 1.0.5
      cookie: 0.7.1
      cookie-signature: 1.0.6
      debug: 2.6.9
      depd: 2.0.0
      encodeurl: 2.0.0
      escape-html: 1.0.3
      etag: 1.8.1
      finalhandler: 1.3.1
      fresh: 0.5.2
      http-errors: 2.0.0
      merge-descriptors: 1.0.3
      methods: 1.1.2
      on-finished: 2.4.1
      parseurl: 1.3.3
      path-to-regexp: 0.1.12
      proxy-addr: 2.0.7
      qs: 6.13.0
      range-parser: 1.2.1
      safe-buffer: 5.2.1
      send: 0.19.0
      serve-static: 1.16.2
      setprototypeof: 1.2.0
      statuses: 2.0.1
      type-is: 1.6.18
      utils-merge: 1.0.1
      vary: 1.1.2
    transitivePeerDependencies:
      - supports-color

  extendable-error@0.1.7: {}

  external-editor@3.1.0:
    dependencies:
      chardet: 0.7.0
      iconv-lite: 0.4.24
      tmp: 0.0.33

  fast-deep-equal@3.1.3: {}

  fast-diff@1.3.0: {}

  fast-glob@3.3.3:
    dependencies:
      '@nodelib/fs.stat': 2.0.5
      '@nodelib/fs.walk': 1.2.8
      glob-parent: 5.1.2
      merge2: 1.4.1
      micromatch: 4.0.8

  fast-json-stable-stringify@2.1.0: {}

  fast-levenshtein@2.0.6: {}

  fast-safe-stringify@2.1.1: {}

  fast-uri@3.0.6: {}

  fastq@1.19.0:
    dependencies:
      reusify: 1.0.4

  fb-watchman@2.0.2:
    dependencies:
      bser: 2.1.1

  figures@3.2.0:
    dependencies:
      escape-string-regexp: 1.0.5

  file-entry-cache@6.0.1:
    dependencies:
      flat-cache: 3.2.0

  file-entry-cache@8.0.0:
    dependencies:
      flat-cache: 4.0.1

  file-uri-to-path@1.0.0: {}

  filelist@1.0.4:
    dependencies:
      minimatch: 5.1.6

  fill-range@7.1.1:
    dependencies:
      to-regex-range: 5.0.1

  finalhandler@1.3.1:
    dependencies:
      debug: 2.6.9
      encodeurl: 2.0.0
      escape-html: 1.0.3
      on-finished: 2.4.1
      parseurl: 1.3.3
      statuses: 2.0.1
      unpipe: 1.0.0
    transitivePeerDependencies:
      - supports-color

  find-up@4.1.0:
    dependencies:
      locate-path: 5.0.0
      path-exists: 4.0.0

  find-up@5.0.0:
    dependencies:
      locate-path: 6.0.0
      path-exists: 4.0.0

  flat-cache@3.2.0:
    dependencies:
      flatted: 3.3.2
      keyv: 4.5.4
      rimraf: 3.0.2

  flat-cache@4.0.1:
    dependencies:
      flatted: 3.3.2
      keyv: 4.5.4

  flatted@3.3.2: {}

  follow-redirects@1.15.9: {}

  for-each@0.3.4:
    dependencies:
      is-callable: 1.2.7

  foreground-child@3.3.0:
    dependencies:
      cross-spawn: 7.0.6
      signal-exit: 4.1.0

  fork-ts-checker-webpack-plugin@9.0.2(typescript@5.7.2)(webpack@5.97.1):
    dependencies:
      '@babel/code-frame': 7.26.2
      chalk: 4.1.2
      chokidar: 3.6.0
      cosmiconfig: 8.3.6(typescript@5.7.2)
      deepmerge: 4.3.1
      fs-extra: 10.1.0
      memfs: 3.5.3
      minimatch: 3.1.2
      node-abort-controller: 3.1.1
      schema-utils: 3.3.0
      semver: 7.7.1
      tapable: 2.2.1
      typescript: 5.7.2
      webpack: 5.97.1

  form-data@4.0.1:
    dependencies:
      asynckit: 0.4.0
      combined-stream: 1.0.8
      mime-types: 2.1.35

  formidable@3.5.2:
    dependencies:
      dezalgo: 1.0.4
      hexoid: 2.0.0
      once: 1.4.0

  forwarded@0.2.0: {}

  fresh@0.5.2: {}

  fs-extra@10.1.0:
    dependencies:
      graceful-fs: 4.2.11
      jsonfile: 6.1.0
      universalify: 2.0.1

  fs-extra@7.0.1:
    dependencies:
      graceful-fs: 4.2.11
      jsonfile: 4.0.0
      universalify: 0.1.2

  fs-extra@8.1.0:
    dependencies:
      graceful-fs: 4.2.11
      jsonfile: 4.0.0
      universalify: 0.1.2

  fs-monkey@1.0.6: {}

  fs.realpath@1.0.0: {}

  fsevents@2.3.3:
    optional: true

  function-bind@1.1.2: {}

  function.prototype.name@1.1.8:
    dependencies:
      call-bind: 1.0.8
      call-bound: 1.0.3
      define-properties: 1.2.1
      functions-have-names: 1.2.3
      hasown: 2.0.2
      is-callable: 1.2.7

  functions-have-names@1.2.3: {}

  gensync@1.0.0-beta.2: {}

  get-caller-file@2.0.5: {}

  get-intrinsic@1.2.7:
    dependencies:
      call-bind-apply-helpers: 1.0.1
      es-define-property: 1.0.1
      es-errors: 1.3.0
      es-object-atoms: 1.1.1
      function-bind: 1.1.2
      get-proto: 1.0.1
      gopd: 1.2.0
      has-symbols: 1.1.0
      hasown: 2.0.2
      math-intrinsics: 1.1.0

  get-package-type@0.1.0: {}

  get-proto@1.0.1:
    dependencies:
      dunder-proto: 1.0.1
      es-object-atoms: 1.1.1

  get-stream@6.0.1: {}

  get-symbol-description@1.1.0:
    dependencies:
      call-bound: 1.0.3
      es-errors: 1.3.0
      get-intrinsic: 1.2.7

  get-tsconfig@4.10.0:
    dependencies:
      resolve-pkg-maps: 1.0.0

  glob-parent@5.1.2:
    dependencies:
      is-glob: 4.0.3

  glob-parent@6.0.2:
    dependencies:
      is-glob: 4.0.3

  glob-to-regexp@0.4.1: {}

  glob@10.3.10:
    dependencies:
      foreground-child: 3.3.0
      jackspeak: 2.3.6
      minimatch: 9.0.5
      minipass: 7.1.2
      path-scurry: 1.11.1

  glob@10.4.5:
    dependencies:
      foreground-child: 3.3.0
      jackspeak: 3.4.3
      minimatch: 9.0.5
      minipass: 7.1.2
      package-json-from-dist: 1.0.1
      path-scurry: 1.11.1

  glob@7.2.3:
    dependencies:
      fs.realpath: 1.0.0
      inflight: 1.0.6
      inherits: 2.0.4
      minimatch: 3.1.2
      once: 1.4.0
      path-is-absolute: 1.0.1

  globals@11.12.0: {}

  globals@13.24.0:
    dependencies:
      type-fest: 0.20.2

  globals@14.0.0: {}

  globalthis@1.0.4:
    dependencies:
      define-properties: 1.2.1
      gopd: 1.2.0

  globby@11.1.0:
    dependencies:
      array-union: 2.1.0
      dir-glob: 3.0.1
      fast-glob: 3.3.3
      ignore: 5.3.2
      merge2: 1.4.1
      slash: 3.0.0

  gopd@1.2.0: {}

  graceful-fs@4.2.11: {}

  graphemer@1.4.0: {}

  has-bigints@1.1.0: {}

  has-flag@4.0.0: {}

  has-own-prop@2.0.0: {}

  has-property-descriptors@1.0.2:
    dependencies:
      es-define-property: 1.0.1

  has-proto@1.2.0:
    dependencies:
      dunder-proto: 1.0.1

  has-symbols@1.1.0: {}

  has-tostringtag@1.0.2:
    dependencies:
      has-symbols: 1.1.0

  hash-base@3.1.0:
    dependencies:
      inherits: 2.0.4
      readable-stream: 3.6.2
      safe-buffer: 5.2.1

  hash.js@1.1.7:
    dependencies:
      inherits: 2.0.4
      minimalistic-assert: 1.0.1

  hasown@2.0.2:
    dependencies:
      function-bind: 1.1.2

  hast-util-to-html@9.0.4:
    dependencies:
      '@types/hast': 3.0.4
      '@types/unist': 3.0.3
      ccount: 2.0.1
      comma-separated-tokens: 2.0.3
      hast-util-whitespace: 3.0.0
      html-void-elements: 3.0.0
      mdast-util-to-hast: 13.2.0
      property-information: 6.5.0
      space-separated-tokens: 2.0.2
      stringify-entities: 4.0.4
      zwitch: 2.0.4

  hast-util-whitespace@3.0.0:
    dependencies:
      '@types/hast': 3.0.4

  hexoid@2.0.0: {}

  hmac-drbg@1.0.1:
    dependencies:
      hash.js: 1.1.7
      minimalistic-assert: 1.0.1
      minimalistic-crypto-utils: 1.0.1

  html-escaper@2.0.2: {}

  html-void-elements@3.0.0: {}

  html2canvas@1.4.1:
    dependencies:
      css-line-break: 2.1.0
      text-segmentation: 1.0.3

  http-errors@2.0.0:
    dependencies:
      depd: 2.0.0
      inherits: 2.0.4
      setprototypeof: 1.2.0
      statuses: 2.0.1
      toidentifier: 1.0.1

  human-id@1.0.2: {}

  human-signals@2.1.0: {}

  iconv-lite@0.4.24:
    dependencies:
      safer-buffer: 2.1.2

  ieee754@1.2.1: {}

  ignore@5.3.2: {}

  immutable@4.3.7: {}

  import-fresh@3.3.1:
    dependencies:
      parent-module: 1.0.1
      resolve-from: 4.0.0

  import-local@3.2.0:
    dependencies:
      pkg-dir: 4.2.0
      resolve-cwd: 3.0.0

  imurmurhash@0.1.4: {}

  inflight@1.0.6:
    dependencies:
      once: 1.4.0
      wrappy: 1.0.2

  inherits@2.0.4: {}

  inquirer@8.2.6:
    dependencies:
      ansi-escapes: 4.3.2
      chalk: 4.1.2
      cli-cursor: 3.1.0
      cli-width: 3.0.0
      external-editor: 3.1.0
      figures: 3.2.0
      lodash: 4.17.21
      mute-stream: 0.0.8
      ora: 5.4.1
      run-async: 2.4.1
      rxjs: 7.8.1
      string-width: 4.2.3
      strip-ansi: 6.0.1
      through: 2.3.8
      wrap-ansi: 6.2.0

  inquirer@9.2.15:
    dependencies:
      '@ljharb/through': 2.3.14
      ansi-escapes: 4.3.2
      chalk: 5.4.1
      cli-cursor: 3.1.0
      cli-width: 4.1.0
      external-editor: 3.1.0
      figures: 3.2.0
      lodash: 4.17.21
      mute-stream: 1.0.0
      ora: 5.4.1
      run-async: 3.0.0
      rxjs: 7.8.1
      string-width: 4.2.3
      strip-ansi: 6.0.1
      wrap-ansi: 6.2.0

  internal-slot@1.1.0:
    dependencies:
      es-errors: 1.3.0
      hasown: 2.0.2
      side-channel: 1.1.0

  ipaddr.js@1.9.1: {}

  is-array-buffer@3.0.5:
    dependencies:
      call-bind: 1.0.8
      call-bound: 1.0.3
      get-intrinsic: 1.2.7

  is-arrayish@0.2.1: {}

  is-async-function@2.1.1:
    dependencies:
      async-function: 1.0.0
      call-bound: 1.0.3
      get-proto: 1.0.1
      has-tostringtag: 1.0.2
      safe-regex-test: 1.1.0

  is-bigint@1.1.0:
    dependencies:
      has-bigints: 1.1.0

  is-binary-path@2.1.0:
    dependencies:
      binary-extensions: 2.3.0

  is-boolean-object@1.2.2:
    dependencies:
      call-bound: 1.0.3
      has-tostringtag: 1.0.2

  is-bun-module@1.3.0:
    dependencies:
      semver: 7.7.1

  is-callable@1.2.7: {}

  is-core-module@2.16.1:
    dependencies:
      hasown: 2.0.2

  is-data-view@1.0.2:
    dependencies:
      call-bound: 1.0.3
      get-intrinsic: 1.2.7
      is-typed-array: 1.1.15

  is-date-object@1.1.0:
    dependencies:
      call-bound: 1.0.3
      has-tostringtag: 1.0.2

  is-extglob@2.1.1: {}

  is-finalizationregistry@1.1.1:
    dependencies:
      call-bound: 1.0.3

  is-fullwidth-code-point@3.0.0: {}

  is-generator-fn@2.1.0: {}

  is-generator-function@1.1.0:
    dependencies:
      call-bound: 1.0.3
      get-proto: 1.0.1
      has-tostringtag: 1.0.2
      safe-regex-test: 1.1.0

  is-glob@4.0.3:
    dependencies:
      is-extglob: 2.1.1

  is-interactive@1.0.0: {}

  is-map@2.0.3: {}

  is-number-object@1.1.1:
    dependencies:
      call-bound: 1.0.3
      has-tostringtag: 1.0.2

  is-number@7.0.0: {}

  is-path-inside@3.0.3: {}

  is-regex@1.2.1:
    dependencies:
      call-bound: 1.0.3
      gopd: 1.2.0
      has-tostringtag: 1.0.2
      hasown: 2.0.2

  is-set@2.0.3: {}

  is-shared-array-buffer@1.0.4:
    dependencies:
      call-bound: 1.0.3

  is-stream@2.0.1: {}

  is-string@1.1.1:
    dependencies:
      call-bound: 1.0.3
      has-tostringtag: 1.0.2

  is-subdir@1.2.0:
    dependencies:
      better-path-resolve: 1.0.0

  is-symbol@1.1.1:
    dependencies:
      call-bound: 1.0.3
      has-symbols: 1.1.0
      safe-regex-test: 1.1.0

  is-typed-array@1.1.15:
    dependencies:
      which-typed-array: 1.1.18

  is-unicode-supported@0.1.0: {}

  is-weakmap@2.0.2: {}

  is-weakref@1.1.1:
    dependencies:
      call-bound: 1.0.3

  is-weakset@2.0.4:
    dependencies:
      call-bound: 1.0.3
      get-intrinsic: 1.2.7

  is-windows@1.0.2: {}

  isarray@0.0.1: {}

  isarray@1.0.0: {}

  isarray@2.0.5: {}

  isexe@2.0.0: {}

  isomorphic-ws@5.0.0(ws@8.18.0):
    dependencies:
      ws: 8.18.0

  istanbul-lib-coverage@3.2.2: {}

  istanbul-lib-instrument@5.2.1:
    dependencies:
      '@babel/core': 7.26.8
      '@babel/parser': 7.26.8
      '@istanbuljs/schema': 0.1.3
      istanbul-lib-coverage: 3.2.2
      semver: 6.3.1
    transitivePeerDependencies:
      - supports-color

  istanbul-lib-instrument@6.0.3:
    dependencies:
      '@babel/core': 7.26.8
      '@babel/parser': 7.26.8
      '@istanbuljs/schema': 0.1.3
      istanbul-lib-coverage: 3.2.2
      semver: 7.7.1
    transitivePeerDependencies:
      - supports-color

  istanbul-lib-report@3.0.1:
    dependencies:
      istanbul-lib-coverage: 3.2.2
      make-dir: 4.0.0
      supports-color: 7.2.0

  istanbul-lib-source-maps@4.0.1:
    dependencies:
      debug: 4.4.0
      istanbul-lib-coverage: 3.2.2
      source-map: 0.6.1
    transitivePeerDependencies:
      - supports-color

  istanbul-lib-source-maps@5.0.6:
    dependencies:
      '@jridgewell/trace-mapping': 0.3.25
      debug: 4.4.0
      istanbul-lib-coverage: 3.2.2
    transitivePeerDependencies:
      - supports-color

  istanbul-reports@3.1.7:
    dependencies:
      html-escaper: 2.0.2
      istanbul-lib-report: 3.0.1

  iterare@1.2.1: {}

  iterator.prototype@1.1.5:
    dependencies:
      define-data-property: 1.1.4
      es-object-atoms: 1.1.1
      get-intrinsic: 1.2.7
      get-proto: 1.0.1
      has-symbols: 1.1.0
      set-function-name: 2.0.2

  jackspeak@2.3.6:
    dependencies:
      '@isaacs/cliui': 8.0.2
    optionalDependencies:
      '@pkgjs/parseargs': 0.11.0

  jackspeak@3.4.3:
    dependencies:
      '@isaacs/cliui': 8.0.2
    optionalDependencies:
      '@pkgjs/parseargs': 0.11.0

  jake@10.9.2:
    dependencies:
      async: 3.2.6
      chalk: 4.1.2
      filelist: 1.0.4
      minimatch: 3.1.2

  jest-changed-files@29.7.0:
    dependencies:
      execa: 5.1.1
      jest-util: 29.7.0
      p-limit: 3.1.0

  jest-changed-files@30.0.0-alpha.6:
    dependencies:
      execa: 5.1.1
      jest-util: 30.0.0-alpha.6
      p-limit: 3.1.0

  jest-circus@29.7.0:
    dependencies:
      '@jest/environment': 29.7.0
      '@jest/expect': 29.7.0
      '@jest/test-result': 29.7.0
      '@jest/types': 29.6.3
      '@types/node': 22.13.1
      chalk: 4.1.2
      co: 4.6.0
      dedent: 1.5.3
      is-generator-fn: 2.1.0
      jest-each: 29.7.0
      jest-matcher-utils: 29.7.0
      jest-message-util: 29.7.0
      jest-runtime: 29.7.0
      jest-snapshot: 29.7.0
      jest-util: 29.7.0
      p-limit: 3.1.0
      pretty-format: 29.7.0
      pure-rand: 6.1.0
      slash: 3.0.0
      stack-utils: 2.0.6
    transitivePeerDependencies:
      - babel-plugin-macros
      - supports-color

  jest-circus@30.0.0-alpha.6:
    dependencies:
      '@jest/environment': 30.0.0-alpha.6
      '@jest/expect': 30.0.0-alpha.6
      '@jest/test-result': 30.0.0-alpha.6
      '@jest/types': 30.0.0-alpha.6
      '@types/node': 22.13.1
      chalk: 4.1.2
      co: 4.6.0
      dedent: 1.5.3
      is-generator-fn: 2.1.0
      jest-each: 30.0.0-alpha.6
      jest-matcher-utils: 30.0.0-alpha.6
      jest-message-util: 30.0.0-alpha.6
      jest-runtime: 30.0.0-alpha.6
      jest-snapshot: 30.0.0-alpha.6
      jest-util: 30.0.0-alpha.6
      p-limit: 3.1.0
      pretty-format: 30.0.0-alpha.6
      pure-rand: 6.1.0
      slash: 3.0.0
      stack-utils: 2.0.6
    transitivePeerDependencies:
      - babel-plugin-macros
      - supports-color

  jest-cli@29.7.0(@types/node@20.17.17)(ts-node@10.9.2(@types/node@20.17.17)(typescript@5.7.3)):
    dependencies:
      '@jest/core': 29.7.0(ts-node@10.9.2(@types/node@20.17.17)(typescript@5.7.3))
      '@jest/test-result': 29.7.0
      '@jest/types': 29.6.3
      chalk: 4.1.2
      create-jest: 29.7.0(@types/node@20.17.17)(ts-node@10.9.2(@types/node@20.17.17)(typescript@5.7.3))
      exit: 0.1.2
      import-local: 3.2.0
      jest-config: 29.7.0(@types/node@20.17.17)(ts-node@10.9.2(@types/node@20.17.17)(typescript@5.7.3))
      jest-util: 29.7.0
      jest-validate: 29.7.0
      yargs: 17.7.2
    transitivePeerDependencies:
      - '@types/node'
      - babel-plugin-macros
      - supports-color
      - ts-node

  jest-cli@29.7.0(@types/node@22.13.1)(ts-node@10.9.2(@types/node@22.13.1)(typescript@5.7.3)):
    dependencies:
      '@jest/core': 29.7.0(ts-node@10.9.2(@types/node@22.13.1)(typescript@5.7.3))
      '@jest/test-result': 29.7.0
      '@jest/types': 29.6.3
      chalk: 4.1.2
      create-jest: 29.7.0(@types/node@22.13.1)(ts-node@10.9.2(@types/node@22.13.1)(typescript@5.7.3))
      exit: 0.1.2
      import-local: 3.2.0
      jest-config: 29.7.0(@types/node@22.13.1)(ts-node@10.9.2(@types/node@22.13.1)(typescript@5.7.3))
      jest-util: 29.7.0
      jest-validate: 29.7.0
      yargs: 17.7.2
    transitivePeerDependencies:
      - '@types/node'
      - babel-plugin-macros
      - supports-color
      - ts-node

  jest-cli@30.0.0-alpha.6(@types/node@22.13.1)(ts-node@10.9.2(@types/node@22.13.1)(typescript@5.7.3)):
    dependencies:
      '@jest/core': 30.0.0-alpha.6(ts-node@10.9.2(@types/node@22.13.1)(typescript@5.7.3))
      '@jest/test-result': 30.0.0-alpha.6
      '@jest/types': 30.0.0-alpha.6
      chalk: 4.1.2
      exit: 0.1.2
      import-local: 3.2.0
      jest-config: 30.0.0-alpha.6(@types/node@22.13.1)(ts-node@10.9.2(@types/node@22.13.1)(typescript@5.7.3))
      jest-util: 30.0.0-alpha.6
      jest-validate: 30.0.0-alpha.6
      yargs: 17.7.2
    transitivePeerDependencies:
      - '@types/node'
      - babel-plugin-macros
      - esbuild-register
      - supports-color
      - ts-node

  jest-config@29.7.0(@types/node@20.17.17)(ts-node@10.9.2(@types/node@20.17.17)(typescript@5.7.3)):
    dependencies:
      '@babel/core': 7.26.8
      '@jest/test-sequencer': 29.7.0
      '@jest/types': 29.6.3
      babel-jest: 29.7.0(@babel/core@7.26.8)
      chalk: 4.1.2
      ci-info: 3.9.0
      deepmerge: 4.3.1
      glob: 7.2.3
      graceful-fs: 4.2.11
      jest-circus: 29.7.0
      jest-environment-node: 29.7.0
      jest-get-type: 29.6.3
      jest-regex-util: 29.6.3
      jest-resolve: 29.7.0
      jest-runner: 29.7.0
      jest-util: 29.7.0
      jest-validate: 29.7.0
      micromatch: 4.0.8
      parse-json: 5.2.0
      pretty-format: 29.7.0
      slash: 3.0.0
      strip-json-comments: 3.1.1
    optionalDependencies:
      '@types/node': 20.17.17
      ts-node: 10.9.2(@types/node@20.17.17)(typescript@5.7.3)
    transitivePeerDependencies:
      - babel-plugin-macros
      - supports-color

  jest-config@29.7.0(@types/node@22.13.1)(ts-node@10.9.2(@types/node@20.17.17)(typescript@5.7.3)):
    dependencies:
      '@babel/core': 7.26.8
      '@jest/test-sequencer': 29.7.0
      '@jest/types': 29.6.3
      babel-jest: 29.7.0(@babel/core@7.26.8)
      chalk: 4.1.2
      ci-info: 3.9.0
      deepmerge: 4.3.1
      glob: 7.2.3
      graceful-fs: 4.2.11
      jest-circus: 29.7.0
      jest-environment-node: 29.7.0
      jest-get-type: 29.6.3
      jest-regex-util: 29.6.3
      jest-resolve: 29.7.0
      jest-runner: 29.7.0
      jest-util: 29.7.0
      jest-validate: 29.7.0
      micromatch: 4.0.8
      parse-json: 5.2.0
      pretty-format: 29.7.0
      slash: 3.0.0
      strip-json-comments: 3.1.1
    optionalDependencies:
      '@types/node': 22.13.1
      ts-node: 10.9.2(@types/node@20.17.17)(typescript@5.7.3)
    transitivePeerDependencies:
      - babel-plugin-macros
      - supports-color

  jest-config@29.7.0(@types/node@22.13.1)(ts-node@10.9.2(@types/node@22.13.1)(typescript@5.7.3)):
    dependencies:
      '@babel/core': 7.26.8
      '@jest/test-sequencer': 29.7.0
      '@jest/types': 29.6.3
      babel-jest: 29.7.0(@babel/core@7.26.8)
      chalk: 4.1.2
      ci-info: 3.9.0
      deepmerge: 4.3.1
      glob: 7.2.3
      graceful-fs: 4.2.11
      jest-circus: 29.7.0
      jest-environment-node: 29.7.0
      jest-get-type: 29.6.3
      jest-regex-util: 29.6.3
      jest-resolve: 29.7.0
      jest-runner: 29.7.0
      jest-util: 29.7.0
      jest-validate: 29.7.0
      micromatch: 4.0.8
      parse-json: 5.2.0
      pretty-format: 29.7.0
      slash: 3.0.0
      strip-json-comments: 3.1.1
    optionalDependencies:
      '@types/node': 22.13.1
      ts-node: 10.9.2(@types/node@22.13.1)(typescript@5.7.3)
    transitivePeerDependencies:
      - babel-plugin-macros
      - supports-color

  jest-config@30.0.0-alpha.6(@types/node@22.13.1)(ts-node@10.9.2(@types/node@22.13.1)(typescript@5.7.3)):
    dependencies:
      '@babel/core': 7.26.8
      '@jest/pattern': 30.0.0-alpha.6
      '@jest/test-sequencer': 30.0.0-alpha.6
      '@jest/types': 30.0.0-alpha.6
      babel-jest: 30.0.0-alpha.6(@babel/core@7.26.8)
      chalk: 4.1.2
      ci-info: 4.1.0
      deepmerge: 4.3.1
      glob: 10.4.5
      graceful-fs: 4.2.11
      jest-circus: 30.0.0-alpha.6
      jest-docblock: 30.0.0-alpha.6
      jest-environment-node: 30.0.0-alpha.6
      jest-get-type: 30.0.0-alpha.6
      jest-regex-util: 30.0.0-alpha.6
      jest-resolve: 30.0.0-alpha.6
      jest-runner: 30.0.0-alpha.6
      jest-util: 30.0.0-alpha.6
      jest-validate: 30.0.0-alpha.6
      micromatch: 4.0.8
      parse-json: 5.2.0
      pretty-format: 30.0.0-alpha.6
      slash: 3.0.0
      strip-json-comments: 3.1.1
    optionalDependencies:
      '@types/node': 22.13.1
      ts-node: 10.9.2(@types/node@22.13.1)(typescript@5.7.3)
    transitivePeerDependencies:
      - babel-plugin-macros
      - supports-color

  jest-diff@29.7.0:
    dependencies:
      chalk: 4.1.2
      diff-sequences: 29.6.3
      jest-get-type: 29.6.3
      pretty-format: 29.7.0

  jest-diff@30.0.0-alpha.6:
    dependencies:
      chalk: 4.1.2
      diff-sequences: 30.0.0-alpha.6
      jest-get-type: 30.0.0-alpha.6
      pretty-format: 30.0.0-alpha.6

  jest-docblock@29.7.0:
    dependencies:
      detect-newline: 3.1.0

  jest-docblock@30.0.0-alpha.6:
    dependencies:
      detect-newline: 3.1.0

  jest-each@29.7.0:
    dependencies:
      '@jest/types': 29.6.3
      chalk: 4.1.2
      jest-get-type: 29.6.3
      jest-util: 29.7.0
      pretty-format: 29.7.0

  jest-each@30.0.0-alpha.6:
    dependencies:
      '@jest/types': 30.0.0-alpha.6
      chalk: 4.1.2
      jest-get-type: 30.0.0-alpha.6
      jest-util: 30.0.0-alpha.6
      pretty-format: 30.0.0-alpha.6

  jest-environment-node@29.7.0:
    dependencies:
      '@jest/environment': 29.7.0
      '@jest/fake-timers': 29.7.0
      '@jest/types': 29.6.3
      '@types/node': 22.13.1
      jest-mock: 29.7.0
      jest-util: 29.7.0

  jest-environment-node@30.0.0-alpha.6:
    dependencies:
      '@jest/environment': 30.0.0-alpha.6
      '@jest/fake-timers': 30.0.0-alpha.6
      '@jest/types': 30.0.0-alpha.6
      '@types/node': 22.13.1
      jest-mock: 30.0.0-alpha.6
      jest-util: 30.0.0-alpha.6

  jest-get-type@29.6.3: {}

  jest-get-type@30.0.0-alpha.6: {}

  jest-haste-map@29.7.0:
    dependencies:
      '@jest/types': 29.6.3
      '@types/graceful-fs': 4.1.9
      '@types/node': 22.13.1
      anymatch: 3.1.3
      fb-watchman: 2.0.2
      graceful-fs: 4.2.11
      jest-regex-util: 29.6.3
      jest-util: 29.7.0
      jest-worker: 29.7.0
      micromatch: 4.0.8
      walker: 1.0.8
    optionalDependencies:
      fsevents: 2.3.3

  jest-haste-map@30.0.0-alpha.6:
    dependencies:
      '@jest/types': 30.0.0-alpha.6
      '@types/node': 22.13.1
      anymatch: 3.1.3
      fb-watchman: 2.0.2
      graceful-fs: 4.2.11
      jest-regex-util: 30.0.0-alpha.6
      jest-util: 30.0.0-alpha.6
      jest-worker: 30.0.0-alpha.6
      micromatch: 4.0.8
      walker: 1.0.8
    optionalDependencies:
      fsevents: 2.3.3

  jest-leak-detector@29.7.0:
    dependencies:
      jest-get-type: 29.6.3
      pretty-format: 29.7.0

  jest-leak-detector@30.0.0-alpha.6:
    dependencies:
      jest-get-type: 30.0.0-alpha.6
      pretty-format: 30.0.0-alpha.6

  jest-matcher-utils@29.7.0:
    dependencies:
      chalk: 4.1.2
      jest-diff: 29.7.0
      jest-get-type: 29.6.3
      pretty-format: 29.7.0

  jest-matcher-utils@30.0.0-alpha.6:
    dependencies:
      chalk: 4.1.2
      jest-diff: 30.0.0-alpha.6
      jest-get-type: 30.0.0-alpha.6
      pretty-format: 30.0.0-alpha.6

  jest-message-util@29.7.0:
    dependencies:
      '@babel/code-frame': 7.26.2
      '@jest/types': 29.6.3
      '@types/stack-utils': 2.0.3
      chalk: 4.1.2
      graceful-fs: 4.2.11
      micromatch: 4.0.8
      pretty-format: 29.7.0
      slash: 3.0.0
      stack-utils: 2.0.6

  jest-message-util@30.0.0-alpha.6:
    dependencies:
      '@babel/code-frame': 7.26.2
      '@jest/types': 30.0.0-alpha.6
      '@types/stack-utils': 2.0.3
      chalk: 4.1.2
      graceful-fs: 4.2.11
      micromatch: 4.0.8
      pretty-format: 30.0.0-alpha.6
      slash: 3.0.0
      stack-utils: 2.0.6

  jest-mock@29.7.0:
    dependencies:
      '@jest/types': 29.6.3
      '@types/node': 22.13.1
      jest-util: 29.7.0

  jest-mock@30.0.0-alpha.6:
    dependencies:
      '@jest/types': 30.0.0-alpha.6
      '@types/node': 22.13.1
      jest-util: 30.0.0-alpha.6

  jest-pnp-resolver@1.2.3(jest-resolve@29.7.0):
    optionalDependencies:
      jest-resolve: 29.7.0

  jest-pnp-resolver@1.2.3(jest-resolve@30.0.0-alpha.6):
    optionalDependencies:
      jest-resolve: 30.0.0-alpha.6

  jest-regex-util@29.6.3: {}

  jest-regex-util@30.0.0-alpha.6: {}

  jest-resolve-dependencies@29.7.0:
    dependencies:
      jest-regex-util: 29.6.3
      jest-snapshot: 29.7.0
    transitivePeerDependencies:
      - supports-color

  jest-resolve-dependencies@30.0.0-alpha.6:
    dependencies:
      jest-regex-util: 30.0.0-alpha.6
      jest-snapshot: 30.0.0-alpha.6
    transitivePeerDependencies:
      - supports-color

  jest-resolve@29.7.0:
    dependencies:
      chalk: 4.1.2
      graceful-fs: 4.2.11
      jest-haste-map: 29.7.0
      jest-pnp-resolver: 1.2.3(jest-resolve@29.7.0)
      jest-util: 29.7.0
      jest-validate: 29.7.0
      resolve: 1.22.10
      resolve.exports: 2.0.3
      slash: 3.0.0

  jest-resolve@30.0.0-alpha.6:
    dependencies:
      chalk: 4.1.2
      graceful-fs: 4.2.11
      jest-haste-map: 30.0.0-alpha.6
      jest-pnp-resolver: 1.2.3(jest-resolve@30.0.0-alpha.6)
      jest-util: 30.0.0-alpha.6
      jest-validate: 30.0.0-alpha.6
      resolve: 1.22.10
      resolve.exports: 2.0.3
      slash: 3.0.0

  jest-runner@29.7.0:
    dependencies:
      '@jest/console': 29.7.0
      '@jest/environment': 29.7.0
      '@jest/test-result': 29.7.0
      '@jest/transform': 29.7.0
      '@jest/types': 29.6.3
      '@types/node': 22.13.1
      chalk: 4.1.2
      emittery: 0.13.1
      graceful-fs: 4.2.11
      jest-docblock: 29.7.0
      jest-environment-node: 29.7.0
      jest-haste-map: 29.7.0
      jest-leak-detector: 29.7.0
      jest-message-util: 29.7.0
      jest-resolve: 29.7.0
      jest-runtime: 29.7.0
      jest-util: 29.7.0
      jest-watcher: 29.7.0
      jest-worker: 29.7.0
      p-limit: 3.1.0
      source-map-support: 0.5.13
    transitivePeerDependencies:
      - supports-color

  jest-runner@30.0.0-alpha.6:
    dependencies:
      '@jest/console': 30.0.0-alpha.6
      '@jest/environment': 30.0.0-alpha.6
      '@jest/test-result': 30.0.0-alpha.6
      '@jest/transform': 30.0.0-alpha.6
      '@jest/types': 30.0.0-alpha.6
      '@types/node': 22.13.1
      chalk: 4.1.2
      emittery: 0.13.1
      graceful-fs: 4.2.11
      jest-docblock: 30.0.0-alpha.6
      jest-environment-node: 30.0.0-alpha.6
      jest-haste-map: 30.0.0-alpha.6
      jest-leak-detector: 30.0.0-alpha.6
      jest-message-util: 30.0.0-alpha.6
      jest-resolve: 30.0.0-alpha.6
      jest-runtime: 30.0.0-alpha.6
      jest-util: 30.0.0-alpha.6
      jest-watcher: 30.0.0-alpha.6
      jest-worker: 30.0.0-alpha.6
      p-limit: 3.1.0
      source-map-support: 0.5.13
    transitivePeerDependencies:
      - supports-color

  jest-runtime@29.7.0:
    dependencies:
      '@jest/environment': 29.7.0
      '@jest/fake-timers': 29.7.0
      '@jest/globals': 29.7.0
      '@jest/source-map': 29.6.3
      '@jest/test-result': 29.7.0
      '@jest/transform': 29.7.0
      '@jest/types': 29.6.3
      '@types/node': 22.13.1
      chalk: 4.1.2
      cjs-module-lexer: 1.4.3
      collect-v8-coverage: 1.0.2
      glob: 7.2.3
      graceful-fs: 4.2.11
      jest-haste-map: 29.7.0
      jest-message-util: 29.7.0
      jest-mock: 29.7.0
      jest-regex-util: 29.6.3
      jest-resolve: 29.7.0
      jest-snapshot: 29.7.0
      jest-util: 29.7.0
      slash: 3.0.0
      strip-bom: 4.0.0
    transitivePeerDependencies:
      - supports-color

  jest-runtime@30.0.0-alpha.6:
    dependencies:
      '@jest/environment': 30.0.0-alpha.6
      '@jest/fake-timers': 30.0.0-alpha.6
      '@jest/globals': 30.0.0-alpha.6
      '@jest/source-map': 30.0.0-alpha.6
      '@jest/test-result': 30.0.0-alpha.6
      '@jest/transform': 30.0.0-alpha.6
      '@jest/types': 30.0.0-alpha.6
      '@types/node': 22.13.1
      chalk: 4.1.2
      cjs-module-lexer: 1.4.3
      collect-v8-coverage: 1.0.2
      glob: 10.4.5
      graceful-fs: 4.2.11
      jest-haste-map: 30.0.0-alpha.6
      jest-message-util: 30.0.0-alpha.6
      jest-mock: 30.0.0-alpha.6
      jest-regex-util: 30.0.0-alpha.6
      jest-resolve: 30.0.0-alpha.6
      jest-snapshot: 30.0.0-alpha.6
      jest-util: 30.0.0-alpha.6
      slash: 3.0.0
      strip-bom: 4.0.0
    transitivePeerDependencies:
      - supports-color

  jest-snapshot@29.7.0:
    dependencies:
      '@babel/core': 7.26.8
      '@babel/generator': 7.26.8
      '@babel/plugin-syntax-jsx': 7.25.9(@babel/core@7.26.8)
      '@babel/plugin-syntax-typescript': 7.25.9(@babel/core@7.26.8)
      '@babel/types': 7.26.8
      '@jest/expect-utils': 29.7.0
      '@jest/transform': 29.7.0
      '@jest/types': 29.6.3
      babel-preset-current-node-syntax: 1.1.0(@babel/core@7.26.8)
      chalk: 4.1.2
      expect: 29.7.0
      graceful-fs: 4.2.11
      jest-diff: 29.7.0
      jest-get-type: 29.6.3
      jest-matcher-utils: 29.7.0
      jest-message-util: 29.7.0
      jest-util: 29.7.0
      natural-compare: 1.4.0
      pretty-format: 29.7.0
      semver: 7.7.1
    transitivePeerDependencies:
      - supports-color

  jest-snapshot@30.0.0-alpha.6:
    dependencies:
      '@babel/core': 7.26.8
      '@babel/generator': 7.26.8
      '@babel/plugin-syntax-jsx': 7.25.9(@babel/core@7.26.8)
      '@babel/plugin-syntax-typescript': 7.25.9(@babel/core@7.26.8)
      '@babel/types': 7.26.8
      '@jest/expect-utils': 30.0.0-alpha.6
      '@jest/snapshot-utils': 30.0.0-alpha.6
      '@jest/transform': 30.0.0-alpha.6
      '@jest/types': 30.0.0-alpha.6
      babel-preset-current-node-syntax: 1.1.0(@babel/core@7.26.8)
      chalk: 4.1.2
      expect: 30.0.0-alpha.6
      graceful-fs: 4.2.11
      jest-diff: 30.0.0-alpha.6
      jest-get-type: 30.0.0-alpha.6
      jest-matcher-utils: 30.0.0-alpha.6
      jest-message-util: 30.0.0-alpha.6
      jest-util: 30.0.0-alpha.6
      pretty-format: 30.0.0-alpha.6
      semver: 7.7.1
      synckit: 0.9.2
    transitivePeerDependencies:
      - supports-color

  jest-util@29.7.0:
    dependencies:
      '@jest/types': 29.6.3
      '@types/node': 22.13.1
      chalk: 4.1.2
      ci-info: 3.9.0
      graceful-fs: 4.2.11
      picomatch: 2.3.1

  jest-util@30.0.0-alpha.6:
    dependencies:
      '@jest/types': 30.0.0-alpha.6
      '@types/node': 22.13.1
      chalk: 4.1.2
      ci-info: 4.1.0
      graceful-fs: 4.2.11
      picomatch: 4.0.2

  jest-validate@29.7.0:
    dependencies:
      '@jest/types': 29.6.3
      camelcase: 6.3.0
      chalk: 4.1.2
      jest-get-type: 29.6.3
      leven: 3.1.0
      pretty-format: 29.7.0

  jest-validate@30.0.0-alpha.6:
    dependencies:
      '@jest/types': 30.0.0-alpha.6
      camelcase: 6.3.0
      chalk: 4.1.2
      jest-get-type: 30.0.0-alpha.6
      leven: 3.1.0
      pretty-format: 30.0.0-alpha.6

  jest-watcher@29.7.0:
    dependencies:
      '@jest/test-result': 29.7.0
      '@jest/types': 29.6.3
      '@types/node': 22.13.1
      ansi-escapes: 4.3.2
      chalk: 4.1.2
      emittery: 0.13.1
      jest-util: 29.7.0
      string-length: 4.0.2

  jest-watcher@30.0.0-alpha.6:
    dependencies:
      '@jest/test-result': 30.0.0-alpha.6
      '@jest/types': 30.0.0-alpha.6
      '@types/node': 22.13.1
      ansi-escapes: 4.3.2
      chalk: 4.1.2
      emittery: 0.13.1
      jest-util: 30.0.0-alpha.6
      string-length: 4.0.2

  jest-worker@27.5.1:
    dependencies:
      '@types/node': 20.17.17
      merge-stream: 2.0.0
      supports-color: 8.1.1

  jest-worker@29.7.0:
    dependencies:
      '@types/node': 22.13.1
      jest-util: 29.7.0
      merge-stream: 2.0.0
      supports-color: 8.1.1

  jest-worker@30.0.0-alpha.6:
    dependencies:
      '@types/node': 22.13.1
      '@ungap/structured-clone': 1.3.0
      jest-util: 30.0.0-alpha.6
      merge-stream: 2.0.0
      supports-color: 8.1.1

  jest@29.7.0(@types/node@20.17.17)(ts-node@10.9.2(@types/node@20.17.17)(typescript@5.7.3)):
    dependencies:
      '@jest/core': 29.7.0(ts-node@10.9.2(@types/node@20.17.17)(typescript@5.7.3))
      '@jest/types': 29.6.3
      import-local: 3.2.0
      jest-cli: 29.7.0(@types/node@20.17.17)(ts-node@10.9.2(@types/node@20.17.17)(typescript@5.7.3))
    transitivePeerDependencies:
      - '@types/node'
      - babel-plugin-macros
      - supports-color
      - ts-node

  jest@29.7.0(@types/node@22.13.1)(ts-node@10.9.2(@types/node@22.13.1)(typescript@5.7.3)):
    dependencies:
      '@jest/core': 29.7.0(ts-node@10.9.2(@types/node@22.13.1)(typescript@5.7.3))
      '@jest/types': 29.6.3
      import-local: 3.2.0
      jest-cli: 29.7.0(@types/node@22.13.1)(ts-node@10.9.2(@types/node@22.13.1)(typescript@5.7.3))
    transitivePeerDependencies:
      - '@types/node'
      - babel-plugin-macros
      - supports-color
      - ts-node

  jest@30.0.0-alpha.6(@types/node@22.13.1)(ts-node@10.9.2(@types/node@22.13.1)(typescript@5.7.3)):
    dependencies:
      '@jest/core': 30.0.0-alpha.6(ts-node@10.9.2(@types/node@22.13.1)(typescript@5.7.3))
      '@jest/types': 30.0.0-alpha.6
      import-local: 3.2.0
      jest-cli: 30.0.0-alpha.6(@types/node@22.13.1)(ts-node@10.9.2(@types/node@22.13.1)(typescript@5.7.3))
    transitivePeerDependencies:
      - '@types/node'
      - babel-plugin-macros
      - esbuild-register
      - supports-color
      - ts-node

  jiti@1.21.7: {}

  js-tokens@4.0.0: {}

  js-xxhash@1.0.4: {}

  js-yaml@3.14.1:
    dependencies:
      argparse: 1.0.10
      esprima: 4.0.1

  js-yaml@4.1.0:
    dependencies:
      argparse: 2.0.1

  jsbi@3.1.3: {}

  jsbi@4.3.0: {}

  jsesc@3.1.0: {}

  json-buffer@3.0.1: {}

  json-parse-even-better-errors@2.3.1: {}

  json-schema-traverse@0.4.1: {}

  json-schema-traverse@1.0.0: {}

  json-stable-stringify-without-jsonify@1.0.1: {}

  json5@1.0.2:
    dependencies:
      minimist: 1.2.8

  json5@2.2.3: {}

  jsonc-parser@3.2.1: {}

  jsonc-parser@3.3.1: {}

  jsonfile@4.0.0:
    optionalDependencies:
      graceful-fs: 4.2.11

  jsonfile@6.1.0:
    dependencies:
      universalify: 2.0.1
    optionalDependencies:
      graceful-fs: 4.2.11

  jsx-ast-utils@3.3.5:
    dependencies:
      array-includes: 3.1.8
      array.prototype.flat: 1.3.3
      object.assign: 4.1.7
      object.values: 1.2.1

  keyv@4.5.4:
    dependencies:
      json-buffer: 3.0.1

  kleur@3.0.3: {}

  language-subtag-registry@0.3.23: {}

  language-tags@1.0.9:
    dependencies:
      language-subtag-registry: 0.3.23

  leven@3.1.0: {}

  levn@0.4.1:
    dependencies:
      prelude-ls: 1.2.1
      type-check: 0.4.0

  libphonenumber-js@1.11.19: {}

  lilconfig@3.1.3: {}

  lines-and-columns@1.2.4: {}

  linkify-it@5.0.0:
    dependencies:
      uc.micro: 2.1.0

  lit-element@4.1.1:
    dependencies:
      '@lit-labs/ssr-dom-shim': 1.3.0
      '@lit/reactive-element': 2.0.4
      lit-html: 3.2.1

  lit-html@3.2.1:
    dependencies:
      '@types/trusted-types': 2.0.7

  lit@3.2.1:
    dependencies:
      '@lit/reactive-element': 2.0.4
      lit-element: 4.1.1
      lit-html: 3.2.1

  loader-runner@4.3.0: {}

  loader-utils@2.0.4:
    dependencies:
      big.js: 5.2.2
      emojis-list: 3.0.0
      json5: 2.2.3

  locate-path@5.0.0:
    dependencies:
      p-locate: 4.1.0

  locate-path@6.0.0:
    dependencies:
      p-locate: 5.0.0

  lodash.memoize@4.1.2: {}

  lodash.merge@4.6.2: {}

  lodash.startcase@4.4.0: {}

  lodash@4.17.21: {}

  log-symbols@4.1.0:
    dependencies:
      chalk: 4.1.2
      is-unicode-supported: 0.1.0

  loose-envify@1.4.0:
    dependencies:
      js-tokens: 4.0.0

  lru-cache@10.4.3: {}

  lru-cache@5.1.1:
    dependencies:
      yallist: 3.1.1

  lucide-react@0.427.0(react@18.3.1):
    dependencies:
      react: 18.3.1

  lucide-react@0.438.0(react@18.3.1):
    dependencies:
      react: 18.3.1

  lunr@2.3.9: {}

  magic-string@0.30.8:
    dependencies:
      '@jridgewell/sourcemap-codec': 1.5.0

  make-dir@4.0.0:
    dependencies:
      semver: 7.7.1

  make-error@1.3.6: {}

  makeerror@1.0.12:
    dependencies:
      tmpl: 1.0.5

  markdown-it@14.1.0:
    dependencies:
      argparse: 2.0.1
      entities: 4.5.0
      linkify-it: 5.0.0
      mdurl: 2.0.0
      punycode.js: 2.3.1
      uc.micro: 2.1.0

  math-intrinsics@1.1.0: {}

  md5.js@1.3.5:
    dependencies:
      hash-base: 3.1.0
      inherits: 2.0.4
      safe-buffer: 5.2.1

  mdast-util-to-hast@13.2.0:
    dependencies:
      '@types/hast': 3.0.4
      '@types/mdast': 4.0.4
      '@ungap/structured-clone': 1.3.0
      devlop: 1.1.0
      micromark-util-sanitize-uri: 2.0.1
      trim-lines: 3.0.1
      unist-util-position: 5.0.0
      unist-util-visit: 5.0.0
      vfile: 6.0.3

  mdurl@2.0.0: {}

  media-typer@0.3.0: {}

  memfs@3.5.3:
    dependencies:
      fs-monkey: 1.0.6

  merge-descriptors@1.0.3: {}

  merge-stream@2.0.0: {}

  merge2@1.4.1: {}

  methods@1.1.2: {}

  micromark-util-character@2.1.1:
    dependencies:
      micromark-util-symbol: 2.0.1
      micromark-util-types: 2.0.1

  micromark-util-encode@2.0.1: {}

  micromark-util-sanitize-uri@2.0.1:
    dependencies:
      micromark-util-character: 2.1.1
      micromark-util-encode: 2.0.1
      micromark-util-symbol: 2.0.1

  micromark-util-symbol@2.0.1: {}

  micromark-util-types@2.0.1: {}

  micromatch@4.0.8:
    dependencies:
      braces: 3.0.3
      picomatch: 2.3.1

  mime-db@1.52.0: {}

  mime-types@2.1.35:
    dependencies:
      mime-db: 1.52.0

  mime@1.6.0: {}

  mime@2.6.0: {}

  mimic-fn@2.1.0: {}

  minimalistic-assert@1.0.1: {}

  minimalistic-crypto-utils@1.0.1: {}

  minimatch@3.1.2:
    dependencies:
      brace-expansion: 1.1.11

  minimatch@5.1.6:
    dependencies:
      brace-expansion: 2.0.1

  minimatch@9.0.3:
    dependencies:
      brace-expansion: 2.0.1

  minimatch@9.0.5:
    dependencies:
      brace-expansion: 2.0.1

  minimist@1.2.8: {}

  minipass@7.1.2: {}

  mkdirp@0.5.6:
    dependencies:
      minimist: 1.2.8

  mkdirp@1.0.4: {}

  monaco-editor@0.51.0: {}

  mri@1.2.0: {}

  ms@2.0.0: {}

  ms@2.1.3: {}

  multer@1.4.4-lts.1:
    dependencies:
      append-field: 1.0.0
      busboy: 1.6.0
      concat-stream: 1.6.2
      mkdirp: 0.5.6
      object-assign: 4.1.1
      type-is: 1.6.18
      xtend: 4.0.2

  mute-stream@0.0.8: {}

  mute-stream@1.0.0: {}

  mz@2.7.0:
    dependencies:
      any-promise: 1.3.0
      object-assign: 4.1.1
      thenify-all: 1.6.0

  nan@2.22.0: {}

  nanoassert@2.0.0: {}

  nanoid@3.3.8: {}

  natural-compare@1.4.0: {}

  negotiator@0.6.3: {}

  neo-async@2.6.2: {}

  next@14.2.10(@babel/core@7.26.8)(react-dom@18.3.1(react@18.3.1))(react@18.3.1):
    dependencies:
      '@next/env': 14.2.10
      '@swc/helpers': 0.5.5
      busboy: 1.6.0
      caniuse-lite: 1.0.30001698
      graceful-fs: 4.2.11
      postcss: 8.4.31
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
      styled-jsx: 5.1.1(@babel/core@7.26.8)(react@18.3.1)
    optionalDependencies:
      '@next/swc-darwin-arm64': 14.2.10
      '@next/swc-darwin-x64': 14.2.10
      '@next/swc-linux-arm64-gnu': 14.2.10
      '@next/swc-linux-arm64-musl': 14.2.10
      '@next/swc-linux-x64-gnu': 14.2.10
      '@next/swc-linux-x64-musl': 14.2.10
      '@next/swc-win32-arm64-msvc': 14.2.10
      '@next/swc-win32-ia32-msvc': 14.2.10
      '@next/swc-win32-x64-msvc': 14.2.10
    transitivePeerDependencies:
      - '@babel/core'
      - babel-plugin-macros

  next@14.2.8(@babel/core@7.26.8)(react-dom@18.3.1(react@18.3.1))(react@18.3.1):
    dependencies:
      '@next/env': 14.2.8
      '@swc/helpers': 0.5.5
      busboy: 1.6.0
      caniuse-lite: 1.0.30001698
      graceful-fs: 4.2.11
      postcss: 8.4.31
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
      styled-jsx: 5.1.1(@babel/core@7.26.8)(react@18.3.1)
    optionalDependencies:
      '@next/swc-darwin-arm64': 14.2.8
      '@next/swc-darwin-x64': 14.2.8
      '@next/swc-linux-arm64-gnu': 14.2.8
      '@next/swc-linux-arm64-musl': 14.2.8
      '@next/swc-linux-x64-gnu': 14.2.8
      '@next/swc-linux-x64-musl': 14.2.8
      '@next/swc-win32-arm64-msvc': 14.2.8
      '@next/swc-win32-ia32-msvc': 14.2.8
      '@next/swc-win32-x64-msvc': 14.2.8
    transitivePeerDependencies:
      - '@babel/core'
      - babel-plugin-macros

  node-abort-controller@3.1.1: {}

  node-emoji@1.11.0:
    dependencies:
      lodash: 4.17.21

  node-fetch@2.7.0:
    dependencies:
      whatwg-url: 5.0.0

  node-int64@0.4.0: {}

  node-releases@2.0.19: {}

  noms@0.0.0:
    dependencies:
      inherits: 2.0.4
      readable-stream: 1.0.34

  normalize-path@3.0.0: {}

  npm-run-path@4.0.1:
    dependencies:
      path-key: 3.1.1

  object-assign@4.1.1: {}

  object-hash@3.0.0: {}

  object-inspect@1.13.4: {}

  object-keys@1.1.1: {}

  object.assign@4.1.7:
    dependencies:
      call-bind: 1.0.8
      call-bound: 1.0.3
      define-properties: 1.2.1
      es-object-atoms: 1.1.1
      has-symbols: 1.1.0
      object-keys: 1.1.1

  object.entries@1.1.8:
    dependencies:
      call-bind: 1.0.8
      define-properties: 1.2.1
      es-object-atoms: 1.1.1

  object.fromentries@2.0.8:
    dependencies:
      call-bind: 1.0.8
      define-properties: 1.2.1
      es-abstract: 1.23.9
      es-object-atoms: 1.1.1

  object.groupby@1.0.3:
    dependencies:
      call-bind: 1.0.8
      define-properties: 1.2.1
      es-abstract: 1.23.9

  object.values@1.2.1:
    dependencies:
      call-bind: 1.0.8
      call-bound: 1.0.3
      define-properties: 1.2.1
      es-object-atoms: 1.1.1

  on-finished@2.4.1:
    dependencies:
      ee-first: 1.1.1

  once@1.4.0:
    dependencies:
      wrappy: 1.0.2

  onetime@5.1.2:
    dependencies:
      mimic-fn: 2.1.0

  oniguruma-to-es@2.3.0:
    dependencies:
      emoji-regex-xs: 1.0.0
      regex: 5.1.1
      regex-recursion: 5.1.1

  optionator@0.9.4:
    dependencies:
      deep-is: 0.1.4
      fast-levenshtein: 2.0.6
      levn: 0.4.1
      prelude-ls: 1.2.1
      type-check: 0.4.0
      word-wrap: 1.2.5

  ora@5.4.1:
    dependencies:
      bl: 4.1.0
      chalk: 4.1.2
      cli-cursor: 3.1.0
      cli-spinners: 2.9.2
      is-interactive: 1.0.0
      is-unicode-supported: 0.1.0
      log-symbols: 4.1.0
      strip-ansi: 6.0.1
      wcwidth: 1.0.1

  os-tmpdir@1.0.2: {}

  outdent@0.5.0: {}

  own-keys@1.0.1:
    dependencies:
      get-intrinsic: 1.2.7
      object-keys: 1.1.1
      safe-push-apply: 1.0.0

  p-filter@2.1.0:
    dependencies:
      p-map: 2.1.0

  p-limit@2.3.0:
    dependencies:
      p-try: 2.2.0

  p-limit@3.1.0:
    dependencies:
      yocto-queue: 0.1.0

  p-locate@4.1.0:
    dependencies:
      p-limit: 2.3.0

  p-locate@5.0.0:
    dependencies:
      p-limit: 3.1.0

  p-map@2.1.0: {}

  p-try@2.2.0: {}

  package-json-from-dist@1.0.1: {}

  package-manager-detector@0.2.9: {}

  parent-module@1.0.1:
    dependencies:
      callsites: 3.1.0

  parse-json@5.2.0:
    dependencies:
      '@babel/code-frame': 7.26.2
      error-ex: 1.3.2
      json-parse-even-better-errors: 2.3.1
      lines-and-columns: 1.2.4

  parseurl@1.3.3: {}

  path-exists@4.0.0: {}

  path-is-absolute@1.0.1: {}

  path-key@3.1.1: {}

  path-parse@1.0.7: {}

  path-scurry@1.11.1:
    dependencies:
      lru-cache: 10.4.3
      minipass: 7.1.2

  path-to-regexp@0.1.12: {}

  path-to-regexp@3.3.0: {}

  path-type@4.0.0: {}

  picocolors@1.1.1: {}

  picomatch@2.3.1: {}

  picomatch@4.0.1: {}

  picomatch@4.0.2: {}

  pify@2.3.0: {}

  pify@4.0.1: {}

  pirates@4.0.6: {}

  pkg-dir@4.2.0:
    dependencies:
      find-up: 4.1.0

  playground@file:packages/examples/src/playground: {}

  pluralize@8.0.0: {}

  possible-typed-array-names@1.1.0: {}

  postcss-import@15.1.0(postcss@8.5.1):
    dependencies:
      postcss: 8.5.1
      postcss-value-parser: 4.2.0
      read-cache: 1.0.0
      resolve: 1.22.10

  postcss-js@4.0.1(postcss@8.5.1):
    dependencies:
      camelcase-css: 2.0.1
      postcss: 8.5.1

  postcss-load-config@4.0.2(postcss@8.5.1)(ts-node@10.9.2(@types/node@20.17.17)(typescript@5.7.3)):
    dependencies:
      lilconfig: 3.1.3
      yaml: 2.7.0
    optionalDependencies:
      postcss: 8.5.1
      ts-node: 10.9.2(@types/node@20.17.17)(typescript@5.7.3)

  postcss-nested@6.2.0(postcss@8.5.1):
    dependencies:
      postcss: 8.5.1
      postcss-selector-parser: 6.1.2

  postcss-selector-parser@6.1.2:
    dependencies:
      cssesc: 3.0.0
      util-deprecate: 1.0.2

  postcss-value-parser@4.2.0: {}

  postcss@8.4.31:
    dependencies:
      nanoid: 3.3.8
      picocolors: 1.1.1
      source-map-js: 1.2.1

  postcss@8.5.1:
    dependencies:
      nanoid: 3.3.8
      picocolors: 1.1.1
      source-map-js: 1.2.1

  prelude-ls@1.2.1: {}

  prettier-linter-helpers@1.0.0:
    dependencies:
      fast-diff: 1.3.0

  prettier-plugin-organize-imports@3.2.4(prettier@3.4.2)(typescript@5.7.3):
    dependencies:
      prettier: 3.4.2
      typescript: 5.7.3

  prettier-plugin-organize-imports@3.2.4(prettier@3.5.1)(typescript@5.7.3):
    dependencies:
      prettier: 3.5.1
      typescript: 5.7.3
    optional: true

  prettier-plugin-tailwindcss@0.5.14(prettier-plugin-organize-imports@3.2.4(prettier@3.4.2)(typescript@5.7.3))(prettier@3.4.2):
    dependencies:
      prettier: 3.4.2
    optionalDependencies:
      prettier-plugin-organize-imports: 3.2.4(prettier@3.4.2)(typescript@5.7.3)

  prettier-plugin-tailwindcss@0.5.14(prettier-plugin-organize-imports@3.2.4(prettier@3.5.1)(typescript@5.7.3))(prettier@3.5.1):
    dependencies:
      prettier: 3.5.1
    optionalDependencies:
      prettier-plugin-organize-imports: 3.2.4(prettier@3.5.1)(typescript@5.7.3)

  prettier@2.8.8: {}

  prettier@3.4.2: {}

  prettier@3.5.1: {}

  pretty-format@29.7.0:
    dependencies:
      '@jest/schemas': 29.6.3
      ansi-styles: 5.2.0
      react-is: 18.3.1

  pretty-format@30.0.0-alpha.6:
    dependencies:
      '@jest/schemas': 30.0.0-alpha.6
      ansi-styles: 5.2.0
      react-is: 18.3.1

  process-nextick-args@2.0.1: {}

  prompts@2.4.2:
    dependencies:
      kleur: 3.0.3
      sisteransi: 1.0.5

  prop-types@15.8.1:
    dependencies:
      loose-envify: 1.4.0
      object-assign: 4.1.1
      react-is: 16.13.1

  property-information@6.5.0: {}

  proxy-addr@2.0.7:
    dependencies:
      forwarded: 0.2.0
      ipaddr.js: 1.9.1

  proxy-from-env@1.1.0: {}

  punycode.js@2.3.1: {}

  punycode@2.3.1: {}

  pure-rand@6.1.0: {}

  qs@6.13.0:
    dependencies:
      side-channel: 1.1.0

  qs@6.14.0:
    dependencies:
      side-channel: 1.1.0

  queue-microtask@1.2.3: {}

  randombytes@2.1.0:
    dependencies:
      safe-buffer: 5.2.1

  range-parser@1.2.1: {}

  raw-body@2.5.2:
    dependencies:
      bytes: 3.1.2
      http-errors: 2.0.0
      iconv-lite: 0.4.24
      unpipe: 1.0.0

  raw-loader@4.0.2(webpack@5.97.1):
    dependencies:
      loader-utils: 2.0.4
      schema-utils: 3.3.0
      webpack: 5.97.1

  react-dom@18.3.1(react@18.3.1):
    dependencies:
      loose-envify: 1.4.0
      react: 18.3.1
      scheduler: 0.23.2

  react-is@16.13.1: {}

  react-is@18.3.1: {}

  react@18.3.1:
    dependencies:
      loose-envify: 1.4.0

  read-cache@1.0.0:
    dependencies:
      pify: 2.3.0

  read-yaml-file@1.1.0:
    dependencies:
      graceful-fs: 4.2.11
      js-yaml: 3.14.1
      pify: 4.0.1
      strip-bom: 3.0.0

  readable-stream@1.0.34:
    dependencies:
      core-util-is: 1.0.3
      inherits: 2.0.4
      isarray: 0.0.1
      string_decoder: 0.10.31

  readable-stream@2.3.8:
    dependencies:
      core-util-is: 1.0.3
      inherits: 2.0.4
      isarray: 1.0.0
      process-nextick-args: 2.0.1
      safe-buffer: 5.1.2
      string_decoder: 1.1.1
      util-deprecate: 1.0.2

  readable-stream@3.6.2:
    dependencies:
      inherits: 2.0.4
      string_decoder: 1.3.0
      util-deprecate: 1.0.2

  readdirp@3.6.0:
    dependencies:
      picomatch: 2.3.1

  reflect-metadata@0.2.2: {}

  reflect.getprototypeof@1.0.10:
    dependencies:
      call-bind: 1.0.8
      define-properties: 1.2.1
      es-abstract: 1.23.9
      es-errors: 1.3.0
      es-object-atoms: 1.1.1
      get-intrinsic: 1.2.7
      get-proto: 1.0.1
      which-builtin-type: 1.2.1

  regenerator-runtime@0.14.1: {}

  regex-recursion@5.1.1:
    dependencies:
      regex: 5.1.1
      regex-utilities: 2.3.0

  regex-utilities@2.3.0: {}

  regex@5.1.1:
    dependencies:
      regex-utilities: 2.3.0

  regexp.prototype.flags@1.5.4:
    dependencies:
      call-bind: 1.0.8
      define-properties: 1.2.1
      es-errors: 1.3.0
      get-proto: 1.0.1
      gopd: 1.2.0
      set-function-name: 2.0.2

  repeat-string@1.6.1: {}

  require-directory@2.1.1: {}

  require-from-string@2.0.2: {}

  resolve-cwd@3.0.0:
    dependencies:
      resolve-from: 5.0.0

  resolve-from@4.0.0: {}

  resolve-from@5.0.0: {}

  resolve-pkg-maps@1.0.0: {}

  resolve.exports@2.0.3: {}

  resolve@1.22.10:
    dependencies:
      is-core-module: 2.16.1
      path-parse: 1.0.7
      supports-preserve-symlinks-flag: 1.0.0

  resolve@2.0.0-next.5:
    dependencies:
      is-core-module: 2.16.1
      path-parse: 1.0.7
      supports-preserve-symlinks-flag: 1.0.0

  restore-cursor@3.1.0:
    dependencies:
      onetime: 5.1.2
      signal-exit: 3.0.7

  reusify@1.0.4: {}

  rimraf@3.0.2:
    dependencies:
      glob: 7.2.3

  rimraf@5.0.10:
    dependencies:
      glob: 10.4.5

  ripemd160@2.0.2:
    dependencies:
      hash-base: 3.1.0
      inherits: 2.0.4

  run-async@2.4.1: {}

  run-async@3.0.0: {}

  run-parallel@1.2.0:
    dependencies:
      queue-microtask: 1.2.3

  rxjs@7.8.1:
    dependencies:
      tslib: 2.8.1

  safe-array-concat@1.1.3:
    dependencies:
      call-bind: 1.0.8
      call-bound: 1.0.3
      get-intrinsic: 1.2.7
      has-symbols: 1.1.0
      isarray: 2.0.5

  safe-buffer@5.1.2: {}

  safe-buffer@5.2.1: {}

  safe-push-apply@1.0.0:
    dependencies:
      es-errors: 1.3.0
      isarray: 2.0.5

  safe-regex-test@1.1.0:
    dependencies:
      call-bound: 1.0.3
      es-errors: 1.3.0
      is-regex: 1.2.1

  safer-buffer@2.1.2: {}

  scheduler@0.23.2:
    dependencies:
      loose-envify: 1.4.0

  schema-utils@3.3.0:
    dependencies:
      '@types/json-schema': 7.0.15
      ajv: 6.12.6
      ajv-keywords: 3.5.2(ajv@6.12.6)

  schema-utils@4.3.0:
    dependencies:
      '@types/json-schema': 7.0.15
      ajv: 8.17.1
      ajv-formats: 2.1.1(ajv@8.17.1)
      ajv-keywords: 5.1.0(ajv@8.17.1)

  secp256k1@3.8.1:
    dependencies:
      bindings: 1.5.0
      bip66: 1.1.5
      bn.js: 4.12.1
      create-hash: 1.2.0
      drbg.js: 1.0.1
      elliptic: 6.6.1
      nan: 2.22.0
      safe-buffer: 5.2.1

  semver@6.3.1: {}

  semver@7.7.1: {}

  send@0.19.0:
    dependencies:
      debug: 2.6.9
      depd: 2.0.0
      destroy: 1.2.0
      encodeurl: 1.0.2
      escape-html: 1.0.3
      etag: 1.8.1
      fresh: 0.5.2
      http-errors: 2.0.0
      mime: 1.6.0
      ms: 2.1.3
      on-finished: 2.4.1
      range-parser: 1.2.1
      statuses: 2.0.1
    transitivePeerDependencies:
      - supports-color

  serialize-javascript@6.0.2:
    dependencies:
      randombytes: 2.1.0

  serve-static@1.16.2:
    dependencies:
      encodeurl: 2.0.0
      escape-html: 1.0.3
      parseurl: 1.3.3
      send: 0.19.0
    transitivePeerDependencies:
      - supports-color

  set-function-length@1.2.2:
    dependencies:
      define-data-property: 1.1.4
      es-errors: 1.3.0
      function-bind: 1.1.2
      get-intrinsic: 1.2.7
      gopd: 1.2.0
      has-property-descriptors: 1.0.2

  set-function-name@2.0.2:
    dependencies:
      define-data-property: 1.1.4
      es-errors: 1.3.0
      functions-have-names: 1.2.3
      has-property-descriptors: 1.0.2

  set-proto@1.0.0:
    dependencies:
      dunder-proto: 1.0.1
      es-errors: 1.3.0
      es-object-atoms: 1.1.1

  setprototypeof@1.2.0: {}

  sha.js@2.4.11:
    dependencies:
      inherits: 2.0.4
      safe-buffer: 5.2.1

  shebang-command@2.0.0:
    dependencies:
      shebang-regex: 3.0.0

  shebang-regex@3.0.0: {}

  shiki@1.29.2:
    dependencies:
      '@shikijs/core': 1.29.2
      '@shikijs/engine-javascript': 1.29.2
      '@shikijs/engine-oniguruma': 1.29.2
      '@shikijs/langs': 1.29.2
      '@shikijs/themes': 1.29.2
      '@shikijs/types': 1.29.2
      '@shikijs/vscode-textmate': 10.0.1
      '@types/hast': 3.0.4

  side-channel-list@1.0.0:
    dependencies:
      es-errors: 1.3.0
      object-inspect: 1.13.4

  side-channel-map@1.0.1:
    dependencies:
      call-bound: 1.0.3
      es-errors: 1.3.0
      get-intrinsic: 1.2.7
      object-inspect: 1.13.4

  side-channel-weakmap@1.0.2:
    dependencies:
      call-bound: 1.0.3
      es-errors: 1.3.0
      get-intrinsic: 1.2.7
      object-inspect: 1.13.4
      side-channel-map: 1.0.1

  side-channel@1.1.0:
    dependencies:
      es-errors: 1.3.0
      object-inspect: 1.13.4
      side-channel-list: 1.0.0
      side-channel-map: 1.0.1
      side-channel-weakmap: 1.0.2

  signal-exit@3.0.7: {}

  signal-exit@4.1.0: {}

  sisteransi@1.0.5: {}

  slash@3.0.0: {}

  source-map-js@1.2.1: {}

  source-map-support@0.5.13:
    dependencies:
      buffer-from: 1.1.2
      source-map: 0.6.1

  source-map-support@0.5.21:
    dependencies:
      buffer-from: 1.1.2
      source-map: 0.6.1

  source-map@0.6.1: {}

  source-map@0.7.4: {}

  space-separated-tokens@2.0.2: {}

  spawndamnit@3.0.1:
    dependencies:
      cross-spawn: 7.0.6
      signal-exit: 4.1.0

  sprintf-js@1.0.3: {}

  stable-hash@0.0.4: {}

  stack-utils@2.0.6:
    dependencies:
      escape-string-regexp: 2.0.0

  state-local@1.0.7: {}

  statuses@2.0.1: {}

  streamsearch@1.1.0: {}

  string-length@4.0.2:
    dependencies:
      char-regex: 1.0.2
      strip-ansi: 6.0.1

  string-width@4.2.3:
    dependencies:
      emoji-regex: 8.0.0
      is-fullwidth-code-point: 3.0.0
      strip-ansi: 6.0.1

  string-width@5.1.2:
    dependencies:
      eastasianwidth: 0.2.0
      emoji-regex: 9.2.2
      strip-ansi: 7.1.0

  string.prototype.includes@2.0.1:
    dependencies:
      call-bind: 1.0.8
      define-properties: 1.2.1
      es-abstract: 1.23.9

  string.prototype.matchall@4.0.12:
    dependencies:
      call-bind: 1.0.8
      call-bound: 1.0.3
      define-properties: 1.2.1
      es-abstract: 1.23.9
      es-errors: 1.3.0
      es-object-atoms: 1.1.1
      get-intrinsic: 1.2.7
      gopd: 1.2.0
      has-symbols: 1.1.0
      internal-slot: 1.1.0
      regexp.prototype.flags: 1.5.4
      set-function-name: 2.0.2
      side-channel: 1.1.0

  string.prototype.repeat@1.0.0:
    dependencies:
      define-properties: 1.2.1
      es-abstract: 1.23.9

  string.prototype.trim@1.2.10:
    dependencies:
      call-bind: 1.0.8
      call-bound: 1.0.3
      define-data-property: 1.1.4
      define-properties: 1.2.1
      es-abstract: 1.23.9
      es-object-atoms: 1.1.1
      has-property-descriptors: 1.0.2

  string.prototype.trimend@1.0.9:
    dependencies:
      call-bind: 1.0.8
      call-bound: 1.0.3
      define-properties: 1.2.1
      es-object-atoms: 1.1.1

  string.prototype.trimstart@1.0.8:
    dependencies:
      call-bind: 1.0.8
      define-properties: 1.2.1
      es-object-atoms: 1.1.1

  string_decoder@0.10.31: {}

  string_decoder@1.1.1:
    dependencies:
      safe-buffer: 5.1.2

  string_decoder@1.3.0:
    dependencies:
      safe-buffer: 5.2.1

  stringify-entities@4.0.4:
    dependencies:
      character-entities-html4: 2.1.0
      character-entities-legacy: 3.0.0

  strip-ansi@6.0.1:
    dependencies:
      ansi-regex: 5.0.1

  strip-ansi@7.1.0:
    dependencies:
      ansi-regex: 6.1.0

  strip-bom@3.0.0: {}

  strip-bom@4.0.0: {}

  strip-final-newline@2.0.0: {}

  strip-json-comments@3.1.1: {}

  styled-jsx@5.1.1(@babel/core@7.26.8)(react@18.3.1):
    dependencies:
      client-only: 0.0.1
      react: 18.3.1
    optionalDependencies:
      '@babel/core': 7.26.8

  sucrase@3.35.0:
    dependencies:
      '@jridgewell/gen-mapping': 0.3.8
      commander: 4.1.1
      glob: 10.4.5
      lines-and-columns: 1.2.4
      mz: 2.7.0
      pirates: 4.0.6
      ts-interface-checker: 0.1.13

  superagent@9.0.2:
    dependencies:
      component-emitter: 1.3.1
      cookiejar: 2.1.4
      debug: 4.4.0
      fast-safe-stringify: 2.1.1
      form-data: 4.0.1
      formidable: 3.5.2
      methods: 1.1.2
      mime: 2.6.0
      qs: 6.14.0
    transitivePeerDependencies:
      - supports-color

  supertest@7.0.0:
    dependencies:
      methods: 1.1.2
      superagent: 9.0.2
    transitivePeerDependencies:
      - supports-color

  supports-color@7.2.0:
    dependencies:
      has-flag: 4.0.0

  supports-color@8.1.1:
    dependencies:
      has-flag: 4.0.0

  supports-preserve-symlinks-flag@1.0.0: {}

  symbol-observable@4.0.0: {}

  synckit@0.9.2:
    dependencies:
      '@pkgr/core': 0.1.1
      tslib: 2.8.1

  tailwindcss@3.4.17(ts-node@10.9.2(@types/node@20.17.17)(typescript@5.7.3)):
    dependencies:
      '@alloc/quick-lru': 5.2.0
      arg: 5.0.2
      chokidar: 3.6.0
      didyoumean: 1.2.2
      dlv: 1.1.3
      fast-glob: 3.3.3
      glob-parent: 6.0.2
      is-glob: 4.0.3
      jiti: 1.21.7
      lilconfig: 3.1.3
      micromatch: 4.0.8
      normalize-path: 3.0.0
      object-hash: 3.0.0
      picocolors: 1.1.1
      postcss: 8.5.1
      postcss-import: 15.1.0(postcss@8.5.1)
      postcss-js: 4.0.1(postcss@8.5.1)
      postcss-load-config: 4.0.2(postcss@8.5.1)(ts-node@10.9.2(@types/node@20.17.17)(typescript@5.7.3))
      postcss-nested: 6.2.0(postcss@8.5.1)
      postcss-selector-parser: 6.1.2
      resolve: 1.22.10
      sucrase: 3.35.0
    transitivePeerDependencies:
      - ts-node

  tapable@2.2.1: {}

  term-size@2.2.1: {}

  terser-webpack-plugin@5.3.11(webpack@5.97.1):
    dependencies:
      '@jridgewell/trace-mapping': 0.3.25
      jest-worker: 27.5.1
      schema-utils: 4.3.0
      serialize-javascript: 6.0.2
      terser: 5.38.1
      webpack: 5.97.1

  terser@5.38.1:
    dependencies:
      '@jridgewell/source-map': 0.3.6
      acorn: 8.14.0
      commander: 2.20.3
      source-map-support: 0.5.21

  test-exclude@6.0.0:
    dependencies:
      '@istanbuljs/schema': 0.1.3
      glob: 7.2.3
      minimatch: 3.1.2

  text-segmentation@1.0.3:
    dependencies:
      utrie: 1.0.2

  text-table@0.2.0: {}

  thenify-all@1.6.0:
    dependencies:
      thenify: 3.3.1

  thenify@3.3.1:
    dependencies:
      any-promise: 1.3.0

  through2@2.0.5:
    dependencies:
      readable-stream: 2.3.8
      xtend: 4.0.2

  through@2.3.8: {}

  tmp@0.0.33:
    dependencies:
      os-tmpdir: 1.0.2

  tmpl@1.0.5: {}

  to-regex-range@5.0.1:
    dependencies:
      is-number: 7.0.0

  toidentifier@1.0.1: {}

  tr46@0.0.3: {}

  tree-kill@1.2.2: {}

  trim-lines@3.0.1: {}

  ts-api-utils@1.4.3(typescript@5.7.3):
    dependencies:
      typescript: 5.7.3

  ts-essentials@9.4.2(typescript@5.7.3):
    optionalDependencies:
      typescript: 5.7.3

  ts-interface-checker@0.1.13: {}

  ts-jest@29.2.5(@babel/core@7.26.8)(@jest/transform@29.7.0)(@jest/types@29.6.3)(babel-jest@29.7.0(@babel/core@7.26.8))(jest@29.7.0(@types/node@20.17.17)(ts-node@10.9.2(@types/node@20.17.17)(typescript@5.7.3)))(typescript@5.7.3):
    dependencies:
      bs-logger: 0.2.6
      ejs: 3.1.10
      fast-json-stable-stringify: 2.1.0
      jest: 29.7.0(@types/node@20.17.17)(ts-node@10.9.2(@types/node@20.17.17)(typescript@5.7.3))
      jest-util: 29.7.0
      json5: 2.2.3
      lodash.memoize: 4.1.2
      make-error: 1.3.6
      semver: 7.7.1
      typescript: 5.7.3
      yargs-parser: 21.1.1
    optionalDependencies:
      '@babel/core': 7.26.8
      '@jest/transform': 29.7.0
      '@jest/types': 29.6.3
      babel-jest: 29.7.0(@babel/core@7.26.8)

  ts-jest@29.2.5(@babel/core@7.26.8)(@jest/transform@29.7.0)(@jest/types@29.6.3)(babel-jest@29.7.0(@babel/core@7.26.8))(jest@29.7.0(@types/node@22.13.1)(ts-node@10.9.2(@types/node@22.13.1)(typescript@5.7.3)))(typescript@5.7.3):
    dependencies:
      bs-logger: 0.2.6
      ejs: 3.1.10
      fast-json-stable-stringify: 2.1.0
      jest: 29.7.0(@types/node@22.13.1)(ts-node@10.9.2(@types/node@22.13.1)(typescript@5.7.3))
      jest-util: 29.7.0
      json5: 2.2.3
      lodash.memoize: 4.1.2
      make-error: 1.3.6
      semver: 7.7.1
      typescript: 5.7.3
      yargs-parser: 21.1.1
    optionalDependencies:
      '@babel/core': 7.26.8
      '@jest/transform': 29.7.0
      '@jest/types': 29.6.3
      babel-jest: 29.7.0(@babel/core@7.26.8)

  ts-jest@29.2.5(@babel/core@7.26.8)(@jest/transform@29.7.0)(@jest/types@29.6.3)(babel-jest@29.7.0(@babel/core@7.26.8))(jest@30.0.0-alpha.6(@types/node@22.13.1)(ts-node@10.9.2(@types/node@22.13.1)(typescript@5.7.3)))(typescript@5.7.3):
    dependencies:
      bs-logger: 0.2.6
      ejs: 3.1.10
      fast-json-stable-stringify: 2.1.0
      jest: 30.0.0-alpha.6(@types/node@22.13.1)(ts-node@10.9.2(@types/node@22.13.1)(typescript@5.7.3))
      jest-util: 29.7.0
      json5: 2.2.3
      lodash.memoize: 4.1.2
      make-error: 1.3.6
      semver: 7.7.1
      typescript: 5.7.3
      yargs-parser: 21.1.1
    optionalDependencies:
      '@babel/core': 7.26.8
      '@jest/transform': 29.7.0
      '@jest/types': 29.6.3
      babel-jest: 29.7.0(@babel/core@7.26.8)

  ts-loader@9.5.2(typescript@5.7.3)(webpack@5.97.1):
    dependencies:
      chalk: 4.1.2
      enhanced-resolve: 5.18.1
      micromatch: 4.0.8
      semver: 7.7.1
      source-map: 0.7.4
      typescript: 5.7.3
      webpack: 5.97.1

  ts-node@10.9.2(@types/node@20.17.17)(typescript@5.7.3):
    dependencies:
      '@cspotcode/source-map-support': 0.8.1
      '@tsconfig/node10': 1.0.11
      '@tsconfig/node12': 1.0.11
      '@tsconfig/node14': 1.0.3
      '@tsconfig/node16': 1.0.4
      '@types/node': 20.17.17
      acorn: 8.14.0
      acorn-walk: 8.3.4
      arg: 4.1.3
      create-require: 1.1.1
      diff: 4.0.2
      make-error: 1.3.6
      typescript: 5.7.3
      v8-compile-cache-lib: 3.0.1
      yn: 3.1.1

  ts-node@10.9.2(@types/node@22.13.1)(typescript@5.7.3):
    dependencies:
      '@cspotcode/source-map-support': 0.8.1
      '@tsconfig/node10': 1.0.11
      '@tsconfig/node12': 1.0.11
      '@tsconfig/node14': 1.0.3
      '@tsconfig/node16': 1.0.4
      '@types/node': 22.13.1
      acorn: 8.14.0
      acorn-walk: 8.3.4
      arg: 4.1.3
      create-require: 1.1.1
      diff: 4.0.2
      make-error: 1.3.6
      typescript: 5.7.3
      v8-compile-cache-lib: 3.0.1
      yn: 3.1.1
    optional: true

  tsconfig-paths-webpack-plugin@4.2.0:
    dependencies:
      chalk: 4.1.2
      enhanced-resolve: 5.18.1
      tapable: 2.2.1
      tsconfig-paths: 4.2.0

  tsconfig-paths@3.15.0:
    dependencies:
      '@types/json5': 0.0.29
      json5: 1.0.2
      minimist: 1.2.8
      strip-bom: 3.0.0

  tsconfig-paths@4.2.0:
    dependencies:
      json5: 2.2.3
      minimist: 1.2.8
      strip-bom: 3.0.0

  tslib@2.3.1: {}

  tslib@2.7.0: {}

  tslib@2.8.1: {}

  type-check@0.4.0:
    dependencies:
      prelude-ls: 1.2.1

  type-detect@4.0.8: {}

  type-fest@0.20.2: {}

  type-fest@0.21.3: {}

  type-fest@4.6.0: {}

  type-is@1.6.18:
    dependencies:
      media-typer: 0.3.0
      mime-types: 2.1.35

  typed-array-buffer@1.0.3:
    dependencies:
      call-bound: 1.0.3
      es-errors: 1.3.0
      is-typed-array: 1.1.15

  typed-array-byte-length@1.0.3:
    dependencies:
      call-bind: 1.0.8
      for-each: 0.3.4
      gopd: 1.2.0
      has-proto: 1.2.0
      is-typed-array: 1.1.15

  typed-array-byte-offset@1.0.4:
    dependencies:
      available-typed-arrays: 1.0.7
      call-bind: 1.0.8
      for-each: 0.3.4
      gopd: 1.2.0
      has-proto: 1.2.0
      is-typed-array: 1.1.15
      reflect.getprototypeof: 1.0.10

  typed-array-length@1.0.7:
    dependencies:
      call-bind: 1.0.8
      for-each: 0.3.4
      gopd: 1.2.0
      is-typed-array: 1.1.15
      possible-typed-array-names: 1.1.0
      reflect.getprototypeof: 1.0.10

  typedarray@0.0.6: {}

  typedoc-material-theme@1.3.0(typedoc@0.26.11(typescript@5.7.3)):
    dependencies:
      '@material/material-color-utilities': 0.3.0
      typedoc: 0.26.11(typescript@5.7.3)

  typedoc-plugin-extras@3.1.0(typedoc@0.26.11(typescript@5.7.3)):
    dependencies:
      typedoc: 0.26.11(typescript@5.7.3)

  typedoc@0.26.11(typescript@5.7.3):
    dependencies:
      lunr: 2.3.9
      markdown-it: 14.1.0
      minimatch: 9.0.5
      shiki: 1.29.2
      typescript: 5.7.3
      yaml: 2.7.0

  typescript-eslint@7.18.0(eslint@9.20.0(jiti@1.21.7))(typescript@5.7.3):
    dependencies:
      '@typescript-eslint/eslint-plugin': 7.18.0(@typescript-eslint/parser@7.18.0(eslint@9.20.0(jiti@1.21.7))(typescript@5.7.3))(eslint@9.20.0(jiti@1.21.7))(typescript@5.7.3)
      '@typescript-eslint/parser': 7.18.0(eslint@9.20.0(jiti@1.21.7))(typescript@5.7.3)
      '@typescript-eslint/utils': 7.18.0(eslint@9.20.0(jiti@1.21.7))(typescript@5.7.3)
      eslint: 9.20.0(jiti@1.21.7)
    optionalDependencies:
      typescript: 5.7.3
    transitivePeerDependencies:
      - supports-color

  typescript@5.7.2: {}

  typescript@5.7.3: {}

  uc.micro@2.1.0: {}

  uid@2.0.2:
    dependencies:
      '@lukeed/csprng': 1.1.0

  unbox-primitive@1.1.0:
    dependencies:
      call-bound: 1.0.3
      has-bigints: 1.1.0
      has-symbols: 1.1.0
      which-boxed-primitive: 1.1.1

  uncrypto@0.1.3: {}

  undici-types@6.19.8: {}

  undici-types@6.20.0: {}

  unist-util-is@6.0.0:
    dependencies:
      '@types/unist': 3.0.3

  unist-util-position@5.0.0:
    dependencies:
      '@types/unist': 3.0.3

  unist-util-stringify-position@4.0.0:
    dependencies:
      '@types/unist': 3.0.3

  unist-util-visit-parents@6.0.1:
    dependencies:
      '@types/unist': 3.0.3
      unist-util-is: 6.0.0

  unist-util-visit@5.0.0:
    dependencies:
      '@types/unist': 3.0.3
      unist-util-is: 6.0.0
      unist-util-visit-parents: 6.0.1

  universalify@0.1.2: {}

  universalify@2.0.1: {}

  unpipe@1.0.0: {}

  untildify@4.0.0: {}

  update-browserslist-db@1.1.2(browserslist@4.24.4):
    dependencies:
      browserslist: 4.24.4
      escalade: 3.2.0
      picocolors: 1.1.1

  uri-js@4.4.1:
    dependencies:
      punycode: 2.3.1

  util-deprecate@1.0.2: {}

  utils-merge@1.0.1: {}

  utrie@1.0.2:
    dependencies:
      base64-arraybuffer: 1.0.2

  v8-compile-cache-lib@3.0.1: {}

  v8-to-istanbul@9.3.0:
    dependencies:
      '@jridgewell/trace-mapping': 0.3.25
      '@types/istanbul-lib-coverage': 2.0.6
      convert-source-map: 2.0.0

  valibot@0.42.1(typescript@5.7.3):
    optionalDependencies:
      typescript: 5.7.3

  validator@13.12.0: {}

  varuint-bitcoin@1.1.2:
    dependencies:
      safe-buffer: 5.2.1

  vary@1.1.2: {}

  vfile-message@4.0.2:
    dependencies:
      '@types/unist': 3.0.3
      unist-util-stringify-position: 4.0.0

  vfile@6.0.3:
    dependencies:
      '@types/unist': 3.0.3
      vfile-message: 4.0.2

  walker@1.0.8:
    dependencies:
      makeerror: 1.0.12

  watchpack@2.4.2:
    dependencies:
      glob-to-regexp: 0.4.1
      graceful-fs: 4.2.11

  wcwidth@1.0.1:
    dependencies:
      defaults: 1.0.4

  webidl-conversions@3.0.1: {}

  webpack-node-externals@3.0.0: {}

  webpack-sources@3.2.3: {}

  webpack@5.97.1:
    dependencies:
      '@types/eslint-scope': 3.7.7
      '@types/estree': 1.0.6
      '@webassemblyjs/ast': 1.14.1
      '@webassemblyjs/wasm-edit': 1.14.1
      '@webassemblyjs/wasm-parser': 1.14.1
      acorn: 8.14.0
      browserslist: 4.24.4
      chrome-trace-event: 1.0.4
      enhanced-resolve: 5.18.1
      es-module-lexer: 1.6.0
      eslint-scope: 5.1.1
      events: 3.3.0
      glob-to-regexp: 0.4.1
      graceful-fs: 4.2.11
      json-parse-even-better-errors: 2.3.1
      loader-runner: 4.3.0
      mime-types: 2.1.35
      neo-async: 2.6.2
      schema-utils: 3.3.0
      tapable: 2.2.1
      terser-webpack-plugin: 5.3.11(webpack@5.97.1)
      watchpack: 2.4.2
      webpack-sources: 3.2.3
    transitivePeerDependencies:
      - '@swc/core'
      - esbuild
      - uglify-js

  whatwg-url@5.0.0:
    dependencies:
      tr46: 0.0.3
      webidl-conversions: 3.0.1

  which-boxed-primitive@1.1.1:
    dependencies:
      is-bigint: 1.1.0
      is-boolean-object: 1.2.2
      is-number-object: 1.1.1
      is-string: 1.1.1
      is-symbol: 1.1.1

  which-builtin-type@1.2.1:
    dependencies:
      call-bound: 1.0.3
      function.prototype.name: 1.1.8
      has-tostringtag: 1.0.2
      is-async-function: 2.1.1
      is-date-object: 1.1.0
      is-finalizationregistry: 1.1.1
      is-generator-function: 1.1.0
      is-regex: 1.2.1
      is-weakref: 1.1.1
      isarray: 2.0.5
      which-boxed-primitive: 1.1.1
      which-collection: 1.0.2
      which-typed-array: 1.1.18

  which-collection@1.0.2:
    dependencies:
      is-map: 2.0.3
      is-set: 2.0.3
      is-weakmap: 2.0.2
      is-weakset: 2.0.4

  which-typed-array@1.1.18:
    dependencies:
      available-typed-arrays: 1.0.7
      call-bind: 1.0.8
      call-bound: 1.0.3
      for-each: 0.3.4
      gopd: 1.2.0
      has-tostringtag: 1.0.2

  which@2.0.2:
    dependencies:
      isexe: 2.0.0

  word-wrap@1.2.5: {}

  wrap-ansi@6.2.0:
    dependencies:
      ansi-styles: 4.3.0
      string-width: 4.2.3
      strip-ansi: 6.0.1

  wrap-ansi@7.0.0:
    dependencies:
      ansi-styles: 4.3.0
      string-width: 4.2.3
      strip-ansi: 6.0.1

  wrap-ansi@8.1.0:
    dependencies:
      ansi-styles: 6.2.1
      string-width: 5.1.2
      strip-ansi: 7.1.0

  wrappy@1.0.2: {}

  write-file-atomic@4.0.2:
    dependencies:
      imurmurhash: 0.1.4
      signal-exit: 3.0.7

  write-file-atomic@5.0.1:
    dependencies:
      imurmurhash: 0.1.4
      signal-exit: 4.1.0

  ws@8.17.1: {}

  ws@8.18.0: {}

  xtend@4.0.2: {}

  y18n@5.0.8: {}

  yallist@3.1.1: {}

  yaml@2.7.0: {}

  yargs-parser@20.2.9: {}

  yargs-parser@21.1.1: {}

  yargs@16.2.0:
    dependencies:
      cliui: 7.0.4
      escalade: 3.2.0
      get-caller-file: 2.0.5
      require-directory: 2.1.1
      string-width: 4.2.3
      y18n: 5.0.8
      yargs-parser: 20.2.9

  yargs@17.7.2:
    dependencies:
      cliui: 8.0.1
      escalade: 3.2.0
      get-caller-file: 2.0.5
      require-directory: 2.1.1
      string-width: 4.2.3
      y18n: 5.0.8
      yargs-parser: 21.1.1

  yn@3.1.1: {}

  yocto-queue@0.1.0: {}

  zwitch@2.0.4: {}


================================================
File: pnpm-workspace.yaml
================================================
packages:
  - "packages/*"


================================================
File: tsconfig.base.json
================================================
{
  "compilerOptions": {
    "target": "es2020",
    "incremental": true,
    "allowJs": true,
    "importHelpers": false,
    "declaration": true,
    "declarationMap": true,
    "experimentalDecorators": true,
    "useDefineForClassFields": false,
    "esModuleInterop": true,
    "strict": true,
    "noImplicitAny": true,
    "strictBindCallApply": true,
    "strictNullChecks": true,
    "alwaysStrict": true,
    "noFallthroughCasesInSwitch": true,
    "forceConsistentCasingInFileNames": true
  },
  "include": ["packages/**/*"]
}


================================================
File: tsconfig.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "ESNext",
    "moduleResolution": "Bundler",
    "outDir": "./dist"
  }
}


================================================
File: typedoc.base.json
================================================
{
  "$schema": "https://typedoc.org/schema.json",
  "sourceLinkTemplate": "https://github.com/ckb-devrel/ccc/blob/master/{path}#L{line}",
  "excludeReferences": true,
  "excludeExternals": true,
  "externalPattern": [
    "**/dist/**",
    "./node_modules/**"
  ],
  "sort": [
    "source-order",
    "alphabetical",
    "kind"
  ]
}


================================================
File: typedoc.json
================================================
{
  "$schema": "https://typedoc.org/schema.json",
  "name": "CCC Docs",
  "entryPoints": [
    "packages/core",
    "packages/ssri",
    "packages/udt",
    "packages/spore",
    "packages/shell",
    "packages/ccc",
    "packages/connector",
    "packages/connector-react",
    "packages/utxo-global",
    "packages/rei",
    "packages/joy-id",
    "packages/okx",
    "packages/xverse",
    "packages/uni-sat",
    "packages/nip07",
    "packages/eip6963",
    "packages/lumos-patches",
  ],
  "entryPointStrategy": "packages",
  "githubPages": true,
  "navigationLinks": {
    "GitHub": "https://github.com/ckb-devrel/ccc",
    "App": "https://app.ckbccc.com",
  },
  "hostedBaseUrl": "https://docs.ckbccc.com",
  "customCss": "./assets/typedoc.css",
  "plugin": [
    "typedoc-material-theme",
    "typedoc-plugin-extras"
  ],
  "themeColor": "#434343",
  "favicon": "assets/logo.svg",
  "customDescription": "Docs for CCC",
  "footerLastModified": true
}

================================================
File: assets/typedoc.css
================================================
a.title {
  display: inline !important;
  width: auto !important;
}

================================================
File: config/eslint.config.mjs
================================================
// @ts-check

import eslint from "@eslint/js";
import eslintPluginPrettierRecommended from "eslint-plugin-prettier/recommended";
import tseslint from "typescript-eslint";

import { dirname } from "path";
import { fileURLToPath } from "url";

export default [
  ...tseslint.config({
    files: ["**/*.ts"],
    extends: [
      eslint.configs.recommended,
      ...tseslint.configs.recommendedTypeChecked,
    ],
    rules: {
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          args: "all",
          argsIgnorePattern: "^_",
          caughtErrors: "all",
          caughtErrorsIgnorePattern: "^_",
          destructuredArrayIgnorePattern: "^_",
          varsIgnorePattern: "^_",
          ignoreRestSiblings: true,
        },
      ],
      "@typescript-eslint/unbound-method": ["error", { ignoreStatic: true }],
      "@typescript-eslint/no-unsafe-member-access": "off",
      "@typescript-eslint/require-await": "off",
      "no-empty": "off",
      "prefer-const": [
        "error",
        { ignoreReadBeforeAssign: true, destructuring: "all" },
      ],
    },
    languageOptions: {
      parserOptions: {
        project: true,
        tsconfigRootDir: dirname(fileURLToPath(import.meta.url)),
      },
    },
  }),
  eslintPluginPrettierRecommended,
];


================================================
File: config/tsconfig.base.json
================================================
{
  "compilerOptions": {
    "target": "es2020",
    "incremental": true,
    "allowJs": true,
    "importHelpers": false,
    "declaration": true,
    "declarationMap": true,
    "experimentalDecorators": true,
    "useDefineForClassFields": false,
    "esModuleInterop": true,
    "strict": true,
    "noImplicitAny": true,
    "strictBindCallApply": true,
    "strictNullChecks": true,
    "alwaysStrict": true,
    "noFallthroughCasesInSwitch": true,
    "forceConsistentCasingInFileNames": true,
    "skipLibCheck": true
  },
  "include": ["src/**/*"]
}


================================================
File: config/tsconfig.commonjs.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "NodeNext",
    "moduleResolution": "NodeNext",
    "outDir": "./dist.commonjs"
  }
}


================================================
File: config/tsconfig.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "ESNext",
    "moduleResolution": "Bundler",
    "outDir": "./dist",
  }
}


================================================
File: config/.npmignore
================================================
node_modules/
misc/

*test.js
*test.ts
*test.d.ts
*test.d.ts.map
*spec.js
*spec.ts
*spec.d.ts
*spec.d.ts.map

tsconfig.json
tsconfig.*.json
eslint.config.mjs
.prettierrc
.prettierignore

tsconfig.tsbuildinfo
tsconfig.*.tsbuildinfo
.github/


================================================
File: config/.prettierignore
================================================
node_modules/

dist/
dist.commonjs/

.npmignore
.prettierrc
tsconfig.json
eslint.config.mjs
.prettierrc

tsconfig.tsbuildinfo
.github/


================================================
File: config/.prettierrc
================================================
{
  "singleQuote": false,
  "trailingComma": "all",
  "plugins": ["prettier-plugin-organize-imports"]
}


================================================
File: packages/ccc/README.md
================================================
<p align="center">
  <a href="https://app.ckbccc.com/">
    <img alt="Logo" src="https://raw.githubusercontent.com/ckb-devrel/ccc/master/assets/logoAndText.svg" style="height: 8rem; max-width: 90%; padding: 0.5rem 0;" />
  </a>
</p>

<h1 align="center" style="font-size: 64px;">
  CCC
</h1>

<p align="center">
  <a href="https://www.npmjs.com/package/@ckb-ccc/ccc"><img
    alt="NPM Version" src="https://img.shields.io/npm/v/%40ckb-ccc%2Fccc"
  /></a>
  <img alt="GitHub commit activity" src="https://img.shields.io/github/commit-activity/m/ckb-devrel/ccc" />
  <img alt="GitHub last commit" src="https://img.shields.io/github/last-commit/ckb-devrel/ccc/master" />
  <img alt="GitHub branch check runs" src="https://img.shields.io/github/check-runs/ckb-devrel/ccc/master" />
  <a href="https://live.ckbccc.com/"><img
    alt="Playground" src="https://img.shields.io/website?url=https%3A%2F%2Flive.ckbccc.com%2F&label=Playground"
  /></a>
  <a href="https://app.ckbccc.com/"><img
    alt="App" src="https://img.shields.io/website?url=https%3A%2F%2Fapp.ckbccc.com%2F&label=App"
  /></a>
  <a href="https://docs.ckbccc.com/"><img
    alt="Docs" src="https://img.shields.io/website?url=https%3A%2F%2Fdocs.ckbccc.com%2F&label=Docs"
  /></a>
</p>

<p align="center">
  CCC - CKBers' Codebase is a one-stop solution for your CKB JS/TS ecosystem development. 
  <br />
  Empower yourself with CCC to discover the unlimited potential of CKB.
  <br />
  Interoperate with wallets from different chain ecosystems.
  <br />
  Fully enabling CKB's Turing completeness and cryptographic freedom power.
</p>

<h3 align="center">
  Read more about CCC on <a href="https://docs.ckbccc.com">our website</a> or <a href="https://github.com/ckb-devrel/ccc">GitHub Repo</a>.
</h3>


================================================
File: packages/ccc/CHANGELOG.md
================================================
# @ckb-ccc/ccc

## 1.1.3

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/eip6963@1.0.11
  - @ckb-ccc/joy-id@1.0.11
  - @ckb-ccc/nip07@1.0.11
  - @ckb-ccc/okx@1.0.11
  - @ckb-ccc/rei@1.0.11
  - @ckb-ccc/shell@1.1.3
  - @ckb-ccc/uni-sat@1.0.11
  - @ckb-ccc/utxo-global@1.0.11
  - @ckb-ccc/xverse@1.0.11

## 1.1.2

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/shell@1.1.2
  - @ckb-ccc/eip6963@1.0.10
  - @ckb-ccc/joy-id@1.0.10
  - @ckb-ccc/nip07@1.0.10
  - @ckb-ccc/okx@1.0.10
  - @ckb-ccc/rei@1.0.10
  - @ckb-ccc/uni-sat@1.0.10
  - @ckb-ccc/utxo-global@1.0.10
  - @ckb-ccc/xverse@1.0.10

## 1.1.1

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/shell@1.1.1
  - @ckb-ccc/eip6963@1.0.9
  - @ckb-ccc/joy-id@1.0.9
  - @ckb-ccc/nip07@1.0.9
  - @ckb-ccc/okx@1.0.9
  - @ckb-ccc/rei@1.0.9
  - @ckb-ccc/uni-sat@1.0.9
  - @ckb-ccc/utxo-global@1.0.9
  - @ckb-ccc/xverse@1.0.9

## 1.1.0

### Minor Changes

- [#130](https://github.com/ckb-devrel/ccc/pull/130) [`8c97c85`](https://github.com/ckb-devrel/ccc/commit/8c97c851db4a2d940c7e59116ca7620cfd0afae1) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: export backend packages in @ckb-ccc/shell

### Patch Changes

- Updated dependencies [[`8c97c85`](https://github.com/ckb-devrel/ccc/commit/8c97c851db4a2d940c7e59116ca7620cfd0afae1)]:
  - @ckb-ccc/shell@1.1.0
  - @ckb-ccc/eip6963@1.0.8
  - @ckb-ccc/joy-id@1.0.8
  - @ckb-ccc/nip07@1.0.8
  - @ckb-ccc/okx@1.0.8
  - @ckb-ccc/rei@1.0.8
  - @ckb-ccc/uni-sat@1.0.8
  - @ckb-ccc/utxo-global@1.0.8
  - @ckb-ccc/xverse@1.0.8

## 1.0.7

### Patch Changes

- Updated dependencies [[`01263bd`](https://github.com/ckb-devrel/ccc/commit/01263bd8c601fa8fcdfa24be52601716e1864843)]:
  - @ckb-ccc/core@1.2.3
  - @ckb-ccc/eip6963@1.0.7
  - @ckb-ccc/joy-id@1.0.7
  - @ckb-ccc/nip07@1.0.7
  - @ckb-ccc/okx@1.0.7
  - @ckb-ccc/rei@1.0.7
  - @ckb-ccc/uni-sat@1.0.7
  - @ckb-ccc/utxo-global@1.0.7
  - @ckb-ccc/xverse@1.0.7

## 1.0.6

### Patch Changes

- Updated dependencies [[`7886e3d`](https://github.com/ckb-devrel/ccc/commit/7886e3d89e9ca8f3514a2044c6dd4e8ec6b49933)]:
  - @ckb-ccc/core@1.2.2
  - @ckb-ccc/eip6963@1.0.6
  - @ckb-ccc/joy-id@1.0.6
  - @ckb-ccc/nip07@1.0.6
  - @ckb-ccc/okx@1.0.6
  - @ckb-ccc/rei@1.0.6
  - @ckb-ccc/uni-sat@1.0.6
  - @ckb-ccc/utxo-global@1.0.6
  - @ckb-ccc/xverse@1.0.6

## 1.0.5

### Patch Changes

- Updated dependencies [[`94e2618`](https://github.com/ckb-devrel/ccc/commit/94e26182515e09d6086ec5b653d091f117a499e6)]:
  - @ckb-ccc/core@1.2.1
  - @ckb-ccc/eip6963@1.0.5
  - @ckb-ccc/joy-id@1.0.5
  - @ckb-ccc/nip07@1.0.5
  - @ckb-ccc/okx@1.0.5
  - @ckb-ccc/rei@1.0.5
  - @ckb-ccc/uni-sat@1.0.5
  - @ckb-ccc/utxo-global@1.0.5
  - @ckb-ccc/xverse@1.0.5

## 1.0.4

### Patch Changes

- Updated dependencies [[`128e87b`](https://github.com/ckb-devrel/ccc/commit/128e87b5ca3e97bfe7842e76f786aa6aec010797)]:
  - @ckb-ccc/core@1.2.0
  - @ckb-ccc/eip6963@1.0.4
  - @ckb-ccc/joy-id@1.0.4
  - @ckb-ccc/nip07@1.0.4
  - @ckb-ccc/okx@1.0.4
  - @ckb-ccc/rei@1.0.4
  - @ckb-ccc/uni-sat@1.0.4
  - @ckb-ccc/utxo-global@1.0.4
  - @ckb-ccc/xverse@1.0.4

## 1.0.3

### Patch Changes

- Updated dependencies [[`925991c`](https://github.com/ckb-devrel/ccc/commit/925991c8a24b1f34667e30b28b69812e936e3928)]:
  - @ckb-ccc/core@1.1.1
  - @ckb-ccc/eip6963@1.0.3
  - @ckb-ccc/joy-id@1.0.3
  - @ckb-ccc/nip07@1.0.3
  - @ckb-ccc/okx@1.0.3
  - @ckb-ccc/rei@1.0.3
  - @ckb-ccc/uni-sat@1.0.3
  - @ckb-ccc/utxo-global@1.0.3
  - @ckb-ccc/xverse@1.0.3

## 1.0.2

### Patch Changes

- Updated dependencies [[`ddc0a28`](https://github.com/ckb-devrel/ccc/commit/ddc0a281c3d1dfa6ebc990dae92994f026dfddcc)]:
  - @ckb-ccc/core@1.1.0
  - @ckb-ccc/eip6963@1.0.2
  - @ckb-ccc/joy-id@1.0.2
  - @ckb-ccc/nip07@1.0.2
  - @ckb-ccc/okx@1.0.2
  - @ckb-ccc/rei@1.0.2
  - @ckb-ccc/uni-sat@1.0.2
  - @ckb-ccc/utxo-global@1.0.2
  - @ckb-ccc/xverse@1.0.2

## 1.0.1

### Patch Changes

- Updated dependencies [[`719055b`](https://github.com/ckb-devrel/ccc/commit/719055b404f31b40362f51714b9f11c85b857581), [`94caaca`](https://github.com/ckb-devrel/ccc/commit/94caaca11c63752a25282d42f51161c94397dec6)]:
  - @ckb-ccc/core@1.0.1
  - @ckb-ccc/eip6963@1.0.1
  - @ckb-ccc/joy-id@1.0.1
  - @ckb-ccc/nip07@1.0.1
  - @ckb-ccc/okx@1.0.1
  - @ckb-ccc/rei@1.0.1
  - @ckb-ccc/uni-sat@1.0.1
  - @ckb-ccc/utxo-global@1.0.1
  - @ckb-ccc/xverse@1.0.1

## 1.0.0

### Major Changes

- [#107](https://github.com/ckb-devrel/ccc/pull/107) [`b99f55f`](https://github.com/ckb-devrel/ccc/commit/b99f55f74e64106391ce53f7d0bd0fa7522023cc) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: molecule

### Patch Changes

- Updated dependencies [[`b99f55f`](https://github.com/ckb-devrel/ccc/commit/b99f55f74e64106391ce53f7d0bd0fa7522023cc)]:
  - @ckb-ccc/core@1.0.0
  - @ckb-ccc/eip6963@1.0.0
  - @ckb-ccc/joy-id@1.0.0
  - @ckb-ccc/nip07@1.0.0
  - @ckb-ccc/okx@1.0.0
  - @ckb-ccc/rei@1.0.0
  - @ckb-ccc/uni-sat@1.0.0
  - @ckb-ccc/utxo-global@1.0.0
  - @ckb-ccc/xverse@1.0.0

## 0.0.18

### Patch Changes

- Updated dependencies [[`c1cb910`](https://github.com/ckb-devrel/ccc/commit/c1cb91091780c7b33fbbd683ef8edc9f11452ecd)]:
  - @ckb-ccc/core@0.1.2
  - @ckb-ccc/eip6963@0.0.18
  - @ckb-ccc/joy-id@0.0.18
  - @ckb-ccc/nip07@0.0.18
  - @ckb-ccc/okx@0.0.18
  - @ckb-ccc/rei@0.0.18
  - @ckb-ccc/uni-sat@0.0.18
  - @ckb-ccc/utxo-global@0.0.18
  - @ckb-ccc/xverse@0.0.17

## 0.0.17

### Patch Changes

- [#101](https://github.com/ckb-devrel/ccc/pull/101) [`d9affcc`](https://github.com/ckb-devrel/ccc/commit/d9affcc01c7b839b227e4d79bcb66e717577502a) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix: commonjs

- Updated dependencies [[`d9affcc`](https://github.com/ckb-devrel/ccc/commit/d9affcc01c7b839b227e4d79bcb66e717577502a)]:
  - @ckb-ccc/utxo-global@0.0.17
  - @ckb-ccc/eip6963@0.0.17
  - @ckb-ccc/uni-sat@0.0.17
  - @ckb-ccc/joy-id@0.0.17
  - @ckb-ccc/xverse@0.0.16
  - @ckb-ccc/nip07@0.0.17
  - @ckb-ccc/core@0.1.1
  - @ckb-ccc/okx@0.0.17
  - @ckb-ccc/rei@0.0.17

## 0.0.16

### Patch Changes

- [#69](https://github.com/ckb-devrel/ccc/pull/69) [`8824ff2`](https://github.com/ckb-devrel/ccc/commit/8824ff27af3b76186f1a7d6db8c907cd66f09d6a) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Client.waitTransaction

- [#70](https://github.com/ckb-devrel/ccc/pull/70) [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): websocket transport

- [#96](https://github.com/ckb-devrel/ccc/pull/96) [`e63a06e`](https://github.com/ckb-devrel/ccc/commit/e63a06ee75ac8595208d216dec88a4228c465e23) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: support doge signer

- [#67](https://github.com/ckb-devrel/ccc/pull/67) [`c092988`](https://github.com/ckb-devrel/ccc/commit/c092988e7765b9ac79498d6bd72a6a2f62859b6f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): auto fee rate

- [#60](https://github.com/ckb-devrel/ccc/pull/60) [`e904963`](https://github.com/ckb-devrel/ccc/commit/e904963a16f12c410d861eb3ae01b87d68cb3e34) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: support Xverse

- Updated dependencies [[`a3d5359`](https://github.com/ckb-devrel/ccc/commit/a3d53595f6dd11f2f59cdf0086b3d7ce558a2fdd), [`8824ff2`](https://github.com/ckb-devrel/ccc/commit/8824ff27af3b76186f1a7d6db8c907cd66f09d6a), [`f07a506`](https://github.com/ckb-devrel/ccc/commit/f07a506bd6fc27fe659a17d2f7baaeec54716d81), [`f21d7e4`](https://github.com/ckb-devrel/ccc/commit/f21d7e4cf422edab4a836ef6d678b620594fef8d), [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366), [`1720d5a`](https://github.com/ckb-devrel/ccc/commit/1720d5a398543f1c6e24763eeaf15d84cd2214bf), [`e63a06e`](https://github.com/ckb-devrel/ccc/commit/e63a06ee75ac8595208d216dec88a4228c465e23), [`91832b1`](https://github.com/ckb-devrel/ccc/commit/91832b103c5d7a1272060639f77754a1c731a753), [`c092988`](https://github.com/ckb-devrel/ccc/commit/c092988e7765b9ac79498d6bd72a6a2f62859b6f), [`e904963`](https://github.com/ckb-devrel/ccc/commit/e904963a16f12c410d861eb3ae01b87d68cb3e34), [`50f2ce0`](https://github.com/ckb-devrel/ccc/commit/50f2ce08e74cb3fbeae926267d42e28b426fd7f4), [`4709384`](https://github.com/ckb-devrel/ccc/commit/4709384e37188991cb937b16f99f47ca82c912b8)]:
  - @ckb-ccc/core@0.1.0
  - @ckb-ccc/eip6963@0.0.16
  - @ckb-ccc/joy-id@0.0.16
  - @ckb-ccc/nip07@0.0.16
  - @ckb-ccc/okx@0.0.16
  - @ckb-ccc/rei@0.0.16
  - @ckb-ccc/uni-sat@0.0.16
  - @ckb-ccc/utxo-global@0.0.16
  - @ckb-ccc/xverse@0.0.15

## 0.0.16-alpha.9

### Patch Changes

- Updated dependencies [[`f07a506`](https://github.com/ckb-devrel/ccc/commit/f07a506bd6fc27fe659a17d2f7baaeec54716d81)]:
  - @ckb-ccc/core@0.1.0-alpha.7
  - @ckb-ccc/eip6963@0.0.16-alpha.7
  - @ckb-ccc/joy-id@0.0.16-alpha.7
  - @ckb-ccc/nip07@0.0.16-alpha.7
  - @ckb-ccc/okx@0.0.16-alpha.7
  - @ckb-ccc/rei@0.0.16-alpha.7
  - @ckb-ccc/uni-sat@0.0.16-alpha.7
  - @ckb-ccc/utxo-global@0.0.16-alpha.7
  - @ckb-ccc/xverse@0.0.15-alpha.9

## 0.0.16-alpha.8

### Patch Changes

- Updated dependencies [[`4709384`](https://github.com/ckb-devrel/ccc/commit/4709384e37188991cb937b16f99f47ca82c912b8)]:
  - @ckb-ccc/core@0.1.0-alpha.6
  - @ckb-ccc/eip6963@0.0.16-alpha.6
  - @ckb-ccc/joy-id@0.0.16-alpha.6
  - @ckb-ccc/nip07@0.0.16-alpha.6
  - @ckb-ccc/okx@0.0.16-alpha.6
  - @ckb-ccc/rei@0.0.16-alpha.6
  - @ckb-ccc/uni-sat@0.0.16-alpha.6
  - @ckb-ccc/utxo-global@0.0.16-alpha.6
  - @ckb-ccc/xverse@0.0.15-alpha.8

## 0.0.16-alpha.7

### Patch Changes

- Updated dependencies [[`91832b1`](https://github.com/ckb-devrel/ccc/commit/91832b103c5d7a1272060639f77754a1c731a753)]:
  - @ckb-ccc/xverse@0.0.15-alpha.7

## 0.0.16-alpha.6

### Patch Changes

- Updated dependencies [[`50f2ce0`](https://github.com/ckb-devrel/ccc/commit/50f2ce08e74cb3fbeae926267d42e28b426fd7f4)]:
  - @ckb-ccc/core@0.1.0-alpha.5
  - @ckb-ccc/eip6963@0.0.16-alpha.5
  - @ckb-ccc/joy-id@0.0.16-alpha.5
  - @ckb-ccc/nip07@0.0.16-alpha.5
  - @ckb-ccc/okx@0.0.16-alpha.5
  - @ckb-ccc/rei@0.0.16-alpha.5
  - @ckb-ccc/uni-sat@0.0.16-alpha.5
  - @ckb-ccc/utxo-global@0.0.16-alpha.5
  - @ckb-ccc/xverse@0.0.15-alpha.6

## 0.0.16-alpha.5

### Patch Changes

- Updated dependencies [[`f21d7e4`](https://github.com/ckb-devrel/ccc/commit/f21d7e4cf422edab4a836ef6d678b620594fef8d)]:
  - @ckb-ccc/core@0.1.0-alpha.4
  - @ckb-ccc/eip6963@0.0.16-alpha.4
  - @ckb-ccc/joy-id@0.0.16-alpha.4
  - @ckb-ccc/nip07@0.0.16-alpha.4
  - @ckb-ccc/okx@0.0.16-alpha.4
  - @ckb-ccc/rei@0.0.16-alpha.4
  - @ckb-ccc/uni-sat@0.0.16-alpha.4
  - @ckb-ccc/utxo-global@0.0.16-alpha.4
  - @ckb-ccc/xverse@0.0.15-alpha.5

## 0.0.16-alpha.4

### Patch Changes

- Updated dependencies [[`a3d5359`](https://github.com/ckb-devrel/ccc/commit/a3d53595f6dd11f2f59cdf0086b3d7ce558a2fdd)]:
  - @ckb-ccc/core@0.0.16-alpha.3
  - @ckb-ccc/eip6963@0.0.16-alpha.3
  - @ckb-ccc/joy-id@0.0.16-alpha.3
  - @ckb-ccc/nip07@0.0.16-alpha.3
  - @ckb-ccc/okx@0.0.16-alpha.3
  - @ckb-ccc/rei@0.0.16-alpha.3
  - @ckb-ccc/uni-sat@0.0.16-alpha.3
  - @ckb-ccc/utxo-global@0.0.16-alpha.3
  - @ckb-ccc/xverse@0.0.15-alpha.4

## 0.0.16-alpha.3

### Patch Changes

- [#70](https://github.com/ckb-devrel/ccc/pull/70) [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): websocket transport

- Updated dependencies [[`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366)]:
  - @ckb-ccc/core@0.0.16-alpha.2
  - @ckb-ccc/eip6963@0.0.16-alpha.2
  - @ckb-ccc/joy-id@0.0.16-alpha.2
  - @ckb-ccc/nip07@0.0.16-alpha.2
  - @ckb-ccc/okx@0.0.16-alpha.2
  - @ckb-ccc/rei@0.0.16-alpha.2
  - @ckb-ccc/uni-sat@0.0.16-alpha.2
  - @ckb-ccc/utxo-global@0.0.16-alpha.2
  - @ckb-ccc/xverse@0.0.15-alpha.3

## 0.0.16-alpha.2

### Patch Changes

- [#69](https://github.com/ckb-devrel/ccc/pull/69) [`8824ff2`](https://github.com/ckb-devrel/ccc/commit/8824ff27af3b76186f1a7d6db8c907cd66f09d6a) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Client.waitTransaction

- [#67](https://github.com/ckb-devrel/ccc/pull/67) [`c092988`](https://github.com/ckb-devrel/ccc/commit/c092988e7765b9ac79498d6bd72a6a2f62859b6f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): auto fee rate

- Updated dependencies [[`8824ff2`](https://github.com/ckb-devrel/ccc/commit/8824ff27af3b76186f1a7d6db8c907cd66f09d6a), [`c092988`](https://github.com/ckb-devrel/ccc/commit/c092988e7765b9ac79498d6bd72a6a2f62859b6f)]:
  - @ckb-ccc/core@0.0.16-alpha.1
  - @ckb-ccc/eip6963@0.0.16-alpha.1
  - @ckb-ccc/joy-id@0.0.16-alpha.1
  - @ckb-ccc/nip07@0.0.16-alpha.1
  - @ckb-ccc/okx@0.0.16-alpha.1
  - @ckb-ccc/rei@0.0.16-alpha.1
  - @ckb-ccc/uni-sat@0.0.16-alpha.1
  - @ckb-ccc/utxo-global@0.0.16-alpha.1
  - @ckb-ccc/xverse@0.0.15-alpha.2

## 0.0.16-alpha.1

### Patch Changes

- Updated dependencies [[`1720d5a`](https://github.com/ckb-devrel/ccc/commit/1720d5a398543f1c6e24763eeaf15d84cd2214bf)]:
  - @ckb-ccc/core@0.0.16-alpha.0
  - @ckb-ccc/eip6963@0.0.16-alpha.0
  - @ckb-ccc/joy-id@0.0.16-alpha.0
  - @ckb-ccc/nip07@0.0.16-alpha.0
  - @ckb-ccc/okx@0.0.16-alpha.0
  - @ckb-ccc/rei@0.0.16-alpha.0
  - @ckb-ccc/uni-sat@0.0.16-alpha.0
  - @ckb-ccc/utxo-global@0.0.16-alpha.0
  - @ckb-ccc/xverse@0.0.15-alpha.1

## 0.0.16-alpha.0

### Patch Changes

- [#60](https://github.com/ckb-devrel/ccc/pull/60) [`e904963`](https://github.com/ckb-devrel/ccc/commit/e904963a16f12c410d861eb3ae01b87d68cb3e34) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: support Xverse

- Updated dependencies [[`e904963`](https://github.com/ckb-devrel/ccc/commit/e904963a16f12c410d861eb3ae01b87d68cb3e34)]:
  - @ckb-ccc/xverse@0.0.15-alpha.0

## 0.0.15

### Patch Changes

- Updated dependencies [[`8f2560a`](https://github.com/ckb-devrel/ccc/commit/8f2560ab0e5619654fff7c5eacda8425385f908e)]:
  - @ckb-ccc/core@0.0.15
  - @ckb-ccc/eip6963@0.0.15
  - @ckb-ccc/joy-id@0.0.15
  - @ckb-ccc/nip07@0.0.15
  - @ckb-ccc/okx@0.0.15
  - @ckb-ccc/rei@0.0.15
  - @ckb-ccc/uni-sat@0.0.15
  - @ckb-ccc/utxo-global@0.0.15

## 0.0.14

### Patch Changes

- [#56](https://github.com/ckb-devrel/ccc/pull/56) [`f13f4d3`](https://github.com/ckb-devrel/ccc/commit/f13f4d319ca66b571029a65e945e3a038bfeea25) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Signer.findTransactions

- [#48](https://github.com/ckb-devrel/ccc/pull/48) [`4fb114b`](https://github.com/ckb-devrel/ccc/commit/4fb114bc421c7250eed7388c16f1c026875153e6) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(okx): make okx wallet happy

- Updated dependencies [[`5e942f8`](https://github.com/ckb-devrel/ccc/commit/5e942f8f1ed678abdb7ab9716f5449f0714cea53), [`f5b5938`](https://github.com/ckb-devrel/ccc/commit/f5b5938ab8f9c0a338dfd6765fe717f7ad1b1dd8), [`f13f4d3`](https://github.com/ckb-devrel/ccc/commit/f13f4d319ca66b571029a65e945e3a038bfeea25), [`4fb114b`](https://github.com/ckb-devrel/ccc/commit/4fb114bc421c7250eed7388c16f1c026875153e6), [`7ba62a0`](https://github.com/ckb-devrel/ccc/commit/7ba62a056f17808fe5684786c00c2dff80bb7d1d), [`2164efd`](https://github.com/ckb-devrel/ccc/commit/2164efd6d834c1917ad5f4a514dc25941f937185), [`e5bd2ad`](https://github.com/ckb-devrel/ccc/commit/e5bd2ad5de4b42a22c422ecfc42056750f69b88b), [`aae3e06`](https://github.com/ckb-devrel/ccc/commit/aae3e0679fb940dd8c12ac9be12a4b53277a339d)]:
  - @ckb-ccc/core@0.0.14
  - @ckb-ccc/okx@0.0.14
  - @ckb-ccc/eip6963@0.0.14
  - @ckb-ccc/joy-id@0.0.14
  - @ckb-ccc/nip07@0.0.14
  - @ckb-ccc/rei@0.0.14
  - @ckb-ccc/uni-sat@0.0.14
  - @ckb-ccc/utxo-global@0.0.14

## 0.0.14-alpha.2

### Patch Changes

- Updated dependencies [[`7ba62a0`](https://github.com/ckb-devrel/ccc/commit/7ba62a056f17808fe5684786c00c2dff80bb7d1d)]:
  - @ckb-ccc/core@0.0.14-alpha.2
  - @ckb-ccc/eip6963@0.0.14-alpha.2
  - @ckb-ccc/joy-id@0.0.14-alpha.2
  - @ckb-ccc/nip07@0.0.14-alpha.2
  - @ckb-ccc/okx@0.0.14-alpha.2
  - @ckb-ccc/rei@0.0.14-alpha.2
  - @ckb-ccc/uni-sat@0.0.14-alpha.2
  - @ckb-ccc/utxo-global@0.0.14-alpha.2

## 0.0.14-alpha.1

### Patch Changes

- [#48](https://github.com/ckb-devrel/ccc/pull/48) [`4fb114b`](https://github.com/ckb-devrel/ccc/commit/4fb114bc421c7250eed7388c16f1c026875153e6) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(okx): make okx wallet happy

- Updated dependencies [[`5e942f8`](https://github.com/ckb-devrel/ccc/commit/5e942f8f1ed678abdb7ab9716f5449f0714cea53), [`4fb114b`](https://github.com/ckb-devrel/ccc/commit/4fb114bc421c7250eed7388c16f1c026875153e6), [`e5bd2ad`](https://github.com/ckb-devrel/ccc/commit/e5bd2ad5de4b42a22c422ecfc42056750f69b88b), [`aae3e06`](https://github.com/ckb-devrel/ccc/commit/aae3e0679fb940dd8c12ac9be12a4b53277a339d)]:
  - @ckb-ccc/core@0.0.14-alpha.1
  - @ckb-ccc/okx@0.0.14-alpha.1
  - @ckb-ccc/eip6963@0.0.14-alpha.1
  - @ckb-ccc/joy-id@0.0.14-alpha.1
  - @ckb-ccc/nip07@0.0.14-alpha.1
  - @ckb-ccc/rei@0.0.14-alpha.1
  - @ckb-ccc/uni-sat@0.0.14-alpha.1
  - @ckb-ccc/utxo-global@0.0.14-alpha.1

## 0.0.14-alpha.0

### Patch Changes

- Updated dependencies [[`f5b5938`](https://github.com/ckb-devrel/ccc/commit/f5b5938ab8f9c0a338dfd6765fe717f7ad1b1dd8), [`2164efd`](https://github.com/ckb-devrel/ccc/commit/2164efd6d834c1917ad5f4a514dc25941f937185)]:
  - @ckb-ccc/core@0.0.14-alpha.0
  - @ckb-ccc/eip6963@0.0.14-alpha.0
  - @ckb-ccc/joy-id@0.0.14-alpha.0
  - @ckb-ccc/nip07@0.0.14-alpha.0
  - @ckb-ccc/okx@0.0.14-alpha.0
  - @ckb-ccc/rei@0.0.14-alpha.0
  - @ckb-ccc/uni-sat@0.0.14-alpha.0
  - @ckb-ccc/utxo-global@0.0.14-alpha.0

## 0.0.13

### Patch Changes

- [`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): recordCells should not add usableCells

- [`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): node.js websocket

- [#25](https://github.com/ckb-devrel/ccc/pull/25) [`69c10fd`](https://github.com/ckb-devrel/ccc/commit/69c10fdfcd507433c13b15d17015dca4687afb97) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(utxo-global): switchNetwork

- [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): completeInputs

- [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): more APIs. Since parsing.

- [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Signer.findCells

- Updated dependencies [[`3378e85`](https://github.com/ckb-devrel/ccc/commit/3378e85b32797f5cdc1943b9ecaca1fd1d9fad5e), [`8629449`](https://github.com/ckb-devrel/ccc/commit/86294490e76fc2a1cee20f827883e02fceca6e8b), [`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97), [`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f), [`69c10fd`](https://github.com/ckb-devrel/ccc/commit/69c10fdfcd507433c13b15d17015dca4687afb97), [`600cc13`](https://github.com/ckb-devrel/ccc/commit/600cc137ac6eb7c5b2533670de6df29d82f1b9e1), [`642f731`](https://github.com/ckb-devrel/ccc/commit/642f7317f4951ef801f1245aea96c40b4b6fb73e), [`96dbb61`](https://github.com/ckb-devrel/ccc/commit/96dbb6107d2071b9383350ddd578557746227054), [`0462a4e`](https://github.com/ckb-devrel/ccc/commit/0462a4ee101926f0da857173626dc4ab879e3b56), [`588db84`](https://github.com/ckb-devrel/ccc/commit/588db8434d76a5a9ea6dd1d4c5b03f356ec1fb7d), [`52156f9`](https://github.com/ckb-devrel/ccc/commit/52156f9df9cae9e0b71b77b49cda0e4d73e76142), [`63606db`](https://github.com/ckb-devrel/ccc/commit/63606db908f95bfc857430083932144d1ef4deef), [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b), [`1043c2b`](https://github.com/ckb-devrel/ccc/commit/1043c2bc211ec283b88dba3b81feef98e4185c0e), [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11), [`1f999f8`](https://github.com/ckb-devrel/ccc/commit/1f999f854beb255b3cd9dbbc5a7268e75442b3db), [`a69a9dc`](https://github.com/ckb-devrel/ccc/commit/a69a9dc0c722f7b4cfa36b2ae8ecba4dcde0db90), [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895)]:
  - @ckb-ccc/core@0.0.13
  - @ckb-ccc/eip6963@0.0.13
  - @ckb-ccc/joy-id@0.0.13
  - @ckb-ccc/nip07@0.0.13
  - @ckb-ccc/okx@0.0.13
  - @ckb-ccc/rei@0.0.13
  - @ckb-ccc/uni-sat@0.0.13
  - @ckb-ccc/utxo-global@0.0.13

## 0.0.13-alpha.8

### Patch Changes

- Updated dependencies [[`8629449`](https://github.com/ckb-devrel/ccc/commit/86294490e76fc2a1cee20f827883e02fceca6e8b), [`52156f9`](https://github.com/ckb-devrel/ccc/commit/52156f9df9cae9e0b71b77b49cda0e4d73e76142), [`63606db`](https://github.com/ckb-devrel/ccc/commit/63606db908f95bfc857430083932144d1ef4deef)]:
  - @ckb-ccc/core@0.0.13-alpha.8
  - @ckb-ccc/eip6963@0.0.13-alpha.8
  - @ckb-ccc/joy-id@0.0.13-alpha.8
  - @ckb-ccc/nip07@0.0.13-alpha.8
  - @ckb-ccc/okx@0.0.13-alpha.8
  - @ckb-ccc/rei@0.0.13-alpha.8
  - @ckb-ccc/uni-sat@0.0.13-alpha.8
  - @ckb-ccc/utxo-global@0.0.13-alpha.8

## 0.0.13-alpha.7

### Patch Changes

- [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): more APIs. Since parsing.

- [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Signer.findCells

- Updated dependencies [[`1043c2b`](https://github.com/ckb-devrel/ccc/commit/1043c2bc211ec283b88dba3b81feef98e4185c0e), [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11), [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895)]:
  - @ckb-ccc/core@0.0.13-alpha.7
  - @ckb-ccc/eip6963@0.0.13-alpha.7
  - @ckb-ccc/joy-id@0.0.13-alpha.7
  - @ckb-ccc/nip07@0.0.13-alpha.7
  - @ckb-ccc/okx@0.0.13-alpha.7
  - @ckb-ccc/rei@0.0.13-alpha.7
  - @ckb-ccc/uni-sat@0.0.13-alpha.7
  - @ckb-ccc/utxo-global@0.0.13-alpha.7

## 0.0.13-alpha.6

### Patch Changes

- [#25](https://github.com/ckb-devrel/ccc/pull/25) [`69c10fd`](https://github.com/ckb-devrel/ccc/commit/69c10fdfcd507433c13b15d17015dca4687afb97) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(utxo-global): switchNetwork

- [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): completeInputs

- Updated dependencies [[`69c10fd`](https://github.com/ckb-devrel/ccc/commit/69c10fdfcd507433c13b15d17015dca4687afb97), [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b)]:
  - @ckb-ccc/utxo-global@0.0.13-alpha.6
  - @ckb-ccc/core@0.0.13-alpha.6
  - @ckb-ccc/eip6963@0.0.13-alpha.6
  - @ckb-ccc/joy-id@0.0.13-alpha.6
  - @ckb-ccc/nip07@0.0.13-alpha.6
  - @ckb-ccc/okx@0.0.13-alpha.6
  - @ckb-ccc/rei@0.0.13-alpha.6
  - @ckb-ccc/uni-sat@0.0.13-alpha.6

## 0.0.13-alpha.5

### Patch Changes

- [`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): recordCells should not add usableCells

- Updated dependencies [[`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97)]:
  - @ckb-ccc/core@0.0.13-alpha.5
  - @ckb-ccc/eip6963@0.0.13-alpha.5
  - @ckb-ccc/joy-id@0.0.13-alpha.5
  - @ckb-ccc/nip07@0.0.13-alpha.5
  - @ckb-ccc/okx@0.0.13-alpha.5
  - @ckb-ccc/rei@0.0.13-alpha.5
  - @ckb-ccc/uni-sat@0.0.13-alpha.5
  - @ckb-ccc/utxo-global@0.0.13-alpha.5

## 0.0.13-alpha.4

### Patch Changes

- [`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): node.js websocket

- Updated dependencies [[`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f), [`642f731`](https://github.com/ckb-devrel/ccc/commit/642f7317f4951ef801f1245aea96c40b4b6fb73e)]:
  - @ckb-ccc/core@0.0.13-alpha.4
  - @ckb-ccc/eip6963@0.0.13-alpha.4
  - @ckb-ccc/joy-id@0.0.13-alpha.4
  - @ckb-ccc/nip07@0.0.13-alpha.4
  - @ckb-ccc/okx@0.0.13-alpha.4
  - @ckb-ccc/rei@0.0.13-alpha.4
  - @ckb-ccc/uni-sat@0.0.13-alpha.4
  - @ckb-ccc/utxo-global@0.0.13-alpha.4

## 0.0.13-alpha.3

### Patch Changes

- Updated dependencies [[`1f999f8`](https://github.com/ckb-devrel/ccc/commit/1f999f854beb255b3cd9dbbc5a7268e75442b3db)]:
  - @ckb-ccc/core@0.0.13-alpha.3
  - @ckb-ccc/eip6963@0.0.13-alpha.3
  - @ckb-ccc/joy-id@0.0.13-alpha.3
  - @ckb-ccc/nip07@0.0.13-alpha.3
  - @ckb-ccc/okx@0.0.13-alpha.3
  - @ckb-ccc/rei@0.0.13-alpha.3
  - @ckb-ccc/uni-sat@0.0.13-alpha.3
  - @ckb-ccc/utxo-global@0.0.13-alpha.3

## 0.0.13-alpha.2

### Patch Changes

- Updated dependencies [[`96dbb61`](https://github.com/ckb-devrel/ccc/commit/96dbb6107d2071b9383350ddd578557746227054)]:
  - @ckb-ccc/core@0.0.13-alpha.2
  - @ckb-ccc/eip6963@0.0.13-alpha.2
  - @ckb-ccc/joy-id@0.0.13-alpha.2
  - @ckb-ccc/nip07@0.0.13-alpha.2
  - @ckb-ccc/okx@0.0.13-alpha.2
  - @ckb-ccc/rei@0.0.13-alpha.2
  - @ckb-ccc/uni-sat@0.0.13-alpha.2
  - @ckb-ccc/utxo-global@0.0.13-alpha.2

## 0.0.13-alpha.1

### Patch Changes

- Updated dependencies [[`3378e85`](https://github.com/ckb-devrel/ccc/commit/3378e85b32797f5cdc1943b9ecaca1fd1d9fad5e), [`588db84`](https://github.com/ckb-devrel/ccc/commit/588db8434d76a5a9ea6dd1d4c5b03f356ec1fb7d), [`a69a9dc`](https://github.com/ckb-devrel/ccc/commit/a69a9dc0c722f7b4cfa36b2ae8ecba4dcde0db90)]:
  - @ckb-ccc/core@0.0.13-alpha.1
  - @ckb-ccc/joy-id@0.0.13-alpha.1
  - @ckb-ccc/eip6963@0.0.13-alpha.1
  - @ckb-ccc/nip07@0.0.13-alpha.1
  - @ckb-ccc/okx@0.0.13-alpha.1
  - @ckb-ccc/rei@0.0.13-alpha.1
  - @ckb-ccc/uni-sat@0.0.13-alpha.1
  - @ckb-ccc/utxo-global@0.0.13-alpha.1

## 0.0.13-alpha.0

### Patch Changes

- Updated dependencies [[`600cc13`](https://github.com/ckb-devrel/ccc/commit/600cc137ac6eb7c5b2533670de6df29d82f1b9e1)]:
  - @ckb-ccc/core@0.0.13-alpha.0
  - @ckb-ccc/eip6963@0.0.13-alpha.0
  - @ckb-ccc/joy-id@0.0.13-alpha.0
  - @ckb-ccc/nip07@0.0.13-alpha.0
  - @ckb-ccc/okx@0.0.13-alpha.0
  - @ckb-ccc/rei@0.0.13-alpha.0
  - @ckb-ccc/uni-sat@0.0.13-alpha.0
  - @ckb-ccc/utxo-global@0.0.13-alpha.0

## 0.0.12

### Patch Changes

- [`591e779`](https://github.com/ckb-devrel/ccc/commit/591e7794ce3d07ceaad55b7a80d2277fe0aa9fe7) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: custom SignersController

- Updated dependencies [[`6bee006`](https://github.com/ckb-devrel/ccc/commit/6bee006fbcb96986c65ca4d2d896fca21db2503b)]:
  - @ckb-ccc/nip07@0.0.12
  - @ckb-ccc/okx@0.0.12
  - @ckb-ccc/core@0.0.12
  - @ckb-ccc/eip6963@0.0.12
  - @ckb-ccc/joy-id@0.0.12
  - @ckb-ccc/rei@0.0.12
  - @ckb-ccc/uni-sat@0.0.12
  - @ckb-ccc/utxo-global@0.0.12

## 0.0.12-alpha.7

### Patch Changes

- Updated dependencies
  - @ckb-ccc/nip07@0.0.12-alpha.2
  - @ckb-ccc/okx@0.0.12-alpha.7


================================================
File: packages/ccc/eslint.config.mjs
================================================
// @ts-check

import eslint from "@eslint/js";
import eslintPluginPrettierRecommended from "eslint-plugin-prettier/recommended";
import tseslint from "typescript-eslint";

import { dirname } from "path";
import { fileURLToPath } from "url";

export default [
  ...tseslint.config({
    files: ["**/*.ts"],
    extends: [
      eslint.configs.recommended,
      ...tseslint.configs.recommendedTypeChecked,
    ],
    rules: {
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          args: "all",
          argsIgnorePattern: "^_",
          caughtErrors: "all",
          caughtErrorsIgnorePattern: "^_",
          destructuredArrayIgnorePattern: "^_",
          varsIgnorePattern: "^_",
          ignoreRestSiblings: true,
        },
      ],
      "@typescript-eslint/unbound-method": ["error", { ignoreStatic: true }],
      "@typescript-eslint/no-unsafe-member-access": "off",
      "@typescript-eslint/require-await": "off",
      "no-empty": "off",
      "prefer-const": [
        "error",
        { ignoreReadBeforeAssign: true, destructuring: "all" },
      ],
    },
    languageOptions: {
      parserOptions: {
        project: true,
        tsconfigRootDir: dirname(fileURLToPath(import.meta.url)),
      },
    },
  }),
  eslintPluginPrettierRecommended,
];


================================================
File: packages/ccc/package.json
================================================
{
  "name": "@ckb-ccc/ccc",
  "version": "1.1.3",
  "description": "CCC - CKBer's Codebase. Common Chains Connector.",
  "author": "Hanssen0 <hanssen0@hanssen0.com>",
  "license": "MIT",
  "private": false,
  "homepage": "https://github.com/ckb-devrel/ccc",
  "repository": {
    "type": "git",
    "url": "git://github.com/ckb-devrel/ccc.git"
  },
  "sideEffects": false,
  "main": "dist.commonjs/index.js",
  "module": "dist/index.js",
  "exports": {
    ".": {
      "import": "./dist/index.js",
      "require": "./dist.commonjs/index.js",
      "default": "./dist.commonjs/index.js"
    },
    "./barrel": {
      "import": "./dist/barrel.js",
      "require": "./dist.commonjs/barrel.js",
      "default": "./dist.commonjs/barrel.js"
    },
    "./advancedBarrel": {
      "import": "./dist/advancedBarrel.js",
      "require": "./dist.commonjs/advancedBarrel.js",
      "default": "./dist.commonjs/advancedBarrel.js"
    },
    "./advanced": {
      "import": "./dist/advanced.js",
      "require": "./dist.commonjs/advanced.js",
      "default": "./dist.commonjs/advanced.js"
    }
  },
  "scripts": {
    "build": "rimraf ./dist && rimraf ./dist.commonjs && tsc && tsc --project tsconfig.commonjs.json && copyfiles -u 2 misc/basedirs/**/* .",
    "lint": "eslint ./src",
    "format": "prettier --write . && eslint --fix ./src"
  },
  "devDependencies": {
    "@eslint/js": "^9.1.1",
    "copyfiles": "^2.4.1",
    "eslint": "^9.1.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.1.3",
    "prettier": "^3.2.5",
    "prettier-plugin-organize-imports": "^3.2.4",
    "rimraf": "^5.0.5",
    "typescript": "^5.4.5",
    "typescript-eslint": "^7.7.0"
  },
  "publishConfig": {
    "access": "public"
  },
  "dependencies": {
    "@ckb-ccc/shell": "workspace:*",
    "@ckb-ccc/eip6963": "workspace:*",
    "@ckb-ccc/joy-id": "workspace:*",
    "@ckb-ccc/nip07": "workspace:*",
    "@ckb-ccc/okx": "workspace:*",
    "@ckb-ccc/uni-sat": "workspace:*",
    "@ckb-ccc/utxo-global": "workspace:*",
    "@ckb-ccc/rei": "workspace:*",
    "@ckb-ccc/xverse": "workspace:*"
  }
}


================================================
File: packages/ccc/tsconfig.base.json
================================================
{
  "compilerOptions": {
    "target": "es2020",
    "incremental": true,
    "allowJs": true,
    "importHelpers": false,
    "declaration": true,
    "declarationMap": true,
    "experimentalDecorators": true,
    "useDefineForClassFields": false,
    "esModuleInterop": true,
    "strict": true,
    "noImplicitAny": true,
    "strictBindCallApply": true,
    "strictNullChecks": true,
    "alwaysStrict": true,
    "noFallthroughCasesInSwitch": true,
    "forceConsistentCasingInFileNames": true,
    "skipLibCheck": true
  },
  "include": ["src/**/*"]
}


================================================
File: packages/ccc/tsconfig.commonjs.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "NodeNext",
    "moduleResolution": "NodeNext",
    "outDir": "./dist.commonjs"
  }
}


================================================
File: packages/ccc/tsconfig.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "ESNext",
    "moduleResolution": "Bundler",
    "outDir": "./dist",
  }
}


================================================
File: packages/ccc/typedoc.json
================================================
{
  "$schema": "https://typedoc.org/schema.json",
  "entryPoints": ["./src/index.ts", "./src/advanced.ts"],
  "extends": ["../../typedoc.base.json"],
  "name": "@ckb-ccc ccc"
}


================================================
File: packages/ccc/.npmignore
================================================
node_modules/
misc/

*test.js
*test.ts
*test.d.ts
*test.d.ts.map
*spec.js
*spec.ts
*spec.d.ts
*spec.d.ts.map

tsconfig.json
tsconfig.*.json
eslint.config.mjs
.prettierrc
.prettierignore

tsconfig.tsbuildinfo
tsconfig.*.tsbuildinfo
.github/


================================================
File: packages/ccc/.prettierignore
================================================
node_modules/

dist/
dist.commonjs/

.npmignore
.prettierrc
tsconfig.json
eslint.config.mjs
.prettierrc

tsconfig.tsbuildinfo
.github/


================================================
File: packages/ccc/.prettierrc
================================================
{
  "singleQuote": false,
  "trailingComma": "all",
  "plugins": ["prettier-plugin-organize-imports"]
}


================================================
File: packages/ccc/misc/basedirs/dist/package.json
================================================
{
  "type": "module"
}

================================================
File: packages/ccc/misc/basedirs/dist.commonjs/package.json
================================================
{
  "type": "commonjs"
}


================================================
File: packages/ccc/src/advanced.ts
================================================
export * from "./advancedBarrel.js";
export * as cccA from "./advancedBarrel.js";


================================================
File: packages/ccc/src/advancedBarrel.ts
================================================
export * from "@ckb-ccc/eip6963/advanced";
export * from "@ckb-ccc/nip07/advanced";
export * from "@ckb-ccc/okx/advanced";
export * from "@ckb-ccc/shell/advancedBarrel";
export * from "@ckb-ccc/uni-sat/advanced";
export * from "@ckb-ccc/utxo-global/advanced";
export * from "@ckb-ccc/xverse/advanced";


================================================
File: packages/ccc/src/barrel.ts
================================================
export * from "@ckb-ccc/eip6963";
export * from "@ckb-ccc/joy-id";
export * from "@ckb-ccc/nip07";
export * from "@ckb-ccc/okx";
export * from "@ckb-ccc/rei";
export * from "@ckb-ccc/shell/barrel";
export * from "@ckb-ccc/uni-sat";
export * from "@ckb-ccc/utxo-global";
export * from "@ckb-ccc/xverse";
export * from "./signersController.js";


================================================
File: packages/ccc/src/index.ts
================================================
export * from "./barrel.js";
export * as ccc from "./barrel.js";


================================================
File: packages/ccc/src/signersController.ts
================================================
import { Eip6963 } from "@ckb-ccc/eip6963";
import { JoyId } from "@ckb-ccc/joy-id";
import { Nip07 } from "@ckb-ccc/nip07";
import { Okx } from "@ckb-ccc/okx";
import { Rei } from "@ckb-ccc/rei";
import { ccc } from "@ckb-ccc/shell";
import { UniSat } from "@ckb-ccc/uni-sat";
import { UtxoGlobal } from "@ckb-ccc/utxo-global";
import { Xverse } from "@ckb-ccc/xverse";
import { ETH_SVG } from "./assets/eth.svg.js";
import { JOY_ID_SVG } from "./assets/joy-id.svg.js";
import { METAMASK_SVG } from "./assets/metamask.svg.js";
import { NOSTR_SVG } from "./assets/nostr.svg.js";
import { OKX_SVG } from "./assets/okx.svg.js";
import { REI_SVG } from "./assets/rei.svg.js";
import { UNI_SAT_SVG } from "./assets/uni-sat.svg.js";
import { UTXO_GLOBAL_SVG } from "./assets/utxo-global.svg.js";

/**
 * @public
 */
export type WalletWithSigners = ccc.Wallet & {
  signers: ccc.SignerInfo[];
};

/**
 * @public
 */
export interface SignersControllerRefreshContext {
  client: ccc.Client;
  appName: string;
  appIcon: string;
  preferredNetworks: ccc.NetworkPreference[];
  onUpdate: (wallets: WalletWithSigners[]) => void;
  wallets: WalletWithSigners[];
}

/**
 * @public
 */
export class SignersController {
  private resetListeners: (() => void)[] = [];

  constructor() {}

  getConfig(configs?: {
    preferredNetworks?: ccc.NetworkPreference[];
    name?: string;
    icon?: string;
  }) {
    const appName =
      configs?.name ??
      // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion
      (document.querySelector("head title") as HTMLTitleElement | null)?.text ??
      "Unknown";
    const appIcon =
      configs?.icon ??
      // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion
      (document.querySelector('link[rel="icon"]') as HTMLLinkElement | null)
        ?.href ??
      "https://fav.farm/%E2%9D%93";

    const preferredNetworks = [
      ...(configs?.preferredNetworks ?? []),
      {
        addressPrefix: "ckb",
        signerType: ccc.SignerType.BTC,
        network: "btc",
      },
      {
        addressPrefix: "ckt",
        signerType: ccc.SignerType.BTC,
        network: "btcTestnet",
      },
      {
        addressPrefix: "ckb",
        signerType: ccc.SignerType.Doge,
        network: "doge",
      },
      {
        addressPrefix: "ckt",
        signerType: ccc.SignerType.Doge,
        network: "dogeTestnet",
      },
    ];

    return {
      appName,
      appIcon,
      preferredNetworks,
    };
  }

  disconnect() {
    this.resetListeners.forEach((listener) => listener());
    this.resetListeners = [];
  }

  async refresh(
    client: ccc.Client,
    onUpdate: (wallets: WalletWithSigners[]) => void,
    configs?: {
      preferredNetworks?: ccc.NetworkPreference[];
      name?: string;
      icon?: string;
    },
  ) {
    this.disconnect();

    const { appName, appIcon, preferredNetworks } = this.getConfig(configs);

    const context: SignersControllerRefreshContext = {
      client,
      appName,
      appIcon,
      preferredNetworks,
      onUpdate,
      wallets: [],
    };

    await this.addRealSigners(context);
    await this.addDummySigners(context);
  }

  async addRealSigners(context: SignersControllerRefreshContext) {
    const { appName, appIcon, client, preferredNetworks } = context;
    await this.addSigners(
      "UTXO Global Wallet",
      UTXO_GLOBAL_SVG,
      UtxoGlobal.getUtxoGlobalSigners(client, preferredNetworks),
      context,
    );

    await this.addSigners(
      "Rei Wallet",
      REI_SVG,
      Rei.getReiSigners(client),
      context,
    );

    await this.addSigners(
      "JoyID Passkey",
      JOY_ID_SVG,
      JoyId.getJoyIdSigners(client, appName, appIcon, preferredNetworks),
      context,
    );

    await this.addSigners(
      "UniSat",
      UNI_SAT_SVG,
      UniSat.getUniSatSigners(client, preferredNetworks),
      context,
    );

    await this.addSigners(
      "OKX Wallet",
      OKX_SVG,
      Okx.getOKXSigners(client, preferredNetworks),
      context,
    );

    await Promise.all(
      Xverse.getXverseSigners(client, preferredNetworks).map(
        ({ wallet, signerInfo }) =>
          this.addSigner(wallet.name, wallet.icon, signerInfo, context),
      ),
    );

    const nostrSigner = Nip07.getNip07Signer(client);
    if (nostrSigner) {
      await this.addSigner(
        "Nostr",
        NOSTR_SVG,
        {
          name: "Nostr",
          signer: nostrSigner,
        },
        context,
      );
    }

    this.resetListeners.push(
      new Eip6963.SignerFactory(client).subscribeSigners((signer, detail) =>
        this.addSigner(
          detail?.info.name ?? "EVM",
          detail?.info.icon ?? ETH_SVG,
          {
            name: "EVM",
            signer,
          },
          context,
        ),
      ),
    );
  }

  async addDummySigners(context: SignersControllerRefreshContext) {
    await this.addLinkSigners(
      "MetaMask",
      METAMASK_SVG,
      [ccc.SignerType.EVM],
      `https://metamask.app.link/dapp/${window.location.href}`,
      context,
    );
    await this.addLinkSigners(
      "OKX Wallet",
      OKX_SVG,
      [ccc.SignerType.EVM, ccc.SignerType.BTC],
      "https://www.okx.com/download?deeplink=" +
        encodeURIComponent(
          "okx://wallet/dapp/url?dappUrl=" +
            encodeURIComponent(window.location.href),
        ),
      context,
    );
    await this.addLinkSigners(
      "UniSat",
      UNI_SAT_SVG,
      [ccc.SignerType.BTC],
      "https://unisat.io/download",
      context,
    );
    await this.addLinkSigners(
      "UTXO Global Wallet",
      UTXO_GLOBAL_SVG,
      [ccc.SignerType.CKB, ccc.SignerType.BTC],
      "https://chromewebstore.google.com/detail/lnamkkidoonpeknminiadpgjiofpdmle",
      context,
    );
  }

  async addLinkSigners(
    walletName: string,
    icon: string,
    signerTypes: ccc.SignerType[],
    link: string,
    context: SignersControllerRefreshContext,
  ) {
    return this.addSigners(
      walletName,
      icon,
      signerTypes.map((type) => ({
        name: type,
        signer: new ccc.SignerOpenLink(context.client, type, link),
      })),
      context,
    );
  }

  async addSigners(
    walletName: string,
    icon: string,
    signers: ccc.SignerInfo[],
    context: SignersControllerRefreshContext,
  ) {
    return Promise.all(
      signers.map((signerInfo) =>
        this.addSigner(walletName, icon, signerInfo, context),
      ),
    );
  }

  protected async addSigner(
    walletName: string,
    icon: string,
    signerInfo: ccc.SignerInfo,
    { wallets, onUpdate }: SignersControllerRefreshContext,
  ): Promise<void> {
    const wallet = wallets.find((w) => w.name === walletName);

    if (!wallet) {
      wallets.push({
        name: walletName,
        icon,
        signers: [signerInfo],
      });
    } else {
      const signers = [...wallet.signers, signerInfo].filter(
        ({ signer }) => !(signer instanceof ccc.SignerDummy),
      );
      wallet.signers = signers.length !== 0 ? signers : [signerInfo];
    }

    onUpdate(wallets);
  }
}


================================================
File: packages/ccc/src/assets/eth.svg.ts
================================================
import { encodeSvgToImgSrc } from "./utils.js";

export const ETH_SVG = encodeSvgToImgSrc(
  '<svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_46_558)"><circle cx="16" cy="16" r="16" fill="#627EEA"/><path d="M15.9957 20.4203L9.14282 16.3876L15.9957 5.14258V20.4203Z" fill="white"/><path d="M15.9957 26.8573L9.30029 17.396L15.9957 21.3511V26.8573Z" fill="white"/><path d="M16.2319 20.4203L23.0849 16.3876L16.2319 5.14258V20.4203Z" fill="#C1CCF7"/><path d="M16.3107 26.8573L23.0848 17.396L16.3107 21.3511V26.8573Z" fill="#C1CCF7"/></g><defs><clipPath id="clip0_46_558"><rect width="32" height="32" fill="white"/></clipPath></defs></svg>',
);


================================================
File: packages/ccc/src/assets/joy-id.svg.ts
================================================
import { encodeSvgToImgSrc } from "./utils.js";

export const JOY_ID_SVG = encodeSvgToImgSrc(
  '<svg xmlns="http://www.w3.org/2000/svg" width="420" height="420" viewBox="0 0 420 420" fill="none"><circle cx="210" cy="210" r="210" fill="#333333"/><path d="M271.127 204.419C279.096 204.419 285.555 197.959 285.555 189.991C285.555 182.022 279.096 175.562 271.127 175.562C263.159 175.562 256.699 182.022 256.699 189.991C256.699 197.959 263.159 204.419 271.127 204.419Z" fill="#8CDD00"/><path d="M173.995 175.562C166.773 175.562 160.91 181.425 160.91 188.648C160.91 195.87 166.773 201.733 173.995 201.733C181.218 201.733 187.081 195.87 187.081 188.648C187.064 181.425 181.218 175.562 173.995 175.562Z" fill="#8CDD00"/><path d="M213.43 164.836L198.969 233.586C197.626 240.006 191.878 244.657 185.327 244.657C181.086 244.657 177.139 242.757 174.47 239.465C172.39 236.894 171.342 233.734 171.391 230.491L145.27 237.238C146.383 244.084 149.2 250.618 153.687 256.203C161.434 265.816 172.963 271.335 185.311 271.335C204.407 271.335 221.111 257.775 225.041 239.089L240.665 164.852H213.43V164.836Z" fill="#C1C1C1"/><path d="M335.83 115.983C327.068 105.19 314.065 99 300.161 99H267.981L262.363 125.662H300.161C305.991 125.662 311.445 128.249 315.113 132.786C318.782 137.306 320.207 143.185 319.011 148.884L313.394 175.562H340.645L345.116 154.387C347.965 140.778 344.592 126.775 335.83 115.983Z" fill="#8CDD00"/><path d="M295.216 261.999C291.285 280.669 274.597 294.212 255.518 294.212H226.875L221.258 320.874H255.518C287.126 320.874 314.803 298.421 321.304 267.485L326.021 245.049H298.77L295.216 261.999Z" fill="#8CDD00"/><path d="M98.8061 152.39L93.9258 175.58H121.177L124.894 157.892C128.825 139.223 145.513 125.679 164.592 125.679H192.04L197.657 99.0176H164.592C132.985 99.0012 105.308 121.454 98.8061 152.39Z" fill="#8CDD00"/><path d="M104.998 287.072C101.33 282.552 99.9049 276.673 101.1 270.974L106.079 247.342L77.2555 254.777L74.9956 265.487C72.1296 279.097 75.5196 293.099 84.2813 303.891C93.0429 314.684 106.046 320.874 119.95 320.874H150.935L156.553 294.212H119.95C114.12 294.196 108.666 291.608 104.998 287.072Z" fill="#8CDD00"/></svg>',
);


================================================
File: packages/ccc/src/assets/metamask.svg.ts
================================================
import { encodeSvgToImgSrc } from "./utils.js";

export const METAMASK_SVG = encodeSvgToImgSrc(
  `<svg xmlns="http://www.w3.org/2000/svg" xml:space="preserve" id="Layer_1" x="0" y="0" version="1.1" viewBox="0 0 318.6 318.6"><style>.st1,.st6{fill:#e4761b;stroke:#e4761b;stroke-linecap:round;stroke-linejoin:round}.st6{fill:#f6851b;stroke:#f6851b}</style><path fill="#e2761b" stroke="#e2761b" stroke-linecap="round" stroke-linejoin="round" d="m274.1 35.5-99.5 73.9L193 65.8z"/><path d="m44.4 35.5 98.7 74.6-17.5-44.3zm193.9 171.3-26.5 40.6 56.7 15.6 16.3-55.3zm-204.4.9L50.1 263l56.7-15.6-26.5-40.6z" class="st1"/><path d="m103.6 138.2-15.8 23.9 56.3 2.5-2-60.5zm111.3 0-39-34.8-1.3 61.2 56.2-2.5zM106.8 247.4l33.8-16.5-29.2-22.8zm71.1-16.5 33.9 16.5-4.7-39.3z" class="st1"/><path fill="#d7c1b3" stroke="#d7c1b3" stroke-linecap="round" stroke-linejoin="round" d="m211.8 247.4-33.9-16.5 2.7 22.1-.3 9.3zm-105 0 31.5 14.9-.2-9.3 2.5-22.1z"/><path fill="#233447" stroke="#233447" stroke-linecap="round" stroke-linejoin="round" d="m138.8 193.5-28.2-8.3 19.9-9.1zm40.9 0 8.3-17.4 20 9.1z"/><path fill="#cd6116" stroke="#cd6116" stroke-linecap="round" stroke-linejoin="round" d="m106.8 247.4 4.8-40.6-31.3.9zM207 206.8l4.8 40.6 26.5-39.7zm23.8-44.7-56.2 2.5 5.2 28.9 8.3-17.4 20 9.1zm-120.2 23.1 20-9.1 8.2 17.4 5.3-28.9-56.3-2.5z"/><path fill="#e4751f" stroke="#e4751f" stroke-linecap="round" stroke-linejoin="round" d="m87.8 162.1 23.6 46-.8-22.9zm120.3 23.1-1 22.9 23.7-46zm-64-20.6-5.3 28.9 6.6 34.1 1.5-44.9zm30.5 0-2.7 18 1.2 45 6.7-34.1z"/><path d="m179.8 193.5-6.7 34.1 4.8 3.3 29.2-22.8 1-22.9zm-69.2-8.3.8 22.9 29.2 22.8 4.8-3.3-6.6-34.1z" class="st6"/><path fill="#c0ad9e" stroke="#c0ad9e" stroke-linecap="round" stroke-linejoin="round" d="m180.3 262.3.3-9.3-2.5-2.2h-37.7l-2.3 2.2.2 9.3-31.5-14.9 11 9 22.3 15.5h38.3l22.4-15.5 11-9z"/><path fill="#161616" stroke="#161616" stroke-linecap="round" stroke-linejoin="round" d="m177.9 230.9-4.8-3.3h-27.7l-4.8 3.3-2.5 22.1 2.3-2.2h37.7l2.5 2.2z"/><path fill="#763d16" stroke="#763d16" stroke-linecap="round" stroke-linejoin="round" d="m278.3 114.2 8.5-40.8-12.7-37.9-96.2 71.4 37 31.3 52.3 15.3 11.6-13.5-5-3.6 8-7.3-6.2-4.8 8-6.1zM31.8 73.4l8.5 40.8-5.4 4 8 6.1-6.1 4.8 8 7.3-5 3.6 11.5 13.5 52.3-15.3 37-31.3-96.2-71.4z"/><path d="m267.2 153.5-52.3-15.3 15.9 23.9-23.7 46 31.2-.4h46.5zm-163.6-15.3-52.3 15.3-17.4 54.2h46.4l31.1.4-23.6-46zm71 26.4 3.3-57.7 15.2-41.1h-67.5l15 41.1 3.5 57.7 1.2 18.2.1 44.8h27.7l.2-44.8z" class="st6"/><script xmlns=""/></svg>`,
);


================================================
File: packages/ccc/src/assets/nostr.svg.ts
================================================
import { encodeSvgToImgSrc } from "./utils.js";

export const NOSTR_SVG = encodeSvgToImgSrc(
  '<svg version="1.1" id="_8" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 256 256" style="enable-background:new 0 0 256 256;" xml:space="preserve"><style type="text/css">.st0{fill:none;} .st1{fill:#FFFFFF;} .st2{fill:#662482;}</style><g><path class="st0" d="M0,0v256h256V0H0z M231.2,159.2c0,20.7,0,31.1-3.5,42.2c-4.4,12.2-14,21.8-26.2,26.2 c-11.1,3.5-21.5,3.5-42.2,3.5H96.8c-20.7,0-31.1,0-42.2-3.5c-12.2-4.4-21.8-14-26.2-26.2c-3.5-11.1-3.5-21.5-3.5-42.2V96.8 c0-20.7,0-31.1,3.5-42.2c4.4-12.2,14-21.8,26.2-26.2c11.2-3.5,21.5-3.5,42.2-3.5h62.5c20.7,0,31.1,0,42.2,3.5 c12.2,4.4,21.8,14,26.2,26.2c3.5,11.1,3.5,21.5,3.5,42.2V159.2z"/> <circle class="st1" cx="137.9" cy="99" r="12.1"/><path class="st1" d="M210.8,115.9c0-47.3-27.7-68.7-64.4-68.7c-16.4,0-31,4.4-42.4,12.5c-3.8,2.7-9,0.1-9-4.5 c0-3.1-2.5-5.7-5.7-5.7H57.7c-3.1,0-5.7,2.5-5.7,5.7v144c0,3.1,2.5,5.7,5.7,5.7h33.7c3.1,0,5.6-2.5,5.6-5.6v-8.4 c0-62.8-33.2-109.8-0.4-116c30-5.7,64.1-3,64.5,20.1c0,2,0.3,8,8.6,11.2c5,2,12.6,2.6,22.6,2.4c0,0,9.1-0.7,9.1,8.5 c0,11.5-20.4,10.7-20.4,10.7c-6.7,0.3-22.6-1.5-31.7,1.2c-4.8,1.5-9,4.2-11.5,9.1c-4.2,8.3-6.2,26.5-6.5,45.5v15.5 c0,3.1,2.5,5.7,5.7,5.7h68c3.1,0,5.7-2.5,5.7-5.7l0,0V115.9z"/><path class="st2" d="M227.6,54.6c-4.4-12.2-14-21.8-26.2-26.2c-11.1-3.5-21.5-3.5-42.2-3.5H96.8c-20.7,0-31.1,0-42.2,3.5 c-12.2,4.4-21.8,14-26.2,26.2c-3.5,11.2-3.5,21.5-3.5,42.2v62.5c0,20.7,0,31.1,3.5,42.2c4.4,12.2,14,21.8,26.2,26.2 c11.2,3.5,21.5,3.5,42.2,3.5h62.5c20.7,0,31.1,0,42.2-3.5c12.2-4.4,21.8-14,26.2-26.2c3.5-11.1,3.5-21.5,3.5-42.2V96.8 C231.2,76.1,231.2,65.7,227.6,54.6z M205.1,204.8h-68c-3.1,0-5.7-2.5-5.7-5.7v-15.5c0.3-19,2.3-37.2,6.5-45.5 c2.5-5,6.7-7.7,11.5-9.1c9-2.7,24.9-0.9,31.7-1.2c0,0,20.4,0.8,20.4-10.7c0-9.3-9.1-8.5-9.1-8.5c-10,0.3-17.7-0.4-22.6-2.4 c-8.3-3.3-8.6-9.2-8.6-11.2c-0.4-23.1-34.5-25.9-64.5-20.1c-32.8,6.2,0.4,53.3,0.4,116v8.4c-0.1,3.1-2.5,5.6-5.6,5.6H57.7 c-3.1,0-5.7-2.5-5.7-5.7v-144c0-3.1,2.5-5.7,5.7-5.7h31.7c3.1,0,5.7,2.5,5.7,5.7c0,4.7,5.2,7.2,9,4.5c11.4-8.2,26-12.5,42.4-12.5 c36.7,0,64.4,21.4,64.4,68.7v83.2l0,0C210.8,202.3,208.3,204.8,205.1,204.8z M125.7,99c0-6.7,5.4-12.1,12.1-12.1S150,92.3,150,99 s-5.4,12.1-12.1,12.1S125.7,105.8,125.7,99z"/></g></svg>',
);


================================================
File: packages/ccc/src/assets/okx.svg.ts
================================================
import { encodeSvgToImgSrc } from "./utils.js";

export const OKX_SVG = encodeSvgToImgSrc(
  '<svg width="1000" height="1000" viewBox="0 0 1000 1000" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="1000" height="1000" fill="black"/><path fill-rule="evenodd" clip-rule="evenodd" d="M393.949 218.518H231.049C224.129 218.518 218.519 224.128 218.519 231.048V393.948C218.519 400.869 224.129 406.479 231.049 406.479H393.949C400.87 406.479 406.48 400.869 406.48 393.948V231.048C406.48 224.128 400.87 218.518 393.949 218.518ZM581.992 406.479H419.092C412.172 406.479 406.561 412.09 406.561 419.01V581.91C406.561 588.831 412.172 594.441 419.092 594.441H581.992C588.913 594.441 594.523 588.831 594.523 581.91V419.01C594.523 412.09 588.913 406.479 581.992 406.479ZM606.974 218.518H769.874C776.794 218.518 782.405 224.128 782.405 231.048V393.948C782.405 400.869 776.794 406.479 769.874 406.479H606.974C600.053 406.479 594.443 400.869 594.443 393.948V231.048C594.443 224.128 600.053 218.518 606.974 218.518ZM393.95 594.442H231.049C224.129 594.442 218.519 600.052 218.519 606.973V769.873C218.519 776.793 224.129 782.404 231.049 782.404H393.95C400.87 782.404 406.48 776.793 406.48 769.873V606.973C406.48 600.052 400.87 594.442 393.95 594.442ZM606.974 594.442H769.874C776.794 594.442 782.405 600.052 782.405 606.973V769.873C782.405 776.793 776.794 782.404 769.874 782.404H606.974C600.053 782.404 594.443 776.793 594.443 769.873V606.973C594.443 600.052 600.053 594.442 606.974 594.442Z" fill="white"/></svg>',
);


================================================
File: packages/ccc/src/assets/rei.svg.ts
================================================
import { encodeSvgToImgSrc } from "./utils.js";

export const REI_SVG = encodeSvgToImgSrc(
  '<svg id="layer2" data-name="layer2" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 88.24 70.95"><defs><style>.cls-1{fill:url(#linear_9)}.cls-2{fill:rgba(155,84,168,0)}</style><linearGradient id="linear_9" data-name="linear 9" x1="216.98" y1="-423.81" x2="170.95" y2="319.28" gradientTransform="translate(18.94 29.12) scale(.09 -.09)" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#01f395"/><stop offset="1" stop-color="#01b56a"/></linearGradient></defs><g id="layer1" data-name="layer1"><g><rect class="cls-2" width="88.24" height="70.95"/><g><path class="cls-1" d="m19.08,0H4.9l49.8,70.95h14.19L19.08,0Z"/><path d="m69.08,44.08c9.93-2.84,16.92-9.85,16.92-21.5v-.2c0-6.18-2.12-11.44-5.87-15.29-4.56-4.45-11.54-7.08-20.46-7.08H24.09l7.97,11.37h26.59c9.22,0,14.7,4.12,14.7,11.72v.2c0,7.19-5.68,11.86-14.6,11.86h-9.98l25.11,35.79h14.37l-19.16-26.87Z"/><path d="m0,20.16l35.64,50.78h14.19L14.19,20.16H0Z"/></g></g></g></svg>',
);


================================================
File: packages/ccc/src/assets/uni-sat.svg.ts
================================================
import { encodeSvgToImgSrc } from "./utils.js";

export const UNI_SAT_SVG = encodeSvgToImgSrc(
  '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 115.77 147.7" xmlns:v="https://vecta.io/nano"><defs><linearGradient id="A" x1="106.985" y1="30.78" x2="13.053" y2="72.524" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#201c1b"/><stop offset=".36" stop-color="#77390d"/><stop offset=".67" stop-color="#ea8101"/><stop offset="1" stop-color="#f4b852"/></linearGradient><linearGradient id="B" x1="11.381" y1="118.167" x2="120.232" y2="85.771" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#1f1d1c"/><stop offset=".37" stop-color="#77390d"/><stop offset=".67" stop-color="#ea8101"/><stop offset="1" stop-color="#f4fb52"/></linearGradient><radialGradient id="C" cx="53.01" cy="45.84" fx="53.01" fy="45.84" r="11.13" gradientTransform="translate(0 0)" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#f4b852"/><stop offset=".33" stop-color="#ea8101"/><stop offset=".64" stop-color="#77390d"/><stop offset="1" stop-color="#211c1d"/></radialGradient></defs><path d="M81.66 13.29l30.31 30.02c2.58 2.55 3.85 5.13 3.81 7.73s-1.15 4.97-3.32 7.12c-2.27 2.25-4.72 3.39-7.34 3.44-2.62.04-5.22-1.22-7.8-3.77l-31-30.7c-3.52-3.49-6.92-5.96-10.19-7.41s-6.71-1.68-10.31-.68c-3.61.99-7.48 3.54-11.63 7.64-5.72 5.67-8.45 10.99-8.17 15.96s3.12 10.13 8.51 15.46l31.25 30.96c2.61 2.58 3.89 5.16 3.85 7.72-.04 2.57-1.16 4.94-3.37 7.13-2.2 2.18-4.63 3.32-7.27 3.41s-5.27-1.16-7.87-3.74L20.81 73.56c-4.93-4.88-8.49-9.5-10.68-13.86s-3.01-9.29-2.44-14.79c.51-4.71 2.02-9.27 4.54-13.69 2.51-4.42 6.11-8.94 10.78-13.57 5.56-5.51 10.87-9.73 15.93-12.67C43.99 2.04 48.88.41 53.6.07c4.73-.34 9.39.6 14 2.82s9.29 5.68 14.05 10.4z" fill="url(#A)"/><path d="M34.11 134.42L3.81 104.4C1.23 101.84-.04 99.27 0 96.67s1.15-4.97 3.32-7.12c2.27-2.25 4.72-3.39 7.34-3.44 2.62-.04 5.22 1.21 7.8 3.77l30.99 30.7c3.53 3.49 6.92 5.96 10.19 7.41s6.71 1.67 10.32.68 7.48-3.54 11.63-7.65c5.72-5.67 8.45-10.99 8.17-15.96s-3.12-10.13-8.51-15.47L64.6 73.24c-2.61-2.58-3.89-5.16-3.85-7.72.04-2.57 1.16-4.94 3.37-7.13 2.2-2.18 4.63-3.32 7.27-3.41s5.27 1.16 7.87 3.74l15.7 15.41c4.93 4.88 8.49 9.5 10.68 13.86s3.01 9.29 2.44 14.79c-.51 4.71-2.02 9.27-4.54 13.69-2.51 4.42-6.11 8.94-10.78 13.57-5.56 5.51-10.87 9.73-15.93 12.67s-9.95 4.58-14.68 4.92-9.39-.6-14-2.82-9.29-5.68-14.05-10.4z" fill="url(#B)"/><circle cx="53.01" cy="45.83" r="11.13" fill="url(#C)"/></svg>',
);


================================================
File: packages/ccc/src/assets/utils.ts
================================================
export function encodeSvgToImgSrc(svg: string) {
  return `data:image/svg+xml,${encodeURIComponent(svg)}`;
}


================================================
File: packages/ccc/src/assets/utxo-global.svg.ts
================================================
import { encodeSvgToImgSrc } from "./utils.js";

export const UTXO_GLOBAL_SVG = encodeSvgToImgSrc(`
<svg width="512" height="512" viewBox="0 0 512 512" fill="none" xmlns="http://www.w3.org/2000/svg">
    <rect width="512" height="512" rx="256" fill="black"/>
    <g clip-path="url(#clip0_3306_46207)">
    <path fill-rule="evenodd" clip-rule="evenodd" d="M303.998 281.91C303.998 290.558 311.018 297.568 319.677 297.568H379.781C381.224 297.568 382.394 298.736 382.394 300.178V359.734V360.2H382.401C382.648 368.632 389.57 375.392 398.074 375.392C406.577 375.392 413.499 368.632 413.746 360.2H413.753V359.734V297.568V276.691C413.753 270.926 409.073 266.252 403.3 266.252H382.394H319.677C311.018 266.252 303.998 273.262 303.998 281.91Z" fill="white"/>
    <path fill-rule="evenodd" clip-rule="evenodd" d="M382.394 391.05C382.394 382.402 375.375 375.392 366.715 375.392H306.612C305.168 375.392 303.998 374.223 303.998 372.782V313.226V312.76H303.992C303.745 304.328 296.822 297.568 288.319 297.568C279.816 297.568 272.894 304.328 272.647 312.76H272.64V313.226V375.392V396.269C272.64 402.034 277.32 406.708 283.093 406.708H303.998H366.715C375.375 406.708 382.394 399.697 382.394 391.05Z" fill="white"/>
    <path fill-rule="evenodd" clip-rule="evenodd" d="M102.456 401.977C108.579 408.092 118.507 408.092 124.63 401.977L167.13 359.535C168.15 358.516 169.805 358.516 170.825 359.535L212.995 401.647L213.325 401.977L213.33 401.972C219.475 407.76 229.156 407.652 235.168 401.647C241.181 395.643 241.289 385.975 235.494 379.838L235.499 379.833L235.168 379.503L191.151 335.546L176.369 320.783C172.287 316.707 165.668 316.707 161.586 320.783L146.804 335.546L102.456 379.833C96.333 385.948 96.333 395.862 102.456 401.977Z" fill="#FF7201"/>
    <path fill-rule="evenodd" clip-rule="evenodd" d="M102.291 269.894C108.414 263.779 118.342 263.779 124.465 269.894L166.965 312.336C167.985 313.355 169.64 313.355 170.66 312.336L212.83 270.224L213.16 269.894L213.165 269.899C219.31 264.111 228.991 264.219 235.003 270.224C241.016 276.228 241.125 285.896 235.329 292.033L235.334 292.038L235.003 292.367L190.986 336.325L176.204 351.088C172.122 355.164 165.503 355.164 161.421 351.088L146.639 336.325L102.291 292.038C96.1681 285.923 96.1681 276.009 102.291 269.894Z" fill="#FF7201"/>
    <path fill-rule="evenodd" clip-rule="evenodd" d="M273.839 120.74C273.839 129.388 280.859 136.398 289.518 136.398H327.223C328.666 136.398 329.836 137.567 329.836 139.008L329.829 230.412V230.878H329.836C330.083 239.31 337.005 246.07 345.508 246.07C354.011 246.07 360.934 239.31 361.181 230.878H361.188V230.412L361.194 136.398V115.521C361.194 109.756 356.514 105.082 350.742 105.082H329.836H289.518C280.859 105.082 273.839 112.093 273.839 120.74Z" fill="#FF7201"/>
    <path d="M395.035 105.082C403.694 105.082 410.714 112.093 410.714 120.74C410.714 129.388 403.694 136.398 395.035 136.398C386.376 136.398 379.356 129.388 379.356 120.74C379.356 112.093 386.376 105.082 395.035 105.082Z" fill="#FF7201"/>
    <path fill-rule="evenodd" clip-rule="evenodd" d="M239.114 120.646L239.114 120.658L239.114 120.67L239.112 199.095V199.562H239.106C238.859 207.994 231.936 214.754 223.433 214.754C214.93 214.754 208.008 207.994 207.761 199.562H207.754V199.101L207.754 199.096L207.754 199.091L207.756 120.658L207.756 120.184H207.763C208.014 111.756 214.934 105 223.435 105C231.935 105 238.856 111.756 239.107 120.184H239.114V120.646Z" fill="white"/>
    <path fill-rule="evenodd" clip-rule="evenodd" d="M207.755 230.412C207.755 221.764 200.735 214.754 192.075 214.754H131.972C130.528 214.754 129.358 213.586 129.358 212.144V121.272V120.806H129.352C129.105 112.374 122.182 105.614 113.679 105.614C105.176 105.614 98.2539 112.374 98.0069 120.806H98.0001V121.272V214.754V235.632C98.0001 241.397 102.68 246.07 108.453 246.07H129.358H192.075C200.735 246.07 207.755 239.06 207.755 230.412Z" fill="white"/>
    </g>
    <defs>
    <clipPath id="clip0_3306_46207">
    <rect width="316" height="302" fill="white" transform="translate(98 105)"/>
    </clipPath>
    </defs>
</svg>
`);


================================================
File: packages/ckb-ccc/README.md
================================================
<p align="center">
  <a href="https://app.ckbccc.com/">
    <img alt="Logo" src="https://raw.githubusercontent.com/ckb-devrel/ccc/master/assets/logoAndText.svg" style="height: 8rem; max-width: 90%; padding: 0.5rem 0;" />
  </a>
</p>

<h1 align="center" style="font-size: 64px;">
  CCC
</h1>

<p align="center">
  <a href="https://www.npmjs.com/package/ckb-ccc"><img
    alt="NPM Version" src="https://img.shields.io/npm/v/ckb-ccc"
  /></a>
  <img alt="GitHub commit activity" src="https://img.shields.io/github/commit-activity/m/ckb-devrel/ccc" />
  <img alt="GitHub last commit" src="https://img.shields.io/github/last-commit/ckb-devrel/ccc/master" />
  <img alt="GitHub branch check runs" src="https://img.shields.io/github/check-runs/ckb-devrel/ccc/master" />
  <a href="https://live.ckbccc.com/"><img
    alt="Playground" src="https://img.shields.io/website?url=https%3A%2F%2Flive.ckbccc.com%2F&label=Playground"
  /></a>
  <a href="https://app.ckbccc.com/"><img
    alt="App" src="https://img.shields.io/website?url=https%3A%2F%2Fapp.ckbccc.com%2F&label=App"
  /></a>
  <a href="https://docs.ckbccc.com/"><img
    alt="Docs" src="https://img.shields.io/website?url=https%3A%2F%2Fdocs.ckbccc.com%2F&label=Docs"
  /></a>
</p>

<p align="center">
  CCC - CKBers' Codebase is a one-stop solution for your CKB JS/TS ecosystem development. 
  <br />
  Empower yourself with CCC to discover the unlimited potential of CKB.
  <br />
  Interoperate with wallets from different chain ecosystems.
  <br />
  Fully enabling CKB's Turing completeness and cryptographic freedom power.
</p>

<h3 align="center">
  Read more about CCC on <a href="https://docs.ckbccc.com">our website</a> or <a href="https://github.com/ckb-devrel/ccc">GitHub Repo</a>.
</h3>


================================================
File: packages/ckb-ccc/CHANGELOG.md
================================================
# ckb-ccc

## 1.0.11

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.1.3

## 1.0.10

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.1.2

## 1.0.9

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.1.1

## 1.0.8

### Patch Changes

- Updated dependencies [[`8c97c85`](https://github.com/ckb-devrel/ccc/commit/8c97c851db4a2d940c7e59116ca7620cfd0afae1)]:
  - @ckb-ccc/ccc@1.1.0

## 1.0.7

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.0.7

## 1.0.6

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.0.6

## 1.0.5

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.0.5

## 1.0.4

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.0.4

## 1.0.3

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.0.3

## 1.0.2

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.0.2

## 1.0.1

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.0.1

## 1.0.0

### Major Changes

- [#107](https://github.com/ckb-devrel/ccc/pull/107) [`b99f55f`](https://github.com/ckb-devrel/ccc/commit/b99f55f74e64106391ce53f7d0bd0fa7522023cc) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: molecule

### Patch Changes

- Updated dependencies [[`b99f55f`](https://github.com/ckb-devrel/ccc/commit/b99f55f74e64106391ce53f7d0bd0fa7522023cc)]:
  - @ckb-ccc/ccc@1.0.0

## 0.0.18

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@0.0.18

## 0.0.17

### Patch Changes

- Updated dependencies [[`d9affcc`](https://github.com/ckb-devrel/ccc/commit/d9affcc01c7b839b227e4d79bcb66e717577502a)]:
  - @ckb-ccc/ccc@0.0.17

## 0.0.16

### Patch Changes

- [#69](https://github.com/ckb-devrel/ccc/pull/69) [`8824ff2`](https://github.com/ckb-devrel/ccc/commit/8824ff27af3b76186f1a7d6db8c907cd66f09d6a) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Client.waitTransaction

- [#70](https://github.com/ckb-devrel/ccc/pull/70) [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): websocket transport

- [#67](https://github.com/ckb-devrel/ccc/pull/67) [`c092988`](https://github.com/ckb-devrel/ccc/commit/c092988e7765b9ac79498d6bd72a6a2f62859b6f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): auto fee rate

- [#60](https://github.com/ckb-devrel/ccc/pull/60) [`e904963`](https://github.com/ckb-devrel/ccc/commit/e904963a16f12c410d861eb3ae01b87d68cb3e34) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: support Xverse

- Updated dependencies [[`8824ff2`](https://github.com/ckb-devrel/ccc/commit/8824ff27af3b76186f1a7d6db8c907cd66f09d6a), [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366), [`e63a06e`](https://github.com/ckb-devrel/ccc/commit/e63a06ee75ac8595208d216dec88a4228c465e23), [`c092988`](https://github.com/ckb-devrel/ccc/commit/c092988e7765b9ac79498d6bd72a6a2f62859b6f), [`e904963`](https://github.com/ckb-devrel/ccc/commit/e904963a16f12c410d861eb3ae01b87d68cb3e34)]:
  - @ckb-ccc/ccc@0.0.16

## 0.0.16-alpha.9

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@0.0.16-alpha.9

## 0.0.16-alpha.8

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@0.0.16-alpha.8

## 0.0.16-alpha.7

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@0.0.16-alpha.7

## 0.0.16-alpha.6

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@0.0.16-alpha.6

## 0.0.16-alpha.5

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@0.0.16-alpha.5

## 0.0.16-alpha.4

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@0.0.16-alpha.4

## 0.0.16-alpha.3

### Patch Changes

- [#70](https://github.com/ckb-devrel/ccc/pull/70) [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): websocket transport

- Updated dependencies [[`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366)]:
  - @ckb-ccc/ccc@0.0.16-alpha.3

## 0.0.16-alpha.2

### Patch Changes

- [#69](https://github.com/ckb-devrel/ccc/pull/69) [`8824ff2`](https://github.com/ckb-devrel/ccc/commit/8824ff27af3b76186f1a7d6db8c907cd66f09d6a) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Client.waitTransaction

- [#67](https://github.com/ckb-devrel/ccc/pull/67) [`c092988`](https://github.com/ckb-devrel/ccc/commit/c092988e7765b9ac79498d6bd72a6a2f62859b6f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): auto fee rate

- Updated dependencies [[`8824ff2`](https://github.com/ckb-devrel/ccc/commit/8824ff27af3b76186f1a7d6db8c907cd66f09d6a), [`c092988`](https://github.com/ckb-devrel/ccc/commit/c092988e7765b9ac79498d6bd72a6a2f62859b6f)]:
  - @ckb-ccc/ccc@0.0.16-alpha.2

## 0.0.16-alpha.1

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@0.0.16-alpha.1

## 0.0.16-alpha.0

### Patch Changes

- [#60](https://github.com/ckb-devrel/ccc/pull/60) [`e904963`](https://github.com/ckb-devrel/ccc/commit/e904963a16f12c410d861eb3ae01b87d68cb3e34) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: support Xverse

- Updated dependencies [[`e904963`](https://github.com/ckb-devrel/ccc/commit/e904963a16f12c410d861eb3ae01b87d68cb3e34)]:
  - @ckb-ccc/ccc@0.0.16-alpha.0

## 0.0.15

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@0.0.15

## 0.0.14

### Patch Changes

- [#56](https://github.com/ckb-devrel/ccc/pull/56) [`f13f4d3`](https://github.com/ckb-devrel/ccc/commit/f13f4d319ca66b571029a65e945e3a038bfeea25) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Signer.findTransactions

- [#48](https://github.com/ckb-devrel/ccc/pull/48) [`4fb114b`](https://github.com/ckb-devrel/ccc/commit/4fb114bc421c7250eed7388c16f1c026875153e6) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(okx): make okx wallet happy

- Updated dependencies [[`f13f4d3`](https://github.com/ckb-devrel/ccc/commit/f13f4d319ca66b571029a65e945e3a038bfeea25), [`4fb114b`](https://github.com/ckb-devrel/ccc/commit/4fb114bc421c7250eed7388c16f1c026875153e6)]:
  - @ckb-ccc/ccc@0.0.14

## 0.0.14-alpha.2

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@0.0.14-alpha.2

## 0.0.14-alpha.1

### Patch Changes

- [#48](https://github.com/ckb-devrel/ccc/pull/48) [`4fb114b`](https://github.com/ckb-devrel/ccc/commit/4fb114bc421c7250eed7388c16f1c026875153e6) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(okx): make okx wallet happy

- Updated dependencies [[`4fb114b`](https://github.com/ckb-devrel/ccc/commit/4fb114bc421c7250eed7388c16f1c026875153e6)]:
  - @ckb-ccc/ccc@0.0.14-alpha.1

## 0.0.14-alpha.0

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@0.0.14-alpha.0

## 0.0.13

### Patch Changes

- [`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): recordCells should not add usableCells

- [`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): node.js websocket

- [#25](https://github.com/ckb-devrel/ccc/pull/25) [`69c10fd`](https://github.com/ckb-devrel/ccc/commit/69c10fdfcd507433c13b15d17015dca4687afb97) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(utxo-global): switchNetwork

- [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): completeInputs

- [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): more APIs. Since parsing.

- [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Signer.findCells

- Updated dependencies [[`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97), [`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f), [`69c10fd`](https://github.com/ckb-devrel/ccc/commit/69c10fdfcd507433c13b15d17015dca4687afb97), [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b), [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11), [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895)]:
  - @ckb-ccc/ccc@0.0.13

## 0.0.13-alpha.8

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@0.0.13-alpha.8

## 0.0.13-alpha.7

### Patch Changes

- [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): more APIs. Since parsing.

- [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Signer.findCells

- Updated dependencies [[`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11), [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895)]:
  - @ckb-ccc/ccc@0.0.13-alpha.7

## 0.0.13-alpha.6

### Patch Changes

- [#25](https://github.com/ckb-devrel/ccc/pull/25) [`69c10fd`](https://github.com/ckb-devrel/ccc/commit/69c10fdfcd507433c13b15d17015dca4687afb97) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(utxo-global): switchNetwork

- [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): completeInputs

- Updated dependencies [[`69c10fd`](https://github.com/ckb-devrel/ccc/commit/69c10fdfcd507433c13b15d17015dca4687afb97), [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b)]:
  - @ckb-ccc/ccc@0.0.13-alpha.6

## 0.0.13-alpha.5

### Patch Changes

- [`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): recordCells should not add usableCells

- Updated dependencies [[`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97)]:
  - @ckb-ccc/ccc@0.0.13-alpha.5

## 0.0.13-alpha.4

### Patch Changes

- [`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): node.js websocket

- Updated dependencies [[`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f)]:
  - @ckb-ccc/ccc@0.0.13-alpha.4

## 0.0.13-alpha.3

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@0.0.13-alpha.3

## 0.0.13-alpha.2

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@0.0.13-alpha.2

## 0.0.13-alpha.1

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@0.0.13-alpha.1

## 0.0.13-alpha.0

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@0.0.13-alpha.0

## 0.0.12

### Patch Changes

- Updated dependencies [[`591e779`](https://github.com/ckb-devrel/ccc/commit/591e7794ce3d07ceaad55b7a80d2277fe0aa9fe7)]:
  - @ckb-ccc/ccc@0.0.12

## 0.0.12-alpha.7

### Patch Changes

- @ckb-ccc/ccc@0.0.12-alpha.7


================================================
File: packages/ckb-ccc/eslint.config.mjs
================================================
// @ts-check

import eslint from "@eslint/js";
import eslintPluginPrettierRecommended from "eslint-plugin-prettier/recommended";
import tseslint from "typescript-eslint";

import { dirname } from "path";
import { fileURLToPath } from "url";

export default [
  ...tseslint.config({
    files: ["**/*.ts"],
    extends: [
      eslint.configs.recommended,
      ...tseslint.configs.recommendedTypeChecked,
    ],
    rules: {
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          args: "all",
          argsIgnorePattern: "^_",
          caughtErrors: "all",
          caughtErrorsIgnorePattern: "^_",
          destructuredArrayIgnorePattern: "^_",
          varsIgnorePattern: "^_",
          ignoreRestSiblings: true,
        },
      ],
      "@typescript-eslint/unbound-method": ["error", { ignoreStatic: true }],
      "@typescript-eslint/no-unsafe-member-access": "off",
      "@typescript-eslint/require-await": "off",
      "no-empty": "off",
      "prefer-const": [
        "error",
        { ignoreReadBeforeAssign: true, destructuring: "all" },
      ],
    },
    languageOptions: {
      parserOptions: {
        project: true,
        tsconfigRootDir: dirname(fileURLToPath(import.meta.url)),
      },
    },
  }),
  eslintPluginPrettierRecommended,
];


================================================
File: packages/ckb-ccc/package.json
================================================
{
  "name": "ckb-ccc",
  "version": "1.0.11",
  "description": "CCC - CKBer's Codebase. Common Chains Connector.",
  "author": "Hanssen0 <hanssen0@hanssen0.com>",
  "license": "MIT",
  "private": false,
  "homepage": "https://github.com/ckb-devrel/ccc",
  "repository": {
    "type": "git",
    "url": "git://github.com/ckb-devrel/ccc.git"
  },
  "main": "dist.commonjs/index.js",
  "module": "dist/index.js",
  "scripts": {
    "build": "rimraf ./dist && rimraf ./dist.commonjs && tsc && tsc --project tsconfig.commonjs.json && copyfiles -u 2 misc/basedirs/**/* .",
    "lint": "eslint ./src",
    "format": "prettier --write . && eslint --fix ./src"
  },
  "devDependencies": {
    "@eslint/js": "^9.1.1",
    "copyfiles": "^2.4.1",
    "eslint": "^9.1.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.1.3",
    "prettier": "^3.2.5",
    "prettier-plugin-organize-imports": "^3.2.4",
    "rimraf": "^5.0.5",
    "typescript": "^5.4.5",
    "typescript-eslint": "^7.7.0"
  },
  "publishConfig": {
    "access": "public"
  },
  "dependencies": {
    "@ckb-ccc/ccc": "workspace:*"
  }
}


================================================
File: packages/ckb-ccc/tsconfig.base.json
================================================
{
  "compilerOptions": {
    "target": "es2020",
    "incremental": true,
    "allowJs": true,
    "importHelpers": false,
    "declaration": true,
    "declarationMap": true,
    "experimentalDecorators": true,
    "useDefineForClassFields": false,
    "esModuleInterop": true,
    "strict": true,
    "noImplicitAny": true,
    "strictBindCallApply": true,
    "strictNullChecks": true,
    "alwaysStrict": true,
    "noFallthroughCasesInSwitch": true,
    "forceConsistentCasingInFileNames": true,
    "skipLibCheck": true
  },
  "include": ["src/**/*"]
}


================================================
File: packages/ckb-ccc/tsconfig.commonjs.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "NodeNext",
    "moduleResolution": "NodeNext",
    "outDir": "./dist.commonjs"
  }
}


================================================
File: packages/ckb-ccc/tsconfig.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "ESNext",
    "moduleResolution": "Bundler",
    "outDir": "./dist",
  }
}


================================================
File: packages/ckb-ccc/.npmignore
================================================
node_modules/
misc/

*test.js
*test.ts
*test.d.ts
*test.d.ts.map
*spec.js
*spec.ts
*spec.d.ts
*spec.d.ts.map

tsconfig.json
tsconfig.*.json
eslint.config.mjs
.prettierrc
.prettierignore

tsconfig.tsbuildinfo
tsconfig.*.tsbuildinfo
.github/


================================================
File: packages/ckb-ccc/.prettierignore
================================================
node_modules/

dist/
dist.commonjs/

.npmignore
.prettierrc
tsconfig.json
eslint.config.mjs
.prettierrc

tsconfig.tsbuildinfo
.github/


================================================
File: packages/ckb-ccc/.prettierrc
================================================
{
  "singleQuote": false,
  "trailingComma": "all",
  "plugins": ["prettier-plugin-organize-imports"]
}


================================================
File: packages/ckb-ccc/misc/basedirs/dist/package.json
================================================
{
  "type": "module"
}

================================================
File: packages/ckb-ccc/misc/basedirs/dist.commonjs/package.json
================================================
{
  "type": "commonjs"
}


================================================
File: packages/ckb-ccc/src/index.ts
================================================
export * from "@ckb-ccc/ccc";


================================================
File: packages/connector/README.md
================================================
<p align="center">
  <a href="https://app.ckbccc.com/">
    <img alt="Logo" src="https://raw.githubusercontent.com/ckb-devrel/ccc/master/assets/logoAndText.svg" style="height: 8rem; max-width: 90%; padding: 0.5rem 0;" />
  </a>
</p>

<h1 align="center" style="font-size: 48px;">
  CCC Connector
</h1>

<p align="center">
  <a href="https://www.npmjs.com/package/@ckb-ccc/connector"><img
    alt="NPM Version" src="https://img.shields.io/npm/v/%40ckb-ccc%2Fconnector"
  /></a>
  <img alt="GitHub commit activity" src="https://img.shields.io/github/commit-activity/m/ckb-devrel/ccc" />
  <img alt="GitHub last commit" src="https://img.shields.io/github/last-commit/ckb-devrel/ccc/master" />
  <img alt="GitHub branch check runs" src="https://img.shields.io/github/check-runs/ckb-devrel/ccc/master" />
  <a href="https://live.ckbccc.com/"><img
    alt="Playground" src="https://img.shields.io/website?url=https%3A%2F%2Flive.ckbccc.com%2F&label=Playground"
  /></a>
  <a href="https://app.ckbccc.com/"><img
    alt="App" src="https://img.shields.io/website?url=https%3A%2F%2Fapp.ckbccc.com%2F&label=App"
  /></a>
  <a href="https://docs.ckbccc.com/"><img
    alt="Docs" src="https://img.shields.io/website?url=https%3A%2F%2Fdocs.ckbccc.com%2F&label=Docs"
  /></a>
</p>

<p align="center">
  CCC - CKBers' Codebase is a one-stop solution for your CKB JS/TS ecosystem development.
  <br />
  Empower yourself with CCC to discover the unlimited potential of CKB.
  <br />
  Interoperate with wallets from different chain ecosystems.
  <br />
  Fully enabling CKB's Turing completeness and cryptographic freedom power.
</p>

<h3 align="center">
  Read more about CCC on <a href="https://docs.ckbccc.com">our website</a> or <a href="https://github.com/ckb-devrel/ccc">GitHub Repo</a>.
</h3>


================================================
File: packages/connector/CHANGELOG.md
================================================
# @ckb-ccc/connector

## 1.0.11

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.1.3

## 1.0.10

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.1.2

## 1.0.9

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.1.1

## 1.0.8

### Patch Changes

- Updated dependencies [[`8c97c85`](https://github.com/ckb-devrel/ccc/commit/8c97c851db4a2d940c7e59116ca7620cfd0afae1)]:
  - @ckb-ccc/ccc@1.1.0

## 1.0.7

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.0.7

## 1.0.6

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.0.6

## 1.0.5

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.0.5

## 1.0.4

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.0.4

## 1.0.3

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.0.3

## 1.0.2

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.0.2

## 1.0.1

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.0.1

## 1.0.0

### Major Changes

- [#107](https://github.com/ckb-devrel/ccc/pull/107) [`b99f55f`](https://github.com/ckb-devrel/ccc/commit/b99f55f74e64106391ce53f7d0bd0fa7522023cc) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: molecule

### Patch Changes

- Updated dependencies [[`b99f55f`](https://github.com/ckb-devrel/ccc/commit/b99f55f74e64106391ce53f7d0bd0fa7522023cc)]:
  - @ckb-ccc/ccc@1.0.0

## 0.0.19

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@0.0.18

## 0.0.18

### Patch Changes

- Updated dependencies [[`d9affcc`](https://github.com/ckb-devrel/ccc/commit/d9affcc01c7b839b227e4d79bcb66e717577502a)]:
  - @ckb-ccc/ccc@0.0.17

## 0.0.17

### Patch Changes

- [#62](https://github.com/ckb-devrel/ccc/pull/62) [`543c765`](https://github.com/ckb-devrel/ccc/commit/543c76523b3864f2203631762c27b8fc4c942cd7) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(connector): Powered by CCC

- [#69](https://github.com/ckb-devrel/ccc/pull/69) [`8824ff2`](https://github.com/ckb-devrel/ccc/commit/8824ff27af3b76186f1a7d6db8c907cd66f09d6a) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Client.waitTransaction

- [#70](https://github.com/ckb-devrel/ccc/pull/70) [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): websocket transport

- [#96](https://github.com/ckb-devrel/ccc/pull/96) [`e63a06e`](https://github.com/ckb-devrel/ccc/commit/e63a06ee75ac8595208d216dec88a4228c465e23) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: support doge signer

- [#67](https://github.com/ckb-devrel/ccc/pull/67) [`c092988`](https://github.com/ckb-devrel/ccc/commit/c092988e7765b9ac79498d6bd72a6a2f62859b6f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): auto fee rate

- [#60](https://github.com/ckb-devrel/ccc/pull/60) [`e904963`](https://github.com/ckb-devrel/ccc/commit/e904963a16f12c410d861eb3ae01b87d68cb3e34) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: support Xverse

- Updated dependencies [[`8824ff2`](https://github.com/ckb-devrel/ccc/commit/8824ff27af3b76186f1a7d6db8c907cd66f09d6a), [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366), [`e63a06e`](https://github.com/ckb-devrel/ccc/commit/e63a06ee75ac8595208d216dec88a4228c465e23), [`c092988`](https://github.com/ckb-devrel/ccc/commit/c092988e7765b9ac79498d6bd72a6a2f62859b6f), [`e904963`](https://github.com/ckb-devrel/ccc/commit/e904963a16f12c410d861eb3ae01b87d68cb3e34)]:
  - @ckb-ccc/ccc@0.0.16

## 0.0.17-alpha.10

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@0.0.16-alpha.9

## 0.0.17-alpha.9

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@0.0.16-alpha.8

## 0.0.17-alpha.8

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@0.0.16-alpha.7

## 0.0.17-alpha.7

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@0.0.16-alpha.6

## 0.0.17-alpha.6

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@0.0.16-alpha.5

## 0.0.17-alpha.5

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@0.0.16-alpha.4

## 0.0.17-alpha.4

### Patch Changes

- [#70](https://github.com/ckb-devrel/ccc/pull/70) [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): websocket transport

- Updated dependencies [[`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366)]:
  - @ckb-ccc/ccc@0.0.16-alpha.3

## 0.0.17-alpha.3

### Patch Changes

- [#69](https://github.com/ckb-devrel/ccc/pull/69) [`8824ff2`](https://github.com/ckb-devrel/ccc/commit/8824ff27af3b76186f1a7d6db8c907cd66f09d6a) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Client.waitTransaction

- [#67](https://github.com/ckb-devrel/ccc/pull/67) [`c092988`](https://github.com/ckb-devrel/ccc/commit/c092988e7765b9ac79498d6bd72a6a2f62859b6f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): auto fee rate

- Updated dependencies [[`8824ff2`](https://github.com/ckb-devrel/ccc/commit/8824ff27af3b76186f1a7d6db8c907cd66f09d6a), [`c092988`](https://github.com/ckb-devrel/ccc/commit/c092988e7765b9ac79498d6bd72a6a2f62859b6f)]:
  - @ckb-ccc/ccc@0.0.16-alpha.2

## 0.0.17-alpha.2

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@0.0.16-alpha.1

## 0.0.17-alpha.1

### Patch Changes

- [#62](https://github.com/ckb-devrel/ccc/pull/62) [`543c765`](https://github.com/ckb-devrel/ccc/commit/543c76523b3864f2203631762c27b8fc4c942cd7) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(connector): Powered by CCC

## 0.0.17-alpha.0

### Patch Changes

- [#60](https://github.com/ckb-devrel/ccc/pull/60) [`e904963`](https://github.com/ckb-devrel/ccc/commit/e904963a16f12c410d861eb3ae01b87d68cb3e34) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: support Xverse

- Updated dependencies [[`e904963`](https://github.com/ckb-devrel/ccc/commit/e904963a16f12c410d861eb3ae01b87d68cb3e34)]:
  - @ckb-ccc/ccc@0.0.16-alpha.0

## 0.0.16

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@0.0.15

## 0.0.15

### Patch Changes

- [`2483637`](https://github.com/ckb-devrel/ccc/commit/2483637c89a2e012ed6408d8cabc123b8a45faa9) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(connector): animation

## 0.0.14

### Patch Changes

- [#56](https://github.com/ckb-devrel/ccc/pull/56) [`b4aa690`](https://github.com/ckb-devrel/ccc/commit/b4aa69085d69fc0953629fd907212922d7d106dd) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(connector): manage button

- [#56](https://github.com/ckb-devrel/ccc/pull/56) [`f13f4d3`](https://github.com/ckb-devrel/ccc/commit/f13f4d319ca66b571029a65e945e3a038bfeea25) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Signer.findTransactions

- [#48](https://github.com/ckb-devrel/ccc/pull/48) [`4fb114b`](https://github.com/ckb-devrel/ccc/commit/4fb114bc421c7250eed7388c16f1c026875153e6) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(okx): make okx wallet happy

- [#54](https://github.com/ckb-devrel/ccc/pull/54) [`3f49876`](https://github.com/ckb-devrel/ccc/commit/3f49876826f5a9eeff8d14c7d8d7b9cf2cea0f32) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(connector): useless back button

- [#53](https://github.com/ckb-devrel/ccc/pull/53) [`32bffff`](https://github.com/ckb-devrel/ccc/commit/32bffff407934ec5d16bf7c5701b128d8b29c452) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(connector): select client

- Updated dependencies [[`f13f4d3`](https://github.com/ckb-devrel/ccc/commit/f13f4d319ca66b571029a65e945e3a038bfeea25), [`4fb114b`](https://github.com/ckb-devrel/ccc/commit/4fb114bc421c7250eed7388c16f1c026875153e6)]:
  - @ckb-ccc/ccc@0.0.14

## 0.0.14-alpha.3

### Patch Changes

- [#54](https://github.com/ckb-devrel/ccc/pull/54) [`3f49876`](https://github.com/ckb-devrel/ccc/commit/3f49876826f5a9eeff8d14c7d8d7b9cf2cea0f32) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(connector): useless back button

## 0.0.14-alpha.2

### Patch Changes

- [#53](https://github.com/ckb-devrel/ccc/pull/53) [`32bffff`](https://github.com/ckb-devrel/ccc/commit/32bffff407934ec5d16bf7c5701b128d8b29c452) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(connector): select client

- Updated dependencies []:
  - @ckb-ccc/ccc@0.0.14-alpha.2

## 0.0.14-alpha.1

### Patch Changes

- [#48](https://github.com/ckb-devrel/ccc/pull/48) [`4fb114b`](https://github.com/ckb-devrel/ccc/commit/4fb114bc421c7250eed7388c16f1c026875153e6) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(okx): make okx wallet happy

- Updated dependencies [[`4fb114b`](https://github.com/ckb-devrel/ccc/commit/4fb114bc421c7250eed7388c16f1c026875153e6)]:
  - @ckb-ccc/ccc@0.0.14-alpha.1

## 0.0.14-alpha.0

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@0.0.14-alpha.0

## 0.0.13

### Patch Changes

- [`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): recordCells should not add usableCells

- [`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): node.js websocket

- [#25](https://github.com/ckb-devrel/ccc/pull/25) [`69c10fd`](https://github.com/ckb-devrel/ccc/commit/69c10fdfcd507433c13b15d17015dca4687afb97) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(utxo-global): switchNetwork

- [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): completeInputs

- [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): more APIs. Since parsing.

- [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Signer.findCells

- Updated dependencies [[`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97), [`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f), [`69c10fd`](https://github.com/ckb-devrel/ccc/commit/69c10fdfcd507433c13b15d17015dca4687afb97), [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b), [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11), [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895)]:
  - @ckb-ccc/ccc@0.0.13

## 0.0.13-alpha.8

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@0.0.13-alpha.8

## 0.0.13-alpha.7

### Patch Changes

- [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): more APIs. Since parsing.

- [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Signer.findCells

- Updated dependencies [[`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11), [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895)]:
  - @ckb-ccc/ccc@0.0.13-alpha.7

## 0.0.13-alpha.6

### Patch Changes

- [#25](https://github.com/ckb-devrel/ccc/pull/25) [`69c10fd`](https://github.com/ckb-devrel/ccc/commit/69c10fdfcd507433c13b15d17015dca4687afb97) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(utxo-global): switchNetwork

- [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): completeInputs

- Updated dependencies [[`69c10fd`](https://github.com/ckb-devrel/ccc/commit/69c10fdfcd507433c13b15d17015dca4687afb97), [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b)]:
  - @ckb-ccc/ccc@0.0.13-alpha.6

## 0.0.13-alpha.5

### Patch Changes

- [`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): recordCells should not add usableCells

- Updated dependencies [[`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97)]:
  - @ckb-ccc/ccc@0.0.13-alpha.5

## 0.0.13-alpha.4

### Patch Changes

- [`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): node.js websocket

- Updated dependencies [[`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f)]:
  - @ckb-ccc/ccc@0.0.13-alpha.4

## 0.0.13-alpha.3

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@0.0.13-alpha.3

## 0.0.13-alpha.2

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@0.0.13-alpha.2

## 0.0.13-alpha.1

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@0.0.13-alpha.1

## 0.0.13-alpha.0

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@0.0.13-alpha.0

## 0.0.12

### Patch Changes

- [`6bee006`](https://github.com/ckb-devrel/ccc/commit/6bee006fbcb96986c65ca4d2d896fca21db2503b) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(connector): catch connecting error

- [`591e779`](https://github.com/ckb-devrel/ccc/commit/591e7794ce3d07ceaad55b7a80d2277fe0aa9fe7) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: custom SignersController

- Updated dependencies [[`591e779`](https://github.com/ckb-devrel/ccc/commit/591e7794ce3d07ceaad55b7a80d2277fe0aa9fe7)]:
  - @ckb-ccc/ccc@0.0.12

## 0.0.12-alpha.7

### Patch Changes

- fix(connector): catch connecting error
  - @ckb-ccc/ccc@0.0.12-alpha.7


================================================
File: packages/connector/eslint.config.mjs
================================================
// @ts-check

import eslint from "@eslint/js";
import eslintPluginPrettierRecommended from "eslint-plugin-prettier/recommended";
import tseslint from "typescript-eslint";

import { dirname } from "path";
import { fileURLToPath } from "url";

export default [
  ...tseslint.config({
    files: ["**/*.ts"],
    extends: [
      eslint.configs.recommended,
      ...tseslint.configs.recommendedTypeChecked,
    ],
    rules: {
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          args: "all",
          argsIgnorePattern: "^_",
          caughtErrors: "all",
          caughtErrorsIgnorePattern: "^_",
          destructuredArrayIgnorePattern: "^_",
          varsIgnorePattern: "^_",
          ignoreRestSiblings: true,
        },
      ],
      "@typescript-eslint/unbound-method": ["error", { ignoreStatic: true }],
      "@typescript-eslint/no-unsafe-member-access": "off",
      "@typescript-eslint/require-await": "off",
      "no-empty": "off",
      "prefer-const": [
        "error",
        { ignoreReadBeforeAssign: true, destructuring: "all" },
      ],
    },
    languageOptions: {
      parserOptions: {
        project: true,
        tsconfigRootDir: dirname(fileURLToPath(import.meta.url)),
      },
    },
  }),
  eslintPluginPrettierRecommended,
];


================================================
File: packages/connector/package.json
================================================
{
  "name": "@ckb-ccc/connector",
  "version": "1.0.11",
  "description": "CCC - CKBer's Codebase. Common Chains Connector UI",
  "author": "Hanssen0 <hanssen0@hanssen0.com>",
  "license": "MIT",
  "private": false,
  "homepage": "https://github.com/ckb-devrel/ccc",
  "repository": {
    "type": "git",
    "url": "git://github.com/ckb-devrel/ccc.git"
  },
  "type": "module",
  "main": "dist/index.js",
  "exports": {
    ".": "./dist/index.js",
    "./barrel": "./dist/barrel.js",
    "./advancedBarrel": "./dist/advancedBarrel.js",
    "./advanced": "./dist/advanced.js"
  },
  "scripts": {
    "build": "rimraf ./dist && tsc",
    "lint": "eslint ./src",
    "format": "prettier --write . && eslint --fix ./src"
  },
  "devDependencies": {
    "@eslint/js": "^9.1.1",
    "eslint": "^9.1.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.1.3",
    "prettier": "^3.2.5",
    "prettier-plugin-organize-imports": "^3.2.4",
    "rimraf": "^5.0.5",
    "typescript": "^5.4.5",
    "typescript-eslint": "^7.7.0"
  },
  "publishConfig": {
    "access": "public"
  },
  "dependencies": {
    "@ckb-ccc/ccc": "workspace:*",
    "lit": "^3.1.3"
  }
}


================================================
File: packages/connector/tsconfig.base.json
================================================
{
  "compilerOptions": {
    "target": "es2020",
    "incremental": true,
    "allowJs": true,
    "importHelpers": false,
    "declaration": true,
    "declarationMap": true,
    "experimentalDecorators": true,
    "useDefineForClassFields": false,
    "esModuleInterop": true,
    "strict": true,
    "noImplicitAny": true,
    "strictBindCallApply": true,
    "strictNullChecks": true,
    "alwaysStrict": true,
    "noFallthroughCasesInSwitch": true,
    "forceConsistentCasingInFileNames": true,
    "skipLibCheck": true
  },
  "include": ["src/**/*"]
}


================================================
File: packages/connector/tsconfig.commonjs.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "NodeNext",
    "moduleResolution": "NodeNext",
    "outDir": "./dist.commonjs"
  }
}


================================================
File: packages/connector/tsconfig.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "ESNext",
    "moduleResolution": "Bundler",
    "outDir": "./dist",
  }
}


================================================
File: packages/connector/typedoc.json
================================================
{
  "$schema": "https://typedoc.org/schema.json",
  "entryPoints": ["./src/index.ts", "./src/advanced.ts"],
  "extends": ["../../typedoc.base.json"],
  "name": "@ckb-ccc connector"
}


================================================
File: packages/connector/.npmignore
================================================
node_modules/
misc/

*test.js
*test.ts
*test.d.ts
*test.d.ts.map
*spec.js
*spec.ts
*spec.d.ts
*spec.d.ts.map

tsconfig.json
tsconfig.*.json
eslint.config.mjs
.prettierrc
.prettierignore

tsconfig.tsbuildinfo
tsconfig.*.tsbuildinfo
.github/


================================================
File: packages/connector/.prettierignore
================================================
node_modules/

dist/
dist.commonjs/

.npmignore
.prettierrc
tsconfig.json
eslint.config.mjs
.prettierrc

tsconfig.tsbuildinfo
.github/


================================================
File: packages/connector/.prettierrc
================================================
{
  "singleQuote": false,
  "trailingComma": "all",
  "plugins": ["prettier-plugin-organize-imports"]
}


================================================
File: packages/connector/src/advanced.ts
================================================
export * from "./advancedBarrel.js";
export * as cccA from "./advancedBarrel.js";


================================================
File: packages/connector/src/advancedBarrel.ts
================================================
export * from "@ckb-ccc/ccc/advancedBarrel";
export * from "./components/index.js";
export * from "./scenes/index.js";


================================================
File: packages/connector/src/barrel.ts
================================================
export * from "@ckb-ccc/ccc/barrel";
export * from "./connector/index.js";

import "./components/index.js";
import "./scenes/index.js";


================================================
File: packages/connector/src/index.ts
================================================
export * from "./barrel.js";
export * as ccc from "./barrel.js";


================================================
File: packages/connector/src/assets/close.svg.ts
================================================
import { html } from "lit";

export const CLOSE_SVG = html`
  <svg
    width="12"
    height="12"
    viewBox="0 0 12 12"
    xmlns="http://www.w3.org/2000/svg"
    class="primary-icon"
  >
    <path
      d="M10.8989 1.0512C10.5085 0.660741 9.87543 0.660703 9.48493 1.05111L5.94897 4.58624L2.41397 1.05124C2.0235 0.660772 1.39043 0.660773 0.999968 1.05124C0.609503 1.4417 0.609503 2.07477 0.999969 2.46524L4.53497 6.00024L0.999968 9.53524C0.609503 9.9257 0.609503 10.5588 0.999968 10.9492C1.39043 11.3397 2.0235 11.3397 2.41397 10.9492L5.94897 7.41424L9.48493 10.9494C9.87543 11.3398 10.5085 11.3397 10.8989 10.9493C11.2894 10.5588 11.2894 9.92568 10.8989 9.5352L7.36397 6.00024L10.8989 2.46528C11.2894 2.07479 11.2894 1.44168 10.8989 1.0512Z"
      fill="currentColor"
    />
  </svg>
`;


================================================
File: packages/connector/src/assets/diconnect.svg.ts
================================================
import { html } from "lit";

export const DISCONNECT_SVG = html`
  <svg
    width="32"
    height="32"
    viewBox="3 3 26 26"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    class="primary-icon"
  >
    <path
      d="M20.375 16.875H14.25V15.125H20.375L19.5 13.375H21.25L23 16L21.25 18.625H19.5L20.375 16.875ZM20.9509 11.051L19.7128 12.2886C19.226 11.8 18.6473 11.4125 18.0101 11.1484C17.3729 10.8844 16.6897 10.749 16 10.75C13.1006 10.75 10.75 13.1006 10.75 16C10.75 18.8994 13.1006 21.25 16 21.25C17.4107 21.25 18.7309 20.6923 19.71 19.7147L20.9462 20.9532C20.297 21.6031 19.5259 22.1184 18.6771 22.4696C17.8283 22.8209 16.9186 23.0011 16 23C12.1341 23 9 19.8659 9 16C9 12.1341 12.1341 9 16 9C17.8816 9 19.647 9.74667 20.9509 11.051Z"
      fill="currentColor"
    />
  </svg>
`;


================================================
File: packages/connector/src/assets/left.svg.ts
================================================
import { html } from "lit";

export const LEFT_SVG = html`
  <svg
    width="8"
    height="14"
    viewBox="0 0 8 14"
    xmlns="http://www.w3.org/2000/svg"
    class="primary-icon"
  >
    <path
      d="M6.74554 13.5C6.54646 13.5 6.35454 13.4177 6.21275 13.2695L0.720203 7.55253C0.426599 7.24573 0.426599 6.75035 0.720203 6.44355L6.21275 0.725059C6.50779 0.422747 6.98185 0.42574 7.27402 0.729549C7.5662 1.03485 7.56763 1.52723 7.27832 1.83404L2.31999 6.99729L7.27975 12.162C7.49459 12.3865 7.55904 12.7233 7.44303 13.0166C7.32415 13.3084 7.0506 13.5 6.74554 13.5Z"
      fill="currentColor"
      stroke="currentColor"
    />
  </svg>
`;


================================================
File: packages/connector/src/assets/retry.svg.ts
================================================
import { html } from "lit";

export const RETRY_SVG = html`
  <svg
    width="12"
    height="12"
    viewBox="0 0 12 12"
    xmlns="http://www.w3.org/2000/svg"
    fill="currentColor"
    class="primary-icon"
  >
    <path
      d="M11.398 1.16864C11.0369 1.16864 10.7961 1.41021 10.7961 1.77256V2.37648C10.1941 1.531 9.35141 0.866684 8.38828 0.504333C5.37851 -0.82429 1.82699 0.564725 0.502691 3.58432C-0.821607 6.60392 0.562886 10.167 3.57265 11.4957C6.58242 12.8243 10.1339 11.4353 11.4582 8.41568H11.398C11.398 8.05333 11.1573 7.81176 10.7961 7.81176C10.4349 7.81176 10.1941 8.05333 10.1941 8.41568H10.1339C9.59219 9.32156 8.80965 10.0463 7.78633 10.469C5.31832 11.4957 2.54933 10.2878 1.52601 7.81176C0.502691 5.33569 1.7066 2.49727 4.17461 1.531C6.40183 0.564725 8.93004 1.531 10.1339 3.58432H8.99023C8.62906 3.58432 8.38828 3.82589 8.38828 4.18824C8.38828 4.55059 8.62906 4.79216 8.99023 4.79216H11.398C11.7592 4.79216 12 4.55059 12 4.18824V1.77256C12 1.41021 11.7592 1.16864 11.398 1.16864Z"
    />
  </svg>
`;


================================================
File: packages/connector/src/assets/swap.svg.ts
================================================
import { html } from "lit";

export const SWAP_SVG = html`
  <svg
    width="13"
    height="12"
    viewBox="0 0 13 12"
    xmlns="http://www.w3.org/2000/svg"
    class="secondary-icon"
    stroke="currentColor"
  >
    <path
      d="M9.30688 5.22537L11.1669 3.36536L9.30688 1.50537"
      stroke-width="1.33333"
      stroke-linecap="round"
      stroke-linejoin="round"
    />
    <path
      d="M2.16699 3.36523H11.167"
      stroke-width="1.33333"
      stroke-linecap="round"
      stroke-linejoin="round"
    />
    <path
      d="M4.02698 6.77539L2.16699 8.63541L4.02698 10.4954"
      stroke-width="1.33333"
      stroke-linecap="round"
      stroke-linejoin="round"
    />
    <path
      d="M11.167 8.63525H2.16699"
      stroke-width="1.33333"
      stroke-linecap="round"
      stroke-linejoin="round"
    />
  </svg>
`;


================================================
File: packages/connector/src/assets/user.svg.ts
================================================
import { html } from "lit";

export const USER_SVG = html`
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="24"
    height="24"
    viewBox="-3 -3 30 30"
    fill="none"
    stroke="currentColor"
    stroke-width="2"
    stroke-linecap="round"
    stroke-linejoin="round"
    class="primary-icon"
  >
    <path d="M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2" />
    <circle cx="12" cy="7" r="4" />
  </svg>
`;


================================================
File: packages/connector/src/assets/utils.ts
================================================
export function encodeSvgToImgSrc(svg: string) {
  return `data:image/svg+xml,${encodeURIComponent(svg)}`;
}


================================================
File: packages/connector/src/assets/chains/btc.svg.ts
================================================
import { encodeSvgToImgSrc } from "../utils.js";

export const BTC_SVG = encodeSvgToImgSrc(
  '<svg xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns="http://www.w3.org/2000/svg" xmlns:cc="http://creativecommons.org/ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" height="64" width="64" version="1.1"><link xmlns="" type="text/css" rel="stylesheet" id="dark-mode-custom-link"/><link xmlns="" type="text/css" rel="stylesheet" id="dark-mode-general-link"/><style xmlns="" lang="en" type="text/css" id="dark-mode-custom-style"/><style xmlns="" lang="en" type="text/css" id="dark-mode-native-style"/><style xmlns="" lang="en" type="text/css" id="dark-mode-native-sheet"/><script xmlns=""/><g transform="translate(0.00630876,-0.00301984)"><path fill="#f7931a" d="m63.033,39.744c-4.274,17.143-21.637,27.576-38.782,23.301-17.138-4.274-27.571-21.638-23.295-38.78,4.272-17.145,21.635-27.579,38.775-23.305,17.144,4.274,27.576,21.64,23.302,38.784z"/><path fill="#FFF" d="m46.103,27.444c0.637-4.258-2.605-6.547-7.038-8.074l1.438-5.768-3.511-0.875-1.4,5.616c-0.923-0.23-1.871-0.447-2.813-0.662l1.41-5.653-3.509-0.875-1.439,5.766c-0.764-0.174-1.514-0.346-2.242-0.527l0.004-0.018-4.842-1.209-0.934,3.75s2.605,0.597,2.55,0.634c1.422,0.355,1.679,1.296,1.636,2.042l-1.638,6.571c0.098,0.025,0.225,0.061,0.365,0.117-0.117-0.029-0.242-0.061-0.371-0.092l-2.296,9.205c-0.174,0.432-0.615,1.08-1.609,0.834,0.035,0.051-2.552-0.637-2.552-0.637l-1.743,4.019,4.569,1.139c0.85,0.213,1.683,0.436,2.503,0.646l-1.453,5.834,3.507,0.875,1.439-5.772c0.958,0.26,1.888,0.5,2.798,0.726l-1.434,5.745,3.511,0.875,1.453-5.823c5.987,1.133,10.489,0.676,12.384-4.739,1.527-4.36-0.076-6.875-3.226-8.515,2.294-0.529,4.022-2.038,4.483-5.155zm-8.022,11.249c-1.085,4.36-8.426,2.003-10.806,1.412l1.928-7.729c2.38,0.594,10.012,1.77,8.878,6.317zm1.086-11.312c-0.99,3.966-7.1,1.951-9.082,1.457l1.748-7.01c1.982,0.494,8.365,1.416,7.334,5.553z"/></g><script xmlns=""/></svg>',
);


================================================
File: packages/connector/src/assets/chains/ckb.svg.ts
================================================
import { encodeSvgToImgSrc } from "../utils.js";

export const CKB_SVG = encodeSvgToImgSrc(
  '<svg width="668" height="666.66669" xmlns="http://www.w3.org/2000/svg" xmlns:svg="http://www.w3.org/2000/svg"><polygon points="170.265,206.318 223.416,206.318 223.416,93.897 264.161,93.897 170.265,0 " transform="matrix(1.8256046,0,0,1.8256046,-166.4037,144.47964)" /><polygon points="324.79,112.422 284.046,112.422 377.941,206.318 377.941,0 324.79,0 " transform="matrix(1.8256046,0,0,1.8256046,-166.4037,144.47964)" /></svg>',
);


================================================
File: packages/connector/src/assets/chains/doge.svg.ts
================================================
import { encodeSvgToImgSrc } from "../utils.js";

export const DOGE_SVG = encodeSvgToImgSrc(
  '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1875 1875"><title>Dogecoin (DOGE)</title><g id="Layer_2" data-name="Layer 2"><g id="Layer_1-2" data-name="Layer 1"><g id="Layer_1-3" data-name="Layer_1"><circle cx="937.5" cy="937.5" r="937.5" style="fill:#988430"/><circle cx="937.5" cy="937.5" r="907.47" style="fill:#7a6a2a"/><circle cx="937.5" cy="937.5" r="888.35" style="fill:#ba9f33"/><path d="M409.89,837.38c-5.31-4.85-10.92-9.71-16.08-14.56s-10.46-9.71-15.77-14.56l-15.78-15c-2.58-2.58-5.31-4.85-7.89-7.44-2.58-2.27-5.61-4.85-8.19-7.13-20.94-19.87-42-39.74-62.65-59.62,21.39,19.57,42.33,39,63.72,58.86l7.43,7.44c2.58,2.57,5.31,4.85,7.89,7.43l15.77,14.56c5.31,4.85,10.47,9.71,15.78,15s10.47,10.16,15.78,15Zm-277.91-3s76.15,7.88,113.32,13.19c34.43,4.86,142.14,21.39,142.14,21.39Zm0,0c21.39,1.82,42.78,4.09,64.17,6.37,10.92,1.06,21.39,2.27,31.86,3.33l16.07,1.83c5.31.75,10.47,1.51,15.78,2.27l63.72,10.16,31.85,5.31c10.47,1.82,20.94,3.8,31.86,5.62-10.47-1.06-21.39-2.58-31.86-4.1l-31.85-4.55-63.72-9.4c-5.31-.76-10.47-1.83-15.78-2.58L228,846.79c-10.47-1.06-21.39-2.58-31.86-3.8-21.39-2.57-42.78-5.31-64.17-8.64ZM379.86,888.8s-81.31,20.64-108.77,28.53c-27,7.43-108.77,32.31-108.77,32.31l217.53-60.83Z" style="fill:#cfb66c;fill-rule:evenodd"/><path d="M379.85,888.8c-18.05,5.31-36,10.47-54.31,15.33l-54.31,14.56c-18.05,5.31-36,10.47-54,15.78l-27,7.43c-8.95,2.58-18.05,4.85-27.3,7.44,8.94-3,18.05-6.07,27-8.65l27-8.64c18.05-5.62,36-10.93,54-16.54,18.35-4.55,36.41-9.41,54.76-13.81,17.44-4.4,35.8-8.79,54.16-12.89h0ZM173.7,999.7c8.94-3.34,112.1-51.42,136.07-62.65,12-5.62,46.88-18,46.88-18L173.7,999.7Z" style="fill:#cfb66c;fill-rule:evenodd"/><path d="M173.7,999.7c7.88-3,15.32-6.67,22.9-10.16l22.45-10.47,45.06-21.69c15-7.13,29.58-15,45.05-21.7,7.89-3.33,15.78-6.06,23.66-8.64l12-3.79c4.09-1.06,7.89-2.28,12-3.34-15,7.13-30.79,13.2-45.81,20.17-15,7.44-30.34,13.51-45.82,20.18l-45.81,20.17C204,986.66,189,993.33,173.69,999.7h0Zm10,42s93.44-54.76,125.6-72.36c16.84-9.4,71.3-36.41,71.3-36.41Z" style="fill:#cfb66c;fill-rule:evenodd"/><path d="M183.71,1041.72c15.77-9.71,31.85-19.57,47.93-29.58l24-14.57c8.19-4.85,16.08-9.4,24.43-14.25,8.19-4.86,16.08-9.71,24.42-14.26a87.54,87.54,0,0,1,12.44-6.37l12.74-6.37c16.84-8.19,33.68-16.54,51.43-23.67-16.08,10.17-32.62,18.82-49.15,27.76-8.19,4.55-16.54,8.65-24.73,13.2s-16.08,9.41-24.43,13.81c-8.19,4.85-16.08,9.4-24.42,13.8l-24.73,13.5-49.91,27h0Zm196.14-96.79s-58.1,44.6-76.91,58.86-74.18,54.31-74.18,54.31L379.85,944.93Z" style="fill:#cfb66c;fill-rule:evenodd"/><polygon points="713.29 1304.61 683.56 1248.33 700.85 1177.94 824.18 1130.31 771.69 1022.61 797.63 913.84 846.33 816.44 996.82 792.78 1107.4 687.35 1346.18 705.4 1393.05 960.71 1302.79 1282.16 1251.37 1448.58 1042.93 1456.47 946.15 1389.42 832.83 1342.08 713.29 1304.61" style="fill:#e2cc85;fill-rule:evenodd"/><path d="M1078.89,1302.79s-28.83,13.2-78,10.16C986.66,1293.84,887,1284.89,887,1284.89s-12.44-3.79-34.44,5.31c-22.14,9-43.08,7.89-62.65,12.74s-39-20.63-54-25.94c-15-5.61-34.89-19.11-34.89-19.11l-42-4.1-84.34-35.65L440.69,1084.65l-36.41,57-11.23,70.54,40.51,83.59,109.07,99.36,212.68,54L881.37,1412l157.92-66.75,39.6-42.47Z" style="fill:#f1d789;fill-rule:evenodd"/><polygon points="323.27 831.01 350.27 749.25 382.44 696.45 486.04 687.8 454.94 778.52 368.33 932.65 404.28 1070.24 340.57 1102.09 320.99 1072.06 305.22 1003.19 304.16 925.82 323.27 831.01" style="fill:#f4ecb4;fill-rule:evenodd"/><path d="M439.47,1297.18l-19.87-27.76s-5.31-13.2-2.27-24.73c3-11.68,2.57-12.44,1.06-16.84s-14.26-19.57-13.5-32.62c.75-13.2-1.06-17.6,8.64-28.06,10.16-10.16,7.13-27.76,7.13-27.76l13.2,8.19,3-4.55s4.85,3.79,4.85,9.71c1.06-8.19-3.34-46.12,6.67-54.76s27.76,40.5,27.76,40.5l-10.92-71.3-28.07-73.11-49.91-66.75-3-73.58v-6.37s-22.91,35.2-29.28,63c-4.55,19.11,6.37,42.32,4.1,69.78-1.83,27.31-4.1,25.18,2.57,36s22.91,33.07,16.54,49.15c-5.61,13.81-24.73,4.1-24.73,4.1s-3.79,11.22-8.95,15.32c-1.82-6.67-3.79-10.92-7.43-15-.31,2.58-1.06,6.07-1.06,6.07s-3.34-10.47-6.68-23.67c-4.54-17.59-9.4-40.8-13.8-53.24-1.82,7.13-6.37,28.82-6.37,28.82l2.58,33.38,12.44,45.81,12,30,11.68,36.71L358,1198.28l8.19,18.81,7.13,42.33,34.43,36.4,18.36,8.2,13.34-6.83h0Z" style="fill:#f3e19d;fill-rule:evenodd"/><path d="M341.32,764.26s-24.73,42-31.85,84.34-13.5,87.08-9,144.72c4.55,58.11,13.2,93.75,20.18,119.24,12,42.33,43.08,101.19,43.08,101.19l1.06-2.28a159.88,159.88,0,0,1-12.44-31.1c-4.1-16.08-5.62-35.19-9.41-43.84-3.34-8.64-8.95-16.08-11.68-26.7-2.58-10.16-3-26.24-10.92-38.22-3.34-4.86-7.44-17.6-8.65-30.34-1.52-19.12.76-40.51-1.06-58.1-3.34-29.28-5.61-49.15-2.58-64.48s18.82-58.85,28.53-93.44c6.37-22.15,2.57-40.81,14.25-60.08,11.68-19.11,18.82-35.95,21.39-47.63,3-10.62-30.94,46.72-30.94,46.72h0Z" style="fill:#f2e8b0;fill-rule:evenodd"/><path d="M458.59,747.42s-12.74,3.8-18.81,10.47c-6.07,6.37-8.65,11.68-16.84,22.45s-8.65,19.57-15.33,33.07c-6.67,13.2-21.39,33.07-23.21,40.2s-4.85,40.5-8.64,56.28c-3.34,15.78,3.79,35.2,3.79,35.2l8.64-1.83s0,11.23,8.65,18.82c8.64,7.43,10.16-25.19,10.16-25.19l32.31-109.07L488,794.75l5.31-26.7-34.74-20.63h0Z" style="fill:#f5eec0;fill-rule:evenodd"/><path d="M482.25,796.88s-22.91,1.51-34.13,9.71c-4.55,3.33-6.37,6.06-11.22,10.16-8.95,7.43-18.06,14.26-22.45,24-4.86,9.7-10.17,24.42-13.81,52.18-1.52,11.68-1.52,22.45-2.58,31.86-1.52,12.74-3.79,22.9-2.58,30,1.52,14.56,16.54,22.15,18,38.68l31.1-15.77,29.28-115.45,62.2-39-35.2-39.44-18.65,13h0Z" style="fill:#e6db9d;fill-rule:evenodd"/><path d="M318.18,1574.29c.13-1.14.26-2.28.39-3.45,4.54-39,5.31-68.56,8.64-87.07,4.85-26.24,8.19-36,7.43-45.82-1.06-15.77-2.27-27.3-.75-39.44,2.27-16.08,18.05-35.19,17.6-48.39-.31-10.47-5.62-17.29-10.17-23.66s-8.19-11.68-8.19-11.68,31.1-21.39,30.8-107.56a8.18,8.18,0,0,1,1.82.76l15.32,43.53,10.47,12.74,40.2,74.94,51.73,50.22,76.45,51.42L607.86,1493l4.85,139.11-62.65,81.31L539.8,1732a891.11,891.11,0,0,1-221.63-157.72Z" style="fill:#e5cb7a;fill-rule:evenodd"/><path d="M509.56,1707.37s1.06-17.29,15.32-28.52c2.28,3.79,3.79,7.44,3.34,10.16,2.58-4.54,20.63-33.67,61.44-41.26,40.81-7.43,50.67-37.16,50.67-37.16l86.61-78.73L826,1440.69l120.45-42.33,56.29-13.81s1.06,4.1-1.06,13.2c10.46-.75,33.67-6.06,57.79-14.56,9.71-3.79,18.82-5.31,23.67-.3,7.13,6.67,8.19,22.45,8.64,31.85,11.68-2.58,25.18-13.8,36-12.74,17.3,1.82,32.62,22.15,50.22,22.15,23.21,0,33.67-14.26,49.91-25.49,9.71-6.67,23.66-15,31.55-20.63,18.81-13.81,217.84-74.64,217.84-74.64l69.78,4.55,11.23,74.94-6,195.9c-.74.71-1.48,1.45-2.23,2.16l-317.28,165.71L793,1814.07a882.11,882.11,0,0,1-281.16-96.71l-2.25-10h0Z" style="fill:#d8c173;fill-rule:evenodd"/><path d="M344.85,1599.21c6.25-13.07,11.87-24,12.86-27.91.78,7.88,2.21,25.17,5.09,43.55q-9.07-7.71-17.95-15.65Z" style="fill:#f1d789;fill-rule:evenodd"/><path d="M666.12,1783.57,723,1767.75l4.85,1.52s2.58,1.52,2.58,6.67c7.13-4.09,13.2-3.34,17.6-6.06,2.27,4.85,4.54,20.93,14.56,22.9,10.46,2.28,21.69-4.55,33.07-13.19,11.22-8.95,24-20.18,33.67-24.73a180.8,180.8,0,0,1,9.41,20.17c12.74-10.16,34.89-51.42,66.44-50.67A119.72,119.72,0,0,1,949,1671.42c29.28-19.87,47.63-21.39,70.54-19.57a120.62,120.62,0,0,1,33.07-29.58c3.79,1.52,14.26,7.89,27.31,1.82,13.2-6.06,28.06-29.58,47.63-32.61a46,46,0,0,1,30.34,6.37s57-56.59,96.33-75.4c-1.52-4.55-4.55-21.69,41.56-59.62,2.58,2.28.76,8.65,2.58,9,.75,0,12-4.85,26.24-15.78,17.6-13.19,38.68-27,51.42-30.79,24-7.13,49.46,7.43,49.46,7.43a22.8,22.8,0,0,1,7.13-3.34c6.06-1.06,10.46-1.82,13.8-3-.3,7.89,4.1,21.39,0,33.07a73.75,73.75,0,0,0,15,6.37c-2.57,5.61-8.19,19.87-17.59,26.7,7.88,3.79,8.94,8.19,20.17,12-4.55,6.37-12,17.3-15.32,24-3.34,7.13-15.33,36.71-20.64,47.93-5.61,11.23-13.19,31.86-16.84,36s-16.84,21.69-27,30.33c9-3.34,45.82-14.56,61.44-18.81-4.65,6.82-28.22,41.79-50.88,75.42a890.14,890.14,0,0,1-728.7,84.36Z" style="fill:#e0cd81;fill-rule:evenodd"/><path d="M486,792.78s-13.19,0-15.77,1.82,13.2,5.62,18.05,7.44,15.32,10.16,18.05,16.84c2.58,6.37,94.81,43.53,94.81,43.53l65.23-3.34L688.86,828l-42.78-37.47,30-88.44-39.74,6.37-95.57,57-47.94,18.36L486,792.78h0Z" style="fill:#dfc57c;fill-rule:evenodd"/><path d="M629.25,822.06a10.23,10.23,0,0,0,9,4.85c13.5,0,25.93,3.34,31.09,10.16,8.65,10.93,32.62,45.82,32.62,45.82l57.34,20.63L763,836l-62.65-43.53-71.3,26.24v3.34h.16Z" style="fill:#e5cc7c;fill-rule:evenodd"/><path d="M618,847.09s10.46.76,23.66-4.1,34.89-15.32,44.3-11.22c13.19,5.61,10.46,23.21,24.73,39,8.64,9.71,24.42,9.41,33.37,19.88s39.74,5.61,39.74,5.61l11.68,63-46.87,60.08-15.33,74.63H669.9L612,1071l-28.52-69,14.26-69.78L618,847.09h0Z" style="fill:#d2c281;fill-rule:evenodd"/><path d="M740.6,850.12a17.16,17.16,0,0,0,4.85.76c-1.82,1.52-5.62,4.85-4.1,13.5s6.37,19.57,2.28,26.24a32.8,32.8,0,0,1,7.13,12.44c2.58,7.44,3.34,14.26,20.17,15.33a35.44,35.44,0,0,0-6.67,5.31s11.68,10.16,17.6,19.56C787.92,943,804,938,804,938l3.34,2.28,7.13-3s-6.67-2.58-1.82-18.81c4.55-14.26,8.65-13.5,9-14.56s3.34-16.08,3.34-22.15c2.27-7.88,4.09-31.85,4.09-31.85l-4.85-52.94-27.3-16.54L774.73,759l-20.94,39.44L740,812.19l-1.06,34.13,1.66,3.8h0Z" style="fill:#e2c270;fill-rule:evenodd"/><path d="M806.28,805.83s4.85,13.8,6.68,24.42a23.49,23.49,0,0,0,1.06-6.37s3.79,20.94,4.54,29.59c1.52-.31,3-.76,3.34.75s3.8,18.36,3,27.76a75.65,75.65,0,0,1,25.48-25.48c6.07-3.8,13.2-7.89,20.64-8.2,11.68-.3,20.17,7.44,34.13,7.44,33.67,0,64.17-24.73,86.62-32.31,16.53-5.62,30.79-9.71,40.8-18.82,4.86-4.09,13.51-13.19,21.39-26.7,10.47-18,21.39-33.67,32.32-35.64a67.78,67.78,0,0,1-15,1.06s3.34-3.34,9-7.89,12.44-10.16,22.14-10.16c17.3,0,25.94,2.57,35.65,2.57,9.71-.3,15.32-2.57,15.32-2.57s10.17,7.13,33.07,7.13c22.91.3,38.23,2.27,50.22,3.34s52.18-3.34,63.71-3a55.82,55.82,0,0,1,21.7,5.31l-37.17-108L1151.4,513.36l-79.49,56.28L949.63,691.91,831.31,735.75l-24.73,27.76v42.32Z" style="fill:#ccb360;fill-rule:evenodd"/><path d="M1071.76,743.93s3.34-3.33,8.94-7.88,12.45-10.17,22.15-10.17c17.29,0,25.94,2.58,35.65,2.58,9.71-.3,15.32-2.58,15.32-2.58S1164,733,1186.89,733c22.91.3,38.23,2.27,50.22,3.33s52.18-3.33,63.71-3a55.53,55.53,0,0,1,21.69,5.31l-16.84-48.7-19.56-37.16-55.83-61.14s-67-39.44-67.51-39.74c-.3-.3-23.21-6.37-23.21-6.37l-60.68,36.71-55.06,142.45-1.06,30,35.64,16.84c8.95-15,18.82-27,28.07-28.52-8.35.91-14.72.91-14.72.91h0Z" style="fill:#d5b457;fill-rule:evenodd"/><path d="M1071,754.1c-5.31.3-9.7-.76-10.92-4.55-4.55-12.74-8.19-14.56-12-14.56s-8.95,8.19-12,8.94-6.67-9.4-6.67-9.4l-3.34-1.52s-19.57,12.74-33.37,27.76-36.41,40.51-46.57,45.05-45.06,6.07-57,8.65-25.18,11.23-27,13.2,5.32,4.09,6.38,6.06c1.06,1.82-11.69,1.06-12.75,3-.75,1.52,3,10.16,4.86,14.56a24.73,24.73,0,0,1,10.46-2.58c11.68-.3,20.18,7.44,34.13,7.44,33.68,0,64.17-24.73,86.62-32.32,16.54-5.61,30.8-9.71,40.81-18.81,4.85-4.09,13.5-13.2,21.39-26.7,5.76-9.25,11.38-17.9,17-24.27h0Z" style="fill:#d2b257;fill-rule:evenodd"/><path d="M588,1504.86s-3-11.23-30.8-40.2c-7.89-8.19-12.74-15-18.05-19.87-13.2-12.45-20.94-15.78-30.34-22.91-20.63-15.32-43.08-15.32-60.37-34.13S411,1333,397,1296.27c-13.8-36.71-17.6-48.39-17.6-49.45s3.8-8.19,8.65-7.13,4.85,10.46,6.07,12.74a75.27,75.27,0,0,0,8.19,10.46c7.13,8.2,17.29,18,22.45,32.62-1.06-12.44-5.31-26.24-5.31-26.24s26.7,16.84,49.45,34.43c22.91,17.6,32.31,23.67,39,34.89s22.45,40.81,30,49.46,111,41.26,111,41.26L698.11,1466l24.43,53.55-19.12,30-36.71,7.89-59.62-26.7L588,1504.85h0Z" style="fill:#d2b159;fill-rule:evenodd"/><path d="M455.55,1320.39s12.44,19.87,42.78,38.68c27.31,16.54,70.54,31.56,109.08,40.51,22.14,5.31,44.29,9.4,64.16,9.71,53.55.75,90.41-14.56,136.08-19.57,24.73-2.58,55.07-4.55,86.62-12,40.5-9.71,64.47-20.64,97.09-36,23.66-10.92,45.36-19.11,62.95-29.58,24.73-14.56,42.78-30.79,63.72-35.64-2.58,7.13-5.31,19.87-25.94,33.07,10.92-.31,25.94-1.06,25.94-1.06s-14.56,8.64-40.2,28.06c-15.78,12-36.71,32.31-58.1,45.81-13.81,8.65-28.83,15-38.69,20.18-24,13.2-33.68,19.87-49.45,36,5.61-.3,6.07,0,6.07,0s-19.88,2.58-34.13,10.16c-3,0-8.2-1.06-17.3,1.52-7.13,2.27-16.54,7.44-26.24,10.16-13.81,4.1-18.35,2.28-18.35,2.28l2.27,4.55s-18-.31-24,.3c1.06.3.76.76.76.76a9.21,9.21,0,0,0-3,1.06,31.3,31.3,0,0,1-9.4,4.09c-1.82.3-3.34.3-5.62.76.76,1.82,6.68,12,9.41,18-2.27,1.52-36.41,27.31-36.41,27.31a26,26,0,0,1,2.58,5.31c1.06,3.33,1.52,8.19,2.58,10.46,2.57,4.55,4.09,5.31,4.09,5.31s-4.09.76-11.23,2.58c-6.06,1.52-13.5,4.09-24,5.61a95.13,95.13,0,0,1-9.71.76c1.52,3.34,8.19,16.08-4.1,30.79s-16.08,16.85-19.87,26.25a40.69,40.69,0,0,0-6.07-3.8c-4.09-1.82-9.71-4.54-11.68-8.19a97.33,97.33,0,0,1-4.55,14.26c-3.79,10.16-9.4,20.18-10.46,27.76-4.1-4.55-11.68-13.5-22.15-11.68s-18.81,16.08-20.63,20.18c0-2.58-1.82-4.55-2.27-1.52-.31,3.34-6.07,38.22-38.23,66.44-.3-7.13-.3-22.91-1.06-28.06-3,3-6.67,7.43-28.52,16.84-21.39,9.4-18,18.81-18,18.81s-1.82-15,9.71-30.8c11.68-15.77,18.81-23.21,18.81-24.42a6.75,6.75,0,0,0-1.52-3.34c-1.52-1.52-4.55-3.34-4.55-4.55,1.82-.75,19.87-9.4,18.81-27.31-1.06-16.07-7.88-24.42-12.74-30.33-.75-.76,7.14-6.37,6.07-8.19-.76-1.06-10.46-8.2-11.68-12a34.86,34.86,0,0,1,1.52-6.67c1.06-3.34,1.82-5.62,1.52-7.89-.76-3.79-4.86-14.26-6.07-15.32,1.06.3,8.64,0,8.64,0s-6.06-9.71-7.13-14.26-3.34-16.54-4.55-18.81c2.58.3,8.95.75,8.95,0,.31-2.28-5.61-6.07-3-9,1.82.3,5.31,1.82,8.64,6.07-1.82-4.86-4.85-14.26-11.23-18.05,3-1.06,13.2-3.8,22.15,1.51s12,12.74,12,12.74,5.31,4.1,13.51,10.17c9.4,7.43,21.38,18,40.5,25.48,4.1,2.28,14.56,2.28,22.15.76a34.06,34.06,0,0,0,9.4-3.79,17.43,17.43,0,0,1,3.34-1.52,72.71,72.71,0,0,0-5.61-9.41c2.58,0,5.61.31,5.61.31s1.82-4.1-6.37-12c1.82-1.82,4.1-3,4.1-6.07-2.58-.3-7.13-4.09-8.19-5.61,1.51-1.06,3.79-4.55,6.37-5.61-2.28-1.82-7.89-9.41-10.47-10.16a47.69,47.69,0,0,0,7.13-3.34s-12.74-3.34-16.84-6.07c-4.1-3-10.16-8.19-13.8-9.71-3.8-1.52-10.47-2.27-13.2-5.31,2.57.76,6.67,0,9.71,0,2.27,0,3.34.3,4.09.3-.3-1.06-.3-3.34,5.62-4.09a27.71,27.71,0,0,0,8.19-2.58s-5.62-.3-12-6.37-11.68-10.92-15.32-11.68c-3.79-.76-10.92,2.58-15.32,2.27-6.07-.75-8.65-3.79-8.65-3.79s-20.17,1.82-64.92-25.48c-38.69-23.67-55.53-44.6-55.53-44.6a66.52,66.52,0,0,1-10.46-4.86c-14.56-7.58-34.74-23.36-34.13-44h0Z" style="fill:#c2a44d;fill-rule:evenodd"/><path d="M1013.65,409.89a19.69,19.69,0,0,1,9,6.07c7.13,8.19,11.68,23.66-4.55,40.2,6.37,2.27,9,3,14.56,2.27-5.61,6.68-18.35,20.94-19.11,33.38-.76,10.16,5.61,13.2,5.61,13.2s-9.71,11.22-10.16,30a121.56,121.56,0,0,1,15-14.26c11.23-8.95,26.7-19.11,37.17-25.48a21.39,21.39,0,0,0,1.06,7.88s19.56-16.08,36-8.94c7.43,3.34,4.09,13.8,4.09,13.8s10.17-3.79,17.3,3.34S1136.83,536.87,1142,544c2.27,3.34,8.19,9.71,14.25,19.57a247.53,247.53,0,0,1,20.64,43.53c.3-7.89,2.27-20.17,24.73-12.44,22.45,7.89,47.93,24.43,69.32,57S1297.63,721,1308.4,735c10.92,13.5,22.15,35.95,22.91,45.36s-3.34,39.74,19.11,121.81c6.37-25.48,16.08-82.07,16.08-82.07l5.31-49.91,6.07-154.43L1216.62,481.79l-126.06-91.48-82.07,7.89,5.15,11.68h0Z" style="fill:#caa13e;fill-rule:evenodd"/><path d="M1313.26,639.71s-2.28-15-40.2-40.5c-37.93-25.18-67.51-25.18-94.81-46.57-20.94-16.84-42.78-55.53-57-68.27-13.81-12.59-16.08-49-16.08-49l46.57-39L1221,296.26l58.55-64.47,28.06,39,39,45.81,21.69,91.93,7.89,134.56-63,96.63Z" style="fill:#b59544;fill-rule:evenodd"/><path d="M1360.14,801a171,171,0,0,0-7.44-60.37c-10-31.1-31.85-86.32-42-107-4.1-22.91-1.06-24.73,3.34-27.31s20.94-12,30-45.05,37.17-34.13,37.17-34.13l17.29-12.74,26.25,65.68,22.9,59.32,7.13,45.36,5.31,38.68-12.44,81.77-61.43,55.52L1360.13,801h0Z" style="fill:#c89d3a;fill-rule:evenodd"/><path d="M502.89,1712.39v-1.68a12.9,12.9,0,0,0,3.33-3c1.06-1.52,1.83-3.34,2.58-3.79,1.52-.76,8.65-3,12.44-2.28s13.81,4.85,19.12,4.55c10.92-.3,23.66-8.65,43.84-4.85,30.34,5.61,37.47,26.24,55.07,37.92,12,8.2,24.42,4.55,26.24,4.55h4.09c.76,0,6.37-6.37,9.41-6.06,6.07.3,6.67,5.31,10.46,5.61,8.95,1.06,26.25-4.55,34.9-2.27A16.67,16.67,0,0,1,735.29,1752c1.82,5.61.3,12.74-4.1,16.84-9.4,8.64-18.35,16.84-20.17,24a85.25,85.25,0,0,1,6.66,5.64,883.15,883.15,0,0,1-214.79-86Z" style="fill:#ceb052;fill-rule:evenodd"/><path d="M1310.68,1409.29s23.66-31.55,31.86-47.18C1350.73,1346,1316.6,1142,1316.6,1142l68.57-224.66-1.83-73.12s3.34-67.51,11.23-96.79c9.41,16.84,38.69,37.17,45.06,47.94,3-20.64,13.19-64.17,11.68-110.59,5.61,8.64,19.11,95.57,19.11,95.57l13.5,58.55,17.6,62.2,19.57,65.69,11.68,45.36,6.67,10.92,5.62,19.11,5.31,20.64,15.32,48.39,9,39.74,7.13,72.06a109.86,109.86,0,0,1,3.34,16.84c.3,7.89-1.06,12.44-1.06,13.81s2.58,17.29,1.52,29.28c-1.52,12-1.52,21.39-10.93,30s-15.32,60.07-15.32,60.07l-16.84-11.22s3.34-15.33-4.55-29.28-23.21-16.84-31.86-14.56c-8.64,1.82-25.93,4.54-31.55,9.4-5.31,4.85-18.35,19.87-30.34,26.7-15,9-39.44,9.71-52.48,12.74-13.2,3-27.76,12-43.09,22.45a240.58,240.58,0,0,1-37.92,20h0Z" style="fill:#cca847;fill-rule:evenodd"/><path d="M1310.68,1740.75s1,.65,2.93,1.71a891,891,0,0,0,284-210.5c-.87-30.7-2-62.17-3.24-73.83-2.57-24.73-.75-49.91-1.51-64.47s-8.95-73.88-12.74-89.2c-4.1-15.32-12-22.91-13.2-22.91-1.06.31-7.44,28.83-7.44,36s-1.52,24.43-1.52,28.83c-1.06-.31-1.51-3-1.51-4.1-1.52,3.79-3.34,10.47-4.1,11.23s1.06-6.37,0-7.89-3-.76-2.58-4.55a43.41,43.41,0,0,1,1.06-6.67s-4.55,6.67-7.88,23.66c-3.34,16.84-3.34,17.3-4.55,18.81-1.06,1.83-7.13,7.89-7.44,10.17-.3,4.09,5.62,8.19,6.07,10.46.3,3.8-5.31,21.39-7.13,30s-1.06,25.48-3,34.13c-1.52,7.89-3,12.44-8.19,15.77,3.79.76,7.43,1.82,7.43,1.82s5.31,22.45-8.19,41.57c-4.85,6.67-6.06,9.71-11.22,15.78-10.17,11.22-18.06,24-18.82,32.31a54.28,54.28,0,0,1-1.06-7.44s-15.77,18.36-22.45,28.83c-8.64,13.5-20.63,12.74-24,16.08s-4.1,9.4-3,14.26c-3,.75-8.64,1.82-12.44,13.5-1.82,6.06-6.37,12-13.5,16.08s-15.78,5.31-20.18,6.37c3.79,1.06,5.31,1.06,7.13,2.27-2.27,3.79-12.74,9.71-24.42,17.3-11.68,7.13-17.3,17.59-20.18,24.42-3,6.37-7.43,10.47-14.56,11.23,3,1.82,7.44,6.06,9.71,7.43-3.34.76-9,.76-19.11,9.41-10.62,8.8-14.26,11.38-19.12,12.14h0Z" style="fill:#c39d3c;fill-rule:evenodd"/><path d="M1099.6,1811.05a85.79,85.79,0,0,1,18.73-9.93c23.66-9.4,48.69-11.22,58.55-14.25,9.41-3,16.84-7.14,28.52-9.41-.31,2.66-.57,5.16-.85,7.52a884.07,884.07,0,0,1-105,26.07Z" style="fill:#d2ba6b;fill-rule:evenodd"/><path d="M1536,1188.72s-4.85,26.24-13.5,42.78-18,39.44-18,39.44a72.15,72.15,0,0,1,1.82-15.33c-10.92,6.37-37.47,21.7-45,28.52-7.13,6.37-19.12,17.6-22.15,22.91,7.13-20.93,14.56-39.74,15.78-48.39-10.92,7.89-61.9,49.91-88.44,77.67l-82.68,66.9A286.14,286.14,0,0,1,1254.4,1417c-14.25,6.06-31.09,11.22-43.53,16.08,3.34-8.95,8.64-16.85,16.08-24.43,7.89-7.43,31.55-33.07,35.19-45,3.34-12.44,4.1-19.87-.3-30.34-4.1,1.06-13.5,1.52-19.87,3.34s-13.2,8.64-13.2,8.64,4.85-27.76,15.32-54c-7.89.3-21.39,2.57-21.39,2.57s18.81-31.55,51-53.54a165.88,165.88,0,0,0-28.82,8.94c-18.81,7.89-39.44,19.57-54.76,25.94,8.64-12,69.32-98.6,105.43-179.31,36-80.55,49.45-101.18,57.34-144.41,4.09-21.39,3-53,4.09-81.31,1.06-28.07,4.55-53.25,2.28-70.09,9.4,11.68,44.6,44.6,45.81,118.18,1.06,73.57-33.67,172.94-70.54,226.48,9,2.58,32.32,5.62,56.28-36s23.67-53.24,32.32-70.54c1.06,8.65.75,11.68.75,11.68s34.9-42.32,51.43-95.57c3.34,22.91,13.2,43.09-2.28,85.11-13.8,37.92-31.85,47.18-31.85,47.18s8.95-1.52,22.14-9.41c2.28,5.61,1.83,12,5.62,14.26s8.95,6.07,9.71,9.71c4.09-6.07,10.46-13.81,12.44-19.57-1.52,12-2.58,64.47,3,91.17,11.69-1.06,23.67-1.82,31.86-22.91-5.61,20.64-5.61,33.07-1.82,50.67,6.22-4.24,11.83-11.83,11.83-11.83h0Z" style="fill:#c0993a;fill-rule:evenodd"/><path d="M1141.84,352.55s-11.68,4.85-31.55,4.85c-17.29,0-12.44-6.67-39.44-6.67-41.56,0-186.74,24-212.23,23.66-16.54-.3,55.82,7.13,55.82,7.13l184.93,2.58,37.16-3L1150.34,353l-8.5-.45Z" style="fill:#a88f33;fill-rule:evenodd"/><path d="M662.32,714.05s-23.67,18.05-33.68,31.86-15.32,22.9-26.7,34.13a23.3,23.3,0,0,0,7.89-1.06s0,3-1.82,3.79a10.61,10.61,0,0,1,8.64,3c-3.34,1.82-12.44,10.93-5.31,21.7,5.31,8.19,16.54,8.94,16.54,8.94s-2.58,7.44,8.19,6.68c23.21-1.06,49.15-11.23,61.13-8.65,12,3,18.82,4.1,27.31,18.82,9,14.56,16.84,16.84,16.84,16.84s5.31-13.51,4.1-33.68a100.16,100.16,0,0,0,7.13-34.13l-7.89-58.1-34.43-43.54-44.6,24.73-3.34,8.64Z" style="fill:#e3c571;fill-rule:evenodd"/><path d="M704.64,705.4s3.34,7.89,17.3,8.64c-1.52,3.34-1.52,3.8-1.06,6.37.3,2.58.75,6.37.75,6.37a14.11,14.11,0,0,0,4.1-3c.76,3.34-.76,8.64,0,12.44a27.63,27.63,0,0,0,2.27,6.67,13.4,13.4,0,0,1,.76-1.51c.3-.76,3,8.19,10.47,15a6.22,6.22,0,0,1,.75-3,10.52,10.52,0,0,0,1.82,5.31,5.54,5.54,0,0,1-1.51-1.06s.75,24,4.85,36.41a17.05,17.05,0,0,0,1.82-2.58c0-.75-.3,6.68-1.06,12-1.06,5.31-.3,12.74-.3,12.74a39.81,39.81,0,0,1,8.94-5.31c4.55-1.83,12-7.44,16.54-19.88a132.83,132.83,0,0,0,6.07-21.69,30.28,30.28,0,0,1,3,9c.31,3.79,7.44,1.82,7.44,1.82l1.52-16.54,9-37.47,8.19-23.21,39.44-61.43L917,586.61l62.2,14.26,52.48-71.3-90.41-54.31-85.56,8.95L778.06,591.76l-62.19,97.55-11.23,16.08h0Z" style="fill:#d8b65b;fill-rule:evenodd"/><path d="M1152.76,549.76s-5.31,1.06-20.63,9-25.94,10.46-31.86,22.14-6.37,20.94-6.37,20.94,10.47-4.55,16.54-6.07c6.37-1.51,13.5-1.06,12.74,1.52a17.59,17.59,0,0,1-3,4.85s12-.3,11.68,5.62-2.27,12.44-4.54,15.32c-2.28,3-11.68,7.44-12.74,10.93-2.58,7.13,1.06,7.43-.31,13.19-1.06,5.62-6.06,16.54-22.45,35.65-16.84,19.12-24,32.62-24,32.62s-8.19-15.32-12.44-28.52c-3,1.51-19.11,10.46-19.11,10.46l-37.32-130,.75-8.65s3.34-4.09,4.1-11.68c-5.61-1.82-6.37-3.34-13.81-10.46s-13.5-15.78-25.93-21.7c-1.82-3.34-4.1-7.88-13.2-9.71s-14.56-3.33-14.56-3.33,4.85-1.83,7.13-5.62c-5.62.76-10.16,2.58-22.45,2.28-12.44-.31-13.81-.76-20.63.3s-15,4.1-18.05-6.37c-3.34-2.58-10.47-.3-16.54,8.64s-8.19,16.08-19.87,19.57a40.71,40.71,0,0,1-5.31,14.56c-3.34,5.62-8.65,11.23-15.78,19.57-11.23,13.2-9.41,34.89-27.31,51.43-18.05,16.53,3-45.82,3-45.82l28.82-69,82.07-80.25,127.43-8.64,12.44,66,62.2,21.39,39.29,59.92h0Z" style="fill:#d3ae4d;fill-rule:evenodd"/><path d="M1172.94,564.32l-53.55-77.21-37.47-28.83s-26.7-49.14-28.52-50.66c-1.52-1.06-26.7-3.79-42.78-4.85l3,7.43a19.69,19.69,0,0,1,9,6.07c7.13,8.19,11.68,23.66-4.55,40.2,6.37,2.27,9,3,14.56,2.27-5.61,6.68-18.35,20.94-19.11,33.38-.76,10.16,5.61,13.19,5.61,13.19s-9.71,11.23-10.16,30a121.56,121.56,0,0,1,15-14.26c11.23-9,26.7-19.12,37.17-25.49a21.42,21.42,0,0,0,1.06,7.89s19.56-16.08,36-8.95c7.43,3.34,4.09,13.81,4.09,13.81s10.17-3.79,17.3,3.34,17.29,25.48,22.45,32.62c2.27,3.34,8.19,9.71,14.25,19.56a247.31,247.31,0,0,1,20.64,43.54c.3-6.07,1.52-14.56,12-14.56l-15.93-28.52Z" style="fill:#caa13e;fill-rule:evenodd"/><path d="M370.15,783.68s-3.79-9.41,0-27.76,9.71-27,11.68-54,19.57-60.68,19.57-60.68l48.69-22.14,34.44,9.4,10.16,46.12-43.54,24s-2.27,10.16-14.56,18.35-29.28,14.56-33.37,22.91a66.79,66.79,0,0,0-5.31,16.08s-12.44-2.58-19.87,5.61c-7.89,8.35-7.59,15.78-7.89,22.15Z" style="fill:#f4efc8;fill-rule:evenodd"/><path d="M468.45,771.39s-4.1,2.58-7.13,9c-3-4.85-10.17-33.68-10.47-59.62S449,688.4,455,679.46,484.53,661.1,481.19,645c-3.34-15.32-17.3-21.69-34.44-17.29-12,3-20.93,28.52-33.37,41.26-9.41,9.71-20.63,8.19-23.66,13.5-4.1,7.13-.31,14.26-1.52,18.81-.31,1.52-4.1,9.71-10.93,19.57-13.8,19.87-37.16,47.94-40.2,73.12,1.06-14.26.31-14.56,4.1-30.34l-2.28-3.79,15-49.15,9.71-40.5,21.7-67.82,38.22-69.32,37.17-41.57,38.68,2.58,4.55,58.1,22.15,109.08,46.57,57.34L498,768.81l-29.58,2.58h0Z" style="fill:#ebcc73;fill-rule:evenodd"/><path d="M491.66,792s-6.37,1.52-8.65.31-4.54-2.58-3.79-4.1,4.85-4.09,4.85-5.31a4.25,4.25,0,0,0-3.79-4.55c-3.49-.45-4.55,1.82-4.55,1.82s-3.34-2.57-6.06-3a41.93,41.93,0,0,1,4.85-.31,47.29,47.29,0,0,0-13.2-3.79c3.79-2.27,11.23-8.95,16.08-8.95s7.89-.75,7.13-3.33-4.55-6.37-8.64-7.89c1.51-1.82,2.58-4.55-1.06-12-3.8-7.43-2.28-12.44-1.06-14.25,1.06-2.28,4.85-6.37,6.67-8.95s3.34-6.07,6.37-7.89c1.52-1.06,6.37-3,11.23-4.85,5.31-1.82,9.71-4.1,12.74-1.82,3.34,2.27,1.82,5.31,1.82,5.31s10.47-3.8,19.87,1.06c9.41,4.54,32.32,7.43,32.32,7.43L573,733.48l-54.31,46.57-22.45,11.23-4.55.75h0Z" style="fill:#e5c66b;fill-rule:evenodd"/><path d="M567.05,715.87s-16.84,11.23-20.63,15.32c2.27.31,6.06,1.83,4.54,4.1-1.82,2.27-12.74,10.16-18.81,17.6-6.37,7.43-12.44,16.84-14.56,21.39-2.27,4.09-19.57,16.08-25.48,17.59,12.44,0,37.47-15.32,46.87-15.32-.3,4.55,2.58,9.71,7.89,10.16s20.63,3.34,41.26-9.4c20.63-12.44,13.81-21.7,22.45-27.76,16.54-10.93,23.21-20.64,32.31-26.7s13.81-7.44,13.81-7.44.3-4.55,3-4.09a4.08,4.08,0,0,1,3.34,2.58s15.78-11.23,36-14.26a2.1,2.1,0,0,1-1.06-1.06s1.51-.76,1.82-1.52c0,0,1.06-1.52,1.82-.76s1.82,6.37,3.34,8.65c3.34-1.52,9.71-15.78,9.71-15.78L730,645.33V605.28l-12,2.28-90,38.22-54.62,56.59-6.37,13.5Z" style="fill:#e6bd62;fill-rule:evenodd"/><path d="M826.15,519.42A50.87,50.87,0,0,0,840,513.8c-1.82,4.86-1.82,10.17-9.71,21.7s-8.19,13.2-14.56,25.18c-6.37,12.44-7.13,30.34-13.2,38.22a27.74,27.74,0,0,1,8.64-2.57s-6.06,5.31-8.64,10.92-7.13,17.29-18.35,24.43-25.49,11.68-40.81,28.52c-15.33,16.53-31.1,37.47-39,45,4.1-7.13,9.71-21.39,11.23-30.79s-.31-20.64,2.27-33.07,2.58-21.39,15-43.09,33.68-97.09,33.68-97.09l45.81-14.56,13.81,32.77h0Z" style="fill:#b6933f;fill-rule:evenodd"/><path d="M793.08,491.66s-13.8,19.87-17.59,37.47-.31,16.08-2.58,24.73a32.25,32.25,0,0,0,0,16.08A57.09,57.09,0,0,1,792,551.12c13.05-7.88,23.67-13.5,30-20.17,6.37-7.13,11.68-18.81,25.48-27.76-5.61-.76-13.5-3.34-15-3,5.62-6.37,22.45-16.08,39.44-27.76,16.84-12,15.78-16.84,43.09-28.82-8.95,1.52-13.2-.76-20.64,0,3-6.37,13.5-9.41,24-19.87s-6.67-25.94-6.67-25.94l-80,48.39-38.68,45.51Z" style="fill:#c49937;fill-rule:evenodd"/><polygon points="576 455.55 577.82 440.99 600.73 404.28 624.7 339.81 624.7 251.67 622.88 200.7 626.67 167.32 629.55 156.71 632.59 152.61 652.15 162.77 679.16 199.48 681.74 270.33 655.49 382.13 580.55 463.9 576 455.55" style="fill:#dfc068;fill-rule:evenodd"/><path d="M635.62,148.51s-12,.31-14.56,50.22-3.8,76.15-5.62,100.88-6.06,39.74-8.19,54.31-3.34,34.43-10.16,46.57c-3,5.61-9.41,23.21-24.43,36.41-16.84,14.56-42,24.73-45.81,25.49-6.68,1.51-40.51,4.85-54.31,12.44-4.85,2.58-13.2,5.61-22.45,14.26-18.36,16.53-42.78,46.11-60.38,81.76-27,53.25-54,203.58-54,203.58l6.07-10.16s.76-13.5,14.26-37.17c13.2-23.66,9.41-50.21,27.76-95.57,7.13-17.29,16.08-39.74,27-58.86,17.3-31.1,38.23-57.8,59.32-72.36,34.43-23.66,72.36-28.82,72.36-28.82l40.81-27s7.13-13.8,16.54-29.58c13.19-22.14,30-46.87,33.67-82.82,5.62-53.25-7.89-88.14-7.13-119.69s1.06-54.76,7.44-60.38,1.82-3.49,1.82-3.49h0Z" style="fill:#a88f33;fill-rule:evenodd"/><path d="M635.62,386.68s18-44.3,26.24-83.59c1.52-7.89,4.55-15.77,5.31-22.14,3.79-37.17,4.85-52.49,0-72.82-3.79-15-18.35-28.52-25.94-39-7.43-10.93-10.92-15-9.4-17.3s7.43-6.06,13.19-5.61a45.17,45.17,0,0,1,32.32,15c11.68,13.5,20.93,59.32,20.93,59.32L708,281l24.73,76.15-97.09,29.59h0Z" style="fill:#c99e3d;fill-rule:evenodd"/><path d="M804.76,340.57s-3.34,1.51-9.4,0a13.53,13.53,0,0,1-6.07,12.74c-6.37-2.58-66,2.58-66,2.58s-27.76-4.86-36.41-41.57c-6.06-24.43,4.55-58.1,1.06-80.25-5.31-32.62-12.74-39-13.5-49.15s-1.52-12.74-1.52-19.11c-3.34-.76-5.31-1.82-8.64-1.82-.76-3,.75-5.62-2.58-10.93,1.82.76,14.26,2.28,28.82,16.08,12,11.23,12,15.32,13.81,17.6,2.27,2.27,20.63,18,28.52,33.68s23.21,65.68,26.7,73.87c1.06,3.34,3.34,6.68,9,14.26,8.8,10.93,21.69,29,36.25,32h0Z" style="fill:#b58634;fill-rule:evenodd"/><path d="M706.47,187.5a420.38,420.38,0,0,1,24.72,46.12c8.95,20.17,14.26,36.71,25.49,50.21-6.07-17.59-16.84-52.18-23.21-64.47-7.13-13-21.69-27-27-31.85h0Z" style="fill:#a88f33;fill-rule:evenodd"/><path d="M603.31,436.9s-15.32,3.79-43.84,18.81c-9.41,4.85-18.35,8.94-27,12.74C510,478.61,485.9,488,466.78,493.18c1.52,1.82,2.27,2.57,2.27,2.57s0,7.44,4.1,11.68c-2.27,2.28-32.62,22.91-23.66,91.93,6.06-2.27,13.19-5.31,14.25-5.31,1.83.31,2.28,5.31,4.55,5.31s9.71-3,17.6-13.2c-.3,4.1-4.85,45.36,19.57,73.12,4.55-5.31,16.08-22.91,16.08-22.91l.3-5.61s1.06-19.57,7.44-37.47,18.81-31.1,18.81-31.1L613,469.5l-9.71-32.61h0Z" style="fill:#e6c367;fill-rule:evenodd"/><path d="M542.63,573a35.86,35.86,0,0,1-9.71,4.85c-1.06-3.79-2.58-16.84,6.37-29.58,10.47-15.33,33.37-35.2,39.74-51,4.1-10.17,2.28-35.65,38.69-68.27s50.66-43.84,50.66-43.84l58.86-29.58L799.6,384.1,763.65,525l-27.91,66-111-20.93L542.62,573h0Z" style="fill:#dcba5a;fill-rule:evenodd"/><path d="M585,534.74l13.81-17.29V505.16s15.32-4.1,31.85-20.94,39.44-49.15,59.62-47.18c20.18,2.28,22.15,43.84,22.91,55.53s3.34,38.22,7.43,52.49c4.55,14.26-49.15,68.26-49.15,68.26L635,641.08,585,534.74h0Z" style="fill:#e9ce77;fill-rule:evenodd"/><path d="M627.73,678.7s11.23-17.6,3-21.39c4.85-10.92,13.8-22.45,13.8-22.45s6.37-15.77,27-35.19,33.38-32.32,36.72-45.36a119.5,119.5,0,0,0,3.34-25.94,49.24,49.24,0,0,0,7.13,4.85c3.34,1.52,19.11,14.56,16.84,40.81s-12,37.17-12,37.17-9.4,9.4-16.07,14.26c-7.14,4.85-9.71,10.46-21.7,10.92a14.35,14.35,0,0,1,4.1-2.28s-12.44-1.51-19.12,4.55S649.89,663.38,642.76,669c-7.13,4.55-15,9.71-15,9.71h0Z" style="fill:#cdae50;fill-rule:evenodd"/><path d="M1132.13,383.64a182.69,182.69,0,0,0-55.82-10.92c-31.86-1.06-78.43.76-124.09,1.06-49.15.3-93.75-16.84-155.64-19.87-10.16-6.07-36-32.62-116.66,23.66,4.85-.3,58.56-12.44,77.21,10.93,18.81,23.21,13.5,62.65,10.93,72.05-4.86,20.94-20.64,51.43-27,72.82S736.2,566,731.65,581s-14.56,22.45-8.65,39.74c7.89-4.85,12-4.85,25.18-34.43s10.47-50.67,32.32-75.7c21.39-25.18,57-59.62,70.54-68.27s121.05-64.47,233.62-11.22c27.15-2.88,47.48-47.49,47.48-47.49h0Z" style="fill:#d2a83e;fill-rule:evenodd"/><path d="M725.27,363a13.9,13.9,0,0,0-.75-3.34,24.35,24.35,0,0,0-4.1-6.07s-26.7-4.85-40.2-3.34c-23.67,2.58-45.06,31.86-55.07,46.88s-22.45,38.22-35.95,50.21a5,5,0,0,0-.76-3.34s.76,1.06-.75,2.58-1.52,2.27-.76,3l2.28,2.27c.75,0,21.69-9.41,50.21-36,30.34-27.76,53.55-42,65.69-46.88A92.4,92.4,0,0,1,725.28,363h0Z" style="fill:#c29637;fill-rule:evenodd"/><path d="M1243.18,248.94s-4.86,6.06-10.93,12.74c-13.5,14.26-31.1,30.33-46.12,46.87-14.25,15.78-30.33,28.07-48.39,48.7s-39,43.53-44.3,50.21c-4.85,6.68-8.64,17.6-8.64,23.21-2.58-1.82-5.61-3.79-5.61-3.79a38.11,38.11,0,0,0,4.55,6.68c3.79,5.31,9.7,12,12.74,16.08a49,49,0,0,1,7.88,17.29c1.82.3,13.5,2.58,28.07-21.39s33.67-50.21,33.67-50.21l30.34-45.06,19.12-38.22,24-42.78,3.65-20.33h0Z" style="fill:#ac8132;fill-rule:evenodd"/><path d="M1274.28,218.3s-18.36,15-25.49,24-24,32.62-24,32.62l6.07-.76,30.8-27.3,12-21.39.61-7.13Z" style="fill:#a88f33;fill-rule:evenodd"/><path d="M1268.66,1423.85s-.3-12.44,6.68-19.87c7.13-7.44,25.18-18.36,42.78-59.32s19.56-50.21,19.56-50.21-31.55,27-51,33.37c4.55-9.41,7.13-16.08,9.41-20.94-2.58-2.27-13.5-4.85-14.56-6.06,6.06-6.07,9.4-20.94,21.69-30.8,15.78-12,44.6-32.62,67-51s66.44-61.13,72.06-73.57c3.34,4.85,4.09,7.88,4.09,7.88s-22.14,28.83-33.67,47.18c-10.17,15.78-9.41,24.73-9.41,24.73l20.94-9s6.06,22.45-21.39,56.59c12-4.55,16.84-1.82,23.66-5.62-11.23,7.14-26.7,16.85-41.26,43.54-14.26,26.7-33.68,57.8-66.44,77.21-31.86,20.48-50.22,35.8-50.22,35.8h0Z" style="fill:#a67a2e;fill-rule:evenodd"/><path d="M1186.44,399.43s-12.44,25.93-14.26,46.11c-.3,4.86-1.52,8.65-1.52,14.26-.3,18.05,1.06,38.23-3,47.63-1.52-3.79-2.28-6.37-3.8-7.88-2.27,6.37-6.37,26.24-9.71,33.67-1.51-4.85-4.85-21.69-4.54-41.56s.75-23.67.75-27.76c-.75,6.06-4.85,14.26-6.37,19.11-2.27-4.09-4.85-9.4-7.89-13.8-1.82,3-4.09,7.43-6.06,9.71-.31-1.82-1.06-6.68-1.52-13.5-.3-7.89-.76-18.05-.3-20.18.75-4.09,7.13-20.17,20.63-34.89,16.08-17.6,32.62-51.42,37.47-61.89s25.48-54,25.48-54h15.78l-22.91,52.18s-13.8,28.52-20.93,39-22.15,40.51-28.83,52.19c4.85-6.37,8.95-9.71,13.81-15.78,4.7-4.25,17.74-22.6,17.74-22.6h0Z" style="fill:#8c6228;fill-rule:evenodd"/><path d="M1274.58,216.32a65.31,65.31,0,0,1-12,21.7c-9.41,11.23-29.59,26.24-39.44,38.22-9,11.68-27,43.54-18.82,81.31,3-8.19,8.65-24.42,23.67-42.78s31.1-39.44,39-55.82c7.88-16.54,8.94-29.58,8.94-29.58l3-3.79-1.82-8.65-2.58-.61Z" style="fill:#cba94c;fill-rule:evenodd"/><path d="M1581.77,1222.54s-6.07-16.53-7.89-31.55,3-18-2.58-35.19c-3.34-10.47-9.4-9-10.92-10.47s-2.58-17.29-2.28-25.94-.3-19.87-1.82-24.73c-2.27-1.82-3.79-3.34-7.13-14.56-3.79-11.23-5.61-16.84-7.43-20.17s-7.14-6.37-7.14-9.71c0-6.68,6.07-10.16,6.07-12-.3-3.79-4.85-.75-6.07-1.82-1.51-1.82,3.8-12.74,1.83-14.26-.76-.75-6.07,5.62-7.44,3.8-1.52-1.83-3.34-19.88-6.07-31.86-2.57-11.68-5.31-20.17-5.61-23.66-.3-3.34-20.94-62.2-25.94-76.46a361.49,361.49,0,0,1-10.16-36.71c-1.52-7.13-2.58-21.7-3.34-20.18s-.3,8.95-1.52,8.65c-1.06-.31-4.85-26.24-6.06-30.34-1.06-4.1-7.44-18-9-28.06-1.52-10.17-4.85-36.72-7.13-54.77s-3.34-25.48-3.34-30a186.94,186.94,0,0,0-1.82-33.07c-3-19.12-9-42.33-14.26-55.82-10.16-25.49-37.17-90.72-42-106.95,0-4.1,5.31-1.82,5.31-1.82s13.19,33.07,22.9,58.55c9.41,25.49,18.36,47.94,20.64,50.22,1.82,2.27,16.08,27.3,22.45,68.26s8.64,78.73,12.44,103.91c1.82,12,3.34,24.73,7.13,37.47,4.09,13.81,10.46,28.07,18.81,49.91,7.13,18.36,12.44,33.68,15.32,46.88,3.34,16.84,3.34,29.58,5.31,37.93,1.83,7.13,4.55,21.38,10.93,42s15.77,47.18,22.14,63.71c12.45,33.07,18,60.68,19.88,75.4,1.66,15.17,7.28,67.66,5.76,83.43h0Z" style="fill:#a88f33;fill-rule:evenodd"/><path d="M1275.34,214.5l-.76,1.82s2.27.76,1.82,3.8a90.7,90.7,0,0,1-.76,12.44c-.75,5.31-2.27,9.4-2.57,12.74,0,7.13,1.06,15.32-9,35.65-3,5.61-4.85,10.46-6.37,13.8-3.79,8.19-4.55,9.41-7.89,13.2,5.31-3,24.43-15,34.13-13.2-6.67,3.79-16.84,11.23-23.21,20.94,1.52.3,7.89,1.52,18,0,16.84-2.58,35.65-8.65,52.18-7.44,18.06,1.06,10.93-21.69,10.93-21.69L1321,240.75,1281.56,213l-6.22,1.51Z" style="fill:#be9c44;fill-rule:evenodd"/><path d="M1378.19,557.65s-17.6-17.6-24.73-78c-7.13-60.68-5.61-150-5.61-150l-14.26-34.89s-3-23.21-10.47-31.85-22.14-23.21-28.82-30.34-14.26-16.84-18.81-18.36c2.27-3.79,12.44-25.18,51.42-25.48s51,21.39,55.07,29.28,22.45,42,29.27,107c6.37,64.92,6.68,69.78,5.62,92.23-.76,12.44-4.86,41.26-12,72.05-6.52,26.1-13.65,55.23-26.7,68.42Z" style="fill:#a17c34;fill-rule:evenodd"/><path d="M1323,609.38a29.79,29.79,0,0,0,16.84-3.8c5.61-.3,25.94,2.28,41.56-17.59,1.06,4.54,3.8,16.84-3.34,27.76,3.8-3.8,9.41-5.31,10.17-6.37.3,5.61,5.61,22.9-16.84,64.92,6.06-6.67,13.19-6.37,19.56-7.13.31,7.89,4.55,34.43-6.67,48.7-7.43,9.71-19.57,6.67-19.57,6.67a38.15,38.15,0,0,0,0-6.37c-.3-4.1-1.82-8.19-.75-10.92a54.42,54.42,0,0,1-15.78-10.93c-13.2-12.44-30.34-33.67-31.55-49.45-1.52-17.6,14.26-21.39,14.26-21.39a16.87,16.87,0,0,1-3.34-4.1c-.76-2.57-1.52-6.67-4.55-10h0Z" style="fill:#8c6228;fill-rule:evenodd"/><path d="M1206,418.54s-.76-1.06-4.85,3.79c.76-4.85,1.52-9.41,1.82-13.81a47.6,47.6,0,0,1,7.44-11.22c-2.28,4.54-3.8,8.64-3.8,8.64s5.62-10.47,13.81-16.84c5.61-4.55,12.74-6.67,15.77-10.92,3.34-4.55,2.58-5.31,3.34-6.07,0,0,7.44-4.85,18.82-19.12,1.51-1.82,3.79-3.79,5.31-5.61,2.57-1.06,8.64-3.79,15.77-7.44,7.44-4.09,15.78-9.7,20.94-12,10.16-4.55,20.94-4.09,25.94-11.23,3.79-1.06,7.88-12.44,7.13-22.14,5.61,2.27,34.43,20.17,44.3,59.31,7.13,27.76-5.62,70.54-10.93,91.18s-6.06,35.95-13.5,45.35c-9.41,12.45-39.74,30-47.18,38.69-6.37,7.13-25.48,25.18-24.73,38.22.76,9.71,12.74,15,15.33,16.84s2.57,4.1,7.43,3,6.67-3.34,8.65-3.34c2.27.3,2.27.76,3.33.76a10.94,10.94,0,0,0,2.28-.31s-.76,13.81-33.07,18c-2.28.31-4.55,1.06-7.44,1.52,3.8-1.82,6.07-1.82,10.17-7.43-4.55-.76-17.6-1.52-20.94-2.58,1.06-1.82,4.55-6.68,7.43-8.95,2.58-2.27-.3-3-2.57-1.82a121.45,121.45,0,0,0-11.23,8.64c-3.79,3.34-7.13,7.89-13.2,12-1.82-6.07-1.52-17.6,5.62-25.94-1.83.3-5.32,5.61-8.65,4.55a48.31,48.31,0,0,1,1.06-16.54c1.82-6.83,11.68-18.81,11.68-18.81l47.63-85.11,10.16-64.47L1206,418.52h0Z" style="fill:#92723a;fill-rule:evenodd"/><path d="M1203.43,422.18s-2.58,1.82,2.58,5.31c-.76,1.06-2.58,4.85-4.86,7.43-2.57,3-5.31,4.86-6.37,7.44-2.27,5.31-4.09,8.95-4.09,11.23s-.76,16.84-7.13,26.24c-2.28,3.34-4.86,8.95-6.68,12.74-3.79,6.67-7.13,12-7.89,15-1.51,5.31-2.57,19.87-2.57,19.87s3.34-4.1,4.55-5.61c-1.83,3.79-3.8,7.88-6.68,10.92,1.82-1.52,7.13-5.31,16.08-13.2,12.44-10.46,31.86-28.06,55.53-42-7.14,2.58-13.2,2.58-18.05,3.34,3.79-3.79,37.92-43.84,55.82-47.63a7.14,7.14,0,0,0,1.52-4.86l-15.33-1.51-31.1,6.67-4.54-24-20.79,12.59Z" style="fill:#b18e3e;fill-rule:evenodd"/><path d="M1252.89,558.71s-4.1,4.09-7.89,14.26a47.8,47.8,0,0,1-7.44-10.17c-5.61-9.4-14.25-21.39-34.43-14.56-.3-6.37-.76-9.71,0-14.26,3.34-.75,13.5-8.94,23.66-20.93,7.14-8.19,13.81-17.6,18.36-29.58,3-2.28,8.19-6.07,15-10.47,9.71-6.67,21.39-15.78,23.21-25.94-4.55,1.82-14.26,6.37-28.83,5.62,5.62-2.58,14.26-5.31,13.2-16.54,2.28-1.52,4.1-2.58,4.1-2.58a15,15,0,0,0-5.31-.76c-.31-1.06-.76-2.57-3.34-1.82s-3,.76-3.34,1.82c-1.06.31-4.55,0-7.13,1.83s-9.71,7.88-12.44,8.94c1.06-1.82,2.57-4.54,2.57-4.54s-7.43.75-12.74,3c-9.71,3.34-20.93,9.41-32.31,15.32,1.06-1.82,1.52-3,2.27-3.34s2.58-.75,2.58-1.06-.75-3-.3-4.09a139.18,139.18,0,0,1,12-20.63c5.31-7.14,6.37-17.3,6.37-17.3l23.21-11.68,65.23-15,42.33,2.58-5.31,29.28-25,51.12-21.39,46.57-24.43,28.53-22.45,16.38h0Z" style="fill:#543e26;fill-rule:evenodd"/><path d="M1358.62,432s-25.49,31.55-32.62,36.41c4.55-9.71,32.62-67.51,42.78-83.59-2.27-1.82-5.31-1.82,1.82-30-6.06,14.25-8.19,21.69-13.19,25.48s-5.62,2.58-9,2.58a6.34,6.34,0,0,0,.75-3.79s-21.39-2.58-36-2.58-43.53,7.89-59.62,14.26c-12.74,5.31-19.87,5.31-24.42,8.64-4.55,3.79-7.13,7.89-9.41,8.95-1.82,1.06-10.46,3.79-12.44,6.67-1.82,3-4.85,6.37-4.85,7.13s-.76,1.83,1.52,1.06c.75-.3,6.37-3.34,12.74-7.13,8.64-4.85,19.11-10.46,26.7-13.8,21.69-8.65,28.52-7.13,38.22-8.95,10.16-1.82,24.73-6.07,34.43-6.07,9.71-.3,28.07,0,32.32.76-1.82,1.52-3.34,3.34-2.58,9.71,0,1.82-1.52,3.79-3,8.19-4.54,12.44-13.19,33.07-18,43.54-6.67,14.25-14.25,26.24-18,33.67s-12,27-20.17,37.47-12.44,16.84-15,19.12-20.94,15.77-19.57,20.63c3.34-1.06,24.43-9,39.74-26.24s18.36-27.76,30.34-37.17,21.39-25.18,27-38.22c4.7-12.14,3.64-15.93,9.55-26.7h0Z" style="fill:#806031;fill-rule:evenodd"/><path d="M809.32,667.48s-3.34,13.8-10.93,20.63c-7.43,6.68-20.63,12.44-22.14,23.67-1.82,11.22,13.2,16.84,13.2,16.84s-8.2,13.5-8.2,23.66c0,10.47-.3,12.44.76,22.45a10,10,0,0,0-3,3s.75,9.71,8.19,15.77,13.8,9.71,17.59,8.19a35.78,35.78,0,0,1,1.52,3.8s5.62-14.26,9.41-26.7c3.79-12.74,7.13-10.93,8.64-28.07s18-46.57,18-46.57L853.61,679l-18.35-14.26-25.94,2.73Z" style="fill:#b6903c;fill-rule:evenodd"/><path d="M843.45,692.2A110.44,110.44,0,0,0,833,704.64c-4.85,6.68-8.64,12.74-15.77,15.33s-11.68,2.57-11.23,9.71,7.13,10.16,10.92,13.8c4.1,3.79,7.44,10.16,5.62,17.3,2.27-1.06,6.37-2.28,10.16-10.47S863,692.21,863,692.21H843.45Z" style="fill:#685026;fill-rule:evenodd"/><path d="M948,577.06s2.27-6.06,0-10.46c-2.28-4.55-16.08-6.07-22.91-11.23-7.13-5.31-15.78-9-22.91-6.67,1.06-2.58,5.31-8.2,1.82-9.41-3.34-1.06-15.77,4.55-19.11,7.13s-10.93,5.61-12.44,7.44-4.1,5.31-5.62,3.79c-1.52-1.06-2.27-3.79-4.85-2.28s-15,11.68-17.29,17.6-7.44,19.12-22.91,34.13-22.15,24.73-17.6,30.34,6.68,1.52,7.44,6.37a40.91,40.91,0,0,1-.76,14.26c-1.82,7.89-4.85,15.32-.76,16.84,10.47,3.34,20.64-3,22.91-1.06,4.55,4.09-2.58,18.81,8.19,21.69,10.93,3,21.7-2.58,21.7-2.58l39.74-21.39,38.23-20.17,19.56-38.69L949.94,580.4l-2-3.34Z" style="fill:#d4b968;fill-rule:evenodd"/><path d="M910.5,669.45s-6.68-10.16,1.52-19.12,19.87-12.74,24.42-18.35a7,7,0,0,0-3.34-2.27,30.21,30.21,0,0,1,13.2-12.45c-2.27-2.27-5.31-4.09-8.64-4.09-7.44,0-12,4.55-18.82,4.55-6.67,0-7.43-3.34-7.43-3.34s11.23-1.06,10.16-6.07c-1.06-5.31-3-5.31-3-5.31s21.69-9,25.48-13.8,3.34-10.47,4.1-12.74c2.57,0,17.59-7.89,23.66-4.55s1.82,12.44,1.82,12.44S992,570.54,1001.36,557c8.19.76,12-5.61,18-5.61,7.44,0,19.12,10.16,21.39,31.85,1.52,12.44,3.79,19.57,1.52,41.57-1.06,12.44-.76,39,3,52.18,2.57,10.47,8.64,9.41,8.64,9.41a17,17,0,0,1-5.31,8.19c-4.1,3.79-4.55,13.81-4.1,17.6a75,75,0,0,0,2.28,8.19s-4.85,5.61-6.07,9.41c-1.06,3.79-6.06,6.37-9.71,6.37s-1.82-.31-6.67,0-6.37,1.06-9.41,0-5.31-2.28-4.09-12c1.06-9.71-37.47-32.31-37.47-32.31l-63-22.45h0Z" style="fill:#cca849;fill-rule:evenodd"/><path d="M838.14,765.32s13.8,18.36,70.54,18.36c27,0,36.41-2.58,42-4.1,6.07-1.52,28.82-10.46,51.73-37.47,20.63-24.42,16.08-34.43,16.08-34.43l-12-1.82-39,5.31L852.09,760.32l-14,5Z" style="fill:#585136;fill-rule:evenodd"/><path d="M880.46,769.87s-49.15,10.93-49.15-20.17c0-30.34,30.34-62.2,37.93-67.81,7.89-5.62,26.7-12,26.7-12H941.3l8.64,22.91-3.79,49.45-65.69,27.61Z" style="fill:#252211;fill-rule:evenodd"/><path d="M925.82,679.16s-9.4-8.65-30.79,3-38.69,36-39.75,58.11c-1.06,19.56,16.08,34.13,42.78,34.89,19.87.75,31.86-1.52,37.93-3-1.52-1.82-9.41-11.68-9.41-11.68l-.75-81.31h0Z" style="fill:#c3b378;fill-rule:evenodd"/><path d="M916.57,684s-2.27-1.82-9,1.82c-5.61,3-13.8,10.93-20.17,16.54-4.1,3.34-6.68,4.85-9,7.43-9.41,11.23-17.3,29.59-12.74,38.69s19.57,19.57,57.8,12.44l-7-76.91h0Z" style="fill:#e6d89c;fill-rule:evenodd"/><path d="M904.13,702.82s-6.07,9.41-6.07,24.43c0,15.32,8.65,39.74,40.51,41.56,24.42,1.52,40.8-35.19,58.55-49.45,13.5-10.92,21.69-11.23,21.69-11.23s-13.8-15-50.66-34.43c-36.41-19.57-77.22-22.15-99.37,7.89,10.47-.76,44.3-9.41,44.3-9.41l16.54,5.31-25.49,25.34h0Z" style="fill:#252211;fill-rule:evenodd"/><path d="M951.76,722.69c-1.06-2.27-1.82-5.31,2.58-6.06s6.37-.31,7.89,3,3,6.07.75,7.44c-2.27,1.21-8.19,0-11.23-4.4Zm-7.13-21.39s-1.52,1.06-.76-1.06c.3-2.57,2.28-7.13,7.13-6.06s3.8,6.37,3,7.89-4.85,4.09-7.89,3a2.53,2.53,0,0,1-1.52-3.79Z" style="fill:#6f674d;fill-rule:evenodd"/><path d="M534,711s12,9,25.94,8.65c13.8-.31,31.55-14.56,39.74-23.67,4.85-5.31,9-10.92,13.5-15.32,3.8-3.79,6.37-5.61,8.19-8.19,2.58-3,5.31-8.64,6.68-10.47-3.34,2.58-8.19,7.14-13.2,10.17-4.85,3-15.32,8.64-19.57,10.16-4.09,1.52-46.57,24-46.57,24L534,711h0Z" style="fill:#ac924c;fill-rule:evenodd"/><path d="M552.34,598.91s6.67-4.55,19.57-7.44c12.44-3,37.47-5.31,37.47-5.31l20.63,9,8.19,31.1-15,32.32-19.11,12-21.7-34.89-30-36.72h0Z" style="fill:#9f8e57;fill-rule:evenodd"/><path d="M525.34,626.67,518.2,632s1.83-3.34,3.34-13.5,9.41-34.89,20.94-49.15,11.23-13.5,11.23-13.5a7.59,7.59,0,0,0-6.07,1.51C549.16,554,558.87,542,568.58,536s13.5-7.89,23.66-3,12.74,7.43,20.18,7.13,13.8-8.19,13.8-8.19,1.52,4.85-4.09,16.08-27.76,34.13-27.76,34.13l-46.12,31.55-22.91,13h0Z" style="fill:#eac970;fill-rule:evenodd"/><path d="M559.46,595.12s33.38,4.55,43.54-4.85c.3,1.06,1.52,1.06,1.52,1.82a2.65,2.65,0,0,1-.76,1.51,24.44,24.44,0,0,1,3.34-.3,19.7,19.7,0,0,0,4.1.76,23.67,23.67,0,0,0,3.34-.31,5.67,5.67,0,0,1-2.28,3.8c1.52,0,3,.3,3,1.51s.3,4.86-1.52,5.62a6.88,6.88,0,0,1-4.55-.31,18.72,18.72,0,0,0,2.28,8.2c3,5.61,9.4,12,18,10.16,0,0,4.54,10.92-14.57,35.19-2.57,3.34-5.31,7.89-8.64,11.68a44.32,44.32,0,0,0-3,8.95s32.32-12.44,41.57-40.81c9.41-28.52,11.23-56.58,9.41-82.82-.31-7.44-1.52-12.74-3.34-16.54-4.55-9.41-17.3-7.89-22.45-2.58-7.44,7.44-19.88,25.94-37.17,38.68-17.6,12.74-18.35,15-31.86,20.64h0Z" style="fill:#d7bc6b;fill-rule:evenodd"/><path d="M519.42,636.08s-6.37,3.79-9.71,18c-3.34,14.56,3,32.31,6.67,37.92s12,20.94,29.28,21.7a32.1,32.1,0,0,0,12.44-2.58,78.7,78.7,0,0,0,16.84-10.47c7.44-5.61,13.5-10.46,12.74-10.92-1.82-.76-45.81-37.17-45.81-37.17L525.33,634.1l-5.92,2Z" style="fill:#585136;fill-rule:evenodd"/><path d="M561,696.45s8.95-.75,14.26-4.09-31.1-39.44-31.1-39.44l2.58,39L561,696.45Z" style="fill:#453a25;fill-rule:evenodd"/><path d="M522.3,633.34s-4.55,8.65-4.55,10.93c-.76,7.43,1.52,30.79,3.34,38.22,1.82,7.89,11.68,19.87,24.43,19.87,7.88,0,18.81-4.85,18.81-6.06,0-1.52-11.23-3-14.26-8.65-1.82-3-2.58-10.46-3-18-.3-4.85-.3-10.16,1.52-12,4.1-4.55,4.85-17.6,4.85-17.6L568,613H548.85l-22.91,14.26Z" style="fill:#84754b;fill-rule:evenodd"/><path d="M516.69,641.69s15-19.87,28.52-24.43,19.57-1.82,19.57-1.82l-7.89,20.18-11.23,12.44.76,6.37s-1.83,16.84,9.4,28.52,19.57,11.23,24.43,11.23,18.81-4.1,25.94-20.94c6.37-15.77,11.68-36-1.06-56.28C592.68,596.78,570.69,596,566.44,596s-37.62,1.67-49.75,45.66h0Z" style="fill:#252211;fill-rule:evenodd"/><path d="M901.85,709.19c-5.61-2.58-.3-18.35,5.31-23.21s12.74-10.46,25.19-11.23c4.54-.3,8.94,2.58,8.19,5.62-1.06,5.61-8.95,13.5-16.08,19.11-9.86,7.74-16.24,12.59-22.61,9.71Z" style="fill:#f7f7e7;fill-rule:evenodd"/><path d="M598.45,623.18c4.1-.3,9.41,3,10.47,7.44,1.06,4.85-2.58,14.56-10.47,14.56-6.37,0-9.71-7.89-9.71-10.16a11.6,11.6,0,0,1,1.52-5.31c.3-.46,1.06-5.77,8.19-6.53Z" style="fill:#f8f6de;fill-rule:evenodd"/><path d="M539.29,626.67s-10.47,4.85-15.32,15a39.8,39.8,0,0,0-3,24c.76,3.79,4.55,13.19,7.13,16.53s6.07,5.62,8.65,5.31,7.88-7.13,7.88-11.22.31-21.39,5.31-30.8c4.4-9.4-10.62-18.81-10.62-18.81h0Z" style="fill:#d4c38b;fill-rule:evenodd"/><path d="M540.81,625.91c-1.82,1.06-4.85,2.58-4.1,4.55.76,1.82,7.13,3,9.41,7.44,2.58,4.55,2.58,9.4,1.82,11.68a18.48,18.48,0,0,0,5.31-3.8c3.34-3.79,7.43-8.94,10.92-8.94,2.28,0,4.55,1.06,6.68,1.06,3.34,0,6.67-1.06,7.13-4.55.75-4.55-6.37-8.65-10.47-7.89.76-3,1.82-7.43-1.52-10.47s-13.8,2.28-16.08,3.8-9.1,7.13-9.1,7.13h0Z" style="fill:#e2d59d;fill-rule:evenodd"/><path d="M781.86,944.63,804.31,938l6.37,4.55s4.54,9.71,11.68,10.92c-2.28,4.85-8.2,9-7.89,12.44s3.34,6.07,3.34,6.07-20.18,33.37,19.57,67c-9.41,3.79-21.39,9-27.76,12,4.54,1.06,14.25,3,18.35,6.68s4.1,4.85,7.89,7.13,6.06,5.31,5.31,6.67c-2.58-1.52-11.23-6.06-12.74-1.82s-37.47,2.58-37.47,2.58l-60.68,11.68s2.27-6.07-4.1-11.68c-7.43-6.67-16.53.3-26.24-7.13-12.74-9.71-13.2-20.94-17.29-25.18,4.09-2.58,12.44-6.37,32.31-9-.76-1.52-3.34-6.07-1.82-10.16,1.82-5.31,9.4-8.65,7.13-15,3.34-.76,4.85-.76,13.2-11.23,7.89-10.47,12.74-12.74,18.81-13.5s9.71,0,20.94-10.47c7.88-7.43,5.31-13.8,5.31-13.8s5.15-1.67,3.34-12.14h0Z" style="fill:#cbac5a;fill-rule:evenodd"/><path d="M715.57,948c.3-1.52,1.52-2.28,9.71-1.52s60.07-4.85,74.18-5.61c14.26-1.06,64.47-.31,88.9,4.85s49.15,11.23,61.13,14.26c12,3.34,15.78,4.54,15.32,6.06-.3,1.52-3,3-4.55,2.58-1.51-.3-41.26-12.44-53.54-15s-54.77-9.41-78-9c-21.69.31-30.34-.3-48.69,1.82-18.36,2.28-48.7,5.31-57.8,4.1-9-1.06-7.14-1.06-6.68-2.58h0Z" style="fill:#d6bc6f;fill-rule:evenodd"/><path d="M837.68,1066.9s31.1,16.84,42.33,37.47c8.19,15.32-4.85,22.91-4.85,22.91s17.6,0,15.32,9.71c-1.06,6.06-30.34,22.44-49.91,31.09-19.87,8.65-19.11,8.2-28.82,9.71-9.41,1.52-35.2-3-40.51,4.55s-3,15.33-1.52,16.54c1.52,1.06,13.81,2.58,13.81,2.58s-2.58,7.13-28.06,7.89-31.86,2.57-33.38,5.31c-1.52,2.57,4.85,1.06,16.54,3,11.68,1.82,28.06,3,28.06,3s-5.31,4.55-19.11,8.19c-15.78,4.09-40.51,7.89-47.94,12.44,3.79,2.58,9.41,6.37,12,6.67-6.37,1.52-15.33,4.86-16.84,6.07,2.27,1.52,5.31,3.34,5.31,3.34s-12.75,15.32-20.18,19.12-50.21,23.66-64.93,19.87c-36.71-9.71-41.26-49.91-50.21-52.94-13.5-4.55-19.87,4.54-31.86-1.83,5.31-3.79,8.2-6.06,13.81-8.64-6.07-3-37.47-22.91-37.47-22.91a232.72,232.72,0,0,0-10.92-20.93c-6.07-10.47-15-24.43-21.7-36.72-14.56-27-15.32-39.44-28.52-54.76,2.28-3,10.16-2.58,10.16-2.58l110.6,36.41L765,1137.14l51-72.81,21.69,2.58Z" style="fill:#dfc677;fill-rule:evenodd"/><path d="M547.18,1177.94a17.21,17.21,0,0,0,4.09,3.34c3.8,2.58,9.41,5.62,13.2,10.16,1.52-2.27,5.31-6.37,12,0s15,1.83,20.17,3.34c5.31,1.83,5.61,2.58,5.61,2.58s3-2.58,9.71-5.31c4.1-1.52,8.95-2.58,14.26-4.09,4.85-1.06,10.16-2.58,13.81-2.58,3.34,2.27,15.32,15,63.41-3.79,45.36-17.6,55.82-19.57,63.41-16.85.76-1.82,1.52-5.31,13.2-4.85,0-4.85-9.71-21.39-9.71-21.39l-53.55-18.35H687.5l-87.83,16.08L551,1164l-3.79,14Z" style="fill:#c4a859;fill-rule:evenodd"/><path d="M517.9,1147.15s1.06,8.19,13.2,16.84c12,8.64,15.77,13.8,15.77,13.8s2.28-3,4.1-6.06c1.82-3.34,3.34-7.13,6.37-8.19,6.07-2.58,19.87,2.27,22.91,1.51,2.58-.75,1.82-6.06,4.55-6.06,6.37-.31,10.46,4.09,12.74,4.09s7.88-.3,8.64-1.51,1.06-13.81,9.71-19.88c9.41-6.67,20.94-3.79,24-2.27,0,2.27.3,7.89,6.37,8.19s6.67-.76,12,1.06,11.68-.3,14.56,8.64c2.58-.75,8.65-1.51,7.13-10.16,3-2.27,5.62-3.79,12-12.74,1.52-2.27,4.09-4.85,6.07-8.19,5.31,0,11.68-1.06,20.17,6.37-2.58,1.82-4.1,3-4.85,4.85a54.56,54.56,0,0,1,6.06,7.13c2.28,3,3.8,6.68,6.68,7.44,6.37,1.82,16.84-.76,28.52,0,11.23.76,20.63,4.85,24.73,7.43,1.52-.75,1.52-1.06,5.31-.3s6.67,1.06,2.58-3.79c2.27,1.06,4.85,3.34,7.13,1.06s4.09-5.61,10.46-6.37,8.65.3,11.23-6.37c3.34-8.19-8.19-8.19-8.19-8.19s5.31-4.86,11.23-11.23c7.13-6.67,15.32-15.32,17.29-25.94,3.34-19.57-15.77-22.14-15.77-22.14l-92.69,28.52-113.32-5.62-96.63,48.09h0Z" style="fill:#927d49;fill-rule:evenodd"/><path d="M434.62,879.4s-3,3.79-4.85,12.74-1.06,7.89-2.58,14.26S407,976.18,414,997.57s19.12,29.28,26.7,46.57c1.52,3.79,3,6.07,3.79,9.41,2.58,11.22.31,19.87,3.34,31.1,1.06,3.79,3.8,8.19,7.89,12.74,9,9.4,23.67,18.35,30,24.72,8.94,9.41,21.69,28.53,37.92,30.34,8.65,1.06,20.94-2.58,31.1-8.64,9-5.62,14.56-13.5,24-18,6.67-3.34,13.8-4.55,20.17-6.07,13.2-2.58,25.19-3,32.32-1.52,10.92,2.28,36.71,10.17,51,10.17a138.73,138.73,0,0,0,33.07-4.55c21.69-6.37,47.93-17.3,65.23-22.15,10.16-3,18.35-3.79,26.7-5.61,14.26-3.34,26.24-7.89,33.07-16.54-4.55-5.31-10.16-13.5-40.51-13.2-34.43.76-74.18,19.87-93.75,22.91s-28.06,5.61-49.91-2.28C634.71,1079,634,1073.73,634,1073.73S611.51,1058,602.1,1017.9s0-69.32,24.43-97.09c6.37-7.13,4.85-13.5,4.85-13.5s16.08-21.69,11.68-42c-4.85-20.18-35.95-16.08-35.95-16.08L434.63,879.4h0Z" style="fill:#6e6342;fill-rule:evenodd"/><path d="M460.56,946.91a15.72,15.72,0,0,0-1.82,8.19c.3,4.09,1.52,9.4,13.8,21.39,10.47,10.46,8.19,22.14,8.19,22.14S486,999.69,500.3,993c11.23-5.31,15,4.1,15,4.1a31.71,31.71,0,0,1,10.47-3.34,22.91,22.91,0,0,0,9.4-3s13.2,13.5,24.73,19.87c10.47,5.62,16.54,9.41,21.7,5.62,4.85-3.34,4.85-10.17,4.54-13.2a39.39,39.39,0,0,0-4.54-7.89c-3.34-4.85-8.65-10.47-9-15-.76-10.46,7.89-22.91,6.06-25.94s-8.64-3.79-25.48,2.28c-17.44,5.76-92.69-9.56-92.69-9.56h0Z" style="fill:#39331f;fill-rule:evenodd"/><path d="M500.3,1014.72s-8.64-8.19-5.61-47.94a49.38,49.38,0,0,1,10.92,1.06S510.32,998.64,500.3,1014.72Z" style="fill:#292311;fill-rule:evenodd"/><path d="M438.72,849.06a23.74,23.74,0,0,0,3.34-3c-3,5.61-16.85,28.06-5.62,63.41,11.23,35.19,39.44,61.43,74.18,62.65s53-15.78,73.88-41.26c8.19-10.16,17.6-22.91,25.94-31.55,12.44-13.51,22.15-17.3,22.15-30.34,0-26.7-27.31-38.69-67.51-50.67S488.62,807.8,469.81,816c-18.35,8.94-26.24,18.35-31.1,33.07h0Z" style="fill:#252211;fill-rule:evenodd"/><path d="M567.81,1026.7l3-1.52s.75-12,5.61-11.68c4.85.76,7.13,7.14,6.67,9.41-.3,2.27-1.51,6.07-6.37,5.61-6.37.15-8.94-1.82-8.94-1.82Z" style="fill:#3f3824;fill-rule:evenodd"/><path d="M554.31,975.73s3-1.06,6.67,2.58c3,0,16.08-1.52,20.18,1.06s5.31,4.85,5.31,4.85-15.32,3.34-23.67,0c-8.49-2.88-8.49-8.49-8.49-8.49Z" style="fill:#2d2815;fill-rule:evenodd"/><path d="M621.82,978c0-.76-8.19-6.37-16.84-8.2-1.52-.3-1.83.76-3,.76-.76-.3-1.06-2.58-1.06-2.58L596,970.57s-.76,1.06,1.82,3c2.27,1.82,6.07,3.34,7.13,6.37s1.06,4.09,1.52,4.55c.3.3,5.61,0,8.19-1.52s7.44-4,7.13-5h0Z" style="fill:#82764f;fill-rule:evenodd"/><path d="M545.21,1008.8s1.51-10.46,11.68-10.92c10.46-.76,12.44,9.4,12.44,9.4l-6.07,6.07c0-.15-4.55-6.52-18-4.55Z" style="fill:#2d2816;fill-rule:evenodd"/><path d="M611.2,963.74s-5.62,6.07-18.05,7.89c-1.06-1.52-3.34-4.55,0-9.4s7.13-6.37,10.92-4.86a8.88,8.88,0,0,1,7.13,6.37Z" style="fill:#574f35;fill-rule:evenodd"/><path d="M634.1,971.18c.31-1.52-.75-1.82,0-2.58s4.86-2.27,5.62-1.52c.3.31,0,1.52,0,3s0,3-.76,4.09c-1.06,1.52-4.09,2.28-5.61,1.83s-1.82-2.58-1.82-3c.75-.3,2.57-1.06,2.57-1.82ZM660,954.8c0-.76,2.58-2.28,4.1-2.28,2.27,0,2.27,1.82,2.58,2.28.75.3.75-.31,1.51,1.06s1.83,3.79,1.06,5.31-3.79,2.57-4.54,2.27c-1.06-.76-4.4-7.58-4.71-8.64Z" style="fill:#82764f;fill-rule:evenodd"/><path d="M607.86,974.67s3.34.75,7.89,4.55c-1.52,1.06-3.8,2.27-3.8,2.27s-.3-3.49-4.09-6.83Z" style="fill:#6e6342;fill-rule:evenodd"/><path d="M600.43,941.29c-.76-.75,2.27-2.57,4.09-2.27s2.58,1.52,4.55,1.82,2.28-.76,3-1.52,3.34-.3,3.79,0a8.45,8.45,0,0,1,.76,1.06,4.2,4.2,0,0,1,1.51-3,4.79,4.79,0,0,1,4.1-.76c.3,1.06,1.82,4.85,1.52,5.61s-4.85,1.83-5.62,1.06c.76,1.83,4.1,5.62,4.55,6.37s-3.34,2.58-4.85,2.28c-2.12-.15-15.17-7.74-17.44-10.62Zm19.87-25.18a3.52,3.52,0,0,0-1.52-1.82c-1.06-.3-4.55,0-4.55,1.82s3,12,6.37,17.3c3.8,5.31,6.37,9.7,8.95,10.92a3.52,3.52,0,0,0,4.55-1.52c.3-.76,1.06-6.37.76-19.57s-.76-25.94-1.52-26.7-3.79-.75-4.85.76-7.89,16.54-8.2,18.81h0Z" style="fill:#585136;fill-rule:evenodd"/><path d="M606.8,993.78s-5.31-3.34-10.47-1.06c-4.85,2.28-4.55,11.23-4.55,11.23a7.19,7.19,0,0,0,6.68-.76c3.34-2.27,7.58-6.06,8.34-9.4Z" style="fill:#574f35;fill-rule:evenodd"/><path d="M616.81,1005.77c-.3-3-3-3-3-4.55a3.41,3.41,0,0,1,3.33-2.58c1.52,0,3,1.82,4.86,3,1.82,1.06,4.55,3,4.85,5.31s-3,8.64-6.67,8.64-2.58-6.83-3.34-9.86Zm29.28-4.1s-6.07,1.82-5.62,0,1.83-2.27,3.8-2.27a6,6,0,0,1,3.79-1.83,3.29,3.29,0,0,1,2.27.76s4.1-1.82,5.31-.76.31,1.06,1.06,2.28a10.67,10.67,0,0,1,1.83,4.55c0,1.21-4.55,3.79-8.2,3.34-4.24-.91-3.49-5.31-4.24-6.07Zm35.34-6.83s1.82,1.06.31,2.28c-1.06,1.06-6.37,3-10.93,3.34-4.55,0-8.64.75-8.64-.76s3.79-4.55,6.06-5.31a4.84,4.84,0,0,1,3.8-1.82c1.82,0,8.94-.76,10.92-1.06,1.82-.31,3.34.75,2.27,2.27-.45,1.06-3.79,1.06-3.79,1.06ZM691.9,948s-2.28,4.85-4.85,4.85c-2.58-.3-2.58-1.06-2.58-1.82,0-1.06,2.58-3.79,2.27-4.55-.75,0-2.58,0-2.27-1.82,0-1.52,2.58-3.34,4.85-3a10,10,0,0,1,6.07-2.27c2.58,0,4.85.75,4.85,2.27s-3,4.85-4.1,5.62c-1.21,1.21-2.73,2-4.24.75Zm-34.59,89.65s-3,.31-3,1.82c0,.76.75.76,1.82.31a8.24,8.24,0,0,0,1.82-.31c.3.31.3,1.82,2.58,1.82a14.41,14.41,0,0,0,5.31-1.82c1.82-.75,3.34-1.52,3.34-3-.76-2.58-2.28-3.8-4.55-3.8a6.05,6.05,0,0,0-3.34.76s-.76-1.52-3.34,0-2.28,1.52-1.52,2.28c1.36,1.21.91,2,.91,2Zm-17.14,15.78c0-.76,3.79-2.28,4.85-1.82,1.06.3,4.09,6.06,4.09,6.67,0,.76-3.79,2.58-5.31,2.58s-4.09-2.58-4.09-3c0-.3,1.82-.75,1.82-1.06.45-.75-1.36-2.58-1.36-3.34Zm-12-22.15c.76-.3.76-1.06,1.82-1.82a2.61,2.61,0,0,1,2.28-.3,3.69,3.69,0,0,1,2.58-1.83c1.82-.3,3.34,0,3,.76,0,2.28,1.52,3.79,1.52,5.61s-1.06,4.1-4.85,5.62c-3.79,1.06-8.95,1.06-9.71.76s-1.52-3.34-.76-4.86,2.88-3.18,4.1-3.94h0Z" style="fill:#82764f;fill-rule:evenodd"/><path d="M633,1032.31s-2.58,1.52-2.58,2.28a6.74,6.74,0,0,0-.3,2.27c0,.45,3.34-.3,3.79-.76.15-.3-.91-3-.91-3.79Z" style="fill:#6e6342;fill-rule:evenodd"/><path d="M610.44,1025.18c1.51.31,4.09,0,6.06.76,1.52.76,2.58,2.28,1.06,4.1s-3,4.55-6.37,4.09c-3.79-.3-7.43-2.27-7.43-3.79a7.27,7.27,0,0,1,1.82-5.31c1.52-1.21,2.27-.45,4.85.15h0Z" style="fill:#585136;fill-rule:evenodd"/><path d="M608.62,1026.7s-4.85,3.79-6.07,5.62c-1.52,1.82-8.95,11.22-11.22,13.19a28.57,28.57,0,0,1,2.57-3.79,15.52,15.52,0,0,0-6.37,8.19c-1.82,5.62,10.17,8.65,18.05,10.93s10.93,3,10.93,3a84.72,84.72,0,0,1-7.44-13.8c-3-7.13-4.55-7.89-2.58-11.23,1.52-3.34,3.8-5.61,3.8-8.19C609.38,1028.22,608.62,1026.7,608.62,1026.7Z" style="fill:#574f35;fill-rule:evenodd"/><path d="M435.68,1038.69a9.24,9.24,0,0,0,3.34,0c2.27-.31,25.94-9,50.67-7.44a271.06,271.06,0,0,1,54.76,9c31.1,8.19,69.78,24.42,94.81,33.68,6.67,2.57,13.2,7.13,18,8.94,19.12,7.44,19.87,7.44,31.1,9.41,13.2,1.82,26.7-2.58,40.81-5.61,17.29-3.8,46.87-5.62,72.81-9.41a148.73,148.73,0,0,0,24.73-5.61s-20.63,20.63-70.09,28.06a219.27,219.27,0,0,1-60.37.76c-15.78-1.52-26.24-3.8-34.13-6.07-8.95-2.58-27.31-9.41-49.91-15-15.78-4.1-33.38-7.13-53.55-10.92-49.76-9.11-103.76-19.57-123-29.73Z" style="fill:#252211;fill-rule:evenodd"/><line x1="409.89" y1="846.33" x2="283.52" y2="728.31" style="fill:none"/><path d="M379.85,944.94c-12,10.16-24.73,19.87-37.16,29.27L305.22,1003c-12.74,9.4-25.18,19.11-37.93,28.52s-25.48,18.35-39,27c12-10.16,24.73-19.57,37.47-28.82S291.71,1011.38,304,1002l37.47-28.83c12.89-9.4,25.33-19.11,38.38-28.21Zm-66.29,106.19s13.5-11.23,30.34-27c20.93-19.56,46.57-44.6,54.76-49.14l-85.11,76.15Z" style="fill:#cfb66c;fill-rule:evenodd"/><path d="M313.56,1051.12c6.68-6.67,13.81-13.19,20.94-19.57l10.92-9.4c3.34-3,7.14-6.37,10.47-9.71,6.67-6.67,13.2-13.81,19.87-20.63a127.54,127.54,0,0,1,10.47-9.71,28.3,28.3,0,0,1,6.06-4.1c1.83-1.06,3.8-3,6.37-3.34-1.51,2.28-3.33,3.34-4.85,5.31-1.82,1.52-3.34,3.34-4.85,4.85-3.34,3.34-7.13,6.37-10.47,9.41-7.13,6.07-14.56,12-21.69,18.35s-13.8,13.2-20.94,19.57c-7.73,6.53-14.86,12.9-22.3,19Zm90.72-60.68s-49.45,48.4-59.62,56.28Z" style="fill:#cfb66c;fill-rule:evenodd"/><path d="M404.28,990.44A161.47,161.47,0,0,1,390,1005l-15,14.26c-4.85,4.85-9.41,9.71-14.56,14.56-5.31,4.55-10.16,9-15.78,13.2l14.56-14.26c4.86-4.85,10.17-8.94,15.33-13.8l14.56-14.26c5-5,9.86-9.86,15.17-14.26Zm2.27,26.24a315.38,315.38,0,0,1-16.08,37.17c-12.74,25.49-31.85,57.34-40.2,73.58l56.28-110.75Z" style="fill:#cfb66c;fill-rule:evenodd"/><path d="M406.55,1016.69c0,5.61-1.52,10.47-3.34,15.32a150.66,150.66,0,0,1-6.06,14.26c-2.28,4.55-4.86,9.41-7.44,13.81s-5.61,8.94-7.89,13.5l-15.32,27c-5.31,9-10.47,18.05-16.08,26.7,3.79-9.71,8.95-18.81,13.81-27.76,5.31-9,10.16-18,15-27.31a153.85,153.85,0,0,0,6.37-14.25c2.27-4.86,4.54-9.41,6.37-13.81,2.27-4.85,4.09-9.41,6.37-13.8,2.57-4.71,4.7-9.26,8.19-13.66Z" style="fill:#cfb66c;fill-rule:evenodd"/><path d="M460.56,1141.08s-15,19.87-13.5,45.05C451.15,1172.94,456.31,1152.76,460.56,1141.08ZM474.82,1161s-5.31,54-9.71,80.55C471.33,1210.86,472.54,1213.44,474.82,1161Zm99.36,83.74s-22.45,66-22.91,84.34C556.13,1310.22,565.53,1271.69,574.18,1244.69Z" style="fill:#dec270;fill-rule:evenodd"/><path d="M626.67,1137s36.41,60.07,63.72,111.34C683,1222.54,666,1175.22,626.67,1137Z" style="fill:#cbaf59;fill-rule:evenodd"/><path d="M724.52,1225.43a1104.54,1104.54,0,0,1,54,109.07C775.49,1308.71,767.29,1264.57,724.52,1225.43Z" style="fill:#e3c677;fill-rule:evenodd"/><path d="M1012.14,1314c6.06-3.79,18.05-24.43,28.52-29.58,10.46-5.31,18.35-6.37,27.76-16.84,9.4-10.93,12-17.6,32.61-26.24,28.83-12.45,9-28.53,9-28.53a93.07,93.07,0,0,1,10.16-8.64c7.44-5.61,16.08-12.44,15.33-24.43-1.06-20.17-4.85-49.45-21.39-66.44,16.08-3.34,46.87-5.61,66-10.46,22.14-5.62,32.31-13.51,32.31-13.51s-12.74-21.69,7.89-43.53,37.47-34.89,49.91-59.32c-14.26-1.82-36-9.4-91.48,11.68a69.63,69.63,0,0,1,8.65,4.85s-34.13,9.41-46.57,19.88c-21.7,18.35-24.43,33.37-47.94,44.6s-47.18,8.19-66.74,17.29-22.45,16.84-29.59,20.18c1.52,1.82-.3,4.85,2.58,7.43-1.82,2.58-12.44,19.87-23.21,19.87,1.06,4.1,10.16,7.13,10.16,7.13s-6.67,4.86-23.66,6.07c8.64,9,16.84,18.81,39.44,33.07-1.82,3.79-9.41,9.41-6.37,16.54,3.34,7.13,12,16.84,46.57,24.73-17.6.75-38.22,4.85-66,1.06-27.76-3.34-32.31-5.31-49.45-1.06,1.82,1.82,6.67,1.82,10.92,6.67-4.55.3-33.07-3.34-42.78,9.41-10.16,13.19-14.56,34.89-13.8,49.45-5.31,2.58-10.47,7.13-7.89,16.54s16.08,12.44,24.73,18.35c8.64,6.37,9.4,8.64,17.6,7.13,8.64-1.82,21.38-10.46,28.82-10.46s12.74,5.61,12.74,5.61,20.18-9.71,22.15-7.89c1.82,1.82.3,13.5,2.27,15.32,2,1.37,24.73-12.13,30.8-15.93Z" style="fill:#ecd592;fill-rule:evenodd"/><path d="M1453.13,706.92c-94.81-244.84-329.19-290.2-329.19-290.2H455.25l2.58,249.39H591V1223H455.24v248.94h650.19c156.7,0,282.31-157.47,282.31-157.47,201.15-285.49,65.38-607.55,65.38-607.55Zm-344.21,439.77s-51,73.58-106.49,73.58h-111L888.8,666.72h142.45s66,13.8,112.11,144.41c0,0,61.13,187-34.44,335.56Z" style="fill:#fff;fill-opacity:0.800000011920929;fill-rule:evenodd"/></g></g></g></svg>',
);


================================================
File: packages/connector/src/assets/chains/eth.svg.ts
================================================
import { encodeSvgToImgSrc } from "../utils.js";

export const ETH_SVG = encodeSvgToImgSrc(
  '<svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_46_558)"><circle cx="16" cy="16" r="16" fill="#627EEA"/><path d="M15.9957 20.4203L9.14282 16.3876L15.9957 5.14258V20.4203Z" fill="white"/><path d="M15.9957 26.8573L9.30029 17.396L15.9957 21.3511V26.8573Z" fill="white"/><path d="M16.2319 20.4203L23.0849 16.3876L16.2319 5.14258V20.4203Z" fill="#C1CCF7"/><path d="M16.3107 26.8573L23.0848 17.396L16.3107 21.3511V26.8573Z" fill="#C1CCF7"/></g><defs><clipPath id="clip0_46_558"><rect width="32" height="32" fill="white"/></clipPath></defs></svg>',
);


================================================
File: packages/connector/src/assets/chains/index.ts
================================================
export * from "./btc.svg.js";
export * from "./ckb.svg.js";
export * from "./doge.svg.js";
export * from "./eth.svg.js";
export * from "./nostr.svg.js";


================================================
File: packages/connector/src/assets/chains/nostr.svg.ts
================================================
import { encodeSvgToImgSrc } from "../utils.js";

export const NOSTR_SVG = encodeSvgToImgSrc(
  '<svg version="1.1" id="_8" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 256 256" style="enable-background:new 0 0 256 256;" xml:space="preserve"><style type="text/css">.st0{fill:none;} .st1{fill:#FFFFFF;} .st2{fill:#662482;}</style><g><path class="st0" d="M0,0v256h256V0H0z M231.2,159.2c0,20.7,0,31.1-3.5,42.2c-4.4,12.2-14,21.8-26.2,26.2 c-11.1,3.5-21.5,3.5-42.2,3.5H96.8c-20.7,0-31.1,0-42.2-3.5c-12.2-4.4-21.8-14-26.2-26.2c-3.5-11.1-3.5-21.5-3.5-42.2V96.8 c0-20.7,0-31.1,3.5-42.2c4.4-12.2,14-21.8,26.2-26.2c11.2-3.5,21.5-3.5,42.2-3.5h62.5c20.7,0,31.1,0,42.2,3.5 c12.2,4.4,21.8,14,26.2,26.2c3.5,11.1,3.5,21.5,3.5,42.2V159.2z"/> <circle class="st1" cx="137.9" cy="99" r="12.1"/><path class="st1" d="M210.8,115.9c0-47.3-27.7-68.7-64.4-68.7c-16.4,0-31,4.4-42.4,12.5c-3.8,2.7-9,0.1-9-4.5 c0-3.1-2.5-5.7-5.7-5.7H57.7c-3.1,0-5.7,2.5-5.7,5.7v144c0,3.1,2.5,5.7,5.7,5.7h33.7c3.1,0,5.6-2.5,5.6-5.6v-8.4 c0-62.8-33.2-109.8-0.4-116c30-5.7,64.1-3,64.5,20.1c0,2,0.3,8,8.6,11.2c5,2,12.6,2.6,22.6,2.4c0,0,9.1-0.7,9.1,8.5 c0,11.5-20.4,10.7-20.4,10.7c-6.7,0.3-22.6-1.5-31.7,1.2c-4.8,1.5-9,4.2-11.5,9.1c-4.2,8.3-6.2,26.5-6.5,45.5v15.5 c0,3.1,2.5,5.7,5.7,5.7h68c3.1,0,5.7-2.5,5.7-5.7l0,0V115.9z"/><path class="st2" d="M227.6,54.6c-4.4-12.2-14-21.8-26.2-26.2c-11.1-3.5-21.5-3.5-42.2-3.5H96.8c-20.7,0-31.1,0-42.2,3.5 c-12.2,4.4-21.8,14-26.2,26.2c-3.5,11.2-3.5,21.5-3.5,42.2v62.5c0,20.7,0,31.1,3.5,42.2c4.4,12.2,14,21.8,26.2,26.2 c11.2,3.5,21.5,3.5,42.2,3.5h62.5c20.7,0,31.1,0,42.2-3.5c12.2-4.4,21.8-14,26.2-26.2c3.5-11.1,3.5-21.5,3.5-42.2V96.8 C231.2,76.1,231.2,65.7,227.6,54.6z M205.1,204.8h-68c-3.1,0-5.7-2.5-5.7-5.7v-15.5c0.3-19,2.3-37.2,6.5-45.5 c2.5-5,6.7-7.7,11.5-9.1c9-2.7,24.9-0.9,31.7-1.2c0,0,20.4,0.8,20.4-10.7c0-9.3-9.1-8.5-9.1-8.5c-10,0.3-17.7-0.4-22.6-2.4 c-8.3-3.3-8.6-9.2-8.6-11.2c-0.4-23.1-34.5-25.9-64.5-20.1c-32.8,6.2,0.4,53.3,0.4,116v8.4c-0.1,3.1-2.5,5.6-5.6,5.6H57.7 c-3.1,0-5.7-2.5-5.7-5.7v-144c0-3.1,2.5-5.7,5.7-5.7h31.7c3.1,0,5.7,2.5,5.7,5.7c0,4.7,5.2,7.2,9,4.5c11.4-8.2,26-12.5,42.4-12.5 c36.7,0,64.4,21.4,64.4,68.7v83.2l0,0C210.8,202.3,208.3,204.8,205.1,204.8z M125.7,99c0-6.7,5.4-12.1,12.1-12.1S150,92.3,150,99 s-5.4,12.1-12.1,12.1S125.7,105.8,125.7,99z"/></g></svg>',
);


================================================
File: packages/connector/src/components/button-pill.ts
================================================
import { css, html, LitElement } from "lit";
import { customElement } from "lit/decorators.js";

@customElement("ccc-button-pill")
export class ButtonPill extends LitElement {
  static styles = css`
    button {
      background: none;
      color: inherit;
      border: none;
      padding: 0;
      font: inherit;
      cursor: pointer;
      outline: inherit;

      width: 100%;
      display: flex;
      align-items: center;
      padding: 0.25rem 1rem;
      background: var(--btn-secondary);
      border-radius: 9999px;
      transition: background 0.15s ease-in-out;
    }
    button:hover {
      background: var(--btn-secondary-hover);
    }
    button:disabled {
      cursor: not-allowed;
    }
    button:disabled:hover {
      background: var(--btn-secondary);
    }

    button ::slotted(img),
    button ::slotted(svg) {
      width: 0.8rem;
      height: 0.8rem;
      margin-right: 0.5rem;
    }
  `;

  updated() {
    this.dispatchEvent(new Event("updated", { bubbles: true, composed: true }));
  }

  render() {
    return html`<button><slot></slot></button>`;
  }
}


================================================
File: packages/connector/src/components/button.ts
================================================
import { css, html, LitElement } from "lit";
import { customElement } from "lit/decorators.js";

@customElement("ccc-button")
export class Button extends LitElement {
  static styles = css`
    :host {
      width: 100%;
    }

    button {
      background: none;
      color: inherit;
      border: none;
      padding: 0;
      font: inherit;
      cursor: pointer;
      outline: inherit;

      width: 100%;
      display: flex;
      align-items: center;
      justify-content: start;
      padding: 0.75rem 1rem;
      background: var(--btn-primary);
      border-radius: 0.4rem;
      transition: background 0.15s ease-in-out;
    }
    button:hover {
      background: var(--btn-primary-hover);
    }
    button:disabled {
      cursor: not-allowed;
    }
    button:disabled:hover {
      background: var(--btn-primary);
    }

    button ::slotted(img),
    button ::slotted(svg) {
      width: 2rem;
      height: 2rem;
      margin-right: 1rem;
      border-radius: 0.4rem;
    }
  `;

  updated() {
    this.dispatchEvent(new Event("updated", { bubbles: true, composed: true }));
  }

  render() {
    return html`<button><slot></slot></button>`;
  }
}


================================================
File: packages/connector/src/components/copy-button.ts
================================================
import { css, html, LitElement } from "lit";
import { customElement, property, state } from "lit/decorators.js";

@customElement("ccc-copy-button")
export class CopyButton extends LitElement {
  @property()
  public value?: string;

  @state()
  private isCopied = false;

  static styles = css`
    :host {
      display: flex;
      align-items: center;
      cursor: pointer;
    }
    .copy {
      width: 1em;
      height: 1em;
      fill: currentColor;
    }
    .check {
      width: 0.7em;
      height: 0.7em;
      margin-left: 0.15em;
      fill: currentColor;
    }
  `;

  updated() {
    this.dispatchEvent(new Event("updated", { bubbles: true, composed: true }));
  }

  onclick = () => {
    if (!this.value) {
      return;
    }

    this.isCopied = true;
    setTimeout(() => (this.isCopied = false), 3000);

    return window.navigator.clipboard.writeText(this.value);
  };

  render() {
    return html`
      <slot></slot>
      ${this.isCopied
        ? html`
            <svg class="check" viewBox="0 0 17.837 17.837" alt="copied">
              <path
                d="M16.145,2.571c-0.272-0.273-0.718-0.273-0.99,0L6.92,10.804l-4.241-4.27c-0.272-0.274-0.715-0.274-0.989,0L0.204,8.019c-0.272,0.271-0.272,0.717,0,0.99l6.217,6.258c0.272,0.271,0.715,0.271,0.99,0L17.63,5.047c0.276-0.273,0.276-0.72,0-0.994L16.145,2.571z"
              />
            </svg>
          `
        : html`
            <svg class="copy" viewBox="0 0 24 24" alt="copy">
              <path
                d="M19 13.5657V6.10526C19 5.49737 18.5091 5 17.9091 5H10.5454C9.94543 5 9.45452 5.49737 9.45452 6.10526V13.5657C9.45452 14.1736 9.94543 14.671 10.5454 14.671H17.9091C18.5091 14.671 19 14.1736 19 13.5657Z"
              />
              <path
                d="M14.5455 15.8684H9.18183C8.58183 15.8684 8.09092 15.3711 8.09092 14.7632V9.329H6.09091C5.49091 9.329 5 9.82637 5 10.4343V17.8947C5 18.5026 5.49091 19 6.09091 19H13.4546C14.0546 19 14.5455 18.5026 14.5455 17.8947V15.8684Z"
              />
            </svg>
          `}
    `;
  }
}


================================================
File: packages/connector/src/components/dialog.ts
================================================
import { css, html, LitElement } from "lit";
import { customElement, property } from "lit/decorators.js";
import { CLOSE_SVG } from "../assets/close.svg.js";
import { LEFT_SVG } from "../assets/left.svg.js";
import { CloseEvent } from "../events/index.js";

@customElement("ccc-dialog")
export class Dialog extends LitElement {
  @property()
  public canBack: unknown;
  @property()
  public header?: string;

  render() {
    return html`
      <div
        class="header text-bold fs-lg ${this.header ? "header-divider" : ""}"
      >
        <div
          class="back ${this.canBack != null ? "active" : ""}"
          @click=${() => {
            this.dispatchEvent(new Event("back"));
          }}
        >
          ${LEFT_SVG}
        </div>
        ${this.header}
        <span
          class="close active"
          @click=${() => {
            this.dispatchEvent(new CloseEvent());
          }}
        >
          ${CLOSE_SVG}
        </span>
      </div>
      <div class="body">
        <slot></slot>
      </div>
    `;
  }

  static styles = css`
    .primary-icon {
      color: var(--icon-primary);
    }
    .text-bold {
      font-weight: bold;
    }

    .fs-lg {
      font-size: 1.2rem;
    }

    .main {
      position: fixed;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
      background: var(--background);
      border-radius: 1.2rem;
      overflow: hidden;
      transition: height 0.15s ease-out;
    }

    .header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 1rem 1.3rem 0.5rem;
    }

    .header-divider {
      padding-bottom: 1rem;
      border-bottom: 1px solid var(--divider);
    }
    .close,
    .back {
      padding: 0.2rem 0.4rem;
      cursor: pointer;
    }
    .close svg,
    .back svg {
      width: 0.8rem;
      height: 0.8rem;
      opacity: 0;
      transition: opacity 0.15s ease-in-out;
    }

    .close.active svg,
    .back.active svg {
      opacity: 1;
    }

    .body {
      padding: 0.3rem 1.3rem 1rem;
      min-width: 20rem;
      display: flex;
      flex-direction: column;
      align-items: center;
      max-height: 80vh;
      overflow-y: auto;
    }
  `;
}


================================================
File: packages/connector/src/components/index.ts
================================================
import "./button-pill.js";
import "./button.js";
import "./copy-button.js";
import "./dialog.js";


================================================
File: packages/connector/src/connector/index.ts
================================================
import { ccc } from "@ckb-ccc/ccc";
import { LitElement, PropertyValues, css, html } from "lit";
import { customElement, property, state } from "lit/decorators.js";
import { Ref, createRef, ref } from "lit/directives/ref.js";
import {
  CloseEvent,
  ConnectedEvent,
  SelectClientEvent,
} from "../events/index.js";
import { SignersController } from "../signers/index.js";

@customElement("ccc-connector")
export class WebComponentConnector extends LitElement {
  @property()
  public hideMark: unknown;
  @property()
  public name?: string;
  @property()
  public icon?: string;
  @property()
  public preferredNetworks?: ccc.NetworkPreference[];
  @property()
  public signersController?: ccc.SignersController;
  @state()
  public clientOptions?: { icon?: string; client: ccc.Client; name: string }[];

  @state()
  public client: ccc.Client = new ccc.ClientPublicTestnet();
  public setClient(client: ccc.Client) {
    this.client = client;
  }

  private signersControllerInner = new SignersController(this);

  @state()
  private walletName?: string;
  @state()
  private signerName?: string;
  @state()
  public wallet?: ccc.Wallet;
  @state()
  public signer?: ccc.SignerInfo;
  @state()
  private unregisterSignerReplacer?: () => void;

  public disconnect() {
    this.onClose(() => {
      this.walletName = undefined;
      this.signerName = undefined;
      this.saveConnection();
      void this.signer?.signer.disconnect();
    });
  }

  private loadConnection() {
    const { signerName, walletName } = JSON.parse(
      window.localStorage.getItem("ccc-connection-info") ?? "{}",
    ) as { signerName?: string; walletName?: string };

    this.signerName = signerName;
    this.walletName = walletName;
  }

  private saveConnection() {
    window.localStorage.setItem(
      "ccc-connection-info",
      JSON.stringify({
        signerName: this.signerName,
        walletName: this.walletName,
      }),
    );
  }

  connectedCallback(): void {
    super.connectedCallback();
    this.loadConnection();
  }

  willUpdate(changedProperties: PropertyValues): void {
    if (
      changedProperties.has("name") ||
      changedProperties.has("icon") ||
      changedProperties.has("client") ||
      changedProperties.has("signerFilter") ||
      changedProperties.has("preferredNetworks")
    ) {
      void this.signersControllerInner.refresh();
    }
    if (
      changedProperties.has("walletName") ||
      changedProperties.has("signerName")
    ) {
      this.refreshSigner();
    }

    this.dispatchEvent(new Event("willUpdate"));
  }

  refreshSigner() {
    const wallet = this.signersControllerInner.wallets.find(
      ({ name }) => name === this.walletName,
    );
    const signer = wallet?.signers.find(({ name }) => name === this.signerName);
    void this.updateSigner(wallet, signer);
  }

  async updateSigner(
    wallet: ccc.Wallet | undefined,
    signerInfo: ccc.SignerInfo | undefined,
  ) {
    if (signerInfo?.signer === this.signer?.signer) {
      return;
    }

    this.unregisterSignerReplacer?.();
    this.unregisterSignerReplacer = undefined;

    if (signerInfo && (await signerInfo.signer.isConnected())) {
      this.wallet = wallet;
      this.signer = signerInfo;
      (this.unregisterSignerReplacer as unknown as () => void)?.();
      this.unregisterSignerReplacer = signerInfo.signer.onReplaced(() => {
        void this.signersControllerInner.refresh();
      });
    } else {
      this.wallet = undefined;
      this.signer = undefined;
    }
  }

  private readonly mainRef: Ref<HTMLDivElement> = createRef();
  private readonly bodyRef: Ref<HTMLDivElement & { onClose?: () => void }> =
    createRef();

  render() {
    return html`<div
      class="background"
      @click=${(event: Event) => {
        if (event.target === event.currentTarget) {
          this.onClose();
        }
      }}
      @close=${(event: CloseEvent) => {
        event.stopPropagation();
        this.onClose(event.callback);
      }}
      @updated=${() => this.updated()}
    >
      <div class="main" ${ref(this.mainRef)}>
        ${this.wallet && this.signer
          ? html`
              <ccc-connected-scene
                ?hideMark=${this.hideMark}
                .wallet=${this.wallet}
                .signer=${this.signer.signer}
                .clientOptions=${this.clientOptions}
                @disconnect=${() => this.disconnect()}
                @select-client=${(e: SelectClientEvent) =>
                  this.setClient(e.client)}
                ${ref(this.bodyRef)}
              ></ccc-connected-scene>
            `
          : html`
              <ccc-selecting-scene
                .wallets=${this.signersControllerInner.wallets}
                @connected=${({ walletName, signerName }: ConnectedEvent) => {
                  this.walletName = walletName;
                  this.signerName = signerName;
                  this.refreshSigner();
                  this.saveConnection();
                }}
                ${ref(this.bodyRef)}
              ></ccc-selecting-scene>
            `}
      </div>
    </div>`;
  }

  onClose(onClosed?: () => void) {
    if (this.mainRef.value) {
      this.mainRef.value.style.height = "0";
    }

    setTimeout(() => {
      this.dispatchEvent(new CloseEvent());
      this.bodyRef.value?.onClose?.();
      onClosed?.();
    }, 150);
  }

  updated() {
    if (!this.mainRef.value) {
      return;
    }
    this.mainRef.value.style.height = `${
      this.bodyRef.value?.clientHeight ?? 0
    }px`;
  }

  static styles = css`
    :host {
      width: 100vw;
      height: 100vh;
      position: fixed;
      left: 0;
      top: 0;
    }

    .background {
      width: 100%;
      height: 100%;
      background: rgba(18, 19, 24, 0.7);
    }

    .main {
      position: fixed;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
      background: var(--background);
      border-radius: 1.2rem;
      overflow: hidden;
      transition: height 0.15s ease-out;
    }
  `;
}


================================================
File: packages/connector/src/events/index.ts
================================================
import { ccc } from "@ckb-ccc/ccc";

export class SelectClientEvent extends Event {
  constructor(public client: ccc.Client) {
    super("select-client");
  }
}

export class ConnectedEvent extends Event {
  constructor(
    public readonly walletName: string,
    public readonly signerName: string,
  ) {
    super("connected");
  }
}

export class CloseEvent extends Event {
  constructor(public callback?: () => void) {
    super("close", { bubbles: true, composed: true });
  }
}


================================================
File: packages/connector/src/scenes/connected.ts
================================================
import { ccc } from "@ckb-ccc/ccc";
import { css, html, LitElement, PropertyValues } from "lit";
import { customElement, property, state } from "lit/decorators.js";
import { repeat } from "lit/directives/repeat.js";
import { CKB_SVG } from "../assets/chains/index.js";
import { DISCONNECT_SVG } from "../assets/diconnect.svg.js";
import { SWAP_SVG } from "../assets/swap.svg.js";
import { USER_SVG } from "../assets/user.svg.js";
import { SelectClientEvent } from "../events/index.js";
import { signerTypeToIcon } from "./selecting/signers.js";

export function formatString(
  str: string | undefined,
  l = 9,
  r = 6,
): string | undefined {
  if (str && str.length > l + r + 3) {
    return `${str.slice(0, l)}...${str.slice(-r)}`;
  }
  return str;
}

@customElement("ccc-connected-scene")
export class ConnectedScene extends LitElement {
  @property()
  public hideMark: unknown;
  @property()
  public wallet?: ccc.Wallet;
  @property()
  public signer?: ccc.Signer;
  @property()
  public clientOptions?: { icon?: string; client: ccc.Client; name: string }[];

  @state()
  private recommendedAddress?: string;
  @state()
  private internalAddress?: string;
  @state()
  private balance?: ccc.Num;
  @state()
  private selectingClient = false;

  willUpdate(changedProperties: PropertyValues<this>): void {
    if (
      (!this.recommendedAddress ||
        !this.internalAddress ||
        !this.balance ||
        changedProperties.has("signer")) &&
      this.signer
    ) {
      void this.signer
        .getRecommendedAddress()
        .then((v) => (this.recommendedAddress = v));
      void this.signer
        .getInternalAddress()
        .then((v) => (this.internalAddress = v));
      void this.signer.getBalance().then((v) => (this.balance = v));
    }
  }

  render() {
    const { wallet, signer, internalAddress, balance, recommendedAddress } =
      this;
    if (!wallet || !signer) {
      return html`<div></div>`;
    }

    const body = (() => {
      if (!this.selectingClient || !this.clientOptions) {
        return html`
          <div class="position-relative">
            <img
              class="connecting-wallet-icon"
              src=${wallet.icon}
              alt=${wallet.name}
            />
            <img
              class="connected-type-icon"
              src=${signerTypeToIcon(signer.type)}
              alt=${signer.type}
            />
          </div>

          <ccc-copy-button
            value=${recommendedAddress}
            class="text-bold fs-xl mt-2"
          >
            ${formatString(recommendedAddress)}
          </ccc-copy-button>
          <div class="text-bold fs-md">
            ${ccc.fixedPointToString(balance ?? ccc.Zero)} CKB
          </div>
          <ccc-copy-button
            value=${internalAddress}
            class="text-bold text-tip fs-md"
            style="margin-top: 0.5rem"
          >
            ${formatString(internalAddress, 11, 9)}
          </ccc-copy-button>

          <ccc-button
            class="mt-2"
            @click=${() => window.open("https://mobit.app/", "_blank")}
          >
            ${USER_SVG} Manage
          </ccc-button>

          <ccc-button
            class="mt-1"
            @click=${() => this.dispatchEvent(new Event("disconnect"))}
          >
            ${DISCONNECT_SVG} Disconnect
          </ccc-button>

          ${this.hideMark == null
            ? html`<a href="https://github.com/ckb-devrel/ccc" class="mark"
                >Powered by CCC</a
              >`
            : ""}

          <div
            class="switch-btn-container ${this.clientOptions
              ? "cursor-pointer"
              : ""}"
            @click=${() => (this.selectingClient = Boolean(this.clientOptions))}
          >
            <div class="switch-line"></div>
            <div class="switch-content ml-2 mr-2 fs-sm">
              <img class="sm-chain-logo" src=${CKB_SVG} alt="Nervos Network" />
              ${signer.client.addressPrefix === "ckb" ? "Mainnet" : "Testnet"}
              ${["ckb", "ckt"].includes(signer.client.addressPrefix)
                ? ""
                : ` ${signer.client.addressPrefix}`}
              ${this.clientOptions ? SWAP_SVG : undefined}
            </div>
            <div class="switch-line"></div>
          </div>
        `;
      }

      return repeat(
        this.clientOptions,
        ({ name }) => name,
        ({ client, name, icon }) => html`
          <ccc-button
            class="mt-1"
            @click=${() => this.dispatchEvent(new SelectClientEvent(client))}
          >
            <img src=${icon ?? CKB_SVG} alt=${name} />
            ${name}
          </ccc-button>
        `,
      );
    })();

    return html`
      <ccc-dialog
        header=${this.selectingClient ? "Select Network" : undefined}
        ?canBack=${this.selectingClient}
        @back=${() => (this.selectingClient = false)}
      >
        ${body}
      </ccc-dialog>
    `;
  }

  static styles = css`
    :host {
      width: 100%;
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    .primary-icon {
      color: var(--icon-primary);
    }
    .secondary-icon {
      color: var(--icon-secondary);
    }

    .text-bold {
      font-weight: bold;
    }

    .text-tip {
      color: var(--tip-color);
    }

    .fs-sm {
      font-size: 0.8rem;
    }
    .fs-md {
      font-size: 1rem;
    }
    .fs-xl {
      font-size: 1.5rem;
    }

    .mt-1 {
      margin-top: 0.7rem;
    }
    .mt-2 {
      margin-top: 1rem;
    }
    .ml-1 {
      margin-left: 0.7em;
    }
    .ml-2 {
      margin-left: 1em;
    }
    .mr-1 {
      margin-right: 0.7rem;
    }
    .mr-2 {
      margin-right: 1rem;
    }

    .connecting-wallet-icon {
      width: 5rem;
      height: 5rem;
      border-radius: 1rem;
    }

    .position-relative {
      position: relative;
    }

    .connected-type-icon {
      position: absolute;
      width: 1.5rem;
      height: 1.5rem;
      right: -0.5rem;
      bottom: -0.5rem;
    }

    .switch-btn-container {
      width: 100%;
      margin-top: 1.2rem;
      display: flex;
      justify-content: center;
      align-items: center;
    }

    .cursor-pointer {
      cursor: pointer;
    }

    .switch-content {
      display: flex;
      align-items: center;
      gap: 0.7rem;
    }

    .switch-line {
      flex: 1;
      height: 1px;
      background-color: var(--divider);
    }

    .switching-status-dot {
      width: 0.5rem;
      height: 0.5rem;
      background: #0f0;
      border-radius: 50%;
    }

    .copy-btn {
      width: 1.5rem;
      height: 1.5rem;
    }

    .copy-btn-sm {
      width: 1rem;
      height: 1rem;
    }

    .sm-chain-logo {
      width: 1.125rem;
    }

    .mark {
      text-decoration: none;
      cursor: pointer;
      opacity: 0.2;
      margin: 0;
      margin-top: 0.25rem;
      margin-bottom: -1.05rem;
      color: var(--tip-color);
      font-size: 0.6rem;
    }

    .mark:hover {
      opacity: 0.5;
    }
  `;

  updated() {
    this.dispatchEvent(new Event("updated", { bubbles: true, composed: true }));
  }
}


================================================
File: packages/connector/src/scenes/index.ts
================================================
import "./connected.js";
import "./selecting/index.js";


================================================
File: packages/connector/src/scenes/selecting/connecting.ts
================================================
import { ccc } from "@ckb-ccc/ccc";
import { html } from "lit";
import { RETRY_SVG } from "../../assets/retry.svg.js";

export function generateConnectingScene(
  wallet: ccc.WalletWithSigners,
  signer: ccc.SignerInfo,
  error: string | undefined,
  onSignerSelected: (
    wallet: ccc.WalletWithSigners,
    signer: ccc.SignerInfo,
  ) => unknown,
) {
  return [
    wallet.name,
    html`
      <img
        class="connecting-wallet-icon mb-1 mt-1"
        src=${wallet.icon}
        alt=${wallet.name}
      />
      <span class="text-bold"
        >${error
          ? `Failed to open ${wallet.name}`
          : `Opening ${wallet.name}...`}</span
      >
      <span class="text-tip text-center"
        >${error ?? "Confirm connection in the wallet"}</span
      >
      <ccc-button-pill
        class="mt-2"
        @click=${() => onSignerSelected(wallet, signer)}
      >
        ${RETRY_SVG} Try again
      </ccc-button-pill>
    `,
  ];
}


================================================
File: packages/connector/src/scenes/selecting/index.ts
================================================
import { ccc } from "@ckb-ccc/ccc";
import { css, html, LitElement } from "lit";
import { customElement, property, state } from "lit/decorators.js";
import { CloseEvent, ConnectedEvent } from "../../events/index.js";
import { generateConnectingScene } from "./connecting.js";
import { generateSignersScene } from "./signers.js";
import { generateWalletsScene } from "./wallets.js";

@customElement("ccc-selecting-scene")
export class SelectingScene extends LitElement {
  @property()
  public wallets?: ccc.WalletWithSigners[];

  @state()
  private selectedWallet?: ccc.WalletWithSigners;
  @state()
  private selectedSigner?: ccc.SignerInfo;
  @state()
  private connectingError?: string;

  render() {
    const [title, body] = (() => {
      if (!this.selectedWallet) {
        return generateWalletsScene(
          this.wallets ?? [],
          (wallet) => {
            this.selectedWallet = wallet;
          },
          this.signerSelectedHandler,
        );
      }
      if (!this.selectedSigner) {
        return generateSignersScene(
          this.selectedWallet,
          this.signerSelectedHandler,
        );
      }

      return generateConnectingScene(
        this.selectedWallet,
        this.selectedSigner,
        this.connectingError,
        this.signerSelectedHandler,
      );
    })();

    return html`<ccc-dialog
      header=${title}
      ?canBack=${this.selectedSigner || this.selectedWallet}
      @back=${() => {
        if (
          !this.selectedSigner ||
          (this.selectedWallet && this.selectedWallet.signers.length <= 1)
        ) {
          this.selectedWallet = undefined;
        }
        this.selectedSigner = undefined;
        this.connectingError = undefined;
      }}
    >
      ${body}
    </ccc-dialog>`;
  }

  public onClose() {
    this.selectedWallet = undefined;
    this.selectedSigner = undefined;
    this.connectingError = undefined;
  }

  private signerSelectedHandler = (
    wallet: ccc.WalletWithSigners,
    signerInfo: ccc.SignerInfo,
  ) => {
    this.connectingError = undefined;
    this.selectedWallet = wallet;
    this.selectedSigner = signerInfo;
    void (async () => {
      const { signer } = signerInfo;
      try {
        await signer.connect();

        if (!(await signer.isConnected())) {
          this.connectingError = "Unknown connection status";
          return;
        }
      } catch (error) {
        if (typeof error !== "object" || error === null) {
          this.connectingError = JSON.stringify(error);
          return;
        }

        if (!("message" in error)) {
          this.connectingError = "Unknown error";
          return;
        }

        const message = error.message;
        if (typeof message === "string") {
          this.connectingError = message;
          return;
        }

        this.connectingError = JSON.stringify(message);
        return;
      }

      this.dispatchEvent(
        new CloseEvent(() => {
          this.dispatchEvent(new ConnectedEvent(wallet.name, signerInfo.name));
        }),
      );
    })();
  };

  static styles = css`
    .primary-icon {
      color: var(--icon-primary);
    }

    :host {
      display: block;
    }

    .text-bold {
      font-weight: bold;
    }

    .text-tip {
      color: var(--tip-color);
    }

    .mb-1 {
      margin-bottom: 0.7rem;
    }
    .mb-2 {
      margin-bottom: 1rem;
    }
    .mt-1 {
      margin-top: 0.7rem;
    }
    .mt-2 {
      margin-top: 1rem;
    }
    .ml-1 {
      margin-left: 0.7rem;
    }
    .ml-2 {
      margin-left: 1em;
    }
    .mr-1 {
      margin-right: 0.7rem;
    }
    .mr-2 {
      margin-right: 1rem;
    }

    .wallet-icon {
      width: 4rem;
      height: 4rem;
      margin-bottom: 0.5rem;
      border-radius: 0.8rem;
    }

    .connecting-wallet-icon {
      width: 5rem;
      height: 5rem;
      border-radius: 1rem;
    }

    .text-center {
      text-align: center;
    }
  `;

  updated() {
    this.dispatchEvent(new Event("updated", { bubbles: true, composed: true }));
  }
}


================================================
File: packages/connector/src/scenes/selecting/signers.ts
================================================
import { ccc } from "@ckb-ccc/ccc";
import { html } from "lit";
import { repeat } from "lit/directives/repeat.js";
import {
  BTC_SVG,
  CKB_SVG,
  DOGE_SVG,
  ETH_SVG,
  NOSTR_SVG,
} from "../../assets/chains/index.js";

export function signerTypeToIcon(type: ccc.SignerType): string {
  return {
    [ccc.SignerType.BTC]: BTC_SVG,
    [ccc.SignerType.EVM]: ETH_SVG,
    [ccc.SignerType.CKB]: CKB_SVG,
    [ccc.SignerType.Nostr]: NOSTR_SVG,
    [ccc.SignerType.Doge]: DOGE_SVG,
  }[type];
}

export function generateSignersScene(
  wallet: ccc.WalletWithSigners,
  onSignerSelected: (
    wallet: ccc.WalletWithSigners,
    signer: ccc.SignerInfo,
  ) => unknown,
) {
  return [
    "Select a Chain",

    html`
      <img class="wallet-icon mt-1" src=${wallet.icon} alt=${wallet.name} />
      <span class="mb-1">${wallet.name}</span>
      ${repeat(
        wallet.signers,
        (signer) => signer.name,
        (signer) => html`
          <ccc-button
            class="mt-1"
            @click=${async () => {
              onSignerSelected(wallet, signer);
            }}
          >
            <img
              src=${signerTypeToIcon(signer.signer.type)}
              alt=${signer.signer.type}
            />
            ${signer.name}
          </ccc-button>
        `,
      )}
    `,
  ];
}


================================================
File: packages/connector/src/scenes/selecting/wallets.ts
================================================
import { ccc } from "@ckb-ccc/ccc";
import { html } from "lit";
import { repeat } from "lit/directives/repeat.js";

export function generateWalletsScene(
  wallets: ccc.WalletWithSigners[],
  onWalletSelected: (wallet: ccc.WalletWithSigners) => unknown,
  onSignerSelected: (
    wallet: ccc.WalletWithSigners,
    signer: ccc.SignerInfo,
  ) => unknown,
) {
  return [
    "Connect Wallet",
    repeat(
      wallets,
      (wallet) => wallet.name,
      (wallet) => html`
        <ccc-button
          class="mt-1"
          @click=${async () => {
            if (wallet.signers.length === 1) {
              onSignerSelected(wallet, wallet.signers[0]);
            } else {
              onWalletSelected(wallet);
            }
          }}
        >
          <img src=${wallet.icon} alt=${wallet.name} />
          ${wallet.name}
        </ccc-button>
      `,
    ),
  ];
}


================================================
File: packages/connector/src/signers/index.ts
================================================
import { ccc } from "@ckb-ccc/ccc";
import { ReactiveControllerHost } from "lit";

export class SignersController {
  public wallets: ccc.WalletWithSigners[] = [];
  private readonly defaultController = new ccc.SignersController();

  get controller() {
    return this.host.signersController ?? this.defaultController;
  }

  constructor(
    private readonly host: ReactiveControllerHost & {
      client: ccc.Client;
      signerFilter?: (
        signerInfo: ccc.SignerInfo,
        wallet: ccc.Wallet,
      ) => Promise<boolean>;
      preferredNetworks?: ccc.NetworkPreference[];
      name?: string;
      icon?: string;
      refreshSigner: () => void;
      signersController?: ccc.SignersController;
    },
  ) {
    host.addController(this);
  }

  refresh() {
    return this.controller.refresh(
      this.host.client,
      (wallets) => {
        this.wallets = [...wallets];
        this.update();
      },
      this.host,
    );
  }

  update() {
    this.host.refreshSigner();
    this.host.requestUpdate();
  }

  hostConnected(): void {
    void this.refresh();
    // Wait for plugins to be loaded
    setTimeout(() => this.refresh(), 500);
  }

  hostDisconnected(): void {
    this.controller.disconnect();
  }
}


================================================
File: packages/connector-react/README.md
================================================
<p align="center">
  <a href="https://app.ckbccc.com/">
    <img alt="Logo" src="https://raw.githubusercontent.com/ckb-devrel/ccc/master/assets/logoAndText.svg" style="height: 8rem; max-width: 90%; padding: 0.5rem 0;" />
  </a>
</p>

<h1 align="center" style="font-size: 48px;">
  CCC Connector for React
</h1>

<p align="center">
  <a href="https://www.npmjs.com/package/@ckb-ccc/connector-react"><img
    alt="NPM Version" src="https://img.shields.io/npm/v/%40ckb-ccc%2Fconnector-react"
  /></a>
  <img alt="GitHub commit activity" src="https://img.shields.io/github/commit-activity/m/ckb-devrel/ccc" />
  <img alt="GitHub last commit" src="https://img.shields.io/github/last-commit/ckb-devrel/ccc/master" />
  <img alt="GitHub branch check runs" src="https://img.shields.io/github/check-runs/ckb-devrel/ccc/master" />
  <a href="https://live.ckbccc.com/"><img
    alt="Playground" src="https://img.shields.io/website?url=https%3A%2F%2Flive.ckbccc.com%2F&label=Playground"
  /></a>
  <a href="https://app.ckbccc.com/"><img
    alt="App" src="https://img.shields.io/website?url=https%3A%2F%2Fapp.ckbccc.com%2F&label=App"
  /></a>
  <a href="https://docs.ckbccc.com/"><img
    alt="Docs" src="https://img.shields.io/website?url=https%3A%2F%2Fdocs.ckbccc.com%2F&label=Docs"
  /></a>
</p>

<p align="center">
  CCC - CKBers' Codebase is a one-stop solution for your CKB JS/TS ecosystem development.
  <br />
  Empower yourself with CCC to discover the unlimited potential of CKB.
  <br />
  Interoperate with wallets from different chain ecosystems.
  <br />
  Fully enabling CKB's Turing completeness and cryptographic freedom power.
</p>

## Use the Connector UI

Before using the Connector, wrap your UI with the CCC Provider:

```tsx
<ccc.Provider>{/* Your application */}</ccc.Provider>
```

Check [the document for @ckb-ccc/connector-react](https://docs.ckbccc.com/modules/_ckb_ccc_connector_react.index.ccc.html) for more information.

<h3 align="center">
  Read more about CCC on <a href="https://docs.ckbccc.com">our website</a> or <a href="https://github.com/ckb-devrel/ccc">GitHub Repo</a>.
</h3>


================================================
File: packages/connector-react/CHANGELOG.md
================================================
# @ckb-ccc/connector-react

## 1.0.11

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/connector@1.0.11

## 1.0.10

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/connector@1.0.10

## 1.0.9

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/connector@1.0.9

## 1.0.8

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/connector@1.0.8

## 1.0.7

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/connector@1.0.7

## 1.0.6

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/connector@1.0.6

## 1.0.5

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/connector@1.0.5

## 1.0.4

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/connector@1.0.4

## 1.0.3

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/connector@1.0.3

## 1.0.2

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/connector@1.0.2

## 1.0.1

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/connector@1.0.1

## 1.0.0

### Major Changes

- [#107](https://github.com/ckb-devrel/ccc/pull/107) [`b99f55f`](https://github.com/ckb-devrel/ccc/commit/b99f55f74e64106391ce53f7d0bd0fa7522023cc) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: molecule

### Patch Changes

- Updated dependencies [[`b99f55f`](https://github.com/ckb-devrel/ccc/commit/b99f55f74e64106391ce53f7d0bd0fa7522023cc)]:
  - @ckb-ccc/connector@1.0.0

## 0.0.19

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/connector@0.0.19

## 0.0.18

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/connector@0.0.18

## 0.0.17

### Patch Changes

- [#62](https://github.com/ckb-devrel/ccc/pull/62) [`543c765`](https://github.com/ckb-devrel/ccc/commit/543c76523b3864f2203631762c27b8fc4c942cd7) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(connector): Powered by CCC

- [#69](https://github.com/ckb-devrel/ccc/pull/69) [`8824ff2`](https://github.com/ckb-devrel/ccc/commit/8824ff27af3b76186f1a7d6db8c907cd66f09d6a) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Client.waitTransaction

- [#70](https://github.com/ckb-devrel/ccc/pull/70) [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): websocket transport

- [#78](https://github.com/ckb-devrel/ccc/pull/78) [`517dd3a`](https://github.com/ckb-devrel/ccc/commit/517dd3a28a0d6bf14df68450101f82e94a230801) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(connector-react): useCcc().isOpen

- [#67](https://github.com/ckb-devrel/ccc/pull/67) [`c092988`](https://github.com/ckb-devrel/ccc/commit/c092988e7765b9ac79498d6bd72a6a2f62859b6f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): auto fee rate

- [#60](https://github.com/ckb-devrel/ccc/pull/60) [`e904963`](https://github.com/ckb-devrel/ccc/commit/e904963a16f12c410d861eb3ae01b87d68cb3e34) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: support Xverse

- Updated dependencies [[`543c765`](https://github.com/ckb-devrel/ccc/commit/543c76523b3864f2203631762c27b8fc4c942cd7), [`8824ff2`](https://github.com/ckb-devrel/ccc/commit/8824ff27af3b76186f1a7d6db8c907cd66f09d6a), [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366), [`e63a06e`](https://github.com/ckb-devrel/ccc/commit/e63a06ee75ac8595208d216dec88a4228c465e23), [`c092988`](https://github.com/ckb-devrel/ccc/commit/c092988e7765b9ac79498d6bd72a6a2f62859b6f), [`e904963`](https://github.com/ckb-devrel/ccc/commit/e904963a16f12c410d861eb3ae01b87d68cb3e34)]:
  - @ckb-ccc/connector@0.0.17

## 0.0.17-alpha.11

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/connector@0.0.17-alpha.10

## 0.0.17-alpha.10

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/connector@0.0.17-alpha.9

## 0.0.17-alpha.9

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/connector@0.0.17-alpha.8

## 0.0.17-alpha.8

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/connector@0.0.17-alpha.7

## 0.0.17-alpha.7

### Patch Changes

- [#78](https://github.com/ckb-devrel/ccc/pull/78) [`517dd3a`](https://github.com/ckb-devrel/ccc/commit/517dd3a28a0d6bf14df68450101f82e94a230801) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(connector-react): useCcc().isOpen

## 0.0.17-alpha.6

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/connector@0.0.17-alpha.6

## 0.0.17-alpha.5

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/connector@0.0.17-alpha.5

## 0.0.17-alpha.4

### Patch Changes

- [#70](https://github.com/ckb-devrel/ccc/pull/70) [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): websocket transport

- Updated dependencies [[`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366)]:
  - @ckb-ccc/connector@0.0.17-alpha.4

## 0.0.17-alpha.3

### Patch Changes

- [#69](https://github.com/ckb-devrel/ccc/pull/69) [`8824ff2`](https://github.com/ckb-devrel/ccc/commit/8824ff27af3b76186f1a7d6db8c907cd66f09d6a) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Client.waitTransaction

- [#67](https://github.com/ckb-devrel/ccc/pull/67) [`c092988`](https://github.com/ckb-devrel/ccc/commit/c092988e7765b9ac79498d6bd72a6a2f62859b6f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): auto fee rate

- Updated dependencies [[`8824ff2`](https://github.com/ckb-devrel/ccc/commit/8824ff27af3b76186f1a7d6db8c907cd66f09d6a), [`c092988`](https://github.com/ckb-devrel/ccc/commit/c092988e7765b9ac79498d6bd72a6a2f62859b6f)]:
  - @ckb-ccc/connector@0.0.17-alpha.3

## 0.0.17-alpha.2

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/connector@0.0.17-alpha.2

## 0.0.17-alpha.1

### Patch Changes

- [#62](https://github.com/ckb-devrel/ccc/pull/62) [`543c765`](https://github.com/ckb-devrel/ccc/commit/543c76523b3864f2203631762c27b8fc4c942cd7) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(connector): Powered by CCC

- Updated dependencies [[`543c765`](https://github.com/ckb-devrel/ccc/commit/543c76523b3864f2203631762c27b8fc4c942cd7)]:
  - @ckb-ccc/connector@0.0.17-alpha.1

## 0.0.17-alpha.0

### Patch Changes

- [#60](https://github.com/ckb-devrel/ccc/pull/60) [`e904963`](https://github.com/ckb-devrel/ccc/commit/e904963a16f12c410d861eb3ae01b87d68cb3e34) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: support Xverse

- Updated dependencies [[`e904963`](https://github.com/ckb-devrel/ccc/commit/e904963a16f12c410d861eb3ae01b87d68cb3e34)]:
  - @ckb-ccc/connector@0.0.17-alpha.0

## 0.0.16

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/connector@0.0.16

## 0.0.15

### Patch Changes

- [`2483637`](https://github.com/ckb-devrel/ccc/commit/2483637c89a2e012ed6408d8cabc123b8a45faa9) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(connector): animation

- Updated dependencies [[`2483637`](https://github.com/ckb-devrel/ccc/commit/2483637c89a2e012ed6408d8cabc123b8a45faa9)]:
  - @ckb-ccc/connector@0.0.15

## 0.0.14

### Patch Changes

- [#56](https://github.com/ckb-devrel/ccc/pull/56) [`b4aa690`](https://github.com/ckb-devrel/ccc/commit/b4aa69085d69fc0953629fd907212922d7d106dd) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(connector): manage button

- [#56](https://github.com/ckb-devrel/ccc/pull/56) [`f13f4d3`](https://github.com/ckb-devrel/ccc/commit/f13f4d319ca66b571029a65e945e3a038bfeea25) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Signer.findTransactions

- [#48](https://github.com/ckb-devrel/ccc/pull/48) [`4fb114b`](https://github.com/ckb-devrel/ccc/commit/4fb114bc421c7250eed7388c16f1c026875153e6) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(okx): make okx wallet happy

- [#54](https://github.com/ckb-devrel/ccc/pull/54) [`3f49876`](https://github.com/ckb-devrel/ccc/commit/3f49876826f5a9eeff8d14c7d8d7b9cf2cea0f32) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(connector): useless back button

- [#53](https://github.com/ckb-devrel/ccc/pull/53) [`32bffff`](https://github.com/ckb-devrel/ccc/commit/32bffff407934ec5d16bf7c5701b128d8b29c452) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(connector): select client

- Updated dependencies [[`b4aa690`](https://github.com/ckb-devrel/ccc/commit/b4aa69085d69fc0953629fd907212922d7d106dd), [`f13f4d3`](https://github.com/ckb-devrel/ccc/commit/f13f4d319ca66b571029a65e945e3a038bfeea25), [`4fb114b`](https://github.com/ckb-devrel/ccc/commit/4fb114bc421c7250eed7388c16f1c026875153e6), [`3f49876`](https://github.com/ckb-devrel/ccc/commit/3f49876826f5a9eeff8d14c7d8d7b9cf2cea0f32), [`32bffff`](https://github.com/ckb-devrel/ccc/commit/32bffff407934ec5d16bf7c5701b128d8b29c452)]:
  - @ckb-ccc/connector@0.0.14

## 0.0.14-alpha.3

### Patch Changes

- [#54](https://github.com/ckb-devrel/ccc/pull/54) [`3f49876`](https://github.com/ckb-devrel/ccc/commit/3f49876826f5a9eeff8d14c7d8d7b9cf2cea0f32) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(connector): useless back button

- Updated dependencies [[`3f49876`](https://github.com/ckb-devrel/ccc/commit/3f49876826f5a9eeff8d14c7d8d7b9cf2cea0f32)]:
  - @ckb-ccc/connector@0.0.14-alpha.3

## 0.0.14-alpha.2

### Patch Changes

- [#53](https://github.com/ckb-devrel/ccc/pull/53) [`32bffff`](https://github.com/ckb-devrel/ccc/commit/32bffff407934ec5d16bf7c5701b128d8b29c452) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(connector): select client

- Updated dependencies [[`32bffff`](https://github.com/ckb-devrel/ccc/commit/32bffff407934ec5d16bf7c5701b128d8b29c452)]:
  - @ckb-ccc/connector@0.0.14-alpha.2

## 0.0.14-alpha.1

### Patch Changes

- [#48](https://github.com/ckb-devrel/ccc/pull/48) [`4fb114b`](https://github.com/ckb-devrel/ccc/commit/4fb114bc421c7250eed7388c16f1c026875153e6) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(okx): make okx wallet happy

- Updated dependencies [[`4fb114b`](https://github.com/ckb-devrel/ccc/commit/4fb114bc421c7250eed7388c16f1c026875153e6)]:
  - @ckb-ccc/connector@0.0.14-alpha.1

## 0.0.14-alpha.0

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/connector@0.0.14-alpha.0

## 0.0.13

### Patch Changes

- [`9e6b9fd`](https://github.com/ckb-devrel/ccc/commit/9e6b9fd40274015a0964dec8e0ee58dcbc06c786) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(connector-react): if the filter is undefined, accept all

- [`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): recordCells should not add usableCells

- [`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): node.js websocket

- [#25](https://github.com/ckb-devrel/ccc/pull/25) [`69c10fd`](https://github.com/ckb-devrel/ccc/commit/69c10fdfcd507433c13b15d17015dca4687afb97) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(utxo-global): switchNetwork

- [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): completeInputs

- [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): more APIs. Since parsing.

- [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Signer.findCells

- Updated dependencies [[`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97), [`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f), [`69c10fd`](https://github.com/ckb-devrel/ccc/commit/69c10fdfcd507433c13b15d17015dca4687afb97), [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b), [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11), [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895)]:
  - @ckb-ccc/connector@0.0.13

## 0.0.13-alpha.8

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/connector@0.0.13-alpha.8

## 0.0.13-alpha.7

### Patch Changes

- [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): more APIs. Since parsing.

- [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Signer.findCells

- Updated dependencies [[`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11), [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895)]:
  - @ckb-ccc/connector@0.0.13-alpha.7

## 0.0.13-alpha.6

### Patch Changes

- [#25](https://github.com/ckb-devrel/ccc/pull/25) [`69c10fd`](https://github.com/ckb-devrel/ccc/commit/69c10fdfcd507433c13b15d17015dca4687afb97) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(utxo-global): switchNetwork

- [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): completeInputs

- Updated dependencies [[`69c10fd`](https://github.com/ckb-devrel/ccc/commit/69c10fdfcd507433c13b15d17015dca4687afb97), [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b)]:
  - @ckb-ccc/connector@0.0.13-alpha.6

## 0.0.13-alpha.5

### Patch Changes

- [`9e6b9fd`](https://github.com/ckb-devrel/ccc/commit/9e6b9fd40274015a0964dec8e0ee58dcbc06c786) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(connector-react): if the filter is undefined, accept all

- [`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): recordCells should not add usableCells

- Updated dependencies [[`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97)]:
  - @ckb-ccc/connector@0.0.13-alpha.5

## 0.0.13-alpha.4

### Patch Changes

- [`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): node.js websocket

- Updated dependencies [[`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f)]:
  - @ckb-ccc/connector@0.0.13-alpha.4

## 0.0.13-alpha.3

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/connector@0.0.13-alpha.3

## 0.0.13-alpha.2

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/connector@0.0.13-alpha.2

## 0.0.13-alpha.1

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/connector@0.0.13-alpha.1

## 0.0.13-alpha.0

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/connector@0.0.13-alpha.0

## 0.0.12

### Patch Changes

- [`591e779`](https://github.com/ckb-devrel/ccc/commit/591e7794ce3d07ceaad55b7a80d2277fe0aa9fe7) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: custom SignersController

- Updated dependencies [[`6bee006`](https://github.com/ckb-devrel/ccc/commit/6bee006fbcb96986c65ca4d2d896fca21db2503b), [`591e779`](https://github.com/ckb-devrel/ccc/commit/591e7794ce3d07ceaad55b7a80d2277fe0aa9fe7)]:
  - @ckb-ccc/connector@0.0.12

## 0.0.12-alpha.7

### Patch Changes

- Updated dependencies
  - @ckb-ccc/connector@0.0.12-alpha.7


================================================
File: packages/connector-react/eslint.config.mjs
================================================
// @ts-check

import eslint from "@eslint/js";
import eslintPluginPrettierRecommended from "eslint-plugin-prettier/recommended";
import tseslint from "typescript-eslint";

import { dirname } from "path";
import { fileURLToPath } from "url";

export default [
  ...tseslint.config({
    files: ["**/*.ts"],
    extends: [
      eslint.configs.recommended,
      ...tseslint.configs.recommendedTypeChecked,
    ],
    rules: {
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          args: "all",
          argsIgnorePattern: "^_",
          caughtErrors: "all",
          caughtErrorsIgnorePattern: "^_",
          destructuredArrayIgnorePattern: "^_",
          varsIgnorePattern: "^_",
          ignoreRestSiblings: true,
        },
      ],
      "@typescript-eslint/unbound-method": ["error", { ignoreStatic: true }],
      "@typescript-eslint/no-unsafe-member-access": "off",
      "@typescript-eslint/require-await": "off",
      "no-empty": "off",
      "prefer-const": [
        "error",
        { ignoreReadBeforeAssign: true, destructuring: "all" },
      ],
    },
    languageOptions: {
      parserOptions: {
        project: true,
        tsconfigRootDir: dirname(fileURLToPath(import.meta.url)),
      },
    },
  }),
  eslintPluginPrettierRecommended,
];


================================================
File: packages/connector-react/package.json
================================================
{
  "name": "@ckb-ccc/connector-react",
  "version": "1.0.11",
  "description": "CCC - CKBer's Codebase. Common Chains Connector UI Component for React",
  "author": "Hanssen0 <hanssen0@hanssen0.com>",
  "license": "MIT",
  "private": false,
  "homepage": "https://github.com/ckb-devrel/ccc",
  "repository": {
    "type": "git",
    "url": "git://github.com/ckb-devrel/ccc.git"
  },
  "type": "module",
  "main": "dist/index.js",
  "exports": {
    ".": "./dist/index.js",
    "./barrel": "./dist/barrel.js",
    "./advancedBarrel": "./dist/advancedBarrel.js",
    "./advanced": "./dist/advanced.js"
  },
  "scripts": {
    "build": "rimraf ./dist && tsc",
    "lint": "eslint ./src",
    "format": "prettier --write . && eslint --fix ./src"
  },
  "devDependencies": {
    "@eslint/js": "^9.1.1",
    "@types/react": "^18",
    "eslint": "^9.1.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.1.3",
    "prettier": "^3.2.5",
    "prettier-plugin-organize-imports": "^3.2.4",
    "rimraf": "^5.0.5",
    "typescript": "^5.4.5",
    "typescript-eslint": "^7.7.0"
  },
  "publishConfig": {
    "access": "public"
  },
  "dependencies": {
    "@ckb-ccc/connector": "workspace:*",
    "@lit/react": "^1.0.5"
  },
  "peerDependencies": {
    "react": ">=16"
  }
}


================================================
File: packages/connector-react/tsconfig.base.json
================================================
{
  "compilerOptions": {
    "target": "es2020",
    "jsx": "react",
    "incremental": true,
    "allowJs": true,
    "importHelpers": false,
    "declaration": true,
    "declarationMap": true,
    "experimentalDecorators": true,
    "useDefineForClassFields": false,
    "esModuleInterop": true,
    "strict": true,
    "noImplicitAny": true,
    "strictBindCallApply": true,
    "strictNullChecks": true,
    "alwaysStrict": true,
    "noFallthroughCasesInSwitch": true,
    "forceConsistentCasingInFileNames": true,
    "skipLibCheck": true
  },
  "include": ["src/**/*"]
}


================================================
File: packages/connector-react/tsconfig.commonjs.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "NodeNext",
    "moduleResolution": "NodeNext",
    "outDir": "./dist.commonjs"
  }
}


================================================
File: packages/connector-react/tsconfig.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "ESNext",
    "moduleResolution": "Bundler",
    "outDir": "./dist",
  }
}


================================================
File: packages/connector-react/typedoc.json
================================================
{
  "$schema": "https://typedoc.org/schema.json",
  "entryPoints": ["./src/index.ts", "./src/advanced.ts"],
  "extends": ["../../typedoc.base.json"],
  "name": "@ckb-ccc connector-react"
}


================================================
File: packages/connector-react/.npmignore
================================================
node_modules/
misc/

*test.js
*test.ts
*test.d.ts
*test.d.ts.map
*spec.js
*spec.ts
*spec.d.ts
*spec.d.ts.map

tsconfig.json
tsconfig.*.json
eslint.config.mjs
.prettierrc
.prettierignore

tsconfig.tsbuildinfo
tsconfig.*.tsbuildinfo
.github/


================================================
File: packages/connector-react/.prettierignore
================================================
node_modules/

dist/
dist.commonjs/

.npmignore
.prettierrc
tsconfig.json
eslint.config.mjs
.prettierrc

tsconfig.tsbuildinfo
.github/


================================================
File: packages/connector-react/.prettierrc
================================================
{
  "singleQuote": false,
  "trailingComma": "all",
  "plugins": ["prettier-plugin-organize-imports"]
}


================================================
File: packages/connector-react/src/advanced.ts
================================================
export * from "./advancedBarrel.js";
export * as cccA from "./advancedBarrel.js";


================================================
File: packages/connector-react/src/advancedBarrel.ts
================================================
export * from "@ckb-ccc/connector/advancedBarrel";


================================================
File: packages/connector-react/src/barrel.ts
================================================
export * from "@ckb-ccc/connector/barrel";
export * from "./components/index.js";
export * from "./hooks/index.js";


================================================
File: packages/connector-react/src/index.ts
================================================
export * from "./barrel.js";
export * as ccc from "./barrel.js";


================================================
File: packages/connector-react/src/components/index.ts
================================================
"use client";

import { ccc } from "@ckb-ccc/connector";
import { createComponent } from "@lit/react";
import * as React from "react";

export const Connector = createComponent({
  tagName: "ccc-connector",
  elementClass: ccc.WebComponentConnector,
  react: React,
  events: {
    onWillUpdate: "willUpdate",
    onClose: "close",
  },
});


================================================
File: packages/connector-react/src/hooks/index.ts
================================================
export * from "./useCcc.js";
export * from "./useSigner.js";


================================================
File: packages/connector-react/src/hooks/useCcc.tsx
================================================
import { ccc } from "@ckb-ccc/connector";
import React, {
  CSSProperties,
  HTMLAttributes,
  ReactNode,
  createContext,
  useCallback,
  useContext,
  useEffect,
  useMemo,
  useRef,
  useState,
} from "react";
import { Connector } from "../components/index.js";

const CCC_CONTEXT = createContext<
  | {
      isOpen: boolean;
      open: () => unknown;
      close: () => unknown;
      disconnect: () => unknown;
      setClient: (client: ccc.Client) => unknown;
      client: ccc.Client;
      wallet?: ccc.Wallet;
      signerInfo?: ccc.SignerInfo;
    }
  | undefined
>(undefined);

class SignersControllerWithFilter extends ccc.SignersController {
  constructor(
    public filter?: (
      signerInfo: ccc.SignerInfo,
      wallet: ccc.Wallet,
    ) => Promise<boolean>,
  ) {
    super();
  }

  async addSigner(
    walletName: string,
    icon: string,
    signerInfo: ccc.SignerInfo,
    context: ccc.SignersControllerRefreshContext,
  ) {
    if (
      this.filter &&
      !(await this.filter(signerInfo, { name: walletName, icon }))
    ) {
      return;
    }

    return super.addSigner(walletName, icon, signerInfo, context);
  }
}

export function Provider({
  children,
  connectorProps,
  hideMark,
  name,
  icon,
  signerFilter,
  signersController,
  defaultClient,
  clientOptions,
  preferredNetworks,
}: {
  children: ReactNode;
  connectorProps?: HTMLAttributes<{}>;
  hideMark?: boolean;
  name?: string;
  icon?: string;
  signerFilter?: (
    signerInfo: ccc.SignerInfo,
    wallet: ccc.Wallet,
  ) => Promise<boolean>;
  signersController?: ccc.SignersController;
  defaultClient?: ccc.Client;
  clientOptions?: { icon?: string; client: ccc.Client; name: string }[];
  preferredNetworks?: ccc.NetworkPreference[];
}) {
  const [ref, setRef] = useState<ccc.WebComponentConnector | null>(null);
  const [isOpen, setIsOpen] = useState(false);
  const [_, setFlag] = useState(0);
  const defaultSignersController = useRef<
    SignersControllerWithFilter | undefined
  >(undefined);

  const client = useMemo(
    () => ref?.client ?? new ccc.ClientPublicTestnet(),
    [ref?.client],
  );
  const open = useCallback(() => {
    setIsOpen(true);
    ref?.requestUpdate();
  }, [setIsOpen, ref, ref?.requestUpdate]);
  const close = useCallback(() => {
    setIsOpen(false);
    ref?.requestUpdate();
  }, [setIsOpen, ref, ref?.requestUpdate]);
  const disconnect = useMemo(
    () => ref?.disconnect.bind(ref) ?? (() => {}),
    [ref, ref?.disconnect],
  );
  const setClient = useMemo(
    () => ref?.setClient.bind(ref) ?? (() => {}),
    [ref, ref?.setClient],
  );

  useEffect(() => {
    if (defaultClient) {
      setClient(defaultClient);
    }
  }, [setClient]);
  useEffect(() => {
    if (!defaultSignersController.current) {
      defaultSignersController.current = new SignersControllerWithFilter(
        signerFilter,
      );
    } else {
      defaultSignersController.current.filter = signerFilter;
    }
  }, [signerFilter]);

  return (
    <CCC_CONTEXT.Provider
      value={{
        isOpen,
        open,
        close,
        disconnect,
        setClient,

        client,
        wallet: ref?.wallet,
        signerInfo: ref?.signer,
      }}
    >
      <Connector
        hideMark={hideMark}
        name={name}
        icon={icon}
        signersController={
          signersController ?? defaultSignersController.current
        }
        ref={setRef}
        onWillUpdate={() => setFlag((f) => f + 1)}
        onClose={close}
        preferredNetworks={preferredNetworks}
        clientOptions={clientOptions}
        {...{
          ...connectorProps,
          style: {
            zIndex: 999,
            ...(isOpen ? {} : { display: "none" }),
            ...({
              "--background": "#fff",
              "--divider": "#eee",
              "--btn-primary": "#f8f8f8",
              "--btn-primary-hover": "#efeeee",
              "--btn-secondary": "#ddd",
              "--btn-secondary-hover": "#ccc",
              "--icon-primary": "#1E1E1E",
              "--icon-secondary": "#666666",
              color: "#1e1e1e",
              "--tip-color": "#666",
            } as CSSProperties),
            ...connectorProps?.style,
          },
        }}
      />
      {children}
    </CCC_CONTEXT.Provider>
  );
}

export function useCcc() {
  const context = useContext(CCC_CONTEXT);
  if (!context) {
    throw Error(
      "The component which invokes the useCcc hook should be placed in a ccc.Provider.",
    );
  }
  return context;
}


================================================
File: packages/connector-react/src/hooks/useSigner.tsx
================================================
import { ccc } from "@ckb-ccc/connector";
import { useCcc } from "./useCcc.js";

export function useSigner(): ccc.Signer | undefined {
  return useCcc().signerInfo?.signer;
}


================================================
File: packages/core/README.md
================================================
<p align="center">
  <a href="https://app.ckbccc.com/">
    <img alt="Logo" src="https://raw.githubusercontent.com/ckb-devrel/ccc/master/assets/logoAndText.svg" style="height: 8rem; max-width: 90%; padding: 0.5rem 0;" />
  </a>
</p>

<h1 align="center" style="font-size: 48px;">
  CCC Core
</h1>

<p align="center">
  <a href="https://www.npmjs.com/package/@ckb-ccc/core"><img
    alt="NPM Version" src="https://img.shields.io/npm/v/%40ckb-ccc%2Fcore"
  /></a>
  <img alt="GitHub commit activity" src="https://img.shields.io/github/commit-activity/m/ckb-devrel/ccc" />
  <img alt="GitHub last commit" src="https://img.shields.io/github/last-commit/ckb-devrel/ccc/master" />
  <img alt="GitHub branch check runs" src="https://img.shields.io/github/check-runs/ckb-devrel/ccc/master" />
  <a href="https://live.ckbccc.com/"><img
    alt="Playground" src="https://img.shields.io/website?url=https%3A%2F%2Flive.ckbccc.com%2F&label=Playground"
  /></a>
  <a href="https://app.ckbccc.com/"><img
    alt="App" src="https://img.shields.io/website?url=https%3A%2F%2Fapp.ckbccc.com%2F&label=App"
  /></a>
  <a href="https://docs.ckbccc.com/"><img
    alt="Docs" src="https://img.shields.io/website?url=https%3A%2F%2Fdocs.ckbccc.com%2F&label=Docs"
  /></a>
</p>

<p align="center">
  CCC - CKBers' Codebase is a one-stop solution for your CKB JS/TS ecosystem development.
  <br />
  Empower yourself with CCC to discover the unlimited potential of CKB.
  <br />
  Interoperate with wallets from different chain ecosystems.
  <br />
  Fully enabling CKB's Turing completeness and cryptographic freedom power.
</p>

<h3 align="center">
  Read more about CCC on <a href="https://docs.ckbccc.com">our website</a> or <a href="https://github.com/ckb-devrel/ccc">GitHub Repo</a>.
</h3>


================================================
File: packages/core/CHANGELOG.md
================================================
# @ckb-ccc/core

## 1.5.0

### Minor Changes

- [#141](https://github.com/ckb-devrel/ccc/pull/141) [`28c211d`](https://github.com/ckb-devrel/ccc/commit/28c211d839a2d2305eca56e82ba7da144aa3df4a) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): TransportFallback

## 1.4.0

### Minor Changes

- [#140](https://github.com/ckb-devrel/ccc/pull/140) [`f429087`](https://github.com/ckb-devrel/ccc/commit/f4290874dfab3fe58844e5169673c5d47bda64e3) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): SignerNostrPrivateKey

### Patch Changes

- [#138](https://github.com/ckb-devrel/ccc/pull/138) [`3fdb2c4`](https://github.com/ckb-devrel/ccc/commit/3fdb2c477d0b2766b231e436b8f396f047b02634) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): codec should throw if byteLength mismatch

## 1.3.1

### Patch Changes

- [`a48cccf`](https://github.com/ckb-devrel/ccc/commit/a48cccfae3ce6b3456a5eb863f207e7e5a6e568f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): numFrom("0x") should be zero

## 1.3.0

### Minor Changes

- [#131](https://github.com/ckb-devrel/ccc/pull/131) [`4c76f9e`](https://github.com/ckb-devrel/ccc/commit/4c76f9e2a93a226fcfc4c32a5378bb531bfff08f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Transaction.completeInputs(Add/AtLeast)One

- [#131](https://github.com/ckb-devrel/ccc/pull/131) [`c2c4c26`](https://github.com/ckb-devrel/ccc/commit/c2c4c264e04461948e4b913b2f22054e6032ddc8) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): RequestorJsonRpc

- [#131](https://github.com/ckb-devrel/ccc/pull/131) [`b6a73fa`](https://github.com/ckb-devrel/ccc/commit/b6a73fa9628ebdff51cb8f246309654cd53e36f2) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): extra molecule codecs

- [#130](https://github.com/ckb-devrel/ccc/pull/130) [`8c97c85`](https://github.com/ckb-devrel/ccc/commit/8c97c851db4a2d940c7e59116ca7620cfd0afae1) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: SSRI & UDT SDK

### Patch Changes

- [#131](https://github.com/ckb-devrel/ccc/pull/131) [`4dbf4fd`](https://github.com/ckb-devrel/ccc/commit/4dbf4fd8021cf14d05282706a7667ea7d108fb09) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): numFrom("0x") should be 0

## 1.2.3

### Patch Changes

- [#127](https://github.com/ckb-devrel/ccc/pull/127) [`01263bd`](https://github.com/ckb-devrel/ccc/commit/01263bd8c601fa8fcdfa24be52601716e1864843) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix: numFromBytes modifies the args

## 1.2.2

### Patch Changes

- [#120](https://github.com/ckb-devrel/ccc/pull/120) [`7886e3d`](https://github.com/ckb-devrel/ccc/commit/7886e3d89e9ca8f3514a2044c6dd4e8ec6b49933) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix: support ws:// rpc

## 1.2.1

### Patch Changes

- [#118](https://github.com/ckb-devrel/ccc/pull/118) [`94e2618`](https://github.com/ckb-devrel/ccc/commit/94e26182515e09d6086ec5b653d091f117a499e6) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix: client concurrent should be FIFO

## 1.2.0

### Minor Changes

- [#116](https://github.com/ckb-devrel/ccc/pull/116) [`128e87b`](https://github.com/ckb-devrel/ccc/commit/128e87b5ca3e97bfe7842e76f786aa6aec010797) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: Client LRU cache

## 1.1.1

### Patch Changes

- [#114](https://github.com/ckb-devrel/ccc/pull/114) [`925991c`](https://github.com/ckb-devrel/ccc/commit/925991c8a24b1f34667e30b28b69812e936e3928) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix: udtBalanceFrom

## 1.1.0

### Minor Changes

- [#112](https://github.com/ckb-devrel/ccc/pull/112) [`ddc0a28`](https://github.com/ckb-devrel/ccc/commit/ddc0a281c3d1dfa6ebc990dae92994f026dfddcc) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: set maxConcurrent for ClientJsonRpc

## 1.0.1

### Patch Changes

- [#111](https://github.com/ckb-devrel/ccc/pull/111) [`719055b`](https://github.com/ckb-devrel/ccc/commit/719055b404f31b40362f51714b9f11c85b857581) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix: call stack overflow caused by spread operator

- [#109](https://github.com/ckb-devrel/ccc/pull/109) [`94caaca`](https://github.com/ckb-devrel/ccc/commit/94caaca11c63752a25282d42f51161c94397dec6) Thanks [@Hanssen0](https://github.com/Hanssen0)! - refactor: remove redundant code

## 1.0.0

### Major Changes

- [#107](https://github.com/ckb-devrel/ccc/pull/107) [`b99f55f`](https://github.com/ckb-devrel/ccc/commit/b99f55f74e64106391ce53f7d0bd0fa7522023cc) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: molecule

## 0.1.2

### Patch Changes

- [#103](https://github.com/ckb-devrel/ccc/pull/103) [`c1cb910`](https://github.com/ckb-devrel/ccc/commit/c1cb91091780c7b33fbbd683ef8edc9f11452ecd) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix: ccc core commonjs

## 0.1.1

### Patch Changes

- [#101](https://github.com/ckb-devrel/ccc/pull/101) [`d9affcc`](https://github.com/ckb-devrel/ccc/commit/d9affcc01c7b839b227e4d79bcb66e717577502a) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix: commonjs

## 0.1.0

### Minor Changes

- [#74](https://github.com/ckb-devrel/ccc/pull/74) [`f21d7e4`](https://github.com/ckb-devrel/ccc/commit/f21d7e4cf422edab4a836ef6d678b620594fef8d) Thanks [@Hanssen0](https://github.com/Hanssen0)! - add spore package and some known scripts

### Patch Changes

- [#72](https://github.com/ckb-devrel/ccc/pull/72) [`a3d5359`](https://github.com/ckb-devrel/ccc/commit/a3d53595f6dd11f2f59cdf0086b3d7ce558a2fdd) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): reopen websocket

- [#69](https://github.com/ckb-devrel/ccc/pull/69) [`8824ff2`](https://github.com/ckb-devrel/ccc/commit/8824ff27af3b76186f1a7d6db8c907cd66f09d6a) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Client.waitTransaction

- [#88](https://github.com/ckb-devrel/ccc/pull/88) [`f07a506`](https://github.com/ckb-devrel/ccc/commit/f07a506bd6fc27fe659a17d2f7baaeec54716d81) Thanks [@ashuralyk](https://github.com/ashuralyk)! - feat: molecule codec
  feat: spore searcher

- [#70](https://github.com/ckb-devrel/ccc/pull/70) [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): websocket transport

- [#64](https://github.com/ckb-devrel/ccc/pull/64) [`1720d5a`](https://github.com/ckb-devrel/ccc/commit/1720d5a398543f1c6e24763eeaf15d84cd2214bf) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): ckb proxy locks

- [#96](https://github.com/ckb-devrel/ccc/pull/96) [`e63a06e`](https://github.com/ckb-devrel/ccc/commit/e63a06ee75ac8595208d216dec88a4228c465e23) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: support doge signer

- [#67](https://github.com/ckb-devrel/ccc/pull/67) [`c092988`](https://github.com/ckb-devrel/ccc/commit/c092988e7765b9ac79498d6bd72a6a2f62859b6f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): auto fee rate

- [`50f2ce0`](https://github.com/ckb-devrel/ccc/commit/50f2ce08e74cb3fbeae926267d42e28b426fd7f4) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): missing mol types

- [#92](https://github.com/ckb-devrel/ccc/pull/92) [`4709384`](https://github.com/ckb-devrel/ccc/commit/4709384e37188991cb937b16f99f47ca82c912b8) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix: `epochFromHex` failed if the arg is not 7 bytes

## 0.1.0-alpha.7

### Patch Changes

- [#88](https://github.com/ckb-devrel/ccc/pull/88) [`f07a506`](https://github.com/ckb-devrel/ccc/commit/f07a506bd6fc27fe659a17d2f7baaeec54716d81) Thanks [@ashuralyk](https://github.com/ashuralyk)! - feat: molecule codec
  feat: spore searcher

## 0.1.0-alpha.6

### Patch Changes

- [#92](https://github.com/ckb-devrel/ccc/pull/92) [`4709384`](https://github.com/ckb-devrel/ccc/commit/4709384e37188991cb937b16f99f47ca82c912b8) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix: `epochFromHex` failed if the arg is not 7 bytes

## 0.1.0-alpha.5

### Patch Changes

- [`50f2ce0`](https://github.com/ckb-devrel/ccc/commit/50f2ce08e74cb3fbeae926267d42e28b426fd7f4) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): missing mol types

## 0.1.0-alpha.4

### Minor Changes

- [#74](https://github.com/ckb-devrel/ccc/pull/74) [`f21d7e4`](https://github.com/ckb-devrel/ccc/commit/f21d7e4cf422edab4a836ef6d678b620594fef8d) Thanks [@Hanssen0](https://github.com/Hanssen0)! - add spore package and some known scripts

## 0.0.16-alpha.3

### Patch Changes

- [#72](https://github.com/ckb-devrel/ccc/pull/72) [`a3d5359`](https://github.com/ckb-devrel/ccc/commit/a3d53595f6dd11f2f59cdf0086b3d7ce558a2fdd) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): reopen websocket

## 0.0.16-alpha.2

### Patch Changes

- [#70](https://github.com/ckb-devrel/ccc/pull/70) [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): websocket transport

## 0.0.16-alpha.1

### Patch Changes

- [#69](https://github.com/ckb-devrel/ccc/pull/69) [`8824ff2`](https://github.com/ckb-devrel/ccc/commit/8824ff27af3b76186f1a7d6db8c907cd66f09d6a) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Client.waitTransaction

- [#67](https://github.com/ckb-devrel/ccc/pull/67) [`c092988`](https://github.com/ckb-devrel/ccc/commit/c092988e7765b9ac79498d6bd72a6a2f62859b6f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): auto fee rate

## 0.0.16-alpha.0

### Patch Changes

- [#64](https://github.com/ckb-devrel/ccc/pull/64) [`1720d5a`](https://github.com/ckb-devrel/ccc/commit/1720d5a398543f1c6e24763eeaf15d84cd2214bf) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): ckb proxy locks

## 0.0.15

### Patch Changes

- [`8f2560a`](https://github.com/ckb-devrel/ccc/commit/8f2560ab0e5619654fff7c5eacda8425385f908e) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): typed client errors

## 0.0.14

### Patch Changes

- [`5e942f8`](https://github.com/ckb-devrel/ccc/commit/5e942f8f1ed678abdb7ab9716f5449f0714cea53) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): numLeFromBytes should not modify args

- [`f5b5938`](https://github.com/ckb-devrel/ccc/commit/f5b5938ab8f9c0a338dfd6765fe717f7ad1b1dd8) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): ErrorClient types

  - ErrorClientRBFRejected
  - ErrorClientDuplicatedTransaction

- [#56](https://github.com/ckb-devrel/ccc/pull/56) [`f13f4d3`](https://github.com/ckb-devrel/ccc/commit/f13f4d319ca66b571029a65e945e3a038bfeea25) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Signer.findTransactions

- [#50](https://github.com/ckb-devrel/ccc/pull/50) [`7ba62a0`](https://github.com/ckb-devrel/ccc/commit/7ba62a056f17808fe5684786c00c2dff80bb7d1d) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): jsonrpc id conflict

- [`2164efd`](https://github.com/ckb-devrel/ccc/commit/2164efd6d834c1917ad5f4a514dc25941f937185) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Support ACP addresses for private key signer

- [`e5bd2ad`](https://github.com/ckb-devrel/ccc/commit/e5bd2ad5de4b42a22c422ecfc42056750f69b88b) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): since encoding

- [#48](https://github.com/ckb-devrel/ccc/pull/48) [`aae3e06`](https://github.com/ckb-devrel/ccc/commit/aae3e0679fb940dd8c12ac9be12a4b53277a339d) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): readable client error

## 0.0.14-alpha.2

### Patch Changes

- [#50](https://github.com/ckb-devrel/ccc/pull/50) [`7ba62a0`](https://github.com/ckb-devrel/ccc/commit/7ba62a056f17808fe5684786c00c2dff80bb7d1d) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): jsonrpc id conflict

## 0.0.14-alpha.1

### Patch Changes

- [`5e942f8`](https://github.com/ckb-devrel/ccc/commit/5e942f8f1ed678abdb7ab9716f5449f0714cea53) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): numLeFromBytes should not modify args

- [`e5bd2ad`](https://github.com/ckb-devrel/ccc/commit/e5bd2ad5de4b42a22c422ecfc42056750f69b88b) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): since encoding

- [#48](https://github.com/ckb-devrel/ccc/pull/48) [`aae3e06`](https://github.com/ckb-devrel/ccc/commit/aae3e0679fb940dd8c12ac9be12a4b53277a339d) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): readable client error

## 0.0.14-alpha.0

### Patch Changes

- [`f5b5938`](https://github.com/ckb-devrel/ccc/commit/f5b5938ab8f9c0a338dfd6765fe717f7ad1b1dd8) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): ErrorClient types

  - ErrorClientRBFRejected
  - ErrorClientDuplicatedTransaction

- [`2164efd`](https://github.com/ckb-devrel/ccc/commit/2164efd6d834c1917ad5f4a514dc25941f937185) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Support ACP addresses for private key signer

## 0.0.13

### Patch Changes

- [`3378e85`](https://github.com/ckb-devrel/ccc/commit/3378e85b32797f5cdc1943b9ecaca1fd1d9fad5e) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): web socket

- [`8629449`](https://github.com/ckb-devrel/ccc/commit/86294490e76fc2a1cee20f827883e02fceca6e8b) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): ClientCache.clear

  replaced ClientCache.revertTransactions

- [`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): recordCells should not add usableCells

- [`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): node.js websocket

- [#25](https://github.com/ckb-devrel/ccc/pull/25) [`69c10fd`](https://github.com/ckb-devrel/ccc/commit/69c10fdfcd507433c13b15d17015dca4687afb97) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(utxo-global): switchNetwork

- [`600cc13`](https://github.com/ckb-devrel/ccc/commit/600cc137ac6eb7c5b2533670de6df29d82f1b9e1) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): extra infos in the response of getTransaction

  - blockNumber
  - blockHash
  - cycles
  - reason (When failed)
  - txIndex (After CKB 0.118)

- [`642f731`](https://github.com/ckb-devrel/ccc/commit/642f7317f4951ef801f1245aea96c40b4b6fb73e) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): custom ClientCache

- [`96dbb61`](https://github.com/ckb-devrel/ccc/commit/96dbb6107d2071b9383350ddd578557746227054) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): custom client cache

- [`0462a4e`](https://github.com/ckb-devrel/ccc/commit/0462a4ee101926f0da857173626dc4ab879e3b56) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Client.getCellLive

- [`52156f9`](https://github.com/ckb-devrel/ccc/commit/52156f9df9cae9e0b71b77b49cda0e4d73e76142) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): ClientCache.revertTransaction

- [`63606db`](https://github.com/ckb-devrel/ccc/commit/63606db908f95bfc857430083932144d1ef4deef) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(coree): typed errors

- [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): completeInputs

- [`1043c2b`](https://github.com/ckb-devrel/ccc/commit/1043c2bc211ec283b88dba3b81feef98e4185c0e) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): nervos dao script

- [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): more APIs. Since parsing.

- [`1f999f8`](https://github.com/ckb-devrel/ccc/commit/1f999f854beb255b3cd9dbbc5a7268e75442b3db) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): ClientCache.markTransactions

- [`a69a9dc`](https://github.com/ckb-devrel/ccc/commit/a69a9dc0c722f7b4cfa36b2ae8ecba4dcde0db90) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): completeInputsAll

- [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Signer.findCells

## 0.0.13-alpha.8

### Patch Changes

- [`8629449`](https://github.com/ckb-devrel/ccc/commit/86294490e76fc2a1cee20f827883e02fceca6e8b) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): ClientCache.clear

  replaced ClientCache.revertTransactions

- [`52156f9`](https://github.com/ckb-devrel/ccc/commit/52156f9df9cae9e0b71b77b49cda0e4d73e76142) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): ClientCache.revertTransaction

- [`63606db`](https://github.com/ckb-devrel/ccc/commit/63606db908f95bfc857430083932144d1ef4deef) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(coree): typed errors

## 0.0.13-alpha.7

### Patch Changes

- [`1043c2b`](https://github.com/ckb-devrel/ccc/commit/1043c2bc211ec283b88dba3b81feef98e4185c0e) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): nervos dao script

- [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): more APIs. Since parsing.

- [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Signer.findCells

## 0.0.13-alpha.6

### Patch Changes

- [#25](https://github.com/ckb-devrel/ccc/pull/25) [`69c10fd`](https://github.com/ckb-devrel/ccc/commit/69c10fdfcd507433c13b15d17015dca4687afb97) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(utxo-global): switchNetwork

- [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): completeInputs

## 0.0.13-alpha.5

### Patch Changes

- [`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): recordCells should not add usableCells

## 0.0.13-alpha.4

### Patch Changes

- [`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): node.js websocket

- [`642f731`](https://github.com/ckb-devrel/ccc/commit/642f7317f4951ef801f1245aea96c40b4b6fb73e) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): custom ClientCache

## 0.0.13-alpha.3

### Patch Changes

- [`1f999f8`](https://github.com/ckb-devrel/ccc/commit/1f999f854beb255b3cd9dbbc5a7268e75442b3db) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): ClientCache.markTransactions

## 0.0.13-alpha.2

### Patch Changes

- [`96dbb61`](https://github.com/ckb-devrel/ccc/commit/96dbb6107d2071b9383350ddd578557746227054) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): custom client cache

## 0.0.13-alpha.1

### Patch Changes

- [`3378e85`](https://github.com/ckb-devrel/ccc/commit/3378e85b32797f5cdc1943b9ecaca1fd1d9fad5e) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): web socket

- [`a69a9dc`](https://github.com/ckb-devrel/ccc/commit/a69a9dc0c722f7b4cfa36b2ae8ecba4dcde0db90) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): completeInputsAll

## 0.0.13-alpha.0

### Patch Changes

- [`600cc13`](https://github.com/ckb-devrel/ccc/commit/600cc137ac6eb7c5b2533670de6df29d82f1b9e1) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): extra infos in the response of getTransaction

  - blockNumber
  - blockHash
  - cycles
  - reason (When failed)
  - txIndex (After CKB 0.118)

## 0.0.12


================================================
File: packages/core/eslint.config.mjs
================================================
// @ts-check

import eslint from "@eslint/js";
import eslintPluginPrettierRecommended from "eslint-plugin-prettier/recommended";
import tseslint from "typescript-eslint";

import { dirname } from "path";
import { fileURLToPath } from "url";

export default [
  ...tseslint.config({
    files: ["**/*.ts"],
    extends: [
      eslint.configs.recommended,
      ...tseslint.configs.recommendedTypeChecked,
    ],
    rules: {
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          args: "all",
          argsIgnorePattern: "^_",
          caughtErrors: "all",
          caughtErrorsIgnorePattern: "^_",
          destructuredArrayIgnorePattern: "^_",
          varsIgnorePattern: "^_",
          ignoreRestSiblings: true,
        },
      ],
      "@typescript-eslint/unbound-method": ["error", { ignoreStatic: true }],
      "@typescript-eslint/no-unsafe-member-access": "off",
      "@typescript-eslint/require-await": "off",
      "no-empty": "off",
      "prefer-const": [
        "error",
        { ignoreReadBeforeAssign: true, destructuring: "all" },
      ],
    },
    languageOptions: {
      parserOptions: {
        project: true,
        tsconfigRootDir: dirname(fileURLToPath(import.meta.url)),
      },
    },
  }),
  eslintPluginPrettierRecommended,
];


================================================
File: packages/core/jest.config.js
================================================
/** @type {import('ts-jest').JestConfigWithTsJest} */
module.exports = {
  preset: "ts-jest",
  testEnvironment: "node",
};


================================================
File: packages/core/package.json
================================================
{
  "name": "@ckb-ccc/core",
  "version": "1.5.0",
  "description": "Core of CCC - CKBer's Codebase",
  "author": "Hanssen0 <hanssen0@hanssen0.com>",
  "license": "MIT",
  "private": false,
  "homepage": "https://github.com/ckb-devrel/ccc",
  "repository": {
    "type": "git",
    "url": "git://github.com/ckb-devrel/ccc.git"
  },
  "sideEffects": false,
  "main": "./dist.commonjs/index.js",
  "module": "./dist/index.js",
  "exports": {
    ".": {
      "import": "./dist/index.js",
      "require": "./dist.commonjs/index.js",
      "default": "./dist.commonjs/index.js"
    },
    "./barrel": {
      "import": "./dist/barrel.js",
      "require": "./dist.commonjs/barrel.js",
      "default": "./dist.commonjs/barrel.js"
    },
    "./advancedBarrel": {
      "import": "./dist/advancedBarrel.js",
      "require": "./dist.commonjs/advancedBarrel.js",
      "default": "./dist.commonjs/advancedBarrel.js"
    },
    "./advanced": {
      "import": "./dist/advanced.js",
      "require": "./dist.commonjs/advanced.js",
      "default": "./dist.commonjs/advanced.js"
    }
  },
  "scripts": {
    "test": "jest",
    "build": "rimraf ./dist && rimraf ./dist.commonjs && tsc && tsc --project tsconfig.commonjs.json && copyfiles -u 2 misc/basedirs/**/* .",
    "lint": "eslint ./src",
    "format": "prettier --write . && eslint --fix ./src"
  },
  "devDependencies": {
    "@eslint/js": "^9.1.1",
    "@types/blake2b": "^2.1.3",
    "@types/jest": "^29.5.12",
    "@types/ws": "^8.5.12",
    "copyfiles": "^2.4.1",
    "eslint": "^9.1.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.1.3",
    "jest": "^29.7.0",
    "prettier": "^3.2.5",
    "prettier-plugin-organize-imports": "^3.2.4",
    "rimraf": "^5.0.5",
    "ts-essentials": "^9.4.2",
    "ts-jest": "^29.1.4",
    "typescript": "^5.4.5",
    "typescript-eslint": "^7.7.0"
  },
  "publishConfig": {
    "access": "public"
  },
  "dependencies": {
    "@joyid/ckb": "^1.0.1",
    "@noble/ciphers": "^0.5.3",
    "@noble/curves": "^1.4.2",
    "@noble/hashes": "^1.4.0",
    "abort-controller": "^3.0.0",
    "bech32": "^2.0.0",
    "bitcoinjs-message": "^2.2.0",
    "bs58check": "^4.0.0",
    "buffer": "^6.0.3",
    "cross-fetch": "^4.0.0",
    "ethers": "^6.13.1",
    "isomorphic-ws": "^5.0.0",
    "ws": "^8.18.0"
  }
}


================================================
File: packages/core/tsconfig.base.json
================================================
{
  "compilerOptions": {
    "target": "es2020",
    "incremental": true,
    "allowJs": true,
    "importHelpers": false,
    "declaration": true,
    "declarationMap": true,
    "experimentalDecorators": true,
    "useDefineForClassFields": false,
    "esModuleInterop": true,
    "strict": true,
    "noImplicitAny": true,
    "strictBindCallApply": true,
    "strictNullChecks": true,
    "alwaysStrict": true,
    "noFallthroughCasesInSwitch": true,
    "forceConsistentCasingInFileNames": true,
    "skipLibCheck": true
  },
  "include": ["src/**/*"]
}


================================================
File: packages/core/tsconfig.commonjs.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "NodeNext",
    "moduleResolution": "NodeNext",
    "outDir": "./dist.commonjs"
  }
}


================================================
File: packages/core/tsconfig.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "ESNext",
    "moduleResolution": "Bundler",
    "outDir": "./dist",
  }
}


================================================
File: packages/core/typedoc.json
================================================
{
  "$schema": "https://typedoc.org/schema.json",
  "entryPoints": ["./src/index.ts", "./src/advanced.ts"],
  "extends": ["../../typedoc.base.json"],
  "name": "@ckb-ccc core"
}


================================================
File: packages/core/.npmignore
================================================
node_modules/
misc/

*test.js
*test.ts
*test.d.ts
*test.d.ts.map
*spec.js
*spec.ts
*spec.d.ts
*spec.d.ts.map

tsconfig.json
tsconfig.*.json
eslint.config.mjs
.prettierrc
.prettierignore

tsconfig.tsbuildinfo
tsconfig.*.tsbuildinfo
.github/


================================================
File: packages/core/.prettierignore
================================================
node_modules/

dist/
dist.commonjs/

.npmignore
.prettierrc
tsconfig.json
eslint.config.mjs
.prettierrc

tsconfig.tsbuildinfo
.github/


================================================
File: packages/core/.prettierrc
================================================
{
  "singleQuote": false,
  "trailingComma": "all",
  "plugins": ["prettier-plugin-organize-imports"]
}


================================================
File: packages/core/misc/basedirs/dist/package.json
================================================
{
  "type": "module"
}


================================================
File: packages/core/misc/basedirs/dist.commonjs/package.json
================================================
{
  "type": "commonjs"
}


================================================
File: packages/core/src/advanced.ts
================================================
export * from "./advancedBarrel.js";
export * as cccA from "./advancedBarrel.js";


================================================
File: packages/core/src/advancedBarrel.ts
================================================
export * from "./address/advanced.js";
export * from "./bytes/advanced.js";
export * from "./ckb/advanced.js";
export * from "./client/advanced.js";
export * from "./hasher/advanced.js";
export * from "./jsonRpc/advanced.js";


================================================
File: packages/core/src/barrel.ts
================================================
export * from "./address/index.js";
export * from "./bytes/index.js";
export * from "./ckb/index.js";
export * from "./client/index.js";
export * from "./fixedPoint/index.js";
export * from "./hasher/index.js";
export * from "./hex/index.js";
export * from "./jsonRpc/index.js";
export * from "./keystore/index.js";
export * from "./molecule/index.js";
export * from "./num/index.js";
export * from "./signer/index.js";
export * from "./utils/index.js";


================================================
File: packages/core/src/index.ts
================================================
export * from "./barrel.js";
export * as ccc from "./barrel.js";


================================================
File: packages/core/src/address/address.advanced.ts
================================================
import { bech32, bech32m } from "bech32";
import { Script, hashTypeFromBytes } from "../ckb/index.js";
import { Client, KnownScript } from "../client/index.js";
import { hexFrom } from "../hex/index.js";
import { type AddressLike } from "./index.js";

/**
 * Parses an address string into an address information object.
 *
 * @param address - The address string to parse.
 * @returns An object containing the address prefix, address format, and payload array.
 *
 * @throws Will throw an error if the address format is unknown.
 *
 * @example
 * ```typescript
 * const addressInfo = addressPayloadFromString("ckt1112139193129");
 * console.log(addressInfo.prefix); // Outputs the address prefix
 * console.log(addressInfo.format); // Outputs the address format
 * console.log(addressInfo.payload); // Outputs the payload array
 * ```
 */

export function addressPayloadFromString(address: string): {
  prefix: string;
  format: AddressFormat;
  payload: number[];
} {
  // Try parse full format address
  try {
    const { words, prefix } = bech32m.decode(address, ADDRESS_BECH32_LIMIT);
    const decoded = bech32m.fromWords(words);
    const formatType = decoded[0];
    const payload = decoded.slice(1);

    if (formatType === (AddressFormat.Full as number)) {
      return { prefix, format: AddressFormat.Full, payload };
    }
  } catch (_) {}

  // Try parse legacy 2019 format address
  try {
    const { prefix, words } = bech32.decode(address, ADDRESS_BECH32_LIMIT);
    const decoded = bech32.fromWords(words);
    const formatType = decoded[0];
    const payload = decoded.slice(1);
    if (
      [
        AddressFormat.FullData,
        AddressFormat.FullType,
        AddressFormat.Short,
      ].includes(formatType)
    ) {
      return { prefix, format: formatType, payload };
    }
  } catch (_) {}

  throw Error(`Unknown address format ${address}`);
}

/**
 * Converts an address payload into an address-like object.
 *
 * @param prefix - The address prefix.
 * @param format - The format of the address, as defined by the AddressFormat enum.
 * @param payload - The payload array containing the address data.
 * @param client - The client instance used to fetch known scripts.
 * @returns A promise that resolves to an AddressLike object.
 *
 * @throws Will throw an error if the payload length is insufficient or if the script type is unknown.
 *
 * @example
 * ```typescript
 * const address = await addressFromPayload("ckt", AddressFormat.Full, [/* payload data *\/], client);
 * console.log(address.script); // Outputs the script object
 * console.log(address.prefix); // Outputs the address prefix
 * ```
 */

export async function addressFromPayload(
  prefix: string,
  format: AddressFormat,
  payload: number[],
  client: Client,
): Promise<AddressLike> {
  if (format === AddressFormat.Full) {
    if (payload.length < 32 + 1) {
      throw new Error(
        `Invalid full address without enough payload ${hexFrom(payload)}`,
      );
    }

    return {
      script: {
        codeHash: payload.slice(0, 32),
        hashType: hashTypeFromBytes(payload.slice(32, 33)),
        args: payload.slice(33),
      },
      prefix,
    };
  }

  if (format === AddressFormat.FullData) {
    if (payload.length < 32) {
      throw new Error(
        `Invalid full data address without enough payload ${hexFrom(payload)}`,
      );
    }

    return {
      script: {
        codeHash: payload.slice(0, 32),
        hashType: "data",
        args: payload.slice(32),
      },
      prefix,
    };
  }

  if (format === AddressFormat.FullType) {
    if (payload.length < 32) {
      throw new Error(
        `Invalid full type address without enough payload ${hexFrom(payload)}`,
      );
    }

    return {
      script: {
        codeHash: payload.slice(0, 32),
        hashType: "type",
        args: payload.slice(32),
      },
      prefix,
    };
  }

  // format === AddressFormat.Short
  if (payload.length !== 21) {
    throw new Error(
      `Invalid short address without enough payload ${hexFrom(payload)}`,
    );
  }
  const script = [
    KnownScript.Secp256k1Blake160,
    KnownScript.Secp256k1Multisig,
    KnownScript.AnyoneCanPay,
  ][payload[0]];
  if (script === undefined) {
    throw new Error(
      `Invalid short address with unknown script ${hexFrom(payload)}`,
    );
  }

  return {
    script: await Script.fromKnownScript(client, script, payload.slice(1)),
    prefix,
  };
}

export enum AddressFormat {
  /**
   * full version identifies the hashType
   */
  Full = 0x00,
  /**
   * @deprecated
   * short version for locks with Known codeHash, deprecated
   */
  Short = 0x01,
  /**
   * @deprecated
   * full version with hashType = "Data", deprecated
   */
  FullData = 0x02,
  /**
   * @deprecated
   * full version with hashType = "Type", deprecated
   */
  FullType = 0x04,
}

export const ADDRESS_BECH32_LIMIT = 1023;


================================================
File: packages/core/src/address/advanced.ts
================================================
export * from "./address.advanced.js";


================================================
File: packages/core/src/address/index.ts
================================================
import { bech32m } from "bech32";
import { bytesConcat, bytesFrom } from "../bytes/index.js";
import { Script, ScriptLike, hashTypeToBytes } from "../ckb/index.js";
import { Client, KnownScript } from "../client/index.js";
import { HexLike } from "../hex/index.js";
import {
  ADDRESS_BECH32_LIMIT,
  AddressFormat,
  addressFromPayload,
  addressPayloadFromString,
} from "./address.advanced.js";

/**
 * @public
 */
export type AddressLike = {
  script: ScriptLike;
  prefix: string;
};

/**
 * Represents a ckb address with associated script and prefix.
 * @public
 */
export class Address {
  /**
   * Creates an instance of Address.
   *
   * @param script - The script associated with the address.
   * @param prefix - The address prefix.
   */
  constructor(
    public script: Script,
    public prefix: string,
  ) {}

  /**
   * Creates an Address instance from an AddressLike object.
   *
   * @param address - An AddressLike object or an instance of Address.
   * @returns An Address instance.
   */

  static from(address: AddressLike): Address {
    if (address instanceof Address) {
      return address;
    }

    return new Address(Script.from(address.script), address.prefix);
  }

  /**
   * Creates an Address instance from an address string.
   *
   * @param address - The address string to parse.
   * @param clients - A Client instance or a record of Client instances keyed by prefix.
   * @returns A promise that resolves to an Address instance.
   *
   * @throws Will throw an error if the address prefix is unknown or mismatched.
   */

  static async fromString(
    address: string,
    clients: Client | Record<string, Client>,
  ): Promise<Address> {
    const { prefix, format, payload } = addressPayloadFromString(address);

    const client = (clients as Record<string, Client>)[prefix] ?? clients;
    if (!client) {
      throw new Error(`Unknown address prefix ${prefix}`);
    }
    const expectedPrefix = client.addressPrefix;
    if (expectedPrefix !== prefix) {
      throw new Error(
        `Unknown address prefix ${prefix}, expected ${expectedPrefix}`,
      );
    }

    return Address.from(
      await addressFromPayload(prefix, format, payload, client),
    );
  }

  /**
   * Creates an Address instance from a script and client.
   *
   * @param script - The script-like object.
   * @param client - The client instance used to fetch the address prefix.
   * @returns A promise that resolves to an Address instance.
   */

  static fromScript(script: ScriptLike, client: Client): Address {
    return Address.from({ script, prefix: client.addressPrefix });
  }

  static async fromKnownScript(
    client: Client,
    script: KnownScript,
    args: HexLike,
  ): Promise<Address> {
    return Address.from({
      script: await Script.fromKnownScript(client, script, args),
      prefix: client.addressPrefix,
    });
  }

  /**
   * Converts the Address instance to a string.
   *
   * @returns The address as a string.
   */

  toString(): string {
    const data = bytesConcat(
      [AddressFormat.Full],
      bytesFrom(this.script.codeHash),
      hashTypeToBytes(this.script.hashType),
      bytesFrom(this.script.args),
    );

    return bech32m.encode(
      this.prefix,
      bech32m.toWords(data),
      ADDRESS_BECH32_LIMIT,
    );
  }
}


================================================
File: packages/core/src/bytes/advanced.ts
================================================
/**
 * Represents the possible encoding formats for converting bytes.
 * @public
 */
export type BytesFromEncoding =
  | "utf8" // UTF-8 encoding
  | "utf16le" // UTF-16 Little Endian encoding
  | "latin1" // Latin-1 (ISO-8859-1) encoding
  | "base64" // Base64 encoding
  | "base64url" // Base64 URL encoding
  | "hex" // Hexadecimal encoding
  | "ascii" // ASCII encoding
  | "binary" // Binary encoding
  | "ucs2"; // UCS-2 (alias of UTF-16LE) encoding


================================================
File: packages/core/src/bytes/index.ts
================================================
import { Buffer } from "buffer/index.js";
import { BytesFromEncoding } from "./advanced.js";

/**
 * @public
 */
export type Bytes = Uint8Array;
/**
 * @public
 */
export type BytesLike = string | Uint8Array | ArrayBuffer | ArrayLike<number>;

/**
 * Concatenates multiple byte-like arrays to the first number array.
 * @public
 *
 * @param result - The number array as result
 * @param args - The byte-like arrays to concatenate.
 * @returns The first number array
 *
 * @example
 * ```typescript
 * const concatenatedBytes = [1, 2];
 * bytesConcatTo(
 *   concatenatedBytes
 *   new Uint8Array([3, 4]),
 *   "hello",
 *   [5, 6, 7]
 * );
 * console.log(concatenatedBytes); // Outputs [1, 2, 3, 4, /* bytes of "hello" *\/, 5, 6, 7]
 * ```
 */

export function bytesConcatTo(
  result: number[],
  ...args: BytesLike[]
): number[] {
  return args.reduce((acc: number[], v) => {
    const bytes = bytesFrom(v);
    // Spread operator will cause call stack size exceeded
    for (const byte of bytes) {
      result.push(byte);
    }
    return acc;
  }, result);
}

/**
 * Concatenates multiple byte-like arrays into a single byte array.
 * @public
 *
 * @param args - The byte-like arrays to concatenate.
 * @returns A Uint8Array containing the concatenated bytes.
 *
 * @example
 * ```typescript
 * const concatenatedBytes = bytesConcat(
 *   new Uint8Array([1, 2]),
 *   new Uint8Array([3, 4]),
 *   "hello",
 *   [5, 6, 7]
 * );
 * console.log(concatenatedBytes); // Outputs Uint8Array [1, 2, 3, 4, /* bytes of "hello" *\/, 5, 6, 7]
 * ```
 */

export function bytesConcat(...args: BytesLike[]): Bytes {
  return new Uint8Array(bytesConcatTo([], ...args));
}

/**
 * Converts a byte-like value to a string using the specified encoding.
 * @public
 *
 * @param val - The byte-like value to convert.
 * @param encoding - The encoding to use for the conversion, as defined by the BytesFromEncoding type.
 * @returns A string representing the encoded bytes.
 *
 * @example
 * ```typescript
 * const encodedString = bytesTo(new Uint8Array([104, 101, 108, 108, 111]), "utf8");
 * console.log(encodedString); // Outputs "hello"
 *
 * const base64String = bytesTo(new Uint8Array([104, 101, 108, 108, 111]), "base64");
 * console.log(base64String); // Outputs "aGVsbG8="
 * ```
 */

export function bytesTo(val: BytesLike, encoding: BytesFromEncoding): string {
  return Buffer.from(bytesFrom(val)).toString(encoding);
}

/**
 * Converts various types of byte-like values to a Uint8Array.
 * @public
 *
 * @param bytes - The byte-like value to convert. It can be a string, Uint8Array, ArrayBuffer, or number array.
 * @param encoding - Optional encoding to use if the input is a string. Defaults to hexadecimal if not specified.
 * @returns A Uint8Array representing the input bytes.
 *
 * @throws Will throw an error if the input bytes are invalid or out of range.
 *
 * @example
 * ```typescript
 * const bytes1 = bytesFrom(new Uint8Array([1, 2, 3]));
 * console.log(bytes1); // Outputs Uint8Array [1, 2, 3]
 *
 * const bytes2 = bytesFrom("68656c6c6f", "hex");
 * console.log(bytes2); // Outputs Uint8Array [104, 101, 108, 108, 111]
 *
 * const bytes3 = bytesFrom("hello", "utf8");
 * console.log(bytes3); // Outputs Uint8Array [104, 101, 108, 108, 111]
 *
 * const bytes4 = bytesFrom([1, 2, 255]);
 * console.log(bytes4); // Outputs Uint8Array [1, 2, 255]
 * ```
 */

export function bytesFrom(
  bytes: BytesLike,
  encoding?: BytesFromEncoding,
): Bytes {
  if (bytes instanceof Uint8Array) {
    return bytes;
  }

  if (bytes instanceof ArrayBuffer) {
    return new Uint8Array(bytes);
  }

  if (typeof bytes === "string") {
    if (encoding !== undefined) {
      return Buffer.from(bytes, encoding);
    }

    const str = bytes.startsWith("0x") ? bytes.slice(2) : bytes;
    const paddedStr = str.length % 2 === 0 ? str : `0${str}`;
    const data = Buffer.from(paddedStr, "hex");
    if (data.length * 2 !== paddedStr.length) {
      throw new Error(`Invalid bytes ${bytes}`);
    }
    return data;
  }

  const bytesArr = Array.from(bytes);
  if (bytesArr.some((v) => v < 0 || 0xff < v)) {
    throw new Error(`Invalid bytes ${JSON.stringify(bytes)}`);
  }
  return new Uint8Array(bytes);
}

/**
 * Compares two byte-like values for equality.
 * @public
 *
 * @param a - The first byte-like value to compare.
 * @param b - The second byte-like value to compare.
 * @returns A boolean indicating whether the two byte-like values are equal.
 *
 * @example
 * ```typescript
 * bytesEq([1], Uint8Array.from([1])) // true
 * ```
 */
export function bytesEq(a: BytesLike, b: BytesLike): boolean {
  if (a === b) {
    return true;
  }

  const x = bytesFrom(a);
  const y = bytesFrom(b);

  if (x.length !== y.length) {
    return false;
  }

  for (let i = 0; i < x.length; i++) {
    if (x[i] !== y[i]) {
      return false;
    }
  }

  return true;
}


================================================
File: packages/core/src/ckb/advanced.ts
================================================
export * from "./script.advanced.js";
export * from "./transaction.advanced.js";


================================================
File: packages/core/src/ckb/index.ts
================================================
export * from "./script.js";
export * from "./transaction.js";
export * from "./transactionLumos.js";


================================================
File: packages/core/src/ckb/script.advanced.ts
================================================
import { type HashType } from "./script.js";

export const HASH_TYPE_TO_NUM: Record<HashType, number> = {
  type: 0x01,
  data: 0x00,
  data1: 0x02,
  data2: 0x04,
};
export const NUM_TO_HASH_TYPE: Record<number, HashType> = {
  0x01: "type",
  0x00: "data",
  0x02: "data1",
  0x04: "data2",
};
export const HASH_TYPES: string[] = Object.keys(HASH_TYPE_TO_NUM);


================================================
File: packages/core/src/ckb/script.ts
================================================
import { Bytes, BytesLike, bytesFrom } from "../bytes/index.js";
import { Client, KnownScript } from "../client/index.js";
import { Hex, HexLike, hexFrom } from "../hex/index.js";
import { mol } from "../molecule/index.js";
import {
  HASH_TYPES,
  HASH_TYPE_TO_NUM,
  NUM_TO_HASH_TYPE,
} from "./script.advanced.js";

export const HashTypeCodec: mol.Codec<HashTypeLike, HashType> = mol.Codec.from({
  byteLength: 1,
  encode: hashTypeToBytes,
  decode: hashTypeFromBytes,
});

/**
 * @public
 */
export type HashTypeLike = string | number | bigint;
/**
 * @public
 */
export type HashType = "type" | "data" | "data1" | "data2";

/**
 * Converts a HashTypeLike value to a HashType.
 * @public
 *
 * @param val - The value to convert, which can be a string, number, or bigint.
 * @returns The corresponding HashType.
 *
 * @throws Will throw an error if the input value is not a valid hash type.
 *
 * @example
 * ```typescript
 * const hashType = hashTypeFrom(1); // Outputs "data"
 * const hashType = hashTypeFrom("type"); // Outputs "type"
 * ```
 */

export function hashTypeFrom(val: HashTypeLike): HashType {
  const hashType = (() => {
    if (typeof val === "number") {
      return NUM_TO_HASH_TYPE[val];
    }

    if (typeof val === "bigint") {
      return NUM_TO_HASH_TYPE[Number(val)];
    }

    if (!HASH_TYPES.includes(val)) {
      return;
    }
    return val as HashType;
  })();
  if (hashType === undefined) {
    throw new Error(`Invalid hash type ${val}`);
  }
  return hashType;
}

/**
 * Converts a HashTypeLike value to its corresponding byte representation.
 * @public
 *
 * @param hashType - The hash type value to convert.
 * @returns A Uint8Array containing the byte representation of the hash type.
 *
 * @example
 * ```typescript
 * const hashTypeBytes = hashTypeToBytes("type"); // Outputs Uint8Array [0]
 * ```
 */

export function hashTypeToBytes(hashType: HashTypeLike): Bytes {
  return bytesFrom([HASH_TYPE_TO_NUM[hashTypeFrom(hashType)]]);
}

/**
 * Converts a byte-like value to a HashType.
 * @public
 *
 * @param bytes - The byte-like value to convert.
 * @returns The corresponding HashType.
 *
 * @throws Will throw an error if the input bytes do not correspond to a valid hash type.
 *
 * @example
 * ```typescript
 * const hashType = hashTypeFromBytes(new Uint8Array([0])); // Outputs "type"
 * ```
 */

export function hashTypeFromBytes(bytes: BytesLike): HashType {
  return NUM_TO_HASH_TYPE[bytesFrom(bytes)[0]];
}

/**
 * @public
 */
export type ScriptLike = {
  codeHash: BytesLike;
  hashType: HashTypeLike;
  args: BytesLike;
};
/**
 * @public
 */
@mol.codec(
  mol.table({
    codeHash: mol.Byte32,
    hashType: HashTypeCodec,
    args: mol.Bytes,
  }),
)
export class Script extends mol.Entity.Base<ScriptLike, Script>() {
  /**
   * Creates an instance of Script.
   *
   * @param codeHash - The code hash of the script.
   * @param hashType - The hash type of the script.
   * @param args - The arguments for the script.
   */
  constructor(
    public codeHash: Hex,
    public hashType: HashType,
    public args: Hex,
  ) {
    super();
  }

  get occupiedSize(): number {
    return 33 + bytesFrom(this.args).length;
  }

  /**
   * Clone a script.
   *
   * @returns A cloned Script instance.
   *
   * @example
   * ```typescript
   * const script1 = script0.clone();
   * ```
   */
  clone(): Script {
    return new Script(this.codeHash, this.hashType, this.args);
  }

  /**
   * Creates a Script instance from a ScriptLike object.
   *
   * @param script - A ScriptLike object or an instance of Script.
   * @returns A Script instance.
   *
   * @example
   * ```typescript
   * const script = Script.from({
   *   codeHash: "0x1234...",
   *   hashType: "type",
   *   args: "0xabcd..."
   * });
   * ```
   */

  static from(script: ScriptLike): Script {
    if (script instanceof Script) {
      return script;
    }

    return new Script(
      hexFrom(script.codeHash),
      hashTypeFrom(script.hashType),
      hexFrom(script.args),
    );
  }

  /**
   * Creates a Script instance from client and known script.
   *
   * @param knownScript - A KnownScript enum.
   * @param args - Args for the script.
   * @param client - A ScriptLike object or an instance of Script.
   * @returns A promise that resolves to the script instance.
   *
   * @example
   * ```typescript
   * const script = await Script.fromKnownScript(
   *   client,
   *   KnownScript.XUdt,
   *   args: "0xabcd..."
   * );
   * ```
   */

  static async fromKnownScript(
    client: Client,
    knownScript: KnownScript,
    args: HexLike,
  ): Promise<Script> {
    const script = await client.getKnownScript(knownScript);
    return new Script(script.codeHash, script.hashType, hexFrom(args));
  }

  /**
   * Converts the Script instance to molecule data format.
   *
   * @returns An object representing the script in molecule data format.
   */
}

export const ScriptOpt = mol.option(Script);
export const ScriptVec = mol.vector(Script);


================================================
File: packages/core/src/ckb/transaction.advanced.ts
================================================
import { type DepType } from "./transaction.js";

export const DEP_TYPE_TO_NUM: Record<DepType, number> = {
  code: 0x00,
  depGroup: 0x01,
};
export const NUM_TO_DEP_TYPE: Record<number, DepType> = {
  0x00: "code",
  0x01: "depGroup",
};
export const DEP_TYPES: string[] = Object.keys(DEP_TYPE_TO_NUM);


================================================
File: packages/core/src/ckb/transaction.ts
================================================
import { Bytes, BytesLike, bytesFrom } from "../bytes/index.js";
import type { ClientCollectableSearchKeyFilterLike } from "../client/clientTypes.advanced.js";
import type { CellDepInfoLike, Client, KnownScript } from "../client/index.js";
import {
  Zero,
  fixedPointFrom,
  fixedPointToString,
} from "../fixedPoint/index.js";
import { Hasher, HasherCkb, hashCkb } from "../hasher/index.js";
import { Hex, HexLike, hexFrom } from "../hex/index.js";
import { mol } from "../molecule/index.js";
import {
  Num,
  NumLike,
  numFrom,
  numFromBytes,
  numToBytes,
  numToHex,
} from "../num/index.js";
import type { Signer } from "../signer/index.js";
import { apply, reduceAsync } from "../utils/index.js";
import { Script, ScriptLike, ScriptOpt } from "./script.js";
import { DEP_TYPE_TO_NUM, NUM_TO_DEP_TYPE } from "./transaction.advanced.js";
import type { LumosTransactionSkeletonType } from "./transactionLumos.js";

export const DepTypeCodec: mol.Codec<DepTypeLike, DepType> = mol.Codec.from({
  byteLength: 1,
  encode: depTypeToBytes,
  decode: depTypeFromBytes,
});

/**
 * @public
 */
export type DepTypeLike = string | number | bigint;
/**
 * @public
 */
export type DepType = "depGroup" | "code";

/**
 * Converts a DepTypeLike value to a DepType.
 * @public
 *
 * @param val - The value to convert, which can be a string, number, or bigint.
 * @returns The corresponding DepType.
 *
 * @throws Will throw an error if the input value is not a valid dep type.
 *
 * @example
 * ```typescript
 * const depType = depTypeFrom(1); // Outputs "code"
 * const depType = depTypeFrom("depGroup"); // Outputs "depGroup"
 * ```
 */

export function depTypeFrom(val: DepTypeLike): DepType {
  const depType = (() => {
    if (typeof val === "number") {
      return NUM_TO_DEP_TYPE[val];
    }

    if (typeof val === "bigint") {
      return NUM_TO_DEP_TYPE[Number(val)];
    }

    return val as DepType;
  })();
  if (depType === undefined) {
    throw new Error(`Invalid dep type ${val}`);
  }
  return depType;
}

/**
 * Converts a DepTypeLike value to its corresponding byte representation.
 * @public
 *
 * @param depType - The dep type value to convert.
 * @returns A Uint8Array containing the byte representation of the dep type.
 *
 * @example
 * ```typescript
 * const depTypeBytes = depTypeToBytes("code"); // Outputs Uint8Array [1]
 * ```
 */

export function depTypeToBytes(depType: DepTypeLike): Bytes {
  return bytesFrom([DEP_TYPE_TO_NUM[depTypeFrom(depType)]]);
}

/**
 * Converts a byte-like value to a DepType.
 * @public
 *
 * @param bytes - The byte-like value to convert.
 * @returns The corresponding DepType.
 *
 * @throws Will throw an error if the input bytes do not correspond to a valid dep type.
 *
 * @example
 * ```typescript
 * const depType = depTypeFromBytes(new Uint8Array([1])); // Outputs "code"
 * ```
 */

export function depTypeFromBytes(bytes: BytesLike): DepType {
  return NUM_TO_DEP_TYPE[bytesFrom(bytes)[0]];
}

/**
 * @public
 */
export type OutPointLike = {
  txHash: HexLike;
  index: NumLike;
};
/**
 * @public
 */
@mol.codec(
  mol.struct({
    txHash: mol.Byte32,
    index: mol.Uint32,
  }),
)
export class OutPoint extends mol.Entity.Base<OutPointLike, OutPoint>() {
  /**
   * Creates an instance of OutPoint.
   *
   * @param txHash - The transaction hash.
   * @param index - The index of the output in the transaction.
   */

  constructor(
    public txHash: Hex,
    public index: Num,
  ) {
    super();
  }

  /**
   * Creates an OutPoint instance from an OutPointLike object.
   *
   * @param outPoint - An OutPointLike object or an instance of OutPoint.
   * @returns An OutPoint instance.
   *
   * @example
   * ```typescript
   * const outPoint = OutPoint.from({ txHash: "0x...", index: 0 });
   * ```
   */
  static from(outPoint: OutPointLike): OutPoint {
    if (outPoint instanceof OutPoint) {
      return outPoint;
    }
    return new OutPoint(hexFrom(outPoint.txHash), numFrom(outPoint.index));
  }
}

/**
 * @public
 */
export type CellOutputLike = {
  capacity: NumLike;
  lock: ScriptLike;
  type?: ScriptLike | null;
};
/**
 * @public
 */
@mol.codec(
  mol.table({
    capacity: mol.Uint64,
    lock: Script,
    type: ScriptOpt,
  }),
)
export class CellOutput extends mol.Entity.Base<CellOutputLike, CellOutput>() {
  /**
   * Creates an instance of CellOutput.
   *
   * @param capacity - The capacity of the cell.
   * @param lock - The lock script of the cell.
   * @param type - The optional type script of the cell.
   */

  constructor(
    public capacity: Num,
    public lock: Script,
    public type?: Script,
  ) {
    super();
  }

  get occupiedSize(): number {
    return 8 + this.lock.occupiedSize + (this.type?.occupiedSize ?? 0);
  }

  /**
   * Creates a CellOutput instance from a CellOutputLike object.
   *
   * @param cellOutput - A CellOutputLike object or an instance of CellOutput.
   * @returns A CellOutput instance.
   *
   * @example
   * ```typescript
   * const cellOutput = CellOutput.from({
   *   capacity: 1000n,
   *   lock: { codeHash: "0x...", hashType: "type", args: "0x..." },
   *   type: { codeHash: "0x...", hashType: "type", args: "0x..." }
   * });
   * ```
   */
  static from(cellOutput: CellOutputLike): CellOutput {
    if (cellOutput instanceof CellOutput) {
      return cellOutput;
    }

    return new CellOutput(
      numFrom(cellOutput.capacity),
      Script.from(cellOutput.lock),
      apply(Script.from, cellOutput.type),
    );
  }
}
export const CellOutputVec = mol.vector(CellOutput);

/**
 * @public
 */
export type CellLike = (
  | {
      outPoint: OutPointLike;
    }
  | { previousOutput: OutPointLike }
) & {
  cellOutput: CellOutputLike;
  outputData: HexLike;
};
/**
 * @public
 */
export class Cell {
  /**
   * Creates an instance of Cell.
   *
   * @param outPoint - The output point of the cell.
   * @param cellOutput - The cell output of the cell.
   * @param outputData - The output data of the cell.
   */

  constructor(
    public outPoint: OutPoint,
    public cellOutput: CellOutput,
    public outputData: Hex,
  ) {}

  /**
   * Creates a Cell instance from a CellLike object.
   *
   * @param cell - A CellLike object or an instance of Cell.
   * @returns A Cell instance.
   */

  static from(cell: CellLike): Cell {
    if (cell instanceof Cell) {
      return cell;
    }

    return new Cell(
      OutPoint.from("outPoint" in cell ? cell.outPoint : cell.previousOutput),
      CellOutput.from(cell.cellOutput),
      hexFrom(cell.outputData),
    );
  }

  /**
   * Clone a Cell
   *
   * @returns A cloned Cell instance.
   *
   * @example
   * ```typescript
   * const cell1 = cell0.clone();
   * ```
   */
  clone(): Cell {
    return new Cell(
      this.outPoint.clone(),
      this.cellOutput.clone(),
      this.outputData,
    );
  }
}

/**
 * @public
 */
export type EpochLike = [NumLike, NumLike, NumLike];
/**
 * @public
 */
export type Epoch = [Num, Num, Num];
/**
 * @public
 */
export function epochFrom(epochLike: EpochLike): Epoch {
  return [numFrom(epochLike[0]), numFrom(epochLike[1]), numFrom(epochLike[2])];
}
/**
 * @public
 */
export function epochFromHex(hex: HexLike): Epoch {
  const num = numFrom(hexFrom(hex));

  return [
    num & numFrom("0xffffff"),
    (num >> numFrom(24)) & numFrom("0xffff"),
    (num >> numFrom(40)) & numFrom("0xffff"),
  ];
}
/**
 * @public
 */
export function epochToHex(epochLike: EpochLike): Hex {
  const epoch = epochFrom(epochLike);

  return numToHex(
    numFrom(epoch[0]) +
      (numFrom(epoch[1]) << numFrom(24)) +
      (numFrom(epoch[2]) << numFrom(40)),
  );
}

/**
 * @public
 */
export type SinceLike =
  | {
      relative: "absolute" | "relative";
      metric: "blockNumber" | "epoch" | "timestamp";
      value: NumLike;
    }
  | NumLike;
/**
 * @public
 */
@mol.codec(
  mol.Uint64.mapIn((encodable: SinceLike) => Since.from(encodable).toNum()),
)
export class Since extends mol.Entity.Base<SinceLike, Since>() {
  /**
   * Creates an instance of Since.
   *
   * @param relative - Absolute or relative
   * @param metric - The metric of since
   * @param value - The value of since
   */

  constructor(
    public relative: "absolute" | "relative",
    public metric: "blockNumber" | "epoch" | "timestamp",
    public value: Num,
  ) {
    super();
  }

  /**
   * Clone a Since.
   *
   * @returns A cloned Since instance.
   *
   * @example
   * ```typescript
   * const since1 = since0.clone();
   * ```
   */
  clone(): Since {
    return new Since(this.relative, this.metric, this.value);
  }

  /**
   * Creates a Since instance from a SinceLike object.
   *
   * @param since - A SinceLike object or an instance of Since.
   * @returns A Since instance.
   *
   * @example
   * ```typescript
   * const since = Since.from("0x1234567812345678");
   * ```
   */
  static from(since: SinceLike): Since {
    if (since instanceof Since) {
      return since;
    }

    if (typeof since === "object" && "relative" in since) {
      return new Since(since.relative, since.metric, numFrom(since.value));
    }

    return Since.fromNum(since);
  }

  /**
   * Converts the Since instance to num.
   *
   * @returns A num
   *
   * @example
   * ```typescript
   * const num = since.toNum();
   * ```
   */

  toNum(): Num {
    return (
      this.value |
      (this.relative === "absolute" ? Zero : numFrom("0x8000000000000000")) |
      {
        blockNumber: numFrom("0x0000000000000000"),
        epoch: numFrom("0x2000000000000000"),
        timestamp: numFrom("0x4000000000000000"),
      }[this.metric]
    );
  }

  /**
   * Creates a Since instance from a num-like value.
   *
   * @param numLike - The num-like value to convert.
   * @returns A Since instance.
   *
   * @example
   * ```typescript
   * const since = Since.fromNum("0x0");
   * ```
   */

  static fromNum(numLike: NumLike): Since {
    const num = numFrom(numLike);

    const relative = num >> numFrom(63) === Zero ? "absolute" : "relative";
    const metric = (["blockNumber", "epoch", "timestamp"] as Since["metric"][])[
      Number((num >> numFrom(61)) & numFrom(3))
    ];
    const value = num & numFrom("0x00ffffffffffffff");

    return new Since(relative, metric, value);
  }
}

/**
 * @public
 */
export type CellInputLike = (
  | {
      previousOutput: OutPointLike;
    }
  | { outPoint: OutPointLike }
) & {
  since?: SinceLike | NumLike | null;
  cellOutput?: CellOutputLike | null;
  outputData?: HexLike | null;
};
/**
 * @public
 */
@mol.codec(
  mol
    .struct({
      since: Since,
      previousOutput: OutPoint,
    })
    .mapIn((encodable: CellInputLike) => CellInput.from(encodable)),
)
export class CellInput extends mol.Entity.Base<CellInputLike, CellInput>() {
  /**
   * Creates an instance of CellInput.
   *
   * @param previousOutput - The previous outpoint of the cell.
   * @param since - The since value of the cell input.
   * @param cellOutput - The optional cell output associated with the cell input.
   * @param outputData - The optional output data associated with the cell input.
   */

  constructor(
    public previousOutput: OutPoint,
    public since: Num,
    public cellOutput?: CellOutput,
    public outputData?: Hex,
  ) {
    super();
  }

  /**
   * Creates a CellInput instance from a CellInputLike object.
   *
   * @param cellInput - A CellInputLike object or an instance of CellInput.
   * @returns A CellInput instance.
   *
   * @example
   * ```typescript
   * const cellInput = CellInput.from({
   *   previousOutput: { txHash: "0x...", index: 0 },
   *   since: 0n
   * });
   * ```
   */
  static from(cellInput: CellInputLike): CellInput {
    if (cellInput instanceof CellInput) {
      return cellInput;
    }

    return new CellInput(
      OutPoint.from(
        "previousOutput" in cellInput
          ? cellInput.previousOutput
          : cellInput.outPoint,
      ),
      Since.from(cellInput.since ?? 0).toNum(),
      apply(CellOutput.from, cellInput.cellOutput),
      apply(hexFrom, cellInput.outputData),
    );
  }

  /**
   * Complete extra infos in the input. Like the output of the out point.
   * The instance will be modified.
   *
   * @returns true if succeed.
   * @example
   * ```typescript
   * await cellInput.completeExtraInfos();
   * ```
   */
  async completeExtraInfos(client: Client): Promise<void> {
    if (this.cellOutput && this.outputData) {
      return;
    }

    const cell = await client.getCell(this.previousOutput);
    if (!cell) {
      return;
    }

    this.cellOutput = cell.cellOutput;
    this.outputData = cell.outputData;
  }

  clone(): CellInput {
    const cloned = super.clone();
    cloned.cellOutput = this.cellOutput;
    cloned.outputData = this.outputData;

    return cloned;
  }
}
export const CellInputVec = mol.vector(CellInput);

/**
 * @public
 */
export type CellDepLike = {
  outPoint: OutPointLike;
  depType: DepTypeLike;
};
/**
 * @public
 */
@mol.codec(
  mol.struct({
    outPoint: OutPoint,
    depType: DepTypeCodec,
  }),
)
export class CellDep extends mol.Entity.Base<CellDepLike, CellDep>() {
  /**
   * Creates an instance of CellDep.
   *
   * @param outPoint - The outpoint of the cell dependency.
   * @param depType - The dependency type.
   */

  constructor(
    public outPoint: OutPoint,
    public depType: DepType,
  ) {
    super();
  }

  /**
   * Clone a CellDep.
   *
   * @returns A cloned CellDep instance.
   *
   * @example
   * ```typescript
   * const cellDep1 = cellDep0.clone();
   * ```
   */

  clone(): CellDep {
    return new CellDep(this.outPoint.clone(), this.depType);
  }

  /**
   * Creates a CellDep instance from a CellDepLike object.
   *
   * @param cellDep - A CellDepLike object or an instance of CellDep.
   * @returns A CellDep instance.
   *
   * @example
   * ```typescript
   * const cellDep = CellDep.from({
   *   outPoint: { txHash: "0x...", index: 0 },
   *   depType: "depGroup"
   * });
   * ```
   */

  static from(cellDep: CellDepLike): CellDep {
    if (cellDep instanceof CellDep) {
      return cellDep;
    }

    return new CellDep(
      OutPoint.from(cellDep.outPoint),
      depTypeFrom(cellDep.depType),
    );
  }
}
export const CellDepVec = mol.vector(CellDep);

/**
 * @public
 */
export type WitnessArgsLike = {
  lock?: HexLike | null;
  inputType?: HexLike | null;
  outputType?: HexLike | null;
};
/**
 * @public
 */
@mol.codec(
  mol.table({
    lock: mol.BytesOpt,
    inputType: mol.BytesOpt,
    outputType: mol.BytesOpt,
  }),
)
export class WitnessArgs extends mol.Entity.Base<
  WitnessArgsLike,
  WitnessArgs
>() {
  /**
   * Creates an instance of WitnessArgs.
   *
   * @param lock - The optional lock field of the witness.
   * @param inputType - The optional input type field of the witness.
   * @param outputType - The optional output type field of the witness.
   */

  constructor(
    public lock?: Hex,
    public inputType?: Hex,
    public outputType?: Hex,
  ) {
    super();
  }

  /**
   * Creates a WitnessArgs instance from a WitnessArgsLike object.
   *
   * @param witnessArgs - A WitnessArgsLike object or an instance of WitnessArgs.
   * @returns A WitnessArgs instance.
   *
   * @example
   * ```typescript
   * const witnessArgs = WitnessArgs.from({
   *   lock: "0x...",
   *   inputType: "0x...",
   *   outputType: "0x..."
   * });
   * ```
   */

  static from(witnessArgs: WitnessArgsLike): WitnessArgs {
    if (witnessArgs instanceof WitnessArgs) {
      return witnessArgs;
    }

    return new WitnessArgs(
      apply(hexFrom, witnessArgs.lock),
      apply(hexFrom, witnessArgs.inputType),
      apply(hexFrom, witnessArgs.outputType),
    );
  }
}

/**
 * @public
 */
export function udtBalanceFrom(dataLike: BytesLike): Num {
  const data = bytesFrom(dataLike).slice(0, 16);
  return numFromBytes(data);
}

export const RawTransaction = mol.table({
  version: mol.Uint32,
  cellDeps: CellDepVec,
  headerDeps: mol.Byte32Vec,
  inputs: CellInputVec,
  outputs: CellOutputVec,
  outputsData: mol.BytesVec,
});

/**
 * @public
 */
export type TransactionLike = {
  version?: NumLike | null;
  cellDeps?: CellDepLike[] | null;
  headerDeps?: HexLike[] | null;
  inputs?: CellInputLike[] | null;
  outputs?:
    | (Omit<CellOutputLike, "capacity"> &
        Partial<Pick<CellOutputLike, "capacity">>)[]
    | null;
  outputsData?: HexLike[] | null;
  witnesses?: HexLike[] | null;
};
/**
 * @public
 */
@mol.codec(
  mol
    .table({
      raw: RawTransaction,
      witnesses: mol.BytesVec,
    })
    .mapIn((txLike: TransactionLike) => {
      const tx = Transaction.from(txLike);
      return {
        raw: tx,
        witnesses: tx.witnesses,
      };
    })
    .mapOut((tx) => Transaction.from({ ...tx.raw, witnesses: tx.witnesses })),
)
export class Transaction extends mol.Entity.Base<
  TransactionLike,
  Transaction
>() {
  /**
   * Creates an instance of Transaction.
   *
   * @param version - The version of the transaction.
   * @param cellDeps - The cell dependencies of the transaction.
   * @param headerDeps - The header dependencies of the transaction.
   * @param inputs - The inputs of the transaction.
   * @param outputs - The outputs of the transaction.
   * @param outputsData - The data associated with the outputs.
   * @param witnesses - The witnesses of the transaction.
   */

  constructor(
    public version: Num,
    public cellDeps: CellDep[],
    public headerDeps: Hex[],
    public inputs: CellInput[],
    public outputs: CellOutput[],
    public outputsData: Hex[],
    public witnesses: Hex[],
  ) {
    super();
  }

  /**
   * Creates a default Transaction instance with empty fields.
   *
   * @returns A default Transaction instance.
   *
   * @example
   * ```typescript
   * const defaultTx = Transaction.default();
   * ```
   */
  static default(): Transaction {
    return new Transaction(0n, [], [], [], [], [], []);
  }

  /**
   * Copy every properties from another transaction.
   *
   * @example
   * ```typescript
   * this.copy(Transaction.default());
   * ```
   */
  copy(txLike: TransactionLike) {
    const tx = Transaction.from(txLike);
    this.version = tx.version;
    this.cellDeps = tx.cellDeps;
    this.headerDeps = tx.headerDeps;
    this.inputs = tx.inputs;
    this.outputs = tx.outputs;
    this.outputsData = tx.outputsData;
    this.witnesses = tx.witnesses;
  }

  /**
   * Creates a Transaction instance from a TransactionLike object.
   *
   * @param tx - A TransactionLike object or an instance of Transaction.
   * @returns A Transaction instance.
   *
   * @example
   * ```typescript
   * const transaction = Transaction.from({
   *   version: 0,
   *   cellDeps: [],
   *   headerDeps: [],
   *   inputs: [],
   *   outputs: [],
   *   outputsData: [],
   *   witnesses: []
   * });
   * ```
   */

  static from(tx: TransactionLike): Transaction {
    if (tx instanceof Transaction) {
      return tx;
    }
    const outputs =
      tx.outputs?.map((output, i) => {
        const o = CellOutput.from({
          ...output,
          capacity: output.capacity ?? 0,
        });
        if (o.capacity === Zero) {
          o.capacity = fixedPointFrom(
            o.occupiedSize +
              (apply(bytesFrom, tx.outputsData?.[i])?.length ?? 0),
          );
        }
        return o;
      }) ?? [];
    const outputsData = outputs.map((_, i) =>
      hexFrom(tx.outputsData?.[i] ?? "0x"),
    );
    if (tx.outputsData != null && outputsData.length < tx.outputsData.length) {
      outputsData.push(
        ...tx.outputsData.slice(outputsData.length).map((d) => hexFrom(d)),
      );
    }

    return new Transaction(
      numFrom(tx.version ?? 0),
      tx.cellDeps?.map((cellDep) => CellDep.from(cellDep)) ?? [],
      tx.headerDeps?.map(hexFrom) ?? [],
      tx.inputs?.map((input) => CellInput.from(input)) ?? [],
      outputs,
      outputsData,
      tx.witnesses?.map(hexFrom) ?? [],
    );
  }

  /**
   * Creates a Transaction instance from a Lumos skeleton.
   *
   * @param skeleton - The Lumos transaction skeleton.
   * @returns A Transaction instance.
   *
   * @throws Will throw an error if an input's outPoint is missing.
   *
   * @example
   * ```typescript
   * const transaction = Transaction.fromLumosSkeleton(skeleton);
   * ```
   */

  static fromLumosSkeleton(
    skeleton: LumosTransactionSkeletonType,
  ): Transaction {
    return Transaction.from({
      version: 0n,
      cellDeps: skeleton.cellDeps.toArray(),
      headerDeps: skeleton.headerDeps.toArray(),
      inputs: skeleton.inputs.toArray().map((input, i) => {
        if (!input.outPoint) {
          throw new Error("outPoint is required in input");
        }

        return CellInput.from({
          previousOutput: input.outPoint,
          since: skeleton.inputSinces.get(i, "0x0"),
          cellOutput: input.cellOutput,
          outputData: input.data,
        });
      }),
      outputs: skeleton.outputs.toArray().map((output) => output.cellOutput),
      outputsData: skeleton.outputs.toArray().map((output) => output.data),
      witnesses: skeleton.witnesses.toArray(),
    });
  }

  /**
   * @deprecated
   * Use ccc.stringify instead.
   * stringify the tx to JSON string.
   */
  stringify(): string {
    return JSON.stringify(this, (_, value) => {
      if (typeof value === "bigint") {
        return numToHex(value);
      }
      // eslint-disable-next-line @typescript-eslint/no-unsafe-return
      return value;
    });
  }

  /**
   * Converts the raw transaction data to bytes.
   *
   * @returns A Uint8Array containing the raw transaction bytes.
   *
   * @example
   * ```typescript
   * const rawTxBytes = transaction.rawToBytes();
   * ```
   */
  rawToBytes(): Bytes {
    return RawTransaction.encode(this);
  }

  /**
   * Calculates the hash of the transaction without witnesses. This is the transaction hash in the usual sense.
   * To calculate the hash of the whole transaction including the witnesses, use transaction.hashFull() instead.
   *
   * @returns The hash of the transaction.
   *
   * @example
   * ```typescript
   * const txHash = transaction.hash();
   * ```
   */
  hash(): Hex {
    return hashCkb(this.rawToBytes());
  }

  /**
   * Calculates the hash of the transaction with witnesses.
   *
   * @returns The hash of the transaction with witnesses.
   *
   * @example
   * ```typescript
   * const txFullHash = transaction.hashFull();
   * ```
   */
  hashFull(): Hex {
    return hashCkb(this.toBytes());
  }

  /**
   * Hashes a witness and updates the hasher.
   *
   * @param witness - The witness to hash.
   * @param hasher - The hasher instance to update.
   *
   * @example
   * ```typescript
   * Transaction.hashWitnessToHasher("0x...", hasher);
   * ```
   */

  static hashWitnessToHasher(witness: HexLike, hasher: Hasher) {
    const raw = bytesFrom(hexFrom(witness));
    hasher.update(numToBytes(raw.length, 8));
    hasher.update(raw);
  }

  /**
   * Computes the signing hash information for a given script.
   *
   * @param scriptLike - The script associated with the transaction, represented as a ScriptLike object.
   * @param client - The client for complete extra infos in the transaction.
   * @returns A promise that resolves to an object containing the signing message and the witness position,
   *          or undefined if no matching input is found.
   *
   * @example
   * ```typescript
   * const signHashInfo = await tx.getSignHashInfo(scriptLike, client);
   * if (signHashInfo) {
   *   console.log(signHashInfo.message); // Outputs the signing message
   *   console.log(signHashInfo.position); // Outputs the witness position
   * }
   * ```
   */
  async getSignHashInfo(
    scriptLike: ScriptLike,
    client: Client,
    hasher: Hasher = new HasherCkb(),
  ): Promise<{ message: Hex; position: number } | undefined> {
    const script = Script.from(scriptLike);
    let position = -1;
    hasher.update(this.hash());

    for (let i = 0; i < this.witnesses.length; i += 1) {
      const input = this.inputs[i];
      if (input) {
        await input.completeExtraInfos(client);

        if (!input.cellOutput) {
          throw new Error("Unable to complete input");
        }

        if (!script.eq(input.cellOutput.lock)) {
          continue;
        }

        if (position === -1) {
          position = i;
        }
      }

      if (position === -1) {
        return undefined;
      }

      Transaction.hashWitnessToHasher(this.witnesses[i], hasher);
    }

    if (position === -1) {
      return undefined;
    }

    return {
      message: hasher.digest(),
      position,
    };
  }

  /**
   * Find the first occurrence of a input with the specified lock id
   *
   * @param scriptIdLike - The script associated with the transaction, represented as a ScriptLike object without args.
   * @param client - The client for complete extra infos in the transaction.
   * @returns A promise that resolves to the found index
   *
   * @example
   * ```typescript
   * const index = await tx.findInputIndexByLockId(scriptIdLike, client);
   * ```
   */
  async findInputIndexByLockId(
    scriptIdLike: Pick<ScriptLike, "codeHash" | "hashType">,
    client: Client,
  ): Promise<number | undefined> {
    const script = Script.from({ ...scriptIdLike, args: "0x" });

    for (let i = 0; i < this.inputs.length; i += 1) {
      const input = this.inputs[i];
      await input.completeExtraInfos(client);
      if (!input.cellOutput) {
        throw new Error("Unable to complete input");
      }

      if (
        script.codeHash === input.cellOutput.lock.codeHash &&
        script.hashType === input.cellOutput.lock.hashType
      ) {
        return i;
      }
    }
  }

  /**
   * Find the first occurrence of a input with the specified lock
   *
   * @param scriptLike - The script associated with the transaction, represented as a ScriptLike object.
   * @param client - The client for complete extra infos in the transaction.
   * @returns A promise that resolves to the prepared transaction
   *
   * @example
   * ```typescript
   * const index = await tx.findInputIndexByLock(scriptLike, client);
   * ```
   */
  async findInputIndexByLock(
    scriptLike: ScriptLike,
    client: Client,
  ): Promise<number | undefined> {
    const script = Script.from(scriptLike);

    for (let i = 0; i < this.inputs.length; i += 1) {
      const input = this.inputs[i];
      await input.completeExtraInfos(client);
      if (!input.cellOutput) {
        throw new Error("Unable to complete input");
      }

      if (script.eq(input.cellOutput.lock)) {
        return i;
      }
    }
  }

  /**
   * Find the last occurrence of a input with the specified lock
   *
   * @param scriptLike - The script associated with the transaction, represented as a ScriptLike object.
   * @param client - The client for complete extra infos in the transaction.
   * @returns A promise that resolves to the prepared transaction
   *
   * @example
   * ```typescript
   * const index = await tx.findLastInputIndexByLock(scriptLike, client);
   * ```
   */
  async findLastInputIndexByLock(
    scriptLike: ScriptLike,
    client: Client,
  ): Promise<number | undefined> {
    const script = Script.from(scriptLike);

    for (let i = this.inputs.length - 1; i >= 0; i -= 1) {
      const input = this.inputs[i];
      await input.completeExtraInfos(client);
      if (!input.cellOutput) {
        throw new Error("Unable to complete input");
      }

      if (script.eq(input.cellOutput.lock)) {
        return i;
      }
    }
  }

  /**
   * Add cell deps if they are not existed
   *
   * @param cellDepLikes - The cell deps to add
   *
   * @example
   * ```typescript
   * tx.addCellDeps(cellDep);
   * ```
   */
  addCellDeps(...cellDepLikes: (CellDepLike | CellDepLike[])[]): void {
    cellDepLikes.flat().forEach((cellDepLike) => {
      const cellDep = CellDep.from(cellDepLike);
      if (this.cellDeps.some((c) => c.eq(cellDep))) {
        return;
      }

      this.cellDeps.push(cellDep);
    });
  }

  /**
   * Add cell deps at the start if they are not existed
   *
   * @param cellDepLikes - The cell deps to add
   *
   * @example
   * ```typescript
   * tx.addCellDepsAtBegin(cellDep);
   * ```
   */
  addCellDepsAtStart(...cellDepLikes: (CellDepLike | CellDepLike[])[]): void {
    cellDepLikes.flat().forEach((cellDepLike) => {
      const cellDep = CellDep.from(cellDepLike);
      if (this.cellDeps.some((c) => c.eq(cellDep))) {
        return;
      }

      this.cellDeps.unshift(cellDep);
    });
  }

  /**
   * Add cell dep from infos if they are not existed
   *
   * @param client - A client for searching cell deps
   * @param cellDepInfoLikes - The cell dep infos to add
   *
   * @example
   * ```typescript
   * tx.addCellDepInfos(client, cellDepInfos);
   * ```
   */
  async addCellDepInfos(
    client: Client,
    ...cellDepInfoLikes: (CellDepInfoLike | CellDepInfoLike[])[]
  ): Promise<void> {
    this.addCellDeps(await client.getCellDeps(...cellDepInfoLikes));
  }

  /**
   * Add cell deps from known script
   *
   * @param client - The client for searching known script and cell deps
   * @param scripts - The known scripts to add
   *
   * @example
   * ```typescript
   * tx.addCellDepsOfKnownScripts(client, KnownScript.OmniLock);
   * ```
   */
  async addCellDepsOfKnownScripts(
    client: Client,
    ...scripts: (KnownScript | KnownScript[])[]
  ): Promise<void> {
    await Promise.all(
      scripts
        .flat()
        .map(async (script) =>
          this.addCellDepInfos(
            client,
            (await client.getKnownScript(script)).cellDeps,
          ),
        ),
    );
  }

  /**
   * Set output data at index.
   *
   * @param index - The index of the output data.
   * @param witness - The data to set.
   *
   * @example
   * ```typescript
   * await tx.setOutputDataAt(0, "0x00");
   * ```
   */
  setOutputDataAt(index: number, witness: HexLike): void {
    if (this.outputsData.length < index) {
      this.outputsData.push(
        ...Array.from(
          new Array(index - this.outputsData.length),
          (): Hex => "0x",
        ),
      );
    }

    this.outputsData[index] = hexFrom(witness);
  }

  /**
   * get input
   *
   * @param index - The cell input index
   *
   * @example
   * ```typescript
   * await tx.getInput(0);
   * ```
   */
  getInput(index: NumLike): CellInput | undefined {
    return this.inputs[Number(numFrom(index))];
  }
  /**
   * add input
   *
   * @param inputLike - The cell input.
   *
   * @example
   * ```typescript
   * await tx.addInput({ });
   * ```
   */
  addInput(inputLike: CellInputLike): number {
    return this.inputs.push(CellInput.from(inputLike));
  }

  /**
   * get output
   *
   * @param index - The cell output index
   *
   * @example
   * ```typescript
   * await tx.getOutput(0);
   * ```
   */
  getOutput(index: NumLike):
    | {
        cellOutput: CellOutput;
        outputData: Hex;
      }
    | undefined {
    const i = Number(numFrom(index));
    if (i >= this.outputs.length) {
      return;
    }
    return {
      cellOutput: this.outputs[i],
      outputData: this.outputsData[i] ?? "0x",
    };
  }
  /**
   * Add output
   *
   * @param outputLike - The cell output to add
   * @param outputData - optional output data
   *
   * @example
   * ```typescript
   * await tx.addOutput(cellOutput, "0xabcd");
   * ```
   */
  addOutput(
    outputLike: Omit<CellOutputLike, "capacity"> &
      Partial<Pick<CellOutputLike, "capacity">>,
    outputData: HexLike = "0x",
  ): number {
    const output = CellOutput.from({
      ...outputLike,
      capacity: outputLike.capacity ?? 0,
    });
    if (output.capacity === Zero) {
      output.capacity = fixedPointFrom(
        output.occupiedSize + bytesFrom(outputData).length,
      );
    }
    const len = this.outputs.push(output);
    this.setOutputDataAt(len - 1, outputData);

    return len;
  }

  /**
   * Get witness at index as WitnessArgs
   *
   * @param index - The index of the witness.
   * @returns The witness parsed as WitnessArgs.
   *
   * @example
   * ```typescript
   * const witnessArgs = await tx.getWitnessArgsAt(0);
   * ```
   */
  getWitnessArgsAt(index: number): WitnessArgs | undefined {
    const rawWitness = this.witnesses[index];
    return (rawWitness ?? "0x") !== "0x"
      ? WitnessArgs.fromBytes(rawWitness)
      : undefined;
  }

  /**
   * Set witness at index by WitnessArgs
   *
   * @param index - The index of the witness.
   * @param witness - The WitnessArgs to set.
   *
   * @example
   * ```typescript
   * await tx.setWitnessArgsAt(0, witnessArgs);
   * ```
   */
  setWitnessArgsAt(index: number, witness: WitnessArgs): void {
    if (this.witnesses.length < index) {
      this.witnesses.push(
        ...Array.from(
          new Array(index - this.witnesses.length),
          (): Hex => "0x",
        ),
      );
    }

    this.witnesses[index] = hexFrom(witness.toBytes());
  }

  /**
   * Prepare dummy witness for sighash all method
   *
   * @param scriptLike - The script associated with the transaction, represented as a ScriptLike object.
   * @param lockLen - The length of dummy lock bytes.
   * @param client - The client for complete extra infos in the transaction.
   * @returns A promise that resolves to the prepared transaction
   *
   * @example
   * ```typescript
   * await tx.prepareSighashAllWitness(scriptLike, 85, client);
   * ```
   */
  async prepareSighashAllWitness(
    scriptLike: ScriptLike,
    lockLen: number,
    client: Client,
  ): Promise<void> {
    const position = await this.findInputIndexByLock(scriptLike, client);
    if (position === undefined) {
      return;
    }

    const witness = this.getWitnessArgsAt(position) ?? WitnessArgs.from({});
    witness.lock = hexFrom(Array.from(new Array(lockLen), () => 0));
    this.setWitnessArgsAt(position, witness);
  }

  async getInputsCapacity(client: Client): Promise<Num> {
    return reduceAsync(
      this.inputs,
      async (acc, input) => {
        await input.completeExtraInfos(client);
        if (!input.cellOutput) {
          throw new Error("Unable to complete input");
        }
        return acc + input.cellOutput.capacity;
      },
      numFrom(0),
    );
  }

  getOutputsCapacity(): Num {
    return this.outputs.reduce(
      (acc, { capacity }) => acc + capacity,
      numFrom(0),
    );
  }

  async getInputsUdtBalance(client: Client, type: ScriptLike): Promise<Num> {
    return reduceAsync(
      this.inputs,
      async (acc, input) => {
        await input.completeExtraInfos(client);
        if (!input.cellOutput || !input.outputData) {
          throw new Error("Unable to complete input");
        }
        if (!input.cellOutput.type?.eq(type)) {
          return;
        }

        return acc + udtBalanceFrom(input.outputData);
      },
      numFrom(0),
    );
  }

  getOutputsUdtBalance(type: ScriptLike): Num {
    return this.outputs.reduce((acc, output, i) => {
      if (!output.type?.eq(type)) {
        return acc;
      }

      return acc + udtBalanceFrom(this.outputsData[i]);
    }, numFrom(0));
  }

  async completeInputs<T>(
    from: Signer,
    filter: ClientCollectableSearchKeyFilterLike,
    accumulator: (
      acc: T,
      v: Cell,
      i: number,
      array: Cell[],
    ) => Promise<T | undefined> | T | undefined,
    init: T,
  ): Promise<{
    addedCount: number;
    accumulated?: T;
  }> {
    const collectedCells = [];

    let acc: T = init;
    let fulfilled = false;
    for await (const cell of from.findCells(filter, true)) {
      if (
        this.inputs.some(({ previousOutput }) =>
          previousOutput.eq(cell.outPoint),
        )
      ) {
        continue;
      }
      const i = collectedCells.push(cell);
      const next = await Promise.resolve(
        accumulator(acc, cell, i - 1, collectedCells),
      );
      if (next === undefined) {
        fulfilled = true;
        break;
      }
      acc = next;
    }

    collectedCells.forEach((cell) => this.addInput(cell));
    if (fulfilled) {
      return {
        addedCount: collectedCells.length,
      };
    }

    return {
      addedCount: collectedCells.length,
      accumulated: acc,
    };
  }

  async completeInputsByCapacity(
    from: Signer,
    capacityTweak?: NumLike,
    filter?: ClientCollectableSearchKeyFilterLike,
  ): Promise<number> {
    const exceptedCapacity =
      this.getOutputsCapacity() + numFrom(capacityTweak ?? 0);
    const inputsCapacity = await this.getInputsCapacity(from.client);
    if (inputsCapacity >= exceptedCapacity) {
      return 0;
    }

    const { addedCount, accumulated } = await this.completeInputs(
      from,
      filter ?? {
        scriptLenRange: [0, 1],
        outputDataLenRange: [0, 1],
      },
      (acc, { cellOutput: { capacity } }) => {
        const sum = acc + capacity;
        return sum >= exceptedCapacity ? undefined : sum;
      },
      inputsCapacity,
    );

    if (accumulated === undefined) {
      return addedCount;
    }

    throw new Error(
      `Insufficient CKB, need ${fixedPointToString(exceptedCapacity - accumulated)} extra CKB`,
    );
  }

  async completeInputsAll(
    from: Signer,
    filter?: ClientCollectableSearchKeyFilterLike,
  ): Promise<number> {
    const { addedCount } = await this.completeInputs(
      from,
      filter ?? {
        scriptLenRange: [0, 1],
        outputDataLenRange: [0, 1],
      },
      (acc, { cellOutput: { capacity } }) => acc + capacity,
      Zero,
    );

    return addedCount;
  }

  async completeInputsByUdt(
    from: Signer,
    type: ScriptLike,
    balanceTweak?: NumLike,
  ): Promise<number> {
    const exceptedBalance =
      this.getOutputsUdtBalance(type) + numFrom(balanceTweak ?? 0);
    const inputsBalance = await this.getInputsUdtBalance(from.client, type);
    if (inputsBalance >= exceptedBalance) {
      return 0;
    }

    const { addedCount, accumulated } = await this.completeInputs(
      from,
      {
        script: type,
        outputDataLenRange: [16, numFrom("0xffffffff")],
      },
      (acc, { outputData }) => {
        const balance = udtBalanceFrom(outputData);
        const sum = acc + balance;
        return sum >= exceptedBalance ? undefined : sum;
      },
      inputsBalance,
    );

    if (accumulated === undefined) {
      return addedCount;
    }

    throw new Error(
      `Insufficient coin, need ${exceptedBalance - accumulated} extra coin`,
    );
  }

  async completeInputsAddOne(
    from: Signer,
    filter?: ClientCollectableSearchKeyFilterLike,
  ): Promise<number> {
    for await (const cell of from.findCells(
      filter ?? {
        scriptLenRange: [0, 1],
        outputDataLenRange: [0, 1],
      },
      true,
      undefined,
      1,
    )) {
      if (
        this.inputs.some(({ previousOutput }) =>
          previousOutput.eq(cell.outPoint),
        )
      ) {
        continue;
      }

      this.addInput(cell);
      return 1;
    }

    throw new Error(`Insufficient CKB, need at least one new cell`);
  }

  async completeInputsAtLeastOne(
    from: Signer,
    filter?: ClientCollectableSearchKeyFilterLike,
  ): Promise<number> {
    if (this.inputs.length > 0) {
      return 0;
    }

    return this.completeInputsAddOne(from, filter);
  }

  async fee(client: Client): Promise<Num> {
    return (await this.getInputsCapacity(client)) - this.getOutputsCapacity();
  }

  async feeRate(client: Client): Promise<Num> {
    return (
      ((await this.fee(client)) * numFrom(1000)) /
      numFrom(this.toBytes().length + 4)
    );
  }

  estimateFee(feeRate: NumLike): Num {
    const txSize = this.toBytes().length + 4;
    // + 999 then / 1000 to ceil the calculated fee
    return (numFrom(txSize) * numFrom(feeRate) + numFrom(999)) / numFrom(1000);
  }

  async completeFee(
    from: Signer,
    change: (tx: Transaction, capacity: Num) => Promise<NumLike> | NumLike,
    expectedFeeRate?: NumLike,
    filter?: ClientCollectableSearchKeyFilterLike,
    options?: { feeRateBlockRange?: NumLike; maxFeeRate?: NumLike },
  ): Promise<[number, boolean]> {
    const feeRate =
      expectedFeeRate ??
      (await from.client.getFeeRate(options?.feeRateBlockRange, options));

    // Complete all inputs extra infos for cache
    await this.getInputsCapacity(from.client);

    let leastFee = Zero;
    let leastExtraCapacity = Zero;

    while (true) {
      const tx = this.clone();
      const collected = await (async () => {
        try {
          return await tx.completeInputsByCapacity(
            from,
            leastFee + leastExtraCapacity,
            filter,
          );
        } catch (err) {
          if (leastExtraCapacity !== Zero) {
            throw new Error("Not enough capacity for the change cell");
          }

          throw err;
        }
      })();

      await from.prepareTransaction(tx);
      if (leastFee === Zero) {
        // The initial fee is calculated based on prepared transaction
        leastFee = tx.estimateFee(feeRate);
      }
      const fee = await tx.fee(from.client);
      // The extra capacity paid the fee without a change
      if (fee === leastFee) {
        this.copy(tx);
        return [collected, false];
      }

      const needed = numFrom(await Promise.resolve(change(tx, fee - leastFee)));
      // No enough extra capacity to create new cells for change
      if (needed > Zero) {
        leastExtraCapacity = needed;
        continue;
      }

      if ((await tx.fee(from.client)) !== leastFee) {
        throw new Error(
          "The change function doesn't use all available capacity",
        );
      }

      // New change cells created, update the fee
      await from.prepareTransaction(tx);
      const changedFee = tx.estimateFee(feeRate);
      if (leastFee > changedFee) {
        throw new Error("The change function removed existed transaction data");
      }
      // The fee has been paid
      if (leastFee === changedFee) {
        this.copy(tx);
        return [collected, true];
      }

      // The fee after changing is more than the original fee
      leastFee = changedFee;
    }
  }

  completeFeeChangeToLock(
    from: Signer,
    change: ScriptLike,
    feeRate?: NumLike,
    filter?: ClientCollectableSearchKeyFilterLike,
  ): Promise<[number, boolean]> {
    const script = Script.from(change);

    return this.completeFee(
      from,
      (tx, capacity) => {
        const changeCell = CellOutput.from({ capacity: 0, lock: script });
        const occupiedCapacity = fixedPointFrom(changeCell.occupiedSize);
        if (capacity < occupiedCapacity) {
          return occupiedCapacity;
        }
        changeCell.capacity = capacity;
        tx.addOutput(changeCell);
        return 0;
      },
      feeRate,
      filter,
    );
  }

  async completeFeeBy(
    from: Signer,
    feeRate?: NumLike,
    filter?: ClientCollectableSearchKeyFilterLike,
  ): Promise<[number, boolean]> {
    const { script } = await from.getRecommendedAddressObj();

    return this.completeFeeChangeToLock(from, script, feeRate, filter);
  }

  completeFeeChangeToOutput(
    from: Signer,
    index: NumLike,
    feeRate?: NumLike,
    filter?: ClientCollectableSearchKeyFilterLike,
  ): Promise<[number, boolean]> {
    const change = Number(numFrom(index));
    if (!this.outputs[change]) {
      throw new Error("Non-existed output to change");
    }
    return this.completeFee(
      from,
      (tx, capacity) => {
        tx.outputs[change].capacity += capacity;
        return 0;
      },
      feeRate,
      filter,
    );
  }
}


================================================
File: packages/core/src/ckb/transactionLumos.ts
================================================
import { CellDepLike, CellOutputLike, OutPointLike } from "../ckb/index.js";
import { HexLike } from "../hex/index.js";

export interface LumosTransactionSkeletonType {
  cellDeps: {
    toArray(): CellDepLike[];
  };
  headerDeps: {
    toArray(): HexLike[];
  };
  inputs: {
    toArray(): {
      outPoint?: OutPointLike;
      cellOutput: CellOutputLike;
      data: HexLike;
    }[];
  };
  inputSinces: {
    get(i: number, defaultVal: string): HexLike;
  };
  outputs: {
    toArray(): { cellOutput: CellOutputLike; data: HexLike }[];
  };
  witnesses: {
    toArray(): HexLike[];
  };
}


================================================
File: packages/core/src/client/advanced.ts
================================================
export * from "./cache/advanced.js";
export * from "./clientPublicMainnet.advanced.js";
export * from "./clientPublicTestnet.advanced.js";
export * from "./clientTypes.advanced.js";
export * from "./jsonRpc/advanced.js";


================================================
File: packages/core/src/client/client.ts
================================================
import {
  Cell,
  CellDep,
  OutPoint,
  OutPointLike,
  ScriptLike,
  Transaction,
  TransactionLike,
} from "../ckb/index.js";
import { Zero } from "../fixedPoint/index.js";
import { Hex, HexLike, hexFrom } from "../hex/index.js";
import { Num, NumLike, numFrom, numMax, numMin } from "../num/index.js";
import { reduceAsync, sleep } from "../utils/index.js";
import { ClientCache } from "./cache/index.js";
import { ClientCacheMemory } from "./cache/memory.js";
import {
  CONFIRMED_BLOCK_TIME,
  ClientCollectableSearchKeyLike,
  DEFAULT_MAX_FEE_RATE,
  DEFAULT_MIN_FEE_RATE,
} from "./clientTypes.advanced.js";
import {
  CellDepInfo,
  CellDepInfoLike,
  ClientBlock,
  ClientBlockHeader,
  ClientFindCellsResponse,
  ClientFindTransactionsGroupedResponse,
  ClientFindTransactionsResponse,
  ClientIndexerSearchKey,
  ClientIndexerSearchKeyLike,
  ClientIndexerSearchKeyTransactionLike,
  ClientTransactionResponse,
  ErrorClientMaxFeeRateExceeded,
  ErrorClientWaitTransactionTimeout,
  KnownScript,
  OutputsValidator,
  ScriptInfo,
} from "./clientTypes.js";

function hasHeaderConfirmed(header: ClientBlockHeader): boolean {
  return numFrom(Date.now()) - header.timestamp >= CONFIRMED_BLOCK_TIME;
}

/**
 * @public
 */
export abstract class Client {
  public cache: ClientCache;

  constructor(config?: { cache?: ClientCache }) {
    this.cache = config?.cache ?? new ClientCacheMemory();
  }

  abstract get url(): string;
  abstract get addressPrefix(): string;

  abstract getKnownScript(script: KnownScript): Promise<ScriptInfo>;

  abstract getFeeRateStatistics(
    blockRange?: NumLike,
  ): Promise<{ mean: Num; median: Num }>;
  async getFeeRate(
    blockRange?: NumLike,
    options?: { maxFeeRate?: NumLike },
  ): Promise<Num> {
    const feeRate = numMax(
      (await this.getFeeRateStatistics(blockRange)).median,
      DEFAULT_MIN_FEE_RATE,
    );

    const maxFeeRate = numFrom(options?.maxFeeRate ?? DEFAULT_MAX_FEE_RATE);
    if (maxFeeRate === Zero) {
      return feeRate;
    }

    return numMin(feeRate, maxFeeRate);
  }

  abstract getTip(): Promise<Num>;
  abstract getTipHeader(verbosity?: number | null): Promise<ClientBlockHeader>;
  abstract getBlockByNumberNoCache(
    blockNumber: NumLike,
    verbosity?: number | null,
    withCycles?: boolean | null,
  ): Promise<ClientBlock | undefined>;
  abstract getBlockByHashNoCache(
    blockHash: HexLike,
    verbosity?: number | null,
    withCycles?: boolean | null,
  ): Promise<ClientBlock | undefined>;
  abstract getHeaderByNumberNoCache(
    blockNumber: NumLike,
    verbosity?: number | null,
  ): Promise<ClientBlockHeader | undefined>;
  abstract getHeaderByHashNoCache(
    blockHash: HexLike,
    verbosity?: number | null,
  ): Promise<ClientBlockHeader | undefined>;
  async getBlockByNumber(
    blockNumber: NumLike,
    verbosity?: number | null,
    withCycles?: boolean | null,
  ): Promise<ClientBlock | undefined> {
    const block = await this.cache.getBlockByNumber(blockNumber);
    if (block) {
      return block;
    }

    const res = await this.getBlockByNumberNoCache(
      blockNumber,
      verbosity,
      withCycles,
    );
    if (res && hasHeaderConfirmed(res.header)) {
      await this.cache.recordBlocks(res);
    }
    return res;
  }
  async getBlockByHash(
    blockHash: HexLike,
    verbosity?: number | null,
    withCycles?: boolean | null,
  ): Promise<ClientBlock | undefined> {
    const block = await this.cache.getBlockByHash(blockHash);
    if (block) {
      return block;
    }

    const res = await this.getBlockByHashNoCache(
      blockHash,
      verbosity,
      withCycles,
    );
    if (res && hasHeaderConfirmed(res.header)) {
      await this.cache.recordBlocks(res);
    }
    return res;
  }
  async getHeaderByNumber(
    blockNumber: NumLike,
    verbosity?: number | null,
  ): Promise<ClientBlockHeader | undefined> {
    const header = await this.cache.getHeaderByNumber(blockNumber);
    if (header) {
      return header;
    }

    const res = await this.getHeaderByNumberNoCache(blockNumber, verbosity);
    if (res && hasHeaderConfirmed(res)) {
      await this.cache.recordHeaders(res);
    }
    return res;
  }
  async getHeaderByHash(
    blockHash: HexLike,
    verbosity?: number | null,
  ): Promise<ClientBlockHeader | undefined> {
    const header = await this.cache.getHeaderByHash(blockHash);
    if (header) {
      return header;
    }

    const res = await this.getHeaderByHashNoCache(blockHash, verbosity);
    if (res && hasHeaderConfirmed(res)) {
      await this.cache.recordHeaders(res);
    }
    return res;
  }

  abstract estimateCycles(transaction: TransactionLike): Promise<Num>;
  abstract sendTransactionDry(
    transaction: TransactionLike,
    validator?: OutputsValidator,
  ): Promise<Num>;

  abstract sendTransactionNoCache(
    transaction: TransactionLike,
    validator?: OutputsValidator,
  ): Promise<Hex>;
  abstract getTransactionNoCache(
    txHash: HexLike,
  ): Promise<ClientTransactionResponse | undefined>;

  async getCell(outPointLike: OutPointLike): Promise<Cell | undefined> {
    const outPoint = OutPoint.from(outPointLike);
    const cached = await this.cache.getCell(outPoint);

    if (cached) {
      return cached;
    }

    const transaction = await this.getTransaction(outPoint.txHash);
    if (!transaction) {
      return;
    }
    const output = transaction.transaction.getOutput(outPoint.index);
    if (!output) {
      return;
    }

    const cell = Cell.from({
      outPoint,
      ...output,
    });
    await this.cache.recordCells(cell);
    return cell;
  }

  async getCellWithHeader(
    outPointLike: OutPointLike,
  ): Promise<{ cell: Cell; header?: ClientBlockHeader } | undefined> {
    const outPoint = OutPoint.from(outPointLike);

    const res = await this.getTransactionWithHeader(outPoint.txHash);
    if (!res) {
      return;
    }
    const { transaction, header } = res;

    const output = transaction.transaction.getOutput(outPoint.index);
    if (!output) {
      return;
    }

    const cell = Cell.from({
      outPoint,
      ...output,
    });
    await this.cache.recordCells(cell);
    return { cell, header };
  }

  abstract getCellLiveNoCache(
    outPointLike: OutPointLike,
    withData?: boolean | null,
    includeTxPool?: boolean | null,
  ): Promise<Cell | undefined>;
  async getCellLive(
    outPointLike: OutPointLike,
    withData?: boolean | null,
    includeTxPool?: boolean | null,
  ): Promise<Cell | undefined> {
    const cell = await this.getCellLiveNoCache(
      outPointLike,
      withData,
      includeTxPool,
    );
    if (withData && cell) {
      await this.cache.recordCells(cell);
    }
    return cell;
  }

  abstract findCellsPagedNoCache(
    key: ClientIndexerSearchKeyLike,
    order?: "asc" | "desc",
    limit?: NumLike,
    after?: string,
  ): Promise<ClientFindCellsResponse>;
  async findCellsPaged(
    key: ClientIndexerSearchKeyLike,
    order?: "asc" | "desc",
    limit?: NumLike,
    after?: string,
  ): Promise<ClientFindCellsResponse> {
    const res = await this.findCellsPagedNoCache(key, order, limit, after);
    await this.cache.recordCells(res.cells);
    return res;
  }

  async *findCellsOnChain(
    key: ClientIndexerSearchKeyLike,
    order?: "asc" | "desc",
    limit = 10,
  ): AsyncGenerator<Cell> {
    let last: string | undefined = undefined;

    while (true) {
      const { cells, lastCursor } = await this.findCellsPaged(
        key,
        order,
        limit,
        last,
      );
      for (const cell of cells) {
        yield cell;
      }
      if (cells.length === 0 || cells.length < limit) {
        return;
      }
      last = lastCursor;
    }
  }

  /**
   * Find cells by search key designed for collectable cells.
   *
   * @param keyLike - The search key.
   * @returns A async generator for yielding cells.
   */
  async *findCells(
    keyLike: ClientCollectableSearchKeyLike,
    order?: "asc" | "desc",
    limit = 10,
  ): AsyncGenerator<Cell> {
    const key = ClientIndexerSearchKey.from(keyLike);
    const foundedOutPoints = [];

    for await (const cell of this.cache.findCells(key)) {
      foundedOutPoints.push(cell.outPoint);
      yield cell;
    }

    for await (const cell of this.findCellsOnChain(key, order, limit)) {
      if (
        (await this.cache.isUnusable(cell.outPoint)) ||
        foundedOutPoints.some((founded) => founded.eq(cell.outPoint))
      ) {
        continue;
      }

      yield cell;
    }
  }

  findCellsByLock(
    lock: ScriptLike,
    type?: ScriptLike | null,
    withData = true,
    order?: "asc" | "desc",
    limit = 10,
  ): AsyncGenerator<Cell> {
    return this.findCells(
      {
        script: lock,
        scriptType: "lock",
        scriptSearchMode: "exact",
        filter: {
          script: type,
        },
        withData,
      },
      order,
      limit,
    );
  }

  findCellsByType(
    type: ScriptLike,
    withData = true,
    order?: "asc" | "desc",
    limit = 10,
  ): AsyncGenerator<Cell> {
    return this.findCells(
      {
        script: type,
        scriptType: "type",
        scriptSearchMode: "exact",
        withData,
      },
      order,
      limit,
    );
  }

  async findSingletonCellByType(
    type: ScriptLike,
    withData = false,
  ): Promise<Cell | undefined> {
    for await (const cell of this.findCellsByType(
      type,
      withData,
      undefined,
      1,
    )) {
      return cell;
    }
  }

  async getCellDeps(
    ...cellDepsInfoLike: (CellDepInfoLike | CellDepInfoLike[])[]
  ): Promise<CellDep[]> {
    return Promise.all(
      cellDepsInfoLike.flat().map(async (infoLike) => {
        const { cellDep, type } = CellDepInfo.from(infoLike);
        if (type === undefined) {
          return cellDep;
        }
        const found = await this.findSingletonCellByType(type);
        if (!found) {
          return cellDep;
        }

        return CellDep.from({
          outPoint: found.outPoint,
          depType: cellDep.depType,
        });
      }),
    );
  }

  abstract findTransactionsPaged(
    key: Omit<ClientIndexerSearchKeyTransactionLike, "groupByTransaction"> & {
      groupByTransaction: true;
    },
    order?: "asc" | "desc",
    limit?: NumLike,
    after?: string,
  ): Promise<ClientFindTransactionsGroupedResponse>;
  abstract findTransactionsPaged(
    key: Omit<ClientIndexerSearchKeyTransactionLike, "groupByTransaction"> & {
      groupByTransaction?: false | null;
    },
    order?: "asc" | "desc",
    limit?: NumLike,
    after?: string,
  ): Promise<ClientFindTransactionsResponse>;
  abstract findTransactionsPaged(
    key: ClientIndexerSearchKeyTransactionLike,
    order?: "asc" | "desc",
    limit?: NumLike,
    after?: string,
  ): Promise<
    ClientFindTransactionsResponse | ClientFindTransactionsGroupedResponse
  >;

  findTransactions(
    key: Omit<ClientIndexerSearchKeyTransactionLike, "groupByTransaction"> & {
      groupByTransaction: true;
    },
    order?: "asc" | "desc",
    limit?: number,
  ): AsyncGenerator<ClientFindTransactionsGroupedResponse["transactions"][0]>;
  findTransactions(
    key: Omit<ClientIndexerSearchKeyTransactionLike, "groupByTransaction"> & {
      groupByTransaction?: false | null;
    },
    order?: "asc" | "desc",
    limit?: number,
  ): AsyncGenerator<ClientFindTransactionsResponse["transactions"][0]>;
  findTransactions(
    key: ClientIndexerSearchKeyTransactionLike,
    order?: "asc" | "desc",
    limit?: number,
  ): AsyncGenerator<
    | ClientFindTransactionsResponse["transactions"][0]
    | ClientFindTransactionsGroupedResponse["transactions"][0]
  >;
  async *findTransactions(
    key: ClientIndexerSearchKeyTransactionLike,
    order?: "asc" | "desc",
    limit = 10,
  ): AsyncGenerator<
    | ClientFindTransactionsResponse["transactions"][0]
    | ClientFindTransactionsGroupedResponse["transactions"][0]
  > {
    let last: string | undefined = undefined;

    while (true) {
      const {
        transactions,
        lastCursor,
      }:
        | ClientFindTransactionsResponse
        | ClientFindTransactionsGroupedResponse =
        await this.findTransactionsPaged(key, order, limit, last);
      for (const tx of transactions) {
        yield tx;
      }
      if (transactions.length === 0 || transactions.length < limit) {
        return;
      }
      last = lastCursor;
    }
  }

  findTransactionsByLock(
    lock: ScriptLike,
    type: ScriptLike | undefined | null,
    groupByTransaction: true,
    order?: "asc" | "desc",
    limit?: number,
  ): AsyncGenerator<ClientFindTransactionsGroupedResponse["transactions"][0]>;
  findTransactionsByLock(
    lock: ScriptLike,
    type?: ScriptLike | null,
    groupByTransaction?: false | null,
    order?: "asc" | "desc",
    limit?: number,
  ): AsyncGenerator<ClientFindTransactionsResponse["transactions"][0]>;
  findTransactionsByLock(
    lock: ScriptLike,
    type?: ScriptLike | null,
    groupByTransaction?: boolean | null,
    order?: "asc" | "desc",
    limit?: number,
  ): AsyncGenerator<
    | ClientFindTransactionsResponse["transactions"][0]
    | ClientFindTransactionsGroupedResponse["transactions"][0]
  >;
  findTransactionsByLock(
    lock: ScriptLike,
    type?: ScriptLike | null,
    groupByTransaction?: boolean | null,
    order?: "asc" | "desc",
    limit = 10,
  ): AsyncGenerator<
    | ClientFindTransactionsResponse["transactions"][0]
    | ClientFindTransactionsGroupedResponse["transactions"][0]
  > {
    return this.findTransactions(
      {
        script: lock,
        scriptType: "lock",
        scriptSearchMode: "exact",
        filter: {
          script: type,
        },
        groupByTransaction,
      },
      order,
      limit,
    );
  }

  findTransactionsByType(
    type: ScriptLike,
    groupByTransaction: true,
    order?: "asc" | "desc",
    limit?: number,
  ): AsyncGenerator<ClientFindTransactionsGroupedResponse["transactions"][0]>;
  findTransactionsByType(
    type: ScriptLike,
    groupByTransaction?: false | null,
    order?: "asc" | "desc",
    limit?: number,
  ): AsyncGenerator<ClientFindTransactionsResponse["transactions"][0]>;
  findTransactionsByType(
    type: ScriptLike,
    groupByTransaction?: boolean | null,
    order?: "asc" | "desc",
    limit?: number,
  ): AsyncGenerator<
    | ClientFindTransactionsResponse["transactions"][0]
    | ClientFindTransactionsGroupedResponse["transactions"][0]
  >;
  findTransactionsByType(
    type: ScriptLike,
    groupByTransaction?: boolean | null,
    order?: "asc" | "desc",
    limit = 10,
  ): AsyncGenerator<
    | ClientFindTransactionsResponse["transactions"][0]
    | ClientFindTransactionsGroupedResponse["transactions"][0]
  > {
    return this.findTransactions(
      {
        script: type,
        scriptType: "type",
        scriptSearchMode: "exact",
        groupByTransaction,
      },
      order,
      limit,
    );
  }

  abstract getCellsCapacity(key: ClientIndexerSearchKeyLike): Promise<Num>;

  async getBalanceSingle(lock: ScriptLike): Promise<Num> {
    return this.getCellsCapacity({
      script: lock,
      scriptType: "lock",
      scriptSearchMode: "exact",
      filter: {
        scriptLenRange: [0, 1],
        outputDataLenRange: [0, 1],
      },
    });
  }

  async getBalance(locks: ScriptLike[]): Promise<Num> {
    return reduceAsync(
      locks,
      async (acc, lock) => acc + (await this.getBalanceSingle(lock)),
      Zero,
    );
  }

  async sendTransaction(
    transaction: TransactionLike,
    validator?: OutputsValidator,
    options?: { maxFeeRate?: NumLike },
  ): Promise<Hex> {
    const tx = Transaction.from(transaction);

    const maxFeeRate = numFrom(options?.maxFeeRate ?? DEFAULT_MAX_FEE_RATE);
    const fee = await tx.feeRate(this);
    if (maxFeeRate > Zero && fee > maxFeeRate) {
      throw new ErrorClientMaxFeeRateExceeded(maxFeeRate, fee);
    }

    const txHash = await this.sendTransactionNoCache(tx, validator);

    await this.cache.markTransactions(tx);
    return txHash;
  }

  async getTransaction(
    txHashLike: HexLike,
  ): Promise<ClientTransactionResponse | undefined> {
    const txHash = hexFrom(txHashLike);
    const res = await this.getTransactionNoCache(txHash);
    if (res) {
      await this.cache.recordTransactionResponses(res);
      return res;
    }

    return this.cache.getTransactionResponse(txHash);
  }

  /**
   * This method gets specified transaction with its block header (if existed).
   * This is mainly for caching because we need the header to test if we can safely trust the cached tx status.
   * @param txHashLike
   */
  async getTransactionWithHeader(
    txHashLike: HexLike,
  ): Promise<
    | { transaction: ClientTransactionResponse; header?: ClientBlockHeader }
    | undefined
  > {
    const txHash = hexFrom(txHashLike);
    const tx = await this.cache.getTransactionResponse(txHash);
    if (tx?.blockHash) {
      const header = await this.getHeaderByHash(tx.blockHash);
      if (header && hasHeaderConfirmed(header)) {
        return {
          transaction: tx,
          header,
        };
      }
    }

    const res = await this.getTransactionNoCache(txHash);
    if (!res) {
      return;
    }

    await this.cache.recordTransactionResponses(res);
    return {
      transaction: res,
      header: res.blockHash
        ? await this.getHeaderByHash(res.blockHash)
        : undefined,
    };
  }

  async waitTransaction(
    txHash: HexLike,
    confirmations: number = 0,
    timeout: number = 60000,
    interval: number = 2000,
  ): Promise<ClientTransactionResponse | undefined> {
    const startTime = Date.now();
    let tx: ClientTransactionResponse | undefined;

    const getTx = async () => {
      const res = await this.getTransaction(txHash);
      if (
        !res ||
        res.blockNumber == null ||
        ["sent", "pending", "proposed"].includes(res.status)
      ) {
        return undefined;
      }

      tx = res;
      return res;
    };

    while (true) {
      if (!tx) {
        if (await getTx()) {
          continue;
        }
      } else if (confirmations === 0) {
        return tx;
      } else if (
        (await this.getTipHeader()).number - tx.blockNumber! >=
        confirmations
      ) {
        return tx;
      }

      if (Date.now() - startTime + interval >= timeout) {
        throw new ErrorClientWaitTransactionTimeout(timeout);
      }
      await sleep(interval);
    }
  }
}


================================================
File: packages/core/src/client/clientPublicMainnet.advanced.ts
================================================
import { KnownScript, ScriptInfoLike } from "./clientTypes.js";

export const MAINNET_SCRIPTS: Record<KnownScript, ScriptInfoLike | undefined> =
  Object.freeze({
    [KnownScript.NervosDao]: {
      codeHash:
        "0x82d76d1b75fe2fd9a27dfbaa65a039221a380d76c926f378d3f81cf3e7e13f2e",
      hashType: "type",
      cellDeps: [
        {
          cellDep: {
            outPoint: {
              txHash:
                "0xe2fb199810d49a4d8beec56718ba2593b665db9d52299a0f9e6e75416d73ff5c",
              index: 2,
            },
            depType: "code",
          },
        },
      ],
    },
    [KnownScript.Secp256k1Blake160]: {
      codeHash:
        "0x9bd7e06f3ecf4be0f2fcd2188b23f1b9fcc88e5d4b65a8637b17723bbda3cce8",
      hashType: "type",
      cellDeps: [
        {
          cellDep: {
            outPoint: {
              txHash:
                "0x71a7ba8fc96349fea0ed3a5c47992e3b4084b031a42264a018e0072e8172e46c",
              index: 0,
            },
            depType: "depGroup",
          },
        },
      ],
    },
    [KnownScript.Secp256k1Multisig]: {
      codeHash:
        "0x5c5069eb0857efc65e1bca0c07df34c31663b3622fd3876c876320fc9634e2a8",
      hashType: "type",
      cellDeps: [
        {
          cellDep: {
            outPoint: {
              txHash:
                "0x71a7ba8fc96349fea0ed3a5c47992e3b4084b031a42264a018e0072e8172e46c",
              index: 1,
            },
            depType: "depGroup",
          },
        },
      ],
    },
    [KnownScript.AnyoneCanPay]: {
      codeHash:
        "0xd369597ff47f29fbc0d47d2e3775370d1250b85140c670e4718af712983a2354",
      hashType: "type",
      cellDeps: [
        {
          cellDep: {
            outPoint: {
              txHash:
                "0x4153a2014952d7cac45f285ce9a7c5c0c0e1b21f2d378b82ac1433cb11c25c4d",
              index: 0,
            },
            depType: "depGroup",
          },
        },
      ],
    },
    [KnownScript.TypeId]: {
      codeHash:
        "0x00000000000000000000000000000000000000000000000000545950455f4944",
      hashType: "type",
      cellDeps: [],
    },
    [KnownScript.XUdt]: {
      codeHash:
        "0x50bd8d6680b8b9cf98b73f3c08faf8b2a21914311954118ad6609be6e78a1b95",
      hashType: "data1",
      cellDeps: [
        {
          cellDep: {
            outPoint: {
              txHash:
                "0xc07844ce21b38e4b071dd0e1ee3b0e27afd8d7532491327f39b786343f558ab7",
              index: 0,
            },
            depType: "code",
          },
        },
      ],
    },
    [KnownScript.JoyId]: {
      codeHash:
        "0xd00c84f0ec8fd441c38bc3f87a371f547190f2fcff88e642bc5bf54b9e318323",
      hashType: "type",
      cellDeps: [
        {
          cellDep: {
            outPoint: {
              txHash:
                "0xf05188e5f3a6767fc4687faf45ba5f1a6e25d3ada6129dae8722cb282f262493",
              index: 0,
            },
            depType: "depGroup",
          },
        },
      ],
    },
    [KnownScript.COTA]: {
      codeHash:
        "0x1122a4fb54697cf2e6e3a96c9d80fd398a936559b90954c6e88eb7ba0cf652df",
      hashType: "type",
      cellDeps: [
        {
          cellDep: {
            outPoint: {
              txHash:
                "0xabaa25237554f0d6c586dc010e7e85e6870bcfd9fb8773257ecacfbe1fd738a0",
              index: 0,
            },
            depType: "depGroup",
          },
        },
      ],
    },
    [KnownScript.PWLock]: {
      codeHash:
        "0xbf43c3602455798c1a61a596e0d95278864c552fafe231c063b3fabf97a8febc",
      hashType: "type",
      cellDeps: [
        {
          cellDep: {
            outPoint: {
              txHash:
                "0x71a7ba8fc96349fea0ed3a5c47992e3b4084b031a42264a018e0072e8172e46c",
              index: 0,
            },
            depType: "depGroup",
          },
        },
        {
          cellDep: {
            outPoint: {
              txHash:
                "0x1d60cb8f4666e039f418ea94730b1a8c5aa0bf2f7781474406387462924d15d4",
              index: 0,
            },
            depType: "code",
          },
          type: {
            codeHash:
              "0x00000000000000000000000000000000000000000000000000545950455f4944",
            hashType: "type",
            args: "0x42ade2f25eb938b5dbfd3d8f07b8b07aa593d848e7ff14bdfbbea5aeb6175261",
          },
        },
      ],
    },
    [KnownScript.OmniLock]: {
      codeHash:
        "0x9b819793a64463aed77c615d6cb226eea5487ccfc0783043a587254cda2b6f26",
      hashType: "type",
      cellDeps: [
        {
          cellDep: {
            outPoint: {
              txHash:
                "0x71a7ba8fc96349fea0ed3a5c47992e3b4084b031a42264a018e0072e8172e46c",
              index: 0,
            },
            depType: "depGroup",
          },
        },
        {
          cellDep: {
            outPoint: {
              txHash:
                "0xc76edf469816aa22f416503c38d0b533d2a018e253e379f134c3985b3472c842",
              index: 0,
            },
            depType: "code",
          },
          type: {
            codeHash:
              "0x00000000000000000000000000000000000000000000000000545950455f4944",
            hashType: "type",
            args: "0x855508fe0f0ca25b935b070452ecaee48f6c9f1d66cd15f046616b99e948236a",
          },
        },
      ],
    },
    [KnownScript.NostrLock]: {
      codeHash:
        "0x641a89ad2f77721b803cd50d01351c1f308444072d5fa20088567196c0574c68",
      hashType: "type",
      cellDeps: [
        {
          cellDep: {
            outPoint: {
              txHash:
                "0x1911208b136957d5f7c1708a8835edfe8ae1d02700d5cb2c3a6aacf4d5906306",
              index: 0,
            },
            depType: "code",
          },
          type: {
            codeHash:
              "0x00000000000000000000000000000000000000000000000000545950455f4944",
            hashType: "type",
            args: "0xfad8cb75eb0bb01718e2336002064568bc05887af107f74ed5dd501829e192f8",
          },
        },
      ],
    },
    [KnownScript.UniqueType]: {
      codeHash:
        "0x2c8c11c985da60b0a330c61a85507416d6382c130ba67f0c47ab071e00aec628",
      hashType: "data1",
      cellDeps: [
        {
          cellDep: {
            outPoint: {
              txHash:
                "0x67524c01c0cb5492e499c7c7e406f2f9d823e162d6b0cf432eacde0c9808c2ad",
              index: 0,
            },
            depType: "code",
          },
        },
      ],
    },
    [KnownScript.AlwaysSuccess]: {
      codeHash:
        "0x3b521cc4b552f109d092d8cc468a8048acb53c5952dbe769d2b2f9cf6e47f7f1",
      hashType: "data1",
      cellDeps: [
        {
          cellDep: {
            outPoint: {
              txHash:
                "0x10d63a996157d32c01078058000052674ca58d15f921bec7f1dcdac2160eb66b",
              index: 0,
            },
            depType: "code",
          },
        },
      ],
    },
    [KnownScript.InputTypeProxyLock]: {
      codeHash:
        "0x5123908965c711b0ffd8aec642f1ede329649bda1ebdca6bd24124d3796f768a",
      hashType: "data1",
      cellDeps: [
        {
          cellDep: {
            outPoint: {
              txHash:
                "0x10d63a996157d32c01078058000052674ca58d15f921bec7f1dcdac2160eb66b",
              index: 1,
            },
            depType: "code",
          },
        },
      ],
    },
    [KnownScript.OutputTypeProxyLock]: {
      codeHash:
        "0x2df53b592db3ae3685b7787adcfef0332a611edb83ca3feca435809964c3aff2",
      hashType: "data1",
      cellDeps: [
        {
          cellDep: {
            outPoint: {
              txHash:
                "0x10d63a996157d32c01078058000052674ca58d15f921bec7f1dcdac2160eb66b",
              index: 2,
            },
            depType: "code",
          },
        },
      ],
    },
    [KnownScript.LockProxyLock]: {
      codeHash:
        "0x5d41e32e224c15f152b7e6529100ebeac83b162f5f692a5365774dad2c1a1d02",
      hashType: "data1",
      cellDeps: [
        {
          cellDep: {
            outPoint: {
              txHash:
                "0x10d63a996157d32c01078058000052674ca58d15f921bec7f1dcdac2160eb66b",
              index: 3,
            },
            depType: "code",
          },
        },
      ],
    },
    [KnownScript.SingleUseLock]: {
      codeHash:
        "0x8290467a512e5b9a6b816469b0edabba1f4ac474e28ffdd604c2a7c76446bbaf",
      hashType: "data1",
      cellDeps: [
        {
          cellDep: {
            outPoint: {
              txHash:
                "0x10d63a996157d32c01078058000052674ca58d15f921bec7f1dcdac2160eb66b",
              index: 4,
            },
            depType: "code",
          },
        },
      ],
    },
    [KnownScript.TypeBurnLock]: {
      codeHash:
        "0xff78bae0abf17d7a404c0be0f9ad9c9185b3f88dcc60403453d5ba8e1f22f53a",
      hashType: "data1",
      cellDeps: [
        {
          cellDep: {
            outPoint: {
              txHash:
                "0x10d63a996157d32c01078058000052674ca58d15f921bec7f1dcdac2160eb66b",
              index: 5,
            },
            depType: "code",
          },
        },
      ],
    },
    [KnownScript.EasyToDiscoverType]: {
      codeHash:
        "0xaba4430cc7110d699007095430a1faa72973edf2322ddbfd4d1d219cacf237af",
      hashType: "data1",
      cellDeps: [
        {
          cellDep: {
            outPoint: {
              txHash:
                "0xb0ed754fb27d67fd8388c97fed914fb7998eceaa01f3e6f967e498de1ba0ac9b",
              index: 0,
            },
            depType: "code",
          },
        },
      ],
    },
    [KnownScript.TimeLock]: {
      codeHash:
        "0x6fac4b2e89360a1e692efcddcb3a28656d8446549fb83da6d896db8b714f4451",
      hashType: "data1",
      cellDeps: [
        {
          cellDep: {
            outPoint: {
              txHash:
                "0xb0ed754fb27d67fd8388c97fed914fb7998eceaa01f3e6f967e498de1ba0ac9b",
              index: 1,
            },
            depType: "code",
          },
        },
      ],
    },
  });


================================================
File: packages/core/src/client/clientPublicMainnet.ts
================================================
import WebSocket from "isomorphic-ws";
import { MAINNET_SCRIPTS } from "./clientPublicMainnet.advanced.js";
import { KnownScript, ScriptInfo, ScriptInfoLike } from "./clientTypes.js";
import { ClientJsonRpc, ClientJsonRpcConfig } from "./jsonRpc/index.js";

/**
 * @public
 */
export class ClientPublicMainnet extends ClientJsonRpc {
  constructor(
    private readonly config?: ClientJsonRpcConfig & {
      url?: string;
      scripts?: Record<KnownScript, ScriptInfoLike | undefined>;
    },
  ) {
    const hasWebSocket = typeof WebSocket !== "undefined";
    super(
      config?.url ??
        (hasWebSocket
          ? "wss://mainnet.ckb.dev/ws"
          : "https://mainnet.ckb.dev/"),
      {
        ...config,
        fallbacks:
          config?.fallbacks ??
          (hasWebSocket
            ? [
                "wss://mainnet.ckb.dev/ws",
                "https://mainnet.ckb.dev/",
                "https://mainnet.ckbapp.dev/",
              ]
            : ["https://mainnet.ckb.dev/", "https://mainnet.ckbapp.dev/"]),
      },
    );
  }

  get scripts(): Record<KnownScript, ScriptInfoLike | undefined> {
    return this.config?.scripts ?? MAINNET_SCRIPTS;
  }

  get addressPrefix(): string {
    return "ckb";
  }

  async getKnownScript(script: KnownScript): Promise<ScriptInfo> {
    const found = this.scripts[script];
    if (!found) {
      throw new Error(
        `No script information was found for ${script} on ${this.addressPrefix}`,
      );
    }
    return ScriptInfo.from(found);
  }
}


================================================
File: packages/core/src/client/clientPublicTestnet.advanced.ts
================================================
import { KnownScript, ScriptInfoLike } from "./clientTypes.js";

export const TESTNET_SCRIPTS: Record<KnownScript, ScriptInfoLike> =
  Object.freeze({
    [KnownScript.NervosDao]: {
      codeHash:
        "0x82d76d1b75fe2fd9a27dfbaa65a039221a380d76c926f378d3f81cf3e7e13f2e",
      hashType: "type",
      cellDeps: [
        {
          cellDep: {
            outPoint: {
              txHash:
                "0x8f8c79eb6671709633fe6a46de93c0fedc9c1b8a6527a18d3983879542635c9f",
              index: 2,
            },
            depType: "code",
          },
        },
      ],
    },
    [KnownScript.Secp256k1Blake160]: {
      codeHash:
        "0x9bd7e06f3ecf4be0f2fcd2188b23f1b9fcc88e5d4b65a8637b17723bbda3cce8",
      hashType: "type",
      cellDeps: [
        {
          cellDep: {
            outPoint: {
              txHash:
                "0xf8de3bb47d055cdf460d93a2a6e1b05f7432f9777c8c474abf4eec1d4aee5d37",
              index: 0,
            },
            depType: "depGroup",
          },
        },
      ],
    },
    [KnownScript.Secp256k1Multisig]: {
      codeHash:
        "0x5c5069eb0857efc65e1bca0c07df34c31663b3622fd3876c876320fc9634e2a8",
      hashType: "type",
      cellDeps: [
        {
          cellDep: {
            outPoint: {
              txHash:
                "0xf8de3bb47d055cdf460d93a2a6e1b05f7432f9777c8c474abf4eec1d4aee5d37",
              index: 1,
            },
            depType: "depGroup",
          },
        },
      ],
    },
    [KnownScript.AnyoneCanPay]: {
      codeHash:
        "0x3419a1c09eb2567f6552ee7a8ecffd64155cffe0f1796e6e61ec088d740c1356",
      hashType: "type",
      cellDeps: [
        {
          cellDep: {
            outPoint: {
              txHash:
                "0xec26b0f85ed839ece5f11c4c4e837ec359f5adc4420410f6453b1f6b60fb96a6",
              index: 0,
            },
            depType: "depGroup",
          },
        },
      ],
    },
    [KnownScript.TypeId]: {
      codeHash:
        "0x00000000000000000000000000000000000000000000000000545950455f4944",
      hashType: "type",
      cellDeps: [],
    },
    [KnownScript.XUdt]: {
      codeHash:
        "0x25c29dc317811a6f6f3985a7a9ebc4838bd388d19d0feeecf0bcd60f6c0975bb",
      hashType: "type",
      cellDeps: [
        {
          cellDep: {
            outPoint: {
              txHash:
                "0xbf6fb538763efec2a70a6a3dcb7242787087e1030c4e7d86585bc63a9d337f5f",
              index: 0,
            },
            depType: "code",
          },
          type: {
            codeHash:
              "0x00000000000000000000000000000000000000000000000000545950455f4944",
            hashType: "type",
            args: "0x44ec8b96663e06cc94c8c468a4d46d7d9af69eaf418f6390c9f11bb763dda0ae",
          },
        },
      ],
    },
    [KnownScript.JoyId]: {
      codeHash:
        "0xd23761b364210735c19c60561d213fb3beae2fd6172743719eff6920e020baac",
      hashType: "type",
      cellDeps: [
        {
          cellDep: {
            outPoint: {
              txHash:
                "0x4dcf3f3b09efac8995d6cbee87c5345e812d310094651e0c3d9a730f32dc9263",
              index: 0,
            },
            depType: "depGroup",
          },
        },
      ],
    },
    [KnownScript.COTA]: {
      codeHash:
        "0x89cd8003a0eaf8e65e0c31525b7d1d5c1becefd2ea75bb4cff87810ae37764d8",
      hashType: "type",
      cellDeps: [
        {
          cellDep: {
            outPoint: {
              txHash:
                "0x636a786001f87cb615acfcf408be0f9a1f077001f0bbc75ca54eadfe7e221713",
              index: 0,
            },
            depType: "depGroup",
          },
        },
      ],
    },
    [KnownScript.PWLock]: {
      codeHash:
        "0x58c5f491aba6d61678b7cf7edf4910b1f5e00ec0cde2f42e0abb4fd9aff25a63",
      hashType: "type",
      cellDeps: [
        {
          cellDep: {
            outPoint: {
              txHash:
                "0xf8de3bb47d055cdf460d93a2a6e1b05f7432f9777c8c474abf4eec1d4aee5d37",
              index: 0,
            },
            depType: "depGroup",
          },
        },
        {
          cellDep: {
            outPoint: {
              txHash:
                "0x57a62003daeab9d54aa29b944fc3b451213a5ebdf2e232216a3cfed0dde61b38",
              index: 0,
            },
            depType: "code",
          },
          type: {
            codeHash:
              "0x00000000000000000000000000000000000000000000000000545950455f4944",
            hashType: "type",
            args: "0xf6d90bfe3041d0fd7e01c45770241697f5f837974bd6ae1672a7ec0f9f523268",
          },
        },
      ],
    },
    [KnownScript.OmniLock]: {
      codeHash:
        "0xf329effd1c475a2978453c8600e1eaf0bc2087ee093c3ee64cc96ec6847752cb",
      hashType: "type",
      cellDeps: [
        {
          cellDep: {
            outPoint: {
              txHash:
                "0xf8de3bb47d055cdf460d93a2a6e1b05f7432f9777c8c474abf4eec1d4aee5d37",
              index: 0,
            },
            depType: "depGroup",
          },
        },
        {
          cellDep: {
            outPoint: {
              txHash:
                "0xec18bf0d857c981c3d1f4e17999b9b90c484b303378e94de1a57b0872f5d4602",
              index: 0,
            },
            depType: "code",
          },
          type: {
            codeHash:
              "0x00000000000000000000000000000000000000000000000000545950455f4944",
            hashType: "type",
            args: "0x761f51fc9cd6a504c32c6ae64b3746594d1af27629b427c5ccf6c9a725a89144",
          },
        },
      ],
    },
    [KnownScript.NostrLock]: {
      codeHash:
        "0x6ae5ee0cb887b2df5a9a18137315b9bdc55be8d52637b2de0624092d5f0c91d5",
      hashType: "type",
      cellDeps: [
        {
          cellDep: {
            outPoint: {
              txHash:
                "0xa2a434dcdbe280b9ed75bb7d6c7d68186a842456aba0fc506657dc5ed7c01d68",
              index: 0,
            },
            depType: "code",
          },
          type: {
            codeHash:
              "0x00000000000000000000000000000000000000000000000000545950455f4944",
            hashType: "type",
            args: "0x8dc56c6f35f0c535e23ded1629b1f20535477a1b43e59f14617d11e32c50e0aa",
          },
        },
      ],
    },
    [KnownScript.UniqueType]: {
      codeHash:
        "0x8e341bcfec6393dcd41e635733ff2dca00a6af546949f70c57a706c0f344df8b",
      hashType: "type",
      cellDeps: [
        {
          cellDep: {
            outPoint: {
              txHash:
                "0xff91b063c78ed06f10a1ed436122bd7d671f9a72ef5f5fa28d05252c17cf4cef",
              index: 0,
            },
            depType: "code",
          },
          type: {
            codeHash:
              "0x00000000000000000000000000000000000000000000000000545950455f4944",
            hashType: "type",
            args: "0xe04976b67600fd25ac50305f77b33aee2c12e3c18e63ece9119e5b32117884b5",
          },
        },
      ],
    },
    [KnownScript.AlwaysSuccess]: {
      codeHash:
        "0x3b521cc4b552f109d092d8cc468a8048acb53c5952dbe769d2b2f9cf6e47f7f1",
      hashType: "data1",
      cellDeps: [
        {
          cellDep: {
            outPoint: {
              txHash:
                "0xb4f171c9c9caf7401f54a8e56225ae21d95032150a87a4678eac3f66a3137b93",
              index: 0,
            },
            depType: "code",
          },
        },
      ],
    },
    [KnownScript.InputTypeProxyLock]: {
      codeHash:
        "0x5123908965c711b0ffd8aec642f1ede329649bda1ebdca6bd24124d3796f768a",
      hashType: "data1",
      cellDeps: [
        {
          cellDep: {
            outPoint: {
              txHash:
                "0xb4f171c9c9caf7401f54a8e56225ae21d95032150a87a4678eac3f66a3137b93",
              index: 1,
            },
            depType: "code",
          },
        },
      ],
    },
    [KnownScript.OutputTypeProxyLock]: {
      codeHash:
        "0x2df53b592db3ae3685b7787adcfef0332a611edb83ca3feca435809964c3aff2",
      hashType: "data1",
      cellDeps: [
        {
          cellDep: {
            outPoint: {
              txHash:
                "0xb4f171c9c9caf7401f54a8e56225ae21d95032150a87a4678eac3f66a3137b93",
              index: 2,
            },
            depType: "code",
          },
        },
      ],
    },
    [KnownScript.LockProxyLock]: {
      codeHash:
        "0x5d41e32e224c15f152b7e6529100ebeac83b162f5f692a5365774dad2c1a1d02",
      hashType: "data1",
      cellDeps: [
        {
          cellDep: {
            outPoint: {
              txHash:
                "0xb4f171c9c9caf7401f54a8e56225ae21d95032150a87a4678eac3f66a3137b93",
              index: 3,
            },
            depType: "code",
          },
        },
      ],
    },
    [KnownScript.SingleUseLock]: {
      codeHash:
        "0x8290467a512e5b9a6b816469b0edabba1f4ac474e28ffdd604c2a7c76446bbaf",
      hashType: "data1",
      cellDeps: [
        {
          cellDep: {
            outPoint: {
              txHash:
                "0xb4f171c9c9caf7401f54a8e56225ae21d95032150a87a4678eac3f66a3137b93",
              index: 4,
            },
            depType: "code",
          },
        },
      ],
    },
    [KnownScript.TypeBurnLock]: {
      codeHash:
        "0xff78bae0abf17d7a404c0be0f9ad9c9185b3f88dcc60403453d5ba8e1f22f53a",
      hashType: "data1",
      cellDeps: [
        {
          cellDep: {
            outPoint: {
              txHash:
                "0xb4f171c9c9caf7401f54a8e56225ae21d95032150a87a4678eac3f66a3137b93",
              index: 5,
            },
            depType: "code",
          },
        },
      ],
    },
    [KnownScript.EasyToDiscoverType]: {
      codeHash:
        "0xaba4430cc7110d699007095430a1faa72973edf2322ddbfd4d1d219cacf237af",
      hashType: "data1",
      cellDeps: [
        {
          cellDep: {
            outPoint: {
              txHash:
                "0x1b4ffcad55ecd36ffb2715b6816b83da73851f1a24fe594f263c4f34dad90792",
              index: 0,
            },
            depType: "code",
          },
        },
      ],
    },
    [KnownScript.TimeLock]: {
      codeHash:
        "0x6fac4b2e89360a1e692efcddcb3a28656d8446549fb83da6d896db8b714f4451",
      hashType: "data1",
      cellDeps: [
        {
          cellDep: {
            outPoint: {
              txHash:
                "0x1b4ffcad55ecd36ffb2715b6816b83da73851f1a24fe594f263c4f34dad90792",
              index: 1,
            },
            depType: "code",
          },
        },
      ],
    },
  });


================================================
File: packages/core/src/client/clientPublicTestnet.ts
================================================
import WebSocket from "isomorphic-ws";
import { TESTNET_SCRIPTS } from "./clientPublicTestnet.advanced.js";
import { KnownScript, ScriptInfo, ScriptInfoLike } from "./clientTypes.js";
import { ClientJsonRpc, ClientJsonRpcConfig } from "./jsonRpc/index.js";

/**
 * @public
 */
export class ClientPublicTestnet extends ClientJsonRpc {
  constructor(
    private readonly config?: ClientJsonRpcConfig & {
      url?: string;
      scripts?: Record<KnownScript, ScriptInfoLike | undefined>;
    },
  ) {
    const hasWebSocket = typeof WebSocket !== "undefined";
    super(
      config?.url ??
        (hasWebSocket
          ? "wss://testnet.ckb.dev/ws"
          : "https://testnet.ckb.dev/"),
      {
        ...config,
        fallbacks:
          config?.fallbacks ??
          (hasWebSocket
            ? [
                "wss://testnet.ckb.dev/ws",
                "https://testnet.ckb.dev/",
                "https://testnet.ckbapp.dev/",
              ]
            : ["https://testnet.ckb.dev/", "https://testnet.ckbapp.dev/"]),
      },
    );
  }

  get scripts(): Record<KnownScript, ScriptInfoLike | undefined> {
    return this.config?.scripts ?? TESTNET_SCRIPTS;
  }

  get addressPrefix(): string {
    return "ckt";
  }

  async getKnownScript(script: KnownScript): Promise<ScriptInfo> {
    const found = this.scripts[script];
    if (!found) {
      throw new Error(
        `No script information was found for ${script} on ${this.addressPrefix}`,
      );
    }
    return ScriptInfo.from(found);
  }
}


================================================
File: packages/core/src/client/clientTypes.advanced.ts
================================================
import { ScriptLike } from "../ckb/index.js";
import { HexLike } from "../hex/index.js";
import { Num, numFrom, NumLike } from "../num/index.js";

export const CONFIRMED_BLOCK_TIME = numFrom(1000 * 10 * 50); // 50 blocks * 10s
export const DEFAULT_MAX_FEE_RATE = numFrom(10000000);
export const DEFAULT_MIN_FEE_RATE = numFrom(1000);

export function clientSearchKeyRangeFrom([a, b]: [NumLike, NumLike]): [
  Num,
  Num,
] {
  return [numFrom(a), numFrom(b)];
}

export type ClientCollectableSearchKeyFilterLike = {
  script?: ScriptLike | null;
  scriptLenRange?: [NumLike, NumLike] | null;
  outputData?: HexLike | null;
  outputDataSearchMode?: "prefix" | "exact" | "partial" | null;
  outputDataLenRange?: [NumLike, NumLike] | null;
  outputCapacityRange?: [NumLike, NumLike] | null;
};
export type ClientCollectableSearchKeyLike = {
  script: ScriptLike;
  scriptType: "lock" | "type";
  scriptSearchMode: "prefix" | "exact" | "partial";
  filter?: ClientCollectableSearchKeyFilterLike | null;
  withData?: boolean | null;
};


================================================
File: packages/core/src/client/clientTypes.ts
================================================
import {
  Cell,
  CellDep,
  CellDepLike,
  Epoch,
  EpochLike,
  HashType,
  HashTypeLike,
  OutPoint,
  OutPointLike,
  Script,
  ScriptLike,
  Transaction,
  TransactionLike,
  epochFrom,
  hashTypeFrom,
} from "../ckb/index.js";
import { Hex, HexLike, hexFrom } from "../hex/index.js";
import { Num, NumLike, numFrom } from "../num/index.js";
import { apply } from "../utils/index.js";
import {
  ClientCollectableSearchKeyFilterLike,
  ClientCollectableSearchKeyLike,
  clientSearchKeyRangeFrom,
} from "./clientTypes.advanced.js";

/**
 * @public
 */
export enum KnownScript {
  NervosDao = "NervosDao",
  Secp256k1Blake160 = "Secp256k1Blake160",
  Secp256k1Multisig = "Secp256k1Multisig",
  AnyoneCanPay = "AnyoneCanPay",
  TypeId = "TypeId",
  XUdt = "XUdt",
  JoyId = "JoyId",
  COTA = "COTA",
  PWLock = "PWLock",
  OmniLock = "OmniLock",
  NostrLock = "NostrLock",
  UniqueType = "UniqueType",

  // ckb-proxy-locks https://github.com/ckb-devrel/ckb-proxy-locks
  AlwaysSuccess = "AlwaysSuccess",
  InputTypeProxyLock = "InputTypeProxyLock",
  OutputTypeProxyLock = "OutputTypeProxyLock",
  LockProxyLock = "LockProxyLock",
  SingleUseLock = "SingleUseLock",
  TypeBurnLock = "TypeBurnLock",
  EasyToDiscoverType = "EasyToDiscoverType",
  TimeLock = "TimeLock",
}

/**
 * @public
 */
export type CellDepInfoLike = {
  cellDep: CellDepLike;
  type?: ScriptLike | null;
};

/**
 * @public
 */
export class CellDepInfo {
  constructor(
    public cellDep: CellDep,
    public type?: Script,
  ) {}

  static from(cellDepInfoLike: CellDepInfoLike): CellDepInfo {
    if (cellDepInfoLike instanceof CellDepInfo) {
      return cellDepInfoLike;
    }

    return new CellDepInfo(
      CellDep.from(cellDepInfoLike.cellDep),
      apply(Script.from, cellDepInfoLike.type),
    );
  }
}

/**
 * @public
 */
export type ScriptInfoLike = {
  codeHash: HexLike;
  hashType: HashTypeLike;
  cellDeps: CellDepInfoLike[];
};

/**
 * @public
 */
export class ScriptInfo {
  constructor(
    public codeHash: Hex,
    public hashType: HashType,
    public cellDeps: CellDepInfo[],
  ) {}

  static from(scriptInfoLike: ScriptInfoLike): ScriptInfo {
    if (scriptInfoLike instanceof ScriptInfo) {
      return scriptInfoLike;
    }

    return new ScriptInfo(
      hexFrom(scriptInfoLike.codeHash),
      hashTypeFrom(scriptInfoLike.hashType),
      scriptInfoLike.cellDeps.map((c) => CellDepInfo.from(c)),
    );
  }
}

/**
 * @public
 */
export type OutputsValidator = "passthrough" | "well_known_scripts_only";

/**
 * @public
 */
export type TransactionStatus =
  | "sent"
  | "pending"
  | "proposed"
  | "committed"
  | "unknown"
  | "rejected";
/**
 * @public
 */
export type ClientTransactionResponseLike = {
  transaction: TransactionLike;
  status: TransactionStatus;
  cycles?: NumLike;
  blockHash?: HexLike;
  blockNumber?: NumLike;
  txIndex?: NumLike;
  reason?: string;
};
/**
 * @public
 */
export class ClientTransactionResponse {
  constructor(
    public transaction: Transaction,
    public status: TransactionStatus,
    public cycles?: Num,
    public blockHash?: Hex,
    public blockNumber?: Num,
    public txIndex?: Num,
    public reason?: string,
  ) {}

  static from(
    responseLike: ClientTransactionResponseLike,
  ): ClientTransactionResponse {
    if (responseLike instanceof ClientTransactionResponse) {
      return responseLike;
    }

    return new ClientTransactionResponse(
      Transaction.from(responseLike.transaction),
      responseLike.status,
      apply(numFrom, responseLike.cycles),
      apply(hexFrom, responseLike.blockHash),
      apply(numFrom, responseLike.blockNumber),
      apply(numFrom, responseLike.txIndex),
      responseLike.reason,
    );
  }

  clone() {
    return new ClientTransactionResponse(
      this.transaction.clone(),
      this.status,
      this.cycles,
      this.blockHash,
      this.blockNumber,
      this.txIndex,
      this.reason,
    );
  }
}

/**
 * @public
 */
export type ClientIndexerSearchKeyFilterLike =
  ClientCollectableSearchKeyFilterLike & {
    blockRange?: [NumLike, NumLike] | null;
  };
/**
 * @public
 */
export class ClientIndexerSearchKeyFilter {
  constructor(
    public script: Script | undefined,
    public scriptLenRange: [Num, Num] | undefined,
    public outputData: Hex | undefined,
    public outputDataSearchMode: "prefix" | "exact" | "partial" | undefined,
    public outputDataLenRange: [Num, Num] | undefined,
    public outputCapacityRange: [Num, Num] | undefined,
    public blockRange: [Num, Num] | undefined,
  ) {}

  static from(
    filterLike: ClientIndexerSearchKeyFilterLike,
  ): ClientIndexerSearchKeyFilter {
    if (filterLike instanceof ClientIndexerSearchKeyFilter) {
      return filterLike;
    }

    return new ClientIndexerSearchKeyFilter(
      apply(Script.from, filterLike.script),
      apply(clientSearchKeyRangeFrom, filterLike.scriptLenRange),
      apply(hexFrom, filterLike.outputData),
      filterLike.outputDataSearchMode ?? undefined,
      apply(clientSearchKeyRangeFrom, filterLike.outputDataLenRange),
      apply(clientSearchKeyRangeFrom, filterLike.outputCapacityRange),
      apply(clientSearchKeyRangeFrom, filterLike.blockRange),
    );
  }
}

/**
 * @public
 */
export type ClientIndexerSearchKeyLike = ClientCollectableSearchKeyLike & {
  filter?: ClientIndexerSearchKeyFilterLike | null;
};

/**
 * @public
 */
export class ClientIndexerSearchKey {
  constructor(
    public script: Script,
    public scriptType: "lock" | "type",
    public scriptSearchMode: "prefix" | "exact" | "partial",
    public filter: ClientIndexerSearchKeyFilter | undefined,
    public withData: boolean | undefined,
  ) {}

  static from(keyLike: ClientIndexerSearchKeyLike): ClientIndexerSearchKey {
    if (keyLike instanceof ClientIndexerSearchKey) {
      return keyLike;
    }

    return new ClientIndexerSearchKey(
      Script.from(keyLike.script),
      keyLike.scriptType,
      keyLike.scriptSearchMode,
      apply(ClientIndexerSearchKeyFilter.from, keyLike.filter),
      keyLike.withData ?? undefined,
    );
  }
}

/**
 * @public
 */
export type ClientFindCellsResponse = {
  lastCursor: string;
  cells: Cell[];
};

/**
 * @public
 */
export type ClientIndexerSearchKeyTransactionLike = Omit<
  ClientCollectableSearchKeyLike,
  "withData"
> & {
  filter?: ClientIndexerSearchKeyFilterLike | null;
  groupByTransaction?: boolean | null;
};

/**
 * @public
 */
export class ClientIndexerSearchKeyTransaction {
  constructor(
    public script: Script,
    public scriptType: "lock" | "type",
    public scriptSearchMode: "prefix" | "exact" | "partial",
    public filter: ClientIndexerSearchKeyFilter | undefined,
    public groupByTransaction: boolean | undefined,
  ) {}

  static from(
    keyLike: ClientIndexerSearchKeyTransactionLike,
  ): ClientIndexerSearchKeyTransaction {
    if (keyLike instanceof ClientIndexerSearchKeyTransaction) {
      return keyLike;
    }

    return new ClientIndexerSearchKeyTransaction(
      Script.from(keyLike.script),
      keyLike.scriptType,
      keyLike.scriptSearchMode,
      apply(ClientIndexerSearchKeyFilter.from, keyLike.filter),
      keyLike.groupByTransaction ?? undefined,
    );
  }
}

/**
 * @public
 */
export type ClientFindTransactionsResponse = {
  lastCursor: string;
  transactions: {
    txHash: Hex;
    blockNumber: Num;
    txIndex: Num;
    isInput: boolean;
    cellIndex: Num;
  }[];
};

/**
 * @public
 */
export type ClientFindTransactionsGroupedResponse = {
  lastCursor: string;
  transactions: {
    txHash: Hex;
    blockNumber: Num;
    txIndex: Num;
    cells: {
      isInput: boolean;
      cellIndex: Num;
    }[];
  }[];
};

/**
 * @public
 */
export type ClientBlockHeaderLike = {
  compactTarget: NumLike;
  dao: {
    /**
     * C_i: the total issuance up to and including block i.
     */
    c: NumLike;
    /**
     * AR_i: the current accumulated rate at block i.
     * AR_j / AR_i reflects the CKByte amount if one deposit 1 CKB to Nervos DAO at block i, and withdraw at block j.
     */
    ar: NumLike;
    /**
     * S_i: the total unissued secondary issuance up to and including block i,
     * including unclaimed Nervos DAO compensation and treasury funds.
     */
    s: NumLike;
    /**
     * U_i: the total occupied capacities currently in the blockchain up to and including block i.
     * Occupied capacity is the sum of capacities used to store all cells.
     */
    u: NumLike;
  };
  epoch: EpochLike;
  extraHash: HexLike;
  hash: HexLike;
  nonce: NumLike;
  number: NumLike;
  parentHash: HexLike;
  proposalsHash: HexLike;
  timestamp: NumLike;
  transactionsRoot: HexLike;
  version: NumLike;
};
/**
 * @public
 */
export class ClientBlockHeader {
  constructor(
    public compactTarget: Num,
    public dao: {
      /**
       * C_i: the total issuance up to and including block i.
       */
      c: Num;
      /**
       * AR_i: the current accumulated rate at block i.
       * AR_j / AR_i reflects the CKByte amount if one deposit 1 CKB to Nervos DAO at block i, and withdraw at block j.
       */
      ar: Num;
      /**
       * S_i: the total unissued secondary issuance up to and including block i,
       * including unclaimed Nervos DAO compensation and treasury funds.
       */
      s: Num;
      /**
       * U_i: the total occupied capacities currently in the blockchain up to and including block i.
       * Occupied capacity is the sum of capacities used to store all cells.
       */
      u: Num;
    },
    public epoch: Epoch,
    public extraHash: Hex,
    public hash: Hex,
    public nonce: Num,
    public number: Num,
    public parentHash: Hex,
    public proposalsHash: Hex,
    public timestamp: Num,
    public transactionsRoot: Hex,
    public version: Num,
  ) {}

  static from(headerLike: ClientBlockHeaderLike): ClientBlockHeader {
    if (headerLike instanceof ClientBlockHeader) {
      return headerLike;
    }

    return new ClientBlockHeader(
      numFrom(headerLike.compactTarget),
      {
        c: numFrom(headerLike.dao.c),
        ar: numFrom(headerLike.dao.ar),
        s: numFrom(headerLike.dao.s),
        u: numFrom(headerLike.dao.u),
      },
      epochFrom(headerLike.epoch),
      hexFrom(headerLike.extraHash),
      hexFrom(headerLike.hash),
      numFrom(headerLike.nonce),
      numFrom(headerLike.number),
      hexFrom(headerLike.parentHash),
      hexFrom(headerLike.proposalsHash),
      numFrom(headerLike.timestamp),
      hexFrom(headerLike.transactionsRoot),
      numFrom(headerLike.version),
    );
  }
}

/**
 * @public
 */
export type ClientBlockUncleLike = {
  header: ClientBlockHeaderLike;
  proposals: HexLike[];
};
/**
 * @public
 */
export class ClientBlockUncle {
  constructor(
    public header: ClientBlockHeader,
    public proposals: Hex[],
  ) {}

  static from(uncleLike: ClientBlockUncleLike): ClientBlockUncle {
    if (uncleLike instanceof ClientBlockUncle) {
      return uncleLike;
    }

    return new ClientBlockUncle(
      ClientBlockHeader.from(uncleLike.header),
      uncleLike.proposals.map(hexFrom),
    );
  }
}

/**
 * @public
 */
export type ClientBlockLike = {
  header: ClientBlockHeaderLike;
  proposals: HexLike[];
  transactions: TransactionLike[];
  uncles: ClientBlockUncleLike[];
};
/**
 * @public
 */
export class ClientBlock {
  constructor(
    public header: ClientBlockHeader,
    public proposals: Hex[],
    public transactions: Transaction[],
    public uncles: ClientBlockUncle[],
  ) {}

  static from(blockLike: ClientBlockLike): ClientBlock {
    if (blockLike instanceof ClientBlock) {
      return blockLike;
    }

    return new ClientBlock(
      ClientBlockHeader.from(blockLike.header),
      blockLike.proposals.map(hexFrom),
      blockLike.transactions.map(Transaction.from),
      blockLike.uncles.map(ClientBlockUncle.from),
    );
  }
}

export interface ErrorClientBaseLike {
  message?: string;
  code?: number;
  data: string;
}
export class ErrorClientBase extends Error {
  public readonly code?: number;
  public readonly data: string;

  constructor(origin: ErrorClientBaseLike) {
    super(`Client request error ${origin.message}`);
    this.code = origin.code;
    this.data = origin.data;
  }
}

export class ErrorClientResolveUnknown extends ErrorClientBase {
  public readonly outPoint: OutPoint;
  constructor(origin: ErrorClientBaseLike, outPointLike: OutPointLike) {
    super(origin);
    this.outPoint = OutPoint.from(outPointLike);
  }
}

export class ErrorClientVerification extends ErrorClientBase {
  public readonly sourceIndex: Num;
  public readonly scriptCodeHash: Hex;

  constructor(
    origin: ErrorClientBaseLike,
    public readonly source: "lock" | "inputType" | "outputType",
    sourceIndex: NumLike,
    public readonly errorCode: number,
    public readonly scriptHashType: "data" | "type",
    scriptCodeHash: HexLike,
  ) {
    super(origin);
    this.sourceIndex = numFrom(sourceIndex);
    this.scriptCodeHash = hexFrom(scriptCodeHash);
  }
}

export class ErrorClientDuplicatedTransaction extends ErrorClientBase {
  public readonly txHash: Hex;

  constructor(origin: ErrorClientBaseLike, txHash: HexLike) {
    super(origin);
    this.txHash = hexFrom(txHash);
  }
}

export class ErrorClientRBFRejected extends ErrorClientBase {
  public readonly currentFee: Num;
  public readonly leastFee: Num;

  constructor(
    origin: ErrorClientBaseLike,
    currentFee: NumLike,
    leastFee: NumLike,
  ) {
    super(origin);
    this.currentFee = numFrom(currentFee);
    this.leastFee = numFrom(leastFee);
  }
}

export class ErrorClientWaitTransactionTimeout extends ErrorClientBase {
  constructor(timeoutLike: NumLike) {
    const timeout = numFrom(timeoutLike).toString();
    super({
      message: `Wait transaction timeout ${timeout}ms`,
      data: JSON.stringify({ timeout }),
    });
  }
}

export class ErrorClientMaxFeeRateExceeded extends ErrorClientBase {
  constructor(limitLike: NumLike, actualLike: NumLike) {
    const limit = numFrom(limitLike).toString();
    const actual = numFrom(actualLike).toString();
    super({
      message: `Max fee rate exceeded limit ${limit}, actual ${actual}. Developer might forgot to complete transaction fee before sending. See https://docs.ckbccc.com/classes/_ckb_ccc_core.index.ccc.Transaction.html#completeFeeBy.`,
      data: JSON.stringify({ limit, actual }),
    });
  }
}


================================================
File: packages/core/src/client/index.ts
================================================
export * from "./cache/index.js";
export * from "./client.js";
export * from "./clientPublicMainnet.js";
export * from "./clientPublicTestnet.js";
export * from "./clientTypes.js";
export * from "./jsonRpc/index.js";


================================================
File: packages/core/src/client/cache/advanced.ts
================================================
export * from "./memory.advanced.js";


================================================
File: packages/core/src/client/cache/cache.ts
================================================
import {
  Cell,
  CellLike,
  OutPointLike,
  Transaction,
  TransactionLike,
} from "../../ckb/index.js";
import { HexLike } from "../../hex/index.js";
import { NumLike } from "../../num/index.js";
import { ClientCollectableSearchKeyLike } from "../clientTypes.advanced.js";
import {
  ClientBlock,
  ClientBlockHeader,
  ClientBlockHeaderLike,
  ClientBlockLike,
  ClientTransactionResponse,
  ClientTransactionResponseLike,
} from "../clientTypes.js";

/**
 * @public
 * The ClientCache class is mainly designed for chained transactions.
 * Consumed & Created cells are "marked" so they can be correctly handled when composing transactions.
 * It also act as cache for rpc requests to reduce cost, but this is optional.
 */
export abstract class ClientCache {
  abstract markUsableNoCache(
    ...cellLikes: (CellLike | CellLike[])[]
  ): Promise<void>;
  async markUsable(...cellLikes: (CellLike | CellLike[])[]): Promise<void> {
    await this.recordCells(...cellLikes);
    return this.markUsableNoCache(...cellLikes);
  }
  abstract markUnusable(
    ...outPointLike: (OutPointLike | OutPointLike[])[]
  ): Promise<void>;
  async markTransactions(
    ...transactionLike: (TransactionLike | TransactionLike[])[]
  ): Promise<void> {
    await Promise.all([
      this.recordTransactionResponses(
        transactionLike.flat().map((transaction) => ({
          transaction: transaction,
          status: "sent",
        })),
      ),
      ...transactionLike.flat().map((transactionLike) => {
        const tx = Transaction.from(transactionLike);
        const txHash = tx.hash();

        return Promise.all([
          ...tx.inputs.map((i) => this.markUnusable(i.previousOutput)),
          ...tx.outputs.map((o, i) =>
            this.markUsable({
              cellOutput: o,
              outputData: tx.outputsData[i],
              outPoint: {
                txHash,
                index: i,
              },
            }),
          ),
        ]);
      }),
    ]);
  }
  abstract clear(): Promise<void>;
  abstract findCells(
    filter: ClientCollectableSearchKeyLike,
  ): AsyncGenerator<Cell>;
  abstract isUnusable(outPointLike: OutPointLike): Promise<boolean>;

  // ======
  // Following methods are for requests caching and optional.
  // ======

  /**
   * Record known cells
   * Implement this method to enable cells query caching
   * @param _cells
   */
  async recordCells(..._cells: (CellLike | CellLike[])[]): Promise<void> {}
  /**
   * Get a known cell by out point
   * Implement this method to enable cells query caching
   * @param _outPoint
   */
  async getCell(_outPoint: OutPointLike): Promise<Cell | undefined> {
    return;
  }

  /**
   * Record known transaction responses.
   * Implement this method to enable transactions query caching
   * @param _transactions
   */
  async recordTransactionResponses(
    ..._transactions: (
      | ClientTransactionResponseLike
      | ClientTransactionResponseLike[]
    )[]
  ): Promise<void> {}
  /**
   * Get a known transaction response by hash
   * Implement this method to enable transactions query caching
   * @param _txHash
   */
  async getTransactionResponse(
    _txHash: HexLike,
  ): Promise<ClientTransactionResponse | undefined> {
    return;
  }
  /**
   * Record known transactions.
   * @param transactions
   */
  async recordTransactions(
    ...transactions: (TransactionLike | TransactionLike[])[]
  ): Promise<void> {
    return this.recordTransactionResponses(
      transactions.flat().map((transaction) => ({
        transaction,
        status: "unknown",
      })),
    );
  }
  /**
   * Get a known transaction by hash
   * @param txHash
   */
  async getTransaction(txHash: HexLike): Promise<Transaction | undefined> {
    return (await this.getTransactionResponse(txHash))?.transaction;
  }

  /**
   * Record known block headers.
   * Implement this method to enable block headers query caching
   * @param _headers
   */
  async recordHeaders(
    ..._headers: (ClientBlockHeaderLike | ClientBlockHeaderLike[])[]
  ): Promise<void> {}
  /**
   * Get a known block header by hash
   * Implement this method to enable block headers query caching
   * @param _hash
   */
  async getHeaderByHash(
    _hash: HexLike,
  ): Promise<ClientBlockHeader | undefined> {
    return;
  }
  /**
   * Get a known block header by number
   * Implement this method to enable block headers query caching
   * @param _number
   */
  async getHeaderByNumber(
    _number: NumLike,
  ): Promise<ClientBlockHeader | undefined> {
    return;
  }

  /**
   * Record known blocks.
   * Implement this method to enable blocks query caching
   * @param _blocks
   */
  async recordBlocks(
    ..._blocks: (ClientBlockLike | ClientBlockLike[])[]
  ): Promise<void> {}
  /**
   * Get a known block header by hash
   * Implement this method to enable block headers query caching
   * @param _hash
   */
  async getBlockByHash(_hash: HexLike): Promise<ClientBlock | undefined> {
    return;
  }
  /**
   * Get a known block header by number
   * Implement this method to enable block headers query caching
   * @param _number
   */
  async getBlockByNumber(_number: NumLike): Promise<ClientBlock | undefined> {
    return;
  }
}


================================================
File: packages/core/src/client/cache/index.ts
================================================
export * from "./cache.js";
export * from "./memory.js";


================================================
File: packages/core/src/client/cache/memory.advanced.ts
================================================
import { bytesFrom } from "../../bytes/index.js";
import { Cell, CellLike, Script, ScriptLike } from "../../ckb/index.js";
import { HexLike, hexFrom } from "../../hex/index.js";
import { NumLike, numFrom } from "../../num/index.js";
import {
  ClientCollectableSearchKeyLike,
  clientSearchKeyRangeFrom,
} from "../clientTypes.advanced.js";
import { ClientIndexerSearchKey } from "../clientTypes.js";

// [isLive, Cell | OutPoint]
export type CellRecord =
  | [
      false,
      Pick<Cell, "outPoint"> & Partial<Pick<Cell, "cellOutput" | "outputData">>,
    ]
  | [true, Cell]
  | [undefined, Cell];

export function filterData(
  dataLike: HexLike,
  filterLike: HexLike | undefined,
  filterMode: "exact" | "prefix" | "partial",
): boolean {
  if (!filterLike) {
    return true;
  }

  const data = hexFrom(dataLike);
  const filter = hexFrom(filterLike);
  if (
    (filterMode === "exact" && data !== filter) ||
    (filterMode === "prefix" && !data.startsWith(filter)) ||
    (filterMode === "partial" && data.search(filter) === -1)
  ) {
    return false;
  }

  return true;
}

export function filterScript(
  valueLike: ScriptLike | undefined,
  filterLike: ScriptLike | undefined,
  filterMode: "prefix" | "exact" | "partial",
): boolean {
  if (!filterLike) {
    return true;
  }
  if (!valueLike) {
    return false;
  }

  const value = Script.from(valueLike);
  const filter = Script.from(filterLike);
  if (
    value.codeHash !== filter.codeHash ||
    value.hashType !== filter.hashType
  ) {
    return false;
  }

  return filterData(value.args, filter?.args, filterMode);
}

export function filterNumByRange(
  lengthLike: NumLike,
  range: [NumLike, NumLike] | undefined,
): boolean {
  if (!range) {
    return true;
  }
  const length = numFrom(lengthLike);
  const [lower, upper] = clientSearchKeyRangeFrom(range);

  return lower <= length && length < upper;
}

export function filterScriptByLenRange(
  valueLike?: ScriptLike,
  scriptLenRange?: [NumLike, NumLike],
): boolean {
  if (!scriptLenRange) {
    return true;
  }

  const len = (() => {
    if (!valueLike) {
      return 0;
    }
    return bytesFrom(Script.from(valueLike).args).length + 33;
  })();
  return filterNumByRange(len, scriptLenRange);
}

export function filterCell(
  searchKeyLike: ClientCollectableSearchKeyLike,
  cellLike: CellLike,
): boolean {
  const key = ClientIndexerSearchKey.from(searchKeyLike);
  const cell = Cell.from(cellLike);

  if (key.scriptType === "lock") {
    if (
      !filterScript(cell.cellOutput.lock, key.script, key.scriptSearchMode) ||
      !filterScript(cell.cellOutput.type, key.filter?.script, "prefix") ||
      !filterScriptByLenRange(cell.cellOutput.type, key.filter?.scriptLenRange)
    ) {
      return false;
    }
  }
  if (key.scriptType === "type") {
    if (
      !filterScript(cell.cellOutput.type, key.script, key.scriptSearchMode) ||
      !filterScript(cell.cellOutput.lock, key.filter?.script, "prefix") ||
      !filterScriptByLenRange(cell.cellOutput.lock, key.filter?.scriptLenRange)
    ) {
      return false;
    }
  }

  if (
    !filterData(
      cell.outputData,
      key.filter?.outputData,
      key.filter?.outputDataSearchMode ?? "prefix",
    ) ||
    !filterNumByRange(
      bytesFrom(cell.outputData).length,
      key.filter?.outputDataLenRange,
    )
  ) {
    return false;
  }

  if (
    !filterNumByRange(cell.cellOutput.capacity, key.filter?.outputCapacityRange)
  ) {
    return false;
  }

  return true;
}

export class MapLru<K, V> extends Map<K, V> {
  private readonly lru: K[] = [];

  constructor(private readonly capacity: number) {
    super();
  }

  get(key: K) {
    const val = super.get(key);
    if (val === undefined) {
      return;
    }

    const index = this.lru.indexOf(key);
    if (index !== -1) {
      this.lru.splice(index, 1);
    }
    this.lru.push(key);
    if (this.lru.length > this.capacity) {
      this.delete(this.lru[0]);
      this.lru.shift();
    }

    return val;
  }

  set(key: K, value: V) {
    this.get(key);

    super.set(key, value);
    return this;
  }

  delete(key: K): boolean {
    if (!super.delete(key)) {
      return false;
    }

    const index = this.lru.indexOf(key);
    if (index !== -1) {
      this.lru.splice(index, 1);
    }

    return true;
  }
}


================================================
File: packages/core/src/client/cache/memory.ts
================================================
import { Cell, CellLike, OutPoint, OutPointLike } from "../../ckb/index.js";
import { hexFrom, HexLike } from "../../hex/index.js";
import { Num, numFrom, NumLike } from "../../num/index.js";
import { ClientCollectableSearchKeyLike } from "../clientTypes.advanced.js";
import {
  ClientBlock,
  ClientBlockHeader,
  ClientBlockHeaderLike,
  ClientBlockLike,
  ClientTransactionResponse,
  ClientTransactionResponseLike,
} from "../clientTypes.js";
import { ClientCache } from "./cache.js";
import { CellRecord, filterCell, MapLru } from "./memory.advanced.js";

export class ClientCacheMemory extends ClientCache {
  /**
   * OutPoint => [isLive, Cell | OutPoint]
   */
  private readonly cells: MapLru<string, CellRecord>;

  /**
   * TX Hash => Transaction Response
   */
  private readonly knownTransactions: MapLru<string, ClientTransactionResponse>;

  /**
   * Block Number => Block Hash
   */
  private readonly knownBlockHashes: MapLru<Num, string>;

  /**
   * Block Hash => Block Header / Full Block
   */
  private readonly knownBlocks: MapLru<
    string,
    Pick<ClientBlock, "header"> | ClientBlock
  >;

  constructor(
    private readonly maxCells = 512,
    private readonly maxTxs = 256,
    private readonly maxBlocks = 128,
  ) {
    super();

    this.cells = new MapLru<string, CellRecord>(this.maxCells);
    this.knownTransactions = new MapLru<string, ClientTransactionResponse>(
      this.maxTxs,
    );
    this.knownBlockHashes = new MapLru<Num, string>(this.maxBlocks);
    this.knownBlocks = new MapLru<
      string,
      Pick<ClientBlock, "header"> | ClientBlock
    >(this.maxBlocks);
  }

  async markUsableNoCache(
    ...cellLikes: (CellLike | CellLike[])[]
  ): Promise<void> {
    cellLikes.flat().forEach((cellLike) => {
      const cell = Cell.from(cellLike).clone();
      const outPointStr = hexFrom(cell.outPoint.toBytes());

      this.cells.set(outPointStr, [true, cell]);
    });
  }

  async markUnusable(
    ...outPointLikes: (OutPointLike | OutPointLike[])[]
  ): Promise<void> {
    outPointLikes.flat().forEach((outPointLike) => {
      const outPoint = OutPoint.from(outPointLike);
      const outPointStr = hexFrom(outPoint.toBytes());

      const existed = this.cells.get(outPointStr);
      if (existed) {
        existed[0] = false;
        return;
      }
      this.cells.set(outPointStr, [false, { outPoint }]);
    });
  }

  async clear(): Promise<void> {
    this.cells.clear();
    this.knownTransactions.clear();
  }

  async *findCells(
    keyLike: ClientCollectableSearchKeyLike,
  ): AsyncGenerator<Cell> {
    for (const [key, [isLive, cell]] of this.cells.entries()) {
      if (!isLive) {
        continue;
      }
      if (!filterCell(keyLike, cell)) {
        continue;
      }

      this.cells.get(key);
      yield cell.clone();
    }
  }

  async isUnusable(outPointLike: OutPointLike): Promise<boolean> {
    const outPoint = OutPoint.from(outPointLike);

    return !(this.cells.get(hexFrom(outPoint.toBytes()))?.[0] ?? true);
  }

  async recordCells(...cells: (CellLike | CellLike[])[]): Promise<void> {
    cells.flat().map((cellLike) => {
      const cell = Cell.from(cellLike);
      const outPointStr = hexFrom(cell.outPoint.toBytes());

      if (this.cells.get(outPointStr)) {
        return;
      }
      this.cells.set(outPointStr, [undefined, cell]);
    });
  }
  async getCell(outPointLike: OutPointLike): Promise<Cell | undefined> {
    const outPoint = OutPoint.from(outPointLike);

    const cell = this.cells.get(hexFrom(outPoint.toBytes()))?.[1];
    if (cell && cell.cellOutput && cell.outputData) {
      return Cell.from((cell as Cell).clone());
    }
  }

  async recordTransactionResponses(
    ...transactions: (
      | ClientTransactionResponseLike
      | ClientTransactionResponseLike[]
    )[]
  ): Promise<void> {
    transactions.flat().map((txLike) => {
      const tx = ClientTransactionResponse.from(txLike);
      this.knownTransactions.set(tx.transaction.hash(), tx);
    });
  }
  async getTransactionResponse(
    txHashLike: HexLike,
  ): Promise<ClientTransactionResponse | undefined> {
    const txHash = hexFrom(txHashLike);
    return this.knownTransactions.get(txHash)?.clone();
  }

  async recordHeaders(
    ...headers: (ClientBlockHeaderLike | ClientBlockHeaderLike[])[]
  ): Promise<void> {
    headers.flat().map((headerLike) => {
      const header = ClientBlockHeader.from(headerLike);

      this.knownBlockHashes.set(header.number, header.hash);

      const existed = this.knownBlocks.get(header.hash);
      if (existed) {
        return;
      }
      this.knownBlocks.set(header.hash, { header });
    });
  }
  async getHeaderByHash(
    hashLike: HexLike,
  ): Promise<ClientBlockHeader | undefined> {
    const hash = hexFrom(hashLike);
    const block = this.knownBlocks.get(hash);
    if (block) {
      this.knownBlockHashes.get(block.header.number); // For LRU
    }
    return block?.header;
  }
  async getHeaderByNumber(
    numberLike: NumLike,
  ): Promise<ClientBlockHeader | undefined> {
    const number = numFrom(numberLike);

    const hash = this.knownBlockHashes.get(number);
    if (!hash) {
      return;
    }
    return this.getHeaderByHash(hash);
  }

  async recordBlocks(
    ...blocks: (ClientBlockLike | ClientBlockLike[])[]
  ): Promise<void> {
    blocks.flat().map((blockLike) => {
      const block = ClientBlock.from(blockLike);

      this.knownBlockHashes.set(block.header.number, block.header.hash);
      this.knownBlocks.set(block.header.hash, block);
    });
  }
  async getBlockByHash(hashLike: HexLike): Promise<ClientBlock | undefined> {
    const hash = hexFrom(hashLike);
    const block = this.knownBlocks.get(hash);
    if (block) {
      this.knownBlockHashes.get(block.header.number); // For LRU
      if ("transactions" in block) {
        return block;
      }
    }
    return;
  }
  async getBlockByNumber(
    numberLike: NumLike,
  ): Promise<ClientBlock | undefined> {
    const number = numFrom(numberLike);

    const hash = this.knownBlockHashes.get(number);
    if (!hash) {
      return;
    }
    return this.getBlockByHash(hash);
  }
}


================================================
File: packages/core/src/client/jsonRpc/advanced.ts
================================================
export * from "./transformers.js";
export * from "./types.js";


================================================
File: packages/core/src/client/jsonRpc/client.ts
================================================
import {
  Cell,
  OutPoint,
  OutPointLike,
  TransactionLike,
} from "../../ckb/index.js";
import { Hex, HexLike, hexFrom } from "../../hex/index.js";
import {
  RequestorJsonRpc,
  RequestorJsonRpcConfig,
} from "../../jsonRpc/requestor.js";
import { Num, NumLike, numFrom, numToHex } from "../../num/index.js";
import { apply } from "../../utils/index.js";
import { ClientCache } from "../cache/index.js";
import { Client } from "../client.js";
import {
  ClientFindCellsResponse,
  ClientIndexerSearchKeyLike,
  ClientTransactionResponse,
  ErrorClientBase,
  ErrorClientBaseLike,
  ErrorClientDuplicatedTransaction,
  ErrorClientRBFRejected,
  ErrorClientResolveUnknown,
  ErrorClientVerification,
  OutputsValidator,
} from "../clientTypes.js";
import {
  JsonRpcBlock,
  JsonRpcBlockHeader,
  JsonRpcCellOutput,
  JsonRpcTransformers,
} from "./advanced.js";

const ERROR_PARSERS: [
  string,
  (error: ErrorClientBaseLike, match: RegExpMatchArray) => ErrorClientBase,
][] = [
  [
    "Resolve\\(Unknown\\(OutPoint\\((0x.*)\\)\\)\\)",
    (error, match) =>
      new ErrorClientResolveUnknown(error, OutPoint.fromBytes(match[1])),
  ],
  [
    "Verification\\(Error { kind: Script, inner: TransactionScriptError { source: (Inputs|Outputs)\\[([0-9]*)\\].(Lock|Type), cause: ValidationFailure: see error code (-?[0-9])* on page https://nervosnetwork\\.github\\.io/ckb-script-error-codes/by-(type|data)-hash/(.*)\\.html",
    (error, match) =>
      new ErrorClientVerification(
        error,
        match[3] === "Lock"
          ? "lock"
          : match[1] === "Inputs"
            ? "inputType"
            : "outputType",
        match[2],
        Number(match[4]),
        match[5] === "data" ? "data" : "type",
        match[6],
      ),
  ],
  [
    "Duplicated\\(Byte32\\((0x.*)\\)\\)",
    (error, match) => new ErrorClientDuplicatedTransaction(error, match[1]),
  ],
  [
    'RBFRejected\\("Tx\'s current fee is ([0-9]*), expect it to >= ([0-9]*) to replace old txs"\\)',
    (error, match) => new ErrorClientRBFRejected(error, match[1], match[2]),
  ],
];

export type ClientJsonRpcConfig = RequestorJsonRpcConfig & {
  cache?: ClientCache;
  requestor?: RequestorJsonRpc;
};

/**
 * An abstract class implementing JSON-RPC client functionality for a specific URL and timeout.
 * Provides methods for sending transactions and building JSON-RPC payloads.
 */
export abstract class ClientJsonRpc extends Client {
  public readonly requestor: RequestorJsonRpc;

  /**
   * Creates an instance of ClientJsonRpc.
   *
   * @param url_ - The URL of the JSON-RPC server.
   * @param timeout - The timeout for requests in milliseconds
   */

  constructor(url_: string, config?: ClientJsonRpcConfig) {
    super(config);

    this.requestor =
      config?.requestor ??
      new RequestorJsonRpc(url_, config, (errAny) => {
        if (
          typeof errAny !== "object" ||
          errAny === null ||
          !("data" in errAny) ||
          typeof errAny.data !== "string"
        ) {
          throw errAny;
        }
        const err = errAny as ErrorClientBaseLike;

        for (const [regexp, builder] of ERROR_PARSERS) {
          const match = err.data.match(regexp);
          if (match) {
            throw builder(err, match);
          }
        }

        throw new ErrorClientBase(err);
      });
  }

  /**
   * Returns the URL of the JSON-RPC server.
   *
   * @returns The URL of the JSON-RPC server.
   */
  get url(): string {
    return this.requestor.url;
  }

  /**
   * Get fee rate statistics
   *
   * @returns Fee rate statistics
   */

  getFeeRateStatistics = this.buildSender(
    "get_fee_rate_statistics",
    [(n: NumLike) => apply(numFrom, n)],
    ({ mean, median }: { mean: NumLike; median: NumLike }) => ({
      mean: numFrom(mean),
      median: numFrom(median),
    }),
  ) as Client["getFeeRateStatistics"];

  /**
   * Get tip block number
   *
   * @returns Tip block number
   */

  getTip = this.buildSender(
    "get_tip_block_number",
    [],
    numFrom,
  ) as () => Promise<Num>;

  /**
   * Get tip block header
   *
   * @param verbosity - result format which allows 0 and 1. (Optional, the default is 1.)
   * @returns BlockHeader
   */
  getTipHeader = this.buildSender(
    "get_tip_header",
    [],
    (b: JsonRpcBlockHeader) => apply(JsonRpcTransformers.blockHeaderTo, b),
  ) as Client["getTipHeader"];

  /**
   * Get block by block number
   *
   * @param blockNumber - The block number.
   * @param verbosity - result format which allows 0 and 2. (Optional, the default is 2.)
   * @param withCycles - whether the return cycles of block transactions. (Optional, default false.)
   * @returns Block
   */
  getBlockByNumberNoCache = this.buildSender(
    "get_block_by_number",
    [(v: NumLike) => numToHex(numFrom(v))],
    (b: JsonRpcBlock) => apply(JsonRpcTransformers.blockTo, b),
  ) as Client["getBlockByNumberNoCache"];

  /**
   * Get block by block hash
   *
   * @param blockHash - The block hash.
   * @param verbosity - result format which allows 0 and 2. (Optional, the default is 2.)
   * @param withCycles - whether the return cycles of block transactions. (Optional, default false.)
   * @returns Block
   */
  getBlockByHashNoCache = this.buildSender(
    "get_block",
    [hexFrom],
    (b: JsonRpcBlock) => apply(JsonRpcTransformers.blockTo, b),
  ) as Client["getBlockByHashNoCache"];

  /**
   * Get header by block number
   *
   * @param blockNumber - The block number.
   * @param verbosity - result format which allows 0 and 1. (Optional, the default is 1.)
   * @returns BlockHeader
   */
  getHeaderByNumberNoCache = this.buildSender(
    "get_header_by_number",
    [(v: NumLike) => numToHex(numFrom(v))],
    (b: JsonRpcBlockHeader) => apply(JsonRpcTransformers.blockHeaderTo, b),
  ) as Client["getHeaderByNumberNoCache"];

  /**
   * Get header by block hash
   *
   * @param blockHash - The block hash.
   * @param verbosity - result format which allows 0 and 1. (Optional, the default is 1.)
   * @returns BlockHeader
   */
  getHeaderByHashNoCache = this.buildSender(
    "get_header",
    [hexFrom],
    (b: JsonRpcBlockHeader) => apply(JsonRpcTransformers.blockHeaderTo, b),
  ) as Client["getHeaderByHashNoCache"];

  /**
   * Estimate cycles of a transaction.
   *
   * @param transaction - The transaction to estimate.
   * @returns Consumed cycles
   */
  estimateCycles = this.buildSender(
    "estimate_cycles",
    [JsonRpcTransformers.transactionFrom],
    ({ cycles }: { cycles: NumLike }) => numFrom(cycles),
  ) as Client["estimateCycles"];

  /**
   * Test a transaction.
   *
   * @param transaction - The transaction to test.
   * @param validator - "passthrough": Disable validation. "well_known_scripts_only": Only accept well known scripts in the transaction.
   * @returns Consumed cycles
   */

  sendTransactionDry = this.buildSender(
    "test_tx_pool_accept",
    [JsonRpcTransformers.transactionFrom],
    ({ cycles }: { cycles: NumLike }) => numFrom(cycles),
  ) as Client["sendTransactionDry"];

  /**
   * Send a transaction to node.
   *
   * @param transaction - The transaction to send.
   * @param validator - "passthrough": Disable validation. "well_known_scripts_only": Only accept well known scripts in the transaction.
   * @returns Transaction hash.
   */

  sendTransactionNoCache = this.buildSender(
    "send_transaction",
    [JsonRpcTransformers.transactionFrom],
    hexFrom,
  ) as (
    transaction: TransactionLike,
    validator?: OutputsValidator | undefined,
  ) => Promise<Hex>;

  /**
   * Get a transaction from node.
   *
   * @param txHash - The hash of the transaction.
   * @returns The transaction with status.
   */

  getTransactionNoCache = this.buildSender(
    "get_transaction",
    [hexFrom],
    JsonRpcTransformers.transactionResponseTo,
  ) as (txHash: HexLike) => Promise<ClientTransactionResponse | undefined>;

  /**
   * Get a live cell from node.
   *
   * @param outPoint - The out point of the cell.
   * @param withData - Include data in the response.
   * @param includeTxPool - Include cells in the tx pool.
   * @returns The cell
   */
  getCellLiveNoCache(
    outPoint: OutPointLike,
    withData?: boolean | null,
    includeTxPool?: boolean | null,
  ) {
    return this.buildSender(
      "get_live_cell",
      [JsonRpcTransformers.outPointFrom],
      ({
        cell,
      }: {
        cell?: {
          output: JsonRpcCellOutput;
          data?: { content: HexLike; hash: HexLike };
        };
      }) =>
        apply(
          ({
            output,
            data,
          }: {
            output: JsonRpcCellOutput;
            data?: { content: HexLike; hash: HexLike };
          }) =>
            Cell.from({
              cellOutput: JsonRpcTransformers.cellOutputTo(output),
              outputData: data?.content ?? "0x",
              outPoint,
            }),
          cell,
        ),
    )(outPoint, withData ?? true, includeTxPool) as Promise<Cell | undefined>;
  }

  /**
   * find cells from node.
   *
   * @param key - The search key of cells.
   * @param order - The order of cells.
   * @param limit - The max return size of cells.
   * @param after - Pagination parameter.
   * @returns The found cells.
   */

  findCellsPagedNoCache = this.buildSender(
    "get_cells",
    [
      JsonRpcTransformers.indexerSearchKeyFrom,
      (order?: "asc" | "desc") => order ?? "asc",
      (limit?: NumLike) => numToHex(limit ?? 10),
    ],
    JsonRpcTransformers.findCellsResponseTo,
  ) as (
    key: ClientIndexerSearchKeyLike,
    order?: "asc" | "desc",
    limit?: NumLike,
    after?: string,
  ) => Promise<ClientFindCellsResponse>;

  /**
   * find transactions from node.
   *
   * @param key - The search key of transactions.
   * @param order - The order of transactions.
   * @param limit - The max return size of transactions.
   * @param after - Pagination parameter.
   * @returns The found transactions.
   */

  findTransactionsPaged = this.buildSender(
    "get_transactions",
    [
      JsonRpcTransformers.indexerSearchKeyTransactionFrom,
      (order?: "asc" | "desc") => order ?? "asc",
      (limit?: NumLike) => numToHex(limit ?? 10),
    ],
    JsonRpcTransformers.findTransactionsResponseTo,
  ) as Client["findTransactionsPaged"];

  /**
   * get cells capacity from node.
   *
   * @param key - The search key of cells.
   * @returns The sum of cells capacity.
   */

  getCellsCapacity = this.buildSender(
    "get_cells_capacity",
    [JsonRpcTransformers.indexerSearchKeyFrom],
    ({ capacity }: { capacity: NumLike }) => numFrom(capacity),
  ) as (key: ClientIndexerSearchKeyLike) => Promise<Num>;

  /**
   * Builds a sender function for a JSON-RPC method.
   *
   * @param rpcMethod - The JSON-RPC method.
   * @param inTransformers - An array of input transformers.
   * @param outTransformer - An output transformer function.
   * @returns A function that sends a JSON-RPC request with the given method and transformed parameters.
   */

  buildSender(
    rpcMethod: Parameters<RequestorJsonRpc["request"]>[0],
    inTransformers?: Parameters<RequestorJsonRpc["request"]>[2],
    outTransformer?: Parameters<RequestorJsonRpc["request"]>[3],
  ): (...req: unknown[]) => Promise<unknown> {
    return async (...req: unknown[]) => {
      return this.requestor.request(
        rpcMethod,
        req,
        inTransformers,
        outTransformer,
      );
    };
  }
}


================================================
File: packages/core/src/client/jsonRpc/index.ts
================================================
export * from "./client.js";


================================================
File: packages/core/src/client/jsonRpc/transformers.ts
================================================
import { bytesFrom } from "../../bytes/index.js";
import {
  Cell,
  CellDep,
  CellDepLike,
  CellInput,
  CellInputLike,
  CellOutput,
  CellOutputLike,
  DepType,
  DepTypeLike,
  HashType,
  HashTypeLike,
  OutPoint,
  OutPointLike,
  Script,
  ScriptLike,
  Transaction,
  TransactionLike,
  depTypeFrom,
  epochFromHex,
  hashTypeFrom,
} from "../../ckb/index.js";
import { Hex, HexLike, hexFrom } from "../../hex/index.js";
import { NumLike, numFrom, numLeFromBytes, numToHex } from "../../num/index.js";
import { apply } from "../../utils/index.js";
import {
  ClientBlock,
  ClientBlockHeader,
  ClientBlockUncle,
  ClientFindCellsResponse,
  ClientFindTransactionsGroupedResponse,
  ClientFindTransactionsResponse,
  ClientIndexerSearchKey,
  ClientIndexerSearchKeyFilter,
  ClientIndexerSearchKeyLike,
  ClientIndexerSearchKeyTransaction,
  ClientIndexerSearchKeyTransactionLike,
  ClientTransactionResponse,
  TransactionStatus,
} from "../clientTypes.js";
import {
  JsonRpcBlock,
  JsonRpcBlockHeader,
  JsonRpcBlockUncle,
  JsonRpcCellDep,
  JsonRpcCellInput,
  JsonRpcCellOutput,
  JsonRpcDepType,
  JsonRpcHashType,
  JsonRpcIndexerFindTransactionsGroupedResponse,
  JsonRpcIndexerFindTransactionsResponse,
  JsonRpcIndexerSearchKey,
  JsonRpcIndexerSearchKeyFilter,
  JsonRpcIndexerSearchKeyTransaction,
  JsonRpcOutPoint,
  JsonRpcScript,
  JsonRpcTransaction,
} from "./types.js";

export class JsonRpcTransformers {
  static hashTypeFrom(hashType: HashTypeLike): JsonRpcHashType {
    return hashTypeFrom(hashType);
  }
  static hashTypeTo(hashType: JsonRpcHashType): HashType {
    return hashType;
  }
  static depTypeFrom(depType: DepTypeLike): JsonRpcDepType {
    switch (depTypeFrom(depType)) {
      case "code":
        return "code";
      case "depGroup":
        return "dep_group";
    }
  }
  static depTypeTo(depType: JsonRpcDepType): DepType {
    switch (depType) {
      case "code":
        return "code";
      case "dep_group":
        return "depGroup";
    }
  }
  static scriptFrom(scriptLike: ScriptLike): JsonRpcScript {
    const script = Script.from(scriptLike);
    return {
      code_hash: script.codeHash,
      hash_type: JsonRpcTransformers.hashTypeFrom(script.hashType),
      args: script.args,
    };
  }
  static scriptTo(script: JsonRpcScript): Script {
    return Script.from({
      codeHash: script.code_hash,
      hashType: JsonRpcTransformers.hashTypeTo(script.hash_type),
      args: script.args,
    });
  }
  static outPointFrom(outPointLike: OutPointLike): JsonRpcOutPoint {
    const outPoint = OutPoint.from(outPointLike);
    return {
      index: numToHex(outPoint.index),
      tx_hash: outPoint.txHash,
    };
  }
  static outPointTo(outPoint: JsonRpcOutPoint): OutPoint {
    return OutPoint.from({
      index: outPoint.index,
      txHash: outPoint.tx_hash,
    });
  }
  static cellInputFrom(cellInputLike: CellInputLike): JsonRpcCellInput {
    const cellInput = CellInput.from(cellInputLike);
    return {
      previous_output: JsonRpcTransformers.outPointFrom(
        cellInput.previousOutput,
      ),
      since: numToHex(cellInput.since),
    };
  }
  static cellInputTo(cellInput: JsonRpcCellInput): CellInput {
    return CellInput.from({
      previousOutput: JsonRpcTransformers.outPointTo(cellInput.previous_output),
      since: cellInput.since,
    });
  }
  static cellOutputFrom(cellOutput: CellOutputLike): JsonRpcCellOutput {
    return {
      capacity: numToHex(cellOutput.capacity),
      lock: JsonRpcTransformers.scriptFrom(cellOutput.lock),
      type: apply(JsonRpcTransformers.scriptFrom, cellOutput.type),
    };
  }
  static cellOutputTo(cellOutput: JsonRpcCellOutput): CellOutput {
    return CellOutput.from({
      capacity: cellOutput.capacity,
      lock: JsonRpcTransformers.scriptTo(cellOutput.lock),
      type: apply(JsonRpcTransformers.scriptTo, cellOutput.type),
    });
  }
  static cellDepFrom(cellDep: CellDepLike): JsonRpcCellDep {
    return {
      out_point: JsonRpcTransformers.outPointFrom(cellDep.outPoint),
      dep_type: JsonRpcTransformers.depTypeFrom(cellDep.depType),
    };
  }
  static cellDepTo(cellDep: JsonRpcCellDep): CellDep {
    return CellDep.from({
      outPoint: JsonRpcTransformers.outPointTo(cellDep.out_point),
      depType: JsonRpcTransformers.depTypeTo(cellDep.dep_type),
    });
  }
  static transactionFrom(txLike: TransactionLike): JsonRpcTransaction {
    const tx = Transaction.from(txLike);
    return {
      version: numToHex(tx.version),
      cell_deps: tx.cellDeps.map((c) => JsonRpcTransformers.cellDepFrom(c)),
      header_deps: tx.headerDeps,
      inputs: tx.inputs.map((i) => JsonRpcTransformers.cellInputFrom(i)),
      outputs: tx.outputs.map((o) => JsonRpcTransformers.cellOutputFrom(o)),
      outputs_data: tx.outputsData,
      witnesses: tx.witnesses,
    };
  }
  static transactionTo(tx: JsonRpcTransaction): Transaction {
    return Transaction.from({
      version: tx.version,
      cellDeps: tx.cell_deps.map((c) => JsonRpcTransformers.cellDepTo(c)),
      headerDeps: tx.header_deps,
      inputs: tx.inputs.map((i) => JsonRpcTransformers.cellInputTo(i)),
      outputs: tx.outputs.map((o) => JsonRpcTransformers.cellOutputTo(o)),
      outputsData: tx.outputs_data,
      witnesses: tx.witnesses,
    });
  }
  static transactionResponseTo({
    cycles,
    tx_status: { status, block_number, block_hash, tx_index, reason },
    transaction,
  }: {
    cycles?: NumLike;
    tx_status: {
      status: TransactionStatus;
      block_hash?: HexLike;
      tx_index?: NumLike;
      block_number?: NumLike;
      reason?: string;
    };
    transaction: JsonRpcTransaction | null;
  }): ClientTransactionResponse | undefined {
    if (transaction == null) {
      return;
    }

    return ClientTransactionResponse.from({
      transaction: JsonRpcTransformers.transactionTo(transaction),
      status,
      cycles: apply(numFrom, cycles),
      blockHash: apply(hexFrom, block_hash),
      blockNumber: apply(numFrom, block_number),
      txIndex: apply(numFrom, tx_index),
      reason,
    });
  }
  static blockHeaderTo(header: JsonRpcBlockHeader): ClientBlockHeader {
    const dao = bytesFrom(header.dao);
    return {
      compactTarget: numFrom(header.compact_target),
      dao: {
        c: numLeFromBytes(dao.slice(0, 8)),
        ar: numLeFromBytes(dao.slice(8, 16)),
        s: numLeFromBytes(dao.slice(16, 24)),
        u: numLeFromBytes(dao.slice(24, 32)),
      },
      epoch: epochFromHex(header.epoch),
      extraHash: header.extra_hash,
      hash: header.hash,
      nonce: numFrom(header.nonce),
      number: numFrom(header.number),
      parentHash: header.parent_hash,
      proposalsHash: header.proposals_hash,
      timestamp: numFrom(header.timestamp),
      transactionsRoot: header.transactions_root,
      version: numFrom(header.version),
    };
  }
  static blockUncleTo(block: JsonRpcBlockUncle): ClientBlockUncle {
    return {
      header: JsonRpcTransformers.blockHeaderTo(block.header),
      proposals: block.proposals,
    };
  }
  static blockTo(block: JsonRpcBlock): ClientBlock {
    return {
      header: JsonRpcTransformers.blockHeaderTo(block.header),
      proposals: block.proposals,
      transactions: block.transactions.map((t) =>
        JsonRpcTransformers.transactionTo(t),
      ),
      uncles: block.uncles.map((u) => JsonRpcTransformers.blockUncleTo(u)),
    };
  }
  static rangeFrom([a, b]: [NumLike, NumLike]): [Hex, Hex] {
    return [numToHex(a), numToHex(b)];
  }
  static indexerSearchKeyFilterFrom(
    filter: ClientIndexerSearchKeyFilter,
  ): JsonRpcIndexerSearchKeyFilter {
    return {
      script: apply(JsonRpcTransformers.scriptFrom, filter.script),
      script_len_range: apply(
        JsonRpcTransformers.rangeFrom,
        filter.scriptLenRange,
      ),
      output_data: filter.outputData,
      output_data_filter_mode: filter.outputDataSearchMode,
      output_data_len_range: apply(
        JsonRpcTransformers.rangeFrom,
        filter.outputDataLenRange,
      ),
      output_capacity_range: apply(
        JsonRpcTransformers.rangeFrom,
        filter.outputCapacityRange,
      ),
      block_range: apply(JsonRpcTransformers.rangeFrom, filter.blockRange),
    };
  }
  static indexerSearchKeyFrom(
    keyLike: ClientIndexerSearchKeyLike,
  ): JsonRpcIndexerSearchKey {
    const key = ClientIndexerSearchKey.from(keyLike);
    return {
      script: JsonRpcTransformers.scriptFrom(key.script),
      script_type: key.scriptType,
      script_search_mode: key.scriptSearchMode,
      filter: apply(JsonRpcTransformers.indexerSearchKeyFilterFrom, key.filter),
      with_data: key.withData,
    };
  }
  static findCellsResponseTo({
    last_cursor,
    objects,
  }: {
    last_cursor: string;
    objects: {
      out_point: JsonRpcOutPoint;
      output: JsonRpcCellOutput;
      output_data?: Hex;
    }[];
  }): ClientFindCellsResponse {
    return {
      lastCursor: last_cursor,
      cells: objects.map((cell) =>
        Cell.from({
          outPoint: JsonRpcTransformers.outPointTo(cell.out_point),
          cellOutput: JsonRpcTransformers.cellOutputTo(cell.output),
          outputData: cell.output_data ?? "0x",
        }),
      ),
    };
  }
  static indexerSearchKeyTransactionFrom(
    keyLike: ClientIndexerSearchKeyTransactionLike,
  ): JsonRpcIndexerSearchKeyTransaction {
    const key = ClientIndexerSearchKeyTransaction.from(keyLike);
    return {
      script: JsonRpcTransformers.scriptFrom(key.script),
      script_type: key.scriptType,
      script_search_mode: key.scriptSearchMode,
      filter: apply(JsonRpcTransformers.indexerSearchKeyFilterFrom, key.filter),
      group_by_transaction: key.groupByTransaction,
    };
  }
  static findTransactionsResponseTo({
    last_cursor,
    objects,
  }:
    | JsonRpcIndexerFindTransactionsResponse
    | JsonRpcIndexerFindTransactionsGroupedResponse):
    | ClientFindTransactionsResponse
    | ClientFindTransactionsGroupedResponse {
    if (objects.length === 0) {
      return {
        lastCursor: last_cursor,
        transactions: [],
      };
    }
    if ("io_index" in objects[0]) {
      return {
        lastCursor: last_cursor,
        transactions: (
          objects as JsonRpcIndexerFindTransactionsResponse["objects"]
        ).map((tx) => ({
          txHash: tx.tx_hash,
          blockNumber: numFrom(tx.block_number),
          txIndex: numFrom(tx.tx_index),
          cellIndex: numFrom(tx.io_index),
          isInput: tx.io_type === "input",
        })),
      };
    }

    return {
      lastCursor: last_cursor,
      transactions: (
        objects as JsonRpcIndexerFindTransactionsGroupedResponse["objects"]
      ).map((tx) => ({
        txHash: tx.tx_hash,
        blockNumber: numFrom(tx.block_number),
        txIndex: numFrom(tx.tx_index),
        cells: tx.cells.map(([type, i]) => ({
          isInput: type === "input",
          cellIndex: numFrom(i),
        })),
      })),
    };
  }
}


================================================
File: packages/core/src/client/jsonRpc/types.ts
================================================
import { Hex } from "../../hex/index.js";

export type JsonRpcHashType = "type" | "data" | "data1" | "data2";
export type JsonRpcDepType = "dep_group" | "code";

export type JsonRpcScript = {
  code_hash: Hex;
  hash_type: JsonRpcHashType;
  args: Hex;
};

export type JsonRpcOutPoint = {
  index: Hex;
  tx_hash: Hex;
};

export type JsonRpcCellInput = {
  previous_output: JsonRpcOutPoint;
  since: Hex;
};

export type JsonRpcCellOutput = {
  capacity: Hex;
  lock: JsonRpcScript;
  type?: JsonRpcScript;
};

export type JsonRpcCellDep = {
  out_point: JsonRpcOutPoint;
  dep_type: JsonRpcDepType;
};

export type JsonRpcTransaction = {
  version: Hex;
  cell_deps: JsonRpcCellDep[];
  header_deps: Hex[];
  inputs: JsonRpcCellInput[];
  outputs: JsonRpcCellOutput[];
  outputs_data: Hex[];
  witnesses: Hex[];
};

export type JsonRpcBlockHeader = {
  compact_target: Hex;
  dao: Hex;
  epoch: Hex;
  extra_hash: Hex;
  hash: Hex;
  nonce: Hex;
  number: Hex;
  parent_hash: Hex;
  proposals_hash: Hex;
  timestamp: Hex;
  transactions_root: Hex;
  version: Hex;
};

export type JsonRpcBlockUncle = {
  header: JsonRpcBlockHeader;
  proposals: Hex[];
};

export type JsonRpcBlock = {
  header: JsonRpcBlockHeader;
  proposals: Hex[];
  transactions: JsonRpcTransaction[];
  uncles: JsonRpcBlockUncle[];
};

export type JsonRpcIndexerSearchKeyFilter = {
  script?: JsonRpcScript;
  script_len_range?: [Hex, Hex];
  output_data?: Hex;
  output_data_filter_mode?: "prefix" | "exact" | "partial";
  output_data_len_range?: [Hex, Hex];
  output_capacity_range?: [Hex, Hex];
  block_range?: [Hex, Hex];
};

export type JsonRpcIndexerSearchKey = {
  script: JsonRpcScript;
  script_type: "lock" | "type";
  script_search_mode?: "prefix" | "exact" | "partial";
  filter?: JsonRpcIndexerSearchKeyFilter;
  with_data?: boolean;
};

export type JsonRpcIndexerSearchKeyTransaction = {
  script: JsonRpcScript;
  script_type: "lock" | "type";
  script_search_mode?: "prefix" | "exact" | "partial";
  filter?: JsonRpcIndexerSearchKeyFilter;
  group_by_transaction?: boolean;
};

export type JsonRpcIndexerFindTransactionsResponse = {
  last_cursor: string;
  objects: {
    tx_hash: Hex;
    block_number: Hex;
    tx_index: Hex;
    io_type: "input" | "output";
    io_index: Hex;
  }[];
};

export type JsonRpcIndexerFindTransactionsGroupedResponse = {
  last_cursor: string;
  objects: {
    tx_hash: Hex;
    block_number: Hex;
    tx_index: Hex;
    cells: ["input" | "output", Hex][];
  }[];
};


================================================
File: packages/core/src/fixedPoint/index.test.ts
================================================
import { fixedPointFrom, fixedPointToString } from "./index.js";

describe("fixedPointToString", () => {
  const cases: [bigint, string, number?][] = [
    [0n, "0"],
    [1n, "0.00000001"],
    [100000000n, "1"],
    [1000000000n, "10"],
    [1010100000n, "10.101"],
    [11n, "1.1", 1],
    [0n, "0", 1],
    [1n, "1", 0],
    [0n, "0", 0],
  ];

  cases.forEach(([i, o, decimals]) =>
    test(`${i} with ${decimals ?? "default"} decimals = "${o}"`, () => {
      expect(fixedPointToString(i, decimals)).toBe(o);
    }),
  );
});

describe("fixedPointFrom string", () => {
  const cases: [string, bigint, number?][] = [
    ["0", 0n],
    ["0.00000001", 1n],
    ["1", 100000000n],
    ["10", 1000000000n],
    ["10.101", 1010100000n],
    ["1.1", 11n, 1],
    ["0", 0n, 1],
    ["1", 1n, 0],
    ["0", 0n, 0],
  ];

  cases.forEach(([i, o, decimals]) =>
    test(`"${i}" = ${o} with ${decimals ?? "default"} decimals `, () => {
      expect(fixedPointFrom(i, decimals)).toBe(o);
    }),
  );
});

describe("fixedPointFrom number", () => {
  const cases: [number, bigint, number?][] = [
    [0.00000001, 1n],
    [10.101, 1010100000n],
    [1.1, 11n, 1],
  ];

  cases.forEach(([i, o, decimals]) =>
    test(`${i} = ${o} with ${decimals ?? "default"} decimals `, () => {
      expect(fixedPointFrom(i, decimals)).toBe(o);
    }),
  );
});


================================================
File: packages/core/src/fixedPoint/index.ts
================================================
/**
 * Represents a fixed point value as a bigint.
 * @public
 */

export type FixedPoint = bigint;

/**
 * Represents a value that can be converted to a fixed point value.
 * It can be a bigint, string, or number.
 * @public
 */

export type FixedPointLike = bigint | string | number;

/**
 * Converts a FixedPointLike value to its string representation with fixed-point decimals.
 * @public
 *
 * @param val - The value to convert, which can be a bigint, string, or number.
 * @param decimals - The number of decimal places for the fixed-point representation. Default is 8.
 * @returns A string representing the fixed-point value.
 *
 * @example
 * ```typescript
 * const str = fixedPointToString(123456789n, 8); // Outputs "1.23456789"
 * const strFromString = fixedPointToString("1.23456789", 8); // Outputs "1.23456789"
 * const strFromNumber = fixedPointToString(1.23456789, 8); // Outputs "1.23456789"
 * ```
 */

export function fixedPointToString(val: FixedPointLike, decimals = 8): string {
  const str = fixedPointFrom(val).toString();
  if (decimals === 0) {
    return str;
  }

  const l = str.length <= decimals ? "0" : str.slice(0, -decimals);
  const r = str.slice(-decimals).padStart(decimals, "0").replace(/0*$/, "");
  if (r === "") {
    return l;
  }

  return `${l}.${r}`;
}

/**
 * Converts a FixedPointLike value to a FixedPoint (bigint) with fixed-point decimals.
 * @public
 *
 * @param val - The value to convert, which can be a bigint, string, or number.
 * @param decimals - The number of decimal places for the fixed-point representation. Default is 8.
 * @returns A FixedPoint (bigint) representing the value with fixed-point decimals.
 *
 * @example
 * ```typescript
 * const fixedPoint = fixedPointFrom(123456789n, 8); // Outputs 123456789n
 * const fixedPointFromString = fixedPointFrom("1.23456789", 8); // Outputs 123456789n
 * const fixedPointFromNumber = fixedPointFrom(1.23456789, 8); // Outputs 123456789n
 * ```
 */

export function fixedPointFrom(val: FixedPointLike, decimals = 8): FixedPoint {
  if (typeof val === "bigint") {
    return val;
  }

  const [l, r] = (
    typeof val === "number" ? val.toFixed(decimals) : val.toString()
  ).split(".");
  const lVal = BigInt(l.padEnd(l.length + decimals, "0"));
  if (r === undefined) {
    return lVal;
  }

  return lVal + BigInt(r.slice(0, decimals).padEnd(decimals, "0"));
}

/**
 * Represents the fixed point value of zero as a bigint.
 * @public
 */

export const Zero: FixedPoint = 0n;

/**
 * Represents the fixed point value of one as a FixedPoint (bigint).
 * Equivalent to 1 in fixed-point representation with default decimals (8).
 * @public
 */

export const One: FixedPoint = fixedPointFrom("1");


================================================
File: packages/core/src/hasher/advanced.ts
================================================
export const CKB_BLAKE2B_PERSONAL = "ckb-default-hash";


================================================
File: packages/core/src/hasher/hasher.ts
================================================
import { BytesLike } from "../bytes/index.js";
import { Hex } from "../hex/index.js";

/**
 * @public
 */
export interface Hasher {
  /**
   * Updates the hash with the given data.
   *
   * @param data - The data to update the hash with.
   * @returns The current Hasher instance for chaining.
   *
   * @example
   * ```typescript
   * const hasher = new Hasher();
   * hasher.update("some data").update("more data");
   * const hash = hasher.digest();
   * ```
   */

  update(data: BytesLike): Hasher;

  /**
   * Finalizes the hash and returns the digest as a hexadecimal string.
   *
   * @returns The hexadecimal string representation of the hash.
   *
   * @example
   * ```typescript
   * const hasher = new Hasher();
   * hasher.update("some data");
   * const hash = hasher.digest(); // Outputs something like "0x..."
   * ```
   */

  digest(): Hex;
}


================================================
File: packages/core/src/hasher/hasherCkb.ts
================================================
import { blake2b } from "@noble/hashes/blake2b";
import { BytesLike, bytesFrom } from "../bytes/index.js";
import { CellInput, CellInputLike } from "../ckb/index.js";
import { Hex, hexFrom } from "../hex/index.js";
import { NumLike, numLeToBytes } from "../num/index.js";
import { CKB_BLAKE2B_PERSONAL } from "./advanced.js";
import { Hasher } from "./hasher.js";

/**
 * @public
 */
export class HasherCkb implements Hasher {
  private readonly hasher: ReturnType<(typeof blake2b)["create"]>;

  /**
   * Creates an instance of Hasher.
   *
   * @param outLength - The output length of the hash in bytes. Default is 32.
   * @param personal - The personal string for the Blake2b algorithm. Default is CKB_BLAKE2B_PERSONAL.
   */

  constructor(outLength = 32, personal = CKB_BLAKE2B_PERSONAL) {
    this.hasher = blake2b.create({
      personalization: personal,
      dkLen: outLength,
    });
  }

  /**
   * Updates the hash with the given data.
   *
   * @param data - The data to update the hash with.
   * @returns The current Hasher instance for chaining.
   *
   * @example
   * ```typescript
   * const hasher = new Hasher();
   * hasher.update("some data").update("more data");
   * const hash = hasher.digest();
   * ```
   */

  update(data: BytesLike): HasherCkb {
    this.hasher.update(bytesFrom(data));
    return this;
  }

  /**
   * Finalizes the hash and returns the digest as a hexadecimal string.
   *
   * @returns The hexadecimal string representation of the hash.
   *
   * @example
   * ```typescript
   * const hasher = new Hasher();
   * hasher.update("some data");
   * const hash = hasher.digest(); // Outputs something like "0x..."
   * ```
   */

  digest(): Hex {
    return hexFrom(this.hasher.digest());
  }
}

/**
 * Computes the CKB hash of the given data using the Blake2b algorithm.
 * @public
 *
 * @param data - The data to hash.
 * @returns The hexadecimal string representation of the hash.
 *
 * @example
 * ```typescript
 * const hash = hashCkb("some data"); // Outputs something like "0x..."
 * ```
 */

export function hashCkb(...data: BytesLike[]): Hex {
  const hasher = new HasherCkb();
  data.forEach((d) => hasher.update(d));
  return hasher.digest();
}

/**
 * Computes the Type ID hash of the given data.
 * @public
 *
 * @param cellInputLike - The first cell input of the transaction.
 * @param outputIndex - The output index of the Type ID cell.
 * @returns The hexadecimal string representation of the hash.
 *
 * @example
 * ```typescript
 * const hash = hashTypeId(cellInput, outputIndex); // Outputs something like "0x..."
 * ```
 */

export function hashTypeId(
  cellInputLike: CellInputLike,
  outputIndex: NumLike,
): Hex {
  return hashCkb(
    CellInput.from(cellInputLike).toBytes(),
    numLeToBytes(outputIndex, 8),
  );
}


================================================
File: packages/core/src/hasher/hasherKeecak256.ts
================================================
import { keccak_256 } from "@noble/hashes/sha3";
import { BytesLike, bytesFrom } from "../bytes/index.js";
import { Hex, hexFrom } from "../hex/index.js";
import { Hasher } from "./hasher.js";

/**
 * @public
 */
export class HasherKeecak256 implements Hasher {
  private readonly hasher: ReturnType<(typeof keccak_256)["create"]>;

  /**
   * Creates an instance of Hasher.
   */

  constructor() {
    this.hasher = keccak_256.create();
  }

  /**
   * Updates the hash with the given data.
   *
   * @param data - The data to update the hash with.
   * @returns The current Hasher instance for chaining.
   *
   * @example
   * ```typescript
   * const hasher = new Hasher();
   * hasher.update("some data").update("more data");
   * const hash = hasher.digest();
   * ```
   */

  update(data: BytesLike): HasherKeecak256 {
    this.hasher.update(bytesFrom(data));
    return this;
  }

  /**
   * Finalizes the hash and returns the digest as a hexadecimal string.
   *
   * @returns The hexadecimal string representation of the hash.
   *
   * @example
   * ```typescript
   * const hasher = new Hasher();
   * hasher.update("some data");
   * const hash = hasher.digest(); // Outputs something like "0x..."
   * ```
   */

  digest(): Hex {
    return hexFrom(this.hasher.digest());
  }
}


================================================
File: packages/core/src/hasher/index.ts
================================================
export * from "./hasher.js";
export * from "./hasherCkb.js";
export * from "./hasherKeecak256.js";


================================================
File: packages/core/src/hex/index.ts
================================================
import { bytesFrom, BytesLike, bytesTo } from "../bytes/index.js";

/**
 * Represents a hexadecimal string prefixed with "0x".
 * @public
 */
export type Hex = `0x${string}`;
/**
 * Represents a value that can be converted to a hexadecimal string.
 * It extends the BytesLike type.
 * @public
 */
export type HexLike = BytesLike;

/**
 * Converts a HexLike value to a Hex string.
 * @public
 *
 * @param hex - The value to convert, which can be a string, Uint8Array, ArrayBuffer, or number array.
 * @returns A Hex string representing the value.
 *
 * @example
 * ```typescript
 * const hexString = hexFrom("68656c6c6f"); // Outputs "0x68656c6c6f"
 * const hexStringFromBytes = hexFrom(new Uint8Array([104, 101, 108, 108, 111])); // Outputs "0x68656c6c6f"
 * ```
 */
export function hexFrom(hex: HexLike): Hex {
  return `0x${bytesTo(bytesFrom(hex), "hex")}`;
}


================================================
File: packages/core/src/jsonRpc/advanced.ts
================================================
export * from "./transports/advanced.js";


================================================
File: packages/core/src/jsonRpc/index.ts
================================================
export * from "./requestor.js";


================================================
File: packages/core/src/jsonRpc/requestor.ts
================================================
import {
  JsonRpcPayload,
  Transport,
  TransportFallback,
  transportFromUri,
} from "./transports/advanced.js";

/**
 * Applies a transformation function to a value if the transformer is provided.
 *
 * @param value - The value to be transformed.
 * @param transformer - An optional transformation function.
 * @returns The transformed value if a transformer is provided, otherwise the original value.
 *
 * @example
 * ```typescript
 * const result = transform(5, (x) => x * 2); // Outputs 10
 * const resultWithoutTransformer = transform(5); // Outputs 5
 * ```
 */
function transform(value: unknown, transformer?: (i: unknown) => unknown) {
  if (transformer) {
    return transformer(value);
  }
  return value;
}

export type RequestorJsonRpcConfig = {
  fallbacks?: string[];
  timeout?: number;
  maxConcurrent?: number;
  transport?: Transport;
};

export class RequestorJsonRpc {
  public readonly maxConcurrent?: number;
  private concurrent = 0;
  private readonly pending: (() => void)[] = [];

  public readonly transport: Transport;

  private id = 0;

  /**
   * Creates an instance of ClientJsonRpc.
   *
   * @param url_ - The URL of the JSON-RPC server.
   * @param timeout - The timeout for requests in milliseconds
   */
  constructor(
    private readonly url_: string,
    config?: RequestorJsonRpcConfig,
    private readonly onError?: (err: unknown) => Promise<void> | void,
  ) {
    this.maxConcurrent = config?.maxConcurrent;
    this.transport =
      config?.transport ??
      new TransportFallback(
        Array.from(
          new Set([url_, ...(config?.fallbacks ?? [])]).values(),
          (url) => transportFromUri(url, config),
        ),
      );
  }

  /**
   * Returns the URL of the JSON-RPC server.
   *
   * @returns The URL of the JSON-RPC server.
   */

  get url(): string {
    return this.url_;
  }

  /**
   * request a JSON-RPC method.
   *
   * @param rpcMethod - The JSON-RPC method.
   * @param params - Params for the method.
   * @param inTransformers - An array of input transformers.
   * @param outTransformer - An output transformer function.
   * @returns Method response.
   */
  async request(
    rpcMethod: string,
    params: unknown[],
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    inTransformers?: (((_: any) => unknown) | undefined)[],
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    outTransformer?: (_: any) => unknown,
  ): Promise<unknown> {
    const payload = this.buildPayload(
      rpcMethod,
      inTransformers
        ? await Promise.all(
            params
              .concat(
                Array.from(
                  new Array(Math.max(inTransformers.length - params.length, 0)),
                ),
              )
              .map((v, i) => transform(v, inTransformers[i])),
          )
        : params,
    );

    try {
      return await transform(
        await this.requestPayload(payload),
        outTransformer,
      );
    } catch (err: unknown) {
      if (!this.onError) {
        throw err;
      }
      await this.onError(err);
    }
  }

  async requestPayload(payload: JsonRpcPayload): Promise<unknown> {
    if (
      this.maxConcurrent !== undefined &&
      this.concurrent >= this.maxConcurrent
    ) {
      const pending = new Promise<void>((resolve) =>
        this.pending.push(resolve),
      );
      await pending;
    }

    this.concurrent += 1;
    const res = (await this.transport.request(payload)) as {
      id: number;
      error: unknown;
      result: unknown;
    };
    this.concurrent -= 1;
    this.pending.shift()?.();

    if (res.id !== payload.id) {
      throw new Error(`Id mismatched, got ${res.id}, expected ${payload.id}`);
    }
    if (res.error) {
      throw res.error;
    }
    return res.result;
  }

  /**
   * Builds a JSON-RPC payload for the given method and parameters.
   *
   * @param method - The JSON-RPC method name.
   * @param req - The parameters for the JSON-RPC method.
   * @returns The JSON-RPC payload.
   */

  buildPayload(method: string, req: unknown[]): JsonRpcPayload {
    return {
      id: this.id++,
      method,
      params: req,
      jsonrpc: "2.0",
    };
  }
}


================================================
File: packages/core/src/jsonRpc/transports/advanced.ts
================================================
export * from "./factory.js";
export * from "./fallback.js";
export * from "./http.js";
export * from "./transport.js";
export * from "./webSocket.js";


================================================
File: packages/core/src/jsonRpc/transports/factory.ts
================================================
import { TransportHttp } from "./http.js";
import { TransportWebSocket } from "./webSocket.js";

export function transportFromUri(uri: string, config?: { timeout?: number }) {
  if (uri.startsWith("wss://") || uri.startsWith("ws://")) {
    return new TransportWebSocket(uri, config?.timeout);
  }

  return new TransportHttp(uri, config?.timeout);
}


================================================
File: packages/core/src/jsonRpc/transports/fallback.ts
================================================
import { JsonRpcPayload, Transport } from "./transport.js";

export class TransportFallback implements Transport {
  // Current transport index
  private i = 0;

  constructor(private readonly transports: Transport[]) {}

  async request(data: JsonRpcPayload): Promise<unknown> {
    let triedCount = 0;

    while (true) {
      try {
        return await this.transports[this.i % this.transports.length].request(
          data,
        );
      } catch (err) {
        triedCount += 1;
        this.i += 1;

        if (triedCount >= this.transports.length) {
          throw err;
        }
      }
    }
  }
}


================================================
File: packages/core/src/jsonRpc/transports/http.ts
================================================
import { JsonRpcPayload, Transport } from "./transport.js";

export class TransportHttp implements Transport {
  constructor(
    private readonly url: string,
    private readonly timeout = 30000,
  ) {}

  async request(payload: JsonRpcPayload) {
    const aborter = new AbortController();
    const abortTimer = setTimeout(() => aborter.abort(), this.timeout);

    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
    const raw = await (
      await fetch(this.url, {
        method: "POST",
        headers: {
          "content-type": "application/json",
        },
        body: JSON.stringify(payload),
        signal: aborter.signal,
      })
    ).json();
    clearTimeout(abortTimer);
    // eslint-disable-next-line @typescript-eslint/no-unsafe-return
    return raw;
  }
}


================================================
File: packages/core/src/jsonRpc/transports/transport.ts
================================================
export type JsonRpcPayload = {
  id: number;
  jsonrpc: "2.0";
  method: string;
  params: unknown[] | Record<string, unknown>;
};

export interface Transport {
  /**
   * Sends a JSON-RPC request to the server.
   *
   * @param payload - The JSON-RPC payload to send.
   * @returns The result of the JSON-RPC request.
   *
   * @throws Will throw an error if the response ID does not match the request ID, or if the response contains an error.
   */
  request(data: JsonRpcPayload): Promise<unknown>;
}


================================================
File: packages/core/src/jsonRpc/transports/webSocket.ts
================================================
import WebSocket from "isomorphic-ws";
import { JsonRpcPayload, Transport } from "./transport.js";

export class TransportWebSocket implements Transport {
  private ongoing: Map<
    number,
    [
      (response: unknown) => unknown,
      (error: unknown) => unknown,
      ReturnType<typeof setTimeout>,
    ]
  > = new Map();
  private socket?: WebSocket;
  private openSocket?: Promise<WebSocket>;

  constructor(
    private readonly url: string,
    private readonly timeout = 30000,
  ) {}

  request(data: JsonRpcPayload) {
    const socket = (() => {
      if (
        this.socket &&
        this.socket.readyState !== this.socket.CLOSING &&
        this.socket.readyState !== this.socket.CLOSED &&
        this.openSocket
      ) {
        return this.openSocket;
      }
      const socket = new WebSocket(this.url);
      const onMessage = ({ data }: WebSocket.MessageEvent) => {
        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
        const res = JSON.parse(data as string);
        if (
          typeof res !== "object" ||
          res === null ||
          typeof res.id !== "number"
        ) {
          throw new Error(`Unknown response ${data as string}`);
        }
        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
        const id: number = res.id;

        const req = this.ongoing.get(id);
        if (!req) {
          return;
        }
        const [resolve, _, timeout] = req;
        clearTimeout(timeout);
        this.ongoing.delete(id);

        resolve(res);
      };
      const onClose = () => {
        this.ongoing.forEach(([_, reject, timeout]) => {
          clearTimeout(timeout);
          reject(new Error("Connection closed"));
        });
        this.ongoing.clear();
      };

      socket.onclose = onClose;
      socket.onerror = onClose;
      socket.onmessage = onMessage;

      this.socket = socket;
      this.openSocket = new Promise<WebSocket>((resolve) => {
        if (socket.readyState === socket.OPEN) {
          resolve(socket);
        } else {
          socket.onopen = () => {
            resolve(socket);
          };
        }
      });
      return this.openSocket;
    })();

    return new Promise((resolve, reject) => {
      const req: [
        (res: unknown) => unknown,
        (err: unknown) => unknown,
        ReturnType<typeof setTimeout>,
      ] = [
        resolve,
        reject,
        setTimeout(() => {
          this.ongoing.delete(data.id);
          void socket
            .then((socket) => socket.close())
            .catch((err) => reject(err));
          reject(new Error("Request timeout"));
        }, this.timeout),
      ];
      this.ongoing.set(data.id, req);

      void socket
        .then((socket) => {
          if (
            socket.readyState === socket.CLOSED ||
            socket.readyState === socket.CLOSING
          ) {
            clearTimeout(req[2]);
            this.ongoing.delete(data.id);
            reject(new Error("Connection closed"));
          } else {
            socket.send(JSON.stringify(data));
          }
        })
        .catch((err) => reject(err));
    });
  }
}


================================================
File: packages/core/src/keystore/index.ts
================================================
import { ctr } from "@noble/ciphers/aes";
import { scryptAsync } from "@noble/hashes/scrypt";
import { keccak_256 } from "@noble/hashes/sha3";
import { randomBytes } from "@noble/hashes/utils";
import { Bytes, BytesLike, bytesConcat, bytesFrom } from "../bytes/index.js";
import { hexFrom } from "../hex/index.js";

// The parameter r ("blockSize")
const DEFAULT_SCRYPT_PARAM_R = 8;
// The parallelization parameter p
const DEFAULT_SCRYPT_PARAM_P = 1;
// The CPU/Memory cost parameter N
const DEFAULT_SCRYPT_PARAM_N = 262144;

function mac(derivedKey: Bytes, cipherText: Bytes) {
  return hexFrom(
    keccak_256(bytesConcat(derivedKey.slice(16, 32), cipherText)),
  ).slice(2);
}

/**
 * @public
 */
export async function keystoreEncrypt(
  privateKeyLike: BytesLike,
  chainCodeLike: BytesLike,
  password: string,
): Promise<{
  id: string;
  crypto: {
    ciphertext: string;
    cipherparams: {
      iv: string;
    };
    cipher: string;
    kdf: string;
    kdfparams: {
      n: number;
      r: number;
      p: number;
      dklen: number;
      salt: string;
    };
    mac: string;
  };
}> {
  const salt = randomBytes(32);
  const iv = randomBytes(16);
  const kdfparams = {
    dklen: 32,
    salt: hexFrom(salt).slice(2),
    n: DEFAULT_SCRYPT_PARAM_N,
    r: DEFAULT_SCRYPT_PARAM_R,
    p: DEFAULT_SCRYPT_PARAM_P,
  };
  const derivedKey = await scryptAsync(bytesFrom(password, "utf8"), salt, {
    N: kdfparams.n,
    r: kdfparams.r,
    p: kdfparams.p,
    dkLen: kdfparams.dklen,
  });
  const cipher = ctr(
    derivedKey.slice(0, 16),
    iv.map((v) => v),
  );
  const ciphertext = cipher.encrypt(
    bytesConcat(bytesFrom(privateKeyLike), bytesFrom(chainCodeLike)),
  );

  return {
    id: hexFrom(randomBytes(16)).slice(2),
    crypto: {
      ciphertext: hexFrom(ciphertext).slice(2),
      cipherparams: {
        iv: hexFrom(iv).slice(2),
      },
      cipher: "aes-128-ctr",
      kdf: "scrypt",
      kdfparams,
      mac: mac(derivedKey, ciphertext),
    },
  };
}

/**
 * @public
 */
export async function keystoreDecrypt(
  keystore: unknown,
  password: string,
): Promise<{
  privateKey: Bytes;
  chainCode: Bytes;
}> {
  if (
    typeof keystore !== "object" ||
    keystore === null ||
    !("crypto" in keystore)
  ) {
    throw Error("Invalid keystore");
  }
  const crypto = keystore.crypto;

  if (
    typeof crypto !== "object" ||
    crypto === null ||
    !("kdfparams" in crypto) ||
    !("ciphertext" in crypto) ||
    typeof crypto.ciphertext !== "string" ||
    !("mac" in crypto) ||
    typeof crypto.mac !== "string" ||
    !("cipherparams" in crypto) ||
    typeof crypto.cipherparams !== "object" ||
    crypto.cipherparams === null ||
    !("iv" in crypto.cipherparams) ||
    typeof crypto.cipherparams.iv !== "string"
  ) {
    throw Error("Invalid crypto");
  }
  const kdfparams = crypto.kdfparams;

  if (
    typeof kdfparams !== "object" ||
    kdfparams === null ||
    !("n" in kdfparams) ||
    typeof kdfparams.n !== "number" ||
    !("r" in kdfparams) ||
    typeof kdfparams.r !== "number" ||
    !("p" in kdfparams) ||
    typeof kdfparams.p !== "number" ||
    !("dklen" in kdfparams) ||
    typeof kdfparams.dklen !== "number" ||
    !("salt" in kdfparams) ||
    typeof kdfparams.salt !== "string"
  ) {
    throw Error("Invalid kdfparams");
  }

  const derivedKey = await scryptAsync(
    bytesFrom(password, "utf8"),
    bytesFrom(kdfparams.salt),
    {
      N: kdfparams.n,
      r: kdfparams.r,
      p: kdfparams.p,
      dkLen: kdfparams.dklen,
    },
  );
  const ciphertext = bytesFrom(crypto.ciphertext);
  if (mac(derivedKey, ciphertext) !== crypto.mac) {
    throw Error("Invalid password");
  }
  const cipher = ctr(
    derivedKey.slice(0, 16),
    bytesFrom(crypto.cipherparams.iv),
  );
  const result = cipher.decrypt(ciphertext);
  return {
    privateKey: result.slice(0, 32),
    chainCode: result.slice(32),
  };
}


================================================
File: packages/core/src/molecule/barrel.ts
================================================
export * from "./codec.js";
export * from "./entity.js";
export * from "./predefined.js";


================================================
File: packages/core/src/molecule/codec.ts
================================================
/* eslint-disable @typescript-eslint/no-explicit-any */

import {
  Bytes,
  bytesConcat,
  bytesConcatTo,
  bytesFrom,
  BytesLike,
} from "../bytes/index.js";
import {
  Num,
  numBeFromBytes,
  numBeToBytes,
  numFromBytes,
  NumLike,
  numToBytes,
} from "../num/index.js";

export type CodecLike<Encodable, Decoded = Encodable> = {
  readonly encode: (encodable: Encodable) => Bytes;
  readonly decode: (decodable: BytesLike) => Decoded;
  readonly byteLength?: number;
};
export class Codec<Encodable, Decoded = Encodable> {
  constructor(
    public readonly encode: (encodable: Encodable) => Bytes,
    public readonly decode: (decodable: BytesLike) => Decoded,
    public readonly byteLength?: number, // if provided, treat codec as fixed length
  ) {}

  static from<Encodable, Decoded = Encodable>({
    encode,
    decode,
    byteLength,
  }: CodecLike<Encodable, Decoded>): Codec<Encodable, Decoded> {
    return new Codec(
      (encodable: Encodable) => {
        const encoded = encode(encodable);
        if (byteLength !== undefined && encoded.byteLength !== byteLength) {
          throw new Error(
            `Codec.encode: expected byte length ${byteLength}, got ${encoded.byteLength}`,
          );
        }
        return encoded;
      },
      (decodable) => {
        const decodableBytes = bytesFrom(decodable);
        if (
          byteLength !== undefined &&
          decodableBytes.byteLength !== byteLength
        ) {
          throw new Error(
            `Codec.decode: expected byte length ${byteLength}, got ${decodableBytes.byteLength}`,
          );
        }
        return decode(decodable);
      },
      byteLength,
    );
  }

  map<NewEncodable = Encodable, NewDecoded = Decoded>({
    inMap,
    outMap,
  }: {
    inMap?: (encodable: NewEncodable) => Encodable;
    outMap?: (decoded: Decoded) => NewDecoded;
  }): Codec<NewEncodable, NewDecoded> {
    return new Codec(
      (encodable) =>
        this.encode((inMap ? inMap(encodable) : encodable) as Encodable),
      (buffer) =>
        (outMap
          ? outMap(this.decode(buffer))
          : this.decode(buffer)) as NewDecoded,
      this.byteLength,
    );
  }

  mapIn<NewEncodable>(
    map: (encodable: NewEncodable) => Encodable,
  ): Codec<NewEncodable, Decoded> {
    return this.map({ inMap: map });
  }

  mapOut<NewDecoded>(
    map: (decoded: Decoded) => NewDecoded,
  ): Codec<Encodable, NewDecoded> {
    return this.map({ outMap: map });
  }
}

export type EncodableType<T extends CodecLike<any, any>> =
  T extends CodecLike<infer Encodable, unknown> ? Encodable : never;
export type DecodedType<T extends CodecLike<any, any>> =
  T extends CodecLike<any, infer Decoded> ? Decoded : never;

function uint32To(numLike: NumLike) {
  return numToBytes(numLike, 4);
}

function uint32From(bytesLike: BytesLike) {
  return Number(numFromBytes(bytesLike));
}

/**
 * Vector with fixed size item codec
 * @param itemCodec fixed-size vector item codec
 */
export function fixedItemVec<Encodable, Decoded>(
  itemCodec: CodecLike<Encodable, Decoded>,
): Codec<Array<Encodable>, Array<Decoded>> {
  const itemByteLength = itemCodec.byteLength;
  if (itemByteLength === undefined) {
    throw new Error("fixedItemVec: itemCodec requires a byte length");
  }

  return Codec.from({
    encode(userDefinedItems) {
      try {
        const concatted: number[] = [];
        bytesConcatTo(concatted, uint32To(userDefinedItems.length));
        for (const item of userDefinedItems) {
          bytesConcatTo(concatted, itemCodec.encode(item));
        }
        return bytesFrom(concatted);
      } catch (e: unknown) {
        throw new Error(`fixedItemVec(${e?.toString()})`);
      }
    },
    decode(buffer) {
      const value = bytesFrom(buffer);
      if (value.byteLength < 4) {
        throw new Error(
          `fixedItemVec: too short buffer, expected at least 4 bytes, but got ${value.byteLength}`,
        );
      }
      const itemCount = uint32From(value.slice(0, 4));
      const byteLength = 4 + itemCount * itemByteLength;
      if (value.byteLength !== byteLength) {
        throw new Error(
          `fixedItemVec: invalid buffer size, expected ${byteLength}, but got ${value.byteLength}`,
        );
      }

      try {
        const decodedArray: Array<Decoded> = [];
        for (let offset = 4; offset < byteLength; offset += itemByteLength) {
          decodedArray.push(
            itemCodec.decode(value.slice(offset, offset + itemByteLength)),
          );
        }
        return decodedArray;
      } catch (e) {
        throw new Error(`fixedItemVec(${e?.toString()})`);
      }
    },
  });
}

/**
 * Vector with dynamic size item codec, you can create a recursive vector with this function
 * @param itemCodec the vector item codec. It can be fixed-size or dynamic-size.
 */
export function dynItemVec<Encodable, Decoded>(
  itemCodec: CodecLike<Encodable, Decoded>,
): Codec<Array<Encodable>, Array<Decoded>> {
  return Codec.from({
    encode(userDefinedItems) {
      try {
        let offset = 4 + userDefinedItems.length * 4;
        const header: number[] = [];
        const body: number[] = [];

        for (const item of userDefinedItems) {
          const encoded = itemCodec.encode(item);
          bytesConcatTo(header, uint32To(offset));
          bytesConcatTo(body, encoded);
          offset += encoded.byteLength;
        }

        const packedTotalSize = uint32To(header.length + body.length + 4);
        return bytesConcat(packedTotalSize, header, body);
      } catch (e) {
        throw new Error(`dynItemVec(${e?.toString()})`);
      }
    },
    decode(buffer) {
      const value = bytesFrom(buffer);
      if (value.byteLength < 4) {
        throw new Error(
          `dynItemVec: too short buffer, expected at least 4 bytes, but got ${value.byteLength}`,
        );
      }
      const byteLength = uint32From(value.slice(0, 4));
      if (byteLength !== value.byteLength) {
        throw new Error(
          `dynItemVec: invalid buffer size, expected ${byteLength}, but got ${value.byteLength}`,
        );
      }

      if (byteLength === 4) {
        return [];
      }

      const offset = uint32From(value.slice(4, 8));
      const itemCount = (offset - 4) / 4;
      const offsets = Array.from(new Array(itemCount), (_, index) =>
        uint32From(value.slice(4 + index * 4, 8 + index * 4)),
      );
      offsets.push(byteLength);
      try {
        const decodedArray: Array<Decoded> = [];
        for (let index = 0; index < offsets.length - 1; index++) {
          const start = offsets[index];
          const end = offsets[index + 1];
          const itemBuffer = value.slice(start, end);
          decodedArray.push(itemCodec.decode(itemBuffer));
        }
        return decodedArray;
      } catch (e) {
        throw new Error(`dynItemVec(${e?.toString()})`);
      }
    },
  });
}

/**
 * General vector codec, if `itemCodec` is fixed size type, it will create a fixvec codec, otherwise a dynvec codec will be created.
 * @param itemCodec
 */
export function vector<Encodable, Decoded>(
  itemCodec: CodecLike<Encodable, Decoded>,
): Codec<Array<Encodable>, Array<Decoded>> {
  if (itemCodec.byteLength !== undefined) {
    return fixedItemVec(itemCodec);
  }
  return dynItemVec(itemCodec);
}

/**
 * Option is a dynamic-size type.
 * Serializing an option depends on whether it is empty or not:
 * - if it's empty, there is zero bytes (the size is 0).
 * - if it's not empty, just serialize the inner item (the size is same as the inner item's size).
 * @param innerCodec
 */
export function option<Encodable, Decoded>(
  innerCodec: CodecLike<Encodable, Decoded>,
): Codec<Encodable | undefined | null, Decoded | undefined> {
  return Codec.from({
    encode(userDefinedOrNull) {
      if (!userDefinedOrNull) {
        return bytesFrom([]);
      }
      try {
        return innerCodec.encode(userDefinedOrNull);
      } catch (e) {
        throw new Error(`option(${e?.toString()})`);
      }
    },
    decode(buffer) {
      const value = bytesFrom(buffer);
      if (value.byteLength === 0) {
        return undefined;
      }
      try {
        return innerCodec.decode(buffer);
      } catch (e) {
        throw new Error(`option(${e?.toString()})`);
      }
    },
  });
}

/**
 * Wrap the encoded value with a fixed-length buffer
 * @param codec
 */
export function byteVec<Encodable, Decoded>(
  codec: CodecLike<Encodable, Decoded>,
): Codec<Encodable, Decoded> {
  return Codec.from({
    encode(userDefined) {
      try {
        const payload = bytesFrom(codec.encode(userDefined));
        const byteLength = uint32To(payload.byteLength);
        return bytesConcat(byteLength, payload);
      } catch (e) {
        throw new Error(`byteVec(${e?.toString()})`);
      }
    },
    decode(buffer) {
      const value = bytesFrom(buffer);
      if (value.byteLength < 4) {
        throw new Error(
          `byteVec: too short buffer, expected at least 4 bytes, but got ${value.byteLength}`,
        );
      }
      const byteLength = uint32From(value.slice(0, 4));
      if (byteLength !== value.byteLength - 4) {
        throw new Error(
          `byteVec: invalid buffer size, expected ${byteLength}, but got ${value.byteLength}`,
        );
      }
      try {
        return codec.decode(value.slice(4));
      } catch (e: unknown) {
        throw new Error(`byteVec(${e?.toString()})`);
      }
    },
  });
}

export type EncodableRecordOptionalKeys<
  T extends Record<string, CodecLike<any, any>>,
> = {
  [K in keyof T]: Extract<EncodableType<T[K]>, undefined> extends never
    ? never
    : K;
}[keyof T];
export type EncodableRecord<T extends Record<string, CodecLike<any, any>>> = {
  [key in keyof Pick<T, EncodableRecordOptionalKeys<T>>]+?: EncodableType<
    T[key]
  >;
} & {
  [key in keyof Omit<T, EncodableRecordOptionalKeys<T>>]: EncodableType<T[key]>;
};

export type DecodedRecordOptionalKeys<
  T extends Record<string, CodecLike<any, any>>,
> = {
  [K in keyof T]: Extract<DecodedType<T[K]>, undefined> extends never
    ? never
    : K;
}[keyof T];
export type DecodedRecord<T extends Record<string, CodecLike<any, any>>> = {
  [key in keyof Pick<T, DecodedRecordOptionalKeys<T>>]+?: DecodedType<T[key]>;
} & {
  [key in keyof Omit<T, DecodedRecordOptionalKeys<T>>]: DecodedType<T[key]>;
};

/**
 * Table is a dynamic-size type. It can be considered as a dynvec but the length is fixed.
 * @param codecLayout
 */
export function table<
  T extends Record<string, CodecLike<any, any>>,
  Encodable extends EncodableRecord<T>,
  Decoded extends DecodedRecord<T>,
>(codecLayout: T): Codec<Encodable, Decoded> {
  const keys = Object.keys(codecLayout);

  return Codec.from({
    encode(object) {
      let offset = 4 + keys.length * 4;
      const header: number[] = [];
      const body: number[] = [];

      for (const key of keys) {
        try {
          const encoded = codecLayout[key].encode((object as any)[key]);
          bytesConcatTo(header, uint32To(offset));
          bytesConcatTo(body, encoded);
          offset += encoded.byteLength;
        } catch (e: unknown) {
          throw new Error(`table.${key}(${e?.toString()})`);
        }
      }

      const packedTotalSize = uint32To(header.length + body.length + 4);
      return bytesConcat(packedTotalSize, header, body);
    },
    decode(buffer) {
      const value = bytesFrom(buffer);
      if (value.byteLength < 4) {
        throw new Error(
          `table: too short buffer, expected at least 4 bytes, but got ${value.byteLength}`,
        );
      }
      const byteLength = uint32From(value.slice(0, 4));
      if (byteLength !== value.byteLength) {
        throw new Error(
          `table: invalid buffer size, expected ${byteLength}, but got ${value.byteLength}`,
        );
      }
      const offsets = keys.map((_, index) =>
        uint32From(value.slice(4 + index * 4, 8 + index * 4)),
      );
      offsets.push(byteLength);
      const object = {};
      for (let i = 0; i < offsets.length - 1; i++) {
        const start = offsets[i];
        const end = offsets[i + 1];
        const field = keys[i];
        const codec = codecLayout[field];
        const payload = value.slice(start, end);
        try {
          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
          Object.assign(object, { [field]: codec.decode(payload) });
        } catch (e: unknown) {
          throw new Error(`table.${field}(${e?.toString()})`);
        }
      }
      return object as Decoded;
    },
  });
}

type UnionEncodable<
  T extends Record<string, CodecLike<any, any>>,
  K extends keyof T = keyof T,
> = K extends unknown
  ? {
      type: K;
      value: EncodableType<T[K]>;
    }
  : never;
type UnionDecoded<
  T extends Record<string, CodecLike<any, any>>,
  K extends keyof T = keyof T,
> = K extends unknown
  ? {
      type: K;
      value: DecodedType<T[K]>;
    }
  : never;

/**
 * Union is a dynamic-size type.
 * Serializing a union has two steps:
 * - Serialize an item type id in bytes as a 32 bit unsigned integer in little-endian. The item type id is the index of the inner items, and it's starting at 0.
 * - Serialize the inner item.
 * @param codecLayout the union item record
 * @param fields the custom item type id record
 * @example
 * // without custom id
 * union({ cafe: Uint8, bee: Uint8 })
 * // with custom id
 * union({ cafe: Uint8, bee: Uint8 }, { cafe: 0xcafe, bee: 0xbee })
 */
export function union<T extends Record<string, CodecLike<any, any>>>(
  codecLayout: T,
  fields?: Record<keyof T, number | undefined | null>,
): Codec<UnionEncodable<T>, UnionDecoded<T>> {
  const keys = Object.keys(codecLayout);

  return Codec.from({
    encode({ type, value }) {
      const typeStr = type.toString();
      const codec = codecLayout[typeStr];
      if (!codec) {
        throw new Error(
          `union: invalid type, expected ${keys.toString()}, but got ${typeStr}`,
        );
      }
      const fieldId = fields ? (fields[typeStr] ?? -1) : keys.indexOf(typeStr);
      if (fieldId < 0) {
        throw new Error(`union: invalid field id ${fieldId} of ${typeStr}`);
      }
      const header = uint32To(fieldId);
      try {
        const body = codec.encode(value);
        return bytesConcat(header, body);
      } catch (e: unknown) {
        throw new Error(`union.(${typeStr})(${e?.toString()})`);
      }
    },
    decode(buffer) {
      const value = bytesFrom(buffer);
      const fieldIndex = uint32From(value.slice(0, 4));
      const keys = Object.keys(codecLayout);

      const field = (() => {
        if (!fields) {
          return keys[fieldIndex];
        }
        const entry = Object.entries(fields).find(
          ([, id]) => id === fieldIndex,
        );
        return entry?.[0];
      })();

      if (!field) {
        if (!fields) {
          throw new Error(
            `union: unknown union field index ${fieldIndex}, only ${keys.toString()} are allowed`,
          );
        }
        const fieldKeys = Object.keys(fields);
        throw new Error(
          `union: unknown union field index ${fieldIndex}, only ${fieldKeys.toString()} and ${keys.toString()} are allowed`,
        );
      }

      return {
        type: field,
        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
        value: codecLayout[field].decode(value.slice(4)),
      } as UnionDecoded<T>;
    },
  });
}

/**
 * Struct is a fixed-size type: all fields in struct are fixed-size and it has a fixed quantity of fields.
 * The size of a struct is the sum of all fields' size.
 * @param codecLayout a object contains all fields' codec
 */
export function struct<
  T extends Record<string, CodecLike<any, any>>,
  Encodable extends EncodableRecord<T>,
  Decoded extends DecodedRecord<T>,
>(codecLayout: T): Codec<Encodable, Decoded> {
  const codecArray = Object.values(codecLayout);
  const keys = Object.keys(codecLayout);

  return Codec.from({
    byteLength: codecArray.reduce((acc, codec) => {
      if (codec.byteLength === undefined) {
        throw new Error("struct: all fields must be fixed-size");
      }
      return acc + codec.byteLength;
    }, 0),
    encode(object) {
      const bytes: number[] = [];
      for (const key of keys) {
        try {
          const encoded = codecLayout[key].encode((object as any)[key]);
          bytesConcatTo(bytes, encoded);
        } catch (e: unknown) {
          throw new Error(`struct.${key}(${e?.toString()})`);
        }
      }

      return bytesFrom(bytes);
    },
    decode(buffer) {
      const value = bytesFrom(buffer);
      const object = {};
      let offset = 0;
      Object.entries(codecLayout).forEach(([key, codec]) => {
        const payload = value.slice(offset, offset + codec.byteLength!);
        try {
          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
          Object.assign(object, { [key]: codec.decode(payload) });
        } catch (e: unknown) {
          throw new Error(`struct.${key}(${(e as Error).toString()})`);
        }
        offset = offset + codec.byteLength!;
      });
      return object as Decoded;
    },
  });
}

/**
 * The array is a fixed-size type: it has a fixed-size inner type and a fixed length.
 * The size of an array is the size of inner type times the length.
 * @param itemCodec the fixed-size array item codec
 * @param itemCount
 */
export function array<Encodable, Decoded>(
  itemCodec: CodecLike<Encodable, Decoded>,
  itemCount: number,
): Codec<Array<Encodable>, Array<Decoded>> {
  if (itemCodec.byteLength === undefined) {
    throw new Error("array: itemCodec requires a byte length");
  }
  const byteLength = itemCodec.byteLength * itemCount;

  return Codec.from({
    byteLength,
    encode(items) {
      try {
        const bytes: number[] = [];
        for (const item of items) {
          bytesConcatTo(bytes, itemCodec.encode(item));
        }

        return bytesFrom(bytes);
      } catch (e: unknown) {
        throw new Error(`array(${e?.toString()})`);
      }
    },
    decode(buffer) {
      const value = bytesFrom(buffer);
      if (value.byteLength != byteLength) {
        throw new Error(
          `array: invalid buffer size, expected ${byteLength}, but got ${value.byteLength}`,
        );
      }
      try {
        const result: Array<Decoded> = [];
        for (let i = 0; i < value.byteLength; i += itemCodec.byteLength!) {
          result.push(
            itemCodec.decode(value.slice(i, i + itemCodec.byteLength!)),
          );
        }
        return result;
      } catch (e: unknown) {
        throw new Error(`array(${e?.toString()})`);
      }
    },
  });
}

/**
 * Create a codec to deal with fixed LE or BE bytes.
 * @param byteLength
 * @param littleEndian
 */
export function uint(
  byteLength: number,
  littleEndian = false,
): Codec<NumLike, Num> {
  return Codec.from({
    byteLength,
    encode: (numLike) => {
      if (littleEndian) {
        return numToBytes(numLike, byteLength);
      } else {
        return numBeToBytes(numLike, byteLength);
      }
    },
    decode: (buffer) => {
      if (littleEndian) {
        return numFromBytes(buffer);
      } else {
        return numBeFromBytes(buffer);
      }
    },
  });
}

/**
 * Create a codec to deal with fixed LE or BE bytes.
 * @param byteLength
 * @param littleEndian
 */
export function uintNumber(
  byteLength: number,
  littleEndian = false,
): Codec<NumLike, number> {
  if (byteLength > 4) {
    throw new Error("uintNumber: byteLength must be less than or equal to 4");
  }
  return uint(byteLength, littleEndian).map({
    outMap: (num) => Number(num),
  });
}


================================================
File: packages/core/src/molecule/entity.ts
================================================
import { Bytes, bytesEq, BytesLike } from "../bytes/index.js";
import { hashCkb } from "../hasher/index.js";
import { Hex } from "../hex/index.js";
import { Constructor } from "../utils/index.js";
import { Codec } from "./codec.js";

/**
 * The base class of CCC to create a serializable instance. This should be used with the {@link codec} decorator.
 * @public
 */
export abstract class Entity {
  /**
   * Generate a base class of CCC to create a serializable instance.
   * This should be used with the {@link codec} decorator.
   * @public
   */
  static Base<SubTypeLike, SubType = SubTypeLike>() {
    abstract class Impl {
      /**
       * The bytes length of the entity, if it is fixed, otherwise undefined
       * @public
       * @static
       */
      static byteLength?: number;
      /**
       * Encode the entity into bytes
       * @public
       * @static
       * @param _ - The entity to encode
       * @returns The encoded bytes
       * @throws Will throw an error if the entity is not serializable
       */
      static encode(_: SubTypeLike): Bytes {
        throw new Error(
          "encode not implemented, use @ccc.mol.codec to decorate your type",
        );
      }
      /**
       * Decode the entity from bytes
       * @public
       * @static
       * @param _ - The bytes to decode
       * @returns The decoded entity
       * @throws Will throw an error if the entity is not serializable
       */
      static decode(_: BytesLike): SubType {
        throw new Error(
          "decode not implemented, use @ccc.mol.codec to decorate your type",
        );
      }

      /**
       * Create an entity from bytes
       * @public
       * @static
       * @param _ - The bytes to create the entity from
       * @returns The created entity
       * @throws Will throw an error if the entity is not serializable
       */
      static fromBytes(_bytes: BytesLike): SubType {
        throw new Error(
          "fromBytes not implemented, use @ccc.mol.codec to decorate your type",
        );
      }

      /**
       * Create an entity from a serializable object
       * @public
       * @static
       * @param _ - The serializable object to create the entity from
       * @returns The created entity
       * @throws Will throw an error if the entity is not serializable
       */
      static from(_: SubTypeLike): SubType {
        throw new Error("from not implemented");
      }

      /**
       * Convert the entity to bytes
       * @public
       * @returns The bytes representation of the entity
       */
      toBytes(): Bytes {
        return (this.constructor as typeof Impl).encode(
          this as unknown as SubTypeLike,
        );
      }

      /**
       * Create a clone of the entity
       * @public
       * @returns A clone of the entity
       */
      clone(): SubType {
        return (this.constructor as typeof Impl).fromBytes(
          this.toBytes(),
        ) as unknown as SubType;
      }

      /**
       * Check if the entity is equal to another entity
       * @public
       * @param other - The other entity to compare with
       * @returns True if the entities are equal, false otherwise
       */
      eq(other: SubTypeLike): boolean {
        if (this === (other as unknown as this)) {
          return true;
        }

        return bytesEq(
          this.toBytes(),
          /* eslint-disable @typescript-eslint/no-unsafe-call, @typescript-eslint/no-explicit-any */
          (
            ((this.constructor as any)?.from(other) ?? other) as unknown as Impl
          ).toBytes(),
          /* eslint-enable @typescript-eslint/no-unsafe-call, @typescript-eslint/no-explicit-any */
        );
      }

      /**
       * Calculate the hash of the entity
       * @public
       * @returns The hash of the entity
       */
      hash(): Hex {
        return hashCkb(this.toBytes());
      }
    }

    return Impl;
  }

  abstract toBytes(): Bytes;
  abstract hash(): Hex;
  abstract clone(): Entity;
}

/**
 * A class decorator to add methods implementation on the {@link Entity.Base} class
 * @example
 * ```typescript
 * @mol.codec(
 *   mol.table({
 *     codeHash: mol.Byte32,
 *     hashType: HashTypeCodec,
 *     args: mol.Bytes,
 *   }),
 * )
 * export class Script extends mol.Entity.Base<ScriptLike, Script>() {
 *   from(scriptLike: ScriptLike): Script {}
 * }
 * ```
 */
export function codec<
  Encodable,
  TypeLike extends Encodable,
  Decoded extends TypeLike,
  Type extends object & TypeLike,
  ConstructorType extends Constructor<Type> & {
    from(decoded: TypeLike): Type;
    byteLength?: number;
    encode(encodable: TypeLike): Bytes;
    decode(bytesLike: BytesLike): TypeLike;
    fromBytes(bytes: BytesLike): Type;
  },
>(codec: Codec<Encodable, Decoded>) {
  return function (Constructor: ConstructorType) {
    return class Extended extends Constructor {
      static byteLength = codec.byteLength;
      static encode(encodable: TypeLike): Bytes {
        return codec.encode(encodable);
      }
      static decode(bytesLike: BytesLike): Type {
        return Constructor.from(codec.decode(bytesLike));
      }

      static fromBytes(bytes: BytesLike): Type {
        return Constructor.from(codec.decode(bytes));
      }
    };
  };
}


================================================
File: packages/core/src/molecule/index.ts
================================================
export * as mol from "./barrel.js";


================================================
File: packages/core/src/molecule/predefined.ts
================================================
import { bytesFrom, bytesTo } from "../bytes/index.js";
import { Hex, hexFrom, HexLike } from "../hex/index.js";
import { byteVec, Codec, option, uint, uintNumber, vector } from "./codec.js";

export const Uint8 = uintNumber(1, true);
export const Uint8Opt = option(Uint8);
export const Uint8Vec = vector(Uint8);

export const Uint16LE = uintNumber(2, true);
export const Uint16BE = uintNumber(2);
export const Uint16 = Uint16LE;
export const Uint16Opt = option(Uint16);
export const Uint16Vec = vector(Uint16);

export const Uint32LE = uintNumber(4, true);
export const Uint32BE = uintNumber(4);
export const Uint32 = Uint32LE;
export const Uint32Opt = option(Uint32);
export const Uint32Vec = vector(Uint32);

export const Uint64LE = uint(8, true);
export const Uint64BE = uint(8);
export const Uint64 = Uint64LE;
export const Uint64Opt = option(Uint64);
export const Uint64Vec = vector(Uint64);

export const Uint128LE = uint(16, true);
export const Uint128BE = uint(16);
export const Uint128 = Uint128LE;
export const Uint128Opt = option(Uint128);
export const Uint128Vec = vector(Uint128);

export const Uint256LE = uint(32, true);
export const Uint256BE = uint(32);
export const Uint256 = Uint256LE;
export const Uint256Opt = option(Uint256);
export const Uint256Vec = vector(Uint256);

export const Uint512LE = uint(64, true);
export const Uint512BE = uint(64);
export const Uint512 = Uint512LE;
export const Uint512Opt = option(Uint512);
export const Uint512Vec = vector(Uint512);

export const Bytes: Codec<HexLike, Hex> = byteVec({
  encode: (value) => bytesFrom(value),
  decode: (buffer) => hexFrom(buffer),
});
export const BytesOpt = option(Bytes);
export const BytesVec = vector(Bytes);

export const Bool: Codec<boolean> = Codec.from({
  byteLength: 1,
  encode: (value) => bytesFrom(value ? [1] : [0]),
  decode: (buffer) => bytesFrom(buffer)[0] !== 0,
});
export const BoolOpt = option(Bool);
export const BoolVec = vector(Bool);

export const Byte4: Codec<HexLike, Hex> = Codec.from({
  byteLength: 4,
  encode: (value) => bytesFrom(value),
  decode: (buffer) => hexFrom(buffer),
});
export const Byte4Opt = option(Byte4);
export const Byte4Vec = vector(Byte4);

export const Byte8: Codec<HexLike, Hex> = Codec.from({
  byteLength: 8,
  encode: (value) => bytesFrom(value),
  decode: (buffer) => hexFrom(buffer),
});
export const Byte8Opt = option(Byte8);
export const Byte8Vec = vector(Byte8);

export const Byte16: Codec<HexLike, Hex> = Codec.from({
  byteLength: 16,
  encode: (value) => bytesFrom(value),
  decode: (buffer) => hexFrom(buffer),
});
export const Byte16Opt = option(Byte16);
export const Byte16Vec = vector(Byte16);

export const Byte32: Codec<HexLike, Hex> = Codec.from({
  byteLength: 32,
  encode: (value) => bytesFrom(value),
  decode: (buffer) => hexFrom(buffer),
});
export const Byte32Opt = option(Byte32);
export const Byte32Vec = vector(Byte32);

export const String = byteVec({
  encode: (value: string) => bytesFrom(value, "utf8"),
  decode: (buffer) => bytesTo(buffer, "utf8"),
});
export const StringVec = vector(String);
export const StringOpt = option(String);


================================================
File: packages/core/src/num/index.ts
================================================
import { Bytes, BytesLike, bytesConcat, bytesFrom } from "../bytes/index.js";
import { Hex, HexLike, hexFrom } from "../hex/index.js";

/**
 * Represents a numeric value as a bigint.
 * @public
 */
export type Num = bigint;

/**
 * Represents a value that can be converted to a numeric value.
 * It can be a string, number, bigint, or HexLike.
 * @public
 */
export type NumLike = string | number | bigint | HexLike;

/**
 * Get the min among all numbers.
 * @public
 *
 * @param numbers - numbers.
 * @returns The min numbers among them.
 *
 * @example
 * ```typescript
 * numMin(1, 2, 3); // Outputs 1n
 * ```
 */
export function numMin(a: NumLike, ...numbers: NumLike[]): Num {
  let min = numFrom(a);
  numbers.forEach((nLike) => {
    const n = numFrom(nLike);
    if (n < min) {
      min = n;
    }
  });
  return min;
}

/**
 * Get the max among all numbers.
 * @public
 *
 * @param numbers - numbers.
 * @returns The max numbers among them.
 *
 * @example
 * ```typescript
 * numMax(1, 2, 3); // Outputs 3n
 * ```
 */
export function numMax(a: NumLike, ...numbers: NumLike[]): Num {
  let max = numFrom(a);
  numbers.forEach((nLike) => {
    const n = numFrom(nLike);
    if (n > max) {
      max = n;
    }
  });
  return max;
}

/**
 * Converts a NumLike value to a Num (bigint).
 * @public
 *
 * @param val - The value to convert, which can be a string, number, bigint, or HexLike.
 * @returns A Num (bigint) representing the value.
 *
 * @example
 * ```typescript
 * const num = numFrom("12345"); // Outputs 12345n
 * const numFromHex = numFrom("0x3039"); // Outputs 12345n
 * ```
 */
export function numFrom(val: NumLike): Num {
  if (typeof val === "bigint") {
    return val;
  }

  if (val === "0x") {
    return BigInt(0);
  }
  if (typeof val === "string" || typeof val === "number") {
    return BigInt(val);
  }

  const hex = hexFrom(val);
  return BigInt(hex);
}

/**
 * Converts a NumLike value to a hexadecimal string.
 * @public
 *
 * @param val - The value to convert, which can be a string, number, bigint, or HexLike.
 * @returns A Hex string representing the numeric value.
 *
 * @example
 * ```typescript
 * const hex = numToHex(12345); // Outputs "0x3039"
 * ```
 */
export function numToHex(val: NumLike): Hex {
  return `0x${numFrom(val).toString(16)}`;
}

/**
 * Converts a NumLike value to a byte array in little-endian order.
 * @public
 *
 * @param val - The value to convert, which can be a string, number, bigint, or HexLike.
 * @param bytes - The number of bytes to use for the representation. If not provided, the exact number of bytes needed is used.
 * @returns A Uint8Array containing the byte representation of the numeric value.
 *
 * @example
 * ```typescript
 * const bytes = numToBytes(12345, 4); // Outputs Uint8Array [57, 48, 0, 0]
 * ```
 */

export function numToBytes(val: NumLike, bytes?: number): Bytes {
  return numLeToBytes(val, bytes);
}

/**
 * Converts a NumLike value to a byte array in little-endian order.
 * @public
 *
 * @param val - The value to convert, which can be a string, number, bigint, or HexLike.
 * @param bytes - The number of bytes to use for the representation. If not provided, the exact number of bytes needed is used.
 * @returns A Uint8Array containing the byte representation of the numeric value.
 *
 * @example
 * ```typescript
 * const bytes = numLeToBytes(12345, 4); // Outputs Uint8Array [57, 48, 0, 0]
 * ```
 */
export function numLeToBytes(val: NumLike, bytes?: number): Bytes {
  return numBeToBytes(val, bytes).reverse();
}

/**
 * Converts a NumLike value to a byte array in big-endian order.
 * @public
 *
 * @param val - The value to convert, which can be a string, number, bigint, or HexLike.
 * @param bytes - The number of bytes to use for the representation. If not provided, the exact number of bytes needed is used.
 * @returns A Uint8Array containing the byte representation of the numeric value.
 *
 * @example
 * ```typescript
 * const bytes = numBeToBytes(12345, 4); // Outputs Uint8Array [0, 0, 48, 57]
 * ```
 */
export function numBeToBytes(val: NumLike, bytes?: number): Bytes {
  const rawBytes = bytesFrom(numFrom(val).toString(16));
  if (bytes == null) {
    return rawBytes;
  }

  return bytesConcat("00".repeat(bytes - rawBytes.length), rawBytes);
}

/**
 * Converts a byte array to a Num (bigint) assuming little-endian order.
 * @public
 *
 * @param val - The byte array to convert.
 * @returns A Num (bigint) representing the numeric value.
 *
 * @example
 * ```typescript
 * const num = numFromBytes(new Uint8Array([57, 48, 0, 0])); // Outputs 12345n
 * ```
 */
export function numFromBytes(val: BytesLike): Num {
  return numLeFromBytes(val);
}

/**
 * Converts a byte array to a Num (bigint) assuming little-endian order.
 * @public
 *
 * @param val - The byte array to convert.
 * @returns A Num (bigint) representing the numeric value.
 *
 * @example
 * ```typescript
 * const num = numLeFromBytes(new Uint8Array([57, 48, 0, 0])); // Outputs 12345n
 * ```
 */
export function numLeFromBytes(val: BytesLike): Num {
  // reverse() modifies the original array
  // so we use the map to copy it to avoid this
  return numBeFromBytes(
    bytesFrom(val)
      .map((v) => v)
      .reverse(),
  );
}

/**
 * Converts a byte array to a Num (bigint) assuming big-endian order.
 * @public
 *
 * @param val - The byte array to convert.
 * @returns A Num (bigint) representing the numeric value.
 *
 * @example
 * ```typescript
 * const num = numBeFromBytes(new Uint8Array([0, 0, 48, 57])); // Outputs 12345n
 * ```
 */
export function numBeFromBytes(val: BytesLike): Num {
  return numFrom(bytesFrom(val));
}


================================================
File: packages/core/src/signer/index.ts
================================================
export * from "./btc/index.js";
export * from "./ckb/index.js";
export * from "./doge/index.js";
export * from "./dummy/index.js";
export * from "./evm/index.js";
export * from "./nostr/index.js";
export * from "./signer/index.js";


================================================
File: packages/core/src/signer/btc/index.ts
================================================
export * from "./signerBtc.js";
export * from "./signerBtcPublicKeyReadonly.js";
export * from "./verify.js";


================================================
File: packages/core/src/signer/btc/signerBtc.ts
================================================
import { Address } from "../../address/index.js";
import { bytesConcat, bytesFrom } from "../../bytes/index.js";
import { Transaction, TransactionLike, WitnessArgs } from "../../ckb/index.js";
import { KnownScript } from "../../client/index.js";
import { HexLike, hexFrom } from "../../hex/index.js";
import { numToBytes } from "../../num/index.js";
import { Signer, SignerSignType, SignerType } from "../signer/index.js";
import { btcEcdsaPublicKeyHash } from "./verify.js";

/**
 * An abstract class extending the Signer class for Bitcoin-like signing operations.
 * This class provides methods to get Bitcoin account, public key, and internal address,
 * as well as signing transactions.
 * @public
 */
export abstract class SignerBtc extends Signer {
  get type(): SignerType {
    return SignerType.BTC;
  }

  get signType(): SignerSignType {
    return SignerSignType.BtcEcdsa;
  }

  /**
   * Gets the Bitcoin account associated with the signer.
   *
   * @returns A promise that resolves to a string representing the Bitcoin account.
   */
  abstract getBtcAccount(): Promise<string>;

  /**
   * Gets the Bitcoin public key associated with the signer.
   *
   * @returns A promise that resolves to a HexLike value representing the Bitcoin public key.
   */
  abstract getBtcPublicKey(): Promise<HexLike>;

  /**
   * Gets the internal address, which is the Bitcoin account in this case.
   *
   * @returns A promise that resolves to a string representing the internal address.
   */
  async getInternalAddress(): Promise<string> {
    return this.getBtcAccount();
  }

  /**
   * Gets the identity, which is the Bitcoin public key in this case.
   *
   * @returns A promise that resolves to a string representing the identity
   */
  async getIdentity(): Promise<string> {
    return hexFrom(await this.getBtcPublicKey()).slice(2);
  }

  /**
   * Gets an array of Address objects representing the known script addresses for the signer.
   *
   * @returns A promise that resolves to an array of Address objects.
   */
  async getAddressObjs(): Promise<Address[]> {
    const publicKey = await this.getBtcPublicKey();
    const hash = btcEcdsaPublicKeyHash(publicKey);

    return [
      await Address.fromKnownScript(
        this.client,
        KnownScript.OmniLock,
        hexFrom([0x04, ...hash, 0x00]),
      ),
    ];
  }

  /**
   * prepare a transaction before signing. This method is not implemented and should be overridden by subclasses.
   *
   * @param txLike - The transaction to prepare, represented as a TransactionLike object.
   * @returns A promise that resolves to the prepared Transaction object.
   */
  async prepareTransaction(txLike: TransactionLike): Promise<Transaction> {
    const tx = Transaction.from(txLike);
    const { script } = await this.getRecommendedAddressObj();
    await tx.addCellDepsOfKnownScripts(this.client, KnownScript.OmniLock);
    await tx.prepareSighashAllWitness(script, 85, this.client);
    return tx;
  }

  /**
   * Signs a transaction without modifying it.
   *
   * @param txLike - The transaction to sign, represented as a TransactionLike object.
   * @returns A promise that resolves to a signed Transaction object.
   */
  async signOnlyTransaction(txLike: TransactionLike): Promise<Transaction> {
    const tx = Transaction.from(txLike);
    const { script } = await this.getRecommendedAddressObj();
    const info = await tx.getSignHashInfo(script, this.client);
    if (!info) {
      return tx;
    }

    const signature = bytesFrom(
      await this.signMessageRaw(
        `CKB (Bitcoin Layer) transaction: ${info.message}`,
      ),
      "base64",
    );
    signature[0] = 31 + ((signature[0] - 27) % 4);

    const witness = WitnessArgs.fromBytes(tx.witnesses[info.position]);
    witness.lock = hexFrom(
      bytesConcat(
        numToBytes(5 * 4 + signature.length, 4),
        numToBytes(4 * 4, 4),
        numToBytes(5 * 4 + signature.length, 4),
        numToBytes(5 * 4 + signature.length, 4),
        numToBytes(signature.length, 4),
        signature,
      ),
    );

    tx.setWitnessArgsAt(info.position, witness);
    return tx;
  }
}


================================================
File: packages/core/src/signer/btc/signerBtcPublicKeyReadonly.ts
================================================
import { Client } from "../../client/index.js";
import { Hex, HexLike, hexFrom } from "../../hex/index.js";
import { SignerBtc } from "./signerBtc.js";

/**
 * A class extending SignerBtc that provides read-only access to a Bitcoin public key and account.
 * This class does not support signing operations.
 * @public
 */
export class SignerBtcPublicKeyReadonly extends SignerBtc {
  private readonly publicKey: Hex;

  /**
   * Creates an instance of SignerBtcPublicKeyReadonly.
   *
   * @param client - The client instance used for communication.
   * @param account - The Bitcoin account associated with the signer.
   * @param publicKey - The public key associated with the signer.
   */
  constructor(
    client: Client,
    private readonly account: string,
    publicKey: HexLike,
  ) {
    super(client);

    this.publicKey = hexFrom(publicKey);
  }

  /**
   * Connects to the client. This implementation does nothing as the class is read-only.
   *
   * @returns A promise that resolves when the connection is complete.
   */
  async connect(): Promise<void> {}

  /**
   * Check if the signer is connected.
   *
   * @returns A promise that resolves the connection status.
   */
  async isConnected(): Promise<boolean> {
    return true;
  }

  /**
   * Gets the Bitcoin account associated with the signer.
   *
   * @returns A promise that resolves to a string representing the Bitcoin account.
   *
   * @example
   * ```typescript
   * const account = await signer.getBtcAccount(); // Outputs the Bitcoin account
   * ```
   */
  async getBtcAccount(): Promise<string> {
    return this.account;
  }

  /**
   * Gets the Bitcoin public key associated with the signer.
   *
   * @returns A promise that resolves to a Hex string representing the Bitcoin public key.
   *
   * @example
   * ```typescript
   * const publicKey = await signer.getBtcPublicKey(); // Outputs the Bitcoin public key
   * ```
   */
  async getBtcPublicKey(): Promise<Hex> {
    return this.publicKey;
  }
}


================================================
File: packages/core/src/signer/btc/verify.ts
================================================
import { secp256k1 } from "@noble/curves/secp256k1";
import { ripemd160 } from "@noble/hashes/ripemd160";
import { sha256 } from "@noble/hashes/sha256";
import { magicHash } from "bitcoinjs-message";
import bs58check from "bs58check";
import { Bytes, BytesLike, bytesConcat, bytesFrom } from "../../bytes/index.js";
import { Hex, hexFrom } from "../../hex/index.js";

/**
 * @public
 */
export function btcEcdsaPublicKeyHash(publicKey: BytesLike): Bytes {
  return ripemd160(sha256(bytesFrom(publicKey)));
}

/**
 * @public
 */
export function btcP2pkhAddressFromPublicKey(
  publicKey: BytesLike,
  network: number,
): string {
  return bs58check.encode(
    bytesConcat([network], btcEcdsaPublicKeyHash(publicKey)),
  );
}

/**
 * @public
 */
export function btcPublicKeyFromP2pkhAddress(address: string): Hex {
  return hexFrom(bs58check.decode(address).slice(1));
}

/**
 * @public
 */
export function verifyMessageBtcEcdsa(
  message: string | BytesLike,
  signature: string,
  publicKey: string,
): boolean {
  const challenge =
    typeof message === "string" ? message : hexFrom(message).slice(2);

  const rawSign = bytesFrom(signature, "base64").slice(1);

  return secp256k1.verify(bytesFrom(rawSign), magicHash(challenge), publicKey);
}


================================================
File: packages/core/src/signer/ckb/index.ts
================================================
export * from "./signerCkbPrivateKey.js";
export * from "./signerCkbPublicKey.js";
export * from "./signerCkbScriptReadonly.js";
export * from "./verifyCkbSecp256k1.js";
export * from "./verifyJoyId.js";


================================================
File: packages/core/src/signer/ckb/signerCkbPrivateKey.ts
================================================
import { secp256k1 } from "@noble/curves/secp256k1";
import { bytesConcat, bytesFrom, BytesLike } from "../../bytes/index.js";
import { Transaction, TransactionLike, WitnessArgs } from "../../ckb/index.js";
import { Client } from "../../client/index.js";
import { Hex, hexFrom, HexLike } from "../../hex/index.js";
import { numBeToBytes } from "../../num/index.js";
import { SignerCkbPublicKey } from "./signerCkbPublicKey.js";
import { messageHashCkbSecp256k1 } from "./verifyCkbSecp256k1.js";

/**
 * @public
 */
export class SignerCkbPrivateKey extends SignerCkbPublicKey {
  public readonly privateKey: Hex;

  constructor(client: Client, privateKey: HexLike) {
    const pk = hexFrom(privateKey);
    if (bytesFrom(pk).length !== 32) {
      throw new Error("Private key must be 32 bytes!");
    }

    super(client, secp256k1.getPublicKey(bytesFrom(pk), true));
    this.privateKey = pk;
  }

  async _signMessage(message: HexLike): Promise<Hex> {
    const signature = secp256k1.sign(
      bytesFrom(message),
      bytesFrom(this.privateKey),
    );
    const { r, s, recovery } = signature;

    return hexFrom(
      bytesConcat(
        numBeToBytes(r, 32),
        numBeToBytes(s, 32),
        numBeToBytes(recovery, 1),
      ),
    );
  }

  async signMessageRaw(message: string | BytesLike): Promise<Hex> {
    return this._signMessage(messageHashCkbSecp256k1(message));
  }

  async signOnlyTransaction(txLike: TransactionLike): Promise<Transaction> {
    const tx = Transaction.from(txLike);

    for (const { script } of await this.getRelatedScripts(tx)) {
      const info = await tx.getSignHashInfo(script, this.client);
      if (!info) {
        return tx;
      }

      const signature = await this._signMessage(info.message);

      const witness =
        tx.getWitnessArgsAt(info.position) ?? WitnessArgs.from({});
      witness.lock = signature;
      tx.setWitnessArgsAt(info.position, witness);
    }

    return tx;
  }
}


================================================
File: packages/core/src/signer/ckb/signerCkbPublicKey.ts
================================================
import { Address } from "../../address/index.js";
import { bytesFrom } from "../../bytes/index.js";
import { Script, Transaction, TransactionLike } from "../../ckb/index.js";
import { CellDepInfo, Client, KnownScript } from "../../client/index.js";
import { hashCkb } from "../../hasher/index.js";
import { Hex, HexLike, hexFrom } from "../../hex/index.js";
import { Signer, SignerSignType, SignerType } from "../signer/index.js";

/**
 * @public
 */
export class SignerCkbPublicKey extends Signer {
  get type(): SignerType {
    return SignerType.CKB;
  }

  get signType(): SignerSignType {
    return SignerSignType.CkbSecp256k1;
  }

  public readonly publicKey: Hex;

  constructor(client: Client, publicKey: HexLike) {
    super(client);
    this.publicKey = hexFrom(publicKey);

    if (bytesFrom(this.publicKey).length !== 33) {
      throw new Error("Public key must be 33 bytes!");
    }
  }

  async connect(): Promise<void> {}

  async isConnected(): Promise<boolean> {
    return true;
  }

  async getInternalAddress(): Promise<string> {
    return this.getRecommendedAddress();
  }

  async getIdentity(): Promise<string> {
    return this.publicKey;
  }

  async getAddressObjSecp256k1(): Promise<Address> {
    return Address.fromKnownScript(
      this.client,
      KnownScript.Secp256k1Blake160,
      bytesFrom(hashCkb(this.publicKey)).slice(0, 20),
    );
  }

  async getRecommendedAddressObj(_preference?: unknown): Promise<Address> {
    return this.getAddressObjSecp256k1();
  }

  async getAddressObjs(): Promise<Address[]> {
    const secp256k1 = await this.getAddressObjSecp256k1();

    const addresses: Address[] = [];
    let count = 0;
    for await (const cell of this.client.findCells({
      script: await Script.fromKnownScript(
        this.client,
        KnownScript.AnyoneCanPay,
        secp256k1.script.args,
      ),
      scriptType: "lock",
      scriptSearchMode: "prefix",
      withData: false,
    })) {
      if (count >= 10) {
        break;
      }
      count += 1;

      if (addresses.some(({ script }) => script.eq(cell.cellOutput.lock))) {
        continue;
      }

      addresses.push(
        Address.from({
          prefix: this.client.addressPrefix,
          script: cell.cellOutput.lock,
        }),
      );
    }

    return [secp256k1, ...addresses];
  }

  async getRelatedScripts(
    txLike: TransactionLike,
  ): Promise<{ script: Script; cellDeps: CellDepInfo[] }[]> {
    const tx = Transaction.from(txLike);

    const secp256k1 = await this.getAddressObjSecp256k1();
    const acp = await Script.fromKnownScript(
      this.client,
      KnownScript.AnyoneCanPay,
      secp256k1.script.args,
    );

    const scripts: { script: Script; cellDeps: CellDepInfo[] }[] = [];
    for (const input of tx.inputs) {
      await input.completeExtraInfos(this.client);
      if (!input.cellOutput) {
        throw new Error("Unable to complete input");
      }

      const { lock } = input.cellOutput;
      if (scripts.some(({ script }) => script.eq(lock))) {
        continue;
      }

      if (lock.eq(secp256k1.script)) {
        scripts.push({
          script: lock,
          cellDeps: (
            await this.client.getKnownScript(KnownScript.Secp256k1Blake160)
          ).cellDeps,
        });
      } else if (
        lock.codeHash === acp.codeHash &&
        lock.hashType === acp.hashType &&
        lock.args.startsWith(acp.args)
      ) {
        scripts.push({
          script: lock,
          cellDeps: (await this.client.getKnownScript(KnownScript.AnyoneCanPay))
            .cellDeps,
        });
      }
    }

    return scripts;
  }

  async prepareTransaction(txLike: TransactionLike): Promise<Transaction> {
    const tx = Transaction.from(txLike);

    await Promise.all(
      (await this.getRelatedScripts(tx)).map(async ({ script, cellDeps }) => {
        await tx.prepareSighashAllWitness(script, 65, this.client);
        await tx.addCellDepInfos(this.client, cellDeps);
      }),
    );
    return tx;
  }
}


================================================
File: packages/core/src/signer/ckb/signerCkbScriptReadonly.ts
================================================
import { Address } from "../../address/index.js";
import { Script, ScriptLike } from "../../ckb/index.js";
import { Client } from "../../client/index.js";
import { Signer, SignerSignType, SignerType } from "../signer/index.js";

/**
 * A class extending Signer that provides read-only access to a CKB script.
 * This class does not support signing operations.
 * @public
 */
export class SignerCkbScriptReadonly extends Signer {
  get type(): SignerType {
    return SignerType.CKB;
  }

  get signType(): SignerSignType {
    return SignerSignType.Unknown;
  }

  private readonly script: Script;

  /**
   * Creates an instance of SignerCkbScriptReadonly.
   *
   * @param client - The client instance used for communication.
   * @param script - The script associated with the signer.
   */
  constructor(client: Client, script: ScriptLike) {
    super(client);

    this.script = Script.from(script);
  }

  /**
   * Connects to the client. This implementation does nothing as the class is read-only.
   *
   * @returns A promise that resolves when the connection is complete.
   */
  async connect(): Promise<void> {}

  /**
   * Check if the signer is connected.
   *
   * @returns A promise that resolves the connection status.
   */
  async isConnected(): Promise<boolean> {
    return true;
  }

  /**
   * Gets the internal address for the script.
   *
   * @returns A promise that resolves to a string representing the internal address.
   *
   * @example
   * ```typescript
   * const internalAddress = await signer.getInternalAddress(); // Outputs the internal address
   * ```
   */
  async getInternalAddress(): Promise<string> {
    return this.getRecommendedAddress();
  }

  /**
   * Gets an array of Address objects representing the script address.
   *
   * @returns A promise that resolves to an array of Address objects.
   *
   * @example
   * ```typescript
   * const addressObjs = await signer.getAddressObjs(); // Outputs the array of Address objects
   * ```
   */

  async getAddressObjs(): Promise<Address[]> {
    return [Address.fromScript(this.script, this.client)];
  }
}


================================================
File: packages/core/src/signer/ckb/verifyCkbSecp256k1.ts
================================================
import { secp256k1 } from "@noble/curves/secp256k1";
import { BytesLike, bytesFrom } from "../../bytes/index.js";
import { hashCkb } from "../../hasher/index.js";
import { Hex, hexFrom } from "../../hex/index.js";
import { numFrom } from "../../num/index.js";

/**
 * @public
 */
export function messageHashCkbSecp256k1(message: string | BytesLike): Hex {
  const msg = typeof message === "string" ? message : hexFrom(message);
  const buffer = bytesFrom(`Nervos Message:${msg}`, "utf8");
  return hashCkb(buffer);
}

/**
 * @public
 */
export function verifyMessageCkbSecp256k1(
  message: string | BytesLike,
  signature: string,
  publicKey: string,
): boolean {
  const signatureBytes = bytesFrom(signature);
  return secp256k1.verify(
    new secp256k1.Signature(
      numFrom(signatureBytes.slice(0, 32)),
      numFrom(signatureBytes.slice(32, 64)),
    ).addRecoveryBit(Number(numFrom(signatureBytes.slice(64, 65)))),
    bytesFrom(messageHashCkbSecp256k1(message)),
    bytesFrom(publicKey),
  );
}


================================================
File: packages/core/src/signer/ckb/verifyJoyId.ts
================================================
import { verifySignature } from "@joyid/ckb";
import { BytesLike } from "../../bytes/index.js";
import { hexFrom } from "../../hex/index.js";

/**
 * @public
 */
export function verifyMessageJoyId(
  message: string | BytesLike,
  signature: string,
  identity: string,
): Promise<boolean> {
  const challenge =
    typeof message === "string" ? message : hexFrom(message).slice(2);
  const { publicKey, keyType } = JSON.parse(identity) as {
    publicKey: string;
    keyType: string;
  };

  // eslint-disable-next-line @typescript-eslint/no-unsafe-argument
  return verifySignature({
    challenge,
    pubkey: publicKey,
    keyType,
    ...JSON.parse(signature),
  });
}


================================================
File: packages/core/src/signer/doge/index.ts
================================================
export * from "./signerDoge.js";
export * from "./signerDogeAddressReadonly.js";
export * from "./signerDogePrivateKey.js";
export * from "./verify.js";


================================================
File: packages/core/src/signer/doge/signerDoge.ts
================================================
import bs58check from "bs58check";
import { Address } from "../../address/index.js";
import { bytesConcat, bytesFrom } from "../../bytes/index.js";
import { Transaction, TransactionLike, WitnessArgs } from "../../ckb/index.js";
import { KnownScript } from "../../client/index.js";
import { hexFrom } from "../../hex/index.js";
import { numToBytes } from "../../num/index.js";
import { Signer, SignerSignType, SignerType } from "../signer/index.js";

/**
 * An abstract class extending the Signer class for Dogecoin-like signing operations.
 * This class provides methods to get Doge account, public key, and internal address,
 * as well as signing transactions.
 * @public
 */
export abstract class SignerDoge extends Signer {
  get type(): SignerType {
    return SignerType.Doge;
  }

  get signType(): SignerSignType {
    return SignerSignType.DogeEcdsa;
  }

  /**
   * Gets the Doge address associated with the signer.
   *
   * @returns A promise that resolves to a string representing the Doge account.
   */
  abstract getDogeAddress(): Promise<string>;

  /**
   * Gets the internal address, which is the Doge account in this case.
   *
   * @returns A promise that resolves to a string representing the internal address.
   */
  async getInternalAddress(): Promise<string> {
    return this.getDogeAddress();
  }

  /**
   * Gets the identity, which is the Doge address in this case.
   *
   * @returns A promise that resolves to a string representing the identity
   */
  async getIdentity(): Promise<string> {
    return this.getDogeAddress();
  }

  /**
   * Gets an array of Address objects representing the known script addresses for the signer.
   *
   * @returns A promise that resolves to an array of Address objects.
   */
  async getAddressObjs(): Promise<Address[]> {
    const hash = bs58check.decode(await this.getDogeAddress()).slice(1);

    return [
      await Address.fromKnownScript(
        this.client,
        KnownScript.OmniLock,
        hexFrom([0x05, ...hash, 0x00]),
      ),
    ];
  }

  /**
   * prepare a transaction before signing. This method is not implemented and should be overridden by subclasses.
   *
   * @param txLike - The transaction to prepare, represented as a TransactionLike object.
   * @returns A promise that resolves to the prepared Transaction object.
   */
  async prepareTransaction(txLike: TransactionLike): Promise<Transaction> {
    const tx = Transaction.from(txLike);
    const { script } = await this.getRecommendedAddressObj();
    await tx.addCellDepsOfKnownScripts(this.client, KnownScript.OmniLock);
    await tx.prepareSighashAllWitness(script, 85, this.client);
    return tx;
  }

  /**
   * Signs a transaction without modifying it.
   *
   * @param txLike - The transaction to sign, represented as a TransactionLike object.
   * @returns A promise that resolves to a signed Transaction object.
   */
  async signOnlyTransaction(txLike: TransactionLike): Promise<Transaction> {
    const tx = Transaction.from(txLike);
    const { script } = await this.getRecommendedAddressObj();
    const info = await tx.getSignHashInfo(script, this.client);
    if (!info) {
      return tx;
    }

    const signature = bytesFrom(
      await this.signMessageRaw(info.message.slice(2)),
      "base64",
    );
    signature[0] = 31 + ((signature[0] - 27) % 4);

    const witness = WitnessArgs.fromBytes(tx.witnesses[info.position]);
    witness.lock = hexFrom(
      bytesConcat(
        numToBytes(5 * 4 + signature.length, 4),
        numToBytes(4 * 4, 4),
        numToBytes(5 * 4 + signature.length, 4),
        numToBytes(5 * 4 + signature.length, 4),
        numToBytes(signature.length, 4),
        signature,
      ),
    );

    tx.setWitnessArgsAt(info.position, witness);
    return tx;
  }
}


================================================
File: packages/core/src/signer/doge/signerDogeAddressReadonly.ts
================================================
import { Client } from "../../client/index.js";
import { SignerDoge } from "./signerDoge.js";

/**
 * A class extending SignerDoge that provides read-only access to a Doge address.
 * This class does not support signing operations.
 * @public
 */
export class SignerDogeAddressReadonly extends SignerDoge {
  /**
   * Creates an instance of SignerDogeAddressReadonly.
   *
   * @param client - The client instance used for communication.
   * @param address - The Doge address with the signer.
   */
  constructor(
    client: Client,
    private readonly address: string,
  ) {
    super(client);
  }

  /**
   * Connects to the client. This implementation does nothing as the class is read-only.
   *
   * @returns A promise that resolves when the connection is complete.
   */
  async connect(): Promise<void> {}

  /**
   * Check if the signer is connected.
   *
   * @returns A promise that resolves the connection status.
   */
  async isConnected(): Promise<boolean> {
    return true;
  }

  /**
   * Gets the Doge address associated with the signer.
   *
   * @returns A promise that resolves to a string representing the Doge address.
   *
   * @example
   * ```typescript
   * const account = await signer.getDogeAddress(); // Outputs the Doge address
   * ```
   */
  async getDogeAddress(): Promise<string> {
    return this.address;
  }
}


================================================
File: packages/core/src/signer/doge/signerDogePrivateKey.ts
================================================
import { secp256k1 } from "@noble/curves/secp256k1";
import { magicHash } from "bitcoinjs-message";
import {
  Bytes,
  bytesConcat,
  bytesFrom,
  BytesLike,
  bytesTo,
} from "../../bytes/index.js";
import { Client } from "../../client/index.js";
import { Hex, hexFrom } from "../../hex/index.js";
import { btcP2pkhAddressFromPublicKey } from "../btc/verify.js";
import { SignerDoge } from "./signerDoge.js";

/**
 * A class extending SignerDoge that provides access to a Doge address.
 * @public
 */
export class SignerDogePrivateKey extends SignerDoge {
  private readonly privateKey: Bytes;

  /**
   * Creates an instance of SignerDogePrivateKey
   *
   * @param client - The client instance used for communication.
   * @param privateKey - The Doge private key with the signer.
   */
  constructor(
    client: Client,
    privateKey: BytesLike,
    public readonly dogeNetwork = 0x1e,
  ) {
    super(client);
    this.privateKey = bytesFrom(privateKey);
    if (this.privateKey.length !== 32) {
      throw new Error("Private key must be 32 bytes!");
    }
  }

  /**
   * Connects to the client. This implementation does nothing as the class is always connected.
   *
   * @returns A promise that resolves when the connection is complete.
   */
  async connect(): Promise<void> {}

  /**
   * Check if the signer is connected.
   *
   * @returns A promise that resolves the connection status.
   */
  async isConnected(): Promise<boolean> {
    return true;
  }

  async getDogePublicKey(): Promise<Hex> {
    return hexFrom(secp256k1.getPublicKey(this.privateKey, true));
  }

  /**
   * Gets the Doge address associated with the signer.
   *
   * @returns A promise that resolves to a string representing the Doge address.
   *
   * @example
   * ```typescript
   * const account = await signer.getDogeAddress(); // Outputs the Doge address
   * ```
   */
  async getDogeAddress(): Promise<string> {
    return btcP2pkhAddressFromPublicKey(
      await this.getDogePublicKey(),
      this.dogeNetwork,
    );
  }

  /**
   * Signs a message and returns signature only.
   *
   * @param msg - The message to sign, as a string or BytesLike object.
   * @returns A promise that resolves to the signature as a string.
   * @throws Will throw an error if not implemented.
   */
  async signMessageRaw(msg: string | BytesLike): Promise<string> {
    const challenge = typeof msg === "string" ? msg : hexFrom(msg).slice(2);

    const signature = secp256k1.sign(
      magicHash(challenge, "\x19Dogecoin Signed Message:\n"),
      this.privateKey,
    );

    return bytesTo(
      bytesConcat([31 + signature.recovery], signature.toCompactRawBytes()),
      "base64",
    );
  }
}


================================================
File: packages/core/src/signer/doge/verify.ts
================================================
import { secp256k1 } from "@noble/curves/secp256k1";
import { magicHash } from "bitcoinjs-message";
import { bytesFrom, BytesLike } from "../../bytes/index.js";
import { hexFrom } from "../../hex/index.js";
import {
  btcEcdsaPublicKeyHash,
  btcPublicKeyFromP2pkhAddress,
} from "../btc/verify.js";

/**
 * @public
 */
export function verifyMessageDogeEcdsa(
  message: string | BytesLike,
  signature: string,
  address: string,
): boolean {
  const challenge =
    typeof message === "string" ? message : hexFrom(message).slice(2);
  const signatureBytes = bytesFrom(signature, "base64");
  const recoveryBit = signatureBytes[0];
  const rawSign = signatureBytes.slice(1);

  const sig = secp256k1.Signature.fromCompact(
    hexFrom(rawSign).slice(2),
  ).addRecoveryBit(recoveryBit - 31);

  return (
    btcPublicKeyFromP2pkhAddress(address) ===
    hexFrom(
      btcEcdsaPublicKeyHash(
        sig
          .recoverPublicKey(
            magicHash(challenge, "\x19Dogecoin Signed Message:\n"),
          )
          .toHex(),
      ),
    )
  );
}


================================================
File: packages/core/src/signer/dummy/alwaysError.ts
================================================
import { Client } from "../../client/index.js";
import { SignerType } from "../signer/index.js";
import { SignerDummy } from "./dummy.js";

/**
 * @public
 */
export class SignerAlwaysError extends SignerDummy {
  constructor(
    client: Client,
    type: SignerType,
    private readonly message: string,
  ) {
    super(client, type);
  }

  async connect(): Promise<void> {
    throw new Error(this.message);
  }
}


================================================
File: packages/core/src/signer/dummy/dummy.ts
================================================
import { Address } from "../../address/index.js";
import { Client } from "../../client/index.js";
import { Signer, SignerSignType, SignerType } from "../signer/index.js";

/**
 * @public
 */
export abstract class SignerDummy extends Signer {
  get signType(): SignerSignType {
    return SignerSignType.Unknown;
  }

  constructor(
    client: Client,
    public readonly type: SignerType,
  ) {
    super(client);
  }

  async isConnected(): Promise<boolean> {
    return false;
  }

  async getInternalAddress(): Promise<string> {
    throw new Error("Can't get address from SignerDummy");
  }

  async getAddressObjs(): Promise<Address[]> {
    throw new Error("Can't get addresses from SignerDummy");
  }
}


================================================
File: packages/core/src/signer/dummy/index.ts
================================================
export * from "./alwaysError.js";
export * from "./dummy.js";
export * from "./openLink.js";


================================================
File: packages/core/src/signer/dummy/openLink.ts
================================================
import { Client } from "../../client/index.js";
import { SignerType } from "../signer/index.js";
import { SignerDummy } from "./dummy.js";

/**
 * @public
 */
export class SignerOpenLink extends SignerDummy {
  constructor(
    client: Client,
    type: SignerType,
    private readonly link: string,
  ) {
    super(client, type);
  }

  async connect(): Promise<void> {
    window.open(this.link, "_blank")?.focus();
  }
}


================================================
File: packages/core/src/signer/evm/index.ts
================================================
export * from "./signerEvm.js";
export * from "./signerEvmAddressReadonly.js";
export * from "./verify.js";


================================================
File: packages/core/src/signer/evm/signerEvm.ts
================================================
import { Address } from "../../address/index.js";
import { Bytes, BytesLike, bytesConcat, bytesFrom } from "../../bytes/index.js";
import {
  Script,
  Transaction,
  TransactionLike,
  WitnessArgs,
} from "../../ckb/index.js";
import { KnownScript } from "../../client/index.js";
import { Hasher, HasherKeecak256 } from "../../hasher/index.js";
import { Hex, HexLike, hexFrom } from "../../hex/index.js";
import { numToBytes } from "../../num/index.js";
import { reduceAsync } from "../../utils/index.js";
import { Signer, SignerSignType, SignerType } from "../signer/index.js";

/**
 * An abstract class extending Signer for Ethereum Virtual Machine (EVM) based signing operations.
 * This class provides methods to get EVM account, internal address, and signing transactions.
 * @public
 */
export abstract class SignerEvm extends Signer {
  get type(): SignerType {
    return SignerType.EVM;
  }

  get signType(): SignerSignType {
    return SignerSignType.EvmPersonal;
  }

  /**
   * Gets the EVM account associated with the signer.
   *
   * @returns A promise that resolves to a string representing the EVM account.
   */
  abstract getEvmAccount(): Promise<Hex>;

  /**
   * Gets the internal address, which is the EVM account in this case.
   *
   * @returns A promise that resolves to a string representing the internal address.
   */
  async getInternalAddress(): Promise<string> {
    return this.getEvmAccount();
  }

  /**
   * Gets an array of Address objects representing the known script addresses for the signer.
   *
   * @returns A promise that resolves to an array of Address objects.
   */
  async getAddressObjs(): Promise<Address[]> {
    const account = await this.getEvmAccount();
    const addresses = await Promise.all([
      this._getOmniLockAddresses(account),
      this._getPWLockAddresses(account),
    ]);

    return addresses.flat();
  }

  _getOmniLockAddresses(account: HexLike): Promise<Address[]> {
    return Promise.all([
      this._getOmniLockEvmAddressObj(account),
      this._getOmniLockOldEvmAddressObj(account),
    ]);
  }

  async _getPWLockAddresses(account: HexLike): Promise<Address[]> {
    const addr = await this._getPWLockEvmAddressObj(account);
    if (!addr) {
      return [];
    }
    return [addr];
  }

  async _getOmniLockEvmAddressObj(account: HexLike): Promise<Address> {
    return Address.fromKnownScript(
      this.client,
      KnownScript.OmniLock,
      hexFrom([0x12, ...bytesFrom(account), 0x00]),
    );
  }

  async _getOmniLockOldEvmAddressObj(account: HexLike): Promise<Address> {
    return Address.fromKnownScript(
      this.client,
      KnownScript.OmniLock,
      hexFrom([0x1, ...bytesFrom(account), 0x00]),
    );
  }

  async _getPWLockEvmAddressObj(
    account: HexLike,
  ): Promise<Address | undefined> {
    try {
      return Address.fromKnownScript(
        this.client,
        KnownScript.PWLock,
        hexFrom(bytesFrom(account)),
      );
    } catch {}
    return;
  }

  /**
   * prepare a transaction before signing. This method is not implemented and should be overridden by subclasses.
   *
   * @param txLike - The transaction to prepare, represented as a TransactionLike object.
   * @returns A promise that resolves to the prepared Transaction object.
   */
  async prepareTransaction(txLike: TransactionLike): Promise<Transaction> {
    const tx = Transaction.from(txLike);
    if (
      (await tx.findInputIndexByLockId(
        await this.client.getKnownScript(KnownScript.OmniLock),
        this.client,
      )) !== undefined
    ) {
      await tx.addCellDepsOfKnownScripts(this.client, KnownScript.OmniLock);
    }
    if (
      (await tx.findInputIndexByLockId(
        await this.client.getKnownScript(KnownScript.PWLock),
        this.client,
      )) !== undefined
    ) {
      await tx.addCellDepsOfKnownScripts(this.client, KnownScript.PWLock);
    }

    const account = await this.getEvmAccount();
    const omniLockAddresses = await this._getOmniLockAddresses(account);
    const pwLockAddresses = await this._getPWLockAddresses(account);

    const omniTx = reduceAsync(
      omniLockAddresses,
      (tx: Transaction, { script }) =>
        tx.prepareSighashAllWitness(script, 85, this.client),
      tx,
    );

    return reduceAsync(
      pwLockAddresses,
      (tx: Transaction, { script }) =>
        tx.prepareSighashAllWitness(script, 65, this.client),
      omniTx,
    );
  }

  /**
   * Signs a transaction without modifying it.
   *
   * @param txLike - The transaction to sign, represented as a TransactionLike object.
   * @returns A promise that resolves to a signed Transaction object.
   */
  async signOnlyTransaction(txLike: TransactionLike): Promise<Transaction> {
    let tx = Transaction.from(txLike);

    const account = await this.getEvmAccount();
    const { script: evmScript } = await this._getOmniLockEvmAddressObj(account);
    const { script: oldEvmScript } =
      await this._getOmniLockOldEvmAddressObj(account);

    tx = await this._signOmniLockScriptForTransaction(
      tx,
      evmScript,
      (hash) => `CKB transaction: ${hash}`,
    );
    tx = await this._signOmniLockScriptForTransaction(
      tx,
      oldEvmScript,
      (hash) => bytesFrom(hash),
    );

    const pwAddress = await this._getPWLockEvmAddressObj(account);
    if (pwAddress) {
      tx = await this._signPWLockScriptForTransaction(
        tx,
        pwAddress.script,
        (hash) => bytesFrom(hash),
      );
    }

    return tx;
  }

  async _signOmniLockScriptForTransaction(
    tx: Transaction,
    script: Script,
    messageTransformer: (hash: string) => BytesLike,
  ): Promise<Transaction> {
    const info = await this._signPersonalEvmForTransaction(
      tx,
      script,
      messageTransformer,
    );
    if (!info) {
      return tx;
    }

    const witness = WitnessArgs.fromBytes(tx.witnesses[info.position]);
    witness.lock = hexFrom(
      bytesConcat(
        numToBytes(5 * 4 + info.signature.length, 4),
        numToBytes(4 * 4, 4),
        numToBytes(5 * 4 + info.signature.length, 4),
        numToBytes(5 * 4 + info.signature.length, 4),
        numToBytes(info.signature.length, 4),
        info.signature,
      ),
    );

    tx.setWitnessArgsAt(info.position, witness);

    return tx;
  }

  async _signPWLockScriptForTransaction(
    tx: Transaction,
    script: Script,
    messageTransformer: (hash: string) => BytesLike,
  ): Promise<Transaction> {
    const info = await this._signPersonalEvmForTransaction(
      tx,
      script,
      messageTransformer,
      new HasherKeecak256(),
    );
    if (!info) {
      return tx;
    }

    const witness = WitnessArgs.fromBytes(tx.witnesses[info.position]);
    witness.lock = hexFrom(info.signature);
    tx.setWitnessArgsAt(info.position, witness);

    return tx;
  }

  async _signPersonalEvmForTransaction(
    tx: Transaction,
    script: Script,
    messageTransformer: (hash: string) => BytesLike,
    hasher?: Hasher,
  ): Promise<{ signature: Bytes; position: number } | undefined> {
    const info = await tx.getSignHashInfo(script, this.client, hasher);
    if (!info) {
      return;
    }

    const signature = bytesFrom(
      await this.signMessageRaw(messageTransformer(info.message)),
    );
    if (signature[signature.length - 1] >= 27) {
      signature[signature.length - 1] -= 27;
    }

    return { signature, position: info.position };
  }
}


================================================
File: packages/core/src/signer/evm/signerEvmAddressReadonly.ts
================================================
import { Client } from "../../client/index.js";
import { Hex, HexLike, hexFrom } from "../../hex/index.js";
import { SignerEvm } from "./signerEvm.js";

/**
 * A class extending SignerEvm that provides read-only access to an EVM address.
 * This class does not support signing operations.
 * @public
 */
export class SignerEvmAddressReadonly extends SignerEvm {
  private readonly address: Hex;

  /**
   * Creates an instance of SignerEvmAddressReadonly.
   *
   * @param client - The client instance used for communication.
   * @param address - The EVM address associated with the signer.
   */
  constructor(client: Client, address: HexLike) {
    super(client);

    this.address = hexFrom(address);
  }

  /**
   * Connects to the client. This implementation does nothing as the class is read-only.
   *
   * @returns A promise that resolves when the connection is complete.
   *
   * @example
   * ```typescript
   * await signer.connect();
   * ```
   */

  async connect(): Promise<void> {}

  /**
   * Check if the signer is connected.
   *
   * @returns A promise that resolves the connection status.
   */
  async isConnected(): Promise<boolean> {
    return true;
  }

  /**
   * Gets the EVM account associated with the signer.
   *
   * @returns A promise that resolves to a string representing the EVM account.
   *
   * @example
   * ```typescript
   * const account = await signer.getEvmAccount(); // Outputs the EVM account
   * ```
   */
  async getEvmAccount(): Promise<Hex> {
    return this.address;
  }
}


================================================
File: packages/core/src/signer/evm/verify.ts
================================================
import { verifyMessage } from "ethers";
import { BytesLike, bytesFrom } from "../../bytes/index.js";

/**
 * @public
 */
export function verifyMessageEvmPersonal(
  message: string | BytesLike,
  signature: string,
  address: string,
): boolean {
  return (
    address.toLowerCase() ===
    verifyMessage(
      typeof message === "string" ? message : bytesFrom(message),
      signature,
    ).toLowerCase()
  );
}


================================================
File: packages/core/src/signer/nostr/index.ts
================================================
export * from "./signerNostr.js";
export * from "./signerNostrPrivateKey.js";
export * from "./verify.js";


================================================
File: packages/core/src/signer/nostr/signerNostr.ts
================================================
import { bech32 } from "bech32";
import { Address } from "../../address/index.js";
import { BytesLike, bytesConcat, bytesFrom } from "../../bytes/index.js";
import { Transaction, TransactionLike, WitnessArgs } from "../../ckb/index.js";
import { KnownScript } from "../../client/index.js";
import { hashCkb } from "../../hasher/index.js";
import { Hex, hexFrom } from "../../hex/index.js";
import { Signer, SignerSignType, SignerType } from "../signer/index.js";
import { buildNostrEventFromMessage } from "./verify.js";

/**
 * @public
 */
export interface NostrEvent {
  id?: string;
  pubkey?: string;
  sig?: string;
  created_at: number;
  kind: number;
  tags: string[][];
  content: string;
}

/**
 * @public
 */
export abstract class SignerNostr extends Signer {
  static CKB_SIG_HASH_ALL_TAG = "ckb_sighash_all";
  static CKB_UNLOCK_EVENT_KIND = 23334;
  static CKB_UNLOCK_EVENT_CONTENT =
    "Signing a CKB transaction\n\nIMPORTANT: Please verify the integrity and authenticity of connected Nostr client before signing this message\n";

  get type(): SignerType {
    return SignerType.Nostr;
  }

  get signType(): SignerSignType {
    return SignerSignType.NostrEvent;
  }

  /**
   * Gets the Nostr public key associated with the signer.
   *
   * @returns A promise that resolves to a string representing the Nostr public key.
   */
  abstract getNostrPublicKey(): Promise<Hex>;

  /**
   * Sign a nostr event.
   *
   * @returns A promise that resolves to the signed event.
   */
  abstract signNostrEvent(event: NostrEvent): Promise<Required<NostrEvent>>;

  /**
   * Sign a message.
   *
   * @returns A promise that resolves to the signature.
   */
  async signMessageRaw(message: string | BytesLike): Promise<Hex> {
    return hexFrom(
      (await this.signNostrEvent(buildNostrEventFromMessage(message))).sig,
    );
  }

  /**
   * Gets the internal address, which is the EVM account in this case.
   *
   * @returns A promise that resolves to a string representing the internal address.
   */
  async getInternalAddress(): Promise<string> {
    return bech32.encode(
      "npub",
      bech32.toWords(bytesFrom(await this.getNostrPublicKey())),
    );
  }

  /**
   * Gets an array of Address objects representing the known script addresses for the signer.
   *
   * @returns A promise that resolves to an array of Address objects.
   */
  async getAddressObjs(): Promise<Address[]> {
    const publicKey = await this.getNostrPublicKey();
    return [
      await Address.fromKnownScript(
        this.client,
        KnownScript.NostrLock,
        hexFrom(bytesConcat([0x00], hashCkb(publicKey).slice(0, 42))),
      ),
    ];
  }

  /**
   * prepare a transaction before signing.
   *
   * @param txLike - The transaction to prepare, represented as a TransactionLike object.
   * @returns A promise that resolves to the prepared Transaction object.
   */
  async prepareTransaction(txLike: TransactionLike): Promise<Transaction> {
    const tx = Transaction.from(txLike);
    const { script } = await this.getRecommendedAddressObj();
    await tx.addCellDepsOfKnownScripts(this.client, KnownScript.NostrLock);
    await tx.prepareSighashAllWitness(script, 572, this.client);
    return tx;
  }

  /**
   * Signs a transaction without modifying it.
   *
   * @param txLike - The transaction to sign, represented as a TransactionLike object.
   * @returns A promise that resolves to a signed Transaction object.
   */
  async signOnlyTransaction(txLike: TransactionLike): Promise<Transaction> {
    const tx = Transaction.from(txLike);
    const { script } = await this.getRecommendedAddressObj();
    const info = await tx.getSignHashInfo(script, this.client);
    if (!info) {
      return tx;
    }

    const signedEvent = bytesFrom(
      JSON.stringify(
        await this.signNostrEvent({
          pubkey: (await this.getNostrPublicKey()).slice(2),
          tags: [[SignerNostr.CKB_SIG_HASH_ALL_TAG, info.message.slice(2)]],
          created_at: Math.floor(Date.now() / 1000),
          kind: SignerNostr.CKB_UNLOCK_EVENT_KIND,
          content: SignerNostr.CKB_UNLOCK_EVENT_CONTENT,
        }),
      ),
      "utf8",
    );

    const witness = WitnessArgs.fromBytes(tx.witnesses[info.position]);
    witness.lock = hexFrom(signedEvent);
    tx.setWitnessArgsAt(info.position, witness);

    return tx;
  }
}


================================================
File: packages/core/src/signer/nostr/signerNostrPrivateKey.ts
================================================
import { schnorr } from "@noble/curves/secp256k1";
import { Client } from "../../client/index.js";
import { Hex, hexFrom, HexLike } from "../../hex/index.js";
import { NostrEvent, SignerNostr } from "./signerNostr.js";
import { nostrEventHash } from "./verify.js";

export class SignerNostrPrivateKey extends SignerNostr {
  private readonly privateKey: Hex;

  constructor(client: Client, privateKey: HexLike) {
    super(client);
    this.privateKey = hexFrom(privateKey);
  }

  async connect(): Promise<void> {}

  async isConnected(): Promise<boolean> {
    return true;
  }

  async getNostrPublicKey(): Promise<Hex> {
    return hexFrom(schnorr.getPublicKey(this.privateKey.slice(2)));
  }

  async signNostrEvent(event: NostrEvent): Promise<Required<NostrEvent>> {
    const pubkey = (await this.getNostrPublicKey()).slice(2);
    const eventHash = nostrEventHash({ ...event, pubkey });
    const signature = schnorr.sign(eventHash, this.privateKey.slice(2));

    return {
      ...event,
      id: hexFrom(eventHash).slice(2),
      pubkey,
      sig: hexFrom(signature).slice(2),
    };
  }
}


================================================
File: packages/core/src/signer/nostr/verify.ts
================================================
import { schnorr } from "@noble/curves/secp256k1";
import { sha256 } from "@noble/hashes/sha256";
import { bech32 } from "bech32";
import { Bytes, BytesLike, bytesFrom } from "../../bytes/index.js";
import { hexFrom } from "../../hex/index.js";
import { NostrEvent } from "./signerNostr.js";

/**
 * @public
 */
export function buildNostrEventFromMessage(
  message: string | BytesLike,
): NostrEvent {
  if (typeof message === "string") {
    try {
      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
      const event = JSON.parse(message);
      if (
        typeof event === "object" &&
        typeof event.created_at === "number" &&
        typeof event.kind === "number" &&
        typeof event.content === "string" &&
        Array.isArray(event.tags) &&
        (event.tags as unknown[]).every(
          (tag) =>
            Array.isArray(tag) &&
            (tag as unknown[]).every((v) => typeof v === "string"),
        )
      ) {
        return event as NostrEvent;
      }
    } catch (_) {}
  }

  return {
    kind: 23335,
    created_at: 0,
    content: typeof message === "string" ? message : hexFrom(message),
    tags: [],
  };
}

export function nostrEventHash(event: NostrEvent): Bytes {
  const serialized = JSON.stringify([
    0,
    event.pubkey,
    event.created_at,
    event.kind,
    event.tags,
    event.content,
  ]);

  return sha256(bytesFrom(serialized, "utf8"));
}

export function verifyMessageNostrEvent(
  message: string | BytesLike,
  signature: string,
  address: string,
): boolean {
  const { words } = bech32.decode(address);
  const publicKey = hexFrom(bech32.fromWords(words)).slice(2);

  const event = buildNostrEventFromMessage(message);
  const eventHash = nostrEventHash(event);

  try {
    return schnorr.verify(hexFrom(signature).slice(2), eventHash, publicKey);
  } catch (_) {
    return false;
  }
}


================================================
File: packages/core/src/signer/signer/index.ts
================================================
import { Address } from "../../address/index.js";
import { ClientCollectableSearchKeyFilterLike } from "../../advancedBarrel.js";
import { BytesLike } from "../../bytes/index.js";
import { Cell, Transaction, TransactionLike } from "../../ckb/index.js";
import {
  Client,
  ClientFindTransactionsGroupedResponse,
  ClientFindTransactionsResponse,
} from "../../client/index.js";
import { Hex } from "../../hex/index.js";
import { Num } from "../../num/index.js";
import { verifyMessageBtcEcdsa } from "../btc/index.js";
import { verifyMessageCkbSecp256k1 } from "../ckb/verifyCkbSecp256k1.js";
import { verifyMessageJoyId } from "../ckb/verifyJoyId.js";
import { verifyMessageDogeEcdsa } from "../doge/verify.js";
import { verifyMessageEvmPersonal } from "../evm/verify.js";
import { verifyMessageNostrEvent } from "../nostr/verify.js";

/**
 * @public
 */
export enum SignerSignType {
  Unknown = "Unknown",
  BtcEcdsa = "BtcEcdsa",
  EvmPersonal = "EvmPersonal",
  JoyId = "JoyId",
  NostrEvent = "NostrEvent",
  CkbSecp256k1 = "CkbSecp256k1",
  DogeEcdsa = "DogeEcdsa",
}

/**
 * An enumeration of signer display types in wallet.
 * @public
 */
export enum SignerType {
  EVM = "EVM",
  BTC = "BTC",
  CKB = "CKB",
  Nostr = "Nostr",
  Doge = "Doge",
}

/**
 * @public
 */
export type NetworkPreference = {
  addressPrefix: string;
  signerType: SignerType;
  /**
   * Wallet signers should check if the wallet is using preferred networks.
   * If not, try to switch to the first preferred network.
   * If non preferred, let users choose what they want.
   * BTC: // They made a mess...
   *   btc
   *   btcTestnet
   *   btcTestnet4 // UTXO Global
   *   btcSignet // OKX & UTXO Global
   *   fractalBtc // UniSat
   */
  network: string;
};

/**
 * @public
 */
export class Signature {
  constructor(
    public signature: string,
    public identity: string,
    public signType: SignerSignType,
  ) {}
}

/**
 * An abstract class representing a generic signer.
 * This class provides methods to connect, get addresses, and sign transactions.
 * @public
 */
export abstract class Signer {
  constructor(protected client_: Client) {}

  abstract get type(): SignerType;
  abstract get signType(): SignerSignType;

  get client(): Client {
    return this.client_;
  }

  // Returns the preference if we need to switch network
  // undefined otherwise
  matchNetworkPreference(
    preferences: NetworkPreference[],
    currentNetwork: string | undefined,
  ): NetworkPreference | undefined {
    if (
      currentNetwork !== undefined &&
      preferences.some(({ signerType, addressPrefix, network }) => {
        signerType === this.type &&
          addressPrefix === this.client.addressPrefix &&
          network === currentNetwork;
      })
    ) {
      return;
    }
    return preferences.find(
      ({ signerType, addressPrefix }) =>
        signerType === this.type && addressPrefix === this.client.addressPrefix,
    );
  }

  static async verifyMessage(
    message: string | BytesLike,
    signature: Signature,
  ): Promise<boolean> {
    switch (signature.signType) {
      case SignerSignType.EvmPersonal:
        return verifyMessageEvmPersonal(
          message,
          signature.signature,
          signature.identity,
        );
      case SignerSignType.BtcEcdsa:
        return verifyMessageBtcEcdsa(
          message,
          signature.signature,
          signature.identity,
        );
      case SignerSignType.JoyId:
        return verifyMessageJoyId(
          message,
          signature.signature,
          signature.identity,
        );
      case SignerSignType.NostrEvent:
        return verifyMessageNostrEvent(
          message,
          signature.signature,
          signature.identity,
        );
      case SignerSignType.CkbSecp256k1:
        return verifyMessageCkbSecp256k1(
          message,
          signature.signature,
          signature.identity,
        );
      case SignerSignType.DogeEcdsa:
        return verifyMessageDogeEcdsa(
          message,
          signature.signature,
          signature.identity,
        );
      case SignerSignType.Unknown:
        throw new Error("Unknown signer sign type");
    }
  }

  /**
   * Connects to the signer.
   *
   * @returns A promise that resolves when the connection is complete.
   */
  abstract connect(): Promise<void>;

  /**
   * Register a listener to be called when this signer is replaced.
   *
   * @returns A function for unregister
   */
  onReplaced(_: () => void): () => void {
    return () => {};
  }

  /**
   * Disconnects to the signer.
   *
   * @returns A promise that resolves when the signer is disconnected.
   */
  async disconnect(): Promise<void> {}

  /**
   * Check if the signer is connected.
   *
   * @returns A promise that resolves the connection status.
   */
  abstract isConnected(): Promise<boolean>;

  /**
   * Gets the internal address associated with the signer.
   *
   * @returns A promise that resolves to a string representing the internal address.
   */
  abstract getInternalAddress(): Promise<string>;

  /**
   * Gets the identity for verifying signature, usually it's address
   *
   * @returns A promise that resolves to a string representing the identity
   */
  async getIdentity(): Promise<string> {
    return this.getInternalAddress();
  }

  /**
   * Gets an array of Address objects associated with the signer.
   *
   * @returns A promise that resolves to an array of Address objects.
   */
  abstract getAddressObjs(): Promise<Address[]>;

  /**
   * Gets the recommended Address object for the signer.
   *
   * @param _preference - Optional preference parameter.
   * @returns A promise that resolves to the recommended Address object.
   */
  async getRecommendedAddressObj(_preference?: unknown): Promise<Address> {
    return (await this.getAddressObjs())[0];
  }

  /**
   * Gets the recommended address for the signer as a string.
   *
   * @param preference - Optional preference parameter.
   * @returns A promise that resolves to the recommended address as a string.
   */
  async getRecommendedAddress(preference?: unknown): Promise<string> {
    return (await this.getRecommendedAddressObj(preference)).toString();
  }

  /**
   * Gets an array of addresses associated with the signer as strings.
   *
   * @returns A promise that resolves to an array of addresses as strings.
   */
  async getAddresses(): Promise<string[]> {
    return this.getAddressObjs().then((addresses) =>
      addresses.map((address) => address.toString()),
    );
  }

  /**
   * Find cells of this signer
   *
   * @returns A async generator that yields all matches cells
   */
  async *findCells(
    filter: ClientCollectableSearchKeyFilterLike,
    withData?: boolean | null,
    order?: "asc" | "desc",
    limit?: number,
  ): AsyncGenerator<Cell> {
    const scripts = await this.getAddressObjs();
    for (const { script } of scripts) {
      for await (const cell of this.client.findCells(
        {
          script,
          scriptType: "lock",
          filter,
          scriptSearchMode: "exact",
          withData,
        },
        order,
        limit,
      )) {
        yield cell;
      }
    }
  }

  /**
   * Find transactions of this signer
   *
   * @returns A async generator that yields all matches transactions
   */
  findTransactions(
    filter: ClientCollectableSearchKeyFilterLike,
    groupByTransaction?: false | null,
    order?: "asc" | "desc",
    limit?: number,
  ): AsyncGenerator<ClientFindTransactionsResponse["transactions"][0]>;
  /**
   * Find transactions of this signer
   *
   * @returns A async generator that yields all matches transactions
   */
  findTransactions(
    filter: ClientCollectableSearchKeyFilterLike,
    groupByTransaction: true,
    order?: "asc" | "desc",
    limit?: number,
  ): AsyncGenerator<ClientFindTransactionsGroupedResponse["transactions"][0]>;
  /**
   * Find transactions of this signer
   *
   * @returns A async generator that yields all matches transactions
   */
  findTransactions(
    filter: ClientCollectableSearchKeyFilterLike,
    groupByTransaction?: boolean | null,
    order?: "asc" | "desc",
    limit?: number,
  ): AsyncGenerator<
    | ClientFindTransactionsResponse["transactions"][0]
    | ClientFindTransactionsGroupedResponse["transactions"][0]
  >;
  /**
   * Find transactions of this signer
   *
   * @returns A async generator that yields all matches transactions
   */
  async *findTransactions(
    filter: ClientCollectableSearchKeyFilterLike,
    groupByTransaction?: boolean | null,
    order?: "asc" | "desc",
    limit?: number,
  ): AsyncGenerator<
    | ClientFindTransactionsResponse["transactions"][0]
    | ClientFindTransactionsGroupedResponse["transactions"][0]
  > {
    const scripts = await this.getAddressObjs();
    for (const { script } of scripts) {
      for await (const transaction of this.client.findTransactions(
        {
          script,
          scriptType: "lock",
          filter,
          scriptSearchMode: "exact",
          groupByTransaction,
        },
        order,
        limit,
      )) {
        yield transaction;
      }
    }
  }

  /**
   * Gets balance of all addresses
   *
   * @returns A promise that resolves to the balance
   */
  async getBalance(): Promise<Num> {
    return this.client.getBalance(
      (await this.getAddressObjs()).map(({ script }) => script),
    );
  }

  /**
   * Signs a message.
   *
   * @param message - The message to sign, as a string or BytesLike object.
   * @returns A promise that resolves to the signature info.
   * @throws Will throw an error if not implemented.
   */
  async signMessage(message: string | BytesLike): Promise<Signature> {
    return {
      signature: await this.signMessageRaw(message),
      identity: await this.getIdentity(),
      signType: this.signType,
    };
  }

  /**
   * Signs a message and returns signature only. This method is not implemented and should be overridden by subclasses.
   *
   * @param _ - The message to sign, as a string or BytesLike object.
   * @returns A promise that resolves to the signature as a string.
   * @throws Will throw an error if not implemented.
   */
  signMessageRaw(_: string | BytesLike): Promise<string> {
    throw Error("Signer.signMessageRaw not implemented");
  }

  /**
   * Verify a signature.
   *
   * @param message - The original message.
   * @param signature - The signature to verify.
   * @returns A promise that resolves to the verification result.
   * @throws Will throw an error if not implemented.
   */
  async verifyMessage(
    message: string | BytesLike,
    signature: string | Signature,
  ): Promise<boolean> {
    if (typeof signature === "string") {
      return Signer.verifyMessage(message, {
        signType: this.signType,
        signature,
        identity: await this.getIdentity(),
      });
    }

    if (
      signature.identity !== (await this.getIdentity()) ||
      ![SignerSignType.Unknown, this.signType].includes(signature.signType)
    ) {
      return false;
    }

    return Signer.verifyMessage(message, signature);
  }

  /**
   * Sends a transaction after signing it.
   *
   * @param tx - The transaction to send, represented as a TransactionLike object.
   * @returns A promise that resolves to the transaction hash as a Hex string.
   */
  async sendTransaction(tx: TransactionLike): Promise<Hex> {
    return this.client.sendTransaction(await this.signTransaction(tx));
  }

  /**
   * Signs a transaction.
   *
   * @param tx - The transaction to sign, represented as a TransactionLike object.
   * @returns A promise that resolves to the signed Transaction object.
   */
  async signTransaction(tx: TransactionLike): Promise<Transaction> {
    const preparedTx = await this.prepareTransaction(tx);
    return this.signOnlyTransaction(preparedTx);
  }

  /**
   * prepare a transaction before signing. This method is not implemented and should be overridden by subclasses.
   *
   * @param _ - The transaction to prepare, represented as a TransactionLike object.
   * @returns A promise that resolves to the prepared Transaction object.
   * @throws Will throw an error if not implemented.
   */
  prepareTransaction(_: TransactionLike): Promise<Transaction> {
    throw Error("Signer.prepareTransaction not implemented");
  }

  /**
   * Signs a transaction without preparing information for it. This method is not implemented and should be overridden by subclasses.
   *
   * @param _ - The transaction to sign, represented as a TransactionLike object.
   * @returns A promise that resolves to the signed Transaction object.
   * @throws Will throw an error if not implemented.
   */
  signOnlyTransaction(_: TransactionLike): Promise<Transaction> {
    throw Error("Signer.signOnlyTransaction not implemented");
  }
}

/**
 * A class representing information about a signer, including its type and the signer instance.
 * @public
 */
export class SignerInfo {
  constructor(
    public name: string,
    public signer: Signer,
  ) {}
}

/**
 * Represents a wallet with a name, icon, and an array of signer information.
 * @public
 */
export type Wallet = {
  name: string;
  icon: string;
};


================================================
File: packages/core/src/utils/index.ts
================================================
import { NumLike, numFrom, numToHex } from "../num/index.js";

/**
 * A type safe way to apply a transformer on a value if it's not empty.
 * @public
 *
 * @param transformer - The transformer.
 * @param value - The value to be transformed.
 * @returns If the value is empty, it becomes undefined. Otherwise it will be transformed.
 */
export function apply<T, R>(
  transformer: (val: T) => R,
  value: undefined,
): undefined;
/**
 * A type safe way to apply a transformer on a value if it's not empty.
 * @public
 *
 * @param transformer - The transformer.
 * @param value - The value to be transformed.
 * @returns If the value is empty, it becomes undefined. Otherwise it will be transformed.
 */
export function apply<T, R>(transformer: (val: T) => R, value: null): undefined;
/**
 * A type safe way to apply a transformer on a value if it's not empty.
 * @public
 *
 * @param transformer - The transformer.
 * @param value - The value to be transformed.
 * @returns If the value is empty, it becomes undefined. Otherwise it will be transformed.
 */
export function apply<T, R>(transformer: (val: T) => R, value: T): R;
/**
 * A type safe way to apply a transformer on a value if it's not empty.
 * @public
 *
 * @param transformer - The transformer.
 * @param value - The value to be transformed.
 * @returns If the value is empty, it becomes undefined. Otherwise it will be transformed.
 */
export function apply<T, R>(
  transformer: (val: T) => R,
  value: T | undefined,
): R | undefined;
/**
 * A type safe way to apply a transformer on a value if it's not empty.
 * @public
 *
 * @param transformer - The transformer.
 * @param value - The value to be transformed.
 * @returns If the value is empty, it becomes undefined. Otherwise it will be transformed.
 */
export function apply<T, R>(
  transformer: (val: T) => R,
  value: T | null,
): R | undefined;
/**
 * A type safe way to apply a transformer on a value if it's not empty.
 * @public
 *
 * @param transformer - The transformer.
 * @param value - The value to be transformed.
 * @returns If the value is empty, it becomes undefined. Otherwise it will be transformed.
 */
export function apply<T, R>(
  transformer: (val: T) => R,
  value: undefined | null,
): undefined;
/**
/**
 * A type safe way to apply a transformer on a value if it's not empty.
 * @public
 *
 * @param transformer - The transformer.
 * @param value - The value to be transformed.
 * @returns If the value is empty, it becomes undefined. Otherwise it will be transformed.
 */
export function apply<T, R>(
  transformer: (val: T) => R,
  value: T | undefined | null,
): R | undefined;
/**
 * A type safe way to apply a transformer on a value if it's not empty.
 * @public
 *
 * @param transformer - The transformer.
 * @param value - The value to be transformed.
 * @returns If the value is empty, it becomes undefined. Otherwise it will be transformed.
 */
export function apply<T, R>(
  transformer: (val: T) => R,
  value: T | undefined | null,
): R | undefined {
  if (value == null) {
    return undefined;
  }

  return transformer(value);
}

/**
 * Similar to Array.reduce, but the accumulator can returns Promise.
 * @public
 *
 * @param values - The array to be reduced.
 * @param accumulator - A callback to be called for each value. If it returns null, the previous result will be kept.
 * @returns The accumulated result.
 */
export async function reduceAsync<T>(
  values: T[],
  accumulator: (
    a: T,
    b: T,
  ) => Promise<T | undefined | null | void> | T | undefined | null | void,
): Promise<T>;
/**
 * Similar to Array.reduce, but the accumulator can returns Promise.
 * @public
 *
 * @param values - The array to be reduced.
 * @param accumulator - A callback to be called for each value. If it returns null, the previous result will be kept.
 * @param init - The initial value.
 * @returns The accumulated result.
 */
export async function reduceAsync<T, V>(
  values: V[],
  accumulator: (
    a: T,
    b: V,
    i: number,
    values: V[],
  ) => Promise<T | undefined | null | void> | T | undefined | null | void,
  init: T | Promise<T>,
): Promise<T>;
/**
 * Similar to Array.reduce, but the accumulator can returns Promise.
 * @public
 *
 * @param values - The array to be reduced.
 * @param accumulator - A callback to be called for each value. If it returns null, the previous result will be kept.
 * @param init - The initial value.
 * @returns The accumulated result.
 */
export async function reduceAsync<T, V>(
  values: (V | T)[],
  accumulator: (
    a: T,
    b: T | V,
    i: number,
    values: (V | T)[],
  ) => Promise<T | undefined | null | void> | T | undefined | null | void,
  init?: T | Promise<T>,
): Promise<T> {
  if (init === undefined) {
    if (values.length === 0) {
      throw new TypeError("Reduce of empty array with no initial value");
    }
    init = values[0] as T;
    values = values.slice(1);
  }

  return values.reduce(
    (current: Promise<T>, b: T | V, i, array) =>
      current.then((v) =>
        Promise.resolve(accumulator(v, b, i, array)).then((r) => r ?? v),
      ),
    Promise.resolve(init),
  );
}

export function sleep(ms: NumLike) {
  return new Promise((resolve) => setTimeout(resolve, Number(numFrom(ms))));
}

export type Constructor<T> = {
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  new (...args: any[]): T;
};

/**
 * @public
 */
export function isWebview(userAgent: string): boolean {
  return /webview|wv|ip((?!.*Safari)|(?=.*like Safari))/i.test(userAgent);
}

/**
 * @public
 */
export function stringify(val: unknown) {
  return JSON.stringify(val, (_, value) => {
    if (typeof value === "bigint") {
      return numToHex(value);
    }
    // eslint-disable-next-line @typescript-eslint/no-unsafe-return
    return value;
  });
}


================================================
File: packages/demo/README.md
================================================
This is a [Next.js](https://nextjs.org/) project bootstrapped with [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app).

## Getting Started

First, run the development server:

```bash
npm run dev
# or
yarn dev
# or
pnpm dev
# or
bun dev
```

Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.

You can start editing the page by modifying `app/page.tsx`. The page auto-updates as you edit the file.

This project uses [`next/font`](https://nextjs.org/docs/basic-features/font-optimization) to automatically optimize and load Inter, a custom Google Font.

## Learn More

To learn more about Next.js, take a look at the following resources:

- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.
- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.

You can check out [the Next.js GitHub repository](https://github.com/vercel/next.js/) - your feedback and contributions are welcome!

## Deploy on Vercel

The easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.

Check out our [Next.js deployment documentation](https://nextjs.org/docs/deployment) for more details.


================================================
File: packages/demo/next.config.mjs
================================================
/** @type {import('next').NextConfig} */
const nextConfig = {
  experimental: {
    optimizePackageImports: ["@ckb-ccc/core", "@ckb-ccc/core/bundle"],
  },
};

export default nextConfig;


================================================
File: packages/demo/package.json
================================================
{
  "name": "@ckb-ccc/ccc-demo",
  "version": "0.0.1",
  "private": true,
  "homepage": "https://github.com/ckb-devrel/ccc",
  "repository": {
    "type": "git",
    "url": "git://github.com/ckb-devrel/ccc.git"
  },
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint",
    "format": "prettier --write ."
  },
  "dependencies": {
    "@lit/react": "^1.0.5",
    "@uiw/react-json-view": "2.0.0-alpha.30",
    "lucide-react": "^0.427.0",
    "next": "14.2.10",
    "react": "^18",
    "react-dom": "^18"
  },
  "devDependencies": {
    "@ckb-ccc/connector-react": "workspace:*",
    "@ckb-ccc/lumos-patches": "workspace:*",
    "@ckb-ccc/ssri": "workspace:*",
    "@ckb-ccc/udt": "workspace:*",
    "@ckb-lumos/ckb-indexer": "^0.24.0-next.1",
    "@ckb-lumos/common-scripts": "^0.24.0-next.1",
    "@ckb-lumos/config-manager": "^0.24.0-next.1",
    "@ckb-lumos/helpers": "^0.24.0-next.1",
    "@headlessui/react": "^1.7.19",
    "@heroicons/react": "^2.1.3",
    "@scure/bip32": "^1.4.0",
    "@scure/bip39": "^1.3.0",
    "@types/node": "^20",
    "@types/react": "^18",
    "@types/react-dom": "^18",
    "eslint": "^8",
    "eslint-config-next": "14.2.2",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-prettier": "^5.2.3",
    "postcss": "^8",
    "prettier": "^3.2.5",
    "prettier-plugin-tailwindcss": "^0.5.14",
    "tailwindcss": "^3.4.1",
    "typescript": "^5"
  }
}


================================================
File: packages/demo/postcss.config.mjs
================================================
/** @type {import('postcss-load-config').Config} */
const config = {
  plugins: {
    tailwindcss: {},
  },
};

export default config;


================================================
File: packages/demo/tailwind.config.ts
================================================
import type { Config } from "tailwindcss";

const config: Config = {
  content: [
    "./src/pages/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/components/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/app/**/*.{js,ts,jsx,tsx,mdx}",
  ],
  theme: {
    extend: {},
  },
  plugins: [],
};
export default config;


================================================
File: packages/demo/tsconfig.json
================================================
{
  "compilerOptions": {
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": ["./*"]
    },
    "emitDecoratorMetadata": true,
    "experimentalDecorators": true
  },
  "include": [
    "next-env.d.ts",
    "**/*.ts",
    "**/*.tsx",
    ".next/types/**/*.ts",
    "src/app/connected/(tools)/IssueXUdtSus"
  ],
  "exclude": ["node_modules"]
}


================================================
File: packages/demo/.eslintrc.json
================================================
{
  "extends": ["next/core-web-vitals", "plugin:prettier/recommended"]
}


================================================
File: packages/demo/.gitignore
================================================
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.js
.yarn/install-state.gz

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# local env files
.env*.local

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts


================================================
File: packages/demo/.prettierrc
================================================
{
  "singleQuote": false,
  "trailingComma": "all",
  "plugins": ["prettier-plugin-tailwindcss"]
}


================================================
File: packages/demo/src/context.tsx
================================================
"use client";

import React, { createContext, ReactNode, useEffect, useState } from "react";
import { ccc } from "@ckb-ccc/connector-react";
import { Notifications } from "./components/Notifications";
import { formatString, useGetExplorerLink } from "./utils";
import { Key } from "lucide-react";

function WalletIcon({
  wallet,
  className,
}: {
  wallet: ccc.Wallet;
  className?: string;
}) {
  return (
    // eslint-disable-next-line @next/next/no-img-element
    <img
      src={wallet.icon}
      alt={wallet.name}
      className={`rounded-full ${className}`}
      style={{ width: "1rem", height: "1rem" }}
    />
  );
}

export const APP_CONTEXT = createContext<
  | {
      enabledAnimate: boolean;
      backgroundLifted: boolean;
      setAnimate: (v: boolean) => void;
      setBackgroundLifted: (v: boolean) => void;

      signer?: ccc.Signer;
      setPrivateKeySigner: (
        signer: ccc.SignerCkbPrivateKey | undefined,
      ) => void;
      openSigner: () => void;
      disconnect: () => void;
      openAction: ReactNode;

      sendMessage: (
        level: "error" | "warn" | "info",
        title: string,
        msgs: ReactNode[],
      ) => void;
      createSender: (title: string) => {
        log: (...msgs: ReactNode[]) => void;
        warn: (...msgs: ReactNode[]) => void;
        error: (...msgs: ReactNode[]) => void;
      };
    }
  | undefined
>(undefined);

export function AppProvider({ children }: { children: React.ReactNode }) {
  const [privateKeySigner, setPrivateKeySigner] = useState<
    ccc.SignerCkbPrivateKey | undefined
  >(undefined);
  const [address, setAddress] = useState<string>("");

  const [enabledAnimate, setAnimate] = useState(true);
  const [backgroundLifted, setBackgroundLifted] = useState(false);

  const {
    wallet,
    signerInfo: cccSigner,
    open,
    client,
    disconnect,
  } = ccc.useCcc();
  const signer = privateKeySigner ?? cccSigner?.signer;

  const { explorerAddress } = useGetExplorerLink();

  useEffect(() => {
    if (
      !privateKeySigner ||
      privateKeySigner.client.addressPrefix === client.addressPrefix
    ) {
      return;
    }

    setPrivateKeySigner(
      new ccc.SignerCkbPrivateKey(client, privateKeySigner.privateKey),
    );
  }, [privateKeySigner, client]);

  useEffect(() => {
    signer?.getInternalAddress().then((a) => setAddress(a));
  }, [signer]);

  const [messages, setMessages] = useState<
    ["error" | "warn" | "info", string, ReactNode][]
  >([]);

  const sendMessage = (
    level: "error" | "warn" | "info",
    title: string,
    msgs: ReactNode[],
  ) =>
    setMessages((messages) => [
      [
        level,
        title,
        msgs.map((msg, i) => (
          <React.Fragment key={i}>
            {i === 0 ? "" : " "}
            {msg}
          </React.Fragment>
        )),
      ],
      ...messages,
    ]);

  useEffect(() => {
    const handler = (event: PromiseRejectionEvent) => {
      const msg = (() => {
        if (typeof event.reason === "object" && event.reason !== null) {
          const { name, message, stack, cause } = (event as any).reason;
          return JSON.stringify({ name, message, stack, cause });
        }
        if (typeof event.reason === "string") {
          return event.reason;
        }
        return JSON.stringify(event);
      })();
      sendMessage("error", "Unknown error", [msg]);
    };

    window.addEventListener("unhandledrejection", handler);
    return () => window.removeEventListener("unhandledrejection", handler);
  }, [setMessages]);

  return (
    <APP_CONTEXT.Provider
      value={{
        enabledAnimate,
        backgroundLifted,
        setAnimate,
        setBackgroundLifted,

        signer,
        setPrivateKeySigner,
        openSigner: () => {
          if (cccSigner) {
            open();
          } else {
            sendMessage("info", "Address Copied", [explorerAddress(address)]);
            window.navigator.clipboard.writeText(address);
          }
        },
        disconnect: () => {
          if (cccSigner) {
            disconnect();
          } else {
            setPrivateKeySigner(undefined);
          }
        },
        openAction: cccSigner ? (
          <>
            {wallet && <WalletIcon wallet={wallet} className="mr-2" />}
            {formatString(address, 5, 4)}
          </>
        ) : (
          <>
            <Key className="mr-2" style={{ width: "1rem", height: "1rem" }} />
            {formatString(address, 5, 4)}
          </>
        ),

        sendMessage,
        createSender: (title) => ({
          log: (...msgs) => sendMessage("info", title, msgs),
          warn: (...msgs) => sendMessage("warn", title, msgs),
          error: (...msgs) => sendMessage("error", title, msgs),
        }),
      }}
    >
      {children}
      <Notifications messages={messages} />
    </APP_CONTEXT.Provider>
  );
}

export function useApp() {
  const context = React.useContext(APP_CONTEXT);
  if (!context) {
    throw Error(
      "The component which invokes the useApp hook should be placed in a AppProvider.",
    );
  }
  return context;
}


================================================
File: packages/demo/src/types.ts
================================================
import { ccc } from "@ckb-ccc/connector-react";
import { ReactNode } from "react";

export type TabProps = {
  sendMessage: (...msg: ReactNode[]) => void;
  signer: ccc.Signer | undefined;
};


================================================
File: packages/demo/src/utils.tsx
================================================
import { ccc } from "@ckb-ccc/connector-react";
import Link from "next/link";

export function tokenInfoToBytes(
  decimals: ccc.NumLike,
  symbol: string,
  name: string,
) {
  const symbolBytes = ccc.bytesFrom(symbol, "utf8");
  const nameBytes = ccc.bytesFrom(name === "" ? symbol : name, "utf8");
  return ccc.bytesConcat(
    ccc.numToBytes(decimals, 1),
    ccc.numToBytes(nameBytes.length, 1),
    nameBytes,
    ccc.numToBytes(symbolBytes.length, 1),
    symbolBytes,
  );
}

export function bytesFromAnyString(str: string): ccc.Bytes {
  try {
    return ccc.bytesFrom(str);
  } catch (e) {}

  return ccc.bytesFrom(str, "utf8");
}

export function formatString(
  str: string | undefined,
  l = 9,
  r = 6,
): string | undefined {
  if (str && str.length > l + r + 3) {
    return `${str.slice(0, l)}...${str.slice(-r)}`;
  }
  return str;
}

export function useGetExplorerLink() {
  const { client } = ccc.useCcc();

  const prefix =
    client.addressPrefix === "ckb"
      ? "https://explorer.nervos.org"
      : "https://pudge.explorer.nervos.org";

  return {
    index: prefix,
    explorerAddress: (addr: string, display?: string) => {
      return (
        <Link
          className="underline"
          href={`${prefix}/address/${addr}`}
          target="_blank"
        >
          {display ?? addr}
        </Link>
      );
    },
    explorerTransaction: (txHash: string, display?: string) => {
      return (
        <Link
          className="underline"
          href={`${prefix}/transaction/${txHash}`}
          target="_blank"
        >
          {display ?? txHash}
        </Link>
      );
    },
  };
}


================================================
File: packages/demo/src/app/globals.css
================================================
@tailwind base;
@tailwind components;
@tailwind utilities;

*::-webkit-scrollbar {
  width: 6px;
  height: 6px;
  border-radius: 3px;
}
*::-webkit-scrollbar-thumb {
  border-radius: 3px;
  background-color: #ddd;
}

a {
  text-decoration: underline;
}


================================================
File: packages/demo/src/app/layout.tsx
================================================
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import { LayoutProvider } from "./layoutProvider";
import "./globals.css";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "CCC App",
  description: "An app based on the CCC library",
  icons: "/favicon.svg",
  openGraph: {
    title: "CCC App",
    description: "An app based on the CCC library",
    images: "/opengraph.png",
  },
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" className="flex min-h-full flex-col">
      <head>
        <meta
          name="viewport"
          content="user-scalable=no, initial-scale=1, maximum-scale=1, minimum-scale=1, width=device-width, height=device-height, target-densitydpi=device-dpi"
        />
      </head>
      <body className={`flex grow flex-col ${inter.className}`}>
        <LayoutProvider>{children}</LayoutProvider>
      </body>
    </html>
  );
}


================================================
File: packages/demo/src/app/layoutProvider.tsx
================================================
/* eslint-disable @next/next/no-img-element */
"use client";

import { ccc } from "@ckb-ccc/connector-react";
import { ReactNode, useEffect, useState } from "react";
import { Background } from "@/src/components/Background";
import { formatString, useGetExplorerLink } from "@/src/utils";
import {
  Camera,
  CameraOff,
  FlaskConical,
  FlaskConicalOff,
  Pause,
  Play,
  Search,
  SquareTerminal,
  X,
} from "lucide-react";
import Link from "next/link";
import { AppProvider, useApp } from "@/src/context";
import { Button } from "@/src/components/Button";
import { Dropdown } from "@/src/components/Dropdown";

function Links(props: React.ComponentPropsWithoutRef<"div">) {
  const { index } = useGetExplorerLink();

  return (
    <div
      {...props}
      className={`flex items-center justify-center gap-8 ${props.className ?? ""}`}
    >
      <Link href="/" className="h-6 w-6">
        <img
          src="https://raw.githubusercontent.com/ckb-devrel/ccc/master/assets/logo.svg"
          alt="CCC"
        />
      </Link>
      <Link href="https://live.ckbccc.com/" target="_blank">
        <SquareTerminal className="h-6 w-6" strokeWidth={3} />
      </Link>
      <Link href="https://github.com/ckb-devrel/ccc" target="_blank">
        <svg
          className="h-6 w-6"
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 16 16"
          id="github"
        >
          <path d="M7.999 0C3.582 0 0 3.596 0 8.032a8.031 8.031 0 0 0 5.472 7.621c.4.074.546-.174.546-.387 0-.191-.007-.696-.011-1.366-2.225.485-2.695-1.077-2.695-1.077-.363-.928-.888-1.175-.888-1.175-.727-.498.054-.488.054-.488.803.057 1.225.828 1.225.828.714 1.227 1.873.873 2.329.667.072-.519.279-.873.508-1.074-1.776-.203-3.644-.892-3.644-3.969 0-.877.312-1.594.824-2.156-.083-.203-.357-1.02.078-2.125 0 0 .672-.216 2.2.823a7.633 7.633 0 0 1 2.003-.27 7.65 7.65 0 0 1 2.003.271c1.527-1.039 2.198-.823 2.198-.823.436 1.106.162 1.922.08 2.125.513.562.822 1.279.822 2.156 0 3.085-1.87 3.764-3.652 3.963.287.248.543.738.543 1.487 0 1.074-.01 1.94-.01 2.203 0 .215.144.465.55.386A8.032 8.032 0 0 0 16 8.032C16 3.596 12.418 0 7.999 0z"></path>
        </svg>
      </Link>
      <Link href="https://x.com/CKBDevrel" target="_blank">
        <svg
          className="h-6 w-6"
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
        >
          <path d="M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z" />
        </svg>
      </Link>
      <Link href="https://faucet.nervos.org/" target="_blank">
        <svg
          className="h-6 w-6"
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 360 360"
        >
          <path
            d="M102.342,246.475C99.541,242.42,94.928,240,90,240s-9.541,2.42-12.342,6.475
		c-0.32,0.463-7.925,11.497-15.633,24.785C46.765,297.566,45,308.822,45,315c0,24.813,20.187,45,45,45s45-20.187,45-45
		c0-6.178-1.765-17.434-17.025-43.74C110.267,257.972,102.662,246.938,102.342,246.475z"
          />
          <path
            d="M300,60h-60h-15V30h15c8.284,0,15-6.716,15-15s-6.716-15-15-15h-60c-8.284,0-15,6.716-15,15s6.716,15,15,15
		h15v30h-15h-60c-41.355,0-75,33.645-75,75v60c0,8.284,6.716,15,15,15h60c8.284,0,15-6.716,15-15v-45h45h60h60
		c8.284,0,15-6.716,15-15V75C315,66.716,308.284,60,300,60z"
          />
        </svg>
      </Link>
      <Link href="https://www.nervos.org/" target="_blank">
        <svg
          className="h-6 w-6"
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 207.6765 206.318"
          fill="#000"
        >
          <polygon points="0 0 0 206.318 53.151 206.318 53.151 93.897 93.896 93.897 0 0" />
          <polygon points="154.525 0 154.525 112.422 113.781 112.422 207.676 206.318 207.676 0 154.525 0" />
        </svg>
      </Link>
      <Link href={index} target="_blank">
        <Search className="h-6 w-6" strokeWidth={4} />
      </Link>
    </div>
  );
}

function ClientSwitcher() {
  const { setClient, client } = ccc.useCcc();
  const [isTestnet, setIsTestnet] = useState(true);

  useEffect(() => {
    setIsTestnet(client.addressPrefix !== "ckb");
  }, [client]);

  useEffect(() => {
    setClient(
      isTestnet ? new ccc.ClientPublicTestnet() : new ccc.ClientPublicMainnet(),
    );
  }, [isTestnet, setClient]);

  return (
    <button
      onClick={() => setIsTestnet(!isTestnet)}
      className="mr-4 flex gap-2"
    >
      {isTestnet ? (
        <FlaskConical className="h-6 w-6" />
      ) : (
        <FlaskConicalOff className="h-6 w-6" />
      )}
      {isTestnet ? "Testnet" : "Mainnet"}
    </button>
  );
}

function WalletInfo() {
  const { signer, openAction, openSigner, disconnect } = useApp();

  const [balance, setBalance] = useState(ccc.Zero);
  useEffect(() => {
    if (!signer) {
      return;
    }

    signer.getBalance().then((v) => setBalance(v));
  }, [signer]);

  if (!signer) {
    return (
      <Button
        disabled
        className="h-7 py-0 text-sm"
        style={{ paddingLeft: "0.5rem", paddingRight: "0.5rem" }}
      >
        Not Connected
      </Button>
    );
  }

  return (
    <div className="flex items-center">
      <p className="font-bold">
        {ccc.fixedPointToString(balance / ccc.fixedPointFrom("1", 6), 2)} CKB
      </p>
      <Button
        onClick={openSigner}
        className="ml-3 h-7 py-0 text-sm"
        style={{ paddingLeft: "0.5rem", paddingRight: "0.5rem" }}
      >
        {openAction}
      </Button>
      <Button
        className="ml-1 h-7 w-7"
        onClick={disconnect}
        style={{ padding: 0 }}
      >
        <X size={16} />
      </Button>
    </div>
  );
}

function AnimateControl() {
  const { enabledAnimate, backgroundLifted, setAnimate, setBackgroundLifted } =
    useApp();

  return (
    <div className="ml-4 flex gap-2">
      {enabledAnimate ? (
        <Pause
          fill="black"
          className="z-50 h-8 w-8 cursor-pointer"
          onClick={() => setAnimate(false)}
        />
      ) : (
        <Play
          fill="black"
          className="z-50 h-8 w-8 cursor-pointer"
          onClick={() => setAnimate(true)}
        />
      )}
      {backgroundLifted ? (
        <CameraOff
          className="z-50 h-8 w-8 cursor-pointer"
          onClick={() => setBackgroundLifted(false)}
        />
      ) : (
        <Camera
          className="z-50 h-8 w-8 cursor-pointer"
          onClick={() => setBackgroundLifted(true)}
        />
      )}
    </div>
  );
}

function Addresses() {
  const { signer, sendMessage } = useApp();
  const { explorerAddress } = useGetExplorerLink();

  const [addresses, setAddresses] = useState<string[]>([]);
  useEffect(() => {
    if (!signer) {
      return;
    }

    signer.getAddresses().then((v) => setAddresses(v));
  }, [signer]);

  if (addresses.length === 0 || !signer) {
    return undefined;
  }

  return (
    <Dropdown
      options={addresses.map((address, i) => ({
        name: address,
        displayName: formatString(address, 5, 4),
        iconName: i === 0 ? "HandCoins" : "CircleDollarSign",
      }))}
      selected={addresses[0]}
      onSelect={(address) => {
        sendMessage("info", "Address Copied", [explorerAddress(address)]);
        window.navigator.clipboard.writeText(address);
      }}
    />
  );
}

export function LayoutProvider({ children }: { children: ReactNode }) {
  return (
    <ccc.Provider /*
      defaultClient={new ccc.ClientPublicTestnet()} // Default client used by connector
      connectorProps={{
        style: {
          "--background": "#fff",
          "--divider": "#eee",
          "--btn-primary": "#f8f8f8",
          "--btn-primary-hover": "#efeeee",
          "--btn-secondary": "#ddd",
          "--btn-secondary-hover": "#ccc",
          "--icon-primary": "#1E1E1E",
          "--icon-secondary": "#666666",
          color: "#1e1e1e",
          "--tip-color": "#666",
        } as React.CSSProperties,
      }} // Custom props on the connector element
      name="Custom name" // Custom name for your application, default to website title
      icon="https://custom.icon" // Custom icon for your application, default to website icon
      signerFilter={async (signerInfo, wallet) => true} // Filter out signers that you don't want
      signersController={new ccc.SignersController()}
        // Custom signers controller, see SignersController from @ckb-ccc/ccc
        // Overrides signerFilter
      preferredNetworks={[
        {
          addressPrefix: "ckt",
          signerType: ccc.SignerType.BTC,
          network: "btc",
        },
      ]}
      hideMark // Hide "Powered by CCC"
    */
      clientOptions={[
        {
          name: "CKB Testnet",
          client: new ccc.ClientPublicTestnet(),
        },
        {
          name: "CKB Mainnet",
          client: new ccc.ClientPublicMainnet(),
        },
      ]} // Optional, remove this property to disable client selecting
    >
      <AppProvider>
        <div className="flex h-dvh flex-col">
          <Background />
          <header className="flex w-full flex-col items-center justify-between gap-4 border-b bg-white px-8 py-3 md:flex-row">
            <Links />
            <WalletInfo />
          </header>
          <main className="relative flex grow flex-col items-center justify-around overflow-y-scroll pb-4 pt-8">
            <div className="flex w-full grow flex-col items-center justify-center">
              {children}
            </div>
          </main>
          <footer className="flex w-full items-center justify-between border-t bg-white py-2">
            <AnimateControl />
            <Addresses />
            <ClientSwitcher />
          </footer>
        </div>
      </AppProvider>
    </ccc.Provider>
  );
}


================================================
File: packages/demo/src/app/page.tsx
================================================
/* eslint-disable @next/next/no-img-element */
"use client";

import { ccc } from "@ckb-ccc/connector-react";
import React, { useEffect } from "react";
import { Key, Wallet } from "lucide-react";
import { BigButton } from "@/src/components/BigButton";
import { useRouter } from "next/navigation";
import { useApp } from "@/src/context";
import Link from "next/link";

export default function Home() {
  const router = useRouter();
  const { signer } = useApp();

  useEffect(() => {
    if (signer) {
      router.push("/connected");
    }
  }, [signer, router]);

  useEffect(() => {
    router.prefetch("/connectPrivateKey");
  }, [router]);

  const { open } = ccc.useCcc();

  return (
    <>
      <div className="my-4 flex grow flex-col items-center justify-center gap-8 md:flex-row md:gap-32">
        <BigButton onClick={open} iconName="Wallet" className="text-cyan-500">
          Wallet
        </BigButton>
        <BigButton
          onClick={() => router.push("/connectPrivateKey")}
          iconName="Key"
          className="text-emerald-500"
        >
          Private Key
        </BigButton>
      </div>
      <Link
        href="/utils"
        className="mb-4 rounded rounded-full bg-white px-4 py-2 no-underline shadow"
        prefetch={true}
      >
        Skip Connecting
      </Link>
    </>
  );
}


================================================
File: packages/demo/src/app/connectPrivateKey/page.tsx
================================================
"use client";

import { useApp } from "@/src/context";
import { Button } from "@/src/components/Button";
import { useState } from "react";
import { TextInput } from "@/src/components/Input";
import { ccc } from "@ckb-ccc/connector-react";
import { useRouter } from "next/navigation";
import { ButtonsPanel } from "@/src/components/ButtonsPanel";

export default function Page() {
  const router = useRouter();
  const { setPrivateKeySigner } = useApp();
  const { client } = ccc.useCcc();
  const [privateKey, setPrivateKey] = useState("");

  return (
    <div className="flex w-9/12 flex-col items-center items-stretch gap-2">
      <TextInput
        label="Private Key"
        state={[privateKey, setPrivateKey]}
        placeholder="0x0123456789..."
      />
      <ButtonsPanel>
        <Button onClick={() => router.push("/")}>Back</Button>
        <Button
          className="ml-2"
          onClick={() => {
            try {
              setPrivateKeySigner(
                new ccc.SignerCkbPrivateKey(client, privateKey),
              );
              router.push("/connected");
            } catch (_) {
              setPrivateKeySigner(undefined);
              Promise.reject("Invalid private key");
            }
          }}
        >
          Connect
        </Button>
      </ButtonsPanel>
    </div>
  );
}


================================================
File: packages/demo/src/app/connected/layout.tsx
================================================
"use client";

import { useRouter } from "next/navigation";
import { useApp } from "@/src/context";
import { useEffect } from "react";
import React from "react";

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const router = useRouter();
  const { signer } = useApp();

  useEffect(() => {
    if (!signer) {
      router.push("/");
    }
  }, [signer, router]);

  if (!signer) {
    return <>Disconnected</>;
  }

  return children;
}


================================================
File: packages/demo/src/app/connected/page.tsx
================================================
/* eslint-disable @next/next/no-img-element */
"use client";

import React, { ReactNode, useEffect } from "react";
import { useRouter } from "next/navigation";
import { icons } from "lucide-react";
import { BigButton } from "@/src/components/BigButton";

/* eslint-disable react/jsx-key */
const TABS: [ReactNode, string, keyof typeof icons, string][] = [
  ["Sign", "/connected/Sign", "Signature", "text-orange-500"],
  ["Transfer", "/connected/Transfer", "ArrowLeftRight", "text-lime-500"],
  [
    "Transfer with Lumos",
    "/connected/TransferLumos",
    "LampWallDown",
    "text-yellow-500",
  ],
  [
    "Time Locked Transfer",
    "/connected/TimeLockedTransfer",
    "Clock",
    "text-amber-500",
  ],
  ["Transfer UDT", "/connected/TransferUdt", "BadgeCent", "text-emerald-500"],
  ["Issue xUDT (SUS)", "/connected/IssueXUdtSus", "Rss", "text-sky-500"],
  [
    <div className="flex flex-col">
      Issue xUDT <span className="whitespace-nowrap">(Type ID)</span>
    </div>,
    "/connected/IssueXUdtTypeId",
    "PencilRuler",
    "text-blue-500",
  ],
  [
    "Create Spore Cluster",
    "/connected/CreateSporeCluster",
    "Wheat",
    "text-indigo-600",
  ],
  ["Mint Spore", "/connected/MintSpore", "Cherry", "text-violet-600"],
  ["Transfer Spore", "/connected/TransferSpore", "Ticket", "text-sky-400"],
  [
    "Transfer Spore Cluster",
    "/connected/TransferSporeCluster",
    "Images",
    "text-cyan-600",
  ],
  ["Nervos DAO", "/connected/NervosDao", "Vault", "text-pink-500"],
  ["SSRI", "/connected/SSRI", "Pill", "text-blue-500"],
  ["Hash", "/utils/Hash", "Barcode", "text-violet-500"],
  ["Mnemonic", "/utils/Mnemonic", "SquareAsterisk", "text-fuchsia-500"],
  ["Keystore", "/utils/Keystore", "Notebook", "text-rose-500"],
];
/* eslint-enable react/jsx-key */

export default function Page() {
  const router = useRouter();

  useEffect(() => {
    TABS.forEach(([_, path]) => router.prefetch(path));
  }, [router]);

  return (
    <div className="flex flex-wrap justify-center gap-8 px-4 lg:px-16">
      {TABS.map(([name, link, iconName, classes]) => (
        <BigButton
          key={link}
          size="sm"
          iconName={iconName}
          onClick={() => router.push(link)}
          className={classes}
        >
          {name}
        </BigButton>
      ))}
    </div>
  );
}


================================================
File: packages/demo/src/app/connected/(tools)/layout.tsx
================================================
"use client";

import React from "react";

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <div className="flex w-11/12 flex-col items-center sm:w-8/12 lg:w-8/12">
      {children}
    </div>
  );
}


================================================
File: packages/demo/src/app/connected/(tools)/CreateSporeCluster/page.tsx
================================================
"use client";

import React, { useEffect, useState } from "react";
import { TextInput } from "@/src/components/Input";
import { Button } from "@/src/components/Button";
import { useGetExplorerLink } from "@/src/utils";
import { useApp } from "@/src/context";
import { ButtonsPanel } from "@/src/components/ButtonsPanel";
import { ccc, spore } from "@ckb-ccc/connector-react";
import { Textarea } from "@/src/components/Textarea";
import { Message } from "@/src/components/Message";
import Link from "next/link";

function generateClusterDescriptionUnderDobProtocol(
  client: ccc.Client,
): [string, string] {
  /**
   * Generation example for DOB0
   */
  const clusterDescription = "My First DOB Cluster";
  const dob0Pattern: spore.dob.PatternElementDob0[] = [
    {
      traitName: "BackgroundColor",
      dobType: "String",
      dnaOffset: 0,
      dnaLength: 1,
      patternType: "options",
      traitArgs: ["red", "blue", "green", "black", "white"],
    },
    {
      traitName: "Type",
      dobType: "Number",
      dnaOffset: 1,
      dnaLength: 1,
      patternType: "range",
      traitArgs: [10, 50],
    },
    {
      traitName: "Timestamp",
      dobType: "Number",
      dnaOffset: 2,
      dnaLength: 4,
      patternType: "rawNumber",
    },
  ];
  const dob0: spore.dob.Dob0 = {
    description: clusterDescription,
    dob: {
      ver: 0,
      decoder: spore.dob.getDecoder(client, "dob0"),
      pattern: dob0Pattern,
    },
  };

  /**
   * Generation example for DOB1
   */
  const dob1Pattern: spore.dob.PatternElementDob1[] = [
    {
      imageName: "IMAGE.0",
      svgFields: "attributes",
      traitName: "",
      patternType: "raw",
      traitArgs: "xmlns='http://www.w3.org/2000/svg' viewBox='0 0 300 200'",
    },
    {
      imageName: "IMAGE.0",
      svgFields: "elements",
      traitName: "Timestamp",
      patternType: "options",
      traitArgs: [
        [
          [0, 1000000],
          "<image width='300' height='200' href='btcfs://b2f4560f17679d3e3fca66209ac425c660d28a252ef72444c3325c6eb0364393i0' />",
        ],
        [
          ["*"],
          "<image width='300' height='200' href='btcfs://eb3910b3e32a5ed9460bd0d75168c01ba1b8f00cc0faf83e4d8b67b48ea79676i0' />",
        ],
      ],
    },
    {
      imageName: "IMAGE.0",
      svgFields: "elements",
      traitName: "BackgroundColor",
      patternType: "options",
      traitArgs: [
        ["red", "<rect width='20' height='20' x='5' y='5' fill='red' />"],
        ["blue", "<rect width='20' height='20' x='20' y='5' fill='blue' />"],
        ["green", "<rect width='20' height='20' x='5' y='20' fill='green' />"],
        [["*"], "<rect width='20' height='20' x='20' y='20' fill='pink' />"],
      ],
    },
  ];
  const dob1: spore.dob.Dob1 = {
    description: clusterDescription,
    dob: {
      ver: 1,
      decoders: [
        {
          decoder: spore.dob.getDecoder(client, "dob0"),
          pattern: dob0Pattern,
        },
        {
          decoder: spore.dob.getDecoder(client, "dob1"),
          pattern: dob1Pattern,
        },
      ],
    },
  };
  return [
    spore.dob.encodeClusterDescriptionForDob0(dob0),
    spore.dob.encodeClusterDescriptionForDob1(dob1),
  ];
}
export default function CreateSporeCluster() {
  const { signer, createSender } = useApp();
  const { client } = ccc.useCcc();
  const { log, warn } = createSender("Create Cluster");

  const { explorerTransaction } = useGetExplorerLink();

  const [name, SetName] = useState<string>("My First DOB Cluster");
  const [description, setDescription] = useState<string>("");

  useEffect(() => {
    setDescription(
      JSON.stringify(
        JSON.parse(generateClusterDescriptionUnderDobProtocol(client)[1]),
        undefined,
        2,
      ),
    );
  }, [client]);

  return (
    <div className="flex w-full flex-col items-stretch">
      <Message title="Hint" type="info">
        Learn more on{" "}
        <Link
          className="underline"
          href="https://docs.spore.pro/"
          target="_blank"
        >
          the Spore Protocol Docs
        </Link>
        .
      </Message>
      <TextInput
        label="Name"
        placeholder="Cluster Name"
        state={[name, SetName]}
      />
      <Textarea
        label="Description"
        placeholder="Cluster Description"
        rows={10}
        state={[description, setDescription]}
      />

      <ButtonsPanel>
        <Button
          variant="info"
          onClick={() => {
            setDescription(
              JSON.stringify(
                JSON.parse(
                  generateClusterDescriptionUnderDobProtocol(client)[0],
                ),
                undefined,
                2,
              ),
            );
          }}
        >
          Generate DOB/0 Example
        </Button>
        <Button
          variant="info"
          className="ml-2"
          onClick={() => {
            setDescription(
              JSON.stringify(
                JSON.parse(
                  generateClusterDescriptionUnderDobProtocol(client)[1],
                ),
                undefined,
                2,
              ),
            );
          }}
        >
          Generate DOB/1 Example
        </Button>
        <Button
          className="ml-2"
          onClick={async () => {
            if (!signer) return;

            const desc = (() => {
              const trimmed = description.trim();
              if (!(trimmed.startsWith("{") || trimmed.endsWith("}"))) {
                return description;
              }
              try {
                const compressed = JSON.stringify(JSON.parse(description));
                log("JSON object description was compressed");
                return compressed;
              } catch (err) {
                warn(
                  "Failed to parse description as JSON object, leaving it unchanged",
                );
                return description;
              }
            })();
            const { tx, id } = await spore.createSporeCluster({
              signer,

              data: {
                name,
                description: desc,
              },
            });
            await tx.completeFeeBy(signer);

            const txHash = await signer.sendTransaction(tx);
            log(
              "Transaction sent:",
              explorerTransaction(txHash),
              "Cluster ID:",
              id,
            );
            await signer.client.waitTransaction(txHash);
            log("Transaction committed:", explorerTransaction(txHash));
          }}
        >
          Create Cluster
        </Button>
      </ButtonsPanel>
    </div>
  );
}


================================================
File: packages/demo/src/app/connected/(tools)/IssueXUdtSus/page.tsx
================================================
"use client";

import { useState } from "react";
import { TextInput } from "@/src/components/Input";
import { Button } from "@/src/components/Button";
import { ccc } from "@ckb-ccc/connector-react";
import { tokenInfoToBytes, useGetExplorerLink } from "@/src/utils";
import { Message } from "@/src/components/Message";
import React from "react";
import { useApp } from "@/src/context";
import { ButtonsPanel } from "@/src/components/ButtonsPanel";
import Link from "next/link";

export default function IssueXUdtSul() {
  const { signer, createSender } = useApp();
  const { log, error } = createSender("Issue xUDT (SUS)");

  const { explorerTransaction } = useGetExplorerLink();

  const [amount, setAmount] = useState<string>("");
  const [decimals, setDecimals] = useState<string>("");
  const [name, setName] = useState<string>("");
  const [symbol, setSymbol] = useState<string>("");

  return (
    <>
      <div className="flex w-full flex-col items-stretch">
        <Message title="Hint" type="info">
          You will need to sign two or three transactions.
          <br />
          Learn more on{" "}
          <Link
            className="underline"
            href="https://talk.nervos.org/t/en-cn-misc-single-use-seals/8279"
            target="_blank"
          >
            [EN/CN] Misc: Single-Use-Seals - 杂谈：一次性密封
          </Link>
        </Message>

        <TextInput
          label="Amount"
          placeholder="Amount to issue"
          state={[amount, setAmount]}
        />
        <TextInput
          label="Decimals"
          placeholder="Decimals of the token"
          state={[decimals, setDecimals]}
        />
        <TextInput
          label="Symbol"
          placeholder="Symbol of the token"
          state={[symbol, setSymbol]}
        />
        <TextInput
          label="Name"
          placeholder="Name of the token, same as symbol if empty"
          state={[name, setName]}
        />

        <ButtonsPanel>
          <Button
            className="self-center"
            onClick={async () => {
              if (!signer) {
                return;
              }
              if (decimals === "" || symbol === "") {
                error("Invalid token info");
                return;
              }

              const { script } = await signer.getRecommendedAddressObj();

              const susTx = ccc.Transaction.from({
                outputs: [
                  {
                    lock: script,
                  },
                ],
              });
              await susTx.completeInputsByCapacity(signer);
              await susTx.completeFeeBy(signer);
              const susTxHash = await signer.sendTransaction(susTx);
              log("Transaction sent:", explorerTransaction(susTxHash));
              await signer.client.cache.markUnusable({
                txHash: susTxHash,
                index: 0,
              });

              const singleUseLock = await ccc.Script.fromKnownScript(
                signer.client,
                ccc.KnownScript.SingleUseLock,
                ccc.OutPoint.from({
                  txHash: susTxHash,
                  index: 0,
                }).toBytes(),
              );
              const lockTx = ccc.Transaction.from({
                outputs: [
                  // Owner cell
                  {
                    lock: singleUseLock,
                  },
                ],
              });
              await lockTx.completeInputsByCapacity(signer);
              await lockTx.completeFeeBy(signer);
              const lockTxHash = await signer.sendTransaction(lockTx);
              log("Transaction sent:", explorerTransaction(lockTxHash));

              const mintTx = ccc.Transaction.from({
                inputs: [
                  // SUS
                  {
                    previousOutput: {
                      txHash: susTxHash,
                      index: 0,
                    },
                  },
                  // Owner cell
                  {
                    previousOutput: {
                      txHash: lockTxHash,
                      index: 0,
                    },
                  },
                ],
                outputs: [
                  // Issued xUDT
                  {
                    lock: script,
                    type: await ccc.Script.fromKnownScript(
                      signer.client,
                      ccc.KnownScript.XUdt,
                      singleUseLock.hash(),
                    ),
                  },
                  // xUDT Info
                  {
                    lock: script,
                    type: await ccc.Script.fromKnownScript(
                      signer.client,
                      ccc.KnownScript.UniqueType,
                      "00".repeat(32),
                    ),
                  },
                ],
                outputsData: [
                  ccc.numLeToBytes(amount, 16),
                  tokenInfoToBytes(decimals, symbol, name),
                ],
              });
              await mintTx.addCellDepsOfKnownScripts(
                signer.client,
                ccc.KnownScript.SingleUseLock,
                ccc.KnownScript.XUdt,
                ccc.KnownScript.UniqueType,
              );
              await mintTx.completeInputsByCapacity(signer);
              if (!mintTx.outputs[1].type) {
                error("Unexpected disappeared output");
                return;
              }
              mintTx.outputs[1].type!.args = ccc.hexFrom(
                ccc.bytesFrom(ccc.hashTypeId(mintTx.inputs[0], 1)).slice(0, 20),
              );
              await mintTx.completeFeeBy(signer);
              const mintTxHash = await signer.sendTransaction(mintTx);
              log("Transaction sent:", explorerTransaction(mintTxHash));
              await signer.client.waitTransaction(mintTxHash);
              log("Transaction committed:", explorerTransaction(mintTxHash));
            }}
          >
            Issue
          </Button>
        </ButtonsPanel>
      </div>
    </>
  );
}


================================================
File: packages/demo/src/app/connected/(tools)/IssueXUdtTypeId/page.tsx
================================================
"use client";

import React, { useState } from "react";
import { TextInput } from "@/src/components/Input";
import { Button } from "@/src/components/Button";
import { ccc } from "@ckb-ccc/connector-react";
import { tokenInfoToBytes, useGetExplorerLink } from "@/src/utils";
import { Message } from "@/src/components/Message";
import { useApp } from "@/src/context";
import { ButtonsPanel } from "@/src/components/ButtonsPanel";
import Link from "next/link";

export default function IssueXUdtTypeId() {
  const { signer, createSender } = useApp();
  const { log, error } = createSender("Issue xUDT (Type ID)");

  const { explorerTransaction } = useGetExplorerLink();

  const [typeIdArgs, setTypeIdArgs] = useState<string>("");
  const [amount, setAmount] = useState<string>("");
  const [decimals, setDecimals] = useState<string>("");
  const [name, setName] = useState<string>("");
  const [symbol, setSymbol] = useState<string>("");

  return (
    <>
      <div className="flex w-full flex-col items-stretch">
        <Message title="Hint" type="info">
          You will need to sign two or three transactions.
          <br />
          Learn more on{" "}
          <Link
            className="underline"
            href="https://talk.nervos.org/t/en-cn-misc-single-use-seals/8279"
            target="_blank"
          >
            [EN/CN] Misc: Single-Use-Seals - 杂谈：一次性密封
          </Link>
        </Message>
        <TextInput
          label="Type ID(options)"
          placeholder="Type ID args, empty to create new"
          state={[typeIdArgs, setTypeIdArgs]}
        />
        <TextInput
          label="Amount"
          placeholder="Amount to issue"
          state={[amount, setAmount]}
        />
        <TextInput
          label="Decimals"
          placeholder="Decimals of the token"
          state={[decimals, setDecimals]}
        />
        <TextInput
          label="Symbol"
          placeholder="Symbol of the token"
          state={[symbol, setSymbol]}
        />
        <TextInput
          label="Name (options)"
          placeholder="Name of the token, same as symbol if empty"
          state={[name, setName]}
        />
        <ButtonsPanel>
          <Button
            className="self-center"
            onClick={async () => {
              if (!signer) {
                return;
              }
              const { script } = await signer.getRecommendedAddressObj();
              if (decimals === "" || symbol === "") {
                error("Invalid token info");
                return;
              }

              const typeId = await (async () => {
                if (typeIdArgs !== "") {
                  return ccc.Script.fromKnownScript(
                    signer.client,
                    ccc.KnownScript.TypeId,
                    typeIdArgs,
                  );
                }
                const typeIdTx = ccc.Transaction.from({
                  outputs: [
                    {
                      lock: script,
                      type: await ccc.Script.fromKnownScript(
                        signer.client,
                        ccc.KnownScript.TypeId,
                        "00".repeat(32),
                      ),
                    },
                  ],
                });
                await typeIdTx.completeInputsByCapacity(signer);
                if (!typeIdTx.outputs[0].type) {
                  error("Unexpected disappeared output");
                  return;
                }
                typeIdTx.outputs[0].type.args = ccc.hashTypeId(
                  typeIdTx.inputs[0],
                  0,
                );
                await typeIdTx.completeFeeBy(signer);
                log(
                  "Transaction sent:",
                  explorerTransaction(await signer.sendTransaction(typeIdTx)),
                );
                log("Type ID created: ", typeIdTx.outputs[0].type.args);
                return typeIdTx.outputs[0].type;
              })();
              if (!typeId) {
                return;
              }

              const outputTypeLock = await ccc.Script.fromKnownScript(
                signer.client,
                ccc.KnownScript.OutputTypeProxyLock,
                typeId.hash(),
              );
              const lockTx = ccc.Transaction.from({
                outputs: [
                  // Owner cell
                  {
                    lock: outputTypeLock,
                  },
                ],
              });
              await lockTx.completeInputsByCapacity(signer);
              await lockTx.completeFeeBy(signer);
              const lockTxHash = await signer.sendTransaction(lockTx);
              log("Transaction sent:", explorerTransaction(lockTxHash));

              const typeIdCell =
                await signer.client.findSingletonCellByType(typeId);
              if (!typeIdCell) {
                error("Type ID cell not found");
                return;
              }
              const mintTx = ccc.Transaction.from({
                inputs: [
                  // Type ID
                  {
                    previousOutput: typeIdCell.outPoint,
                  },
                  // Owner cell
                  {
                    previousOutput: {
                      txHash: lockTxHash,
                      index: 0,
                    },
                  },
                ],
                outputs: [
                  // Keep the Type ID cell
                  typeIdCell.cellOutput,
                  // Issued xUDT
                  {
                    lock: script,
                    type: await ccc.Script.fromKnownScript(
                      signer.client,
                      ccc.KnownScript.XUdt,
                      outputTypeLock.hash(),
                    ),
                  },
                  // xUDT Info
                  {
                    lock: script,
                    type: await ccc.Script.fromKnownScript(
                      signer.client,
                      ccc.KnownScript.UniqueType,
                      "00".repeat(32),
                    ),
                  },
                ],
                outputsData: [
                  typeIdCell.outputData,
                  ccc.numLeToBytes(amount, 16),
                  tokenInfoToBytes(decimals, symbol, name),
                ],
              });
              await mintTx.addCellDepsOfKnownScripts(
                signer.client,
                ccc.KnownScript.OutputTypeProxyLock,
                ccc.KnownScript.XUdt,
                ccc.KnownScript.UniqueType,
              );
              await mintTx.completeInputsByCapacity(signer);
              if (!mintTx.outputs[2].type) {
                throw new Error("Unexpected disappeared output");
              }
              mintTx.outputs[2].type!.args = ccc.hexFrom(
                ccc.bytesFrom(ccc.hashTypeId(mintTx.inputs[0], 2)).slice(0, 20),
              );
              await mintTx.completeFeeBy(signer);
              const mintTxHash = await signer.sendTransaction(mintTx);
              log("Transaction sent:", explorerTransaction(mintTxHash));
              await signer.client.waitTransaction(mintTxHash);
              log("Transaction committed:", explorerTransaction(mintTxHash));
            }}
          >
            Issue
          </Button>
        </ButtonsPanel>
      </div>
    </>
  );
}


================================================
File: packages/demo/src/app/connected/(tools)/MintSpore/page.tsx
================================================
"use client";

import React, { useCallback, useEffect, useState } from "react";
import { TextInput } from "@/src/components/Input";
import { Button } from "@/src/components/Button";
import { useGetExplorerLink } from "@/src/utils";
import { useApp } from "@/src/context";
import { ButtonsPanel } from "@/src/components/ButtonsPanel";
import { Dropdown } from "@/src/components/Dropdown";
import { ccc, spore } from "@ckb-ccc/connector-react";
import { Message } from "@/src/components/Message";
import Link from "next/link";

export default function MintSpore() {
  const { signer, createSender } = useApp();
  const { log, warn } = createSender("Mint Spore");
  const { explorerTransaction } = useGetExplorerLink();
  const [contentType, setContentType] = useState<string>("dob/1");
  const [content, setContent] = useState<string>(
    '{ "dna": "0123456789abcdef" }',
  );
  const [clusterId, setClusterId] = useState<string>("");
  const [clusterList, setClusterList] = useState([
    {
      id: "",
      name: "Mint Without Cluster",
    },
  ]);

  const mintSpore = useCallback(async () => {
    if (!signer) return;

    const cont = (() => {
      const trimmed = content.trim();
      if (!(trimmed.startsWith("{") || trimmed.endsWith("}"))) {
        return content;
      }
      try {
        const compressed = JSON.stringify(JSON.parse(content));
        log("JSON object content was compressed");
        return compressed;
      } catch (err) {
        warn("Failed to parse content as JSON object, leaving it unchanged");
        return content;
      }
    })();

    // Build transaction
    const { tx, id } = await spore.createSpore({
      signer,
      data: {
        contentType,
        content: ccc.bytesFrom(cont, "utf8"),
        clusterId: clusterId === "" ? undefined : clusterId,
      },
      clusterMode: clusterId === "" ? "skip" : "clusterCell",
    });
    await tx.completeFeeBy(signer);

    const txHash = await signer.sendTransaction(tx);
    log("Transaction sent:", explorerTransaction(txHash), "Spore ID:", id);
    await signer.client.waitTransaction(txHash);
    log("Transaction committed:", explorerTransaction(txHash));
  }, [signer, log, warn, clusterId, content, contentType, explorerTransaction]);

  useEffect(() => {
    if (!signer) {
      return;
    }

    (async () => {
      const list = [
        {
          id: "",
          name: "Mint Without Cluster",
        },
      ];

      for await (const {
        cluster,
        clusterData,
      } of spore.findSporeClustersBySigner({
        signer,
        order: "desc",
      })) {
        if (!cluster.cellOutput.type?.args) {
          continue;
        }

        list.push({
          id: cluster.cellOutput.type.args,
          name: `${clusterData.name} (${cluster.cellOutput.type.args.slice(0, 10)})`,
        });
      }

      setClusterList(list);
    })();
  }, [signer]);

  return (
    <div className="flex w-full flex-col items-stretch">
      <Message title="Hint" type="info">
        Learn more on{" "}
        <Link
          className="underline"
          href="https://docs.spore.pro/"
          target="_blank"
        >
          the Spore Protocol Docs
        </Link>
        .
      </Message>

      <TextInput
        label="Content Type"
        placeholder="Spore Content Type"
        state={[contentType, setContentType]}
      />
      <TextInput
        label="Content"
        placeholder="Spore Content"
        state={[content, setContent]}
      />

      <label className="mt-4 text-sm">Select a Cluster (optional)</label>
      <Dropdown
        className="mt-2"
        options={clusterList.map((cluster) => ({
          name: cluster.id,
          displayName: cluster.name,
          iconName: "Wheat",
        }))}
        selected={clusterId}
        onSelect={setClusterId}
      />
      <ButtonsPanel>
        <Button onClick={mintSpore}>Mint Spore</Button>
      </ButtonsPanel>
    </div>
  );
}


================================================
File: packages/demo/src/app/connected/(tools)/NervosDao/page.tsx
================================================
"use client";

import React, { useEffect, useMemo, useState } from "react";
import { TextInput } from "@/src/components/Input";
import { Button } from "@/src/components/Button";
import { ccc } from "@ckb-ccc/connector-react";
import { useGetExplorerLink } from "@/src/utils";
import { useApp } from "@/src/context";
import { ButtonsPanel } from "@/src/components/ButtonsPanel";
import { BigButton } from "@/src/components/BigButton";

function parseEpoch(epoch: ccc.Epoch): ccc.FixedPoint {
  return (
    ccc.fixedPointFrom(epoch[0].toString()) +
    (ccc.fixedPointFrom(epoch[1].toString()) * ccc.fixedPointFrom(1)) /
      ccc.fixedPointFrom(epoch[2].toString())
  );
}

function getProfit(
  dao: ccc.Cell,
  depositHeader: ccc.ClientBlockHeader,
  withdrawHeader: ccc.ClientBlockHeader,
): ccc.Num {
  const occupiedSize = ccc.fixedPointFrom(
    dao.cellOutput.occupiedSize + ccc.bytesFrom(dao.outputData).length,
  );
  const profitableSize = dao.cellOutput.capacity - occupiedSize;

  return (
    (profitableSize * withdrawHeader.dao.ar) / depositHeader.dao.ar -
    profitableSize
  );
}

function getClaimEpoch(
  depositHeader: ccc.ClientBlockHeader,
  withdrawHeader: ccc.ClientBlockHeader,
): ccc.Epoch {
  const depositEpoch = depositHeader.epoch;
  const withdrawEpoch = withdrawHeader.epoch;
  const intDiff = withdrawEpoch[0] - depositEpoch[0];
  // deposit[1]    withdraw[1]
  // ---------- <= -----------
  // deposit[2]    withdraw[2]
  if (
    intDiff % ccc.numFrom(180) !== ccc.numFrom(0) ||
    depositEpoch[1] * withdrawEpoch[2] <= depositEpoch[2] * withdrawEpoch[1]
  ) {
    return [
      depositEpoch[0] +
        (intDiff / ccc.numFrom(180) + ccc.numFrom(1)) * ccc.numFrom(180),
      depositEpoch[1],
      depositEpoch[2],
    ];
  }

  return [
    depositEpoch[0] + (intDiff / ccc.numFrom(180)) * ccc.numFrom(180),
    depositEpoch[1],
    depositEpoch[2],
  ];
}

function DaoButton({ dao }: { dao: ccc.Cell }) {
  const { signer, createSender } = useApp();
  const { log, error } = createSender("Transfer");

  const { explorerTransaction } = useGetExplorerLink();

  const [tip, setTip] = useState<ccc.ClientBlockHeader | undefined>();
  const [infos, setInfos] = useState<
    | [
        ccc.Num,
        ccc.ClientTransactionResponse,
        ccc.ClientBlockHeader,
        [undefined | ccc.ClientTransactionResponse, ccc.ClientBlockHeader],
      ]
    | undefined
  >();

  const isNew = useMemo(() => dao.outputData === "0x0000000000000000", [dao]);
  useEffect(() => {
    if (!signer) {
      return;
    }

    (async () => {
      const tipHeader = await signer.client.getTipHeader();
      setTip(tipHeader);

      const previousTxRes = await signer.client.getTransactionWithHeader(
        dao.outPoint.txHash,
      );
      if (!previousTxRes || !previousTxRes.header) {
        return;
      }
      const { transaction: previousTx, header: previousHeader } = previousTxRes;

      const claimInfo = await (async (): Promise<typeof infos> => {
        if (isNew) {
          return;
        }

        const depositTxHash =
          previousTx.transaction.inputs[Number(dao.outPoint.index)]
            .previousOutput.txHash;
        const depositTxRes =
          await signer.client.getTransactionWithHeader(depositTxHash);
        if (!depositTxRes || !depositTxRes.header) {
          return;
        }
        const { transaction: depositTx, header: depositHeader } = depositTxRes;

        return [
          getProfit(dao, depositHeader, previousHeader),
          depositTx,
          depositHeader,
          [previousTx, previousHeader],
        ];
      })();

      if (claimInfo) {
        setInfos(claimInfo);
      } else {
        setInfos([
          getProfit(dao, previousHeader, tipHeader),
          previousTx,
          previousHeader,
          [undefined, tipHeader],
        ]);
      }
    })();
  }, [dao, signer, isNew]);

  return (
    <BigButton
      key={ccc.hexFrom(dao.outPoint.toBytes())}
      size="sm"
      iconName="Vault"
      onClick={() => {
        if (!signer || !infos) {
          return;
        }

        (async () => {
          const [profit, depositTx, depositHeader] = infos;
          if (!depositTx.blockHash || !depositTx.blockNumber) {
            error(
              "Unexpected empty block info for",
              explorerTransaction(dao.outPoint.txHash),
            );
            return;
          }
          const { blockHash, blockNumber } = depositTx;

          let tx;
          if (isNew) {
            tx = ccc.Transaction.from({
              headerDeps: [blockHash],
              inputs: [{ previousOutput: dao.outPoint }],
              outputs: [dao.cellOutput],
              outputsData: [ccc.numLeToBytes(blockNumber, 8)],
            });

            await tx.addCellDepsOfKnownScripts(
              signer.client,
              ccc.KnownScript.NervosDao,
            );

            await tx.completeInputsByCapacity(signer);
            await tx.completeFeeBy(signer);
          } else {
            if (!infos[3]) {
              error("Unexpected no found deposit info");
              return;
            }
            const [withdrawTx, withdrawHeader] = infos[3];
            if (!withdrawTx?.blockHash) {
              error("Unexpected empty redeem tx block info");
              return;
            }
            if (!depositTx.blockHash) {
              error("Unexpected empty deposit tx block info");
              return;
            }

            tx = ccc.Transaction.from({
              headerDeps: [withdrawTx.blockHash, blockHash],
              inputs: [
                {
                  previousOutput: dao.outPoint,
                  since: {
                    relative: "absolute",
                    metric: "epoch",
                    value: ccc.epochToHex(
                      getClaimEpoch(depositHeader, withdrawHeader),
                    ),
                  },
                },
              ],
              outputs: [
                {
                  lock: (await signer.getRecommendedAddressObj()).script,
                },
              ],
              witnesses: [
                ccc.WitnessArgs.from({
                  inputType: ccc.numLeToBytes(1, 8),
                }).toBytes(),
              ],
            });
            await tx.addCellDepsOfKnownScripts(
              signer.client,
              ccc.KnownScript.NervosDao,
            );

            await tx.completeInputsByCapacity(signer);
            await tx.completeFeeChangeToOutput(signer, 0);
            tx.outputs[0].capacity += profit;
          }

          // Sign and send the transaction
          const txHash = await signer.sendTransaction(tx);
          log("Transaction sent:", explorerTransaction(txHash));
          await signer.client.waitTransaction(txHash);
          log("Transaction committed:", explorerTransaction(txHash));
        })();
      }}
      className={`align-center ${isNew ? "text-yellow-400" : "text-orange-400"}`}
    >
      <div className="text-md flex flex-col">
        <span>
          {ccc.fixedPointToString(
            (dao.cellOutput.capacity / ccc.fixedPointFrom("0.01")) *
              ccc.fixedPointFrom("0.01"),
          )}
        </span>
        {infos ? (
          <span className="-mt-1 text-sm">
            +
            {ccc.fixedPointToString(
              (infos[0] / ccc.fixedPointFrom("0.0001")) *
                ccc.fixedPointFrom("0.0001"),
            )}
          </span>
        ) : undefined}
      </div>
      <div className="flex flex-col text-sm">
        {infos && tip ? (
          <div className="flex whitespace-nowrap">
            {ccc.fixedPointToString(
              ((parseEpoch(getClaimEpoch(infos[2], infos[3][1])) -
                parseEpoch(tip.epoch)) /
                ccc.fixedPointFrom("0.001")) *
                ccc.fixedPointFrom("0.001"),
            )}{" "}
            epoch
          </div>
        ) : undefined}
        <span>{isNew ? "Redeem" : "Withdraw"}</span>
      </div>
    </BigButton>
  );
}

export default function Transfer() {
  const { signer, createSender } = useApp();
  const { log, error } = createSender("Transfer");

  const { explorerTransaction } = useGetExplorerLink();

  const [amount, setAmount] = useState<string>("");
  const [feeRate, setFeeRate] = useState<undefined | ccc.Num>();
  const [daos, setDaos] = useState<ccc.Cell[]>([]);

  useEffect(() => {
    if (!signer) {
      return;
    }

    (async () => {
      const daos = [];
      for await (const cell of signer.findCells(
        {
          script: await ccc.Script.fromKnownScript(
            signer.client,
            ccc.KnownScript.NervosDao,
            "0x",
          ),
          scriptLenRange: [33, 34],
          outputDataLenRange: [8, 9],
        },
        true,
      )) {
        daos.push(cell);
        setDaos(daos);
      }
    })();
  }, [signer]);

  return (
    <div className="flex w-full flex-col items-stretch">
      <TextInput
        label="Amount"
        placeholder="Amount to deposit"
        state={[amount, setAmount]}
      />
      <div className="mt-4 flex flex-wrap justify-center gap-2">
        {daos.map((dao) => (
          <DaoButton key={ccc.hexFrom(dao.outPoint.toBytes())} dao={dao} />
        ))}
      </div>
      <ButtonsPanel>
        <Button
          onClick={async () => {
            if (!signer) {
              return;
            }

            const { script: lock } = await signer.getRecommendedAddressObj();

            const tx = ccc.Transaction.from({
              outputs: [
                {
                  lock,
                  type: await ccc.Script.fromKnownScript(
                    signer.client,
                    ccc.KnownScript.NervosDao,
                    "0x",
                  ),
                },
              ],
              outputsData: ["00".repeat(8)],
            });
            await tx.addCellDepsOfKnownScripts(
              signer.client,
              ccc.KnownScript.NervosDao,
            );

            await tx.completeInputsAll(signer);
            const feeRate = await signer.client.getFeeRate();
            setFeeRate(feeRate);
            await tx.completeFeeChangeToOutput(signer, 0, feeRate);

            const amount = ccc.fixedPointToString(tx.outputs[0].capacity);
            log("You can deposit at most", amount, "CKB");
            setAmount(amount);
          }}
        >
          Max Amount
        </Button>
        <Button
          className="ml-2"
          onClick={async () => {
            if (!signer) {
              return;
            }

            const { script: lock } = await signer.getRecommendedAddressObj();

            const tx = ccc.Transaction.from({
              outputs: [
                {
                  lock,
                  type: await ccc.Script.fromKnownScript(
                    signer.client,
                    ccc.KnownScript.NervosDao,
                    "0x",
                  ),
                },
              ],
              outputsData: ["00".repeat(8)],
            });
            await tx.addCellDepsOfKnownScripts(
              signer.client,
              ccc.KnownScript.NervosDao,
            );

            if (tx.outputs[0].capacity > ccc.fixedPointFrom(amount)) {
              error(
                "Insufficient capacity at output, min",
                ccc.fixedPointToString(tx.outputs[0].capacity),
                "CKB",
              );
              return;
            }
            tx.outputs[0].capacity = ccc.fixedPointFrom(amount);

            await tx.completeInputsByCapacity(signer);
            await tx.completeFeeBy(signer, feeRate);

            // Sign and send the transaction
            const txHash = await signer.sendTransaction(tx);
            log("Transaction sent:", explorerTransaction(txHash));
            await signer.client.waitTransaction(txHash);
            log("Transaction committed:", explorerTransaction(txHash));
          }}
        >
          Deposit
        </Button>
      </ButtonsPanel>
    </div>
  );
}


================================================
File: packages/demo/src/app/connected/(tools)/SSRI/page.tsx
================================================
"use client";

import React, { useState, useEffect, useCallback } from "react";
import { Button } from "@/src/components/Button";
import { TextInput } from "@/src/components/Input";
import { useApp } from "@/src/context";
import { ButtonsPanel } from "@/src/components/ButtonsPanel";
import { Dropdown } from "@/src/components/Dropdown";
import {
  ScriptAmountArrayInput,
  ScriptAmountInput,
  ScriptAmountType,
} from "@/src/app/connected/(tools)/SSRI/components/ScriptAmountInput";
import { ssri } from "@ckb-ccc/ssri";
import { ccc } from "@ckb-ccc/connector-react";
import JsonView from "@uiw/react-json-view";
import { darkTheme } from "@uiw/react-json-view/dark";
import Image from "next/image";
import {
  HexArrayInput,
  HexInput,
} from "@/src/app/connected/(tools)/SSRI/components/HexArrayInput";
import { Icon } from "@/src/components/Icon";
import { MethodParamType, PARAM_TYPE_OPTIONS } from "./types";
import { ParamValue } from "./types";
import { MethodParam } from "./types";
import { ParameterInput } from "./components/ParameterInput";
import { TransactionSkeletonPanel } from "./components/TransactionSkeletonPanel";

const METHODS_OPTIONS = [
  "SSRI.version",
  "SSRI.get_methods",
  "SSRI.has_methods",
  "Customized",
];

export default function SSRI() {
  const { signer, createSender } = useApp();
  const { log, error } = createSender("SSRI");

  const [SSRIExecutorURL, setSSRIExecutorURL] = useState<string>(
    "http://localhost:9090",
  );
  const [contractOutPointTx, setContractOutPointTx] = useState<string>("");
  const [contractOutPointIndex, setContractOutPointIndex] =
    useState<string>("0");
  const [methodParams, setMethodParams] = useState<MethodParam[]>([]);
  const [paramValues, setParamValues] = useState<Record<string, ParamValue>>(
    {},
  );
  const [methodResult, setMethodResult] = useState<any>(undefined);
  const [SSRICallDetails, setSSRICallDetails] = useState<any>(null);
  const [iconDataURL, setIconDataURL] = useState<string>("");
  const [ssriContractTypeIDArgs, setSsriContractTypeIDArgs] = useState<string>(
    "0x8fd55df879dc6176c95f3c420631f990ada2d4ece978c9512c39616dead2ed56",
  );
  const [showSSRICallDetails, setShowSSRICallDetails] =
    useState<boolean>(false);
  const [isLoading, setIsLoading] = useState(false);
  const [methodToCall, setMethodToCall] = useState<string>("SSRI.version");
  const [rawMethodPath, setRawMethodPath] = useState<string>("SSRI.version");
  const [selectedParamType, setSelectedParamType] =
    useState<MethodParamType>("contextScript");
  const [methodPathInput, setMethodPathInput] = useState<string>("");
  const [transactionResult, setTransactionResult] = useState<
    ccc.Transaction | undefined
  >(undefined);

  const addMethodParam = () => {
    const contextTypes = ["contextScript", "contextCell", "contextTransaction"];
    const hasContextParam = methodParams.some(
      (param) => param.type && contextTypes.includes(param.type),
    );

    if (contextTypes.includes(selectedParamType) && hasContextParam) {
      error(
        "Invalid Parameter: You can only have one context parameter (Script, Cell, or Transaction)",
      );
      return;
    }

    setMethodParams([
      ...methodParams,
      {
        name: `Parameter${methodParams.length}`,
        type: selectedParamType,
      },
    ]);
    setParamValues((prev) => ({
      ...prev,
      [`Parameter${methodParams.length}`]: undefined,
    }));
  };

  const deleteMethodParam = (index: number) => {
    setMethodParams(methodParams.filter((_, i) => i !== index));
    setParamValues((prev) => {
      const newValues = { ...prev };
      delete newValues[`Parameter${index}`];
      return newValues;
    });
  };

  const getOutPointFromTypeIDArgs = useCallback(async () => {
    if (!signer) return;
    const scriptCell = await signer.client.findSingletonCellByType({
      codeHash:
        "0x00000000000000000000000000000000000000000000000000545950455f4944",
      hashType: "type",
      args: ssriContractTypeIDArgs,
    });
    if (!scriptCell) {
      throw new Error(
        "Could not identify OutPoint from the provided TypeID Args",
      );
    }
    const targetOutPoint = scriptCell.outPoint;
    setContractOutPointTx(targetOutPoint.txHash);
    setContractOutPointIndex(targetOutPoint.index.toString());
  }, [signer, ssriContractTypeIDArgs]);

  useEffect(() => {
    if (contractOutPointTx == "" && contractOutPointIndex == "0") {
      getOutPointFromTypeIDArgs();
    }
  }, [
    ssriContractTypeIDArgs,
    signer,
    getOutPointFromTypeIDArgs,
    contractOutPointTx,
    contractOutPointIndex,
  ]);

  const makeSSRICall = async () => {
    if (!signer) return;

    setIsLoading(true);
    setMethodResult(undefined);
    setIconDataURL("");

    const testSSRIExecutor = new ssri.ExecutorJsonRpc(SSRIExecutorURL);

    let contract: ssri.Trait | undefined;
    try {
      const targetOutPoint = {
        txHash: contractOutPointTx,
        index: parseInt(contractOutPointIndex),
      };
      const scriptCell = await signer.client.getCell(targetOutPoint);

      if (!scriptCell) {
        throw new Error("Script cell not found");
      }

      if (!scriptCell.cellOutput.type?.hash()) {
        throw new Error("Script cell type hash not found");
      }
      contract = new ssri.Trait(scriptCell.outPoint, testSSRIExecutor);

      if (!contract) {
        throw new Error("Contract not initialized");
      }

      let context:
        | ssri.ContextScript
        | ssri.ContextCell
        | ssri.ContextTransaction
        | undefined;

      const args = methodParams.map((paramType, index) => {
        let value = paramValues[`Parameter${index}`];
        return value;
      });

      methodParams.forEach((paramType, index) => {
        const value = paramValues[`Parameter${index}`];
        if (paramType.type === "contextScript") {
          context = { script: value as ccc.ScriptLike } as ssri.ContextScript;
        } else if (paramType.type === "contextCell") {
          context = { cell: value as ccc.CellLike } as ssri.ContextCell;
        } else if (paramType.type === "contextTransaction") {
          context = {
            tx: value as ccc.TransactionLike,
          } as ssri.ContextTransaction;
        }
      });

      setSSRICallDetails({
        trait: rawMethodPath.split(".")[0],
        method: rawMethodPath.split(".")[1],
        args: args,
        contractOutPoint: {
          txHash: contractOutPointTx,
          index: parseInt(contractOutPointIndex),
        },
        ssriContext: context,
      });

      log(
        "Calling",
        rawMethodPath,
        "on contract at",
        String(contractOutPointTx),
        "index",
        String(contractOutPointIndex),
      );
      let result;
      result = await callSSRI(result, args, context);
      if (result) {
        try {
          const transaction = ccc.Transaction.fromBytes(
            result.res as ccc.HexLike,
          );
          setTransactionResult(transaction);
        } catch (e) {}
        setMethodResult(result);
        try {
          const dataURL = ccc.bytesTo(result.res as string, "utf8");
          if (dataURL.startsWith("http") || dataURL.startsWith("data:image")) {
            setIconDataURL(dataURL);
          }
        } catch (e) {}
      }
    } catch (e) {
      let errorMessage =
        e instanceof Error
          ? e.message
          : typeof e === "object"
            ? "Check your SSRI server"
            : String(e) || "Unknown error";
      if (String(errorMessage).length < 3) {
        errorMessage =
          "Check your SSRI server or URL. Run `docker run -p 9090:9090 hanssen0/ckb-ssri-server` to start a local SSRI server.";
      }
      setMethodResult(`Error: ${errorMessage}`);
      error(`Error: ${errorMessage}`);
    } finally {
      setIsLoading(false);
    }

    async function callSSRI(
      result: any,
      args: ParamValue[],
      context:
        | ssri.ContextScript
        | ssri.ContextCell
        | ssri.ContextTransaction
        | undefined,
    ) {
      if (!contract) return;

      let argsHex = methodParams
        .map((param, index) => {
          const arg = args[index];

          switch (param.type) {
            case "contextScript":
            case "contextCell":
            case "contextTransaction":
              return undefined;
            case "hex":
              if (!arg) return "0x";
              return arg as ccc.HexLike;
            case "hexArray":
              if (!arg) return "0x";
              return ccc.mol.BytesVec.encode(arg as ccc.HexLike[]);
            case "string":
              return ccc.bytesFrom(
                (arg as string).trimStart().trimEnd(),
                "utf8",
              );
            case "stringArray":
              return ccc.mol.BytesVec.encode(
                (arg as string[]).map((str) =>
                  ccc.bytesFrom(str.trimStart().trimEnd(), "utf8"),
                ),
              );
            case "uint64":
              return ccc.numLeToBytes(arg as number, 8);
            case "uint64Array":
              return ccc.mol.Uint64Vec.encode(arg as number[]);
            case "uint128":
              return ccc.numLeToBytes(arg as number, 16);
            case "uint128Array":
              return ccc.mol.Uint128Vec.encode(arg as number[]);
            case "script":
              if (!arg) return "0x";
              return ccc.Script.encode(arg as ccc.ScriptLike);
            case "scriptArray":
              if (!arg) return "0x";
              return ccc.ScriptVec.encode(
                (arg as ScriptAmountType[]).map(
                  (scriptAmount) => scriptAmount.script,
                ),
              );
            case "tx":
              if (!arg) return "0x";
              return ccc.Transaction.encode(arg as ccc.TransactionLike);
            case "byte32":
              if (!arg) return "0x";
              return ccc.mol.Byte32.encode(arg as ccc.HexLike);
            case "byte32Array":
              if (!arg) return "0x";
              return ccc.mol.Byte32Vec.encode(arg as ccc.HexLike[]);
            default:
              throw new Error(`Unsupported parameter type: ${param.type}`);
          }
        })
        .filter((arg) => arg !== undefined);

      result = await contract
        .assertExecutor()
        .runScript(contract.code, rawMethodPath, argsHex, context);

      return result;
    }
  };

  return (
    <div className="flex w-full flex-col items-stretch gap-4">
      <div className="mb-6 rounded-lg border border-gray-200 bg-white p-6 shadow-sm dark:border-gray-700 dark:bg-gray-900">
        <h2 className="mb-4 text-2xl font-bold text-gray-800 dark:text-white">
          How to Use:
        </h2>
        <div className="space-y-3">
          <div className="flex items-start gap-3">
            <span className="flex h-6 w-6 shrink-0 items-center justify-center rounded-full bg-blue-500 text-sm font-semibold text-white">
              1
            </span>
            <div className="flex-1 text-gray-800 dark:text-gray-100">
              <code className="rounded bg-blue-50 px-2 py-1 font-mono text-sm text-blue-900 dark:bg-blue-900 dark:text-blue-100">
                docker run -p 9090:9090 hanssen0/ckb-ssri-server
              </code>
              <span className="ml-2">to start a local SSRI server.</span>
            </div>
          </div>

          <div className="flex items-start gap-3">
            <span className="flex h-6 w-6 shrink-0 items-center justify-center rounded-full bg-blue-500 text-sm font-semibold text-white">
              2
            </span>
            <div className="flex-1 text-gray-800 dark:text-gray-100">
              The default parameters are prepared to just work. Just click{" "}
              <span className="font-semibold text-blue-600 dark:text-blue-400">
                Execute Method
              </span>{" "}
              button at the bottom to call the{" "}
              <code className="rounded bg-blue-50 px-2 py-1 font-mono text-sm text-blue-900 dark:bg-blue-900 dark:text-blue-100">
                SSRI.version
              </code>{" "}
              method.
            </div>
          </div>

          <div className="flex items-start gap-3">
            <span className="flex h-6 w-6 shrink-0 items-center justify-center rounded-full bg-blue-500 text-sm font-semibold text-white">
              3
            </span>
            <div className="flex-1 text-gray-800 dark:text-gray-100">
              All Done! You called an SSRI method! Try playing with other
              methods while reading{" "}
              <a
                href="https://talk.nervos.org/t/en-cn-script-sourced-rich-information-script/8256"
                target="_blank"
                rel="noopener noreferrer"
                className="font-medium text-blue-600 underline hover:text-blue-500 dark:text-blue-400 dark:hover:text-blue-300"
              >
                [EN/CN] Script-Sourced Rich Information - 来源于 Script 的富信息
              </a>{" "}
              to know how to adjust parameters to your need.
            </div>
          </div>
        </div>
      </div>
      <>
        <TextInput
          label="SSRI Executor URL"
          placeholder="URL of the SSRI executor"
          state={[SSRIExecutorURL, setSSRIExecutorURL]}
        />
        <div className="flex flex-row items-center gap-2">
          <TextInput
            label="Script Cell Type ID Args (Optional)"
            placeholder="Type ID Args of the script cell"
            state={[ssriContractTypeIDArgs, setSsriContractTypeIDArgs]}
            className="flex-1"
          />
          <Button
            onClick={() => getOutPointFromTypeIDArgs()}
            className="shrink-0"
          >
            Search
          </Button>
        </div>
        <TextInput
          label="Script Cell OutPoint"
          placeholder="Tx hash:index (e.g. 0x123...abc:0)"
          state={[
            `${contractOutPointTx}:${contractOutPointIndex}`,
            (value: string) => {
              const [tx, index] = value.split(":");
              setContractOutPointTx(tx || "");
              setContractOutPointIndex(index || "0");
            },
          ]}
        />
        <div className="flex flex-row items-center gap-4">
          <label className="min-w-32 shrink-0">Method to Call:</label>
          <Dropdown
            options={METHODS_OPTIONS.map((method) => ({
              name: method,
              displayName: method,
              iconName: "Code",
            }))}
            selected={methodToCall}
            onSelect={(value) => {
              if (value !== "Customized") {
                setMethodToCall(value);
                setRawMethodPath(value);
                if (value === "SSRI.get_methods") {
                  setMethodParams([
                    { name: "offset", type: "uint64" },
                    { name: "limit", type: "uint64" },
                  ]);
                  setParamValues({
                    Parameter0: 0,
                    Parameter1: 0,
                  });
                } else if (value === "SSRI.has_methods") {
                  setMethodParams([{ name: "methodPaths", type: "hexArray" }]);
                  setParamValues({
                    Parameter0: [],
                  });
                } else {
                  setMethodParams([]);
                  setParamValues({});
                }
              } else {
                setMethodToCall(value);
                setRawMethodPath("");
              }
            }}
            className="flex-1"
          />
          <>
            <TextInput
              label="Method Path"
              placeholder="Enter trait.method (e.g. UDT.name)"
              state={[
                rawMethodPath,
                (value: string) => {
                  setMethodToCall("Customized");
                  setRawMethodPath(value);
                  setParamValues({});
                  setMethodParams([]);
                },
              ]}
              className="flex-1"
            />
          </>
        </div>
      </>

      {methodToCall === "Customized" && (
        <div className="flex w-full flex-row items-center gap-2">
          <label className="min-w-32 shrink-0">Add Parameter:</label>
          <Dropdown
            options={PARAM_TYPE_OPTIONS}
            selected={selectedParamType}
            onSelect={(value) => setSelectedParamType(value as MethodParamType)}
            className="flex-grow"
          />
          <Button onClick={addMethodParam} className="shrink-0">
            <Icon name="Plus" />
          </Button>
        </div>
      )}

      {methodParams.map((param, index) => (
        <ParameterInput
          key={index}
          param={param}
          index={index}
          paramValues={paramValues}
          setParamValues={setParamValues}
          methodToCall={methodToCall}
          rawMethodPath={rawMethodPath}
          methodPathInput={methodPathInput}
          setMethodPathInput={setMethodPathInput}
          onDelete={() => deleteMethodParam(index)}
        />
      ))}

      <>
        <div className="flex items-center gap-2">
          <input
            type="checkbox"
            id="showSSRICallDetails"
            checked={showSSRICallDetails}
            onChange={(e) => setShowSSRICallDetails(e.target.checked)}
            className="rounded border-gray-300"
          />
          <label
            htmlFor="showSSRICallDetails"
            className="text-sm font-medium text-gray-700"
          >
            (Advanced) Show SSRI Call Details
          </label>
        </div>

        {showSSRICallDetails && (
          <div className="mt-4">
            <label className="block text-sm font-medium text-gray-700">
              SSRI Call Details
            </label>
            {SSRICallDetails && (
              <div className="mt-1 block w-full rounded-md border-gray-300 shadow-sm">
                <JsonView value={SSRICallDetails} style={darkTheme} />
              </div>
            )}
          </div>
        )}
      </>

      <div className="mt-4">
        <label className="block text-sm font-medium text-gray-700">
          Method Result
        </label>
        {isLoading ? (
          <div className="flex items-center justify-center py-4">
            <div className="h-6 w-6 animate-spin rounded-full border-2 border-gray-900 border-t-transparent"></div>
          </div>
        ) : (
          methodResult && (
            <div className="mt-1 block w-full rounded-md border-gray-300 shadow-sm">
              <JsonView value={{ result: methodResult }} style={darkTheme} />
            </div>
          )
        )}
      </div>
      {transactionResult && (
        <TransactionSkeletonPanel
          transactionResult={transactionResult}
          setTransactionResult={setTransactionResult}
          signer={signer}
          methodParams={methodParams}
          paramValues={paramValues}
          contractOutPointTx={contractOutPointTx}
          contractOutPointIndex={contractOutPointIndex}
          log={log}
        />
      )}
      {!isLoading && iconDataURL && (
        <div className="mt-4">
          <label className="block text-sm font-medium text-gray-700">
            Icon Result
          </label>
          <Image
            className="h-auto max-w-full rounded border"
            src={iconDataURL}
            alt={""}
            width={"100"}
            height={"100"}
          />
        </div>
      )}
      <ButtonsPanel>
        <Button onClick={makeSSRICall}>Execute Method</Button>
      </ButtonsPanel>
    </div>
  );
}


================================================
File: packages/demo/src/app/connected/(tools)/SSRI/types.ts
================================================
import { ScriptAmountType } from "@/src/app/connected/(tools)/SSRI/components/ScriptAmountInput";
import { ccc } from "@ckb-ccc/connector-react";
export type ParamValue =
  | ccc.ScriptLike
  | ccc.CellLike
  | ccc.TransactionLike
  | ccc.HexLike
  | ccc.HexLike[]
  | string
  | string[]
  | number
  | number[]
  | boolean
  | boolean[]
  | ScriptAmountType
  | ScriptAmountType[]
  | undefined;

export type MethodParamType =
  | "contextScript"
  | "contextCell"
  | "contextTransaction"
  | "hex"
  | "hexArray"
  | "string"
  | "stringArray"
  | "uint64"
  | "uint64Array"
  | "uint128"
  | "uint128Array"
  | "boolean"
  | "booleanArray"
  | "script"
  | "scriptArray"
  | "byte32"
  | "byte32Array"
  | "scriptAmountArray"
  | "tx"
  | "signer";

export interface MethodParam {
  name: string;
  type?: MethodParamType;
}

export const PARAM_TYPE_OPTIONS: {
  name: string;
  displayName: string;
  iconName: "Code" | "Hash";
}[] = [
  { name: "contextScript", displayName: "Context Script", iconName: "Code" },
  { name: "contextCell", displayName: "Context Cell", iconName: "Code" },
  {
    name: "contextTransaction",
    displayName: "Context Transaction",
    iconName: "Code",
  },
  { name: "hex", displayName: "Generic Data (HexLike)", iconName: "Code" },
  {
    name: "hexArray",
    displayName: "Generic Data Array (HexLike)",
    iconName: "Code",
  },
  { name: "string", displayName: "String", iconName: "Code" },
  { name: "stringArray", displayName: "String Array", iconName: "Code" },
  { name: "uint64", displayName: "Number (Uint64)", iconName: "Code" },
  {
    name: "uint64Array",
    displayName: "Number Array (Uint64)",
    iconName: "Code",
  },
  {
    name: "uint128",
    displayName: "Number (Uint128)",
    iconName: "Code",
  },
  {
    name: "uint128Array",
    displayName: "Number Array (Uint128)",
    iconName: "Code",
  },
  {
    name: "script",
    displayName: "Script",
    iconName: "Code",
  },
  { name: "scriptArray", displayName: "Script Array", iconName: "Code" },
  { name: "byte32", displayName: "Byte32", iconName: "Code" },
  { name: "byte32Array", displayName: "Byte32 Array", iconName: "Code" },
  { name: "tx", displayName: "Transaction", iconName: "Code" },
];


================================================
File: packages/demo/src/app/connected/(tools)/SSRI/components/HexArrayInput.tsx
================================================
"use client";

import { TextInput } from "@/src/components/Input";
import { Button } from "@/src/components/Button";

interface HexInputProps {
  value: string;
  onChange: (value: string) => void;
  onRemove?: () => void;
  label?: string;
  placeholder?: string;
}

interface HexArrayInputProps {
  value: string[];
  onChange: (value: string[]) => void;
  label?: string;
}

export const HexInput: React.FC<HexInputProps> = ({
  value,
  label = "Hex Value",
  placeholder = "Enter hex value (with 0x prefix)",
  onChange,
  onRemove,
}) => {
  return (
    <div className="flex w-full flex-col gap-2 rounded border p-2">
      <TextInput
        label={label}
        placeholder={placeholder}
        state={[
          value,
          (newValue) => {
            // Ensure hex format
            const hexValue = newValue.startsWith("0x")
              ? newValue
              : `0x${newValue}`;
            onChange(hexValue);
          },
        ]}
        className="w-full"
      />
      {onRemove && (
        <Button
          onClick={onRemove}
          className="self-start rounded bg-red-500 px-2 py-1 text-white"
        >
          Remove
        </Button>
      )}
    </div>
  );
};

export const HexArrayInput: React.FC<HexArrayInputProps> = ({
  value = [],
  onChange,
  label = "Hex Values",
}) => {
  const addHexValue = () => {
    onChange([...value, "0x"]);
  };

  const removeHexValue = (index: number) => {
    const newValues = [...value];
    newValues.splice(index, 1);
    onChange(newValues);
  };

  const updateHexValue = (index: number, hexValue: string) => {
    const newValues = [...value];
    newValues[index] = hexValue;
    onChange(newValues);
  };

  return (
    <div className="flex flex-col gap-2">
      <label className="font-semibold">{label}</label>
      {value.map((hexValue, index) => (
        <HexInput
          key={index}
          value={hexValue}
          label={`Hex Value ${index + 1}`}
          placeholder={`Enter hex value (with 0x prefix)`}
          onChange={(updatedValue) => updateHexValue(index, updatedValue)}
          onRemove={() => removeHexValue(index)}
        />
      ))}
      <Button
        onClick={addHexValue}
        className="self-start rounded bg-green-500 px-2 py-1 text-white"
      >
        Add Hex Value
      </Button>
    </div>
  );
};


================================================
File: packages/demo/src/app/connected/(tools)/SSRI/components/ParameterInput.tsx
================================================
import React from "react";
import { TextInput } from "@/src/components/Input";
import { Button } from "@/src/components/Button";
import {
  ScriptAmountArrayInput,
  ScriptAmountInput,
} from "@/src/app/connected/(tools)/SSRI/components/ScriptAmountInput";
import {
  HexArrayInput,
  HexInput,
} from "@/src/app/connected/(tools)/SSRI/components/HexArrayInput";
import { Icon } from "@/src/components/Icon";
import { MethodParam, ParamValue } from "../types";
import { PARAM_TYPE_OPTIONS } from "../types";
import { ccc } from "@ckb-ccc/connector-react";
import { ssri } from "@ckb-ccc/ssri";
import { ScriptAmountType } from "@/src/app/connected/(tools)/SSRI/components/ScriptAmountInput";

interface ParameterInputProps {
  param: MethodParam;
  index: number;
  paramValues: Record<string, ParamValue>;
  setParamValues: (values: Record<string, ParamValue>) => void;
  methodToCall?: string;
  rawMethodPath?: string;
  methodPathInput?: string;
  setMethodPathInput?: (value: string) => void;
  onDelete?: () => void;
}

export function ParameterInput({
  param,
  index,
  paramValues,
  setParamValues,
  methodToCall,
  rawMethodPath,
  methodPathInput,
  setMethodPathInput,
  onDelete,
}: ParameterInputProps) {
  const updateParamValue = (value: any) => {
    setParamValues({
      ...paramValues,
      [`Parameter${index}`]: value,
    });
  };

  const renderInputByType = () => {
    switch (param.type) {
      case "hex":
        return renderHexInput();
      case "scriptArray":
        return renderScriptArrayInput();
      case "hexArray":
        return renderHexArrayInput();
      case "contextScript":
      case "script":
        return renderScriptInput();
      case "contextCell":
        return renderCellInput();
      case "contextTransaction":
        return renderTransactionInput();
      case "tx":
        return renderTxInput();
      case "stringArray":
        return renderStringArrayInput();
      case "uint64":
      case "uint128":
        return renderNumberInput();
      case "uint64Array":
      case "uint128Array":
        return renderNumberArrayInput();
      case "byte32":
        return renderByte32Input();
      case "byte32Array":
        return renderByte32ArrayInput();
      case "scriptAmountArray":
        return renderScriptAmountArrayInput();
      case "signer":
        return renderSignerInput();
      default:
        return renderDefaultInput();
    }
  };

  const renderSignerInput = () => (
    <div>
      <div className="flex items-center gap-2">
        <label className="font-bold">Parameter {index}: (Signer)</label>
        <label className="text-sm font-bold">
          Using the signer of the current wallet
        </label>
      </div>
    </div>
  );

  const renderHexInput = () => (
    <div className="flex flex-col gap-2">
      <div className="flex items-center gap-2">
        <label className="font-bold">Parameter {index}: (Generic Data)</label>
      </div>
      <TextInput
        label="Hex Data"
        placeholder="Enter hex value (0x-prefixed)"
        state={[
          (paramValues[`Parameter${index}`] || "") as string,
          (value: string) => {
            if (!value.startsWith("0x")) value = "0x" + value;
            updateParamValue(value);
          },
        ]}
      />
    </div>
  );

  const renderScriptArrayInput = () => (
    <ScriptAmountArrayInput
      label={`Parameter ${index} (${param.type})`}
      value={(paramValues[`Parameter${index}`] as ScriptAmountType[]) ?? []}
      onChange={(scriptAmounts) => updateParamValue(scriptAmounts)}
      showAmount={false}
    />
  );

  const renderScriptAmountArrayInput = () => (
    <ScriptAmountArrayInput
      label={`Parameter ${index} (${param.type})`}
      value={(paramValues[`Parameter${index}`] as ScriptAmountType[]) ?? []}
      onChange={(scriptAmounts) => updateParamValue(scriptAmounts)}
      showAmount={true}
    />
  );

  const renderHexArrayInput = () => (
    <>
      <HexArrayInput
        label={`Parameter ${index} (${param.type})`}
        value={(paramValues[`Parameter${index}`] as string[]) ?? []}
        onChange={(hexValues) => updateParamValue(hexValues)}
      />
      {param.type === "hexArray" &&
        rawMethodPath === "SSRI.has_methods" &&
        setMethodPathInput && (
          <div className="mt-2 flex flex-row items-center gap-2">
            <TextInput
              label="Method Path Generator"
              placeholder="Enter method name to generate path"
              state={[methodPathInput || "", setMethodPathInput]}
              className="flex-grow"
            />
            <Button
              onClick={() => {
                const path = ssri.getMethodPath(methodPathInput || "");
                const currentValues =
                  (paramValues[`Parameter${index}`] as string[]) || [];
                updateParamValue([...currentValues, path]);
              }}
              className="shrink-0"
            >
              Generate & Add Path
            </Button>
          </div>
        )}
    </>
  );

  const renderScriptInput = () => (
    <div>
      <div className="flex items-center gap-2">
        <label className="font-bold">
          Parameter {index}: (
          {
            PARAM_TYPE_OPTIONS.find((option) => option.name === param.type)
              ?.displayName
          }
          )
        </label>
      </div>
      <ScriptAmountInput
        showAmount={false}
        value={{
          script: paramValues[`Parameter${index}`] as ccc.ScriptLike,
          amount: undefined,
        }}
        onChange={(updatedScriptAmount) =>
          updateParamValue({
            codeHash: updatedScriptAmount.script?.codeHash ?? "",
            hashType: updatedScriptAmount.script?.hashType ?? "type",
            args: updatedScriptAmount.script?.args ?? "",
          })
        }
      />
    </div>
  );

  const renderCellInput = () => (
    <details open>
      <summary className="cursor-pointer font-bold">
        Parameter {index}: (
        {
          PARAM_TYPE_OPTIONS.find((option) => option.name === param.type)
            ?.displayName
        }
        )
      </summary>
      <div className="flex flex-col gap-2 pl-4 pt-2">
        <TextInput
          label="Capacity"
          placeholder="Enter capacity"
          state={[
            (
              paramValues[`Parameter${index}`] as ccc.CellLike
            )?.cellOutput?.capacity?.toString() || "",
            (value) =>
              updateParamValue({
                outPoint: { txHash: "0x", index: 0 },
                cellOutput: {
                  capacity: value,
                  lock: (paramValues[`Parameter${index}`] as ccc.CellLike)
                    ?.cellOutput?.lock ?? {
                    codeHash: "",
                    hashType: "type",
                    args: "",
                  },
                  type: (paramValues[`Parameter${index}`] as ccc.CellLike)
                    ?.cellOutput?.type ?? {
                    codeHash: "",
                    hashType: "type",
                    args: "",
                  },
                },
                outputData:
                  (paramValues[`Parameter${index}`] as ccc.CellLike)
                    ?.outputData || "",
              } as ccc.CellLike),
          ]}
        />
        <TextInput
          label="Data"
          placeholder="Enter cell data in Hex"
          state={[
            (
              paramValues[`Parameter${index}`] as ccc.CellLike
            )?.outputData?.toString() || "",
            (value) =>
              updateParamValue({
                outPoint: { txHash: "0x", index: 0 },
                cellOutput: {
                  capacity:
                    (
                      paramValues[`Parameter${index}`] as ccc.CellLike
                    )?.cellOutput?.capacity?.toString() || "",
                  lock: (paramValues[`Parameter${index}`] as ccc.CellLike)
                    ?.cellOutput?.lock ?? {
                    codeHash: "",
                    hashType: "type",
                    args: "",
                  },
                  type: (paramValues[`Parameter${index}`] as ccc.CellLike)
                    ?.cellOutput?.type ?? {
                    codeHash: "",
                    hashType: "type",
                    args: "",
                  },
                },
                outputData: value,
              } as ccc.CellLike),
          ]}
        />
        <label className="min-w-24">Lock:</label>
        <ScriptAmountInput
          showAmount={false}
          value={{
            script: (paramValues[`Parameter${index}`] as ccc.CellLike)
              ?.cellOutput?.lock,
            amount: undefined,
          }}
          onChange={(updatedScriptAmount) =>
            updateParamValue({
              outPoint: { txHash: "0x", index: 0 },
              cellOutput: {
                capacity:
                  (
                    paramValues[`Parameter${index}`] as ccc.CellLike
                  )?.cellOutput?.capacity?.toString() || "",
                lock: {
                  codeHash: updatedScriptAmount.script?.codeHash ?? "",
                  hashType: updatedScriptAmount.script?.hashType ?? "type",
                  args: updatedScriptAmount.script?.args ?? "",
                },
                type: (paramValues[`Parameter${index}`] as ccc.CellLike)
                  ?.cellOutput?.type ?? {
                  codeHash: "",
                  hashType: "type",
                  args: "",
                },
              },
              outputData:
                (paramValues[`Parameter${index}`] as ccc.CellLike)
                  ?.outputData || "",
            } as ccc.CellLike)
          }
        />
        <div className="flex items-center gap-2">
          <label className="min-w-24">Type:</label>
          <label>
            <input
              type="checkbox"
              checked={
                !(paramValues[`Parameter${index}NotUsingNoneType`] ?? false)
              }
              onChange={(e) =>
                setParamValues({
                  ...paramValues,
                  [`Parameter${index}NotUsingNoneType`]: !e.target.checked,
                  ...(!e.target.checked && {
                    [`Parameter${index}`]: undefined,
                  }),
                })
              }
            />
            Use None
          </label>
        </div>

        {(paramValues[`Parameter${index}NotUsingNoneType`] ?? false) && (
          <ScriptAmountInput
            showAmount={false}
            value={{
              script: (paramValues[`Parameter${index}`] as ccc.CellLike)
                ?.cellOutput?.type ?? {
                codeHash: "",
                hashType: "type",
                args: "",
              },
              amount: undefined,
            }}
            onChange={(updatedScriptAmount) =>
              updateParamValue({
                outPoint: { txHash: "0x", index: 0 },
                cellOutput: {
                  capacity:
                    (
                      paramValues[`Parameter${index}`] as ccc.CellLike
                    )?.cellOutput?.capacity?.toString() || "",
                  type: {
                    codeHash: updatedScriptAmount.script?.codeHash ?? "",
                    hashType: updatedScriptAmount.script?.hashType ?? "type",
                    args: updatedScriptAmount.script?.args ?? "",
                  },
                  lock: (paramValues[`Parameter${index}`] as ccc.CellLike)
                    ?.cellOutput?.lock ?? {
                    codeHash: "",
                    hashType: "type",
                    args: "",
                  },
                },
                outputData:
                  (paramValues[`Parameter${index}`] as ccc.CellLike)
                    ?.outputData || "",
              } as ccc.CellLike)
            }
          />
        )}
      </div>
    </details>
  );

  const renderTransactionInput = () => (
    <details open>
      <summary className="cursor-pointer font-bold">
        Parameter {index}: (
        {
          PARAM_TYPE_OPTIONS.find((option) => option.name === param.type)
            ?.displayName
        }
        )
      </summary>
      <div className="flex flex-col gap-2 pl-4 pt-2">
        <TextInput
          label="Transaction Data (Hex)"
          placeholder="Enter transaction data in hex format"
          state={[
            (
              paramValues[`Parameter${index}`] as ccc.TransactionLike
            )?.toString() || "0x",
            (value) => {
              if (!value.startsWith("0x")) value = "0x" + value;
              updateParamValue(value);
            },
          ]}
        />
      </div>
    </details>
  );

  const renderTxInput = () => (
    <div>
      <div className="flex items-center gap-2">
        <label className="font-bold">
          Parameter {index}:{" "}
          {
            PARAM_TYPE_OPTIONS.find((option) => option.name === param.type)
              ?.displayName
          }
        </label>
        <label className="flex items-center gap-2 text-sm">
          <input
            type="checkbox"
            checked={
              !(paramValues[`Parameter${index}NotUsingDefault`] ?? false)
            }
            onChange={(e) =>
              setParamValues({
                ...paramValues,
                [`Parameter${index}NotUsingDefault`]: !e.target.checked,
                ...(!e.target.checked && { [`Parameter${index}`]: undefined }),
              })
            }
            className="rounded border-gray-300"
          />
          Leave Blank
        </label>
      </div>
      {paramValues[`Parameter${index}NotUsingDefault`] && (
        <div className="flex flex-col gap-2 pl-4 pt-2">
          <TextInput
            label="Transaction Data (Hex)"
            placeholder="Enter transaction data in hex format"
            state={[
              (
                paramValues[`Parameter${index}`] as ccc.TransactionLike
              )?.toString() || "0x",
              (value) => {
                if (!value.startsWith("0x")) value = "0x" + value;
                updateParamValue(value);
              },
            ]}
          />
        </div>
      )}
    </div>
  );

  const renderStringArrayInput = () => (
    <div className="flex flex-col gap-2">
      <div className="flex items-center gap-2">
        <label className="font-bold">Parameter {index}: (String Array)</label>
      </div>
      <TextInput
        label="String Array"
        placeholder="Enter comma-separated string values. Will trim start and end of each string."
        state={[
          (paramValues[`Parameter${index}`] || "") as string,
          (value: string) => updateParamValue(value.split(",")),
        ]}
      />
    </div>
  );

  const renderNumberInput = () => (
    <div>
      <div className="flex items-center gap-2">
        <label className="font-bold">
          Parameter {index}: (
          {
            PARAM_TYPE_OPTIONS.find((option) => option.name === param.type)
              ?.displayName
          }
          )
        </label>
      </div>
      <TextInput
        label="Number"
        placeholder="Enter number value"
        state={[
          (paramValues[`Parameter${index}`] || 0) as string,
          (value: string) => {
            const num = Number(value);
            if (!isNaN(num)) {
              updateParamValue(num);
            }
          },
        ]}
      />
    </div>
  );

  const renderNumberArrayInput = () => (
    <div>
      <div className="flex items-center gap-2">
        <label className="font-bold">
          Parameter {index}: (
          {
            PARAM_TYPE_OPTIONS.find((option) => option.name === param.type)
              ?.displayName
          }
          )
        </label>
      </div>
      <TextInput
        label="Number Array"
        placeholder="Enter comma-separated number values"
        state={[
          (paramValues[`Parameter${index}`] || "") as string,
          (value: string) =>
            updateParamValue(
              value
                .split(",")
                .map(Number)
                .filter((num) => !isNaN(num)),
            ),
        ]}
      />
    </div>
  );

  const renderByte32Input = () => (
    <div>
      <div className="flex items-center gap-2">
        <label className="font-bold">
          Parameter {index}:{" "}
          {
            PARAM_TYPE_OPTIONS.find((option) => option.name === param.type)
              ?.displayName
          }
        </label>
      </div>
      <HexInput
        value={(paramValues[`Parameter${index}`] as string) ?? "0x"}
        label="Byte32 Hex Value"
        placeholder="Enter byte32 value"
        onChange={(value) => updateParamValue(value)}
      />
    </div>
  );

  const renderByte32ArrayInput = () => (
    <div>
      <div className="flex items-center gap-2">
        <label className="font-bold">
          Parameter {index}: (
          {
            PARAM_TYPE_OPTIONS.find((option) => option.name === param.type)
              ?.displayName
          }
          )
        </label>
      </div>
      <HexArrayInput
        value={(paramValues[`Parameter${index}`] as string[]) ?? []}
        onChange={(hexValues) => updateParamValue(hexValues)}
        label="Byte32 Array Hex Values"
      />
    </div>
  );

  const renderDefaultInput = () => (
    <div>
      <div className="flex items-center gap-2">
        <label className="font-bold">
          Parameter {index}: (
          {
            PARAM_TYPE_OPTIONS.find((option) => option.name === param.type)
              ?.displayName
          }
          )
        </label>
      </div>
      <TextInput
        label={param.name}
        placeholder={`Enter ${param.name} value`}
        state={[
          (paramValues[`Parameter${index}`] || "") as string,
          (value: string) => updateParamValue(value),
        ]}
      />
    </div>
  );

  return (
    <div className="flex w-full flex-row items-center gap-2">
      <div className="flex-grow">{renderInputByType()}</div>
      {methodToCall === "Customized" && onDelete && (
        <Button onClick={onDelete}>
          <Icon name="Trash" />
        </Button>
      )}
    </div>
  );
}


================================================
File: packages/demo/src/app/connected/(tools)/SSRI/components/ScriptAmountInput.tsx
================================================
import React, { useState, useEffect } from "react";
import { Button } from "@/src/components/Button";
import { TextInput } from "@/src/components/Input";
import { useApp } from "@/src/context";
import { Dropdown } from "@/src/components/Dropdown";
import { ccc } from "@ckb-ccc/connector-react";
import { Icon } from "../../../../../components/Icon";

export type ScriptAmountType = {
  script: ccc.ScriptLike;
  amount?: string;
};

export interface ScriptAmountArrayInputProps {
  value: ScriptAmountType[];
  onChange: (value: ScriptAmountType[]) => void;
  label?: string;
  showAmount?: boolean;
}

export interface ScriptAmountInputProps {
  value: ScriptAmountType;
  onChange: (value: ScriptAmountType) => void;
  onRemove?: () => void;
  showAmount?: boolean;
}

export const ScriptAmountInput: React.FC<ScriptAmountInputProps> = ({
  value,
  onChange,
  onRemove,
  showAmount = true,
}) => {
  const [inputType, setInputType] = useState<"script" | "address">("address");
  const [address, setAddress] = useState("");
  const { signer } = useApp();

  // Handle address to script conversion
  const handleAddressChange = async (newAddress: string) => {
    setAddress(newAddress);
    if (signer && newAddress) {
      try {
        const script = (await ccc.Address.fromString(newAddress, signer.client))
          .script;
        onChange({
          ...value,
          script: {
            codeHash: script.codeHash,
            hashType: script.hashType,
            args: script.args,
          },
        });
      } catch (error) {
        console.error("Failed to parse address:", error);
      }
    }
  };

  return (
    <div className="flex w-full flex-col gap-2 rounded border p-2">
      <div className="flex flex-row items-center gap-2">
        <label className="min-w-24">Input Type:</label>
        <Dropdown
          options={[
            { name: "script", displayName: "Script", iconName: "Code" },
            { name: "address", displayName: "Address", iconName: "Mail" },
          ]}
          selected={inputType}
          onSelect={(type) => setInputType(type as "script" | "address")}
          className="flex-grow"
        />
      </div>

      {inputType === "address" ? (
        <TextInput
          label="Address"
          placeholder="Enter CKB address"
          state={[address, handleAddressChange]}
          className="w-full"
        />
      ) : (
        <>
          <TextInput
            label="Code Hash"
            placeholder="Enter code hash"
            state={[
              value.script?.codeHash?.toString() ?? "",
              (codeHash) =>
                onChange({ ...value, script: { ...value.script, codeHash } }),
            ]}
            className="w-full"
          />
          <div className="flex flex-row items-center gap-2">
            <label className="min-w-24">Hash Type:</label>
            <Dropdown
              options={[
                { name: "type", displayName: "Type", iconName: "Pill" },
                { name: "data", displayName: "Data", iconName: "Pill" },
                { name: "data1", displayName: "Data1", iconName: "Pill" },
                { name: "data2", displayName: "Data2", iconName: "Pill" },
              ]}
              selected={value.script?.hashType?.toString() ?? "type"}
              onSelect={(hashType) =>
                onChange({ ...value, script: { ...value.script, hashType } })
              }
              className="flex-grow"
            />
          </div>
          <TextInput
            label="Args"
            placeholder="Enter args"
            state={[
              value.script?.args?.toString() ?? "",
              (args) =>
                onChange({ ...value, script: { ...value.script, args } }),
            ]}
            className="w-full"
          />
        </>
      )}

      {showAmount && (
        <TextInput
          label="Amount"
          placeholder="Enter amount"
          state={[
            value.amount || "",
            (amount) => onChange({ ...value, amount }),
          ]}
          className="w-full"
        />
      )}
      {onRemove && (
        <Button
          onClick={onRemove}
          className="self-start rounded bg-red-500 px-2 py-1 text-white"
        >
          <Icon name="Minus" />
        </Button>
      )}
    </div>
  );
};

export const ScriptAmountArrayInput: React.FC<ScriptAmountArrayInputProps> = ({
  value = [],
  onChange,
  label = "Scripts with Amounts",
  showAmount = true,
}) => {
  const addScriptAmount = () => {
    const newScript = {
      script: { codeHash: "", hashType: "type", args: "" },
      ...(showAmount && { amount: "0" }),
    };
    onChange([...value, newScript]);
  };

  const removeScriptAmount = (index: number) => {
    const newScriptAmounts = [...value];
    newScriptAmounts.splice(index, 1);
    onChange(newScriptAmounts);
  };

  const updateScriptAmount = (
    index: number,
    scriptAmount: ScriptAmountType,
  ) => {
    const newScriptAmounts = [...value];
    newScriptAmounts[index] = scriptAmount;
    onChange(newScriptAmounts);
  };

  return (
    <div className="flex flex-col gap-2">
      <label className="font-semibold">{label}</label>
      {value.map((scriptAmount, index) => (
        <ScriptAmountInput
          key={index}
          value={scriptAmount}
          onChange={(updatedScriptAmount) =>
            updateScriptAmount(index, updatedScriptAmount)
          }
          onRemove={() => removeScriptAmount(index)}
          showAmount={showAmount}
        />
      ))}
      <Button
        onClick={addScriptAmount}
        className="self-start rounded bg-green-500 px-2 py-1 text-white"
      >
        Add Script{showAmount ? " with Amount" : ""}
      </Button>
    </div>
  );
};


================================================
File: packages/demo/src/app/connected/(tools)/SSRI/components/TransactionSkeletonPanel.tsx
================================================
import React from "react";
import { Button } from "@/src/components/Button";
import { ccc } from "@ckb-ccc/connector-react";
import JsonView from "@uiw/react-json-view";
import { darkTheme } from "@uiw/react-json-view/dark";
import { MethodParam } from "../types";
import { ParamValue } from "../types";

interface TransactionSkeletonPanelProps {
  transactionResult: ccc.Transaction;
  setTransactionResult: (tx: ccc.Transaction) => void;
  signer: any;
  methodParams: MethodParam[];
  paramValues: Record<string, ParamValue>;
  contractOutPointTx: string;
  contractOutPointIndex: string;
  log: (message: string, ...args: any[]) => void;
}

export function TransactionSkeletonPanel({
  transactionResult,
  setTransactionResult,
  signer,
  methodParams,
  paramValues,
  contractOutPointTx,
  contractOutPointIndex,
  log,
}: TransactionSkeletonPanelProps) {
  return (
    <div className="mt-4">
      <label className="text-medium block font-bold text-gray-700">
        Transaction Skeleton (Advanced Feature, Use only if you know what you
        are doing with caution and only on Testnet)
      </label>
      <div className="flex flex-wrap gap-2">
        <Button
          onClick={async () => {
            if (!signer) return;
            const newTransactionResult = transactionResult.clone();
            await newTransactionResult.completeInputsAtLeastOne(signer);
            setTransactionResult(newTransactionResult);
          }}
        >
          completeInputsAtLeastOne
        </Button>
        <Button
          onClick={async () => {
            if (!signer) {
              alert("No signer found");
              return;
            }
            const newTransactionResult = transactionResult.clone();
            let udtScript: ccc.ScriptLike | undefined;
            for (let index = 0; index < methodParams.length; index++) {
              const param = methodParams[index];
              if (param.type === "contextScript") {
                udtScript = paramValues[`Parameter${index}`] as ccc.ScriptLike;
              }
            }
            if (!udtScript) {
              alert("No UDT script found from contextScript parameter");
              return;
            }
            await newTransactionResult.completeInputsByUdt(signer, udtScript);
            const balanceDiff =
              (await newTransactionResult.getInputsUdtBalance(
                signer.client,
                udtScript,
              )) - newTransactionResult.getOutputsUdtBalance(udtScript);
            const { script: changeScript } =
              await signer.getRecommendedAddressObj();
            if (balanceDiff > ccc.Zero) {
              newTransactionResult.addOutput(
                {
                  lock: changeScript,
                  type: udtScript,
                },
                ccc.numLeToBytes(balanceDiff, 16),
              );
            }
            setTransactionResult(newTransactionResult);
          }}
        >
          completeInputsByUdt and complete UDT change
        </Button>
        <Button
          onClick={async () => {
            if (!signer) {
              alert("No signer found");
              return;
            }
            const newTransactionResult = transactionResult.clone();
            await newTransactionResult.completeInputsByCapacity(signer);
            setTransactionResult(newTransactionResult);
          }}
        >
          completeInputsByCapacity
        </Button>
        <Button
          onClick={async () => {
            if (!signer) {
              alert("No signer found");
              return;
            }
            const newTransactionResult = transactionResult.clone();
            newTransactionResult.addCellDeps({
              outPoint: {
                txHash: contractOutPointTx,
                index: contractOutPointIndex,
              },
              depType: "code",
            });
            setTransactionResult(newTransactionResult);
          }}
        >
          Add Cell Dep
        </Button>
        <Button
          onClick={async () => {
            if (!signer) {
              alert("No signer found");
              return;
            }
            const newTransactionResult = transactionResult.clone();
            await newTransactionResult.completeFeeBy(signer);
            setTransactionResult(newTransactionResult);
          }}
        >
          completeFeeBy
        </Button>
        <Button
          onClick={async () => {
            if (!signer) {
              alert("No signer found");
              return;
            }
            const txHash = await signer.sendTransaction(transactionResult);
            log("Transaction sent with hash:", txHash);
          }}
        >
          Sign and Send Transaction
        </Button>
      </div>
      <JsonView value={transactionResult} style={darkTheme} />
    </div>
  );
}


================================================
File: packages/demo/src/app/connected/(tools)/Sign/page.tsx
================================================
"use client";

import { ccc } from "@ckb-ccc/connector-react";
import React, { useState } from "react";
import { Button } from "@/src/components/Button";
import { TextInput } from "@/src/components/Input";
import { useApp } from "@/src/context";
import { ButtonsPanel } from "@/src/components/ButtonsPanel";

export default function Sign() {
  const { signer, createSender } = useApp();
  const { log, error } = createSender("Sign");

  const [messageToSign, setMessageToSign] = useState<string>("");
  const [signature, setSignature] = useState<string>("");

  return (
    <div className="flex w-full flex-col items-stretch">
      <TextInput
        label="Message"
        placeholder="Message to sign and verify"
        state={[messageToSign, setMessageToSign]}
      />
      <ButtonsPanel>
        <Button
          onClick={async () => {
            if (!signer) {
              return;
            }
            const sig = JSON.stringify(await signer.signMessage(messageToSign));
            setSignature(sig);
            log("Signature:", sig);
          }}
        >
          Sign
        </Button>
        <Button
          className="ml-2"
          onClick={async () => {
            if (
              !(await ccc.Signer.verifyMessage(
                messageToSign,
                JSON.parse(signature),
              ))
            ) {
              error("Invalid");
              return;
            }
            log("Valid");
          }}
        >
          Verify
        </Button>
      </ButtonsPanel>
    </div>
  );
}


================================================
File: packages/demo/src/app/connected/(tools)/TimeLockedTransfer/page.tsx
================================================
"use client";

import React, { useEffect, useState, useCallback } from "react";
import { TextInput } from "@/src/components/Input";
import { Button } from "@/src/components/Button";
import { ccc } from "@ckb-ccc/connector-react";
import { useGetExplorerLink } from "@/src/utils";
import { useApp } from "@/src/context";
import { ButtonsPanel } from "@/src/components/ButtonsPanel";
import { BigButton } from "@/src/components/BigButton";

function ClaimButton({ cell, lock }: { cell: ccc.Cell; lock: ccc.Script }) {
  const { signer, createSender } = useApp();
  const { log, error } = createSender("Claim Time Locked");

  const { explorerTransaction } = useGetExplorerLink();

  return (
    <BigButton
      key={ccc.hexFrom(cell.outPoint.toBytes())}
      size="sm"
      iconName="Clock"
      onClick={() => {
        if (!signer) {
          return;
        }

        (async () => {
          const toAddress = await signer.getRecommendedAddressObj();
          const { value: ownerCell, done } = await signer.client
            .findCells(
              {
                script: lock,
                scriptSearchMode: "exact",
                scriptType: "lock",
                filter: {
                  scriptLenRange: [0, 1],
                  outputDataLenRange: [0, 1],
                },
                withData: true,
              },
              undefined,
              1,
            )
            .next();
          if (done) {
            error(
              "A existed owner cell from",
              ccc.Address.fromScript(lock, signer.client).toString(),
              "is required",
            );
            return;
          }

          const tx = ccc.Transaction.from({
            inputs: [
              {
                previousOutput: ownerCell.outPoint,
                cellOutput: ownerCell.cellOutput,
                outputData: ownerCell.outputData,
              },
              {
                previousOutput: cell.outPoint,
                since: ccc.numFromBytes(
                  ccc.bytesFrom(cell.cellOutput.lock.args).slice(32, 40),
                ),
                cellOutput: cell.cellOutput,
                outputData: cell.outputData,
              },
            ],
            outputs: [{ lock: toAddress.script }],
          });
          console.log(
            tx.inputs[1].since,

            ccc.bytesFrom(cell.cellOutput.lock.args).slice(32, 40),
          );
          await tx.addCellDepsOfKnownScripts(
            signer.client,
            ccc.KnownScript.TimeLock,
          );

          await tx.completeInputsByCapacity(signer);
          await tx.completeFeeChangeToOutput(signer, 0);

          const txHash = await signer.sendTransaction(tx);
          log("Transaction sent:", explorerTransaction(txHash));
          await signer.client.waitTransaction(txHash);
          log("Transaction committed:", explorerTransaction(txHash));
        })();
      }}
      className="align-center text-yellow-400"
    >
      {ccc.fixedPointToString(
        (cell.cellOutput.capacity / ccc.fixedPointFrom("0.01")) *
          ccc.fixedPointFrom("0.01"),
      )}
      <span className="-mt-2 text-xs">CKB</span>
    </BigButton>
  );
}

export default function TimeLockedTransfer() {
  const { signer, createSender } = useApp();
  const { log, error } = createSender("Time Locked Transfer");

  const { explorerTransaction } = useGetExplorerLink();

  const [transferTo, setTransferTo] = useState<string>("");
  const [amount, setAmount] = useState<string>("");
  const [lockedForBlocks, setLockedForBlocks] = useState<string>("");

  const [liveTimeLockCells, setLiveTimeLockCells] = useState<
    { cell: ccc.Cell; lock: ccc.Script }[]
  >([]);

  const handleTimeLockedTransfer = useCallback(async () => {
    if (!signer) {
      return;
    }

    // Verify destination addresses
    const toAddress = await ccc.Address.fromString(transferTo, signer.client);

    const tip = await signer.client.getTip();
    const lockedUntil = ccc.Since.from({
      relative: "absolute",
      metric: "blockNumber",
      value: tip + ccc.numFrom(lockedForBlocks),
    });
    const timeLockScript = await ccc.Script.fromKnownScript(
      signer.client,
      ccc.KnownScript.TimeLock,
      buildTimeLockArgs(toAddress.script.hash(), lockedUntil.toNum()),
    );

    const tx = ccc.Transaction.from({
      outputs: [{ lock: timeLockScript }],
    });

    const minimumCapacity = tx.getOutputsCapacity();
    if (minimumCapacity > ccc.fixedPointFrom(amount)) {
      error("Insufficient capacity to store data");
      return;
    }
    tx.outputs[0].capacity = ccc.fixedPointFrom(amount);

    // Complete missing parts for transaction
    await tx.completeInputsByCapacity(signer);
    await tx.completeFeeBy(signer);

    const txHash = await signer.sendTransaction(tx);
    log("Transaction sent:", explorerTransaction(txHash));
    await signer.client.waitTransaction(txHash);
    log("Transaction committed:", explorerTransaction(txHash));
  }, [
    signer,
    amount,
    error,
    explorerTransaction,
    lockedForBlocks,
    log,
    transferTo,
  ]);

  useEffect(() => {
    if (!signer) {
      return;
    }

    (async () => {
      const cells = [];

      for await (const { script: lock } of await signer.getAddressObjs()) {
        for await (const cell of signer.client.findCells({
          script: await ccc.Script.fromKnownScript(
            signer.client,
            ccc.KnownScript.TimeLock,
            lock.hash(),
          ),
          scriptType: "lock",
          scriptSearchMode: "prefix",
        })) {
          cells.push({ cell, lock });
        }
      }

      setLiveTimeLockCells(cells);
    })();
  }, [signer]);

  return (
    <div className="flex w-full flex-col items-stretch">
      <TextInput
        label="Address"
        placeholder="Receiver address"
        state={[transferTo, setTransferTo]}
      />
      <TextInput
        label="Amount"
        placeholder="Amount to lock"
        state={[amount, setAmount]}
      />
      <TextInput
        label="Locked for N Blocks"
        placeholder="Can be claimed after N new blocks"
        state={[lockedForBlocks, setLockedForBlocks]}
      />
      <div className="mt-4 flex flex-wrap justify-center gap-2">
        {liveTimeLockCells.map(({ cell, lock }) => (
          <ClaimButton
            key={ccc.hexFrom(cell.outPoint.toBytes())}
            cell={cell}
            lock={lock}
          />
        ))}
      </div>
      <ButtonsPanel>
        <Button className="ml-2" onClick={handleTimeLockedTransfer}>
          Lock
        </Button>
      </ButtonsPanel>
    </div>
  );
}

function buildTimeLockArgs(
  requiredScriptHash: ccc.HexLike,
  lockedUntil: ccc.NumLike,
) {
  const lockedUntilBytes8 = ccc.numToBytes(lockedUntil, 8);
  return ccc.bytesConcat(requiredScriptHash, lockedUntilBytes8);
}


================================================
File: packages/demo/src/app/connected/(tools)/Transfer/page.tsx
================================================
"use client";

import React, { useState } from "react";
import { TextInput } from "@/src/components/Input";
import { Button } from "@/src/components/Button";
import { Textarea } from "@/src/components/Textarea";
import { ccc } from "@ckb-ccc/connector-react";
import { bytesFromAnyString, useGetExplorerLink } from "@/src/utils";
import { useApp } from "@/src/context";
import { ButtonsPanel } from "@/src/components/ButtonsPanel";

export default function Transfer() {
  const { signer, createSender } = useApp();
  const { log, error } = createSender("Transfer");

  const { explorerTransaction } = useGetExplorerLink();

  const [transferTo, setTransferTo] = useState<string>("");
  const [feeRate, setFeeRate] = useState<undefined | ccc.Num>();
  const [amount, setAmount] = useState<string>("");
  const [data, setData] = useState<string>("");

  return (
    <div className="flex w-full flex-col items-stretch">
      <Textarea
        label="Address"
        placeholder="Addresses to transfer to, separated by lines"
        state={[transferTo, setTransferTo]}
      />
      <TextInput
        label="Amount"
        placeholder="Amount to transfer for each"
        state={[amount, setAmount]}
      />
      <Textarea
        label="Output Data(Options)"
        state={[data, setData]}
        placeholder="Leave empty if you don't know what this is. Data in the first output. Hex string will be parsed."
      />
      <ButtonsPanel>
        <Button
          variant="info"
          onClick={async () => {
            if (!signer) {
              return;
            }
            if (transferTo.split("\n").length !== 1) {
              error("Only one destination is allowed for max amount");
              return;
            }

            log("Calculating the max amount...");
            // Verify destination address
            const { script: toLock } = await ccc.Address.fromString(
              transferTo,
              signer.client,
            );

            // Build the full transaction to estimate the fee
            const tx = ccc.Transaction.from({
              outputs: [{ lock: toLock }],
              outputsData: [bytesFromAnyString(data)],
            });

            // Complete missing parts for transaction
            await tx.completeInputsAll(signer);
            const feeRate = await signer.client.getFeeRate();
            setFeeRate(feeRate);
            // Change all balance to the first output
            await tx.completeFeeChangeToOutput(signer, 0, feeRate);
            const amount = ccc.fixedPointToString(tx.outputs[0].capacity);
            log("You can transfer at most", amount, "CKB");
            setAmount(amount);
          }}
        >
          Max Amount
        </Button>
        <Button
          className="ml-2"
          onClick={async () => {
            if (!signer) {
              return;
            }
            // Verify destination addresses
            const toAddresses = await Promise.all(
              transferTo
                .split("\n")
                .map((addr) => ccc.Address.fromString(addr, signer.client)),
            );

            const tx = ccc.Transaction.from({
              outputs: toAddresses.map(({ script }) => ({ lock: script })),
              outputsData: [bytesFromAnyString(data)],
            });

            // CCC transactions are easy to be edited
            tx.outputs.forEach((output, i) => {
              if (output.capacity > ccc.fixedPointFrom(amount)) {
                error(`Insufficient capacity at output ${i} to store data`);
                return;
              }
              output.capacity = ccc.fixedPointFrom(amount);
            });

            // Complete missing parts for transaction
            await tx.completeInputsByCapacity(signer);
            await tx.completeFeeBy(signer, feeRate);

            // Sign and send the transaction
            const txHash = await signer.sendTransaction(tx);
            log("Transaction sent:", explorerTransaction(txHash));
            await signer.client.waitTransaction(txHash);
            log("Transaction committed:", explorerTransaction(txHash));
          }}
        >
          Transfer
        </Button>
      </ButtonsPanel>
    </div>
  );
}


================================================
File: packages/demo/src/app/connected/(tools)/TransferLumos/page.tsx
================================================
"use client";

import React, { useState } from "react";
import { TextInput } from "@/src/components/Input";
import { Button } from "@/src/components/Button";
import { ccc } from "@ckb-ccc/connector-react";
import common, {
  registerCustomLockScriptInfos,
} from "@ckb-lumos/common-scripts/lib/common";
import { generateDefaultScriptInfos } from "@ckb-ccc/lumos-patches";
import { Indexer } from "@ckb-lumos/ckb-indexer";
import { TransactionSkeleton } from "@ckb-lumos/helpers";
import { predefined } from "@ckb-lumos/config-manager";
import { Textarea } from "@/src/components/Textarea";
import { useGetExplorerLink } from "@/src/utils";
import { useApp } from "@/src/context";
import { ButtonsPanel } from "@/src/components/ButtonsPanel";

export default function TransferLumos() {
  const { signer, createSender } = useApp();
  const { log, error } = createSender("Transfer with Lumos");

  const { explorerTransaction } = useGetExplorerLink();

  const [transferTo, setTransferTo] = useState<string>("");
  const [amount, setAmount] = useState<string>("");
  const [data, setData] = useState<string>("");

  return (
    <>
      <div className="flex w-full flex-col items-stretch">
        <TextInput
          label="Address"
          placeholder="Address to transfer to"
          state={[transferTo, setTransferTo]}
        />
        <TextInput
          label="Amount"
          placeholder="Amount to transfer"
          state={[amount, setAmount]}
        />
        <Textarea
          label="Output Data(options)"
          state={[data, setData]}
          placeholder="Data in the cell. Hex string will be parsed."
        />
        <ButtonsPanel>
          <Button
            className="self-center"
            onClick={async () => {
              if (!signer) {
                return;
              }
              // Verify destination address
              await ccc.Address.fromString(transferTo, signer.client);

              const fromAddresses = await signer.getAddresses();
              // === Composing transaction with Lumos ===
              registerCustomLockScriptInfos(generateDefaultScriptInfos());
              const indexer = new Indexer(
                signer.client.url
                  .replace("wss://", "https://")
                  .replace("ws://", "http://")
                  .replace(new RegExp("/ws/?$"), "/"),
              );
              let txSkeleton = new TransactionSkeleton({
                cellProvider: indexer,
              });
              txSkeleton = await common.transfer(
                txSkeleton,
                fromAddresses,
                transferTo,
                ccc.fixedPointFrom(amount),
                undefined,
                undefined,
                {
                  config:
                    signer.client.addressPrefix === "ckb"
                      ? predefined.LINA
                      : predefined.AGGRON4,
                },
              );
              txSkeleton = await common.payFeeByFeeRate(
                txSkeleton,
                fromAddresses,
                BigInt(3600),
                undefined,
                {
                  config:
                    signer.client.addressPrefix === "ckb"
                      ? predefined.LINA
                      : predefined.AGGRON4,
                },
              );
              // ======

              const tx = ccc.Transaction.fromLumosSkeleton(txSkeleton);

              // CCC transactions are easy to be edited
              const dataBytes = (() => {
                try {
                  return ccc.bytesFrom(data);
                } catch (e) {}

                return ccc.bytesFrom(data, "utf8");
              })();
              if (
                tx.outputs[0].capacity < ccc.fixedPointFrom(dataBytes.length)
              ) {
                error("Insufficient capacity to store data");
                return;
              }
              tx.outputsData[0] = ccc.hexFrom(dataBytes);

              // Sign and send the transaction
              const txHash = await signer.sendTransaction(tx);
              log("Transaction sent:", explorerTransaction(txHash));
              await signer.client.waitTransaction(txHash);
              log("Transaction committed:", explorerTransaction(txHash));
            }}
          >
            Transfer
          </Button>
        </ButtonsPanel>
      </div>
    </>
  );
}


================================================
File: packages/demo/src/app/connected/(tools)/TransferSpore/page.tsx
================================================
"use client";

import React, { useEffect, useState } from "react";
import { TextInput } from "@/src/components/Input";
import { Button } from "@/src/components/Button";
import { useGetExplorerLink } from "@/src/utils";
import { useApp } from "@/src/context";
import { ButtonsPanel } from "@/src/components/ButtonsPanel";
import { Dropdown } from "@/src/components/Dropdown";
import { ccc } from "@ckb-ccc/connector-react";

export default function TransferSpore() {
  const { signer, createSender } = useApp();
  const { log } = createSender("Transfer Spore");
  const { explorerTransaction } = useGetExplorerLink();
  const [address, setAddress] = useState<string>("");
  const [sporeId, setSporeId] = useState<string>("");

  const [sporeList, setSporeList] = useState([{ id: "", name: "Loading..." }]);

  useEffect(() => {
    if (!signer) {
      return;
    }

    (async () => {
      let list = [];
      for await (const { spore, sporeData } of ccc.spore.findSporesBySigner({
        signer,
        order: "desc",
      })) {
        if (!spore.cellOutput.type?.args) {
          continue;
        }

        if (sporeData.clusterId) {
          const cluster = await ccc.spore.findCluster(
            signer.client,
            sporeData.clusterId,
          );

          if (cluster) {
            list.push({
              id: spore.cellOutput.type.args,
              name: `${cluster.clusterData.name} (${ccc
                .hexFrom(sporeData.clusterId)
                .slice(0, 10)}-${spore.cellOutput.type.args.slice(0, 10)})`,
            });
            continue;
          }
        }

        list.push({
          id: spore.cellOutput.type.args,
          name: "Public Spore",
        });
      }
      setSporeList(list);
      setSporeId((sporeId) => (sporeId === "" ? list[0].id : sporeId));
    })();
  }, [signer]);

  return (
    <div className="flex w-full flex-col items-stretch">
      <TextInput
        label="Address"
        placeholder="Receiver address"
        state={[address, setAddress]}
      />

      <label className="mt-4 text-sm">Select a Spore to transfer</label>
      <Dropdown
        className="mt-2"
        options={sporeList.map((spore) => ({
          name: spore.id,
          displayName: spore.name,
          iconName: "Cherry",
        }))}
        selected={sporeId}
        onSelect={setSporeId}
      />

      <ButtonsPanel>
        <Button
          disabled={sporeId === ""}
          onClick={async () => {
            if (!signer || !address || sporeId === "") {
              return;
            }
            const { script: to } = await ccc.Address.fromString(
              address,
              signer.client,
            );

            // Build transaction
            const { tx } = await ccc.spore.transferSpore({
              signer,
              id: sporeId,
              to,
            });
            await tx.completeFeeBy(signer);

            // Send transaction
            const txHash = await signer.sendTransaction(tx);
            log("Transaction sent:", explorerTransaction(txHash));
            await signer.client.waitTransaction(txHash);
            log("Transaction committed:", explorerTransaction(txHash));
          }}
        >
          Transfer Spore
        </Button>
        <Button
          variant="danger"
          className="ml-2"
          disabled={sporeId === ""}
          onClick={async () => {
            if (!signer || sporeId === "") {
              return;
            }

            // Build transaction
            const { tx } = await ccc.spore.meltSpore({
              signer,
              id: sporeId,
            });
            await tx.completeFeeBy(signer);

            // Send transaction
            const txHash = await signer.sendTransaction(tx);
            log("Transaction sent:", explorerTransaction(txHash));
            await signer.client.waitTransaction(txHash);
            log("Transaction committed:", explorerTransaction(txHash));
          }}
        >
          Melt Spore
        </Button>
      </ButtonsPanel>
    </div>
  );
}


================================================
File: packages/demo/src/app/connected/(tools)/TransferSporeCluster/page.tsx
================================================
"use client";

import React, { useEffect, useState } from "react";
import { TextInput } from "@/src/components/Input";
import { Button } from "@/src/components/Button";
import { useGetExplorerLink } from "@/src/utils";
import { useApp } from "@/src/context";
import { ButtonsPanel } from "@/src/components/ButtonsPanel";
import { ccc } from "@ckb-ccc/connector-react";
import { Dropdown } from "@/src/components/Dropdown";

export default function TransferSporeCluster() {
  const { signer, createSender } = useApp();
  const { log } = createSender("Transfer Cluster");
  const { explorerTransaction } = useGetExplorerLink();
  const [address, setAddress] = useState<string>("");
  const [clusterId, setClusterId] = useState<string>("");

  const [clusterList, setClusterList] = useState([
    { id: "", name: "Loading..." },
  ]);

  useEffect(() => {
    if (!signer) {
      return;
    }

    (async () => {
      const list: { id: string; name: string }[] = [];
      for await (const {
        cluster,
        clusterData,
      } of ccc.spore.findSporeClustersBySigner({
        signer,
        order: "desc",
      })) {
        if (!cluster.cellOutput.type?.args) {
          continue;
        }

        list.push({
          id: cluster.cellOutput.type.args,
          name: `${clusterData.name} (${cluster.cellOutput.type.args.slice(0, 10)})`,
        });
      }
      setClusterList(list);
      setClusterId((clusterId) => (clusterId === "" ? list[0].id : clusterId));
    })();
  }, [signer]);

  return (
    <div className="flex w-full flex-col items-stretch">
      <TextInput
        label="Address"
        placeholder="Receiver address"
        state={[address, setAddress]}
      />

      <label className="mt-4 text-sm">Select a Cluster to transfer</label>
      <Dropdown
        className="mt-2"
        options={clusterList.map(({ id, name }) => ({
          name: id,
          displayName: name,
          iconName: "Wheat",
        }))}
        selected={clusterId}
        onSelect={setClusterId}
      />

      <ButtonsPanel>
        <Button
          disabled={clusterId === ""}
          onClick={async () => {
            if (!signer || !address || clusterId === "") return;
            // Create a new owner
            const { script: to } = await ccc.Address.fromString(
              address,
              signer.client,
            );

            // Build transaction
            const { tx } = await ccc.spore.transferSporeCluster({
              signer,
              id: clusterId,
              to,
            });
            await tx.completeFeeBy(signer);

            const txHash = await signer.sendTransaction(tx);
            log("Transaction sent:", explorerTransaction(txHash));
            await signer.client.waitTransaction(txHash);
            log("Transaction committed:", explorerTransaction(txHash));
          }}
        >
          Transfer Spore
        </Button>
      </ButtonsPanel>
    </div>
  );
}


================================================
File: packages/demo/src/app/connected/(tools)/TransferUdt/page.tsx
================================================
"use client";

import React, { useEffect, useState } from "react";
import { TextInput } from "@/src/components/Input";
import { Button } from "@/src/components/Button";
import { ccc } from "@ckb-ccc/connector-react";
import { Textarea } from "@/src/components/Textarea";
import { useGetExplorerLink } from "@/src/utils";
import { useApp } from "@/src/context";
import { ButtonsPanel } from "@/src/components/ButtonsPanel";

export default function TransferUdt() {
  const { client } = ccc.useCcc();
  const { signer, createSender } = useApp();
  const { log } = createSender("Transfer xUDT");

  const { explorerTransaction } = useGetExplorerLink();

  const [udtTxHash, setUdtTxHash] = useState<string>("");
  const [udtIndex, setUdtIndex] = useState<string>("");
  const [udtCodeHash, setUdtCodeHash] = useState<string>("");
  const [udtHashType, setUdtHashType] = useState<string>("");
  const [udtArgs, setUdtArgs] = useState<string>("");
  const [transferTo, setTransferTo] = useState<string>("");
  const [amount, setAmount] = useState<string>("");

  useEffect(() => {
    (async () => {
      const script = await client.getKnownScript(ccc.KnownScript.XUdt);
      setUdtCodeHash(script.codeHash);
      setUdtHashType(script.hashType);
      setUdtTxHash(script.cellDeps[0].cellDep.outPoint.txHash);
      setUdtIndex(script.cellDeps[0].cellDep.outPoint.index.toString());
    })();
  }, [client]);

  return (
    <div className="flex w-full flex-col items-stretch">
      <Textarea
        label="Address"
        placeholder="Addresses to transfer to, separated by lines"
        state={[transferTo, setTransferTo]}
      />
      <TextInput
        label="Amount"
        placeholder="Amount to transfer for each"
        state={[amount, setAmount]}
      />
      <TextInput
        label="Args"
        placeholder="UDT args to transfer"
        state={[udtArgs, setUdtArgs]}
      />
      <TextInput
        label="Code Hash"
        placeholder="UDT args to transfer"
        state={[udtCodeHash, setUdtCodeHash]}
      />
      <TextInput
        label="Hash Type"
        placeholder="UDT hash type to transfer"
        state={[udtHashType, setUdtHashType]}
      />
      <TextInput
        label="Script Code Tx Hash"
        placeholder="Tx hash of the script code"
        state={[udtTxHash, setUdtTxHash]}
      />
      <TextInput
        label="Script Code index"
        placeholder="Index of the script code"
        state={[udtIndex, setUdtIndex]}
      />
      <ButtonsPanel>
        <Button
          className="self-center"
          onClick={async () => {
            if (!signer) {
              return;
            }
            const toAddresses = await Promise.all(
              transferTo
                .split("\n")
                .map((addr) => ccc.Address.fromString(addr, signer.client)),
            );
            const udt = new ccc.udt.Udt(
              {
                txHash: udtTxHash,
                index: udtIndex,
              },
              {
                codeHash: udtCodeHash,
                hashType: udtHashType,
                args: udtArgs,
              },
            );

            const { res: tx } = await udt.transfer(
              signer,
              toAddresses.map(({ script }) => ({
                to: script,
                amount: amount,
              })),
            );
            const completedTx = await udt.completeBy(tx, signer);
            await completedTx.completeInputsByCapacity(signer);
            await completedTx.completeFeeBy(signer);

            // Sign and send the transaction
            const txHash = await signer.sendTransaction(completedTx);
            log("Transaction sent:", explorerTransaction(txHash));
            await signer.client.waitTransaction(txHash);
            log("Transaction committed:", explorerTransaction(txHash));
          }}
        >
          Transfer
        </Button>
      </ButtonsPanel>
    </div>
  );
}


================================================
File: packages/demo/src/app/utils/page.tsx
================================================
"use client";

import { useApp } from "@/src/context";
import { Dropdown } from "@/src/components/Dropdown";
import React, { useEffect } from "react";
import { useRouter } from "next/navigation";
import { icons } from "lucide-react";
import { BigButton } from "@/src/components/BigButton";

const TABS: [string, string, keyof typeof icons, string][] = [
  ["Hash", "/utils/Hash", "Barcode", "text-violet-500"],
  ["Mnemonic", "/utils/Mnemonic", "SquareAsterisk", "text-fuchsia-500"],
  ["Keystore", "/utils/Keystore", "Notebook", "text-rose-500"],
];

export default function Page() {
  const router = useRouter();
  const { signer } = useApp();

  useEffect(() => {
    if (signer) {
      router.push("/connected");
    }
  }, [signer, router]);

  useEffect(() => {
    TABS.forEach(([_, path]) => router.prefetch(path));
  }, [router]);

  return (
    <div className="flex flex-wrap justify-center gap-4 px-4 lg:px-16">
      {TABS.map(([name, link, iconName, classes]) => (
        <BigButton
          key={link}
          size="sm"
          iconName={iconName}
          onClick={() => router.push(link)}
          className={classes}
        >
          {name}
        </BigButton>
      ))}
    </div>
  );
}


================================================
File: packages/demo/src/app/utils/(tools)/layout.tsx
================================================
export { default } from "@/src/app/connected/(tools)/layout";


================================================
File: packages/demo/src/app/utils/(tools)/Hash/page.tsx
================================================
"use client";

import { ccc } from "@ckb-ccc/connector-react";
import React, { useState } from "react";
import { Button } from "@/src/components/Button";
import { TextInput } from "@/src/components/Input";
import { useApp } from "@/src/context";
import { ButtonsPanel } from "@/src/components/ButtonsPanel";

export default function Hash() {
  const { createSender } = useApp();
  const { log } = createSender("Hash");

  const [messageToHash, setMessageToHash] = useState<string>("");

  return (
    <div className="flex w-full flex-col items-stretch">
      <TextInput
        label="Message"
        placeholder="Message to hash"
        state={[messageToHash, setMessageToHash]}
      />
      <ButtonsPanel>
        <Button
          onClick={async () => {
            log("Hash:", ccc.hashCkb(ccc.bytesFrom(messageToHash, "utf8")));
          }}
        >
          Hash as UTF-8
        </Button>
        <Button
          className="ml-2"
          onClick={async () => {
            log("Hash:", ccc.hashCkb(messageToHash));
          }}
        >
          Hash as hex
        </Button>
      </ButtonsPanel>
    </div>
  );
}


================================================
File: packages/demo/src/app/utils/(tools)/Keystore/page.tsx
================================================
"use client";

import { ccc } from "@ckb-ccc/connector-react";
import React, { useCallback, useEffect, useState } from "react";
import { Button } from "@/src/components/Button";
import { TextInput } from "@/src/components/Input";
import { HDKey } from "@scure/bip32";
import { Textarea } from "@/src/components/Textarea";
import { useApp } from "@/src/context";
import { ButtonsPanel } from "@/src/components/ButtonsPanel";

export default function Keystore() {
  const { client } = ccc.useCcc();
  const { createSender } = useApp();
  const { log, error } = createSender("Keystore");

  const [keystore, setKeystore] = useState<string>("");
  const [password, setPassword] = useState<string>("");
  const [countStr, setCountStr] = useState<string>("10");
  const [accounts, setAccount] = useState<
    {
      publicKey: string;
      privateKey: string;
      address: string;
      path: string;
    }[]
  >([]);
  const [hdKey, setHdKey] = useState<HDKey | undefined>(undefined);
  const moreAccounts = useCallback(async () => {
    if (!hdKey) {
      return;
    }
    const count = parseInt(countStr, 10);
    setAccount((accounts) => [
      ...accounts,
      ...Array.from(new Array(count), (_, i) => {
        const path = `m/44'/309'/0'/0/${i + accounts.length}`;
        const derivedKey = hdKey.derive(path);
        return {
          publicKey: ccc.hexFrom(derivedKey.publicKey!),
          privateKey: ccc.hexFrom(derivedKey.privateKey!),
          path,
          address: "",
        };
      }),
    ]);
  }, [hdKey, countStr]);
  useEffect(() => {
    setAccount([]);
    moreAccounts();
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [hdKey]);

  useEffect(() => {
    setAccount([]);
    setHdKey(undefined);
  }, [keystore, password]);

  useEffect(() => {
    (async () => {
      let modified = false;
      const newAccounts = await Promise.all(
        accounts.map(async (acc) => {
          const address = await new ccc.SignerCkbPublicKey(
            client,
            acc.publicKey,
          ).getRecommendedAddress();
          if (address !== acc.address) {
            modified = true;
          }
          acc.address = address;
          return acc;
        }),
      );
      if (modified) {
        setAccount(newAccounts);
      }
    })();
  }, [client, accounts]);

  return (
    <div className="flex w-full flex-col items-stretch">
      <Textarea
        label="keystore"
        placeholder="Keystore"
        state={[keystore, setKeystore]}
      />
      <TextInput
        label="Accounts count"
        placeholder="Accounts count"
        state={[countStr, setCountStr]}
      />
      <TextInput
        label="Password"
        placeholder="Password"
        state={[password, setPassword]}
      />
      {accounts.length !== 0 ? (
        <div className="mt-1 w-full overflow-scroll whitespace-nowrap bg-white">
          <p>path, address, private key</p>
          {accounts.map(({ privateKey, address, path }) => (
            <p key={path}>
              {path}, {address}, {privateKey}
            </p>
          ))}
        </div>
      ) : undefined}
      <ButtonsPanel>
        <Button
          variant="success"
          onClick={async () => {
            try {
              const { privateKey, chainCode } = await ccc.keystoreDecrypt(
                JSON.parse(keystore),
                password,
              );
              setHdKey(new HDKey({ privateKey, chainCode }));
            } catch (err) {
              error("Invalid");
              throw err;
            }
            log("Valid");
          }}
        >
          Verify Keystore
        </Button>
        <Button
          className="ml-2"
          onClick={moreAccounts}
          disabled={!hdKey || Number.isNaN(parseInt(countStr, 10))}
        >
          More accounts
        </Button>
        {accounts.length !== 0 ? (
          <Button
            as="a"
            className="ml-2"
            href={`data:application/octet-stream,path%2C%20address%2C%20private%20key%0A${accounts
              .map(({ privateKey, address, path }) =>
                encodeURIComponent(`${path}, ${address}, ${privateKey}`),
              )
              .join("\n")}`}
            download={`ckb_accounts_${Date.now()}.csv`}
          >
            Save as CSV
          </Button>
        ) : undefined}
      </ButtonsPanel>
    </div>
  );
}


================================================
File: packages/demo/src/app/utils/(tools)/Mnemonic/page.tsx
================================================
"use client";

import { ccc } from "@ckb-ccc/connector-react";
import React, { useCallback, useEffect, useMemo, useState } from "react";
import { Button } from "@/src/components/Button";
import { TextInput } from "@/src/components/Input";
import * as bip39 from "@scure/bip39";
import { wordlist } from "@scure/bip39/wordlists/english";
import { HDKey } from "@scure/bip32";
import { useApp } from "@/src/context";
import { ButtonsPanel } from "@/src/components/ButtonsPanel";

export default function Mnemonic() {
  const { client } = ccc.useCcc();
  const { createSender } = useApp();
  const { log } = createSender("Mnemonic");

  const [mnemonic, setMnemonic] = useState<string>("");
  const [password, setPassword] = useState<string>("");
  const [countStr, setCountStr] = useState<string>("10");
  const [accounts, setAccount] = useState<
    {
      publicKey: string;
      privateKey: string;
      address: string;
      path: string;
    }[]
  >([]);
  const isValid = useMemo(
    () => bip39.validateMnemonic(mnemonic, wordlist),
    [mnemonic],
  );

  const moreAccounts = useCallback(async () => {
    const count = parseInt(countStr, 10);
    const seed = await bip39.mnemonicToSeed(mnemonic);
    const hdKey = HDKey.fromMasterSeed(seed);
    setAccount((accounts) => [
      ...accounts,
      ...Array.from(new Array(count), (_, i) => {
        const path = `m/44'/309'/0'/0/${i + accounts.length}`;
        const derivedKey = hdKey.derive(path);
        return {
          publicKey: ccc.hexFrom(derivedKey.publicKey!),
          privateKey: ccc.hexFrom(derivedKey.privateKey!),
          path,
          address: "",
        };
      }),
    ]);
  }, [countStr, mnemonic]);

  useEffect(() => {
    setAccount([]);
    if (isValid) {
      moreAccounts();
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [mnemonic]);

  useEffect(() => {
    (async () => {
      let modified = false;
      const newAccounts = await Promise.all(
        accounts.map(async (acc) => {
          const address = await new ccc.SignerCkbPublicKey(
            client,
            acc.publicKey,
          ).getRecommendedAddress();
          if (address !== acc.address) {
            modified = true;
          }
          acc.address = address;
          return acc;
        }),
      );
      if (modified) {
        setAccount(newAccounts);
      }
    })();
  }, [client, accounts]);

  return (
    <div className="mb-1 flex w-9/12 flex-col items-stretch">
      <TextInput
        label="Mnemonic"
        placeholder="Mnemonic"
        state={[mnemonic, setMnemonic]}
      />
      <TextInput
        label="Accounts count"
        placeholder="Accounts count"
        state={[countStr, setCountStr]}
      />
      <TextInput
        label="Password"
        placeholder="Set password for Keystore"
        state={[password, setPassword]}
      />
      {accounts.length !== 0 ? (
        <div className="mt-1 w-full overflow-scroll whitespace-nowrap bg-white">
          <p>path, address, private key</p>
          {accounts.map(({ privateKey, address, path }) => (
            <p key={path}>
              {path}, {address}, {privateKey}
            </p>
          ))}
        </div>
      ) : undefined}
      <ButtonsPanel>
        <Button
          onClick={() => {
            setMnemonic(bip39.generateMnemonic(wordlist));
          }}
        >
          Random Mnemonic
        </Button>
        <Button
          className="ml-2"
          onClick={moreAccounts}
          disabled={!isValid || Number.isNaN(parseInt(countStr, 10))}
        >
          More accounts
        </Button>
        <Button
          className="ml-2"
          onClick={async () => {
            const seed = await bip39.mnemonicToSeed(mnemonic);
            const hdKey = HDKey.fromMasterSeed(seed);
            log(
              JSON.stringify(
                await ccc.keystoreEncrypt(
                  hdKey.privateKey!,
                  hdKey.chainCode!,
                  password,
                ),
              ),
            );
          }}
          disabled={!isValid}
        >
          To Keystore
        </Button>
        {accounts.length !== 0 ? (
          <Button
            as="a"
            className="ml-2"
            href={`data:application/octet-stream,path%2C%20address%2C%20private%20key%0A${accounts
              .map(({ privateKey, address, path }) =>
                encodeURIComponent(`${path}, ${address}, ${privateKey}`),
              )
              .join("\n")}`}
            download={`ckb_accounts_${Date.now()}.csv`}
          >
            Save as CSV
          </Button>
        ) : undefined}
      </ButtonsPanel>
    </div>
  );
}


================================================
File: packages/demo/src/components/Background.tsx
================================================
/* eslint-disable @next/next/no-img-element */

import { Camera, CameraOff, Pause, Play } from "lucide-react";
import { Component, createRef, ReactNode, RefObject } from "react";
import { RandomWalk } from "./RandomWalk";
import { APP_CONTEXT } from "../context";

export class Background extends Component {
  static contextType = APP_CONTEXT;
  context: React.ContextType<typeof APP_CONTEXT>;

  refBg: RefObject<HTMLDivElement> = createRef();
  ref0: RefObject<RandomWalk> = createRef();
  ref1: RefObject<RandomWalk> = createRef();
  ref2: RefObject<RandomWalk> = createRef();

  handler = (e: MouseEvent) => {
    if (
      !this.refBg.current ||
      !this.ref0.current ||
      !this.ref1.current ||
      !this.ref2.current
    ) {
      return;
    }

    const { clientX: x, clientY: y } = e;
    const dx = x - this.refBg.current.clientWidth / 2;
    const dy = y - this.refBg.current.clientHeight / 2;

    this.ref0.current.x = dx * 0.2;
    this.ref0.current.y = dy * 0.2;
    this.ref1.current.x = dx * 0.08;
    this.ref1.current.y = dy * 0.08;
    this.ref2.current.x = dx * 0.03;
    this.ref2.current.y = dy * 0.03;
  };

  componentDidMount(): void {
    document.removeEventListener("mousemove", this.handler);
    document.addEventListener("mousemove", this.handler);
  }

  componentWillUnmount(): void {
    document.removeEventListener("mousemove", this.handler);
  }

  render(): ReactNode {
    return (
      <>
        <div
          className="fixed left-0 top-0 h-full w-full select-none bg-white"
          ref={this.refBg}
          style={{ zIndex: this.context?.backgroundLifted ? 40 : -100 }}
        >
          <div className="absolute left-1/2 top-1/2 translate-x-[-50%] translate-y-[-50%]">
            <RandomWalk ref={this.ref0} className="flex flex-col items-center">
              <div className="relative">
                <img
                  style={{
                    width: "min(60vw, 60vh)",
                    maxWidth: "none",
                  }}
                  src="/background/0.svg"
                  alt=""
                />
                <div className="absolute left-1/2 top-1/2 translate-x-[-50%] translate-y-[-50%]">
                  <RandomWalk ref={this.ref1}>
                    <img
                      style={{
                        width: "min(60vw, 60vh)",
                        maxWidth: "none",
                      }}
                      src="/background/1.svg"
                      alt=""
                    />
                    <div className="absolute left-1/2 top-1/2 translate-x-[-50%] translate-y-[-50%]">
                      <RandomWalk ref={this.ref2}>
                        <img
                          style={{
                            width: "min(60vw, 60vh)",
                            maxWidth: "none",
                          }}
                          src="/background/2.svg"
                          alt=""
                        />
                      </RandomWalk>
                    </div>
                  </RandomWalk>
                </div>
              </div>
              <div className="flex">
                {"CCC".split("").map((c, i) => (
                  <RandomWalk
                    x={0}
                    y={0}
                    className="mx-2 mt-6 text-7xl font-bold"
                    key={i}
                  >
                    {c}
                  </RandomWalk>
                ))}
              </div>
            </RandomWalk>
          </div>
          {this.context?.backgroundLifted ? undefined : (
            <div className="absolute left-0 top-0 h-full w-full bg-white opacity-70"></div>
          )}
        </div>
      </>
    );
  }
}


================================================
File: packages/demo/src/components/BigButton.tsx
================================================
import { icons } from "lucide-react";
import { RandomWalk } from "./RandomWalk";

export function BigButton({
  iconName,
  size,
  ...props
}: {
  iconName: keyof typeof icons;
  size?: "md" | "sm";
} & React.ComponentPropsWithoutRef<"button">) {
  const [classes, iconClasses] = {
    md: ["h-40 w-40 p-24 text-2xl", "h-20 w-20 md:h-24 md:w-24"],
    sm: ["h-24 w-24 p-16 text-lg", "h-16 w-16 md:h-20 md:w-20"],
  }[size ?? "md"];

  const Icon = icons[iconName];

  return (
    <button
      {...props}
      className={`relative flex items-center justify-center rounded rounded-full border bg-white font-bold shadow-md ${classes} ${props.className ?? ""}`}
    >
      <div className="absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 opacity-15">
        <RandomWalk>
          <Icon className={iconClasses} />
        </RandomWalk>
      </div>

      <div className="flex flex-col items-center gap-2">{props.children}</div>
    </button>
  );
}


================================================
File: packages/demo/src/components/Button.tsx
================================================
import { ReactNode } from "react";

export function Button(
  props: {
    icon?: ReactNode;
    variant?: "info" | "primary" | "success" | "danger";
    as?: "button" | "a";
  } & React.ComponentPropsWithoutRef<"button"> &
    React.ComponentPropsWithoutRef<"a">,
) {
  const classes = {
    info: "border-neutral-300 bg-neutral-100 text-black",
    primary: "border-neutral-400 bg-neutral-800 text-white",
    success: "border-green-300 bg-green-100 text-emerald-600",
    danger: "border-red-500 bg-red-300 text-red-700",
  }[props.variant ?? "primary"];

  const Tag = props.as ?? "button";

  return (
    <Tag
      {...props}
      className={`flex items-center justify-center rounded-full px-4 py-2 font-bold no-underline disabled:opacity-70 ${classes} ${props.className}`}
      style={{
        borderWidth: "3px",
        ...(props.style ?? {}),
      }}
    >
      {props.icon ? <div className="mr-2">{props.icon}</div> : undefined}
      {props.children}
    </Tag>
  );
}


================================================
File: packages/demo/src/components/ButtonsPanel.tsx
================================================
export function ButtonsPanel(props: React.ComponentPropsWithoutRef<"div">) {
  return (
    <>
      <div
        {...props}
        className={`-z-50 flex w-full select-none justify-center py-3 opacity-0 ${props.className ?? ""}`}
      ></div>
      <div
        {...props}
        className={`fixed bottom-12 left-0 flex w-full justify-around overflow-x-auto border-t bg-white px-4 py-2 ${props.className ?? ""}`}
      >
        <div className="flex *:whitespace-nowrap">{props.children}</div>
      </div>
    </>
  );
}


================================================
File: packages/demo/src/components/Dropdown.tsx
================================================
import React, { useState } from "react";
import { Icon } from "./Icon";
import { icons } from "lucide-react";

interface DropdownProps {
  options: {
    name: string;
    displayName?: string;
    iconName: keyof typeof icons;
  }[];
  selected: string;
  onSelect: (option: string) => void;
  className?: string;
  defaultIcon?: keyof typeof icons;
}

export function Dropdown({
  options,
  selected,
  onSelect,
  className,
  defaultIcon,
}: DropdownProps) {
  const [isOpen, setIsOpen] = useState(false);

  const handleToggle = () => {
    setIsOpen(!isOpen);
  };

  const handleSelect = (name: string) => {
    onSelect(name);
    setIsOpen(false);
  };

  const selectedOption = options.find((option) => option.name === selected);
  const icon = selectedOption?.iconName ?? defaultIcon;

  return (
    <div className={`relative inline-block text-left ${className ?? ""}`}>
      <button
        onClick={handleToggle}
        className="inline-flex w-full items-center justify-between rounded-full border border-gray-300 bg-white px-3 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none"
      >
        {icon ? <Icon name={icon} className="mr-2" size={20} /> : undefined}
        {selectedOption?.displayName ?? selectedOption?.name ?? selected}
        <svg
          className="-mr-1 ml-1 h-5 w-5"
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 20 20"
          fill="currentColor"
          aria-hidden="true"
        >
          <path
            fillRule="evenodd"
            d="M5.23 7.21a.75.75 0 011.06 0L10 10.94l3.71-3.73a.75.75 0 111.06 1.06l-4 4a.75.75 0 01-1.06 0l-4-4a.75.75 0 010-1.06z"
            clipRule="evenodd"
          />
        </svg>
      </button>
      {isOpen && (
        <div className="absolute bottom-12 right-0 z-10 mt-2 max-h-96 w-full overflow-y-scroll rounded-md bg-white shadow-lg ring-1 ring-black ring-opacity-5">
          <div className="py-1">
            {options.map(({ name, displayName, iconName }) => (
              <button
                key={name}
                className={`block flex w-full items-center px-4 py-2 text-left text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900`}
                onClick={() => handleSelect(name)}
              >
                <Icon name={iconName} className="mr-2" />
                {displayName ?? name}
              </button>
            ))}
          </div>
        </div>
      )}
    </div>
  );
}


================================================
File: packages/demo/src/components/Icon.tsx
================================================
import React from "react";
import { icons, LucideProps } from "lucide-react";

interface IconProps extends Omit<LucideProps, "name"> {
  name: keyof typeof icons;
}

export function Icon({ name, color, size, ...props }: IconProps) {
  const LucideIcon = icons[name];

  // Invalid name
  if (!LucideIcon) {
    return null;
  }

  return <LucideIcon color={color} size={size} {...props} />;
}


================================================
File: packages/demo/src/components/Input.tsx
================================================
export function TextInput(
  props: React.ComponentPropsWithoutRef<"input"> & {
    state: [string, (v: string) => void];
    label?: string;
  },
) {
  return (
    <div className={`relative bg-white/75 p-4 ${props.className ?? ""}`}>
      {props.label ? (
        <label className="text-sm">{props.label}</label>
      ) : undefined}
      <input
        {...props}
        className={`w-full border-b-2 border-gray-300 bg-transparent px-4 py-2 text-gray-700 focus:border-solid focus:outline-none ${props.state[0].length !== 0 ? "border-solid" : "border-dashed"}`}
        type="text"
        value={props.state[0]}
        onInput={(e) => props.state[1](e.currentTarget.value)}
      />
    </div>
  );
}


================================================
File: packages/demo/src/components/Message.tsx
================================================
import { CircleCheck, CircleX, Lightbulb, OctagonAlert } from "lucide-react";
import React, { useState } from "react";

export interface MessageProps {
  children: React.ReactNode;
  title?: string;
  type?: "error" | "warning" | "info" | "success";
  lines?: number;
  className?: string;
}

export function Message({
  children,
  title,
  type = "info",
  lines,
  className = "",
}: MessageProps) {
  const [isExpanded, setIsExpanded] = useState(false);

  let colorClass = "";
  let bgColorClass = "";

  switch (type) {
    case "error":
      colorClass = "text-red-800";
      bgColorClass = "bg-red-100";
      break;
    case "warning":
      colorClass = "text-yellow-800";
      bgColorClass = "bg-yellow-100";
      break;
    case "success":
      colorClass = "text-green-800";
      bgColorClass = "bg-green-100";
      break;
    case "info":
    default:
      colorClass = "text-gray-800";
      bgColorClass = "bg-gray-100";
      break;
  }

  return (
    <div
      className={`my-2 flex flex-col items-start rounded-md p-4 ${bgColorClass} ${className}`}
    >
      {title ? (
        <div className="flex w-full items-center">
          {type === "info" && <Lightbulb className={`mr-3 ${colorClass}`} />}
          {type === "error" && <CircleX className={`mr-3 ${colorClass}`} />}
          {type === "success" && (
            <CircleCheck className={`mr-3 ${colorClass}`} />
          )}
          <p className={`font-semibold ${colorClass}`}>{title}</p>
        </div>
      ) : undefined}
      <div
        onClick={() => setIsExpanded(!isExpanded)}
        className={`relative mt-2 ${isExpanded ? "" : "line-clamp-1"}`}
        style={
          isExpanded
            ? {}
            : {
                WebkitLineClamp: `${lines ?? 2}`,
              }
        }
      >
        <p className={`whitespace-pre-wrap break-all text-sm ${colorClass}`}>
          {children}
        </p>
      </div>
    </div>
  );
}


================================================
File: packages/demo/src/components/Notifications.tsx
================================================
import React, { useState, useEffect, ReactNode } from "react";
import { Message } from "./Message";
import { ChevronsRightLeft, History } from "lucide-react";

interface NotificationProps {
  messages: ["info" | "warn" | "error", string, ReactNode][];
}

export function Notifications({ messages }: NotificationProps) {
  const [[msgCount, isExpanded], setMsgsState] = useState([0, false]);
  const [shownMsgCount, setShownMsgCount] = useState(0);

  useEffect(() => {
    setShownMsgCount(messages.length);
    const newMsgCount = messages.length - shownMsgCount;
    if (newMsgCount <= 0) {
      return;
    }

    if (!isExpanded) {
      setMsgsState([newMsgCount, true]);
    }
    if (isExpanded && msgCount !== 0) {
      setMsgsState([msgCount + newMsgCount, true]);
    }

    setTimeout(
      () =>
        setMsgsState(([count, i]) => {
          if (count === 0) {
            return [count, i];
          }

          if (count === newMsgCount) {
            return [count, false];
          }
          return [count - newMsgCount, i];
        }),
      3000,
    );

    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [messages]);

  const toggleExpand = () => {
    if (!isExpanded) {
      setMsgsState([0, true]);
    } else {
      setMsgsState([msgCount, false]);
    }
  };

  return (
    <>
      {messages.length > 0 ? (
        <div
          className="fixed right-0 top-28 z-50 mb-4 flex cursor-pointer items-center rounded-l-full border bg-white px-3 py-2 shadow-md md:top-16"
          onClick={toggleExpand}
        >
          {isExpanded ? (
            <ChevronsRightLeft className="h-8 w-8" />
          ) : (
            <History className="h-8 w-8" />
          )}
          <span className="mx-3 flex items-center justify-center rounded-full text-lg">
            {messages.length}
          </span>
        </div>
      ) : undefined}

      <div
        className={`fixed right-0 top-44 z-40 max-h-[60vh] w-full md:top-32 md:w-7/12 lg:w-5/12 xl:w-4/12 ${isExpanded ? "" : "translate-x-full"} flex flex-col overflow-y-auto overflow-x-hidden border bg-white bg-white duration-300 ease-in-out md:rounded-lg md:shadow-lg`}
      >
        <div className="p-4">
          {messages
            .slice(0, msgCount === 0 ? messages.length : msgCount)
            .map(([level, title, msg], i) => (
              <Message
                key={messages.length - i}
                title={`${messages.length - i} ${title}`}
                type={
                  { info: "success", warn: "warning", error: "error" }[
                    level
                  ] as "success" | "warning" | "error"
                }
              >
                {msg}
              </Message>
            ))}
        </div>
      </div>
    </>
  );
}


================================================
File: packages/demo/src/components/RandomWalk.tsx
================================================
import { Component, ReactNode, RefObject, createRef } from "react";
import { APP_CONTEXT } from "../context";

export type RandomWalkProps = React.ComponentPropsWithoutRef<"div"> & {
  x?: number;
  y?: number;
  stopped?: boolean;
};

export class RandomWalk extends Component<RandomWalkProps> {
  static contextType = APP_CONTEXT;
  context: React.ContextType<typeof APP_CONTEXT>;

  // position, speed, force
  physics: number[] = [0, 0, 0, 0, 0, 0];
  ref: RefObject<HTMLDivElement> = createRef();
  interval: ReturnType<typeof setInterval> | undefined = undefined;

  x: number = 0;
  y: number = 0;

  startLoop() {
    if (this.interval) {
      return;
    }

    this.interval = setInterval(() => {
      if (!this.ref.current) {
        return;
      }

      const randomAngle = Math.random() * 2 * Math.PI;
      const rx = Math.cos(randomAngle) * 0.04;
      const ry = Math.sin(randomAngle) * 0.04;

      const physics = this.physics;
      const [x, y, vx, vy, fx, fy] = physics;

      const dx = (this.props.x ?? this.x) - x;
      const dy = (this.props.y ?? this.y) - y;

      const fSquare = fx * fx + fy * fy;
      if (fSquare > 0.64) {
        const f = Math.sqrt(fSquare);
        physics[4] *= 0.8 / f;
        physics[5] *= 0.8 / f;
      }

      physics[0] += vx * 0.08;
      physics[1] += vy * 0.08;
      physics[2] = vx * 0.8 + fx + dx * 0.08;
      physics[3] = vy * 0.8 + fy + dy * 0.08;
      physics[4] += rx;
      physics[5] += ry;

      this.ref.current.style.transform = `translate(${x}px, ${y}px)`;
    }, 16);
  }

  stopLoop() {
    clearInterval(this.interval);
    this.interval = undefined;
  }

  componentDidMount(): void {
    this.startLoop();
  }

  componentWillUnmount(): void {
    this.stopLoop();
  }

  componentDidUpdate(): void {
    if (this.context?.enabledAnimate) {
      this.startLoop();
    } else {
      this.stopLoop();
    }
  }

  render(): ReactNode {
    return (
      <div {...this.props} ref={this.ref}>
        {this.props.children}
      </div>
    );
  }
}


================================================
File: packages/demo/src/components/Textarea.tsx
================================================
export function Textarea(
  props: React.ComponentPropsWithoutRef<"textarea"> & {
    state: [string, (v: string) => void];
    label?: string;
  },
) {
  return (
    <div className={`relative bg-white/75 p-4 ${props.className ?? ""}`}>
      {props.label ? (
        <label className="text-sm">{props.label}</label>
      ) : undefined}
      <textarea
        {...props}
        className={`mt-1 min-h-20 w-full rounded border-2 border-gray-300 bg-transparent px-4 py-2 text-gray-700 focus:border-solid focus:outline-none ${props.state[0].length !== 0 ? "border-solid" : "border-dashed"}`}
        value={props.state[0]}
        onInput={(e) => props.state[1](e.currentTarget.value)}
      />
    </div>
  );
}


================================================
File: packages/eip6963/README.md
================================================
<p align="center">
  <a href="https://app.ckbccc.com/">
    <img alt="Logo" src="https://raw.githubusercontent.com/ckb-devrel/ccc/master/assets/logoAndText.svg" style="height: 8rem; max-width: 90%; padding: 0.5rem 0;" />
  </a>
</p>

<h1 align="center" style="font-size: 48px;">
  CCC's support for EIP6963
</h1>

<p align="center">
  <a href="https://www.npmjs.com/package/@ckb-ccc/eip6963"><img
    alt="NPM Version" src="https://img.shields.io/npm/v/%40ckb-ccc%2Feip6963"
  /></a>
  <img alt="GitHub commit activity" src="https://img.shields.io/github/commit-activity/m/ckb-devrel/ccc" />
  <img alt="GitHub last commit" src="https://img.shields.io/github/last-commit/ckb-devrel/ccc/master" />
  <img alt="GitHub branch check runs" src="https://img.shields.io/github/check-runs/ckb-devrel/ccc/master" />
  <a href="https://live.ckbccc.com/"><img
    alt="Playground" src="https://img.shields.io/website?url=https%3A%2F%2Flive.ckbccc.com%2F&label=Playground"
  /></a>
  <a href="https://app.ckbccc.com/"><img
    alt="App" src="https://img.shields.io/website?url=https%3A%2F%2Fapp.ckbccc.com%2F&label=App"
  /></a>
  <a href="https://docs.ckbccc.com/"><img
    alt="Docs" src="https://img.shields.io/website?url=https%3A%2F%2Fdocs.ckbccc.com%2F&label=Docs"
  /></a>
</p>

<p align="center">
  CCC - CKBers' Codebase is a one-stop solution for your CKB JS/TS ecosystem development.
  <br />
  Empower yourself with CCC to discover the unlimited potential of CKB.
  <br />
  Interoperate with wallets from different chain ecosystems.
  <br />
  Fully enabling CKB's Turing completeness and cryptographic freedom power.
</p>

<h3 align="center">
  Read more about CCC on <a href="https://docs.ckbccc.com">our website</a> or <a href="https://github.com/ckb-devrel/ccc">GitHub Repo</a>.
</h3>


================================================
File: packages/eip6963/CHANGELOG.md
================================================
# @ckb-ccc/eip6963

## 1.0.11

### Patch Changes

- Updated dependencies [[`28c211d`](https://github.com/ckb-devrel/ccc/commit/28c211d839a2d2305eca56e82ba7da144aa3df4a)]:
  - @ckb-ccc/core@1.5.0

## 1.0.10

### Patch Changes

- Updated dependencies [[`3fdb2c4`](https://github.com/ckb-devrel/ccc/commit/3fdb2c477d0b2766b231e436b8f396f047b02634), [`f429087`](https://github.com/ckb-devrel/ccc/commit/f4290874dfab3fe58844e5169673c5d47bda64e3)]:
  - @ckb-ccc/core@1.4.0

## 1.0.9

### Patch Changes

- Updated dependencies [[`a48cccf`](https://github.com/ckb-devrel/ccc/commit/a48cccfae3ce6b3456a5eb863f207e7e5a6e568f)]:
  - @ckb-ccc/core@1.3.1

## 1.0.8

### Patch Changes

- Updated dependencies [[`4dbf4fd`](https://github.com/ckb-devrel/ccc/commit/4dbf4fd8021cf14d05282706a7667ea7d108fb09), [`4c76f9e`](https://github.com/ckb-devrel/ccc/commit/4c76f9e2a93a226fcfc4c32a5378bb531bfff08f), [`c2c4c26`](https://github.com/ckb-devrel/ccc/commit/c2c4c264e04461948e4b913b2f22054e6032ddc8), [`b6a73fa`](https://github.com/ckb-devrel/ccc/commit/b6a73fa9628ebdff51cb8f246309654cd53e36f2), [`8c97c85`](https://github.com/ckb-devrel/ccc/commit/8c97c851db4a2d940c7e59116ca7620cfd0afae1)]:
  - @ckb-ccc/core@1.3.0

## 1.0.7

### Patch Changes

- Updated dependencies [[`01263bd`](https://github.com/ckb-devrel/ccc/commit/01263bd8c601fa8fcdfa24be52601716e1864843)]:
  - @ckb-ccc/core@1.2.3

## 1.0.6

### Patch Changes

- Updated dependencies [[`7886e3d`](https://github.com/ckb-devrel/ccc/commit/7886e3d89e9ca8f3514a2044c6dd4e8ec6b49933)]:
  - @ckb-ccc/core@1.2.2

## 1.0.5

### Patch Changes

- Updated dependencies [[`94e2618`](https://github.com/ckb-devrel/ccc/commit/94e26182515e09d6086ec5b653d091f117a499e6)]:
  - @ckb-ccc/core@1.2.1

## 1.0.4

### Patch Changes

- Updated dependencies [[`128e87b`](https://github.com/ckb-devrel/ccc/commit/128e87b5ca3e97bfe7842e76f786aa6aec010797)]:
  - @ckb-ccc/core@1.2.0

## 1.0.3

### Patch Changes

- Updated dependencies [[`925991c`](https://github.com/ckb-devrel/ccc/commit/925991c8a24b1f34667e30b28b69812e936e3928)]:
  - @ckb-ccc/core@1.1.1

## 1.0.2

### Patch Changes

- Updated dependencies [[`ddc0a28`](https://github.com/ckb-devrel/ccc/commit/ddc0a281c3d1dfa6ebc990dae92994f026dfddcc)]:
  - @ckb-ccc/core@1.1.0

## 1.0.1

### Patch Changes

- Updated dependencies [[`719055b`](https://github.com/ckb-devrel/ccc/commit/719055b404f31b40362f51714b9f11c85b857581), [`94caaca`](https://github.com/ckb-devrel/ccc/commit/94caaca11c63752a25282d42f51161c94397dec6)]:
  - @ckb-ccc/core@1.0.1

## 1.0.0

### Major Changes

- [#107](https://github.com/ckb-devrel/ccc/pull/107) [`b99f55f`](https://github.com/ckb-devrel/ccc/commit/b99f55f74e64106391ce53f7d0bd0fa7522023cc) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: molecule

### Patch Changes

- Updated dependencies [[`b99f55f`](https://github.com/ckb-devrel/ccc/commit/b99f55f74e64106391ce53f7d0bd0fa7522023cc)]:
  - @ckb-ccc/core@1.0.0

## 0.0.18

### Patch Changes

- Updated dependencies [[`c1cb910`](https://github.com/ckb-devrel/ccc/commit/c1cb91091780c7b33fbbd683ef8edc9f11452ecd)]:
  - @ckb-ccc/core@0.1.2

## 0.0.17

### Patch Changes

- [#101](https://github.com/ckb-devrel/ccc/pull/101) [`d9affcc`](https://github.com/ckb-devrel/ccc/commit/d9affcc01c7b839b227e4d79bcb66e717577502a) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix: commonjs

- Updated dependencies [[`d9affcc`](https://github.com/ckb-devrel/ccc/commit/d9affcc01c7b839b227e4d79bcb66e717577502a)]:
  - @ckb-ccc/core@0.1.1

## 0.0.16

### Patch Changes

- [#70](https://github.com/ckb-devrel/ccc/pull/70) [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): websocket transport

- Updated dependencies [[`a3d5359`](https://github.com/ckb-devrel/ccc/commit/a3d53595f6dd11f2f59cdf0086b3d7ce558a2fdd), [`8824ff2`](https://github.com/ckb-devrel/ccc/commit/8824ff27af3b76186f1a7d6db8c907cd66f09d6a), [`f07a506`](https://github.com/ckb-devrel/ccc/commit/f07a506bd6fc27fe659a17d2f7baaeec54716d81), [`f21d7e4`](https://github.com/ckb-devrel/ccc/commit/f21d7e4cf422edab4a836ef6d678b620594fef8d), [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366), [`1720d5a`](https://github.com/ckb-devrel/ccc/commit/1720d5a398543f1c6e24763eeaf15d84cd2214bf), [`e63a06e`](https://github.com/ckb-devrel/ccc/commit/e63a06ee75ac8595208d216dec88a4228c465e23), [`c092988`](https://github.com/ckb-devrel/ccc/commit/c092988e7765b9ac79498d6bd72a6a2f62859b6f), [`50f2ce0`](https://github.com/ckb-devrel/ccc/commit/50f2ce08e74cb3fbeae926267d42e28b426fd7f4), [`4709384`](https://github.com/ckb-devrel/ccc/commit/4709384e37188991cb937b16f99f47ca82c912b8)]:
  - @ckb-ccc/core@0.1.0

## 0.0.16-alpha.7

### Patch Changes

- Updated dependencies [[`f07a506`](https://github.com/ckb-devrel/ccc/commit/f07a506bd6fc27fe659a17d2f7baaeec54716d81)]:
  - @ckb-ccc/core@0.1.0-alpha.7

## 0.0.16-alpha.6

### Patch Changes

- Updated dependencies [[`4709384`](https://github.com/ckb-devrel/ccc/commit/4709384e37188991cb937b16f99f47ca82c912b8)]:
  - @ckb-ccc/core@0.1.0-alpha.6

## 0.0.16-alpha.5

### Patch Changes

- Updated dependencies [[`50f2ce0`](https://github.com/ckb-devrel/ccc/commit/50f2ce08e74cb3fbeae926267d42e28b426fd7f4)]:
  - @ckb-ccc/core@0.1.0-alpha.5

## 0.0.16-alpha.4

### Patch Changes

- Updated dependencies [[`f21d7e4`](https://github.com/ckb-devrel/ccc/commit/f21d7e4cf422edab4a836ef6d678b620594fef8d)]:
  - @ckb-ccc/core@0.1.0-alpha.4

## 0.0.16-alpha.3

### Patch Changes

- Updated dependencies [[`a3d5359`](https://github.com/ckb-devrel/ccc/commit/a3d53595f6dd11f2f59cdf0086b3d7ce558a2fdd)]:
  - @ckb-ccc/core@0.0.16-alpha.3

## 0.0.16-alpha.2

### Patch Changes

- [#70](https://github.com/ckb-devrel/ccc/pull/70) [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): websocket transport

- Updated dependencies [[`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366)]:
  - @ckb-ccc/core@0.0.16-alpha.2

## 0.0.16-alpha.1

### Patch Changes

- Updated dependencies [[`8824ff2`](https://github.com/ckb-devrel/ccc/commit/8824ff27af3b76186f1a7d6db8c907cd66f09d6a), [`c092988`](https://github.com/ckb-devrel/ccc/commit/c092988e7765b9ac79498d6bd72a6a2f62859b6f)]:
  - @ckb-ccc/core@0.0.16-alpha.1

## 0.0.16-alpha.0

### Patch Changes

- Updated dependencies [[`1720d5a`](https://github.com/ckb-devrel/ccc/commit/1720d5a398543f1c6e24763eeaf15d84cd2214bf)]:
  - @ckb-ccc/core@0.0.16-alpha.0

## 0.0.15

### Patch Changes

- Updated dependencies [[`8f2560a`](https://github.com/ckb-devrel/ccc/commit/8f2560ab0e5619654fff7c5eacda8425385f908e)]:
  - @ckb-ccc/core@0.0.15

## 0.0.14

### Patch Changes

- Updated dependencies [[`5e942f8`](https://github.com/ckb-devrel/ccc/commit/5e942f8f1ed678abdb7ab9716f5449f0714cea53), [`f5b5938`](https://github.com/ckb-devrel/ccc/commit/f5b5938ab8f9c0a338dfd6765fe717f7ad1b1dd8), [`f13f4d3`](https://github.com/ckb-devrel/ccc/commit/f13f4d319ca66b571029a65e945e3a038bfeea25), [`7ba62a0`](https://github.com/ckb-devrel/ccc/commit/7ba62a056f17808fe5684786c00c2dff80bb7d1d), [`2164efd`](https://github.com/ckb-devrel/ccc/commit/2164efd6d834c1917ad5f4a514dc25941f937185), [`e5bd2ad`](https://github.com/ckb-devrel/ccc/commit/e5bd2ad5de4b42a22c422ecfc42056750f69b88b), [`aae3e06`](https://github.com/ckb-devrel/ccc/commit/aae3e0679fb940dd8c12ac9be12a4b53277a339d)]:
  - @ckb-ccc/core@0.0.14

## 0.0.14-alpha.2

### Patch Changes

- Updated dependencies [[`7ba62a0`](https://github.com/ckb-devrel/ccc/commit/7ba62a056f17808fe5684786c00c2dff80bb7d1d)]:
  - @ckb-ccc/core@0.0.14-alpha.2

## 0.0.14-alpha.1

### Patch Changes

- Updated dependencies [[`5e942f8`](https://github.com/ckb-devrel/ccc/commit/5e942f8f1ed678abdb7ab9716f5449f0714cea53), [`e5bd2ad`](https://github.com/ckb-devrel/ccc/commit/e5bd2ad5de4b42a22c422ecfc42056750f69b88b), [`aae3e06`](https://github.com/ckb-devrel/ccc/commit/aae3e0679fb940dd8c12ac9be12a4b53277a339d)]:
  - @ckb-ccc/core@0.0.14-alpha.1

## 0.0.14-alpha.0

### Patch Changes

- Updated dependencies [[`f5b5938`](https://github.com/ckb-devrel/ccc/commit/f5b5938ab8f9c0a338dfd6765fe717f7ad1b1dd8), [`2164efd`](https://github.com/ckb-devrel/ccc/commit/2164efd6d834c1917ad5f4a514dc25941f937185)]:
  - @ckb-ccc/core@0.0.14-alpha.0

## 0.0.13

### Patch Changes

- [`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): recordCells should not add usableCells

- [`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): node.js websocket

- [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): completeInputs

- [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): more APIs. Since parsing.

- [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Signer.findCells

- Updated dependencies [[`3378e85`](https://github.com/ckb-devrel/ccc/commit/3378e85b32797f5cdc1943b9ecaca1fd1d9fad5e), [`8629449`](https://github.com/ckb-devrel/ccc/commit/86294490e76fc2a1cee20f827883e02fceca6e8b), [`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97), [`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f), [`69c10fd`](https://github.com/ckb-devrel/ccc/commit/69c10fdfcd507433c13b15d17015dca4687afb97), [`600cc13`](https://github.com/ckb-devrel/ccc/commit/600cc137ac6eb7c5b2533670de6df29d82f1b9e1), [`642f731`](https://github.com/ckb-devrel/ccc/commit/642f7317f4951ef801f1245aea96c40b4b6fb73e), [`96dbb61`](https://github.com/ckb-devrel/ccc/commit/96dbb6107d2071b9383350ddd578557746227054), [`0462a4e`](https://github.com/ckb-devrel/ccc/commit/0462a4ee101926f0da857173626dc4ab879e3b56), [`52156f9`](https://github.com/ckb-devrel/ccc/commit/52156f9df9cae9e0b71b77b49cda0e4d73e76142), [`63606db`](https://github.com/ckb-devrel/ccc/commit/63606db908f95bfc857430083932144d1ef4deef), [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b), [`1043c2b`](https://github.com/ckb-devrel/ccc/commit/1043c2bc211ec283b88dba3b81feef98e4185c0e), [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11), [`1f999f8`](https://github.com/ckb-devrel/ccc/commit/1f999f854beb255b3cd9dbbc5a7268e75442b3db), [`a69a9dc`](https://github.com/ckb-devrel/ccc/commit/a69a9dc0c722f7b4cfa36b2ae8ecba4dcde0db90), [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895)]:
  - @ckb-ccc/core@0.0.13

## 0.0.13-alpha.8

### Patch Changes

- Updated dependencies [[`8629449`](https://github.com/ckb-devrel/ccc/commit/86294490e76fc2a1cee20f827883e02fceca6e8b), [`52156f9`](https://github.com/ckb-devrel/ccc/commit/52156f9df9cae9e0b71b77b49cda0e4d73e76142), [`63606db`](https://github.com/ckb-devrel/ccc/commit/63606db908f95bfc857430083932144d1ef4deef)]:
  - @ckb-ccc/core@0.0.13-alpha.8

## 0.0.13-alpha.7

### Patch Changes

- [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): more APIs. Since parsing.

- [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Signer.findCells

- Updated dependencies [[`1043c2b`](https://github.com/ckb-devrel/ccc/commit/1043c2bc211ec283b88dba3b81feef98e4185c0e), [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11), [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895)]:
  - @ckb-ccc/core@0.0.13-alpha.7

## 0.0.13-alpha.6

### Patch Changes

- [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): completeInputs

- Updated dependencies [[`69c10fd`](https://github.com/ckb-devrel/ccc/commit/69c10fdfcd507433c13b15d17015dca4687afb97), [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b)]:
  - @ckb-ccc/core@0.0.13-alpha.6

## 0.0.13-alpha.5

### Patch Changes

- [`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): recordCells should not add usableCells

- Updated dependencies [[`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97)]:
  - @ckb-ccc/core@0.0.13-alpha.5

## 0.0.13-alpha.4

### Patch Changes

- [`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): node.js websocket

- Updated dependencies [[`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f), [`642f731`](https://github.com/ckb-devrel/ccc/commit/642f7317f4951ef801f1245aea96c40b4b6fb73e)]:
  - @ckb-ccc/core@0.0.13-alpha.4

## 0.0.13-alpha.3

### Patch Changes

- Updated dependencies [[`1f999f8`](https://github.com/ckb-devrel/ccc/commit/1f999f854beb255b3cd9dbbc5a7268e75442b3db)]:
  - @ckb-ccc/core@0.0.13-alpha.3

## 0.0.13-alpha.2

### Patch Changes

- Updated dependencies [[`96dbb61`](https://github.com/ckb-devrel/ccc/commit/96dbb6107d2071b9383350ddd578557746227054)]:
  - @ckb-ccc/core@0.0.13-alpha.2

## 0.0.13-alpha.1

### Patch Changes

- Updated dependencies [[`3378e85`](https://github.com/ckb-devrel/ccc/commit/3378e85b32797f5cdc1943b9ecaca1fd1d9fad5e), [`a69a9dc`](https://github.com/ckb-devrel/ccc/commit/a69a9dc0c722f7b4cfa36b2ae8ecba4dcde0db90)]:
  - @ckb-ccc/core@0.0.13-alpha.1

## 0.0.13-alpha.0

### Patch Changes

- Updated dependencies [[`600cc13`](https://github.com/ckb-devrel/ccc/commit/600cc137ac6eb7c5b2533670de6df29d82f1b9e1)]:
  - @ckb-ccc/core@0.0.13-alpha.0

## 0.0.12

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/core@0.0.12


================================================
File: packages/eip6963/eslint.config.mjs
================================================
// @ts-check

import eslint from "@eslint/js";
import eslintPluginPrettierRecommended from "eslint-plugin-prettier/recommended";
import tseslint from "typescript-eslint";

import { dirname } from "path";
import { fileURLToPath } from "url";

export default [
  ...tseslint.config({
    files: ["**/*.ts"],
    extends: [
      eslint.configs.recommended,
      ...tseslint.configs.recommendedTypeChecked,
    ],
    rules: {
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          args: "all",
          argsIgnorePattern: "^_",
          caughtErrors: "all",
          caughtErrorsIgnorePattern: "^_",
          destructuredArrayIgnorePattern: "^_",
          varsIgnorePattern: "^_",
          ignoreRestSiblings: true,
        },
      ],
      "@typescript-eslint/unbound-method": ["error", { ignoreStatic: true }],
      "@typescript-eslint/no-unsafe-member-access": "off",
      "@typescript-eslint/require-await": "off",
      "no-empty": "off",
      "prefer-const": [
        "error",
        { ignoreReadBeforeAssign: true, destructuring: "all" },
      ],
    },
    languageOptions: {
      parserOptions: {
        project: true,
        tsconfigRootDir: dirname(fileURLToPath(import.meta.url)),
      },
    },
  }),
  eslintPluginPrettierRecommended,
];


================================================
File: packages/eip6963/package.json
================================================
{
  "name": "@ckb-ccc/eip6963",
  "version": "1.0.11",
  "description": "CCC - CKBer's Codebase. Common Chains Connector's support for EIP6963",
  "author": "Hanssen0 <hanssen0@hanssen0.com>",
  "license": "MIT",
  "private": false,
  "homepage": "https://github.com/ckb-devrel/ccc",
  "repository": {
    "type": "git",
    "url": "git://github.com/ckb-devrel/ccc.git"
  },
  "sideEffects": false,
  "main": "dist.commonjs/index.js",
  "module": "dist/index.js",
  "exports": {
    ".": {
      "import": "./dist/index.js",
      "require": "./dist.commonjs/index.js",
      "default": "./dist.commonjs/index.js"
    },
    "./advanced": {
      "import": "./dist/advanced.js",
      "require": "./dist.commonjs/advanced.js",
      "default": "./dist.commonjs/advanced.js"
    }
  },
  "scripts": {
    "build": "rimraf ./dist && rimraf ./dist.commonjs && tsc && tsc --project tsconfig.commonjs.json && copyfiles -u 2 misc/basedirs/**/* .",
    "lint": "eslint ./src",
    "format": "prettier --write . && eslint --fix ./src"
  },
  "devDependencies": {
    "@eslint/js": "^9.1.1",
    "copyfiles": "^2.4.1",
    "eslint": "^9.1.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.1.3",
    "prettier": "^3.2.5",
    "prettier-plugin-organize-imports": "^3.2.4",
    "rimraf": "^5.0.5",
    "typescript": "^5.4.5",
    "typescript-eslint": "^7.7.0"
  },
  "publishConfig": {
    "access": "public"
  },
  "dependencies": {
    "@ckb-ccc/core": "workspace:*"
  }
}


================================================
File: packages/eip6963/tsconfig.base.json
================================================
{
  "compilerOptions": {
    "target": "es2020",
    "incremental": true,
    "allowJs": true,
    "importHelpers": false,
    "declaration": true,
    "declarationMap": true,
    "experimentalDecorators": true,
    "useDefineForClassFields": false,
    "esModuleInterop": true,
    "strict": true,
    "noImplicitAny": true,
    "strictBindCallApply": true,
    "strictNullChecks": true,
    "alwaysStrict": true,
    "noFallthroughCasesInSwitch": true,
    "forceConsistentCasingInFileNames": true,
    "skipLibCheck": true
  },
  "include": ["src/**/*"]
}


================================================
File: packages/eip6963/tsconfig.commonjs.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "NodeNext",
    "moduleResolution": "NodeNext",
    "outDir": "./dist.commonjs"
  }
}


================================================
File: packages/eip6963/tsconfig.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "ESNext",
    "moduleResolution": "Bundler",
    "outDir": "./dist",
  }
}


================================================
File: packages/eip6963/typedoc.json
================================================
{
  "$schema": "https://typedoc.org/schema.json",
  "entryPoints": ["./src/index.ts", "./src/advanced.ts"],
  "extends": ["../../typedoc.base.json"],
  "name": "@ckb-ccc eip6963"
}


================================================
File: packages/eip6963/.npmignore
================================================
node_modules/
misc/

*test.js
*test.ts
*test.d.ts
*test.d.ts.map
*spec.js
*spec.ts
*spec.d.ts
*spec.d.ts.map

tsconfig.json
tsconfig.*.json
eslint.config.mjs
.prettierrc
.prettierignore

tsconfig.tsbuildinfo
tsconfig.*.tsbuildinfo
.github/


================================================
File: packages/eip6963/.prettierignore
================================================
node_modules/

dist/
dist.commonjs/

.npmignore
.prettierrc
tsconfig.json
eslint.config.mjs
.prettierrc

tsconfig.tsbuildinfo
.github/


================================================
File: packages/eip6963/.prettierrc
================================================
{
  "singleQuote": false,
  "trailingComma": "all",
  "plugins": ["prettier-plugin-organize-imports"]
}


================================================
File: packages/eip6963/misc/basedirs/dist/package.json
================================================
{
  "type": "module"
}

================================================
File: packages/eip6963/misc/basedirs/dist.commonjs/package.json
================================================
{
  "type": "commonjs"
}


================================================
File: packages/eip6963/src/advanced.ts
================================================
export * as Eip1193A from "./eip1193.advanced.js";
export * as Eip6963A from "./eip6963.advanced.js";


================================================
File: packages/eip6963/src/barrel.ts
================================================
export * from "./signer.js";
export * from "./signersFactory.js";


================================================
File: packages/eip6963/src/eip1193.advanced.ts
================================================
import { Hex } from "@ckb-ccc/core";

/**
 * Interface representing a provider for interacting with Ethereum-compatible wallets.
 */
export interface Provider {
  /**
   * Sends a request to the provider.
   */
  request: RequestMethod;

  /**
   * Adds an event listener to the provider.
   */
  on: OnMethod;

  /**
   * Removes an event listener from the provider.
   * @param eventName - The name of the event to remove the listener from.
   * @param listener - The listener function to remove.
   * @returns The provider instance.
   */
  removeListener(
    eventName: string,
    listener: (...args: unknown[]) => unknown,
  ): Provider;
}

/**
 * Interface representing a method to send requests to the provider.
 */
export interface RequestMethod {
  /**
   * Signs a message with the personal account.
   * @param request - The request object.
   * @returns A promise that resolves to the signed message.
   */
  (request: { method: "personal_sign"; params: [string, Hex] }): Promise<Hex>;

  /**
   * Requests the accounts from the provider.
   * @param request - The request object.
   * @returns A promise that resolves to an array of account addresses.
   */
  (request: {
    method: "eth_requestAccounts";
    params?: undefined;
  }): Promise<Hex[]>;

  /**
   * Gets the accounts from the provider.
   * @param request - The request object.
   * @returns A promise that resolves to an array of account addresses.
   */
  (request: { method: "eth_accounts"; params?: undefined }): Promise<Hex[]>;

  /**
   * Sends a generic request to the provider.
   * @param request - The request object.
   * @returns A promise that resolves to the response from the provider.
   */
  (request: {
    method: string;
    params?: Array<unknown> | Record<string, unknown>;
  }): Promise<unknown>;
}

/**
 * Interface representing a method to add event listeners to the provider.
 */
export interface OnMethod {
  /**
   * Adds an event listener to the provider.
   * @param eventName - The name of the event.
   * @param listener - The listener function.
   * @returns The provider instance.
   */
  (eventName: string, listener: (...args: unknown[]) => unknown): Provider;
}


================================================
File: packages/eip6963/src/eip6963.advanced.ts
================================================
import { Provider as EIP1193Provider } from "./eip1193.advanced.js";

/**
 * Interface representing an event announcing a provider.
 */
export interface AnnounceProviderEvent {
  /**
   * The detail of the provider.
   */
  detail: ProviderDetail;
}

/**
 * Interface representing the details of a provider.
 */
export interface ProviderDetail {
  /**
   * The information about the provider.
   */
  info: ProviderInfo;

  /**
   * The provider instance compliant with EIP-1193.
   */
  provider: EIP1193Provider;
}

/**
 * Interface representing information about a provider.
 */
export interface ProviderInfo {
  /**
   * The reverse DNS name of the provider.
   */
  rdns: string;

  /**
   * The UUID of the provider.
   */
  uuid: string;

  /**
   * The name of the provider.
   */
  name: string;

  /**
   * The icon URL of the provider.
   */
  icon: string;
}


================================================
File: packages/eip6963/src/index.ts
================================================
export * as Eip6963 from "./barrel.js";


================================================
File: packages/eip6963/src/signer.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { Provider } from "./eip1193.advanced.js";

/**
 * Class representing an EVM signer that extends SignerEvm
 * @public
 */
export class Signer extends ccc.SignerEvm {
  private accountCache?: ccc.Hex = undefined;

  /**
   * Creates an instance of Signer.
   * @param client - The client instance.
   * @param provider - The provider.
   */
  constructor(
    client: ccc.Client,
    public readonly provider: Provider,
  ) {
    super(client);
  }

  /**
   * Gets the EVM account address.
   * @returns A promise that resolves to the EVM account address.
   */
  async getEvmAccount(): Promise<ccc.Hex> {
    this.accountCache = (
      await this.provider.request({ method: "eth_accounts" })
    )[0];
    return this.accountCache;
  }

  /**
   * Connects to the provider by requesting accounts.
   * @returns A promise that resolves when the connection is established.
   */
  async connect(): Promise<void> {
    await this.provider.request({ method: "eth_requestAccounts" });
  }

  onReplaced(listener: () => void): () => void {
    const stop: (() => void)[] = [];
    const replacer = async () => {
      listener();
      stop[0]?.();
    };
    stop.push(() => {
      this.provider.removeListener("accountsChanged", replacer);
      this.provider.removeListener("disconnect", replacer);
    });

    this.provider.on("accountsChanged", replacer);
    this.provider.on("disconnect", replacer);

    return stop[0];
  }

  /**
   * Checks if the provider is connected.
   * @returns A promise that resolves to true if connected, false otherwise.
   */
  async isConnected(): Promise<boolean> {
    return (
      (await this.provider.request({ method: "eth_accounts" })).length !== 0
    );
  }

  /**
   * Signs a raw message with the personal account.
   * @param message - The message to sign.
   * @returns A promise that resolves to the signed message.
   */
  async signMessageRaw(message: string | ccc.BytesLike): Promise<ccc.Hex> {
    const challenge =
      typeof message === "string" ? ccc.bytesFrom(message, "utf8") : message;

    const account = this.accountCache ?? (await this.getEvmAccount());

    return this.provider.request({
      method: "personal_sign",
      params: [ccc.hexFrom(challenge), account],
    });
  }
}


================================================
File: packages/eip6963/src/signersFactory.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { Provider } from "./eip1193.advanced.js";
import {
  AnnounceProviderEvent as EIP6963AnnounceProviderEvent,
  ProviderDetail,
} from "./eip6963.advanced.js";
import { Signer } from "./signer.js";

/**
 * Class representing a factory for creating and managing Signer instances.
 * @public
 */
export class SignerFactory {
  private readonly existedUuids: string[] = [];

  /**
   * Creates an instance of SignerFactory.
   * @param client - The client instance.
   */
  constructor(private readonly client: ccc.Client) {}

  /**
   * Subscribes to new signers and triggers a callback when a new signer is available.
   * @param callback - The callback to trigger with the new signer.
   * @returns A function to unsubscribe from the signer events.
   */
  subscribeSigners(
    callback: (newSigner: Signer, detail?: ProviderDetail) => unknown,
  ): () => void {
    const onNewProvider = (event: Event) => {
      const { detail } = event as unknown as EIP6963AnnounceProviderEvent;
      const { uuid } = detail.info;

      if (this.existedUuids.includes(uuid)) {
        return;
      }

      this.existedUuids.push(uuid);
      const signer = new Signer(this.client, detail.provider);
      callback(signer, detail);
    };

    window.addEventListener("eip6963:announceProvider", onNewProvider);
    window.dispatchEvent(new Event("eip6963:requestProvider"));

    const windowRef = window as { ethereum?: Provider };

    if (typeof windowRef.ethereum !== "undefined") {
      callback(new Signer(this.client, windowRef.ethereum));
    }

    return () =>
      window.removeEventListener("eip6963:announceProvider", onNewProvider);
  }
}


================================================
File: packages/examples/CHANGELOG.md
================================================
# @ckb-ccc/examples

## 1.0.11

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.1.3

## 1.0.10

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.1.2

## 1.0.9

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.1.1

## 1.0.8

### Patch Changes

- Updated dependencies [[`8c97c85`](https://github.com/ckb-devrel/ccc/commit/8c97c851db4a2d940c7e59116ca7620cfd0afae1)]:
  - @ckb-ccc/ccc@1.1.0

## 1.0.7

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.0.7

## 1.0.6

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.0.6

## 1.0.5

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.0.5

## 1.0.4

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.0.4

## 1.0.3

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.0.3

## 1.0.2

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.0.2

## 1.0.1

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.0.1

## 1.0.0

### Major Changes

- [#107](https://github.com/ckb-devrel/ccc/pull/107) [`b99f55f`](https://github.com/ckb-devrel/ccc/commit/b99f55f74e64106391ce53f7d0bd0fa7522023cc) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: molecule

### Patch Changes

- Updated dependencies [[`b99f55f`](https://github.com/ckb-devrel/ccc/commit/b99f55f74e64106391ce53f7d0bd0fa7522023cc)]:
  - @ckb-ccc/ccc@1.0.0

## 0.0.4

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@0.0.18

## 0.0.3

### Patch Changes

- Updated dependencies [[`d9affcc`](https://github.com/ckb-devrel/ccc/commit/d9affcc01c7b839b227e4d79bcb66e717577502a)]:
  - @ckb-ccc/ccc@0.0.17

## 0.0.2

### Patch Changes

- Updated dependencies [[`8824ff2`](https://github.com/ckb-devrel/ccc/commit/8824ff27af3b76186f1a7d6db8c907cd66f09d6a), [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366), [`e63a06e`](https://github.com/ckb-devrel/ccc/commit/e63a06ee75ac8595208d216dec88a4228c465e23), [`c092988`](https://github.com/ckb-devrel/ccc/commit/c092988e7765b9ac79498d6bd72a6a2f62859b6f), [`e904963`](https://github.com/ckb-devrel/ccc/commit/e904963a16f12c410d861eb3ae01b87d68cb3e34)]:
  - @ckb-ccc/ccc@0.0.16

## 0.0.2-alpha.3

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@0.0.16-alpha.9

## 0.0.2-alpha.2

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@0.0.16-alpha.8

## 0.0.2-alpha.1

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@0.0.16-alpha.7

## 0.0.2-alpha.0

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@0.0.16-alpha.6


================================================
File: packages/examples/eslint.config.mjs
================================================
// @ts-check

import eslint from "@eslint/js";
import eslintPluginPrettierRecommended from "eslint-plugin-prettier/recommended";
import tseslint from "typescript-eslint";

import { dirname } from "path";
import { fileURLToPath } from "url";

export default [
  ...tseslint.config({
    files: ["**/*.ts"],
    extends: [
      eslint.configs.recommended,
      ...tseslint.configs.recommendedTypeChecked,
    ],
    rules: {
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          args: "all",
          argsIgnorePattern: "^_",
          caughtErrors: "all",
          caughtErrorsIgnorePattern: "^_",
          destructuredArrayIgnorePattern: "^_",
          varsIgnorePattern: "^_",
          ignoreRestSiblings: true,
        },
      ],
      "@typescript-eslint/unbound-method": ["error", { ignoreStatic: true }],
      "@typescript-eslint/no-unsafe-member-access": "off",
      "@typescript-eslint/require-await": "off",
      "no-empty": "off",
      "prefer-const": [
        "error",
        { ignoreReadBeforeAssign: true, destructuring: "all" },
      ],
    },
    languageOptions: {
      parserOptions: {
        project: true,
        tsconfigRootDir: dirname(fileURLToPath(import.meta.url)),
      },
    },
  }),
  eslintPluginPrettierRecommended,
];


================================================
File: packages/examples/package.json
================================================
{
  "name": "@ckb-ccc/examples",
  "version": "1.0.11",
  "description": "CCC code examples for CCC Playground",
  "author": "Hanssen0 <hanssen0@hanssen0.com>",
  "license": "MIT",
  "private": true,
  "homepage": "https://github.com/ckb-devrel/ccc",
  "repository": {
    "type": "git",
    "url": "git://github.com/ckb-devrel/ccc.git"
  },
  "scripts": {
    "build": "rimraf ./dist && tsc",
    "lint": "eslint ./src",
    "format": "prettier --write . && eslint --fix ./src"
  },
  "devDependencies": {
    "@eslint/js": "^9.1.1",
    "eslint": "^9.1.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.1.3",
    "rimraf": "^5.0.5",
    "prettier": "^3.2.5",
    "prettier-plugin-organize-imports": "^3.2.4",
    "typescript": "^5.4.5",
    "typescript-eslint": "^7.7.0"
  },
  "publishConfig": {
    "access": "public"
  },
  "dependencies": {
    "@ckb-ccc/ccc": "workspace:*",
    "@ckb-ccc/playground": "file:./src/playground"
  }
}


================================================
File: packages/examples/tsconfig.base.json
================================================
{
  "compilerOptions": {
    "target": "es2020",
    "incremental": true,
    "allowJs": true,
    "importHelpers": false,
    "declaration": true,
    "declarationMap": true,
    "experimentalDecorators": true,
    "useDefineForClassFields": false,
    "esModuleInterop": true,
    "strict": true,
    "noImplicitAny": true,
    "strictBindCallApply": true,
    "strictNullChecks": true,
    "alwaysStrict": true,
    "noFallthroughCasesInSwitch": true,
    "forceConsistentCasingInFileNames": true,
    "skipLibCheck": true
  },
  "include": ["src/**/*"]
}


================================================
File: packages/examples/tsconfig.commonjs.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "NodeNext",
    "moduleResolution": "NodeNext",
    "outDir": "./dist.commonjs"
  }
}


================================================
File: packages/examples/tsconfig.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "ESNext",
    "moduleResolution": "Bundler",
    "outDir": "./dist",
  }
}


================================================
File: packages/examples/.prettierignore
================================================
node_modules/

dist/
dist.commonjs/

.npmignore
.prettierrc
tsconfig.json
eslint.config.mjs
.prettierrc

tsconfig.tsbuildinfo
.github/


================================================
File: packages/examples/.prettierrc
================================================
{
  "singleQuote": false,
  "trailingComma": "all",
  "plugins": ["prettier-plugin-organize-imports"]
}


================================================
File: packages/examples/src/customUi.ts
================================================
import { ccc } from "@ckb-ccc/ccc";
import { client } from "@ckb-ccc/playground";

// For full supported wallets list, check https://docs.ckbccc.com/
const signer = new ccc.JoyId.CkbSigner(client, "CCC", "https://fav.farm/🇨");

// Connect signer
await signer.connect();
console.log("Connected");

// Sign an empty transaction as test
const signature = await signer.signTransaction({});
console.log(signature);


================================================
File: packages/examples/src/customUiWithController.ts
================================================
import { ccc } from "@ckb-ccc/ccc";
import { client } from "@ckb-ccc/playground";

const controller = new ccc.SignersController();
let wallets: ccc.WalletWithSigners[] | undefined;

// Fetch all available signers
await controller.refresh(client, (w) => (wallets = w));
if (!wallets) {
  throw new Error("Unexpected not wallets");
}
wallets.forEach((wallet) => {
  console.log(
    wallet.name,
    wallet.signers.map(({ name }) => name),
  );
});

const signer = wallets[0].signers[0].signer;

// Connect signer
await signer.connect();
console.log("Connected");

// Sign message as test
const signature = await signer.signMessage("Hello world");
console.log(signature);


================================================
File: packages/examples/src/sign.ts
================================================
import { ccc } from "@ckb-ccc/ccc";
import { client, signer as playgroundSigner } from "@ckb-ccc/playground";

// The default signer can not sign message
// Create a new one when needed
const signer: ccc.Signer =
  playgroundSigner instanceof ccc.SignerCkbPublicKey
    ? new ccc.SignerCkbPrivateKey(client, "01".repeat(32))
    : playgroundSigner;
const message = "Hello world";

// Sign message
const signature = await signer.signMessage("Hello world");
console.log(signature);

console.log(
  `Verification should pass: ${await ccc.Signer.verifyMessage(message, signature)}`,
);
console.log(
  `Verification should fail: ${await ccc.Signer.verifyMessage("Wrong message", signature)}`,
);


================================================
File: packages/examples/src/transfer.ts
================================================
import { ccc } from "@ckb-ccc/ccc";
import { render, signer } from "@ckb-ccc/playground";

// The receiver is the signer itself on mainnet
const receiver = await signer.getRecommendedAddress();
console.log(receiver);

// Parse the receiver script from an address
const { script: lock } = await ccc.Address.fromString(receiver, signer.client);

// Describe what we want
const tx = ccc.Transaction.from({
  outputs: [{ capacity: ccc.fixedPointFrom(100), lock }],
});
await render(tx);

// Complete missing parts: Fill inputs
await tx.completeInputsByCapacity(signer);
await render(tx);

// Complete missing parts: Pay fee
await tx.completeFeeBy(signer);
await render(tx);


================================================
File: packages/examples/src/transferAll.ts
================================================
import { ccc } from "@ckb-ccc/ccc";
import { render, signer } from "@ckb-ccc/playground";

// The receiver is the signer itself on mainnet
const receiver = await signer.getRecommendedAddress();
console.log(receiver);

// Parse the receiver script from an address
const { script: lock } = await ccc.Address.fromString(receiver, signer.client);

// Describe what we want
const tx = ccc.Transaction.from({
  outputs: [{ lock }],
});
await render(tx);

// Complete missing parts: Collect all cells as inputs
await tx.completeInputsAll(signer);
await render(tx);

// Complete missing parts: Pay fee and collect all CKB to the first output
await tx.completeFeeChangeToOutput(signer, 0);
await render(tx);


================================================
File: packages/examples/src/transferUdt.ts
================================================
import { ccc } from "@ckb-ccc/ccc";
import { render, signer } from "@ckb-ccc/playground";

// Prepare the UDT trait
const type = await ccc.Script.fromKnownScript(
  signer.client,
  ccc.KnownScript.XUdt,
  "0xf8f94a13dfe1b87c10312fb9678ab5276eefbe1e0b2c62b4841b1f393494eff2",
);
const code = (
  await signer.client.getCellDeps(
    (await signer.client.getKnownScript(ccc.KnownScript.XUdt)).cellDeps,
  )
)[0].outPoint;

const udt = new ccc.udt.Udt(code, type);

// The receiver is the signer itself
const receiver = await signer.getRecommendedAddress();
console.log(receiver);

// Parse the receiver script from an address
const { script: lock } = await ccc.Address.fromString(receiver, signer.client);

// Describe what we want: 1UDT to receiver
let { res: tx } = await udt.transfer(signer, [
  { to: lock, amount: ccc.fixedPointFrom(1) },
]);
await render(tx);

// Complete missing parts: Fill UDT inputs
tx = await udt.completeBy(tx, signer);
await render(tx);

// Complete missing parts: Fill inputs
await tx.completeInputsByCapacity(signer);
await render(tx);

// Complete missing parts: Pay fee
await tx.completeFeeBy(signer);
await render(tx);


================================================
File: packages/examples/src/playground/index.d.ts
================================================
import { ccc } from "@ckb-ccc/ccc";

export function render(tx: ccc.Transaction): Promise<void>;
export const signer: ccc.Signer;
export const client: ccc.Client;


================================================
File: packages/faucet/README.md
================================================
<p align="center">
  <a href="http://nestjs.com/" target="blank"><img src="https://nestjs.com/img/logo-small.svg" width="200" alt="Nest Logo" /></a>
</p>

[circleci-image]: https://img.shields.io/circleci/build/github/nestjs/nest/master?token=abc123def456
[circleci-url]: https://circleci.com/gh/nestjs/nest

  <p align="center">A progressive <a href="http://nodejs.org" target="_blank">Node.js</a> framework for building efficient and scalable server-side applications.</p>
    <p align="center">
<a href="https://www.npmjs.com/~nestjscore" target="_blank"><img src="https://img.shields.io/npm/v/@nestjs/core.svg" alt="NPM Version" /></a>
<a href="https://www.npmjs.com/~nestjscore" target="_blank"><img src="https://img.shields.io/npm/l/@nestjs/core.svg" alt="Package License" /></a>
<a href="https://www.npmjs.com/~nestjscore" target="_blank"><img src="https://img.shields.io/npm/dm/@nestjs/common.svg" alt="NPM Downloads" /></a>
<a href="https://circleci.com/gh/nestjs/nest" target="_blank"><img src="https://img.shields.io/circleci/build/github/nestjs/nest/master" alt="CircleCI" /></a>
<a href="https://coveralls.io/github/nestjs/nest?branch=master" target="_blank"><img src="https://coveralls.io/repos/github/nestjs/nest/badge.svg?branch=master#9" alt="Coverage" /></a>
<a href="https://discord.gg/G7Qnnhy" target="_blank"><img src="https://img.shields.io/badge/discord-online-brightgreen.svg" alt="Discord"/></a>
<a href="https://opencollective.com/nest#backer" target="_blank"><img src="https://opencollective.com/nest/backers/badge.svg" alt="Backers on Open Collective" /></a>
<a href="https://opencollective.com/nest#sponsor" target="_blank"><img src="https://opencollective.com/nest/sponsors/badge.svg" alt="Sponsors on Open Collective" /></a>
  <a href="https://paypal.me/kamilmysliwiec" target="_blank"><img src="https://img.shields.io/badge/Donate-PayPal-ff3f59.svg"/></a>
    <a href="https://opencollective.com/nest#sponsor"  target="_blank"><img src="https://img.shields.io/badge/Support%20us-Open%20Collective-41B883.svg" alt="Support us"></a>
  <a href="https://twitter.com/nestframework" target="_blank"><img src="https://img.shields.io/twitter/follow/nestframework.svg?style=social&label=Follow"></a>
</p>
  <!--[![Backers on Open Collective](https://opencollective.com/nest/backers/badge.svg)](https://opencollective.com/nest#backer)
  [![Sponsors on Open Collective](https://opencollective.com/nest/sponsors/badge.svg)](https://opencollective.com/nest#sponsor)-->

## Description

[Nest](https://github.com/nestjs/nest) framework TypeScript starter repository.

## Installation

```bash
$ pnpm install
```

## Running the app

```bash
# development
$ pnpm run start

# watch mode
$ pnpm run start:dev

# production mode
$ pnpm run start:prod
```

## Test

```bash
# unit tests
$ pnpm run test

# e2e tests
$ pnpm run test:e2e

# test coverage
$ pnpm run test:cov
```

## Support

Nest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please [read more here](https://docs.nestjs.com/support).

## Stay in touch

- Author - [Kamil Myśliwiec](https://kamilmysliwiec.com)
- Website - [https://nestjs.com](https://nestjs.com/)
- Twitter - [@nestframework](https://twitter.com/nestframework)

## License

Nest is [MIT licensed](LICENSE).


================================================
File: packages/faucet/nest-cli.json
================================================
{
  "$schema": "https://json.schemastore.org/nest-cli",
  "collection": "@nestjs/schematics",
  "sourceRoot": "src",
  "compilerOptions": {
    "deleteOutDir": true,
    "webpack": true
  },
  "projects": {
    "tap": {
      "type": "library",
      "root": "libs/tap",
      "entryFile": "index",
      "sourceRoot": "libs/tap/src",
      "compilerOptions": {
        "tsConfigPath": "libs/tap/tsconfig.lib.json"
      }
    },
    "commons": {
      "type": "library",
      "root": "libs/commons",
      "entryFile": "index",
      "sourceRoot": "libs/commons/src",
      "compilerOptions": {
        "tsConfigPath": "libs/commons/tsconfig.lib.json"
      }
    }
  }
}

================================================
File: packages/faucet/package.json
================================================
{
  "name": "@ckb-ccc/faucet",
  "version": "0.0.1",
  "private": true,
  "homepage": "https://github.com/ckb-devrel/ccc",
  "repository": {
    "type": "git",
    "url": "git://github.com/ckb-devrel/ccc.git"
  },
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"libs/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\"",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json"
  },
  "dependencies": {
    "@ckb-ccc/core": "workspace:*",
    "@nestjs/common": "^10.0.0",
    "@nestjs/config": "^3.2.3",
    "@nestjs/core": "^10.0.0",
    "@nestjs/platform-express": "^10.0.0",
    "@scure/bip32": "^1.4.0",
    "@scure/bip39": "^1.3.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "js-yaml": "^4.1.0",
    "reflect-metadata": "^0.2.0",
    "rxjs": "^7.8.1"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.5.2",
    "@types/js-yaml": "^4.0.9",
    "@types/node": "^20.3.1",
    "@types/supertest": "^6.0.0",
    "@typescript-eslint/eslint-plugin": "^7.0.0",
    "@typescript-eslint/parser": "^7.0.0",
    "eslint": "^8.42.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.0",
    "jest": "^29.5.0",
    "prettier": "^3.0.0",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": ".",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "./coverage",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/src/",
      "<rootDir>/libs/"
    ],
    "moduleNameMapper": {
      "^@app/tap(|/.*)$": "<rootDir>/libs/tap/src/$1",
      "^@app/commons(|/.*)$": "<rootDir>/libs/commons/src/$1"
    }
  }
}

================================================
File: packages/faucet/tsconfig.build.json
================================================
{
  "extends": "./tsconfig.json",
  "exclude": ["node_modules", "test", "dist", "**/*spec.ts"]
}


================================================
File: packages/faucet/tsconfig.json
================================================
{
  "compilerOptions": {
    "module": "commonjs",
    "declaration": true,
    "removeComments": true,
    "emitDecoratorMetadata": true,
    "experimentalDecorators": true,
    "allowSyntheticDefaultImports": true,
    "target": "ES2021",
    "sourceMap": true,
    "outDir": "./dist",
    "baseUrl": "./",
    "incremental": true,
    "skipLibCheck": true,
    "strictNullChecks": true,
    "noImplicitAny": true,
    "strictBindCallApply": true,
    "forceConsistentCasingInFileNames": true,
    "noFallthroughCasesInSwitch": true,
    "paths": {
      "@app/tap": [
        "libs/tap/src"
      ],
      "@app/tap/*": [
        "libs/tap/src/*"
      ],
      "@app/commons": [
        "libs/commons/src"
      ],
      "@app/commons/*": [
        "libs/commons/src/*"
      ]
    }
  }
}

================================================
File: packages/faucet/.eslintrc.js
================================================
module.exports = {
  parser: "@typescript-eslint/parser",
  parserOptions: {
    project: "tsconfig.json",
    tsconfigRootDir: __dirname,
    sourceType: "module",
  },
  plugins: ["@typescript-eslint/eslint-plugin"],
  extends: [
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended",
  ],
  root: true,
  env: {
    node: true,
    jest: true,
  },
  ignorePatterns: [".eslintrc.js"],
  rules: {
    "@typescript-eslint/interface-name-prefix": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
  },
};


================================================
File: packages/faucet/.gitignore
================================================
# compiled output
/dist
/node_modules
/build

# Logs
logs
*.log
npm-debug.log*
pnpm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# OS
.DS_Store

# Tests
/coverage
/.nyc_output

# IDEs and editors
/.idea
.project
.classpath
.c9/
*.launch
.settings/
*.sublime-workspace

# IDE - VSCode
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json

# dotenv environment variable files
.env
.env.development.local
.env.test.local
.env.production.local
.env.local

# temp directory
.temp
.tmp

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json


================================================
File: packages/faucet/.prettierignore
================================================
node_modules/

dist/
dist.commonjs/

.npmignore
.prettierrc
tsconfig.json
eslint.config.mjs
.prettierrc

tsconfig.tsbuildinfo
.github/


================================================
File: packages/faucet/.prettierrc
================================================
{
  "singleQuote": false,
  "trailingComma": "all",
  "plugins": ["prettier-plugin-organize-imports"]
}


================================================
File: packages/faucet/config/config.yaml
================================================
port: 8080

server_mnemonic: zebra chalk pitch middle odor defense debris void blind emerge never fade
hd_path_prefix: m/44'/309'/0'/0/
fee_rate: 1000

================================================
File: packages/faucet/libs/commons/tsconfig.lib.json
================================================
{
  "extends": "../../tsconfig.json",
  "compilerOptions": {
    "declaration": true,
    "outDir": "../../dist/libs/commons"
  },
  "include": ["src/**/*"],
  "exclude": ["node_modules", "dist", "test", "**/*spec.ts"]
}


================================================
File: packages/faucet/libs/commons/src/config.ts
================================================
import { readFileSync } from "fs";
import * as yaml from "js-yaml";
import { join } from "path";

function configPath() {
  switch (process.env.NODE_ENV) {
    case "production":
      return "/config/config.production.yaml";
    case "development":
      return "/config/config.development.yaml";
    case "local":
      return "/config/config.local.yaml";
    default:
      return "/config/config.yaml";
  }
}

export function loadConfig() {
  return yaml.load(
    readFileSync(join(process.cwd(), configPath()), "utf8"),
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
  ) as Record<string, any>;
}


================================================
File: packages/faucet/libs/commons/src/index.ts
================================================
export * from "./config";


================================================
File: packages/faucet/libs/tap/tsconfig.lib.json
================================================
{
  "extends": "../../tsconfig.json",
  "compilerOptions": {
    "declaration": true,
    "outDir": "../../dist/libs/tap"
  },
  "include": ["src/**/*"],
  "exclude": ["node_modules", "dist", "test", "**/*spec.ts"]
}


================================================
File: packages/faucet/libs/tap/src/index.ts
================================================
export * from "./tap.module";
export * from "./tap.service";


================================================
File: packages/faucet/libs/tap/src/params.ts
================================================
import { IsNotEmpty, IsString } from "class-validator";

export class TapCkbParams {
  @IsString()
  @IsNotEmpty()
  address: string;

  @IsString()
  @IsNotEmpty()
  amount: string;
}


================================================
File: packages/faucet/libs/tap/src/tap.controller.ts
================================================
import { Controller, Get, Query } from "@nestjs/common";
import { TapCkbParams } from "./params";
import { TapService } from "./tap.service";

@Controller({
  path: "tap",
})
export class TapController {
  constructor(private readonly service: TapService) {}

  @Get("/ckb")
  async tapCkb(
    @Query()
    { address, amount }: TapCkbParams,
  ) {
    return this.service.tapCkb(address, amount);
  }
}


================================================
File: packages/faucet/libs/tap/src/tap.module.ts
================================================
import { Module } from "@nestjs/common";
import { TapController } from "./tap.controller";
import { TapService } from "./tap.service";

@Module({
  providers: [TapService],
  exports: [TapService],
  controllers: [TapController],
})
export class TapModule {}


================================================
File: packages/faucet/libs/tap/src/tap.service.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { Injectable, Logger } from "@nestjs/common";
import { ConfigService } from "@nestjs/config";
import { HDKey } from "@scure/bip32";
import { mnemonicToSeedSync } from "@scure/bip39";

@Injectable()
export class TapService {
  private readonly logger = new Logger(TapService.name);

  private readonly rootKey: HDKey;
  private readonly pathPrefix: string;
  private readonly feeRate: number;
  private readonly client = new ccc.ClientPublicTestnet();

  constructor(configService: ConfigService) {
    const mnemonic = configService.get<string>("server_mnemonic");
    if (!mnemonic) {
      throw Error("Missing mnemonic");
    }
    const feeRate = configService.get<number>("fee_rate");
    if (feeRate === undefined) {
      throw Error("Missing fee rate");
    }

    this.rootKey = HDKey.fromMasterSeed(mnemonicToSeedSync(mnemonic));
    this.pathPrefix = configService.get<string>("hd_path_prefix") ?? "";
    this.feeRate = feeRate;
  }

  async tapCkb(address: string, amount: string) {
    const key = this.rootKey.derive(`${this.pathPrefix}0`);
    if (!key.privateKey) {
      throw Error("Failed to derive key");
    }

    const signer = new ccc.SignerCkbPrivateKey(this.client, key.privateKey);
    this.logger.log(`Tap CKB: using ${await signer.getAddresses()}`);

    const tx = ccc.Transaction.from({
      outputs: [
        {
          capacity: ccc.fixedPointFrom(amount),
          lock: (await ccc.Address.fromString(address, this.client)).script,
        },
      ],
    });
    await tx.completeInputsByCapacity(signer);
    await tx.completeFeeBy(signer, this.feeRate);

    const hash = await signer.sendTransaction(tx);
    this.logger.log(`Tap CKB: ${address} tapped ${amount} on ${hash}`);
  }
}


================================================
File: packages/faucet/src/app.module.ts
================================================
import { loadConfig } from "@app/commons/config";
import { TapModule } from "@app/tap";
import { Module } from "@nestjs/common";
import { ConfigModule } from "@nestjs/config";

@Module({
  imports: [
    ConfigModule.forRoot({
      isGlobal: true,
      load: [loadConfig],
    }),
    TapModule,
  ],
})
export class AppModule {}


================================================
File: packages/faucet/src/main.ts
================================================
import { loadConfig } from "@app/commons";
import { Logger, ValidationPipe } from "@nestjs/common";
import { NestFactory } from "@nestjs/core";
import { AppModule } from "./app.module";

// eslint-disable-next-line @typescript-eslint/no-explicit-any
async function handleRoot(req: any, res: any, next: any) {
  if (req.url === "/") {
    return res.send("OK!");
  }

  next();
}

async function bootstrap() {
  const config = loadConfig();

  const app = await NestFactory.create(AppModule);
  app.useGlobalPipes(new ValidationPipe({ transform: true }));
  app.use(handleRoot);
  app.enableCors({
    origin: "*",
    methods: ["GET", "HEAD", "PUT", "PATCH", "POST", "DELETE", "OPTIONS"],
    credentials: true,
  });

  await app.listen(config.port, () =>
    Logger.log(`listening on ${config.port}`),
  );
}
bootstrap();


================================================
File: packages/joy-id/README.md
================================================
<p align="center">
  <a href="https://app.ckbccc.com/">
    <img alt="Logo" src="https://raw.githubusercontent.com/ckb-devrel/ccc/master/assets/logoAndText.svg" style="height: 8rem; max-width: 90%; padding: 0.5rem 0;" />
  </a>
</p>

<h1 align="center" style="font-size: 48px;">
  CCC's support for JoyID
</h1>

<p align="center">
  <a href="https://www.npmjs.com/package/@ckb-ccc/joy-id"><img
    alt="NPM Version" src="https://img.shields.io/npm/v/%40ckb-ccc%2Fjoy-id"
  /></a>
  <img alt="GitHub commit activity" src="https://img.shields.io/github/commit-activity/m/ckb-devrel/ccc" />
  <img alt="GitHub last commit" src="https://img.shields.io/github/last-commit/ckb-devrel/ccc/master" />
  <img alt="GitHub branch check runs" src="https://img.shields.io/github/check-runs/ckb-devrel/ccc/master" />
  <a href="https://live.ckbccc.com/"><img
    alt="Playground" src="https://img.shields.io/website?url=https%3A%2F%2Flive.ckbccc.com%2F&label=Playground"
  /></a>
  <a href="https://app.ckbccc.com/"><img
    alt="App" src="https://img.shields.io/website?url=https%3A%2F%2Fapp.ckbccc.com%2F&label=App"
  /></a>
  <a href="https://docs.ckbccc.com/"><img
    alt="Docs" src="https://img.shields.io/website?url=https%3A%2F%2Fdocs.ckbccc.com%2F&label=Docs"
  /></a>
</p>

<p align="center">
  CCC - CKBers' Codebase is a one-stop solution for your CKB JS/TS ecosystem development.
  <br />
  Empower yourself with CCC to discover the unlimited potential of CKB.
  <br />
  Interoperate with wallets from different chain ecosystems.
  <br />
  Fully enabling CKB's Turing completeness and cryptographic freedom power.
</p>

<h3 align="center">
  Read more about CCC on <a href="https://docs.ckbccc.com">our website</a> or <a href="https://github.com/ckb-devrel/ccc">GitHub Repo</a>.
</h3>


================================================
File: packages/joy-id/CHANGELOG.md
================================================
# @ckb-ccc/joy-id

## 1.0.11

### Patch Changes

- Updated dependencies [[`28c211d`](https://github.com/ckb-devrel/ccc/commit/28c211d839a2d2305eca56e82ba7da144aa3df4a)]:
  - @ckb-ccc/core@1.5.0

## 1.0.10

### Patch Changes

- Updated dependencies [[`3fdb2c4`](https://github.com/ckb-devrel/ccc/commit/3fdb2c477d0b2766b231e436b8f396f047b02634), [`f429087`](https://github.com/ckb-devrel/ccc/commit/f4290874dfab3fe58844e5169673c5d47bda64e3)]:
  - @ckb-ccc/core@1.4.0

## 1.0.9

### Patch Changes

- Updated dependencies [[`a48cccf`](https://github.com/ckb-devrel/ccc/commit/a48cccfae3ce6b3456a5eb863f207e7e5a6e568f)]:
  - @ckb-ccc/core@1.3.1

## 1.0.8

### Patch Changes

- Updated dependencies [[`4dbf4fd`](https://github.com/ckb-devrel/ccc/commit/4dbf4fd8021cf14d05282706a7667ea7d108fb09), [`4c76f9e`](https://github.com/ckb-devrel/ccc/commit/4c76f9e2a93a226fcfc4c32a5378bb531bfff08f), [`c2c4c26`](https://github.com/ckb-devrel/ccc/commit/c2c4c264e04461948e4b913b2f22054e6032ddc8), [`b6a73fa`](https://github.com/ckb-devrel/ccc/commit/b6a73fa9628ebdff51cb8f246309654cd53e36f2), [`8c97c85`](https://github.com/ckb-devrel/ccc/commit/8c97c851db4a2d940c7e59116ca7620cfd0afae1)]:
  - @ckb-ccc/core@1.3.0

## 1.0.7

### Patch Changes

- Updated dependencies [[`01263bd`](https://github.com/ckb-devrel/ccc/commit/01263bd8c601fa8fcdfa24be52601716e1864843)]:
  - @ckb-ccc/core@1.2.3

## 1.0.6

### Patch Changes

- Updated dependencies [[`7886e3d`](https://github.com/ckb-devrel/ccc/commit/7886e3d89e9ca8f3514a2044c6dd4e8ec6b49933)]:
  - @ckb-ccc/core@1.2.2

## 1.0.5

### Patch Changes

- Updated dependencies [[`94e2618`](https://github.com/ckb-devrel/ccc/commit/94e26182515e09d6086ec5b653d091f117a499e6)]:
  - @ckb-ccc/core@1.2.1

## 1.0.4

### Patch Changes

- Updated dependencies [[`128e87b`](https://github.com/ckb-devrel/ccc/commit/128e87b5ca3e97bfe7842e76f786aa6aec010797)]:
  - @ckb-ccc/core@1.2.0

## 1.0.3

### Patch Changes

- Updated dependencies [[`925991c`](https://github.com/ckb-devrel/ccc/commit/925991c8a24b1f34667e30b28b69812e936e3928)]:
  - @ckb-ccc/core@1.1.1

## 1.0.2

### Patch Changes

- Updated dependencies [[`ddc0a28`](https://github.com/ckb-devrel/ccc/commit/ddc0a281c3d1dfa6ebc990dae92994f026dfddcc)]:
  - @ckb-ccc/core@1.1.0

## 1.0.1

### Patch Changes

- Updated dependencies [[`719055b`](https://github.com/ckb-devrel/ccc/commit/719055b404f31b40362f51714b9f11c85b857581), [`94caaca`](https://github.com/ckb-devrel/ccc/commit/94caaca11c63752a25282d42f51161c94397dec6)]:
  - @ckb-ccc/core@1.0.1

## 1.0.0

### Major Changes

- [#107](https://github.com/ckb-devrel/ccc/pull/107) [`b99f55f`](https://github.com/ckb-devrel/ccc/commit/b99f55f74e64106391ce53f7d0bd0fa7522023cc) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: molecule

### Patch Changes

- Updated dependencies [[`b99f55f`](https://github.com/ckb-devrel/ccc/commit/b99f55f74e64106391ce53f7d0bd0fa7522023cc)]:
  - @ckb-ccc/core@1.0.0

## 0.0.18

### Patch Changes

- Updated dependencies [[`c1cb910`](https://github.com/ckb-devrel/ccc/commit/c1cb91091780c7b33fbbd683ef8edc9f11452ecd)]:
  - @ckb-ccc/core@0.1.2

## 0.0.17

### Patch Changes

- [#101](https://github.com/ckb-devrel/ccc/pull/101) [`d9affcc`](https://github.com/ckb-devrel/ccc/commit/d9affcc01c7b839b227e4d79bcb66e717577502a) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix: commonjs

- Updated dependencies [[`d9affcc`](https://github.com/ckb-devrel/ccc/commit/d9affcc01c7b839b227e4d79bcb66e717577502a)]:
  - @ckb-ccc/core@0.1.1

## 0.0.16

### Patch Changes

- [#70](https://github.com/ckb-devrel/ccc/pull/70) [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): websocket transport

- Updated dependencies [[`a3d5359`](https://github.com/ckb-devrel/ccc/commit/a3d53595f6dd11f2f59cdf0086b3d7ce558a2fdd), [`8824ff2`](https://github.com/ckb-devrel/ccc/commit/8824ff27af3b76186f1a7d6db8c907cd66f09d6a), [`f07a506`](https://github.com/ckb-devrel/ccc/commit/f07a506bd6fc27fe659a17d2f7baaeec54716d81), [`f21d7e4`](https://github.com/ckb-devrel/ccc/commit/f21d7e4cf422edab4a836ef6d678b620594fef8d), [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366), [`1720d5a`](https://github.com/ckb-devrel/ccc/commit/1720d5a398543f1c6e24763eeaf15d84cd2214bf), [`e63a06e`](https://github.com/ckb-devrel/ccc/commit/e63a06ee75ac8595208d216dec88a4228c465e23), [`c092988`](https://github.com/ckb-devrel/ccc/commit/c092988e7765b9ac79498d6bd72a6a2f62859b6f), [`50f2ce0`](https://github.com/ckb-devrel/ccc/commit/50f2ce08e74cb3fbeae926267d42e28b426fd7f4), [`4709384`](https://github.com/ckb-devrel/ccc/commit/4709384e37188991cb937b16f99f47ca82c912b8)]:
  - @ckb-ccc/core@0.1.0

## 0.0.16-alpha.7

### Patch Changes

- Updated dependencies [[`f07a506`](https://github.com/ckb-devrel/ccc/commit/f07a506bd6fc27fe659a17d2f7baaeec54716d81)]:
  - @ckb-ccc/core@0.1.0-alpha.7

## 0.0.16-alpha.6

### Patch Changes

- Updated dependencies [[`4709384`](https://github.com/ckb-devrel/ccc/commit/4709384e37188991cb937b16f99f47ca82c912b8)]:
  - @ckb-ccc/core@0.1.0-alpha.6

## 0.0.16-alpha.5

### Patch Changes

- Updated dependencies [[`50f2ce0`](https://github.com/ckb-devrel/ccc/commit/50f2ce08e74cb3fbeae926267d42e28b426fd7f4)]:
  - @ckb-ccc/core@0.1.0-alpha.5

## 0.0.16-alpha.4

### Patch Changes

- Updated dependencies [[`f21d7e4`](https://github.com/ckb-devrel/ccc/commit/f21d7e4cf422edab4a836ef6d678b620594fef8d)]:
  - @ckb-ccc/core@0.1.0-alpha.4

## 0.0.16-alpha.3

### Patch Changes

- Updated dependencies [[`a3d5359`](https://github.com/ckb-devrel/ccc/commit/a3d53595f6dd11f2f59cdf0086b3d7ce558a2fdd)]:
  - @ckb-ccc/core@0.0.16-alpha.3

## 0.0.16-alpha.2

### Patch Changes

- [#70](https://github.com/ckb-devrel/ccc/pull/70) [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): websocket transport

- Updated dependencies [[`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366)]:
  - @ckb-ccc/core@0.0.16-alpha.2

## 0.0.16-alpha.1

### Patch Changes

- Updated dependencies [[`8824ff2`](https://github.com/ckb-devrel/ccc/commit/8824ff27af3b76186f1a7d6db8c907cd66f09d6a), [`c092988`](https://github.com/ckb-devrel/ccc/commit/c092988e7765b9ac79498d6bd72a6a2f62859b6f)]:
  - @ckb-ccc/core@0.0.16-alpha.1

## 0.0.16-alpha.0

### Patch Changes

- Updated dependencies [[`1720d5a`](https://github.com/ckb-devrel/ccc/commit/1720d5a398543f1c6e24763eeaf15d84cd2214bf)]:
  - @ckb-ccc/core@0.0.16-alpha.0

## 0.0.15

### Patch Changes

- Updated dependencies [[`8f2560a`](https://github.com/ckb-devrel/ccc/commit/8f2560ab0e5619654fff7c5eacda8425385f908e)]:
  - @ckb-ccc/core@0.0.15

## 0.0.14

### Patch Changes

- Updated dependencies [[`5e942f8`](https://github.com/ckb-devrel/ccc/commit/5e942f8f1ed678abdb7ab9716f5449f0714cea53), [`f5b5938`](https://github.com/ckb-devrel/ccc/commit/f5b5938ab8f9c0a338dfd6765fe717f7ad1b1dd8), [`f13f4d3`](https://github.com/ckb-devrel/ccc/commit/f13f4d319ca66b571029a65e945e3a038bfeea25), [`7ba62a0`](https://github.com/ckb-devrel/ccc/commit/7ba62a056f17808fe5684786c00c2dff80bb7d1d), [`2164efd`](https://github.com/ckb-devrel/ccc/commit/2164efd6d834c1917ad5f4a514dc25941f937185), [`e5bd2ad`](https://github.com/ckb-devrel/ccc/commit/e5bd2ad5de4b42a22c422ecfc42056750f69b88b), [`aae3e06`](https://github.com/ckb-devrel/ccc/commit/aae3e0679fb940dd8c12ac9be12a4b53277a339d)]:
  - @ckb-ccc/core@0.0.14

## 0.0.14-alpha.2

### Patch Changes

- Updated dependencies [[`7ba62a0`](https://github.com/ckb-devrel/ccc/commit/7ba62a056f17808fe5684786c00c2dff80bb7d1d)]:
  - @ckb-ccc/core@0.0.14-alpha.2

## 0.0.14-alpha.1

### Patch Changes

- Updated dependencies [[`5e942f8`](https://github.com/ckb-devrel/ccc/commit/5e942f8f1ed678abdb7ab9716f5449f0714cea53), [`e5bd2ad`](https://github.com/ckb-devrel/ccc/commit/e5bd2ad5de4b42a22c422ecfc42056750f69b88b), [`aae3e06`](https://github.com/ckb-devrel/ccc/commit/aae3e0679fb940dd8c12ac9be12a4b53277a339d)]:
  - @ckb-ccc/core@0.0.14-alpha.1

## 0.0.14-alpha.0

### Patch Changes

- Updated dependencies [[`f5b5938`](https://github.com/ckb-devrel/ccc/commit/f5b5938ab8f9c0a338dfd6765fe717f7ad1b1dd8), [`2164efd`](https://github.com/ckb-devrel/ccc/commit/2164efd6d834c1917ad5f4a514dc25941f937185)]:
  - @ckb-ccc/core@0.0.14-alpha.0

## 0.0.13

### Patch Changes

- [`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): recordCells should not add usableCells

- [`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): node.js websocket

- [`588db84`](https://github.com/ckb-devrel/ccc/commit/588db8434d76a5a9ea6dd1d4c5b03f356ec1fb7d) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix: joyid CkbSigner appUri

- [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): completeInputs

- [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): more APIs. Since parsing.

- [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Signer.findCells

- Updated dependencies [[`3378e85`](https://github.com/ckb-devrel/ccc/commit/3378e85b32797f5cdc1943b9ecaca1fd1d9fad5e), [`8629449`](https://github.com/ckb-devrel/ccc/commit/86294490e76fc2a1cee20f827883e02fceca6e8b), [`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97), [`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f), [`69c10fd`](https://github.com/ckb-devrel/ccc/commit/69c10fdfcd507433c13b15d17015dca4687afb97), [`600cc13`](https://github.com/ckb-devrel/ccc/commit/600cc137ac6eb7c5b2533670de6df29d82f1b9e1), [`642f731`](https://github.com/ckb-devrel/ccc/commit/642f7317f4951ef801f1245aea96c40b4b6fb73e), [`96dbb61`](https://github.com/ckb-devrel/ccc/commit/96dbb6107d2071b9383350ddd578557746227054), [`0462a4e`](https://github.com/ckb-devrel/ccc/commit/0462a4ee101926f0da857173626dc4ab879e3b56), [`52156f9`](https://github.com/ckb-devrel/ccc/commit/52156f9df9cae9e0b71b77b49cda0e4d73e76142), [`63606db`](https://github.com/ckb-devrel/ccc/commit/63606db908f95bfc857430083932144d1ef4deef), [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b), [`1043c2b`](https://github.com/ckb-devrel/ccc/commit/1043c2bc211ec283b88dba3b81feef98e4185c0e), [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11), [`1f999f8`](https://github.com/ckb-devrel/ccc/commit/1f999f854beb255b3cd9dbbc5a7268e75442b3db), [`a69a9dc`](https://github.com/ckb-devrel/ccc/commit/a69a9dc0c722f7b4cfa36b2ae8ecba4dcde0db90), [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895)]:
  - @ckb-ccc/core@0.0.13

## 0.0.13-alpha.8

### Patch Changes

- Updated dependencies [[`8629449`](https://github.com/ckb-devrel/ccc/commit/86294490e76fc2a1cee20f827883e02fceca6e8b), [`52156f9`](https://github.com/ckb-devrel/ccc/commit/52156f9df9cae9e0b71b77b49cda0e4d73e76142), [`63606db`](https://github.com/ckb-devrel/ccc/commit/63606db908f95bfc857430083932144d1ef4deef)]:
  - @ckb-ccc/core@0.0.13-alpha.8

## 0.0.13-alpha.7

### Patch Changes

- [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): more APIs. Since parsing.

- [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Signer.findCells

- Updated dependencies [[`1043c2b`](https://github.com/ckb-devrel/ccc/commit/1043c2bc211ec283b88dba3b81feef98e4185c0e), [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11), [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895)]:
  - @ckb-ccc/core@0.0.13-alpha.7

## 0.0.13-alpha.6

### Patch Changes

- [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): completeInputs

- Updated dependencies [[`69c10fd`](https://github.com/ckb-devrel/ccc/commit/69c10fdfcd507433c13b15d17015dca4687afb97), [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b)]:
  - @ckb-ccc/core@0.0.13-alpha.6

## 0.0.13-alpha.5

### Patch Changes

- [`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): recordCells should not add usableCells

- Updated dependencies [[`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97)]:
  - @ckb-ccc/core@0.0.13-alpha.5

## 0.0.13-alpha.4

### Patch Changes

- [`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): node.js websocket

- Updated dependencies [[`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f), [`642f731`](https://github.com/ckb-devrel/ccc/commit/642f7317f4951ef801f1245aea96c40b4b6fb73e)]:
  - @ckb-ccc/core@0.0.13-alpha.4

## 0.0.13-alpha.3

### Patch Changes

- Updated dependencies [[`1f999f8`](https://github.com/ckb-devrel/ccc/commit/1f999f854beb255b3cd9dbbc5a7268e75442b3db)]:
  - @ckb-ccc/core@0.0.13-alpha.3

## 0.0.13-alpha.2

### Patch Changes

- Updated dependencies [[`96dbb61`](https://github.com/ckb-devrel/ccc/commit/96dbb6107d2071b9383350ddd578557746227054)]:
  - @ckb-ccc/core@0.0.13-alpha.2

## 0.0.13-alpha.1

### Patch Changes

- [`588db84`](https://github.com/ckb-devrel/ccc/commit/588db8434d76a5a9ea6dd1d4c5b03f356ec1fb7d) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix: joyid CkbSigner appUri

- Updated dependencies [[`3378e85`](https://github.com/ckb-devrel/ccc/commit/3378e85b32797f5cdc1943b9ecaca1fd1d9fad5e), [`a69a9dc`](https://github.com/ckb-devrel/ccc/commit/a69a9dc0c722f7b4cfa36b2ae8ecba4dcde0db90)]:
  - @ckb-ccc/core@0.0.13-alpha.1

## 0.0.13-alpha.0

### Patch Changes

- Updated dependencies [[`600cc13`](https://github.com/ckb-devrel/ccc/commit/600cc137ac6eb7c5b2533670de6df29d82f1b9e1)]:
  - @ckb-ccc/core@0.0.13-alpha.0

## 0.0.12

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/core@0.0.12


================================================
File: packages/joy-id/eslint.config.mjs
================================================
// @ts-check

import eslint from "@eslint/js";
import eslintPluginPrettierRecommended from "eslint-plugin-prettier/recommended";
import tseslint from "typescript-eslint";

import { dirname } from "path";
import { fileURLToPath } from "url";

export default [
  ...tseslint.config({
    files: ["**/*.ts"],
    extends: [
      eslint.configs.recommended,
      ...tseslint.configs.recommendedTypeChecked,
    ],
    rules: {
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          args: "all",
          argsIgnorePattern: "^_",
          caughtErrors: "all",
          caughtErrorsIgnorePattern: "^_",
          destructuredArrayIgnorePattern: "^_",
          varsIgnorePattern: "^_",
          ignoreRestSiblings: true,
        },
      ],
      "@typescript-eslint/unbound-method": ["error", { ignoreStatic: true }],
      "@typescript-eslint/no-unsafe-member-access": "off",
      "@typescript-eslint/require-await": "off",
      "no-empty": "off",
      "prefer-const": [
        "error",
        { ignoreReadBeforeAssign: true, destructuring: "all" },
      ],
    },
    languageOptions: {
      parserOptions: {
        project: true,
        tsconfigRootDir: dirname(fileURLToPath(import.meta.url)),
      },
    },
  }),
  eslintPluginPrettierRecommended,
];


================================================
File: packages/joy-id/package.json
================================================
{
  "name": "@ckb-ccc/joy-id",
  "version": "1.0.11",
  "description": "Connector's support for JoyID",
  "author": "Hanssen0 <hanssen0@hanssen0.com>",
  "license": "MIT",
  "private": false,
  "homepage": "https://github.com/ckb-devrel/ccc",
  "repository": {
    "type": "git",
    "url": "git://github.com/ckb-devrel/ccc.git"
  },
  "sideEffects": false,
  "main": "dist.commonjs/index.js",
  "module": "dist/index.js",
  "exports": {
    ".": {
      "import": "./dist/index.js",
      "require": "./dist.commonjs/index.js",
      "default": "./dist.commonjs/index.js"
    }
  },
  "scripts": {
    "build": "rimraf ./dist && rimraf ./dist.commonjs && tsc && tsc --project tsconfig.commonjs.json && copyfiles -u 2 misc/basedirs/**/* .",
    "lint": "eslint ./src",
    "format": "prettier --write . && eslint --fix ./src"
  },
  "devDependencies": {
    "@eslint/js": "^9.1.1",
    "copyfiles": "^2.4.1",
    "eslint": "^9.1.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.1.3",
    "prettier": "^3.2.5",
    "prettier-plugin-organize-imports": "^3.2.4",
    "rimraf": "^5.0.5",
    "typescript": "^5.4.5",
    "typescript-eslint": "^7.7.0"
  },
  "publishConfig": {
    "access": "public"
  },
  "dependencies": {
    "@ckb-ccc/core": "workspace:*",
    "@joyid/ckb": "^1.0.1",
    "@joyid/common": "^0.2.0"
  }
}


================================================
File: packages/joy-id/tsconfig.base.json
================================================
{
  "compilerOptions": {
    "target": "es2020",
    "incremental": true,
    "allowJs": true,
    "importHelpers": false,
    "declaration": true,
    "declarationMap": true,
    "experimentalDecorators": true,
    "useDefineForClassFields": false,
    "esModuleInterop": true,
    "strict": true,
    "noImplicitAny": true,
    "strictBindCallApply": true,
    "strictNullChecks": true,
    "alwaysStrict": true,
    "noFallthroughCasesInSwitch": true,
    "forceConsistentCasingInFileNames": true,
    "skipLibCheck": true
  },
  "include": ["src/**/*"]
}


================================================
File: packages/joy-id/tsconfig.commonjs.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "NodeNext",
    "moduleResolution": "NodeNext",
    "outDir": "./dist.commonjs"
  }
}


================================================
File: packages/joy-id/tsconfig.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "ESNext",
    "moduleResolution": "Bundler",
    "outDir": "./dist",
  }
}


================================================
File: packages/joy-id/typedoc.json
================================================
{
  "$schema": "https://typedoc.org/schema.json",
  "entryPoints": ["./src/index.ts", "./src/advanced.ts"],
  "extends": ["../../typedoc.base.json"],
  "name": "@ckb-ccc joy-id"
}


================================================
File: packages/joy-id/.npmignore
================================================
node_modules/
misc/

*test.js
*test.ts
*test.d.ts
*test.d.ts.map
*spec.js
*spec.ts
*spec.d.ts
*spec.d.ts.map

tsconfig.json
tsconfig.*.json
eslint.config.mjs
.prettierrc
.prettierignore

tsconfig.tsbuildinfo
tsconfig.*.tsbuildinfo
.github/


================================================
File: packages/joy-id/.prettierignore
================================================
node_modules/

dist/
dist.commonjs/

.npmignore
.prettierrc
tsconfig.json
eslint.config.mjs
.prettierrc

tsconfig.tsbuildinfo
.github/


================================================
File: packages/joy-id/.prettierrc
================================================
{
  "singleQuote": false,
  "trailingComma": "all",
  "plugins": ["prettier-plugin-organize-imports"]
}


================================================
File: packages/joy-id/misc/basedirs/dist/package.json
================================================
{
  "type": "module"
}

================================================
File: packages/joy-id/misc/basedirs/dist.commonjs/package.json
================================================
{
  "type": "commonjs"
}


================================================
File: packages/joy-id/src/advanced.ts
================================================
export * as JoyIdA from "./advancedBarrel.js";


================================================
File: packages/joy-id/src/advancedBarrel.ts
================================================
export * from "./common/index.js";
export * from "./connectionsStorage/index.js";


================================================
File: packages/joy-id/src/barrel.ts
================================================
export * from "./btc/index.js";
export * from "./ckb/index.js";
export * from "./evm/index.js";
export * from "./nostr/index.js";
export * from "./signerFactory/index.js";


================================================
File: packages/joy-id/src/index.ts
================================================
export * as JoyId from "./barrel.js";


================================================
File: packages/joy-id/src/btc/index.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { DappRequestType, buildJoyIDURL } from "@joyid/common";
import { createPopup } from "../common/index.js";
import {
  Connection,
  ConnectionsRepo,
  ConnectionsRepoLocalStorage,
} from "../connectionsStorage/index.js";

/**
 * Class representing a Bitcoin signer that extends SignerBtc
 * @public
 */
export class BitcoinSigner extends ccc.SignerBtc {
  private connection?: Connection;
  private network = "btcTestnet";

  /**
   * Ensures that the signer is connected and returns the connection.
   * @throws Will throw an error if not connected.
   * @returns The current connection.
   */
  private async assertConnection(): Promise<Connection> {
    if (!(await this.isConnected()) || !this.connection) {
      throw new Error("Not connected");
    }

    return this.connection;
  }

  /**
   * Creates an instance of BitcoinSigner.
   * @param client - The client instance.
   * @param name - The name of the signer.
   * @param icon - The icon URL of the signer.
   * @param addressType - The address type.
   * @param _appUri - The application URI.
   * @param connectionsRepo - The connections repository.
   */
  constructor(
    client: ccc.Client,
    public readonly name: string,
    public readonly icon: string,
    private readonly preferredNetworks: ccc.NetworkPreference[] = [
      {
        addressPrefix: "ckb",
        signerType: ccc.SignerType.BTC,
        network: "btc",
      },
      {
        addressPrefix: "ckt",
        signerType: ccc.SignerType.BTC,
        network: "btcTestnet",
      },
    ],
    public readonly addressType: "auto" | "p2wpkh" | "p2tr" = "auto",
    private readonly _appUri?: string,
    private readonly connectionsRepo: ConnectionsRepo = new ConnectionsRepoLocalStorage(),
  ) {
    super(client);
  }

  /**
   * Gets the configuration for JoyID.
   * @returns The configuration object.
   */
  private getConfig() {
    const { network } = this.matchNetworkPreference(
      this.preferredNetworks,
      this.network,
    ) ?? { network: this.network };
    if (this.network !== network) {
      this.connection = undefined;
    }
    this.network = network;

    const url = {
      btc: "https://app.joy.id",
      btcTestnet: "https://testnet.joyid.dev",
    }[network];
    if (!url) {
      throw new Error(
        `JoyID wallet doesn't support the requested chain ${this.network}`,
      );
    }

    return {
      redirectURL: location.href,
      joyidAppURL: this._appUri ?? url,
      requestNetwork: `btc-${this.addressType}`,
      name: this.name,
      logo: this.icon,
    };
  }

  async disconnect(): Promise<void> {
    await super.disconnect();

    await this.connectionsRepo.set(
      { uri: this.getConfig().joyidAppURL, addressType: "btc" },
      undefined,
    );
  }

  /**
   * Gets the Bitcoin account address.
   * @returns A promise that resolves to the Bitcoin account address.
   */
  async getBtcAccount(): Promise<string> {
    const { address } = await this.assertConnection();
    return address;
  }

  /**
   * Gets the Bitcoin public key.
   * @returns A promise that resolves to the Bitcoin public key.
   */
  async getBtcPublicKey(): Promise<ccc.Hex> {
    const { publicKey } = await this.assertConnection();
    return publicKey;
  }

  /**
   * Connects to the provider by requesting authentication.
   * @returns A promise that resolves when the connection is established.
   */
  async connect(): Promise<void> {
    const config = this.getConfig();
    const res = await createPopup(buildJoyIDURL(config, "popup", "/auth"), {
      ...config,
      type: DappRequestType.Auth,
    });

    const { address, pubkey } = (() => {
      if (this.addressType === "auto") {
        return res.btcAddressType === "p2wpkh" ? res.nativeSegwit : res.taproot;
      }
      return this.addressType === "p2wpkh" ? res.nativeSegwit : res.taproot;
    })();

    this.connection = {
      address,
      publicKey: ccc.hexFrom(pubkey),
      keyType: res.keyType,
    };
    await Promise.all([
      this.connectionsRepo.set(
        { uri: config.joyidAppURL, addressType: `btc-${res.btcAddressType}` },
        this.connection,
      ),
      this.connectionsRepo.set(
        { uri: config.joyidAppURL, addressType: "btc-auto" },
        this.connection,
      ),
    ]);
  }

  /**
   * Checks if the signer is connected.
   * @returns A promise that resolves to true if connected, false otherwise.
   */
  async isConnected(): Promise<boolean> {
    if (this.connection) {
      return true;
    }

    this.connection = await this.connectionsRepo.get({
      uri: this.getConfig().joyidAppURL,
      addressType: `btc-${this.addressType}`,
    });
    return this.connection !== undefined;
  }

  /**
   * Signs a raw message with the Bitcoin account.
   * @param message - The message to sign.
   * @returns A promise that resolves to the signed message.
   */
  async signMessageRaw(message: string | ccc.BytesLike): Promise<string> {
    const { address } = await this.assertConnection();

    const challenge =
      typeof message === "string" ? message : ccc.hexFrom(message).slice(2);

    const config = this.getConfig();
    const { signature } = await createPopup(
      buildJoyIDURL(
        {
          ...config,
          challenge,
          address,
          signMessageType: "ecdsa",
        },
        "popup",
        "/sign-message",
      ),
      { ...config, type: DappRequestType.SignMessage },
    );
    return signature;
  }
}


================================================
File: packages/joy-id/src/ckb/index.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { Aggregator } from "@joyid/ckb";
import { DappRequestType, buildJoyIDURL } from "@joyid/common";
import { createPopup } from "../common/index.js";
import {
  Connection,
  ConnectionsRepo,
  ConnectionsRepoLocalStorage,
} from "../connectionsStorage/index.js";

/**
 * Class representing a CKB signer that extends Signer
 * @public
 */
export class CkbSigner extends ccc.Signer {
  /**
   * Gets the signer type.
   * @returns The type of the signer.
   */
  get type(): ccc.SignerType {
    return ccc.SignerType.CKB;
  }

  /**
   * Gets the sign type.
   * @returns The sign type.
   */
  get signType(): ccc.SignerSignType {
    return ccc.SignerSignType.JoyId;
  }

  private connection?: Connection;

  /**
   * Ensures that the signer is connected and returns the connection.
   * @throws Will throw an error if not connected.
   * @returns A promise that resolves to the current connection.
   */
  private async assertConnection(): Promise<Connection> {
    if (!(await this.isConnected()) || !this.connection) {
      throw new Error("Not connected");
    }

    return this.connection;
  }

  /**
   * Creates an instance of CkbSigner.
   * @param client - The client instance.
   * @param name - The name of the signer.
   * @param icon - The icon URL of the signer.
   * @param _appUri - The application URI.
   * @param _aggregatorUri - The aggregator URI.
   * @param connectionsRepo - The connections repository.
   */
  constructor(
    client: ccc.Client,
    private readonly name: string,
    private readonly icon: string,
    private readonly _appUri?: string,
    private readonly _aggregatorUri?: string,
    private readonly connectionsRepo: ConnectionsRepo = new ConnectionsRepoLocalStorage(),
  ) {
    super(client);
  }

  /**
   * Gets the configuration for JoyID.
   * @returns The configuration object.
   */
  private getConfig() {
    return {
      redirectURL: location.href,
      joyidAppURL:
        this._appUri ??
        (this.client.addressPrefix === "ckb"
          ? "https://app.joy.id"
          : "https://testnet.joyid.dev"),
      name: this.name,
      logo: this.icon,
    };
  }

  /**
   * Gets the aggregator URI.
   * @returns The aggregator URI.
   */
  private getAggregatorUri(): string {
    return (
      this._aggregatorUri ??
      (this.client.addressPrefix === "ckb"
        ? "https://cota.nervina.dev/mainnet-aggregator"
        : "https://cota.nervina.dev/aggregator")
    );
  }

  /**
   * Connects to the provider by requesting authentication.
   * @returns A promise that resolves when the connection is established.
   */
  async connect(): Promise<void> {
    const config = this.getConfig();

    const res = await createPopup(buildJoyIDURL(config, "popup", "/auth"), {
      ...config,
      type: DappRequestType.Auth,
    });

    this.connection = {
      address: res.address,
      publicKey: ccc.hexFrom(res.pubkey),
      keyType: res.keyType,
    };
    await this.saveConnection();
  }

  async disconnect(): Promise<void> {
    await super.disconnect();

    this.connection = undefined;
    await this.saveConnection();
  }

  /**
   * Checks if the signer is connected.
   * @returns A promise that resolves to true if connected, false otherwise.
   */
  async isConnected(): Promise<boolean> {
    if (this.connection) {
      return true;
    }
    await this.restoreConnection();
    return this.connection !== undefined;
  }

  /**
   * Gets the internal address.
   * @returns A promise that resolves to the internal address.
   */
  async getInternalAddress(): Promise<string> {
    return (await this.assertConnection()).address;
  }

  /**
   * Gets the identity of the signer.
   * @returns A promise that resolves to the identity.
   */
  async getIdentity(): Promise<string> {
    const connection = await this.assertConnection();
    return JSON.stringify({
      keyType: connection.keyType,
      publicKey: connection.publicKey.slice(2),
    });
  }

  /**
   * Gets the address object.
   * @returns A promise that resolves to the address object.
   */
  async getAddressObj(): Promise<ccc.Address> {
    return await ccc.Address.fromString(
      await this.getInternalAddress(),
      this.client,
    );
  }

  /**
   * Gets the address objects.
   * @returns A promise that resolves to an array of address objects.
   */
  async getAddressObjs(): Promise<ccc.Address[]> {
    return [await this.getAddressObj()];
  }

  /**
   * Prepares a transaction.
   * @param txLike - The transaction-like object.
   * @returns A promise that resolves to the prepared transaction.
   */
  async prepareTransaction(
    txLike: ccc.TransactionLike,
  ): Promise<ccc.Transaction> {
    const tx = ccc.Transaction.from(txLike);
    await tx.addCellDepsOfKnownScripts(this.client, ccc.KnownScript.JoyId);
    const position = await tx.findInputIndexByLock(
      (await this.getAddressObj()).script,
      this.client,
    );
    if (position === undefined) {
      return tx;
    }

    const witness = tx.getWitnessArgsAt(position) ?? ccc.WitnessArgs.from({});
    witness.lock = ccc.hexFrom("00".repeat(1000));
    await this.prepareTransactionForSubKey(tx, witness);
    tx.setWitnessArgsAt(position, witness);

    return tx;
  }

  /**
   * Prepares a transaction for a sub key.
   * @param tx - The transaction object.
   * @param witness - The witness arguments.
   * @throws Will throw an error if no COTA cells are found for the sub key wallet.
   */
  private async prepareTransactionForSubKey(
    tx: ccc.Transaction,
    witness: ccc.WitnessArgs,
  ) {
    if (
      this.connection?.keyType !== "sub_key" ||
      (witness.outputType ?? "0x") !== "0x"
    ) {
      return;
    }

    const pubkeyHash = ccc.hashCkb(this.connection.publicKey).substring(0, 42);
    const lock = (await this.getAddressObj()).script;
    const aggregator = new Aggregator(this.getAggregatorUri());
    const { unlock_entry: unlockEntry } =
      await aggregator.generateSubkeyUnlockSmt({
        alg_index: 1,
        pubkey_hash: pubkeyHash,
        lock_script: ccc.hexFrom(lock.toBytes()),
      });
    witness.outputType = ccc.hexFrom(unlockEntry);

    const cotaDeps: ccc.CellDep[] = [];
    for await (const cell of this.client.findCellsByLock(
      lock,
      await ccc.Script.fromKnownScript(this.client, ccc.KnownScript.COTA, "0x"),
    )) {
      cotaDeps.push(
        ccc.CellDep.from({
          depType: "code",
          outPoint: cell.outPoint,
        }),
      );
    }

    if (cotaDeps.length === 0) {
      throw new Error("No COTA cells for sub key wallet");
    }

    tx.addCellDepsAtStart(cotaDeps);
  }

  /**
   * Signs a transaction.
   * @param txLike - The transaction-like object.
   * @returns A promise that resolves to the signed transaction.
   */
  async signOnlyTransaction(
    txLike: ccc.TransactionLike,
  ): Promise<ccc.Transaction> {
    const tx = ccc.Transaction.from(txLike);
    const { script } = await this.getAddressObj();
    const witnessIndexes = await ccc.reduceAsync(
      tx.inputs,
      async (acc, input, i) => {
        await input.completeExtraInfos(this.client);
        if (!input.cellOutput) {
          throw new Error("Unable to complete input");
        }

        if (input.cellOutput.lock.eq(script)) {
          acc.push(i);
        }
      },
      [] as number[],
    );

    // Trim unnecessary fields to reduce tx size
    await tx.prepareSighashAllWitness(script, 0, this.client);
    tx.inputs.forEach((i) => {
      i.cellOutput = undefined;
      i.outputData = undefined;
    });

    const config = this.getConfig();
    const res = await createPopup(
      buildJoyIDURL(
        {
          ...config,
          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
          tx: JSON.parse(tx.stringify()),
          signerAddress: (await this.assertConnection()).address,
          witnessIndexes,
        },
        "popup",
        "/sign-ckb-raw-tx",
      ),
      {
        ...config,
        type: DappRequestType.SignCkbRawTx,
      },
    );

    return ccc.Transaction.from(res.tx);
  }

  /**
   * Signs a raw message with the account.
   * @param message - The message to sign.
   * @returns A promise that resolves to the signed message.
   */
  async signMessageRaw(message: string | ccc.BytesLike): Promise<string> {
    const { address } = await this.assertConnection();

    const challenge =
      typeof message === "string" ? message : ccc.hexFrom(message).slice(2);

    const config = this.getConfig();
    const res = await createPopup(
      buildJoyIDURL(
        {
          ...config,
          challenge,
          isData: typeof message !== "string",
          address,
        },
        "popup",
        "/sign-message",
      ),
      { ...config, type: DappRequestType.SignMessage },
    );
    return JSON.stringify({
      signature: res.signature,
      alg: res.alg,
      message: res.message,
    });
  }

  /**
   * Saves the current connection.
   * @returns
   */
  private async saveConnection(): Promise<void> {
    return this.connectionsRepo.set(
      {
        uri: this.getConfig().joyidAppURL,
        addressType: "ckb",
      },
      this.connection,
    );
  }

  /**
   * Restores the previous connection.
   * @returns
   */
  private async restoreConnection(): Promise<void> {
    this.connection = await this.connectionsRepo.get({
      uri: this.getConfig().joyidAppURL,
      addressType: "ckb",
    });
  }
}


================================================
File: packages/joy-id/src/common/index.ts
================================================
/* eslint-disable @typescript-eslint/no-unsafe-call */
/* eslint-disable @typescript-eslint/no-unsafe-argument */
import {
  AuthResponseData,
  DappRequestType,
  EvmWeb2LoginResponse,
  PopupCancelledError,
  PopupConfigOptions,
  PopupNotSupportedError,
  PopupTimeoutError,
  SignCkbTxResponseData,
  SignCotaNFTResponseData,
  SignEvmTxResponseData,
  SignMessageResponseData,
  SignNostrEventData,
  createBlockDialog,
  isStandaloneBrowser,
  openPopup,
} from "@joyid/common";

/**
 * Interface representing the return type for various Dapp request types.
 */
export interface PopupReturnType {
  [DappRequestType.Auth]: AuthResponseData;
  [DappRequestType.SignMessage]: SignMessageResponseData;
  [DappRequestType.SignEvm]: SignEvmTxResponseData;
  [DappRequestType.SignPsbt]: SignEvmTxResponseData;
  [DappRequestType.BatchSignPsbt]: {
    psbts: string[];
  };
  [DappRequestType.SignCkbTx]: SignCkbTxResponseData;
  [DappRequestType.SignCotaNFT]: SignCotaNFTResponseData;
  [DappRequestType.SignCkbRawTx]: SignCkbTxResponseData;
  [DappRequestType.SignNostrEvent]: SignNostrEventData;
  [DappRequestType.EncryptNostrMessage]: unknown;
  [DappRequestType.DecryptNostrMessage]: unknown;
  [DappRequestType.AuthMiniApp]: unknown;
  [DappRequestType.SignMiniAppEvm]: unknown;
  [DappRequestType.SignMiniAppMessage]: unknown;
  [DappRequestType.EvmWeb2Login]: EvmWeb2LoginResponse;
}

/**
 * Creates a popup window for JoyID Dapp requests.
 * @param url - The URL to open in the popup.
 * @param config - The popup configuration options.
 * @returns A promise that resolves to the response data of the requested type.
 * @throws {PopupNotSupportedError} If popups are not supported in the current browser.
 * @throws {PopupCancelledError} If the popup is closed by the user.
 * @throws {PopupTimeoutError} If the popup operation times out.
 */
export async function createPopup<T extends DappRequestType>(
  url: string,
  config: PopupConfigOptions<T> & { joyidAppURL: string },
): Promise<PopupReturnType[T]> {
  if (config.popup == null) {
    config.popup = openPopup("");

    if (config.popup == null) {
      return createBlockDialog(async () => createPopup(url, config));
    }
  }

  config.popup.location.href = url;

  return new Promise((resolve, reject) => {
    if (isStandaloneBrowser()) {
      reject(new PopupNotSupportedError(config.popup));
    }
    let popupEventListener: (e: MessageEvent) => void;
    let timeoutId: undefined | ReturnType<typeof setTimeout>;
    // Check each second if the popup is closed triggering a PopupCancelledError
    const popupTimer = setInterval(() => {
      if (config.popup?.closed) {
        clearInterval(popupTimer);
        clearTimeout(timeoutId);
        window.removeEventListener("message", popupEventListener, false);
        reject(new PopupCancelledError(config.popup));
      }
    }, 1000);

    timeoutId = setTimeout(
      () => {
        clearInterval(popupTimer);
        reject(new PopupTimeoutError(config.popup));
        window.removeEventListener("message", popupEventListener, false);
      },
      (config.timeoutInSeconds ?? 3000) * 1000,
    );

    popupEventListener = (e: MessageEvent) => {
      const { joyidAppURL } = config;
      const appURL = new URL(joyidAppURL);
      if (e.origin !== appURL.origin) {
        return;
      }
      if (!e.data || e.data?.type !== config.type) {
        return;
      }

      clearTimeout(timeoutId);
      clearInterval(popupTimer);
      window.removeEventListener("message", popupEventListener, false);
      config.popup.close();
      if (e.data.error) {
        reject(new Error(e.data.error));
      }
      resolve(e.data.data);
    };

    window.addEventListener("message", popupEventListener);
  });
}


================================================
File: packages/joy-id/src/connectionsStorage/index.ts
================================================
import { ccc } from "@ckb-ccc/core";

/**
 * Type representing an account selector with a URI and address type.
 */
export type AccountSelector = {
  /**
   * The URI of the account.
   */
  uri: string;
  /**
   * The address type of the account.
   */
  addressType: string;
};

/**
 * Checks if a AccountSelector matches the filter
 * @param a - The first account selector.
 * @param filter - The account selector filter.
 * @returns True if the selector matches the filter
 */
export function isSelectorMatch(
  a: AccountSelector,
  filter: AccountSelector,
): boolean {
  return a.uri === filter.uri && a.addressType.startsWith(filter.addressType);
}

/**
 * Type representing a connection with an address, public key, and key type.
 */
export type Connection = {
  /**
   * The address of the connection.
   */
  readonly address: string;
  /**
   * The public key of the connection.
   */
  readonly publicKey: ccc.Hex;
  /**
   * The key type of the connection.
   */
  readonly keyType: string;
};

/**
 * Interface representing a repository for managing connections.
 */
export interface ConnectionsRepo {
  /**
   * Gets a connection for the given selector.
   * @param selector - The account selector.
   * @returns A promise that resolves to the connection, if found.
   */
  get(selector: AccountSelector): Promise<Connection | undefined>;

  /**
   * Sets a connection for the given selector.
   * @param selector - The account selector.
   * @param connection - The connection to set.
   * @returns A promise that resolves when the connection is set.
   */
  set(
    selector: AccountSelector,
    connection: Connection | undefined,
  ): Promise<void>;
}

/**
 * Class representing a local storage-based repository for managing connections.
 */
export class ConnectionsRepoLocalStorage implements ConnectionsRepo {
  /**
   * Creates an instance of ConnectionsRepoLocalStorage.
   * @param [storageKey="ccc-joy-id-signer"] - The local storage key.
   */
  constructor(private readonly storageKey = "ccc-joy-id-signer") {}

  /**
   * Reads all connections from local storage.
   * @returns A promise that resolves to an array of selectors and connections.
   */
  async readConnections(): Promise<[AccountSelector, Connection][]> {
    return JSON.parse(window.localStorage.getItem(this.storageKey) ?? "[]") as [
      AccountSelector,
      Connection,
    ][];
  }

  /**
   * Gets a connection for the given selector.
   * @param selector - The account selector.
   * @returns A promise that resolves to the connection, if found.
   */
  async get(selector: AccountSelector): Promise<Connection | undefined> {
    return (await this.readConnections()).find(([s]) =>
      isSelectorMatch(selector, s),
    )?.[1];
  }

  /**
   * Sets a connection for the given selector.
   * @param selector - The account selector.
   * @param connection - The connection to set.
   * @returns
   */
  async set(
    selector: AccountSelector,
    connection: Connection | undefined,
  ): Promise<void> {
    const connections = await this.readConnections();

    if (connection) {
      const existed = connections.find(([s]) => isSelectorMatch(s, selector));
      if (existed) {
        existed[1] = connection;
      } else {
        connections.push([selector, connection]);
      }
      window.localStorage.setItem(this.storageKey, JSON.stringify(connections));
    } else {
      window.localStorage.setItem(
        this.storageKey,
        JSON.stringify(
          connections.filter(([s]) => !isSelectorMatch(s, selector)),
        ),
      );
    }
  }
}


================================================
File: packages/joy-id/src/evm/index.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { DappRequestType, buildJoyIDURL } from "@joyid/common";
import { createPopup } from "../common/index.js";
import {
  Connection,
  ConnectionsRepo,
  ConnectionsRepoLocalStorage,
} from "../connectionsStorage/index.js";

/**
 * Class representing an EVM signer that extends SignerEvm
 * @public
 */
export class EvmSigner extends ccc.SignerEvm {
  private connection?: Connection;

  /**
   * Ensures that the signer is connected and returns the connection.
   * @throws Will throw an error if not connected.
   * @returns The current connection.
   */
  private async assertConnection(): Promise<Connection> {
    if (!(await this.isConnected()) || !this.connection) {
      throw new Error("Not connected");
    }

    return this.connection;
  }

  /**
   * Creates an instance of EvmSigner.
   * @param client - The client instance.
   * @param name - The name of the signer.
   * @param icon - The icon URL of the signer.
   * @param _appUri - The application URI.
   * @param connectionsRepo - The connections repository.
   */
  constructor(
    client: ccc.Client,
    private readonly name: string,
    private readonly icon: string,
    private readonly _appUri?: string,
    private readonly connectionsRepo: ConnectionsRepo = new ConnectionsRepoLocalStorage(),
  ) {
    super(client);
  }

  /**
   * Gets the configuration for JoyID.
   * @returns The configuration object.
   */
  private getConfig() {
    return {
      redirectURL: location.href,
      joyidAppURL:
        this._appUri ??
        (this.client.addressPrefix === "ckb"
          ? "https://app.joy.id"
          : "https://testnet.joyid.dev"),
      requestNetwork: `ethereum`,
      name: this.name,
      logo: this.icon,
    };
  }

  /**
   * Gets the EVM account address.
   * @returns A promise that resolves to the EVM account address.
   */
  async getEvmAccount(): Promise<ccc.Hex> {
    return (await this.assertConnection()).address as ccc.Hex;
  }

  /**
   * Connects to the provider by requesting authentication.
   * @returns A promise that resolves when the connection is established.
   */
  async connect(): Promise<void> {
    const config = this.getConfig();

    const res = await createPopup(buildJoyIDURL(config, "popup", "/auth"), {
      ...config,
      type: DappRequestType.Auth,
    });

    this.connection = {
      address: res.ethAddress,
      publicKey: ccc.hexFrom(res.pubkey),
      keyType: res.keyType,
    };
    await this.saveConnection();
  }

  async disconnect(): Promise<void> {
    await super.disconnect();

    this.connection = undefined;
    await this.saveConnection();
  }

  /**
   * Checks if the signer is connected.
   * @returns A promise that resolves to true if connected, false otherwise.
   */
  async isConnected(): Promise<boolean> {
    if (this.connection) {
      return true;
    }
    await this.restoreConnection();
    return this.connection !== undefined;
  }

  /**
   * Signs a raw message with the EVM account.
   * @param message - The message to sign.
   * @returns A promise that resolves to the signed message.
   */
  async signMessageRaw(message: string | ccc.BytesLike): Promise<ccc.Hex> {
    const { address } = await this.assertConnection();

    const challenge =
      typeof message === "string" ? message : ccc.hexFrom(message).slice(2);

    const config = this.getConfig();
    const { signature } = await createPopup(
      buildJoyIDURL(
        {
          ...config,
          challenge,
          isData: typeof message !== "string",
          address,
        },
        "popup",
        "/sign-message",
      ),
      { ...config, type: DappRequestType.SignMessage },
    );
    return ccc.hexFrom(signature);
  }

  /**
   * Saves the current connection.
   * @returns
   */
  private async saveConnection(): Promise<void> {
    return this.connectionsRepo.set(
      {
        uri: this.getConfig().joyidAppURL,
        addressType: "ethereum",
      },
      this.connection,
    );
  }

  /**
   * Restores the previous connection.
   * @returns
   */
  private async restoreConnection(): Promise<void> {
    this.connection = await this.connectionsRepo.get({
      uri: this.getConfig().joyidAppURL,
      addressType: "ethereum",
    });
  }
}


================================================
File: packages/joy-id/src/nostr/index.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { DappRequestType, buildJoyIDURL } from "@joyid/common";
import { createPopup } from "../common/index.js";
import {
  Connection,
  ConnectionsRepo,
  ConnectionsRepoLocalStorage,
} from "../connectionsStorage/index.js";

/**
 * Class representing a Nostr signer that extends SignerNostr
 * @public
 */
export class NostrSigner extends ccc.SignerNostr {
  private connection?: Connection;

  /**
   * Ensures that the signer is connected and returns the connection.
   * @throws Will throw an error if not connected.
   * @returns The current connection.
   */
  private async assertConnection(): Promise<Connection> {
    if (!(await this.isConnected()) || !this.connection) {
      throw new Error("Not connected");
    }

    return this.connection;
  }

  /**
   * Creates an instance of NostrSigner.
   * @param client - The client instance.
   * @param name - The name of the signer.
   * @param icon - The icon URL of the signer.
   * @param _appUri - The application URI.
   * @param connectionsRepo - The connections repository.
   */
  constructor(
    client: ccc.Client,
    private readonly name: string,
    private readonly icon: string,
    private readonly _appUri?: string,
    private readonly connectionsRepo: ConnectionsRepo = new ConnectionsRepoLocalStorage(),
  ) {
    super(client);
  }

  /**
   * Gets the configuration for JoyID.
   * @returns The configuration object.
   */
  private getConfig() {
    return {
      redirectURL: location.href,
      joyidAppURL:
        this._appUri ??
        (this.client.addressPrefix === "ckb"
          ? "https://app.joy.id"
          : "https://testnet.joyid.dev"),
      requestNetwork: "nostr",
      name: this.name,
      logo: this.icon,
    };
  }

  /**
   * Connects to the provider by requesting authentication.
   * @returns A promise that resolves when the connection is established.
   */
  async connect(): Promise<void> {
    const config = this.getConfig();
    const res = await createPopup(buildJoyIDURL(config, "popup", "/auth"), {
      ...config,
      type: DappRequestType.Auth,
    });

    this.connection = {
      address: "",
      publicKey: ccc.hexFrom(res.nostrPubkey),
      keyType: res.keyType,
    };
    await this.saveConnection();
  }

  async disconnect(): Promise<void> {
    await super.disconnect();

    this.connection = undefined;
    await this.saveConnection();
  }

  /**
   * Checks if the signer is connected.
   * @returns A promise that resolves to true if connected, false otherwise.
   */
  async isConnected(): Promise<boolean> {
    if (this.connection) {
      return true;
    }

    await this.restoreConnection();
    return this.connection !== undefined;
  }

  async getNostrPublicKey(): Promise<ccc.Hex> {
    return (await this.assertConnection()).publicKey;
  }

  async signNostrEvent(
    event: ccc.NostrEvent,
  ): Promise<Required<ccc.NostrEvent>> {
    const config = this.getConfig();
    const res = await createPopup(
      buildJoyIDURL({ ...config, event }, "popup", "/sign-nostr-event"),
      {
        ...config,
        type: DappRequestType.SignNostrEvent,
      },
    );
    return res.event;
  }

  /**
   * Saves the current connection.
   * @returns
   */
  private async saveConnection(): Promise<void> {
    return this.connectionsRepo.set(
      {
        uri: this.getConfig().joyidAppURL,
        addressType: "nostr",
      },
      this.connection,
    );
  }

  /**
   * Restores the previous connection.
   * @returns
   */
  private async restoreConnection(): Promise<void> {
    this.connection = await this.connectionsRepo.get({
      uri: this.getConfig().joyidAppURL,
      addressType: "nostr",
    });
  }
}


================================================
File: packages/joy-id/src/signerFactory/index.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { isStandaloneBrowser } from "@joyid/common";
import { BitcoinSigner } from "../btc/index.js";
import { CkbSigner } from "../ckb/index.js";
import { EvmSigner } from "../evm/index.js";
import { NostrSigner } from "../nostr/index.js";

/**
 * Gets the JoyID signers based on the client, name, and icon.
 * If the browser is standalone or a webview, returns SignerAlwaysError instances.
 * Otherwise, returns instances of CkbSigner, BitcoinSigner, and EvmSigner.
 * @public
 *
 * @param client - The client instance.
 * @param name - The name of the signer.
 * @param icon - The icon URL of the signer.
 * @returns An array of signer information objects.
 */
export function getJoyIdSigners(
  client: ccc.Client,
  name: string,
  icon: string,
  preferredNetworks?: ccc.NetworkPreference[],
): ccc.SignerInfo[] {
  if (isStandaloneBrowser() || ccc.isWebview(window.navigator.userAgent)) {
    return [ccc.SignerType.CKB, ccc.SignerType.EVM, ccc.SignerType.BTC].map(
      (type) => ({
        name: type,
        signer: new ccc.SignerAlwaysError(
          client,
          type,
          "JoyID can only be used with standard browsers",
        ),
      }),
    );
  }

  return [
    {
      name: "CKB",
      signer: new CkbSigner(client, name, icon),
    },
    {
      name: "BTC",
      signer: new BitcoinSigner(client, name, icon, preferredNetworks),
    },
    {
      name: "Nostr",
      signer: new NostrSigner(client, name, icon),
    },
    {
      name: "EVM",
      signer: new EvmSigner(client, name, icon),
    },
    {
      name: "BTC (P2WPKH)",
      signer: new BitcoinSigner(
        client,
        name,
        icon,
        preferredNetworks,
        "p2wpkh",
      ),
    },
    {
      name: "BTC (P2TR)",
      signer: new BitcoinSigner(client, name, icon, preferredNetworks, "p2tr"),
    },
  ];
}


================================================
File: packages/lumos-patches/README.md
================================================
<p align="center">
  <a href="https://app.ckbccc.com/">
    <img alt="Logo" src="https://raw.githubusercontent.com/ckb-devrel/ccc/master/assets/logoAndText.svg" style="height: 8rem; max-width: 90%; padding: 0.5rem 0;" />
  </a>
</p>

<h1 align="center" style="font-size: 48px;">
  Patches for using Lumos with CCC
</h1>

<p align="center">
  <a href="https://www.npmjs.com/package/@ckb-ccc/lumos-patches"><img
    alt="NPM Version" src="https://img.shields.io/npm/v/%40ckb-ccc%2Flumos-patches"
  /></a>
  <img alt="GitHub commit activity" src="https://img.shields.io/github/commit-activity/m/ckb-devrel/ccc" />
  <img alt="GitHub last commit" src="https://img.shields.io/github/last-commit/ckb-devrel/ccc/master" />
  <img alt="GitHub branch check runs" src="https://img.shields.io/github/check-runs/ckb-devrel/ccc/master" />
  <a href="https://live.ckbccc.com/"><img
    alt="Playground" src="https://img.shields.io/website?url=https%3A%2F%2Flive.ckbccc.com%2F&label=Playground"
  /></a>
  <a href="https://app.ckbccc.com/"><img
    alt="App" src="https://img.shields.io/website?url=https%3A%2F%2Fapp.ckbccc.com%2F&label=App"
  /></a>
  <a href="https://docs.ckbccc.com/"><img
    alt="Docs" src="https://img.shields.io/website?url=https%3A%2F%2Fdocs.ckbccc.com%2F&label=Docs"
  /></a>
</p>

<p align="center">
  CCC - CKBers' Codebase is a one-stop solution for your CKB JS/TS ecosystem development.
  <br />
  Empower yourself with CCC to discover the unlimited potential of CKB.
  <br />
  Interoperate with wallets from different chain ecosystems.
  <br />
  Fully enabling CKB's Turing completeness and cryptographic freedom power.
</p>

<h3 align="center">
  Read more about CCC on <a href="https://docs.ckbccc.com">our website</a> or <a href="https://github.com/ckb-devrel/ccc">GitHub Repo</a>.
</h3>


================================================
File: packages/lumos-patches/CHANGELOG.md
================================================
# @ckb-ccc/lumos-patches

## 1.0.11

### Patch Changes

- Updated dependencies [[`28c211d`](https://github.com/ckb-devrel/ccc/commit/28c211d839a2d2305eca56e82ba7da144aa3df4a)]:
  - @ckb-ccc/core@1.5.0

## 1.0.10

### Patch Changes

- Updated dependencies [[`3fdb2c4`](https://github.com/ckb-devrel/ccc/commit/3fdb2c477d0b2766b231e436b8f396f047b02634), [`f429087`](https://github.com/ckb-devrel/ccc/commit/f4290874dfab3fe58844e5169673c5d47bda64e3)]:
  - @ckb-ccc/core@1.4.0

## 1.0.9

### Patch Changes

- Updated dependencies [[`a48cccf`](https://github.com/ckb-devrel/ccc/commit/a48cccfae3ce6b3456a5eb863f207e7e5a6e568f)]:
  - @ckb-ccc/core@1.3.1

## 1.0.8

### Patch Changes

- Updated dependencies [[`4dbf4fd`](https://github.com/ckb-devrel/ccc/commit/4dbf4fd8021cf14d05282706a7667ea7d108fb09), [`4c76f9e`](https://github.com/ckb-devrel/ccc/commit/4c76f9e2a93a226fcfc4c32a5378bb531bfff08f), [`c2c4c26`](https://github.com/ckb-devrel/ccc/commit/c2c4c264e04461948e4b913b2f22054e6032ddc8), [`b6a73fa`](https://github.com/ckb-devrel/ccc/commit/b6a73fa9628ebdff51cb8f246309654cd53e36f2), [`8c97c85`](https://github.com/ckb-devrel/ccc/commit/8c97c851db4a2d940c7e59116ca7620cfd0afae1)]:
  - @ckb-ccc/core@1.3.0

## 1.0.7

### Patch Changes

- Updated dependencies [[`01263bd`](https://github.com/ckb-devrel/ccc/commit/01263bd8c601fa8fcdfa24be52601716e1864843)]:
  - @ckb-ccc/core@1.2.3

## 1.0.6

### Patch Changes

- Updated dependencies [[`7886e3d`](https://github.com/ckb-devrel/ccc/commit/7886e3d89e9ca8f3514a2044c6dd4e8ec6b49933)]:
  - @ckb-ccc/core@1.2.2

## 1.0.5

### Patch Changes

- Updated dependencies [[`94e2618`](https://github.com/ckb-devrel/ccc/commit/94e26182515e09d6086ec5b653d091f117a499e6)]:
  - @ckb-ccc/core@1.2.1

## 1.0.4

### Patch Changes

- Updated dependencies [[`128e87b`](https://github.com/ckb-devrel/ccc/commit/128e87b5ca3e97bfe7842e76f786aa6aec010797)]:
  - @ckb-ccc/core@1.2.0

## 1.0.3

### Patch Changes

- Updated dependencies [[`925991c`](https://github.com/ckb-devrel/ccc/commit/925991c8a24b1f34667e30b28b69812e936e3928)]:
  - @ckb-ccc/core@1.1.1

## 1.0.2

### Patch Changes

- Updated dependencies [[`ddc0a28`](https://github.com/ckb-devrel/ccc/commit/ddc0a281c3d1dfa6ebc990dae92994f026dfddcc)]:
  - @ckb-ccc/core@1.1.0

## 1.0.1

### Patch Changes

- Updated dependencies [[`719055b`](https://github.com/ckb-devrel/ccc/commit/719055b404f31b40362f51714b9f11c85b857581), [`94caaca`](https://github.com/ckb-devrel/ccc/commit/94caaca11c63752a25282d42f51161c94397dec6)]:
  - @ckb-ccc/core@1.0.1

## 1.0.0

### Major Changes

- [#107](https://github.com/ckb-devrel/ccc/pull/107) [`b99f55f`](https://github.com/ckb-devrel/ccc/commit/b99f55f74e64106391ce53f7d0bd0fa7522023cc) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: molecule

### Patch Changes

- Updated dependencies [[`b99f55f`](https://github.com/ckb-devrel/ccc/commit/b99f55f74e64106391ce53f7d0bd0fa7522023cc)]:
  - @ckb-ccc/core@1.0.0

## 0.0.18

### Patch Changes

- Updated dependencies [[`c1cb910`](https://github.com/ckb-devrel/ccc/commit/c1cb91091780c7b33fbbd683ef8edc9f11452ecd)]:
  - @ckb-ccc/core@0.1.2

## 0.0.17

### Patch Changes

- [#101](https://github.com/ckb-devrel/ccc/pull/101) [`d9affcc`](https://github.com/ckb-devrel/ccc/commit/d9affcc01c7b839b227e4d79bcb66e717577502a) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix: commonjs

- Updated dependencies [[`d9affcc`](https://github.com/ckb-devrel/ccc/commit/d9affcc01c7b839b227e4d79bcb66e717577502a)]:
  - @ckb-ccc/core@0.1.1

## 0.0.16

### Patch Changes

- [#70](https://github.com/ckb-devrel/ccc/pull/70) [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): websocket transport

- Updated dependencies [[`a3d5359`](https://github.com/ckb-devrel/ccc/commit/a3d53595f6dd11f2f59cdf0086b3d7ce558a2fdd), [`8824ff2`](https://github.com/ckb-devrel/ccc/commit/8824ff27af3b76186f1a7d6db8c907cd66f09d6a), [`f07a506`](https://github.com/ckb-devrel/ccc/commit/f07a506bd6fc27fe659a17d2f7baaeec54716d81), [`f21d7e4`](https://github.com/ckb-devrel/ccc/commit/f21d7e4cf422edab4a836ef6d678b620594fef8d), [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366), [`1720d5a`](https://github.com/ckb-devrel/ccc/commit/1720d5a398543f1c6e24763eeaf15d84cd2214bf), [`e63a06e`](https://github.com/ckb-devrel/ccc/commit/e63a06ee75ac8595208d216dec88a4228c465e23), [`c092988`](https://github.com/ckb-devrel/ccc/commit/c092988e7765b9ac79498d6bd72a6a2f62859b6f), [`50f2ce0`](https://github.com/ckb-devrel/ccc/commit/50f2ce08e74cb3fbeae926267d42e28b426fd7f4), [`4709384`](https://github.com/ckb-devrel/ccc/commit/4709384e37188991cb937b16f99f47ca82c912b8)]:
  - @ckb-ccc/core@0.1.0

## 0.0.16-alpha.7

### Patch Changes

- Updated dependencies [[`f07a506`](https://github.com/ckb-devrel/ccc/commit/f07a506bd6fc27fe659a17d2f7baaeec54716d81)]:
  - @ckb-ccc/core@0.1.0-alpha.7

## 0.0.16-alpha.6

### Patch Changes

- Updated dependencies [[`4709384`](https://github.com/ckb-devrel/ccc/commit/4709384e37188991cb937b16f99f47ca82c912b8)]:
  - @ckb-ccc/core@0.1.0-alpha.6

## 0.0.16-alpha.5

### Patch Changes

- Updated dependencies [[`50f2ce0`](https://github.com/ckb-devrel/ccc/commit/50f2ce08e74cb3fbeae926267d42e28b426fd7f4)]:
  - @ckb-ccc/core@0.1.0-alpha.5

## 0.0.16-alpha.4

### Patch Changes

- Updated dependencies [[`f21d7e4`](https://github.com/ckb-devrel/ccc/commit/f21d7e4cf422edab4a836ef6d678b620594fef8d)]:
  - @ckb-ccc/core@0.1.0-alpha.4

## 0.0.16-alpha.3

### Patch Changes

- Updated dependencies [[`a3d5359`](https://github.com/ckb-devrel/ccc/commit/a3d53595f6dd11f2f59cdf0086b3d7ce558a2fdd)]:
  - @ckb-ccc/core@0.0.16-alpha.3

## 0.0.16-alpha.2

### Patch Changes

- [#70](https://github.com/ckb-devrel/ccc/pull/70) [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): websocket transport

- Updated dependencies [[`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366)]:
  - @ckb-ccc/core@0.0.16-alpha.2

## 0.0.16-alpha.1

### Patch Changes

- Updated dependencies [[`8824ff2`](https://github.com/ckb-devrel/ccc/commit/8824ff27af3b76186f1a7d6db8c907cd66f09d6a), [`c092988`](https://github.com/ckb-devrel/ccc/commit/c092988e7765b9ac79498d6bd72a6a2f62859b6f)]:
  - @ckb-ccc/core@0.0.16-alpha.1

## 0.0.16-alpha.0

### Patch Changes

- Updated dependencies [[`1720d5a`](https://github.com/ckb-devrel/ccc/commit/1720d5a398543f1c6e24763eeaf15d84cd2214bf)]:
  - @ckb-ccc/core@0.0.16-alpha.0

## 0.0.15

### Patch Changes

- Updated dependencies [[`8f2560a`](https://github.com/ckb-devrel/ccc/commit/8f2560ab0e5619654fff7c5eacda8425385f908e)]:
  - @ckb-ccc/core@0.0.15

## 0.0.14

### Patch Changes

- Updated dependencies [[`5e942f8`](https://github.com/ckb-devrel/ccc/commit/5e942f8f1ed678abdb7ab9716f5449f0714cea53), [`f5b5938`](https://github.com/ckb-devrel/ccc/commit/f5b5938ab8f9c0a338dfd6765fe717f7ad1b1dd8), [`f13f4d3`](https://github.com/ckb-devrel/ccc/commit/f13f4d319ca66b571029a65e945e3a038bfeea25), [`7ba62a0`](https://github.com/ckb-devrel/ccc/commit/7ba62a056f17808fe5684786c00c2dff80bb7d1d), [`2164efd`](https://github.com/ckb-devrel/ccc/commit/2164efd6d834c1917ad5f4a514dc25941f937185), [`e5bd2ad`](https://github.com/ckb-devrel/ccc/commit/e5bd2ad5de4b42a22c422ecfc42056750f69b88b), [`aae3e06`](https://github.com/ckb-devrel/ccc/commit/aae3e0679fb940dd8c12ac9be12a4b53277a339d)]:
  - @ckb-ccc/core@0.0.14

## 0.0.14-alpha.2

### Patch Changes

- Updated dependencies [[`7ba62a0`](https://github.com/ckb-devrel/ccc/commit/7ba62a056f17808fe5684786c00c2dff80bb7d1d)]:
  - @ckb-ccc/core@0.0.14-alpha.2

## 0.0.14-alpha.1

### Patch Changes

- Updated dependencies [[`5e942f8`](https://github.com/ckb-devrel/ccc/commit/5e942f8f1ed678abdb7ab9716f5449f0714cea53), [`e5bd2ad`](https://github.com/ckb-devrel/ccc/commit/e5bd2ad5de4b42a22c422ecfc42056750f69b88b), [`aae3e06`](https://github.com/ckb-devrel/ccc/commit/aae3e0679fb940dd8c12ac9be12a4b53277a339d)]:
  - @ckb-ccc/core@0.0.14-alpha.1

## 0.0.14-alpha.0

### Patch Changes

- Updated dependencies [[`f5b5938`](https://github.com/ckb-devrel/ccc/commit/f5b5938ab8f9c0a338dfd6765fe717f7ad1b1dd8), [`2164efd`](https://github.com/ckb-devrel/ccc/commit/2164efd6d834c1917ad5f4a514dc25941f937185)]:
  - @ckb-ccc/core@0.0.14-alpha.0

## 0.0.13

### Patch Changes

- [`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): recordCells should not add usableCells

- [`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): node.js websocket

- [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): completeInputs

- [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): more APIs. Since parsing.

- [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Signer.findCells

- Updated dependencies [[`3378e85`](https://github.com/ckb-devrel/ccc/commit/3378e85b32797f5cdc1943b9ecaca1fd1d9fad5e), [`8629449`](https://github.com/ckb-devrel/ccc/commit/86294490e76fc2a1cee20f827883e02fceca6e8b), [`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97), [`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f), [`69c10fd`](https://github.com/ckb-devrel/ccc/commit/69c10fdfcd507433c13b15d17015dca4687afb97), [`600cc13`](https://github.com/ckb-devrel/ccc/commit/600cc137ac6eb7c5b2533670de6df29d82f1b9e1), [`642f731`](https://github.com/ckb-devrel/ccc/commit/642f7317f4951ef801f1245aea96c40b4b6fb73e), [`96dbb61`](https://github.com/ckb-devrel/ccc/commit/96dbb6107d2071b9383350ddd578557746227054), [`0462a4e`](https://github.com/ckb-devrel/ccc/commit/0462a4ee101926f0da857173626dc4ab879e3b56), [`52156f9`](https://github.com/ckb-devrel/ccc/commit/52156f9df9cae9e0b71b77b49cda0e4d73e76142), [`63606db`](https://github.com/ckb-devrel/ccc/commit/63606db908f95bfc857430083932144d1ef4deef), [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b), [`1043c2b`](https://github.com/ckb-devrel/ccc/commit/1043c2bc211ec283b88dba3b81feef98e4185c0e), [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11), [`1f999f8`](https://github.com/ckb-devrel/ccc/commit/1f999f854beb255b3cd9dbbc5a7268e75442b3db), [`a69a9dc`](https://github.com/ckb-devrel/ccc/commit/a69a9dc0c722f7b4cfa36b2ae8ecba4dcde0db90), [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895)]:
  - @ckb-ccc/core@0.0.13

## 0.0.13-alpha.8

### Patch Changes

- Updated dependencies [[`8629449`](https://github.com/ckb-devrel/ccc/commit/86294490e76fc2a1cee20f827883e02fceca6e8b), [`52156f9`](https://github.com/ckb-devrel/ccc/commit/52156f9df9cae9e0b71b77b49cda0e4d73e76142), [`63606db`](https://github.com/ckb-devrel/ccc/commit/63606db908f95bfc857430083932144d1ef4deef)]:
  - @ckb-ccc/core@0.0.13-alpha.8

## 0.0.13-alpha.7

### Patch Changes

- [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): more APIs. Since parsing.

- [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Signer.findCells

- Updated dependencies [[`1043c2b`](https://github.com/ckb-devrel/ccc/commit/1043c2bc211ec283b88dba3b81feef98e4185c0e), [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11), [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895)]:
  - @ckb-ccc/core@0.0.13-alpha.7

## 0.0.13-alpha.6

### Patch Changes

- [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): completeInputs

- Updated dependencies [[`69c10fd`](https://github.com/ckb-devrel/ccc/commit/69c10fdfcd507433c13b15d17015dca4687afb97), [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b)]:
  - @ckb-ccc/core@0.0.13-alpha.6

## 0.0.13-alpha.5

### Patch Changes

- [`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): recordCells should not add usableCells

- Updated dependencies [[`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97)]:
  - @ckb-ccc/core@0.0.13-alpha.5

## 0.0.13-alpha.4

### Patch Changes

- [`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): node.js websocket

- Updated dependencies [[`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f), [`642f731`](https://github.com/ckb-devrel/ccc/commit/642f7317f4951ef801f1245aea96c40b4b6fb73e)]:
  - @ckb-ccc/core@0.0.13-alpha.4

## 0.0.13-alpha.3

### Patch Changes

- Updated dependencies [[`1f999f8`](https://github.com/ckb-devrel/ccc/commit/1f999f854beb255b3cd9dbbc5a7268e75442b3db)]:
  - @ckb-ccc/core@0.0.13-alpha.3

## 0.0.13-alpha.2

### Patch Changes

- Updated dependencies [[`96dbb61`](https://github.com/ckb-devrel/ccc/commit/96dbb6107d2071b9383350ddd578557746227054)]:
  - @ckb-ccc/core@0.0.13-alpha.2

## 0.0.13-alpha.1

### Patch Changes

- Updated dependencies [[`3378e85`](https://github.com/ckb-devrel/ccc/commit/3378e85b32797f5cdc1943b9ecaca1fd1d9fad5e), [`a69a9dc`](https://github.com/ckb-devrel/ccc/commit/a69a9dc0c722f7b4cfa36b2ae8ecba4dcde0db90)]:
  - @ckb-ccc/core@0.0.13-alpha.1

## 0.0.13-alpha.0

### Patch Changes

- Updated dependencies [[`600cc13`](https://github.com/ckb-devrel/ccc/commit/600cc137ac6eb7c5b2533670de6df29d82f1b9e1)]:
  - @ckb-ccc/core@0.0.13-alpha.0

## 0.0.12

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/core@0.0.12


================================================
File: packages/lumos-patches/eslint.config.mjs
================================================
// @ts-check

import eslint from "@eslint/js";
import eslintPluginPrettierRecommended from "eslint-plugin-prettier/recommended";
import tseslint from "typescript-eslint";

import { dirname } from "path";
import { fileURLToPath } from "url";

export default [
  ...tseslint.config({
    files: ["**/*.ts"],
    extends: [
      eslint.configs.recommended,
      ...tseslint.configs.recommendedTypeChecked,
    ],
    rules: {
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          args: "all",
          argsIgnorePattern: "^_",
          caughtErrors: "all",
          caughtErrorsIgnorePattern: "^_",
          destructuredArrayIgnorePattern: "^_",
          varsIgnorePattern: "^_",
          ignoreRestSiblings: true,
        },
      ],
      "@typescript-eslint/unbound-method": ["error", { ignoreStatic: true }],
      "@typescript-eslint/no-unsafe-member-access": "off",
      "@typescript-eslint/require-await": "off",
      "no-empty": "off",
      "prefer-const": [
        "error",
        { ignoreReadBeforeAssign: true, destructuring: "all" },
      ],
    },
    languageOptions: {
      parserOptions: {
        project: true,
        tsconfigRootDir: dirname(fileURLToPath(import.meta.url)),
      },
    },
  }),
  eslintPluginPrettierRecommended,
];


================================================
File: packages/lumos-patches/package.json
================================================
{
  "name": "@ckb-ccc/lumos-patches",
  "version": "1.0.11",
  "description": "Patches for using Lumos with CCC",
  "author": "Hanssen0 <hanssen0@hanssen0.com>",
  "license": "MIT",
  "private": false,
  "homepage": "https://github.com/ckb-devrel/ccc",
  "repository": {
    "type": "git",
    "url": "git://github.com/ckb-devrel/ccc.git"
  },
  "sideEffects": false,
  "main": "dist.commonjs/index.js",
  "module": "dist/index.js",
  "exports": {
    ".": {
      "import": "./dist/index.js",
      "require": "./dist.commonjs/index.js",
      "default": "./dist.commonjs/index.js"
    }
  },
  "scripts": {
    "build": "rimraf ./dist && rimraf ./dist.commonjs && tsc && tsc --project tsconfig.commonjs.json && copyfiles -u 2 misc/basedirs/**/* .",
    "lint": "eslint ./src",
    "format": "prettier --write . && eslint --fix ./src"
  },
  "devDependencies": {
    "@eslint/js": "^9.1.1",
    "copyfiles": "^2.4.1",
    "eslint": "^9.1.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.1.3",
    "prettier": "^3.2.5",
    "prettier-plugin-organize-imports": "^3.2.4",
    "rimraf": "^5.0.5",
    "typescript": "^5.4.5",
    "typescript-eslint": "^7.7.0"
  },
  "publishConfig": {
    "access": "public"
  },
  "dependencies": {
    "@ckb-ccc/core": "workspace:*",
    "@ckb-lumos/base": "^0.24.0-next.1",
    "@ckb-lumos/codec": "^0.24.0-next.1",
    "@ckb-lumos/common-scripts": "^0.24.0-next.1",
    "@ckb-lumos/config-manager": "^0.24.0-next.1",
    "@ckb-lumos/helpers": "^0.24.0-next.1",
    "@joyid/ckb": "^1.0.1"
  }
}


================================================
File: packages/lumos-patches/tsconfig.base.json
================================================
{
  "compilerOptions": {
    "target": "es2020",
    "incremental": true,
    "allowJs": true,
    "importHelpers": false,
    "declaration": true,
    "declarationMap": true,
    "experimentalDecorators": true,
    "useDefineForClassFields": false,
    "esModuleInterop": true,
    "strict": true,
    "noImplicitAny": true,
    "strictBindCallApply": true,
    "strictNullChecks": true,
    "alwaysStrict": true,
    "noFallthroughCasesInSwitch": true,
    "forceConsistentCasingInFileNames": true,
    "skipLibCheck": true
  },
  "include": ["src/**/*"]
}


================================================
File: packages/lumos-patches/tsconfig.commonjs.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "NodeNext",
    "moduleResolution": "NodeNext",
    "outDir": "./dist.commonjs"
  }
}


================================================
File: packages/lumos-patches/tsconfig.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "ESNext",
    "moduleResolution": "Bundler",
    "outDir": "./dist",
  }
}


================================================
File: packages/lumos-patches/typedoc.json
================================================
{
  "$schema": "https://typedoc.org/schema.json",
  "entryPoints": ["./src/index.ts"],
  "extends": ["../../typedoc.base.json"],
  "name": "@ckb-ccc lumos-patches"
}


================================================
File: packages/lumos-patches/.npmignore
================================================
node_modules/
misc/

*test.js
*test.ts
*test.d.ts
*test.d.ts.map
*spec.js
*spec.ts
*spec.d.ts
*spec.d.ts.map

tsconfig.json
tsconfig.*.json
eslint.config.mjs
.prettierrc
.prettierignore

tsconfig.tsbuildinfo
tsconfig.*.tsbuildinfo
.github/


================================================
File: packages/lumos-patches/.prettierignore
================================================
node_modules/

dist/
dist.commonjs/

.npmignore
.prettierrc
tsconfig.json
eslint.config.mjs
.prettierrc

tsconfig.tsbuildinfo
.github/


================================================
File: packages/lumos-patches/.prettierrc
================================================
{
  "singleQuote": false,
  "trailingComma": "all",
  "plugins": ["prettier-plugin-organize-imports"]
}


================================================
File: packages/lumos-patches/misc/basedirs/dist/package.json
================================================
{
  "type": "module"
}

================================================
File: packages/lumos-patches/misc/basedirs/dist.commonjs/package.json
================================================
{
  "type": "commonjs"
}


================================================
File: packages/lumos-patches/src/default.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { cccA } from "@ckb-ccc/core/advanced";
import {
  Cell,
  CellCollector,
  CellDep,
  CellProvider,
  QueryOptions,
  Script,
} from "@ckb-lumos/base";
import { bytes } from "@ckb-lumos/codec";
import {
  FromInfo,
  LockScriptInfo,
  parseFromInfo,
} from "@ckb-lumos/common-scripts";
import { Config, getConfig } from "@ckb-lumos/config-manager";
import { TransactionSkeletonType } from "@ckb-lumos/helpers";
import { asserts } from "./utils.js";

function addCellDep(
  txSkeleton: TransactionSkeletonType,
  newCellDep: CellDep,
): TransactionSkeletonType {
  const cellDep = txSkeleton.get("cellDeps").find((cellDep) => {
    return (
      cellDep.depType === newCellDep.depType &&
      ccc.OutPoint.from(cellDep.outPoint).eq(
        ccc.OutPoint.from(newCellDep.outPoint),
      )
    );
  });

  if (!cellDep) {
    txSkeleton = txSkeleton.update("cellDeps", (cellDeps) => {
      return cellDeps.push({
        outPoint: newCellDep.outPoint,
        depType: newCellDep.depType,
      });
    });
  }

  return txSkeleton;
}

/**
 * Generates a class for collecting custom script cells.
 * @param codeHash - The code hash of the custom script.
 * @returns The CustomCellCollector class.
 */
function generateCollectorClass(codeHash: string) {
  /**
   * Class representing a collector for custom script cells.
   */
  return class CustomCellCollector {
    readonly fromScript: Script;
    readonly cellCollector: CellCollector | undefined;

    /**
     * Creates an instance of CustomCollector.
     * @param fromInfo - The information about the address to collect cells from.
     * @param cellProvider - The provider to collect cells from.
     * @param options - The options for the collector.
     * @param] - The query options for collecting cells.
     * @param [options.config=getConfig()] - The Lumos configuration.
     * @throws {Error} If cellProvider is not provided or fromInfo is not a string.
     */
    constructor(
      fromInfo: FromInfo,
      cellProvider: CellProvider,
      {
        queryOptions = {},
        config = getConfig(),
      }: { queryOptions?: QueryOptions; config?: Config },
    ) {
      if (!cellProvider) {
        throw new Error(`cellProvider is required when collecting cells`);
      }

      const { fromScript } = parseFromInfo(fromInfo, { config });
      this.fromScript = fromScript;

      if (!bytes.equal(fromScript.codeHash, codeHash)) {
        this.cellCollector = undefined;
        return;
      }

      queryOptions = {
        ...queryOptions,
        lock: this.fromScript,
        type: queryOptions.type || "empty",
        data: queryOptions.data || "0x",
      };

      this.cellCollector = cellProvider.collector(queryOptions);
    }

    /**
     * Collects custom cells.
     * @async
     * @generator
     * @yields {Cell} The collected cell.
     */
    async *collect(): AsyncGenerator<Cell> {
      if (!this.cellCollector) {
        return;
      }

      for await (const inputCell of this.cellCollector.collect()) {
        yield inputCell;
      }
    }
  };
}

/**
 * Generates custom lock script information.
 * @public
 *
 * @param codeHash - The code hash of the custom script.
 * @param cellDeps - The cell dependencies for the custom script.
 * @returns The lock script information.
 */
export function generateScriptInfo(
  codeHash: string,
  cellDeps: ccc.CellDepInfoLike[],
  dummyLockLength: number,
): LockScriptInfo {
  return {
    codeHash: codeHash,
    hashType: "type",
    lockScriptInfo: {
      CellCollector: generateCollectorClass(codeHash),
      prepareSigningEntries: () => {
        throw new Error(
          "Custom scripts doesn't support prepareSigningEntries.",
        );
      },
      async setupInputCell(txSkeleton, inputCell, _, options = {}) {
        const fromScript = inputCell.cellOutput.lock;
        asserts(
          bytes.equal(fromScript.codeHash, codeHash),
          `The input script is not specified script`,
        );
        // add inputCell to txSkeleton
        txSkeleton = txSkeleton.update("inputs", (inputs) =>
          inputs.push(inputCell),
        );

        const output: Cell = {
          cellOutput: {
            capacity: inputCell.cellOutput.capacity,
            lock: inputCell.cellOutput.lock,
            type: inputCell.cellOutput.type,
          },
          data: inputCell.data,
        };

        txSkeleton = txSkeleton.update("outputs", (outputs) =>
          outputs.push(output),
        );

        const since = options.since;
        if (since) {
          txSkeleton = txSkeleton.update("inputSinces", (inputSinces) => {
            return inputSinces.set(txSkeleton.get("inputs").size - 1, since);
          });
        }

        await Promise.all(
          cellDeps.map(async (itemLike) => {
            const item = ccc.CellDepInfo.from(itemLike);
            if (item.type && txSkeleton.cellProvider != null) {
              for await (const cell of txSkeleton.cellProvider
                .collector({
                  type: item.type,
                })
                .collect()) {
                txSkeleton = addCellDep(txSkeleton, {
                  depType: "code",
                  outPoint: cell.outPoint!,
                });
              }
            } else {
              txSkeleton = addCellDep(txSkeleton, {
                ...item.cellDep,
                outPoint: {
                  txHash: item.cellDep.outPoint.txHash,
                  index: ccc.numToHex(item.cellDep.outPoint.index),
                },
              });
            }
          }),
        );

        const firstIndex = txSkeleton
          .get("inputs")
          .findIndex((input) =>
            ccc.Script.from(input.cellOutput.lock).eq(
              ccc.Script.from(fromScript),
            ),
          );
        txSkeleton = txSkeleton.update("witnesses", (witnesses) => {
          if (witnesses.get(firstIndex)) {
            witnesses = witnesses.merge(
              Array.from(
                new Array(firstIndex + 1 - witnesses.size),
                () => "0x",
              ),
            );
          }

          return witnesses.set(
            firstIndex,
            ccc.hexFrom(
              ccc.WitnessArgs.from({
                lock: Array.from(new Array(dummyLockLength), () => 0),
              }).toBytes(),
            ),
          );
        });

        return txSkeleton;
      },
    },
  };
}

/**
 * Generates default script information for CCC.
 * @returns An array of lock script information.
 */
export function generateDefaultScriptInfos(): LockScriptInfo[] {
  const mainnet = cccA.MAINNET_SCRIPTS;
  const testnet = cccA.TESTNET_SCRIPTS;

  return (
    [
      [ccc.KnownScript.JoyId, 1000],
      [ccc.KnownScript.NostrLock, 572],
      [ccc.KnownScript.PWLock, 65],
    ] as [ccc.KnownScript, number][]
  )
    .map(([script, dummyLockLength]) => [
      generateScriptInfo(
        ccc.hexFrom(testnet[script].codeHash),
        testnet[script].cellDeps,
        dummyLockLength,
      ),
      generateScriptInfo(
        ccc.hexFrom(mainnet[script]!.codeHash),
        mainnet[script]!.cellDeps,
        dummyLockLength,
      ),
    ])
    .flat();
}


================================================
File: packages/lumos-patches/src/index.ts
================================================
export * from "./default.js";
export * from "./utils.js";


================================================
File: packages/lumos-patches/src/utils.ts
================================================
/**
 * Asserts that a condition is true, throwing an error if it is not.
 * @public
 *
 * @param condition - The condition to assert.
 * @param [message="Assert failed"] - The error message to throw if the condition is false.
 * @throws {Error} If the condition is false.
 */
export function asserts(
  condition: unknown,
  message = "Assert failed",
): asserts condition {
  if (!condition) {
    throw new Error(message);
  }
}


================================================
File: packages/nip07/README.md
================================================
<p align="center">
  <a href="https://app.ckbccc.com/">
    <img alt="Logo" src="https://raw.githubusercontent.com/ckb-devrel/ccc/master/assets/logoAndText.svg" style="height: 8rem; max-width: 90%; padding: 0.5rem 0;" />
  </a>
</p>

<h1 align="center" style="font-size: 48px;">
  CCC's support for NIP07
</h1>

<p align="center">
  <a href="https://www.npmjs.com/package/@ckb-ccc/nip07"><img
    alt="NPM Version" src="https://img.shields.io/npm/v/%40ckb-ccc%2Fnip07"
  /></a>
  <img alt="GitHub commit activity" src="https://img.shields.io/github/commit-activity/m/ckb-devrel/ccc" />
  <img alt="GitHub last commit" src="https://img.shields.io/github/last-commit/ckb-devrel/ccc/master" />
  <img alt="GitHub branch check runs" src="https://img.shields.io/github/check-runs/ckb-devrel/ccc/master" />
  <a href="https://live.ckbccc.com/"><img
    alt="Playground" src="https://img.shields.io/website?url=https%3A%2F%2Flive.ckbccc.com%2F&label=Playground"
  /></a>
  <a href="https://app.ckbccc.com/"><img
    alt="App" src="https://img.shields.io/website?url=https%3A%2F%2Fapp.ckbccc.com%2F&label=App"
  /></a>
  <a href="https://docs.ckbccc.com/"><img
    alt="Docs" src="https://img.shields.io/website?url=https%3A%2F%2Fdocs.ckbccc.com%2F&label=Docs"
  /></a>
</p>

<p align="center">
  CCC - CKBers' Codebase is a one-stop solution for your CKB JS/TS ecosystem development.
  <br />
  Empower yourself with CCC to discover the unlimited potential of CKB.
  <br />
  Interoperate with wallets from different chain ecosystems.
  <br />
  Fully enabling CKB's Turing completeness and cryptographic freedom power.
</p>

<h3 align="center">
  Read more about CCC on <a href="https://docs.ckbccc.com">our website</a> or <a href="https://github.com/ckb-devrel/ccc">GitHub Repo</a>.
</h3>


================================================
File: packages/nip07/CHANGELOG.md
================================================
# @ckb-ccc/nip07

## 1.0.11

### Patch Changes

- Updated dependencies [[`28c211d`](https://github.com/ckb-devrel/ccc/commit/28c211d839a2d2305eca56e82ba7da144aa3df4a)]:
  - @ckb-ccc/core@1.5.0

## 1.0.10

### Patch Changes

- Updated dependencies [[`3fdb2c4`](https://github.com/ckb-devrel/ccc/commit/3fdb2c477d0b2766b231e436b8f396f047b02634), [`f429087`](https://github.com/ckb-devrel/ccc/commit/f4290874dfab3fe58844e5169673c5d47bda64e3)]:
  - @ckb-ccc/core@1.4.0

## 1.0.9

### Patch Changes

- Updated dependencies [[`a48cccf`](https://github.com/ckb-devrel/ccc/commit/a48cccfae3ce6b3456a5eb863f207e7e5a6e568f)]:
  - @ckb-ccc/core@1.3.1

## 1.0.8

### Patch Changes

- Updated dependencies [[`4dbf4fd`](https://github.com/ckb-devrel/ccc/commit/4dbf4fd8021cf14d05282706a7667ea7d108fb09), [`4c76f9e`](https://github.com/ckb-devrel/ccc/commit/4c76f9e2a93a226fcfc4c32a5378bb531bfff08f), [`c2c4c26`](https://github.com/ckb-devrel/ccc/commit/c2c4c264e04461948e4b913b2f22054e6032ddc8), [`b6a73fa`](https://github.com/ckb-devrel/ccc/commit/b6a73fa9628ebdff51cb8f246309654cd53e36f2), [`8c97c85`](https://github.com/ckb-devrel/ccc/commit/8c97c851db4a2d940c7e59116ca7620cfd0afae1)]:
  - @ckb-ccc/core@1.3.0

## 1.0.7

### Patch Changes

- Updated dependencies [[`01263bd`](https://github.com/ckb-devrel/ccc/commit/01263bd8c601fa8fcdfa24be52601716e1864843)]:
  - @ckb-ccc/core@1.2.3

## 1.0.6

### Patch Changes

- Updated dependencies [[`7886e3d`](https://github.com/ckb-devrel/ccc/commit/7886e3d89e9ca8f3514a2044c6dd4e8ec6b49933)]:
  - @ckb-ccc/core@1.2.2

## 1.0.5

### Patch Changes

- Updated dependencies [[`94e2618`](https://github.com/ckb-devrel/ccc/commit/94e26182515e09d6086ec5b653d091f117a499e6)]:
  - @ckb-ccc/core@1.2.1

## 1.0.4

### Patch Changes

- Updated dependencies [[`128e87b`](https://github.com/ckb-devrel/ccc/commit/128e87b5ca3e97bfe7842e76f786aa6aec010797)]:
  - @ckb-ccc/core@1.2.0

## 1.0.3

### Patch Changes

- Updated dependencies [[`925991c`](https://github.com/ckb-devrel/ccc/commit/925991c8a24b1f34667e30b28b69812e936e3928)]:
  - @ckb-ccc/core@1.1.1

## 1.0.2

### Patch Changes

- Updated dependencies [[`ddc0a28`](https://github.com/ckb-devrel/ccc/commit/ddc0a281c3d1dfa6ebc990dae92994f026dfddcc)]:
  - @ckb-ccc/core@1.1.0

## 1.0.1

### Patch Changes

- Updated dependencies [[`719055b`](https://github.com/ckb-devrel/ccc/commit/719055b404f31b40362f51714b9f11c85b857581), [`94caaca`](https://github.com/ckb-devrel/ccc/commit/94caaca11c63752a25282d42f51161c94397dec6)]:
  - @ckb-ccc/core@1.0.1

## 1.0.0

### Major Changes

- [#107](https://github.com/ckb-devrel/ccc/pull/107) [`b99f55f`](https://github.com/ckb-devrel/ccc/commit/b99f55f74e64106391ce53f7d0bd0fa7522023cc) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: molecule

### Patch Changes

- Updated dependencies [[`b99f55f`](https://github.com/ckb-devrel/ccc/commit/b99f55f74e64106391ce53f7d0bd0fa7522023cc)]:
  - @ckb-ccc/core@1.0.0

## 0.0.18

### Patch Changes

- Updated dependencies [[`c1cb910`](https://github.com/ckb-devrel/ccc/commit/c1cb91091780c7b33fbbd683ef8edc9f11452ecd)]:
  - @ckb-ccc/core@0.1.2

## 0.0.17

### Patch Changes

- [#101](https://github.com/ckb-devrel/ccc/pull/101) [`d9affcc`](https://github.com/ckb-devrel/ccc/commit/d9affcc01c7b839b227e4d79bcb66e717577502a) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix: commonjs

- Updated dependencies [[`d9affcc`](https://github.com/ckb-devrel/ccc/commit/d9affcc01c7b839b227e4d79bcb66e717577502a)]:
  - @ckb-ccc/core@0.1.1

## 0.0.16

### Patch Changes

- [#70](https://github.com/ckb-devrel/ccc/pull/70) [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): websocket transport

- Updated dependencies [[`a3d5359`](https://github.com/ckb-devrel/ccc/commit/a3d53595f6dd11f2f59cdf0086b3d7ce558a2fdd), [`8824ff2`](https://github.com/ckb-devrel/ccc/commit/8824ff27af3b76186f1a7d6db8c907cd66f09d6a), [`f07a506`](https://github.com/ckb-devrel/ccc/commit/f07a506bd6fc27fe659a17d2f7baaeec54716d81), [`f21d7e4`](https://github.com/ckb-devrel/ccc/commit/f21d7e4cf422edab4a836ef6d678b620594fef8d), [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366), [`1720d5a`](https://github.com/ckb-devrel/ccc/commit/1720d5a398543f1c6e24763eeaf15d84cd2214bf), [`e63a06e`](https://github.com/ckb-devrel/ccc/commit/e63a06ee75ac8595208d216dec88a4228c465e23), [`c092988`](https://github.com/ckb-devrel/ccc/commit/c092988e7765b9ac79498d6bd72a6a2f62859b6f), [`50f2ce0`](https://github.com/ckb-devrel/ccc/commit/50f2ce08e74cb3fbeae926267d42e28b426fd7f4), [`4709384`](https://github.com/ckb-devrel/ccc/commit/4709384e37188991cb937b16f99f47ca82c912b8)]:
  - @ckb-ccc/core@0.1.0

## 0.0.16-alpha.7

### Patch Changes

- Updated dependencies [[`f07a506`](https://github.com/ckb-devrel/ccc/commit/f07a506bd6fc27fe659a17d2f7baaeec54716d81)]:
  - @ckb-ccc/core@0.1.0-alpha.7

## 0.0.16-alpha.6

### Patch Changes

- Updated dependencies [[`4709384`](https://github.com/ckb-devrel/ccc/commit/4709384e37188991cb937b16f99f47ca82c912b8)]:
  - @ckb-ccc/core@0.1.0-alpha.6

## 0.0.16-alpha.5

### Patch Changes

- Updated dependencies [[`50f2ce0`](https://github.com/ckb-devrel/ccc/commit/50f2ce08e74cb3fbeae926267d42e28b426fd7f4)]:
  - @ckb-ccc/core@0.1.0-alpha.5

## 0.0.16-alpha.4

### Patch Changes

- Updated dependencies [[`f21d7e4`](https://github.com/ckb-devrel/ccc/commit/f21d7e4cf422edab4a836ef6d678b620594fef8d)]:
  - @ckb-ccc/core@0.1.0-alpha.4

## 0.0.16-alpha.3

### Patch Changes

- Updated dependencies [[`a3d5359`](https://github.com/ckb-devrel/ccc/commit/a3d53595f6dd11f2f59cdf0086b3d7ce558a2fdd)]:
  - @ckb-ccc/core@0.0.16-alpha.3

## 0.0.16-alpha.2

### Patch Changes

- [#70](https://github.com/ckb-devrel/ccc/pull/70) [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): websocket transport

- Updated dependencies [[`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366)]:
  - @ckb-ccc/core@0.0.16-alpha.2

## 0.0.16-alpha.1

### Patch Changes

- Updated dependencies [[`8824ff2`](https://github.com/ckb-devrel/ccc/commit/8824ff27af3b76186f1a7d6db8c907cd66f09d6a), [`c092988`](https://github.com/ckb-devrel/ccc/commit/c092988e7765b9ac79498d6bd72a6a2f62859b6f)]:
  - @ckb-ccc/core@0.0.16-alpha.1

## 0.0.16-alpha.0

### Patch Changes

- Updated dependencies [[`1720d5a`](https://github.com/ckb-devrel/ccc/commit/1720d5a398543f1c6e24763eeaf15d84cd2214bf)]:
  - @ckb-ccc/core@0.0.16-alpha.0

## 0.0.15

### Patch Changes

- Updated dependencies [[`8f2560a`](https://github.com/ckb-devrel/ccc/commit/8f2560ab0e5619654fff7c5eacda8425385f908e)]:
  - @ckb-ccc/core@0.0.15

## 0.0.14

### Patch Changes

- Updated dependencies [[`5e942f8`](https://github.com/ckb-devrel/ccc/commit/5e942f8f1ed678abdb7ab9716f5449f0714cea53), [`f5b5938`](https://github.com/ckb-devrel/ccc/commit/f5b5938ab8f9c0a338dfd6765fe717f7ad1b1dd8), [`f13f4d3`](https://github.com/ckb-devrel/ccc/commit/f13f4d319ca66b571029a65e945e3a038bfeea25), [`7ba62a0`](https://github.com/ckb-devrel/ccc/commit/7ba62a056f17808fe5684786c00c2dff80bb7d1d), [`2164efd`](https://github.com/ckb-devrel/ccc/commit/2164efd6d834c1917ad5f4a514dc25941f937185), [`e5bd2ad`](https://github.com/ckb-devrel/ccc/commit/e5bd2ad5de4b42a22c422ecfc42056750f69b88b), [`aae3e06`](https://github.com/ckb-devrel/ccc/commit/aae3e0679fb940dd8c12ac9be12a4b53277a339d)]:
  - @ckb-ccc/core@0.0.14

## 0.0.14-alpha.2

### Patch Changes

- Updated dependencies [[`7ba62a0`](https://github.com/ckb-devrel/ccc/commit/7ba62a056f17808fe5684786c00c2dff80bb7d1d)]:
  - @ckb-ccc/core@0.0.14-alpha.2

## 0.0.14-alpha.1

### Patch Changes

- Updated dependencies [[`5e942f8`](https://github.com/ckb-devrel/ccc/commit/5e942f8f1ed678abdb7ab9716f5449f0714cea53), [`e5bd2ad`](https://github.com/ckb-devrel/ccc/commit/e5bd2ad5de4b42a22c422ecfc42056750f69b88b), [`aae3e06`](https://github.com/ckb-devrel/ccc/commit/aae3e0679fb940dd8c12ac9be12a4b53277a339d)]:
  - @ckb-ccc/core@0.0.14-alpha.1

## 0.0.14-alpha.0

### Patch Changes

- Updated dependencies [[`f5b5938`](https://github.com/ckb-devrel/ccc/commit/f5b5938ab8f9c0a338dfd6765fe717f7ad1b1dd8), [`2164efd`](https://github.com/ckb-devrel/ccc/commit/2164efd6d834c1917ad5f4a514dc25941f937185)]:
  - @ckb-ccc/core@0.0.14-alpha.0

## 0.0.13

### Patch Changes

- [`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): recordCells should not add usableCells

- [`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): node.js websocket

- [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): completeInputs

- [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): more APIs. Since parsing.

- [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Signer.findCells

- Updated dependencies [[`3378e85`](https://github.com/ckb-devrel/ccc/commit/3378e85b32797f5cdc1943b9ecaca1fd1d9fad5e), [`8629449`](https://github.com/ckb-devrel/ccc/commit/86294490e76fc2a1cee20f827883e02fceca6e8b), [`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97), [`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f), [`69c10fd`](https://github.com/ckb-devrel/ccc/commit/69c10fdfcd507433c13b15d17015dca4687afb97), [`600cc13`](https://github.com/ckb-devrel/ccc/commit/600cc137ac6eb7c5b2533670de6df29d82f1b9e1), [`642f731`](https://github.com/ckb-devrel/ccc/commit/642f7317f4951ef801f1245aea96c40b4b6fb73e), [`96dbb61`](https://github.com/ckb-devrel/ccc/commit/96dbb6107d2071b9383350ddd578557746227054), [`0462a4e`](https://github.com/ckb-devrel/ccc/commit/0462a4ee101926f0da857173626dc4ab879e3b56), [`52156f9`](https://github.com/ckb-devrel/ccc/commit/52156f9df9cae9e0b71b77b49cda0e4d73e76142), [`63606db`](https://github.com/ckb-devrel/ccc/commit/63606db908f95bfc857430083932144d1ef4deef), [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b), [`1043c2b`](https://github.com/ckb-devrel/ccc/commit/1043c2bc211ec283b88dba3b81feef98e4185c0e), [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11), [`1f999f8`](https://github.com/ckb-devrel/ccc/commit/1f999f854beb255b3cd9dbbc5a7268e75442b3db), [`a69a9dc`](https://github.com/ckb-devrel/ccc/commit/a69a9dc0c722f7b4cfa36b2ae8ecba4dcde0db90), [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895)]:
  - @ckb-ccc/core@0.0.13

## 0.0.13-alpha.8

### Patch Changes

- Updated dependencies [[`8629449`](https://github.com/ckb-devrel/ccc/commit/86294490e76fc2a1cee20f827883e02fceca6e8b), [`52156f9`](https://github.com/ckb-devrel/ccc/commit/52156f9df9cae9e0b71b77b49cda0e4d73e76142), [`63606db`](https://github.com/ckb-devrel/ccc/commit/63606db908f95bfc857430083932144d1ef4deef)]:
  - @ckb-ccc/core@0.0.13-alpha.8

## 0.0.13-alpha.7

### Patch Changes

- [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): more APIs. Since parsing.

- [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Signer.findCells

- Updated dependencies [[`1043c2b`](https://github.com/ckb-devrel/ccc/commit/1043c2bc211ec283b88dba3b81feef98e4185c0e), [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11), [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895)]:
  - @ckb-ccc/core@0.0.13-alpha.7

## 0.0.13-alpha.6

### Patch Changes

- [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): completeInputs

- Updated dependencies [[`69c10fd`](https://github.com/ckb-devrel/ccc/commit/69c10fdfcd507433c13b15d17015dca4687afb97), [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b)]:
  - @ckb-ccc/core@0.0.13-alpha.6

## 0.0.13-alpha.5

### Patch Changes

- [`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): recordCells should not add usableCells

- Updated dependencies [[`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97)]:
  - @ckb-ccc/core@0.0.13-alpha.5

## 0.0.13-alpha.4

### Patch Changes

- [`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): node.js websocket

- Updated dependencies [[`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f), [`642f731`](https://github.com/ckb-devrel/ccc/commit/642f7317f4951ef801f1245aea96c40b4b6fb73e)]:
  - @ckb-ccc/core@0.0.13-alpha.4

## 0.0.13-alpha.3

### Patch Changes

- Updated dependencies [[`1f999f8`](https://github.com/ckb-devrel/ccc/commit/1f999f854beb255b3cd9dbbc5a7268e75442b3db)]:
  - @ckb-ccc/core@0.0.13-alpha.3

## 0.0.13-alpha.2

### Patch Changes

- Updated dependencies [[`96dbb61`](https://github.com/ckb-devrel/ccc/commit/96dbb6107d2071b9383350ddd578557746227054)]:
  - @ckb-ccc/core@0.0.13-alpha.2

## 0.0.13-alpha.1

### Patch Changes

- Updated dependencies [[`3378e85`](https://github.com/ckb-devrel/ccc/commit/3378e85b32797f5cdc1943b9ecaca1fd1d9fad5e), [`a69a9dc`](https://github.com/ckb-devrel/ccc/commit/a69a9dc0c722f7b4cfa36b2ae8ecba4dcde0db90)]:
  - @ckb-ccc/core@0.0.13-alpha.1

## 0.0.13-alpha.0

### Patch Changes

- Updated dependencies [[`600cc13`](https://github.com/ckb-devrel/ccc/commit/600cc137ac6eb7c5b2533670de6df29d82f1b9e1)]:
  - @ckb-ccc/core@0.0.13-alpha.0

## 0.0.12

### Patch Changes

- [`6bee006`](https://github.com/ckb-devrel/ccc/commit/6bee006fbcb96986c65ca4d2d896fca21db2503b) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(connector): catch connecting error

- Updated dependencies []:
  - @ckb-ccc/core@0.0.12

## 0.0.12-alpha.2

### Patch Changes

- fix(connector): catch connecting error


================================================
File: packages/nip07/eslint.config.mjs
================================================
// @ts-check

import eslint from "@eslint/js";
import eslintPluginPrettierRecommended from "eslint-plugin-prettier/recommended";
import tseslint from "typescript-eslint";

import { dirname } from "path";
import { fileURLToPath } from "url";

export default [
  ...tseslint.config({
    files: ["**/*.ts"],
    extends: [
      eslint.configs.recommended,
      ...tseslint.configs.recommendedTypeChecked,
    ],
    rules: {
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          args: "all",
          argsIgnorePattern: "^_",
          caughtErrors: "all",
          caughtErrorsIgnorePattern: "^_",
          destructuredArrayIgnorePattern: "^_",
          varsIgnorePattern: "^_",
          ignoreRestSiblings: true,
        },
      ],
      "@typescript-eslint/unbound-method": ["error", { ignoreStatic: true }],
      "@typescript-eslint/no-unsafe-member-access": "off",
      "@typescript-eslint/require-await": "off",
      "no-empty": "off",
      "prefer-const": [
        "error",
        { ignoreReadBeforeAssign: true, destructuring: "all" },
      ],
    },
    languageOptions: {
      parserOptions: {
        project: true,
        tsconfigRootDir: dirname(fileURLToPath(import.meta.url)),
      },
    },
  }),
  eslintPluginPrettierRecommended,
];


================================================
File: packages/nip07/package.json
================================================
{
  "name": "@ckb-ccc/nip07",
  "version": "1.0.11",
  "description": "CCC - CKBer's Codebase. Common Chains Connector's support for NIP07",
  "author": "Hanssen0 <hanssen0@hanssen0.com>",
  "license": "MIT",
  "private": false,
  "homepage": "https://github.com/ckb-devrel/ccc",
  "repository": {
    "type": "git",
    "url": "git://github.com/ckb-devrel/ccc.git"
  },
  "sideEffects": false,
  "main": "dist.commonjs/index.js",
  "module": "dist/index.js",
  "exports": {
    ".": {
      "import": "./dist/index.js",
      "require": "./dist.commonjs/index.js",
      "default": "./dist.commonjs/index.js"
    },
    "./advanced": {
      "import": "./dist/advanced.js",
      "require": "./dist.commonjs/advanced.js",
      "default": "./dist.commonjs/advanced.js"
    }
  },
  "scripts": {
    "build": "rimraf ./dist && rimraf ./dist.commonjs && tsc && tsc --project tsconfig.commonjs.json && copyfiles -u 2 misc/basedirs/**/* .",
    "lint": "eslint ./src",
    "format": "prettier --write . && eslint --fix ./src"
  },
  "devDependencies": {
    "@eslint/js": "^9.1.1",
    "copyfiles": "^2.4.1",
    "eslint": "^9.1.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.1.3",
    "prettier": "^3.2.5",
    "prettier-plugin-organize-imports": "^3.2.4",
    "rimraf": "^5.0.5",
    "typescript": "^5.4.5",
    "typescript-eslint": "^7.7.0"
  },
  "publishConfig": {
    "access": "public"
  },
  "dependencies": {
    "@ckb-ccc/core": "workspace:*"
  }
}


================================================
File: packages/nip07/tsconfig.base.json
================================================
{
  "compilerOptions": {
    "target": "es2020",
    "incremental": true,
    "allowJs": true,
    "importHelpers": false,
    "declaration": true,
    "declarationMap": true,
    "experimentalDecorators": true,
    "useDefineForClassFields": false,
    "esModuleInterop": true,
    "strict": true,
    "noImplicitAny": true,
    "strictBindCallApply": true,
    "strictNullChecks": true,
    "alwaysStrict": true,
    "noFallthroughCasesInSwitch": true,
    "forceConsistentCasingInFileNames": true,
    "skipLibCheck": true
  },
  "include": ["src/**/*"]
}


================================================
File: packages/nip07/tsconfig.commonjs.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "NodeNext",
    "moduleResolution": "NodeNext",
    "outDir": "./dist.commonjs"
  }
}


================================================
File: packages/nip07/tsconfig.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "ESNext",
    "moduleResolution": "Bundler",
    "outDir": "./dist",
  }
}


================================================
File: packages/nip07/typedoc.json
================================================
{
  "$schema": "https://typedoc.org/schema.json",
  "entryPoints": ["./src/index.ts", "./src/advanced.ts"],
  "extends": ["../../typedoc.base.json"],
  "name": "@ckb-ccc nip07"
}


================================================
File: packages/nip07/.npmignore
================================================
node_modules/
misc/

*test.js
*test.ts
*test.d.ts
*test.d.ts.map
*spec.js
*spec.ts
*spec.d.ts
*spec.d.ts.map

tsconfig.json
tsconfig.*.json
eslint.config.mjs
.prettierrc
.prettierignore

tsconfig.tsbuildinfo
tsconfig.*.tsbuildinfo
.github/


================================================
File: packages/nip07/.prettierignore
================================================
node_modules/

dist/
dist.commonjs/

.npmignore
.prettierrc
tsconfig.json
eslint.config.mjs
.prettierrc

tsconfig.tsbuildinfo
.github/


================================================
File: packages/nip07/.prettierrc
================================================
{
  "singleQuote": false,
  "trailingComma": "all",
  "plugins": ["prettier-plugin-organize-imports"]
}


================================================
File: packages/nip07/misc/basedirs/dist/package.json
================================================
{
  "type": "module"
}

================================================
File: packages/nip07/misc/basedirs/dist.commonjs/package.json
================================================
{
  "type": "commonjs"
}


================================================
File: packages/nip07/src/advanced.ts
================================================
export * as Nip07A from "./nip07.advanced.js";


================================================
File: packages/nip07/src/barrel.ts
================================================
export * from "./signer.js";
export * from "./signersFactory.js";


================================================
File: packages/nip07/src/index.ts
================================================
export * as Nip07 from "./barrel.js";


================================================
File: packages/nip07/src/nip07.advanced.ts
================================================
import { ccc } from "@ckb-ccc/core";

export interface Provider {
  getPublicKey(): Promise<string>;
  signEvent(event: ccc.NostrEvent): Promise<Required<ccc.NostrEvent>>;
}


================================================
File: packages/nip07/src/signer.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { Provider } from "./nip07.advanced.js";

/**
 * @public
 */
export class Signer extends ccc.SignerNostr {
  private publicKeyCache?: Promise<string> = undefined;

  constructor(
    client: ccc.Client,
    public readonly provider: Provider,
  ) {
    super(client);
  }

  async getNostrPublicKey(): Promise<ccc.Hex> {
    if (!this.publicKeyCache) {
      this.publicKeyCache = this.provider.getPublicKey().catch((e) => {
        this.publicKeyCache = undefined;
        throw e;
      });
    }

    return ccc.hexFrom(await this.publicKeyCache);
  }

  async signNostrEvent(
    event: ccc.NostrEvent,
  ): Promise<Required<ccc.NostrEvent>> {
    return this.provider.signEvent({
      ...event,
      pubkey: await this.publicKeyCache,
    });
  }

  async connect(): Promise<void> {
    await this.getNostrPublicKey();
  }

  async isConnected(): Promise<boolean> {
    return true;
  }
}


================================================
File: packages/nip07/src/signersFactory.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { Provider } from "./nip07.advanced.js";
import { Signer } from "./signer.js";

/**
 * @public
 */
export function getNip07Signer(client: ccc.Client): Signer | undefined {
  const windowRef = window as { nostr?: Provider };

  if (typeof windowRef.nostr === "undefined") {
    return;
  }

  return new Signer(client, windowRef.nostr);
}


================================================
File: packages/okx/README.md
================================================
<p align="center">
  <a href="https://app.ckbccc.com/">
    <img alt="Logo" src="https://raw.githubusercontent.com/ckb-devrel/ccc/master/assets/logoAndText.svg" style="height: 8rem; max-width: 90%; padding: 0.5rem 0;" />
  </a>
</p>

<h1 align="center" style="font-size: 48px;">
  CCC's support for OKX
</h1>

<p align="center">
  <a href="https://www.npmjs.com/package/@ckb-ccc/okx"><img
    alt="NPM Version" src="https://img.shields.io/npm/v/%40ckb-ccc%2Fokx"
  /></a>
  <img alt="GitHub commit activity" src="https://img.shields.io/github/commit-activity/m/ckb-devrel/ccc" />
  <img alt="GitHub last commit" src="https://img.shields.io/github/last-commit/ckb-devrel/ccc/master" />
  <img alt="GitHub branch check runs" src="https://img.shields.io/github/check-runs/ckb-devrel/ccc/master" />
  <a href="https://live.ckbccc.com/"><img
    alt="Playground" src="https://img.shields.io/website?url=https%3A%2F%2Flive.ckbccc.com%2F&label=Playground"
  /></a>
  <a href="https://app.ckbccc.com/"><img
    alt="App" src="https://img.shields.io/website?url=https%3A%2F%2Fapp.ckbccc.com%2F&label=App"
  /></a>
  <a href="https://docs.ckbccc.com/"><img
    alt="Docs" src="https://img.shields.io/website?url=https%3A%2F%2Fdocs.ckbccc.com%2F&label=Docs"
  /></a>
</p>

<p align="center">
  CCC - CKBers' Codebase is a one-stop solution for your CKB JS/TS ecosystem development.
  <br />
  Empower yourself with CCC to discover the unlimited potential of CKB.
  <br />
  Interoperate with wallets from different chain ecosystems.
  <br />
  Fully enabling CKB's Turing completeness and cryptographic freedom power.
</p>

<h3 align="center">
  Read more about CCC on <a href="https://docs.ckbccc.com">our website</a> or <a href="https://github.com/ckb-devrel/ccc">GitHub Repo</a>.
</h3>


================================================
File: packages/okx/CHANGELOG.md
================================================
# @ckb-ccc/okx

## 1.0.11

### Patch Changes

- Updated dependencies [[`28c211d`](https://github.com/ckb-devrel/ccc/commit/28c211d839a2d2305eca56e82ba7da144aa3df4a)]:
  - @ckb-ccc/core@1.5.0
  - @ckb-ccc/nip07@1.0.11
  - @ckb-ccc/uni-sat@1.0.11

## 1.0.10

### Patch Changes

- Updated dependencies [[`3fdb2c4`](https://github.com/ckb-devrel/ccc/commit/3fdb2c477d0b2766b231e436b8f396f047b02634), [`f429087`](https://github.com/ckb-devrel/ccc/commit/f4290874dfab3fe58844e5169673c5d47bda64e3)]:
  - @ckb-ccc/core@1.4.0
  - @ckb-ccc/nip07@1.0.10
  - @ckb-ccc/uni-sat@1.0.10

## 1.0.9

### Patch Changes

- Updated dependencies [[`a48cccf`](https://github.com/ckb-devrel/ccc/commit/a48cccfae3ce6b3456a5eb863f207e7e5a6e568f)]:
  - @ckb-ccc/core@1.3.1
  - @ckb-ccc/nip07@1.0.9
  - @ckb-ccc/uni-sat@1.0.9

## 1.0.8

### Patch Changes

- Updated dependencies [[`4dbf4fd`](https://github.com/ckb-devrel/ccc/commit/4dbf4fd8021cf14d05282706a7667ea7d108fb09), [`4c76f9e`](https://github.com/ckb-devrel/ccc/commit/4c76f9e2a93a226fcfc4c32a5378bb531bfff08f), [`c2c4c26`](https://github.com/ckb-devrel/ccc/commit/c2c4c264e04461948e4b913b2f22054e6032ddc8), [`b6a73fa`](https://github.com/ckb-devrel/ccc/commit/b6a73fa9628ebdff51cb8f246309654cd53e36f2), [`8c97c85`](https://github.com/ckb-devrel/ccc/commit/8c97c851db4a2d940c7e59116ca7620cfd0afae1)]:
  - @ckb-ccc/core@1.3.0
  - @ckb-ccc/nip07@1.0.8
  - @ckb-ccc/uni-sat@1.0.8

## 1.0.7

### Patch Changes

- Updated dependencies [[`01263bd`](https://github.com/ckb-devrel/ccc/commit/01263bd8c601fa8fcdfa24be52601716e1864843)]:
  - @ckb-ccc/core@1.2.3
  - @ckb-ccc/nip07@1.0.7
  - @ckb-ccc/uni-sat@1.0.7

## 1.0.6

### Patch Changes

- Updated dependencies [[`7886e3d`](https://github.com/ckb-devrel/ccc/commit/7886e3d89e9ca8f3514a2044c6dd4e8ec6b49933)]:
  - @ckb-ccc/core@1.2.2
  - @ckb-ccc/nip07@1.0.6
  - @ckb-ccc/uni-sat@1.0.6

## 1.0.5

### Patch Changes

- Updated dependencies [[`94e2618`](https://github.com/ckb-devrel/ccc/commit/94e26182515e09d6086ec5b653d091f117a499e6)]:
  - @ckb-ccc/core@1.2.1
  - @ckb-ccc/nip07@1.0.5
  - @ckb-ccc/uni-sat@1.0.5

## 1.0.4

### Patch Changes

- Updated dependencies [[`128e87b`](https://github.com/ckb-devrel/ccc/commit/128e87b5ca3e97bfe7842e76f786aa6aec010797)]:
  - @ckb-ccc/core@1.2.0
  - @ckb-ccc/nip07@1.0.4
  - @ckb-ccc/uni-sat@1.0.4

## 1.0.3

### Patch Changes

- Updated dependencies [[`925991c`](https://github.com/ckb-devrel/ccc/commit/925991c8a24b1f34667e30b28b69812e936e3928)]:
  - @ckb-ccc/core@1.1.1
  - @ckb-ccc/nip07@1.0.3
  - @ckb-ccc/uni-sat@1.0.3

## 1.0.2

### Patch Changes

- Updated dependencies [[`ddc0a28`](https://github.com/ckb-devrel/ccc/commit/ddc0a281c3d1dfa6ebc990dae92994f026dfddcc)]:
  - @ckb-ccc/core@1.1.0
  - @ckb-ccc/nip07@1.0.2
  - @ckb-ccc/uni-sat@1.0.2

## 1.0.1

### Patch Changes

- Updated dependencies [[`719055b`](https://github.com/ckb-devrel/ccc/commit/719055b404f31b40362f51714b9f11c85b857581), [`94caaca`](https://github.com/ckb-devrel/ccc/commit/94caaca11c63752a25282d42f51161c94397dec6)]:
  - @ckb-ccc/core@1.0.1
  - @ckb-ccc/nip07@1.0.1
  - @ckb-ccc/uni-sat@1.0.1

## 1.0.0

### Major Changes

- [#107](https://github.com/ckb-devrel/ccc/pull/107) [`b99f55f`](https://github.com/ckb-devrel/ccc/commit/b99f55f74e64106391ce53f7d0bd0fa7522023cc) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: molecule

### Patch Changes

- Updated dependencies [[`b99f55f`](https://github.com/ckb-devrel/ccc/commit/b99f55f74e64106391ce53f7d0bd0fa7522023cc)]:
  - @ckb-ccc/core@1.0.0
  - @ckb-ccc/nip07@1.0.0
  - @ckb-ccc/uni-sat@1.0.0

## 0.0.18

### Patch Changes

- Updated dependencies [[`c1cb910`](https://github.com/ckb-devrel/ccc/commit/c1cb91091780c7b33fbbd683ef8edc9f11452ecd)]:
  - @ckb-ccc/core@0.1.2
  - @ckb-ccc/nip07@0.0.18
  - @ckb-ccc/uni-sat@0.0.18

## 0.0.17

### Patch Changes

- [#101](https://github.com/ckb-devrel/ccc/pull/101) [`d9affcc`](https://github.com/ckb-devrel/ccc/commit/d9affcc01c7b839b227e4d79bcb66e717577502a) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix: commonjs

- Updated dependencies [[`d9affcc`](https://github.com/ckb-devrel/ccc/commit/d9affcc01c7b839b227e4d79bcb66e717577502a)]:
  - @ckb-ccc/uni-sat@0.0.17
  - @ckb-ccc/nip07@0.0.17
  - @ckb-ccc/core@0.1.1

## 0.0.16

### Patch Changes

- [#70](https://github.com/ckb-devrel/ccc/pull/70) [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): websocket transport

- Updated dependencies [[`a3d5359`](https://github.com/ckb-devrel/ccc/commit/a3d53595f6dd11f2f59cdf0086b3d7ce558a2fdd), [`8824ff2`](https://github.com/ckb-devrel/ccc/commit/8824ff27af3b76186f1a7d6db8c907cd66f09d6a), [`f07a506`](https://github.com/ckb-devrel/ccc/commit/f07a506bd6fc27fe659a17d2f7baaeec54716d81), [`f21d7e4`](https://github.com/ckb-devrel/ccc/commit/f21d7e4cf422edab4a836ef6d678b620594fef8d), [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366), [`1720d5a`](https://github.com/ckb-devrel/ccc/commit/1720d5a398543f1c6e24763eeaf15d84cd2214bf), [`e63a06e`](https://github.com/ckb-devrel/ccc/commit/e63a06ee75ac8595208d216dec88a4228c465e23), [`c092988`](https://github.com/ckb-devrel/ccc/commit/c092988e7765b9ac79498d6bd72a6a2f62859b6f), [`50f2ce0`](https://github.com/ckb-devrel/ccc/commit/50f2ce08e74cb3fbeae926267d42e28b426fd7f4), [`4709384`](https://github.com/ckb-devrel/ccc/commit/4709384e37188991cb937b16f99f47ca82c912b8)]:
  - @ckb-ccc/core@0.1.0
  - @ckb-ccc/nip07@0.0.16
  - @ckb-ccc/uni-sat@0.0.16

## 0.0.16-alpha.7

### Patch Changes

- Updated dependencies [[`f07a506`](https://github.com/ckb-devrel/ccc/commit/f07a506bd6fc27fe659a17d2f7baaeec54716d81)]:
  - @ckb-ccc/core@0.1.0-alpha.7
  - @ckb-ccc/nip07@0.0.16-alpha.7
  - @ckb-ccc/uni-sat@0.0.16-alpha.7

## 0.0.16-alpha.6

### Patch Changes

- Updated dependencies [[`4709384`](https://github.com/ckb-devrel/ccc/commit/4709384e37188991cb937b16f99f47ca82c912b8)]:
  - @ckb-ccc/core@0.1.0-alpha.6
  - @ckb-ccc/nip07@0.0.16-alpha.6
  - @ckb-ccc/uni-sat@0.0.16-alpha.6

## 0.0.16-alpha.5

### Patch Changes

- Updated dependencies [[`50f2ce0`](https://github.com/ckb-devrel/ccc/commit/50f2ce08e74cb3fbeae926267d42e28b426fd7f4)]:
  - @ckb-ccc/core@0.1.0-alpha.5
  - @ckb-ccc/nip07@0.0.16-alpha.5
  - @ckb-ccc/uni-sat@0.0.16-alpha.5

## 0.0.16-alpha.4

### Patch Changes

- Updated dependencies [[`f21d7e4`](https://github.com/ckb-devrel/ccc/commit/f21d7e4cf422edab4a836ef6d678b620594fef8d)]:
  - @ckb-ccc/core@0.1.0-alpha.4
  - @ckb-ccc/nip07@0.0.16-alpha.4
  - @ckb-ccc/uni-sat@0.0.16-alpha.4

## 0.0.16-alpha.3

### Patch Changes

- Updated dependencies [[`a3d5359`](https://github.com/ckb-devrel/ccc/commit/a3d53595f6dd11f2f59cdf0086b3d7ce558a2fdd)]:
  - @ckb-ccc/core@0.0.16-alpha.3
  - @ckb-ccc/nip07@0.0.16-alpha.3
  - @ckb-ccc/uni-sat@0.0.16-alpha.3

## 0.0.16-alpha.2

### Patch Changes

- [#70](https://github.com/ckb-devrel/ccc/pull/70) [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): websocket transport

- Updated dependencies [[`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366)]:
  - @ckb-ccc/core@0.0.16-alpha.2
  - @ckb-ccc/nip07@0.0.16-alpha.2
  - @ckb-ccc/uni-sat@0.0.16-alpha.2

## 0.0.16-alpha.1

### Patch Changes

- Updated dependencies [[`8824ff2`](https://github.com/ckb-devrel/ccc/commit/8824ff27af3b76186f1a7d6db8c907cd66f09d6a), [`c092988`](https://github.com/ckb-devrel/ccc/commit/c092988e7765b9ac79498d6bd72a6a2f62859b6f)]:
  - @ckb-ccc/core@0.0.16-alpha.1
  - @ckb-ccc/nip07@0.0.16-alpha.1
  - @ckb-ccc/uni-sat@0.0.16-alpha.1

## 0.0.16-alpha.0

### Patch Changes

- Updated dependencies [[`1720d5a`](https://github.com/ckb-devrel/ccc/commit/1720d5a398543f1c6e24763eeaf15d84cd2214bf)]:
  - @ckb-ccc/core@0.0.16-alpha.0
  - @ckb-ccc/nip07@0.0.16-alpha.0
  - @ckb-ccc/uni-sat@0.0.16-alpha.0

## 0.0.15

### Patch Changes

- Updated dependencies [[`8f2560a`](https://github.com/ckb-devrel/ccc/commit/8f2560ab0e5619654fff7c5eacda8425385f908e)]:
  - @ckb-ccc/core@0.0.15
  - @ckb-ccc/nip07@0.0.15
  - @ckb-ccc/uni-sat@0.0.15

## 0.0.14

### Patch Changes

- [#48](https://github.com/ckb-devrel/ccc/pull/48) [`4fb114b`](https://github.com/ckb-devrel/ccc/commit/4fb114bc421c7250eed7388c16f1c026875153e6) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(okx): make okx wallet happy

- Updated dependencies [[`5e942f8`](https://github.com/ckb-devrel/ccc/commit/5e942f8f1ed678abdb7ab9716f5449f0714cea53), [`f5b5938`](https://github.com/ckb-devrel/ccc/commit/f5b5938ab8f9c0a338dfd6765fe717f7ad1b1dd8), [`f13f4d3`](https://github.com/ckb-devrel/ccc/commit/f13f4d319ca66b571029a65e945e3a038bfeea25), [`7ba62a0`](https://github.com/ckb-devrel/ccc/commit/7ba62a056f17808fe5684786c00c2dff80bb7d1d), [`2164efd`](https://github.com/ckb-devrel/ccc/commit/2164efd6d834c1917ad5f4a514dc25941f937185), [`e5bd2ad`](https://github.com/ckb-devrel/ccc/commit/e5bd2ad5de4b42a22c422ecfc42056750f69b88b), [`aae3e06`](https://github.com/ckb-devrel/ccc/commit/aae3e0679fb940dd8c12ac9be12a4b53277a339d)]:
  - @ckb-ccc/core@0.0.14
  - @ckb-ccc/nip07@0.0.14
  - @ckb-ccc/uni-sat@0.0.14

## 0.0.14-alpha.2

### Patch Changes

- Updated dependencies [[`7ba62a0`](https://github.com/ckb-devrel/ccc/commit/7ba62a056f17808fe5684786c00c2dff80bb7d1d)]:
  - @ckb-ccc/core@0.0.14-alpha.2
  - @ckb-ccc/nip07@0.0.14-alpha.2
  - @ckb-ccc/uni-sat@0.0.14-alpha.2

## 0.0.14-alpha.1

### Patch Changes

- [#48](https://github.com/ckb-devrel/ccc/pull/48) [`4fb114b`](https://github.com/ckb-devrel/ccc/commit/4fb114bc421c7250eed7388c16f1c026875153e6) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(okx): make okx wallet happy

- Updated dependencies [[`5e942f8`](https://github.com/ckb-devrel/ccc/commit/5e942f8f1ed678abdb7ab9716f5449f0714cea53), [`e5bd2ad`](https://github.com/ckb-devrel/ccc/commit/e5bd2ad5de4b42a22c422ecfc42056750f69b88b), [`aae3e06`](https://github.com/ckb-devrel/ccc/commit/aae3e0679fb940dd8c12ac9be12a4b53277a339d)]:
  - @ckb-ccc/core@0.0.14-alpha.1
  - @ckb-ccc/nip07@0.0.14-alpha.1
  - @ckb-ccc/uni-sat@0.0.14-alpha.1

## 0.0.14-alpha.0

### Patch Changes

- Updated dependencies [[`f5b5938`](https://github.com/ckb-devrel/ccc/commit/f5b5938ab8f9c0a338dfd6765fe717f7ad1b1dd8), [`2164efd`](https://github.com/ckb-devrel/ccc/commit/2164efd6d834c1917ad5f4a514dc25941f937185)]:
  - @ckb-ccc/core@0.0.14-alpha.0
  - @ckb-ccc/nip07@0.0.14-alpha.0
  - @ckb-ccc/uni-sat@0.0.14-alpha.0

## 0.0.13

### Patch Changes

- [`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): recordCells should not add usableCells

- [`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): node.js websocket

- [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): completeInputs

- [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): more APIs. Since parsing.

- [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Signer.findCells

- Updated dependencies [[`3378e85`](https://github.com/ckb-devrel/ccc/commit/3378e85b32797f5cdc1943b9ecaca1fd1d9fad5e), [`8629449`](https://github.com/ckb-devrel/ccc/commit/86294490e76fc2a1cee20f827883e02fceca6e8b), [`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97), [`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f), [`69c10fd`](https://github.com/ckb-devrel/ccc/commit/69c10fdfcd507433c13b15d17015dca4687afb97), [`600cc13`](https://github.com/ckb-devrel/ccc/commit/600cc137ac6eb7c5b2533670de6df29d82f1b9e1), [`642f731`](https://github.com/ckb-devrel/ccc/commit/642f7317f4951ef801f1245aea96c40b4b6fb73e), [`96dbb61`](https://github.com/ckb-devrel/ccc/commit/96dbb6107d2071b9383350ddd578557746227054), [`0462a4e`](https://github.com/ckb-devrel/ccc/commit/0462a4ee101926f0da857173626dc4ab879e3b56), [`52156f9`](https://github.com/ckb-devrel/ccc/commit/52156f9df9cae9e0b71b77b49cda0e4d73e76142), [`63606db`](https://github.com/ckb-devrel/ccc/commit/63606db908f95bfc857430083932144d1ef4deef), [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b), [`1043c2b`](https://github.com/ckb-devrel/ccc/commit/1043c2bc211ec283b88dba3b81feef98e4185c0e), [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11), [`1f999f8`](https://github.com/ckb-devrel/ccc/commit/1f999f854beb255b3cd9dbbc5a7268e75442b3db), [`a69a9dc`](https://github.com/ckb-devrel/ccc/commit/a69a9dc0c722f7b4cfa36b2ae8ecba4dcde0db90), [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895)]:
  - @ckb-ccc/core@0.0.13
  - @ckb-ccc/nip07@0.0.13
  - @ckb-ccc/uni-sat@0.0.13

## 0.0.13-alpha.8

### Patch Changes

- Updated dependencies [[`8629449`](https://github.com/ckb-devrel/ccc/commit/86294490e76fc2a1cee20f827883e02fceca6e8b), [`52156f9`](https://github.com/ckb-devrel/ccc/commit/52156f9df9cae9e0b71b77b49cda0e4d73e76142), [`63606db`](https://github.com/ckb-devrel/ccc/commit/63606db908f95bfc857430083932144d1ef4deef)]:
  - @ckb-ccc/core@0.0.13-alpha.8
  - @ckb-ccc/nip07@0.0.13-alpha.8
  - @ckb-ccc/uni-sat@0.0.13-alpha.8

## 0.0.13-alpha.7

### Patch Changes

- [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): more APIs. Since parsing.

- [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Signer.findCells

- Updated dependencies [[`1043c2b`](https://github.com/ckb-devrel/ccc/commit/1043c2bc211ec283b88dba3b81feef98e4185c0e), [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11), [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895)]:
  - @ckb-ccc/core@0.0.13-alpha.7
  - @ckb-ccc/nip07@0.0.13-alpha.7
  - @ckb-ccc/uni-sat@0.0.13-alpha.7

## 0.0.13-alpha.6

### Patch Changes

- [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): completeInputs

- Updated dependencies [[`69c10fd`](https://github.com/ckb-devrel/ccc/commit/69c10fdfcd507433c13b15d17015dca4687afb97), [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b)]:
  - @ckb-ccc/core@0.0.13-alpha.6
  - @ckb-ccc/nip07@0.0.13-alpha.6
  - @ckb-ccc/uni-sat@0.0.13-alpha.6

## 0.0.13-alpha.5

### Patch Changes

- [`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): recordCells should not add usableCells

- Updated dependencies [[`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97)]:
  - @ckb-ccc/core@0.0.13-alpha.5
  - @ckb-ccc/nip07@0.0.13-alpha.5
  - @ckb-ccc/uni-sat@0.0.13-alpha.5

## 0.0.13-alpha.4

### Patch Changes

- [`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): node.js websocket

- Updated dependencies [[`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f), [`642f731`](https://github.com/ckb-devrel/ccc/commit/642f7317f4951ef801f1245aea96c40b4b6fb73e)]:
  - @ckb-ccc/core@0.0.13-alpha.4
  - @ckb-ccc/nip07@0.0.13-alpha.4
  - @ckb-ccc/uni-sat@0.0.13-alpha.4

## 0.0.13-alpha.3

### Patch Changes

- Updated dependencies [[`1f999f8`](https://github.com/ckb-devrel/ccc/commit/1f999f854beb255b3cd9dbbc5a7268e75442b3db)]:
  - @ckb-ccc/core@0.0.13-alpha.3
  - @ckb-ccc/nip07@0.0.13-alpha.3
  - @ckb-ccc/uni-sat@0.0.13-alpha.3

## 0.0.13-alpha.2

### Patch Changes

- Updated dependencies [[`96dbb61`](https://github.com/ckb-devrel/ccc/commit/96dbb6107d2071b9383350ddd578557746227054)]:
  - @ckb-ccc/core@0.0.13-alpha.2
  - @ckb-ccc/nip07@0.0.13-alpha.2
  - @ckb-ccc/uni-sat@0.0.13-alpha.2

## 0.0.13-alpha.1

### Patch Changes

- Updated dependencies [[`3378e85`](https://github.com/ckb-devrel/ccc/commit/3378e85b32797f5cdc1943b9ecaca1fd1d9fad5e), [`a69a9dc`](https://github.com/ckb-devrel/ccc/commit/a69a9dc0c722f7b4cfa36b2ae8ecba4dcde0db90)]:
  - @ckb-ccc/core@0.0.13-alpha.1
  - @ckb-ccc/nip07@0.0.13-alpha.1
  - @ckb-ccc/uni-sat@0.0.13-alpha.1

## 0.0.13-alpha.0

### Patch Changes

- Updated dependencies [[`600cc13`](https://github.com/ckb-devrel/ccc/commit/600cc137ac6eb7c5b2533670de6df29d82f1b9e1)]:
  - @ckb-ccc/core@0.0.13-alpha.0
  - @ckb-ccc/nip07@0.0.13-alpha.0
  - @ckb-ccc/uni-sat@0.0.13-alpha.0

## 0.0.12

### Patch Changes

- [`6bee006`](https://github.com/ckb-devrel/ccc/commit/6bee006fbcb96986c65ca4d2d896fca21db2503b) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(connector): catch connecting error

- Updated dependencies [[`6bee006`](https://github.com/ckb-devrel/ccc/commit/6bee006fbcb96986c65ca4d2d896fca21db2503b)]:
  - @ckb-ccc/nip07@0.0.12
  - @ckb-ccc/core@0.0.12
  - @ckb-ccc/uni-sat@0.0.12

## 0.0.12-alpha.7

### Patch Changes

- fix(connector): catch connecting error
- Updated dependencies
  - @ckb-ccc/nip07@0.0.12-alpha.2


================================================
File: packages/okx/eslint.config.mjs
================================================
// @ts-check

import eslint from "@eslint/js";
import eslintPluginPrettierRecommended from "eslint-plugin-prettier/recommended";
import tseslint from "typescript-eslint";

import { dirname } from "path";
import { fileURLToPath } from "url";

export default [
  ...tseslint.config({
    files: ["**/*.ts"],
    extends: [
      eslint.configs.recommended,
      ...tseslint.configs.recommendedTypeChecked,
    ],
    rules: {
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          args: "all",
          argsIgnorePattern: "^_",
          caughtErrors: "all",
          caughtErrorsIgnorePattern: "^_",
          destructuredArrayIgnorePattern: "^_",
          varsIgnorePattern: "^_",
          ignoreRestSiblings: true,
        },
      ],
      "@typescript-eslint/unbound-method": ["error", { ignoreStatic: true }],
      "@typescript-eslint/no-unsafe-member-access": "off",
      "@typescript-eslint/require-await": "off",
      "no-empty": "off",
      "prefer-const": [
        "error",
        { ignoreReadBeforeAssign: true, destructuring: "all" },
      ],
    },
    languageOptions: {
      parserOptions: {
        project: true,
        tsconfigRootDir: dirname(fileURLToPath(import.meta.url)),
      },
    },
  }),
  eslintPluginPrettierRecommended,
];


================================================
File: packages/okx/package.json
================================================
{
  "name": "@ckb-ccc/okx",
  "version": "1.0.11",
  "description": "CCC - CKBer's Codebase. Common Chains Connector's support for OKX",
  "author": "Hanssen0 <hanssen0@hanssen0.com>",
  "license": "MIT",
  "private": false,
  "homepage": "https://github.com/ckb-devrel/ccc",
  "repository": {
    "type": "git",
    "url": "git://github.com/ckb-devrel/ccc.git"
  },
  "sideEffects": false,
  "main": "dist.commonjs/index.js",
  "module": "dist/index.js",
  "exports": {
    ".": {
      "import": "./dist/index.js",
      "require": "./dist.commonjs/index.js",
      "default": "./dist.commonjs/index.js"
    },
    "./advanced": {
      "import": "./dist/advanced.js",
      "require": "./dist.commonjs/advanced.js",
      "default": "./dist.commonjs/advanced.js"
    }
  },
  "scripts": {
    "build": "rimraf ./dist && rimraf ./dist.commonjs && tsc && tsc --project tsconfig.commonjs.json && copyfiles -u 2 misc/basedirs/**/* .",
    "lint": "eslint ./src",
    "format": "prettier --write . && eslint --fix ./src"
  },
  "devDependencies": {
    "@eslint/js": "^9.1.1",
    "copyfiles": "^2.4.1",
    "eslint": "^9.1.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.1.3",
    "prettier": "^3.2.5",
    "prettier-plugin-organize-imports": "^3.2.4",
    "rimraf": "^5.0.5",
    "typescript": "^5.4.5",
    "typescript-eslint": "^7.7.0"
  },
  "publishConfig": {
    "access": "public"
  },
  "dependencies": {
    "@ckb-ccc/core": "workspace:*",
    "@ckb-ccc/nip07": "workspace:*",
    "@ckb-ccc/uni-sat": "workspace:*"
  }
}


================================================
File: packages/okx/tsconfig.base.json
================================================
{
  "compilerOptions": {
    "target": "es2020",
    "incremental": true,
    "allowJs": true,
    "importHelpers": false,
    "declaration": true,
    "declarationMap": true,
    "experimentalDecorators": true,
    "useDefineForClassFields": false,
    "esModuleInterop": true,
    "strict": true,
    "noImplicitAny": true,
    "strictBindCallApply": true,
    "strictNullChecks": true,
    "alwaysStrict": true,
    "noFallthroughCasesInSwitch": true,
    "forceConsistentCasingInFileNames": true,
    "skipLibCheck": true
  },
  "include": ["src/**/*"]
}


================================================
File: packages/okx/tsconfig.commonjs.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "NodeNext",
    "moduleResolution": "NodeNext",
    "outDir": "./dist.commonjs"
  }
}


================================================
File: packages/okx/tsconfig.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "ESNext",
    "moduleResolution": "Bundler",
    "outDir": "./dist",
  }
}


================================================
File: packages/okx/typedoc.json
================================================
{
  "$schema": "https://typedoc.org/schema.json",
  "entryPoints": ["./src/index.ts", "./src/advanced.ts"],
  "extends": ["../../typedoc.base.json"],
  "name": "@ckb-ccc okx"
}


================================================
File: packages/okx/.npmignore
================================================
node_modules/
misc/

*test.js
*test.ts
*test.d.ts
*test.d.ts.map
*spec.js
*spec.ts
*spec.d.ts
*spec.d.ts.map

tsconfig.json
tsconfig.*.json
eslint.config.mjs
.prettierrc
.prettierignore

tsconfig.tsbuildinfo
tsconfig.*.tsbuildinfo
.github/


================================================
File: packages/okx/.prettierignore
================================================
node_modules/

dist/
dist.commonjs/

.npmignore
.prettierrc
tsconfig.json
eslint.config.mjs
.prettierrc

tsconfig.tsbuildinfo
.github/


================================================
File: packages/okx/.prettierrc
================================================
{
  "singleQuote": false,
  "trailingComma": "all",
  "plugins": ["prettier-plugin-organize-imports"]
}


================================================
File: packages/okx/misc/basedirs/dist/package.json
================================================
{
  "type": "module"
}

================================================
File: packages/okx/misc/basedirs/dist.commonjs/package.json
================================================
{
  "type": "commonjs"
}


================================================
File: packages/okx/src/advanced.ts
================================================
export * as OkxA from "./advancedBarrel.js";


================================================
File: packages/okx/src/advancedBarrel.ts
================================================
import { Nip07A } from "@ckb-ccc/nip07/advanced";
import { UniSatA } from "@ckb-ccc/uni-sat/advanced";

export interface BitcoinProvider
  extends Pick<UniSatA.Provider, "on" | "removeListener" | "signMessage">,
    Partial<Omit<UniSatA.Provider, "on" | "removeListener" | "signMessage">> {
  connect?(): Promise<{
    address: string;
    publicKey: string;
    compressedPublicKey: string;
  }>;

  getSelectedAccount?(): Promise<{
    address: string;
    publicKey: string;
    compressedPublicKey: string;
  } | null>;
}

export interface NostrProvider extends Nip07A.Provider {
  connect?(): Promise<void>;

  /**
   * Adds an event listener to the provider.
   */
  on: NostrOnMethod;

  /**
   * Removes an event listener from the provider.
   * @param eventName - The name of the event to remove the listener from.
   * @param listener - The listener function to remove.
   * @returns The provider instance.
   */
  removeListener(
    eventName: string,
    listener: (...args: unknown[]) => unknown,
  ): NostrProvider;
}

/**
 * Interface representing a method to add event listeners to the provider.
 */
export interface NostrOnMethod {
  /**
   * Adds an event listener to the provider.
   * @param eventName - The name of the event.
   * @param listener - The listener function.
   */
  (eventName: string, listener: (...args: unknown[]) => unknown): void;
}


================================================
File: packages/okx/src/barrel.ts
================================================
export * from "./btc/index.js";
export * from "./signersFactory.js";


================================================
File: packages/okx/src/index.ts
================================================
export * as Okx from "./barrel.js";


================================================
File: packages/okx/src/signersFactory.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { BitcoinProvider, NostrProvider } from "./advancedBarrel.js";
import { BitcoinSigner } from "./btc/index.js";
import { NostrSigner } from "./nostr/index.js";

/**
 * Retrieves the OKX Bitcoin signer if available.
 * @public
 *
 * @param client - The client instance.
 * @returns The BitcoinSigner instance if the OKX wallet is available, otherwise undefined.
 */
export function getOKXSigners(
  client: ccc.Client,
  preferredNetworks?: ccc.NetworkPreference[],
): ccc.SignerInfo[] {
  const windowRef = window as {
    okxwallet?: Record<string, BitcoinProvider> & { nostr: NostrProvider };
  };

  if (typeof windowRef.okxwallet === "undefined") {
    return [];
  }

  return [
    {
      signer: new BitcoinSigner(client, windowRef.okxwallet, preferredNetworks),
      name: "BTC",
    },
    {
      signer: new NostrSigner(client, windowRef.okxwallet.nostr),
      name: "Nostr",
    },
  ];
}


================================================
File: packages/okx/src/btc/index.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { BitcoinProvider } from "../advancedBarrel.js";

/**
 * Class representing a Bitcoin signer that extends SignerBtc
 * @public
 */
export class BitcoinSigner extends ccc.SignerBtc {
  private network = "btcTestnet";

  /**
   * Creates an instance of Signer.
   * @param client - The client instance.
   * @param providers - The providers instance.
   * @param preferredNetworks - All preferred networks
   */
  constructor(
    client: ccc.Client,
    public readonly providers: Record<string, BitcoinProvider>,
    private readonly preferredNetworks: ccc.NetworkPreference[] = [
      {
        addressPrefix: "ckb",
        signerType: ccc.SignerType.BTC,
        network: "btc",
      },
      {
        addressPrefix: "ckt",
        signerType: ccc.SignerType.BTC,
        network: "btcTestnet",
      },
    ],
  ) {
    super(client);
  }

  get provider(): BitcoinProvider {
    const { network } = this.matchNetworkPreference(
      this.preferredNetworks,
      this.network,
    ) ?? { network: this.network };
    this.network = network;

    const chain = {
      btc: "bitcoin",
      btcTestnet: "bitcoinTestnet",
      btcSignet: "bitcoinSignet",
    }[network];
    if (!chain) {
      throw new Error(
        `OKX wallet doesn't support the requested chain ${this.network}`,
      );
    }
    const provider = this.providers[chain];
    if (!provider) {
      throw new Error(
        `OKX wallet doesn't support the requested chain ${this.network}`,
      );
    }
    return provider;
  }

  /**
   * Gets the Bitcoin account address.
   * @returns A promise that resolves to the Bitcoin account address.
   */
  async getBtcAccount(): Promise<string> {
    if (this.provider.getAccounts) {
      const address = (await this.provider.getAccounts())[0];
      if (!address) {
        throw Error("Not connected");
      }
      return address;
    }

    if (this.provider.getSelectedAccount) {
      const account = await this.provider.getSelectedAccount();
      if (!account) {
        throw Error("Not connected");
      }
      return account.address;
    }

    throw Error("Unsupported OKX provider");
  }

  /**
   * Gets the Bitcoin public key.
   * @returns A promise that resolves to the Bitcoin public key.
   */
  async getBtcPublicKey(): Promise<ccc.Hex> {
    if (this.provider.getPublicKey) {
      const publicKey = await this.provider.getPublicKey();
      if (publicKey === "") {
        throw Error("The OKX Wallet returned wrong public key");
      }
      return ccc.hexFrom(publicKey);
    }

    if (this.provider.getSelectedAccount) {
      const account = await this.provider.getSelectedAccount();
      if (!account) {
        throw Error("Not connected");
      }
      return ccc.hexFrom(account.compressedPublicKey);
    }

    throw Error("Unsupported OKX provider");
  }

  /**
   * Connects to the provider by requesting accounts.
   * @returns A promise that resolves when the connection is established.
   */
  async connect(): Promise<void> {
    if (this.provider.requestAccounts) {
      await this.provider.requestAccounts();
      return;
    }

    if (this.provider.connect) {
      await this.provider.connect();
      return;
    }

    throw Error("Unsupported OKX provider");
  }

  onReplaced(listener: () => void): () => void {
    const stop: (() => void)[] = [];
    const replacer = async () => {
      listener();
      stop[0]?.();
    };
    stop.push(() => {
      this.provider.removeListener("accountChanged", replacer);
    });

    this.provider.on("accountChanged", replacer);

    return stop[0];
  }

  /**
   * Checks if the signer is connected.
   * @returns A promise that resolves to true if connected, false otherwise.
   */
  async isConnected(): Promise<boolean> {
    try {
      this.provider;
    } catch (_) {
      return false;
    }

    if (this.provider.getAccounts) {
      if ((await this.provider.getAccounts()).length === 0) {
        return false;
      }
    } else if (this.provider.getSelectedAccount) {
      if ((await this.provider.getSelectedAccount()) === null) {
        return false;
      }
    }

    await this.connect();
    return true;
  }

  /**
   * Signs a raw message with the Bitcoin account.
   * @param message - The message to sign.
   * @returns A promise that resolves to the signed message.
   */
  async signMessageRaw(message: string | ccc.BytesLike): Promise<string> {
    const challenge =
      typeof message === "string" ? message : ccc.hexFrom(message).slice(2);

    return this.provider.signMessage(challenge, "ecdsa");
  }
}


================================================
File: packages/okx/src/nostr/index.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { NostrProvider } from "../advancedBarrel.js";

/**
 * Class representing a Bitcoin signer that extends SignerBtc
 * @public
 */
export class NostrSigner extends ccc.SignerNostr {
  private publicKeyCache?: Promise<string> = undefined;

  constructor(
    client: ccc.Client,
    public readonly provider: NostrProvider,
  ) {
    super(client);
  }

  async getNostrPublicKey(): Promise<ccc.Hex> {
    if (!this.publicKeyCache) {
      this.publicKeyCache = this.provider
        .getPublicKey()
        .then((v) => {
          // For some account types of OKX Wallet, this might returns null
          // e.g. Keyless accounts
          if (v) {
            return v;
          }

          throw Error("This OKX Wallet account does not support Nostr");
        })
        .catch((e) => {
          this.publicKeyCache = undefined;
          throw e;
        });
    }

    return ccc.hexFrom(await this.publicKeyCache);
  }

  async signNostrEvent(
    event: ccc.NostrEvent,
  ): Promise<Required<ccc.NostrEvent>> {
    return this.provider.signEvent({
      ...event,
      pubkey: await this.publicKeyCache,
    });
  }

  async connect(): Promise<void> {
    await this.provider.connect?.(); // Help extension to switch network

    await this.getNostrPublicKey();
  }

  onReplaced(listener: () => void): () => void {
    const stop: (() => void)[] = [];
    const replacer = () => {
      listener();
      stop[0]?.();
    };
    stop.push(() => {
      this.provider.removeListener("accountChanged", replacer);
    });

    this.provider.on("accountChanged", replacer);

    return stop[0];
  }

  async isConnected(): Promise<boolean> {
    return true;
  }
}


================================================
File: packages/playground/README.md
================================================
<p align="center">
  <a href="https://live.ckbccc.com/">
    <img alt="Logo" src="https://raw.githubusercontent.com/ckb-devrel/ccc/master/assets/logoAndText.svg" style="height: 8rem; max-width: 90%; padding: 0.5rem 0;" />
  </a>
</p>

<h1 align="center" style="font-size: 48px;">
  CCC Playground
</h1>

<p align="center">
  <img alt="GitHub commit activity" src="https://img.shields.io/github/commit-activity/m/ckb-devrel/ccc" />
  <img alt="GitHub last commit" src="https://img.shields.io/github/last-commit/ckb-devrel/ccc/master" />
  <a href="https://live.ckbccc.com/"><img
    alt="Playground" src="https://img.shields.io/website?url=https%3A%2F%2Flive.ckbccc.com%2F&label=Playground"
  /></a>
  <a href="https://app.ckbccc.com/"><img
    alt="App" src="https://img.shields.io/website?url=https%3A%2F%2Fapp.ckbccc.com%2F&label=App"
  /></a>
  <a href="https://docs.ckbccc.com/"><img
    alt="Docs" src="https://img.shields.io/website?url=https%3A%2F%2Fdocs.ckbccc.com%2F&label=Docs"
  /></a>
</p>

<p align="center">
  "CCC - CKBers' Codebase" is the next step of "Common Chains Connector".
  <br />
  Empower yourself with CCC to discover the unlimited potential of CKB.
  <br />
  Interoperate with wallets from different chain ecosystems.
  <br />
  Fully enabling CKB's Turing completeness and cryptographic freedom power.
  <br />
  Start exploring CKB from CCC playground!
</p>

## Preview

<p align="center">
  <a href="https://live.ckbccc.com/">
    <img src="https://raw.githubusercontent.com/ckb-devrel/ccc/master/packages/playground/assets/preview.png" width="60%" />
  </a>
</p>

This project is still under active development, and we are looking forward to your feedback. [Try it now here](https://live.ckbccc.com/).

## Documents

- Check [the repo of project CCC](https://github.com/ckb-devrel/ccc) for detailed introduction.
- Check our [full documents for all detailed APIs](https://docs.ckbccc.com).

## Run Locally

```shell
# Navigate to the project directory
pnpm install
pnpm build
```

Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.


================================================
File: packages/playground/CHANGELOG.md
================================================
# @ckb-ccc/ccc-playground

## 1.0.11

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.1.3
  - @ckb-ccc/connector-react@1.0.11

## 1.0.10

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.1.2
  - @ckb-ccc/connector-react@1.0.10

## 1.0.9

### Patch Changes

- Updated dependencies [[`5d4517e`](https://github.com/ckb-devrel/ccc/commit/5d4517e049b541b2a695db7821c4cfc2218678e0)]:
  - @ckb-ccc/spore@1.1.1
  - @ckb-ccc/ccc@1.1.1
  - @ckb-ccc/connector-react@1.0.9

## 1.0.8

### Patch Changes

- Updated dependencies [[`8c97c85`](https://github.com/ckb-devrel/ccc/commit/8c97c851db4a2d940c7e59116ca7620cfd0afae1), [`4c76f9e`](https://github.com/ckb-devrel/ccc/commit/4c76f9e2a93a226fcfc4c32a5378bb531bfff08f)]:
  - @ckb-ccc/spore@1.1.0
  - @ckb-ccc/ccc@1.1.0
  - @ckb-ccc/connector-react@1.0.8

## 1.0.7

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.0.7
  - @ckb-ccc/connector-react@1.0.7

## 1.0.6

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.0.6
  - @ckb-ccc/connector-react@1.0.6

## 1.0.5

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.0.5
  - @ckb-ccc/connector-react@1.0.5

## 1.0.4

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.0.4
  - @ckb-ccc/connector-react@1.0.4

## 1.0.3

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.0.3
  - @ckb-ccc/connector-react@1.0.3

## 1.0.2

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.0.2
  - @ckb-ccc/connector-react@1.0.2

## 1.0.1

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/ccc@1.0.1
  - @ckb-ccc/connector-react@1.0.1

## 1.0.0

### Major Changes

- [#107](https://github.com/ckb-devrel/ccc/pull/107) [`b99f55f`](https://github.com/ckb-devrel/ccc/commit/b99f55f74e64106391ce53f7d0bd0fa7522023cc) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: molecule

### Patch Changes

- Updated dependencies [[`b99f55f`](https://github.com/ckb-devrel/ccc/commit/b99f55f74e64106391ce53f7d0bd0fa7522023cc)]:
  - @ckb-ccc/ccc@1.0.0
  - @ckb-ccc/connector-react@1.0.0


================================================
File: packages/playground/next.config.mjs
================================================
/** @type {import('next').NextConfig} */
const nextConfig = {};

export default nextConfig;


================================================
File: packages/playground/package.json
================================================
{
  "name": "@ckb-ccc/ccc-playground",
  "version": "1.0.11",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint",
    "format": "prettier --write ."
  },
  "dependencies": {
    "@ckb-ccc/ccc": "workspace:*",
    "@ckb-ccc/connector-react": "workspace:*",
    "@monaco-editor/react": "^4.6.0",
    "axios": "^1.7.7",
    "bech32": "^2.0.0",
    "html2canvas": "^1.4.1",
    "isomorphic-ws": "^5.0.0",
    "lucide-react": "^0.438.0",
    "monaco-editor": "^0.51.0",
    "next": "14.2.8",
    "react": "^18",
    "react-dom": "^18",
    "typescript": "^5"
  },
  "devDependencies": {
    "@types/node": "^20",
    "@types/react": "^18",
    "@types/react-dom": "^18",
    "@types/webpack-env": "^1.18.5",
    "eslint": "^8",
    "eslint-config-next": "14.2.8",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-prettier": "^5.2.3",
    "postcss": "^8",
    "prettier": "^3.5.1",
    "prettier-plugin-tailwindcss": "^0.5.14",
    "raw-loader": "^4.0.2",
    "tailwindcss": "^3.4.1"
  }
}


================================================
File: packages/playground/postcss.config.mjs
================================================
/** @type {import('postcss-load-config').Config} */
const config = {
  plugins: {
    tailwindcss: {},
  },
};

export default config;


================================================
File: packages/playground/tailwind.config.ts
================================================
import type { Config } from "tailwindcss";

const config: Config = {
  content: [
    "./src/pages/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/components/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/app/**/*.{js,ts,jsx,tsx,mdx}",
  ],
  theme: {
    extend: {
      colors: {
        background: "var(--background)",
        foreground: "var(--foreground)",
      },
    },
  },
  plugins: [],
};
export default config;


================================================
File: packages/playground/tsconfig.json
================================================
{
  "compilerOptions": {
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": ["./src/*"]
    }
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  "exclude": ["node_modules"]
}


================================================
File: packages/playground/.eslintrc.json
================================================
{
  "extends": [
    "next/core-web-vitals",
    "next/typescript",
    "plugin:prettier/recommended"
  ]
}


================================================
File: packages/playground/.gitignore
================================================
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.js
.yarn/install-state.gz

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# local env files
.env*.local

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts


================================================
File: packages/playground/.prettierrc
================================================
{
  "singleQuote": false,
  "trailingComma": "all",
  "plugins": ["prettier-plugin-tailwindcss"]
}


================================================
File: packages/playground/src/app/context.tsx
================================================
"use client";

import React, {
  createContext,
  ReactNode,
  useEffect,
  useMemo,
  useState,
} from "react";
import { ccc } from "@ckb-ccc/connector-react";
import { formatString } from "./utils";
import { Link } from "lucide-react";

function WalletIcon({
  wallet,
  className,
}: {
  wallet: ccc.Wallet;
  className?: string;
}) {
  return (
    // eslint-disable-next-line @next/next/no-img-element
    <img
      src={wallet.icon}
      alt={wallet.name}
      className={`rounded-full ${className}`}
      style={{ width: "1rem", height: "1rem" }}
    />
  );
}

export const APP_CONTEXT = createContext<
  | {
      enabledAnimate: boolean;
      backgroundLifted: boolean;
      setAnimate: (v: boolean) => void;
      setBackgroundLifted: (v: boolean) => void;

      signer: ccc.Signer;
      openSigner: () => void;
      disconnect: () => void;
      openAction: ReactNode;

      messages: ["error" | "info", string, ReactNode][];
      sendMessage: (
        level: "error" | "info",
        title: string,
        msgs: ReactNode[],
      ) => void;
      createSender: (title: string) => {
        log: (...msgs: ReactNode[]) => void;
        error: (...msgs: ReactNode[]) => void;
      };
    }
  | undefined
>(undefined);

export function AppProvider({ children }: { children: React.ReactNode }) {
  const {
    wallet,
    signerInfo: cccSigner,
    open,
    client,
    disconnect,
  } = ccc.useCcc();

  const privateKeySigner = useMemo(
    () =>
      new ccc.SignerCkbPublicKey(
        client,
        "0x026f3255791f578cc5e38783b6f2d87d4709697b797def6bf7b3b9af4120e2bfd9",
      ),
    [client],
  );
  const [address, setAddress] = useState<string>("");

  const [enabledAnimate, setAnimate] = useState(true);
  const [backgroundLifted, setBackgroundLifted] = useState(false);
  const signer = cccSigner?.signer ?? privateKeySigner;

  useEffect(() => {
    signer?.getInternalAddress().then((a) => setAddress(a));
  }, [signer]);

  const [messages, setMessages] = useState<
    ["error" | "info", string, ReactNode][]
  >([]);

  const sendMessage = (
    level: "error" | "info",
    title: string,
    msgs: ReactNode[],
  ) =>
    setMessages((messages) => [
      ...messages,
      [
        level,
        title,
        msgs.map((msg, i) => {
          if (
            typeof msg === "string" &&
            (msg.startsWith(`"http://`) || msg.startsWith(`"https://`))
          ) {
            const url = msg.slice(1, -1);
            return (
              <a
                key={i}
                className="px-2 text-[#2D5FF5] underline underline-offset-2"
                href={url}
                target="_blank"
                rel="noopener noreferrer"
              >
                {url}
              </a>
            );
          }

          return (
            <React.Fragment key={i}>
              {i === 0 ? "" : " "}
              {msg}
            </React.Fragment>
          );
        }),
      ],
    ]);

  useEffect(() => {
    const handler = (event: PromiseRejectionEvent) => {
      const msg = (() => {
        if (typeof event.reason === "object" && event.reason !== null) {
          const { name, message, stack, cause } = event.reason;
          return JSON.stringify({ name, message, stack, cause });
        }
        if (typeof event.reason === "string") {
          return event.reason;
        }
        return JSON.stringify(event);
      })();
      sendMessage("error", "Unknown error", [msg]);
    };

    window.addEventListener("unhandledrejection", handler);
    return () => window.removeEventListener("unhandledrejection", handler);
  }, [setMessages]);

  return (
    <APP_CONTEXT.Provider
      value={{
        enabledAnimate,
        backgroundLifted,
        setAnimate,
        setBackgroundLifted,

        signer,
        openSigner: () => {
          open();
        },
        disconnect: () => {
          disconnect();
        },
        openAction: cccSigner ? (
          <>
            {wallet && <WalletIcon wallet={wallet} className="mr-2" />}
            {formatString(address, 5, 4)}
          </>
        ) : (
          <>
            <Link className="mr-2" size="1em" />
            Connect
          </>
        ),

        messages,
        sendMessage,
        createSender: (title) => ({
          log: (...msgs) => sendMessage("info", title, msgs),
          error: (...msgs) => sendMessage("error", title, msgs),
        }),
      }}
    >
      {children}
    </APP_CONTEXT.Provider>
  );
}

export function useApp() {
  const context = React.useContext(APP_CONTEXT);
  if (!context) {
    throw Error(
      "The component which invokes the useApp hook should be placed in a AppProvider.",
    );
  }
  return context;
}


================================================
File: packages/playground/src/app/examples.ts
================================================
export const DEFAULT_TRANSFER = `import { ccc } from "@ckb-ccc/ccc";
import { render, signer } from "@ckb-ccc/playground";

console.log("Welcome to CCC Playground!");

// The receiver is the signer itself on mainnet
const receiver = signer.client.addressPrefix === "ckb" ?
  await signer.getRecommendedAddress() :
  "ckt1qzda0cr08m85hc8jlnfp3zer7xulejywt49kt2rr0vthywaa50xwsqflz4emgssc6nqj4yv3nfv2sca7g9dzhscgmg28x";
console.log(receiver);

// Parse the receiver script from an address
const { script: lock } = await ccc.Address.fromString(
  receiver,
  signer.client,
);

// Describe what we want
const tx = ccc.Transaction.from({
  outputs: [
    { capacity: ccc.fixedPointFrom(100), lock },
  ],
});
await render(tx);

// Complete missing parts: Fill inputs
await tx.completeInputsByCapacity(signer);
await render(tx);

// Complete missing parts: Pay fee
await tx.completeFeeBy(signer, 1000);
await render(tx);
`;


================================================
File: packages/playground/src/app/globals.css
================================================
@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  color: #ffffff;
  background: #4a044e;
  font-family: Arial, Helvetica, sans-serif;
}


================================================
File: packages/playground/src/app/layout.tsx
================================================
import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { LayoutProvider } from "./layoutProvider";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "CCC Playground",
  description: "Start exploring CKB from here!",
  icons: "/favicon.svg",
  openGraph: {
    title: "CCC Playground",
    description: "Start exploring CKB from here!",
    images: "/opengraph.png",
  },
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <LayoutProvider>{children}</LayoutProvider>
      </body>
    </html>
  );
}


================================================
File: packages/playground/src/app/layoutProvider.tsx
================================================
"use client";

import { ccc } from "@ckb-ccc/connector-react";
import { ReactNode } from "react";
import { AppProvider } from "./context";

export function LayoutProvider({ children }: { children: ReactNode }) {
  return (
    <ccc.Provider>
      <AppProvider>{children}</AppProvider>
    </ccc.Provider>
  );
}


================================================
File: packages/playground/src/app/page.tsx
================================================
"use client";

import { bech32 } from "bech32";
import WebSocket from "isomorphic-ws";
import { ccc } from "@ckb-ccc/connector-react";
import { useEffect, useRef, useState, useCallback } from "react";
import { useApp } from "./context";
import {
  Blocks,
  BookOpenText,
  Bug,
  FlaskConical,
  FlaskConicalOff,
  Play,
  Printer,
  Share2,
  SquareArrowOutUpRight,
  SquareTerminal,
  StepForward,
} from "lucide-react";
import { Button } from "./components/Button";
import { Transaction } from "./tabs/Transaction";
import { Scripts } from "./tabs/Scripts";
import { DEFAULT_TRANSFER } from "./examples";
import html2canvas from "html2canvas";
import { About } from "./tabs/About";
import { Console } from "./tabs/Console";
import axios from "axios";
import { execute } from "./execute";
import { Editor } from "./components/Editor";

async function shareToNostr(
  client: ccc.Client,
  relays: string[],
  content: string,
): Promise<string> {
  const event: ccc.NostrEvent = {
    kind: 1050,
    created_at: Math.floor(Date.now() / 1000),
    tags: [
      ["filename", "ccc-playground.ts"],
      ["client", "ccc-playground"],
    ],
    content,
  };
  const signer = new ccc.SignerNostrPrivateKey(
    client,
    Array.from(new Array(32), () => Math.floor(Math.random() * 256)),
  );
  const signedEvent = await signer.signNostrEvent(event);

  const sent = (
    await Promise.all(
      relays.map(async (relay) => {
        const socket = new WebSocket(relay);
        const res = await new Promise<string | undefined>((resolve) => {
          setTimeout(resolve, 5000);
          socket.onclose = () => {
            resolve(undefined);
          };
          socket.onmessage = (event) => {
            const data = JSON.parse(event.data as string);
            if (data[0] === "OK" && data[1] === signedEvent.id && data[2]) {
              resolve(relay);
            } else {
              resolve(undefined);
            }
          };
          socket.onopen = () => {
            socket.send(JSON.stringify(["EVENT", signedEvent]));
          };
        });
        socket.close();
        return res;
      }),
    )
  ).filter((r) => r !== undefined);

  if (sent.length === 0) {
    throw new Error("Failed to send event to relay");
  }

  const id = ccc.bytesFrom(signedEvent.id);
  return bech32.encode(
    "nevent",
    bech32.toWords(
      ccc.bytesConcat(
        [0, id.length],
        id,
        ...sent
          .map((relay) => {
            console.log(relay);
            const bytes = ccc.bytesFrom(relay, "ascii");
            return [[1, bytes.length], bytes];
          })
          .flat(),
      ),
    ),
    65536,
  );
}

function getTLVs(tlv: number[]) {
  let i = 0;

  const values = [];
  while (i < tlv.length) {
    const type = tlv[i];
    const length = tlv[i + 1];
    const value = tlv.slice(i + 2, i + 2 + length);
    i += 2 + length;

    values.push({ type, length, value });
  }

  return values;
}

async function getFromNEvent(
  defaultRelays: string[],
  id: string,
): Promise<string | undefined> {
  let eventId;
  const relays = [...defaultRelays];
  for (const { type, value } of getTLVs(
    bech32.fromWords(bech32.decode(id, 65536).words),
  )) {
    if (type === 0) {
      eventId = ccc.hexFrom(value).slice(2);
    }
    if (type === 1) {
      const relay = ccc.bytesTo(value, "ascii");
      if (!relays.includes(relay)) {
        relays.push(relay);
      }
    }
  }
  if (!eventId) {
    throw new Error("Invalid nevent");
  }

  return Promise.any(relays.map((relay) => getFromNostr(relay, eventId)));
}

async function getFromNostr(relayUrl: string, id: string): Promise<string> {
  const socket = new WebSocket(relayUrl);

  const res = await new Promise<string>((resolve, reject) => {
    setTimeout(() => reject("Timeout"), 10000);
    socket.onclose = () => {
      reject("Connection closed");
    };
    socket.onmessage = (event) => {
      const data = JSON.parse(event.data as string);
      if (data[0] === "EVENT" && data[1] === "1") {
        resolve(data[2].content);
      } else if (data[0] === "EOSE") {
        reject("Event not found");
      } else {
        reject(JSON.stringify(event.data));
      }
    };
    socket.onopen = () => {
      socket.send(JSON.stringify(["REQ", "1", { ids: [id] }]));
    };
  });
  socket.close();

  return res;
}

const DEFAULT_NOSTR_RELAYS = [
  "wss://relay.nostr.band",
  "wss://purplerelay.com",
  "wss://relay.nostr.net",
  "wss://nostr.oxtr.dev",
  "wss://relay.damus.io",
];

export default function Home() {
  const { openSigner, openAction, signer, messages, sendMessage } = useApp();
  const { setClient, client } = ccc.useCcc();

  const [isLoading, setIsLoading] = useState(false);
  const [source, setSource] = useState(DEFAULT_TRANSFER);
  const [isRunning, setIsRunning] = useState(false);
  const [next, setNext] = useState<((abort?: boolean) => void) | undefined>(
    undefined,
  );

  const [tx, setTx] = useState<ccc.Transaction | undefined>(undefined);
  const tabRef = useRef<HTMLDivElement | null>(null);

  const [tab, setTab] = useState("Transaction");
  const [readMsgCount, setReadMsgCount] = useState(0);
  const [highlight, setHighlight] = useState<number[] | undefined>(undefined);

  const [isTestnet, setIsTestnet] = useState(true);
  useEffect(() => {
    setIsTestnet(client.addressPrefix !== "ckb");
  }, [client]);
  useEffect(() => {
    setClient(
      isTestnet ? new ccc.ClientPublicTestnet() : new ccc.ClientPublicMainnet(),
    );
  }, [isTestnet, setClient]);

  const runCode = useCallback(
    async (autoPlay: boolean) => {
      setIsRunning(true);
      try {
        await execute(
          source,
          (pos, tx) => {
            if (tx) {
              setTx(ccc.Transaction.from({ ...tx }));
            }

            setHighlight(pos);
            if (!pos) {
              return Promise.resolve();
            }
            return new Promise<void>((resolve, reject) => {
              const next = (abort?: boolean) => {
                setNext(undefined);

                if (abort) {
                  reject("ABORTED");
                } else {
                  resolve();
                }
              };
              setNext(() => next);
              if (autoPlay) {
                setTimeout(next, 500);
              }
            });
          },
          signer,
          sendMessage,
        );
      } finally {
        setIsRunning(false);
      }
    },
    [source, signer, sendMessage],
  );

  useEffect(() => {
    const searchParams = new URLSearchParams(window.location.search);
    const src = searchParams.get("src");

    if (src == null) {
      const source = window.localStorage.getItem("playgroundSourceCode");
      if (source) {
        setSource(source);
      }
      return;
    }

    setIsLoading(true);

    if (src.startsWith("nostr:")) {
      const id = src.slice(6);
      getFromNEvent(DEFAULT_NOSTR_RELAYS, id)
        .then((res) => {
          if (res !== undefined) {
            setSource(res);
          }
        })
        .finally(() => setIsLoading(false));
    } else {
      axios
        .get(src)
        .then(({ data }) => {
          setSource(data);
        })
        .finally(() => setIsLoading(false));
    }
  }, []);

  useEffect(() => {
    if (next) {
      next(true);
    }

    const searchParams = new URLSearchParams(window.location.search);
    const src = searchParams.get("src");

    if (src == null) {
      window.localStorage.setItem("playgroundSourceCode", source);
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [source]);

  useEffect(() => {
    if (tab === "Console") {
      setReadMsgCount(messages.length);
      return;
    }

    if (messages.slice(readMsgCount).some(([level]) => level === "error")) {
      setTab("Console");
    }
  }, [messages, tab, readMsgCount]);

  return (
    <div
      className={`flex min-h-dvh w-full flex-col ${
        tab !== "Print" ? "lg:h-dvh lg:flex-row" : ""
      }`}
    >
      <div
        className={`flex shrink-0 basis-1/2 flex-col overflow-hidden lg:h-dvh ${
          tab !== "Print" ? "" : "hidden"
        }`}
      >
        <Editor
          value={source}
          onChange={(v) => setSource(v ?? "")}
          isLoading={isLoading}
          highlight={highlight}
        />
        <div className="flex shrink-0 overflow-x-auto bg-gray-800">
          <Button onClick={() => setIsTestnet(!isTestnet)}>
            {isTestnet ? (
              <FlaskConical size="16" />
            ) : (
              <FlaskConicalOff size="16" />
            )}
            <span className="ml-1">{isTestnet ? "Testnet" : "Mainnet"}</span>
          </Button>
          {isRunning ? (
            <Button onClick={() => next?.()} disabled={!next}>
              <StepForward size="16" />
              <span className="ml-1">Continue</span>
            </Button>
          ) : (
            <>
              <Button onClick={() => runCode(true)}>
                <Play size="16" />
                <span className="ml-1">Run</span>
              </Button>
              <Button onClick={() => runCode(false)}>
                <Bug size="16" />
                <span className="ml-1">Step</span>
              </Button>
            </>
          )}
          <Button
            onClick={async () => {
              const id = await shareToNostr(
                client,
                DEFAULT_NOSTR_RELAYS,
                source,
              );

              window.location.href = `/?src=nostr:${id}`;
            }}
          >
            <Share2 size="16" />
            <span className="ml-1">Share</span>
          </Button>
        </div>
      </div>
      <div className="flex shrink-0 grow basis-1/2 flex-col overflow-hidden">
        {
          {
            Transaction: <Transaction tx={tx} onRun={() => runCode(true)} />,
            Scripts: <Scripts tx={tx} />,
            Console: <Console />,
            Print: <Transaction tx={tx} disableScroll innerRef={tabRef} />,
            About: <About className="grow p-4" />,
          }[tab]
        }
        <div className="flex shrink-0 overflow-x-auto bg-gray-800">
          <Button onClick={openSigner}>{openAction}</Button>
          <Button onClick={() => setTab("Transaction")}>
            <Blocks size="16" />
            <span className="ml-1">Transaction</span>
          </Button>
          <Button onClick={() => setTab("Scripts")}>
            <BookOpenText size="16" />
            <span className="ml-1">Scripts</span>
          </Button>
          <Button onClick={() => setTab("Console")}>
            <SquareTerminal size="16" />
            <span className="ml-1">Console</span>
          </Button>
          <Button
            onClick={() => {
              if (tab === "Print" && tabRef.current) {
                html2canvas(tabRef.current, {
                  backgroundColor: "#4a044e",
                  foreignObjectRendering: true,
                }).then((canvas) => {
                  const image = canvas.toDataURL("image/png");
                  const link = document.createElement("a");
                  link.href = image;
                  link.download = "transaction.png";
                  link.click();
                });
              }
              setTab("Print");
            }}
          >
            <Printer size="16" />
            <span className="ml-1">
              Print{tab === "Print" ? " (Click again)" : ""}
            </span>
          </Button>
          <Button onClick={() => setTab("About")}>
            <SquareArrowOutUpRight size="16" />
            <span className="ml-1">About</span>
          </Button>
        </div>
      </div>
    </div>
  );
}


================================================
File: packages/playground/src/app/utils.tsx
================================================
import { ccc } from "@ckb-ccc/connector-react";
import Link from "next/link";

export function tokenInfoToBytes(
  decimals: ccc.NumLike,
  symbol: string,
  name: string,
) {
  const symbolBytes = ccc.bytesFrom(symbol, "utf8");
  const nameBytes = ccc.bytesFrom(name === "" ? symbol : name, "utf8");
  return ccc.bytesConcat(
    ccc.numToBytes(decimals, 1),
    ccc.numToBytes(nameBytes.length, 1),
    nameBytes,
    ccc.numToBytes(symbolBytes.length, 1),
    symbolBytes,
  );
}

export function bytesFromAnyString(str: string): ccc.Bytes {
  try {
    return ccc.bytesFrom(str);
  } catch (e) {}

  return ccc.bytesFrom(str, "utf8");
}

export function formatString(
  str: string | undefined,
  l = 9,
  r = 6,
): string | undefined {
  if (str && str.length > l + r + 3) {
    return `${str.slice(0, l)}...${str.slice(-r)}`;
  }
  return str;
}

export function useGetExplorerLink() {
  const { client } = ccc.useCcc();

  const prefix =
    client.addressPrefix === "ckb"
      ? "https://explorer.nervos.org"
      : "https://pudge.explorer.nervos.org";

  return {
    index: prefix,
    explorerAddress: (addr: string, display?: string) => {
      return (
        <Link
          className="underline"
          href={`${prefix}/address/${addr}`}
          target="_blank"
        >
          {display ?? addr}
        </Link>
      );
    },
    explorerTransaction: (txHash: string, display?: string) => {
      return (
        <Link
          className="underline"
          href={`${prefix}/transaction/${txHash}`}
          target="_blank"
        >
          {display ?? txHash}
        </Link>
      );
    },
  };
}

export function getScriptColor(script: ccc.ScriptLike): string {
  const hash = ccc.Script.from(script).hash();

  return `hsl(${(ccc.numFrom(hash) % ccc.numFrom(360)).toString()} 65% 45%)`;
}


================================================
File: packages/playground/src/app/components/BigButton.tsx
================================================
import { icons } from "lucide-react";
import { RandomWalk } from "./RandomWalk";

export function BigButton({
  iconName,
  size,
  ...props
}: {
  iconName: keyof typeof icons;
  size?: "md" | "sm";
} & React.ComponentPropsWithoutRef<"button">) {
  const [classes, iconClasses] = {
    md: ["h-40 w-40 p-24 text-2xl", "h-20 w-20 md:h-24 md:w-24"],
    sm: ["h-24 w-24 p-16 text-lg", "h-16 w-16 md:h-20 md:w-20"],
  }[size ?? "md"];

  const Icon = icons[iconName];

  return (
    <button
      {...props}
      className={`relative flex items-center justify-center rounded rounded-full border bg-white font-bold shadow-md ${classes} ${props.className ?? ""}`}
    >
      <div className="absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 opacity-15">
        <RandomWalk>
          <Icon className={iconClasses} />
        </RandomWalk>
      </div>

      <div className="flex flex-col items-center gap-2">{props.children}</div>
    </button>
  );
}


================================================
File: packages/playground/src/app/components/Button.tsx
================================================
export function Button(props: React.ComponentPropsWithoutRef<"button">) {
  return (
    <button
      {...props}
      className={`flex shrink-0 items-center whitespace-nowrap border border-gray-600 px-4 py-1 font-bold text-white disabled:bg-gray-600 ${props.className}`}
    ></button>
  );
}


================================================
File: packages/playground/src/app/components/Cell.tsx
================================================
import { ccc } from "@ckb-ccc/connector-react";
import { formatString, getScriptColor, useGetExplorerLink } from "../utils";
import { useMemo } from "react";
import { RandomWalk } from "./RandomWalk";

function Capacity({ capacity }: { capacity?: ccc.NumLike }) {
  const [l, r] = useMemo(() => {
    if (capacity === undefined) {
      return ["?"];
    }
    return ccc.fixedPointToString(ccc.numFrom(capacity)).split(".");
  }, [capacity]);

  if (!r) {
    return (
      <>
        <span className="break-all text-4xl font-bold">{l}</span>
        <span className="break-all text-sm">CKB</span>
      </>
    );
  }

  return (
    <>
      <span className="break-all text-4xl font-bold">{l}</span>
      <span className="break-all text-sm">.{r} CKB</span>
    </>
  );
}

export function Cell({
  cell: { cellOutput, previousOutput, outputData },
}: {
  cell: {
    cellOutput?: ccc.CellOutput;
    previousOutput?: ccc.OutPoint;
    outputData?: ccc.Hex;
  };
}) {
  const { explorerTransaction } = useGetExplorerLink();

  const freePercentage = useMemo(() => {
    if (!cellOutput || !outputData) {
      return 0;
    }

    const total = cellOutput.capacity;
    const freeSize =
      total -
      ccc.fixedPointFrom(
        cellOutput.occupiedSize + ccc.bytesFrom(outputData).length,
      );
    const free = (freeSize * ccc.numFrom(10000)) / total;

    return ccc.fixedPointToString(
      free >= ccc.numFrom(9500) ? ccc.numFrom(9500) : free,
      2,
    );
  }, [cellOutput, outputData]);

  const outputLength = useMemo(() => {
    if (!outputData) {
      return 0;
    }

    return ccc.bytesFrom(outputData).length;
  }, [outputData]);

  const lockColor = useMemo(
    () => (cellOutput ? getScriptColor(cellOutput.lock) : "#1f2937"),
    [cellOutput],
  );
  const typeColor = useMemo(
    () => (cellOutput?.type ? getScriptColor(cellOutput.type) : "#1f2937"),
    [cellOutput],
  );

  return (
    <RandomWalk
      className="relative flex h-40 w-40 flex-col items-center justify-center rounded-full border border-fuchsia-900 shadow-md"
      style={{
        backgroundColor: lockColor,
      }}
    >
      <div
        className="absolute left-1/2 top-1/2 h-28 w-28 -translate-x-1/2 -translate-y-1/2 overflow-hidden rounded-full bg-gray-800"
        style={{
          borderWidth: "2rem",
          borderColor: typeColor,
        }}
      >
        <div
          className="absolute left-1/2 h-20 w-20 -translate-x-1/2 bg-white"
          style={{
            backgroundColor: lockColor,
            top: `${freePercentage}%`,
          }}
        ></div>
      </div>
      <div className="relative flex flex-col items-center">
        <Capacity capacity={cellOutput?.capacity} />
      </div>
      {previousOutput ? (
        <div className="relative">
          {explorerTransaction(
            previousOutput.txHash,
            `${formatString(
              previousOutput.txHash,
              5,
              3,
            )}:${previousOutput.index.toString()}`,
          )}
        </div>
      ) : undefined}
      {outputLength ? (
        <div className="relative flex justify-center text-sm">
          {outputLength} bytes
        </div>
      ) : undefined}
    </RandomWalk>
  );
}


================================================
File: packages/playground/src/app/components/Editor.tsx
================================================
import MonacoEditor from "@monaco-editor/react";
import { LoaderCircle } from "lucide-react";
import { editor } from "monaco-editor";
import { useEffect, useRef, useState } from "react";

const CCCSource = require.context(
  "!!raw-loader!../../../../",
  true,
  /^\.\/[^\/]*\/(dist\.commonjs\/.*\.d\.ts|package.json)$/,
);

export function Editor({
  value,
  onChange,
  isLoading,
  highlight,
  onMount,
}: {
  value: string;
  onChange: (val: string | undefined) => void;
  isLoading?: boolean;
  highlight?: number[];
  onMount?: (editor: editor.IStandaloneCodeEditor) => void;
}) {
  const [editor, setEditor] = useState<
    editor.IStandaloneCodeEditor | undefined
  >(undefined);
  const decorationRef = useRef<editor.IEditorDecorationsCollection | undefined>(
    undefined,
  );

  useEffect(() => {
    if (!editor) {
      return;
    }
    if (!highlight) {
      decorationRef.current?.clear();
      decorationRef.current = undefined;
      return;
    }

    const decorations = [
      {
        range: {
          startLineNumber: highlight[0] + 1,
          endLineNumber: highlight[1] + 1,
          startColumn: 0,
          endColumn: 0,
        },
        options: {
          isWholeLine: true,
          className: "bg-fuchsia-950",
        },
      },
      {
        range: {
          startLineNumber: highlight[0] + 1,
          endLineNumber: highlight[1] + 1,
          startColumn: highlight[2] + 1,
          endColumn: highlight[3] + 1,
        },
        options: {
          className: "bg-fuchsia-900",
        },
      },
    ];

    if (decorationRef.current) {
      decorationRef.current.set(decorations);
    } else {
      decorationRef.current = editor.createDecorationsCollection(decorations);
    }
  }, [editor, highlight]);

  return (
    <div className="relative h-full w-full">
      <MonacoEditor
        className="h-[60vh] w-full lg:h-auto"
        theme="vs-dark"
        defaultLanguage="typescript"
        defaultPath="/index.ts"
        options={{
          padding: { top: 20 },
          minimap: { enabled: false },
          scrollBeyondLastLine: false,
        }}
        value={isLoading ? "" : value}
        onChange={onChange}
        onMount={(editor, monaco) => {
          monaco.languages.typescript.typescriptDefaults.setCompilerOptions({
            ...monaco.languages.typescript.typescriptDefaults.getCompilerOptions(),
            module: monaco.languages.typescript.ModuleKind.ESNext,
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            moduleResolution: 99 as any, // NodeNext
            noImplicitAny: true,
            strictNullChecks: true,
          });

          monaco.languages.typescript.typescriptDefaults.setDiagnosticsOptions({
            diagnosticCodesToIgnore: [
              // top-level return
              1108,
            ],
          });

          CCCSource.keys().forEach((key: string) => {
            monaco.languages.typescript.typescriptDefaults.addExtraLib(
              CCCSource(key).default,
              "file:///node_modules/@ckb-ccc/" + key.replace("./", ""),
            );
          });
          monaco.languages.typescript.typescriptDefaults.addExtraLib(
            "import { ccc } from '@ckb-ccc/core'; export function render(tx: ccc.Transaction): Promise<void>; export const signer: ccc.Signer; export const client: ccc.Client;",
            "file:///node_modules/@ckb-ccc/playground/index.d.ts",
          );

          setEditor(editor);
          onMount?.(editor);
        }}
      />
      {isLoading ? (
        <div className="absolute left-0 top-0 flex h-full w-full flex-col items-center justify-center bg-white/25">
          <LoaderCircle className="mb-2 animate-spin" size="48" />
          Loading...
        </div>
      ) : undefined}
    </div>
  );
}


================================================
File: packages/playground/src/app/components/RandomWalk.tsx
================================================
import { Component, ReactNode, RefObject, createRef } from "react";
import { APP_CONTEXT } from "../context";

export type RandomWalkProps = React.ComponentPropsWithoutRef<"div"> & {
  x?: number;
  y?: number;
  stopped?: boolean;
};

export class RandomWalk extends Component<RandomWalkProps> {
  static contextType = APP_CONTEXT;
  context: React.ContextType<typeof APP_CONTEXT>;

  // position, speed, force
  physics: number[] = [0, 0, 0, 0, 0, 0];
  ref: RefObject<HTMLDivElement> = createRef();
  interval: ReturnType<typeof setInterval> | undefined = undefined;

  x: number = 0;
  y: number = 0;

  startLoop() {
    if (this.interval) {
      return;
    }

    this.interval = setInterval(() => {
      if (!this.ref.current) {
        return;
      }

      const randomAngle = Math.random() * 2 * Math.PI;
      const rx = Math.cos(randomAngle) * 0.04;
      const ry = Math.sin(randomAngle) * 0.04;

      const physics = this.physics;
      const [x, y, vx, vy, fx, fy] = physics;

      const dx = (this.props.x ?? this.x) - x;
      const dy = (this.props.y ?? this.y) - y;

      const fSquare = fx * fx + fy * fy;
      if (fSquare > 0.64) {
        const f = Math.sqrt(fSquare);
        physics[4] *= 0.8 / f;
        physics[5] *= 0.8 / f;
      }

      physics[0] += vx * 0.08;
      physics[1] += vy * 0.08;
      physics[2] = vx * 0.8 + fx + dx * 0.08;
      physics[3] = vy * 0.8 + fy + dy * 0.08;
      physics[4] += rx;
      physics[5] += ry;

      this.ref.current.style.transform = `translate(${x}px, ${y}px)`;
    }, 16);
  }

  stopLoop() {
    clearInterval(this.interval);
    this.interval = undefined;
  }

  componentDidMount(): void {
    this.startLoop();
  }

  componentWillUnmount(): void {
    this.stopLoop();
  }

  componentDidUpdate(): void {
    if (this.context?.enabledAnimate) {
      this.startLoop();
    } else {
      this.stopLoop();
    }
  }

  render(): ReactNode {
    return (
      <div {...this.props} ref={this.ref}>
        {this.props.children}
      </div>
    );
  }
}


================================================
File: packages/playground/src/app/execute/index.ts
================================================
import { ccc } from "@ckb-ccc/connector-react";
import * as cccLib from "@ckb-ccc/ccc";
import * as cccAdvancedLib from "@ckb-ccc/ccc/advanced";
import { ReactNode } from "react";
import ts from "typescript";
import { vlqDecode } from "./vlq";

function findSourcePos(
  sourceMap: string | undefined,
  row: number,
  col: number,
): [number, number, number, number] | undefined {
  if (!sourceMap) {
    return;
  }
  const lines = JSON.parse(sourceMap).mappings.split(";") as string[];

  let sRow = 0;
  let sCol = 0;

  for (let i = 0; i < lines.length; i += 1) {
    const line = lines[i];
    if (line === "") {
      continue;
    }
    let nowCol = 0;
    for (const map of line.split(",").map((c: string) => vlqDecode(c))) {
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      const [colInc, _, sRowInc, sColInc] = map;
      nowCol += colInc;
      if (i === row && nowCol >= col) {
        return [sRow, sRow + sRowInc, sCol, sCol + sColInc];
      }

      sRow += sRowInc;
      sCol += sColInc;
    }
  }
}

export async function execute(
  source: string,
  onUpdate: (
    pos: [number, number, number, number] | undefined,
    tx: ccc.Transaction | undefined,
  ) => Promise<void>,
  signer: ccc.Signer,
  log: (level: "error" | "info", title: string, msgs: ReactNode[]) => void,
) {
  const compiled = ts.transpileModule(source, {
    compilerOptions: { sourceMap: true },
  });

  const exports = {};
  const require = (path: string) => {
    const lib = {
      "@ckb-ccc/core": cccLib,
      "@ckb-ccc/core/advanced": cccAdvancedLib,
      "@ckb-ccc/ccc": cccLib,
      "@ckb-ccc/ccc/advanced": cccAdvancedLib,
      "@ckb-ccc/playground": {
        render: async (tx: ccc.Transaction | unknown) => {
          if (!(tx instanceof ccc.Transaction)) {
            return;
          }
          const stack = new Error().stack;
          if (!stack) {
            return;
          }
          const match = stack
            .split("\n")[2]
            ?.match("<anonymous>:([0-9]*):([0-9]*)\\)");
          if (!match) {
            return;
          }
          try {
            await onUpdate(
              findSourcePos(
                compiled.sourceMapText,
                Number(match[1]) - 4,
                Number(match[2]) - 2,
              ),
              tx,
            );
          } catch (err) {
            if (err !== "ABORTED") {
              throw err;
            }
          }
        },
        signer,
        client: signer.client,
      },
    }[path];

    if (!lib) {
      return;
    }

    return lib;
  };

  try {
    await Function(
      "exports",
      "require",
      "console",
      `return (async () => {\n${compiled.outputText}\n})();`,
    )(exports, require, {
      log: (...msgs: unknown[]) =>
        log(
          "info",
          "",
          msgs.map((m) =>
            JSON.stringify(m, (_, value) => {
              if (typeof value === "bigint") {
                return value.toString();
              }
              return value;
            }),
          ),
        ),
      error: (...msgs: unknown[]) =>
        log(
          "error",
          "",
          msgs.map((m) =>
            JSON.stringify(m, (_, value) => {
              if (typeof value === "bigint") {
                return value.toString();
              }
              return value;
            }),
          ),
        ),
    });
  } finally {
    await onUpdate(undefined, undefined);
  }
  return;
}


================================================
File: packages/playground/src/app/execute/vlq.ts
================================================
// From https://github.com/Rich-Harris/vlq
const char_to_integer: Record<string, number> = {};
const integer_to_char: Record<string, string> = {};

"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
  .split("")
  .forEach(function (char, i) {
    char_to_integer[char] = i;
    integer_to_char[i] = char;
  });

export function vlqDecode(string: string) {
  const result = [];

  let shift = 0;
  let value = 0;

  for (let i = 0; i < string.length; i += 1) {
    let integer = char_to_integer[string[i]];

    if (integer === undefined) {
      throw new Error("Invalid character (" + string[i] + ")");
    }

    const has_continuation_bit = integer & 32;

    integer &= 31;
    value += integer << shift;

    if (has_continuation_bit) {
      shift += 5;
    } else {
      const should_negate = value & 1;
      value >>>= 1;

      if (should_negate) {
        result.push(value === 0 ? -0x80000000 : -value);
      } else {
        result.push(value);
      }

      // reset
      value = shift = 0;
    }
  }

  return result;
}


================================================
File: packages/playground/src/app/tabs/About.tsx
================================================
/* eslint-disable @next/next/no-img-element */
import { Search } from "lucide-react";
import { useGetExplorerLink } from "../utils";
import Link from "next/link";

export function About(props: React.ComponentPropsWithoutRef<"div">) {
  const { index } = useGetExplorerLink();

  return (
    <div
      {...props}
      className={`flex items-center justify-center py-4 ${
        props.className ?? ""
      }`}
    >
      <div className="flex flex-col gap-4 *:flex *:gap-3 *:whitespace-nowrap *:border-b *:px-8 *:pb-4 *:pt-3">
        <Link href="https://ckbccc.com/" target="_blank">
          <img
            src="https://raw.githubusercontent.com/ckb-devrel/ccc/master/assets/logo.svg"
            alt="CCC"
            className="h-6 w-6"
          />
          Project CCC - CKBers&apos; Codebase
        </Link>
        <Link href="https://docs.ckbccc.com/" target="_blank">
          <img
            src="https://raw.githubusercontent.com/ckb-devrel/ccc/master/assets/logo.svg"
            alt="CCC"
            className="h-6 w-6"
          />
          CCC Docs
        </Link>
        <Link href="https://github.com/ckb-devrel/ccc" target="_blank">
          <svg
            className="h-6 w-6"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 16 16"
            fill="#fff"
            id="github"
          >
            <path d="M7.999 0C3.582 0 0 3.596 0 8.032a8.031 8.031 0 0 0 5.472 7.621c.4.074.546-.174.546-.387 0-.191-.007-.696-.011-1.366-2.225.485-2.695-1.077-2.695-1.077-.363-.928-.888-1.175-.888-1.175-.727-.498.054-.488.054-.488.803.057 1.225.828 1.225.828.714 1.227 1.873.873 2.329.667.072-.519.279-.873.508-1.074-1.776-.203-3.644-.892-3.644-3.969 0-.877.312-1.594.824-2.156-.083-.203-.357-1.02.078-2.125 0 0 .672-.216 2.2.823a7.633 7.633 0 0 1 2.003-.27 7.65 7.65 0 0 1 2.003.271c1.527-1.039 2.198-.823 2.198-.823.436 1.106.162 1.922.08 2.125.513.562.822 1.279.822 2.156 0 3.085-1.87 3.764-3.652 3.963.287.248.543.738.543 1.487 0 1.074-.01 1.94-.01 2.203 0 .215.144.465.55.386A8.032 8.032 0 0 0 16 8.032C16 3.596 12.418 0 7.999 0z"></path>
          </svg>
          GitHub: CCC
        </Link>
        <Link
          href="https://github.com/ckb-devrel/ccc-playground"
          target="_blank"
        >
          <svg
            className="h-6 w-6"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 16 16"
            fill="#fff"
            id="github"
          >
            <path d="M7.999 0C3.582 0 0 3.596 0 8.032a8.031 8.031 0 0 0 5.472 7.621c.4.074.546-.174.546-.387 0-.191-.007-.696-.011-1.366-2.225.485-2.695-1.077-2.695-1.077-.363-.928-.888-1.175-.888-1.175-.727-.498.054-.488.054-.488.803.057 1.225.828 1.225.828.714 1.227 1.873.873 2.329.667.072-.519.279-.873.508-1.074-1.776-.203-3.644-.892-3.644-3.969 0-.877.312-1.594.824-2.156-.083-.203-.357-1.02.078-2.125 0 0 .672-.216 2.2.823a7.633 7.633 0 0 1 2.003-.27 7.65 7.65 0 0 1 2.003.271c1.527-1.039 2.198-.823 2.198-.823.436 1.106.162 1.922.08 2.125.513.562.822 1.279.822 2.156 0 3.085-1.87 3.764-3.652 3.963.287.248.543.738.543 1.487 0 1.074-.01 1.94-.01 2.203 0 .215.144.465.55.386A8.032 8.032 0 0 0 16 8.032C16 3.596 12.418 0 7.999 0z"></path>
          </svg>
          GitHub: CCC Playground
        </Link>
        <Link href="https://x.com/CKBDevrel" target="_blank">
          <svg
            className="h-6 w-6"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            fill="#fff"
          >
            <path d="M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z" />
          </svg>
          X (Formerly Twitter): CKB DevRel
        </Link>
        <Link href="https://faucet.nervos.org/" target="_blank">
          <svg
            className="h-6 w-6"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 360 360"
            fill="#fff"
          >
            <path
              d="M102.342,246.475C99.541,242.42,94.928,240,90,240s-9.541,2.42-12.342,6.475
		c-0.32,0.463-7.925,11.497-15.633,24.785C46.765,297.566,45,308.822,45,315c0,24.813,20.187,45,45,45s45-20.187,45-45
		c0-6.178-1.765-17.434-17.025-43.74C110.267,257.972,102.662,246.938,102.342,246.475z"
            />
            <path
              d="M300,60h-60h-15V30h15c8.284,0,15-6.716,15-15s-6.716-15-15-15h-60c-8.284,0-15,6.716-15,15s6.716,15,15,15
		h15v30h-15h-60c-41.355,0-75,33.645-75,75v60c0,8.284,6.716,15,15,15h60c8.284,0,15-6.716,15-15v-45h45h60h60
		c8.284,0,15-6.716,15-15V75C315,66.716,308.284,60,300,60z"
            />
          </svg>
          CKB Testnet Faucet
        </Link>
        <Link href="https://www.nervos.org/" target="_blank">
          <svg
            className="h-6 w-6"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 207.6765 206.318"
            fill="#fff"
          >
            <polygon points="0 0 0 206.318 53.151 206.318 53.151 93.897 93.896 93.897 0 0" />
            <polygon points="154.525 0 154.525 112.422 113.781 112.422 207.676 206.318 207.676 0 154.525 0" />
          </svg>
          Nervos Network
        </Link>
        <Link href={index} target="_blank">
          <Search className="h-6 w-6" strokeWidth={4} />
          CKB Explorer
        </Link>
      </div>
    </div>
  );
}


================================================
File: packages/playground/src/app/tabs/Console.tsx
================================================
import { useMemo } from "react";
import { useApp } from "../context";
import { Info, X } from "lucide-react";

export function Console() {
  const { messages } = useApp();

  const consoles = useMemo(
    () =>
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      messages.map(([level, _, message], i) => (
        <div
          key={i}
          className={`break-all border-t border-fuchsia-800 p-2 ${
            level === "error" ? "bg-red-600/25 text-red-300" : "text-stone-300"
          }`}
        >
          {level === "error" ? (
            <X className="mr-2 inline" size="16" />
          ) : (
            <Info className="mr-2 inline" size="16" />
          )}
          {message}
        </div>
      )),
    [messages],
  );

  return (
    <div className="flex max-h-dvh grow flex-col-reverse overflow-y-auto font-mono">
      <div className="flex flex-col">{consoles}</div>
    </div>
  );
}


================================================
File: packages/playground/src/app/tabs/Scripts.tsx
================================================
import { ccc } from "@ckb-ccc/connector-react";
import { useEffect, useMemo, useState } from "react";
import { getScriptColor, useGetExplorerLink } from "../utils";

export function Scripts({ tx }: { tx?: ccc.Transaction }) {
  const { client } = ccc.useCcc();
  const { explorerAddress } = useGetExplorerLink();

  const [scripts, setScripts] = useState<Map<string, ccc.Script>>(new Map());

  useEffect(() => {
    setScripts(new Map());
    [tx?.inputs.map((i) => i.cellOutput) ?? [], tx?.outputs ?? []]
      .flat()
      .map((o) => {
        if (!o) {
          return;
        }

        return [o.lock, o.type];
      })
      .flat()
      .map((script) => {
        if (!script) {
          return;
        }

        setScripts((scripts) => {
          const hash = script.hash();
          if (scripts.has(hash)) {
            return scripts;
          }

          return new Map([...Array.from(scripts.entries()), [hash, script]]);
        });
      });
  }, [tx]);

  const scriptsList = useMemo(
    () =>
      Array.from(scripts.entries(), ([key, script]) => (
        <div
          key={key}
          className="flex flex-col p-2 py-4"
          style={{
            backgroundColor: getScriptColor(script),
          }}
        >
          <div className="-mb-1 text-sm text-gray-300">address</div>
          <div className="break-all">
            {explorerAddress(
              ccc.Address.from({
                prefix: client.addressPrefix,
                script,
              }).toString(),
            )}
          </div>
          <div className="-mb-1 text-sm text-gray-300">scriptHash</div>
          <div className="break-all">{key}</div>
          <div className="-mb-1 text-sm text-gray-300">codeHash</div>
          <div className="break-all">{script.codeHash}</div>
          <div className="-mb-1 text-sm text-gray-300">hashType</div>
          <div className="break-all">{script.hashType}</div>
          <div className="-mb-1 text-sm text-gray-300">args</div>
          <div className="break-all">{script.args}</div>
        </div>
      )),
    [scripts, explorerAddress, client],
  );

  return (
    <div className="flex grow flex-col justify-start overflow-y-auto">
      {scriptsList}
    </div>
  );
}


================================================
File: packages/playground/src/app/tabs/Transaction.tsx
================================================
import { ccc } from "@ckb-ccc/connector-react";
import { MutableRefObject, useEffect, useMemo, useState } from "react";
import { Cell } from "../components/Cell";
import { Play } from "lucide-react";

export function Transaction({
  tx,
  disableScroll,
  onRun,
  innerRef,
}: {
  tx?: ccc.Transaction;
  disableScroll?: boolean;
  onRun?: () => void;
  innerRef?: MutableRefObject<HTMLDivElement | null>;
}) {
  const { client } = ccc.useCcc();

  const [inputAmount, setInputAmount] = useState(ccc.Zero);
  useEffect(() => {
    (async () => {
      const inputAmount = await tx?.getInputsCapacity(client);
      setInputAmount(inputAmount ?? ccc.Zero);
    })();
  }, [tx, client]);
  const outputAmount = useMemo(
    () => tx?.getOutputsCapacity() ?? ccc.Zero,
    [tx],
  );

  const inputs = useMemo(
    () => tx?.inputs.map((input, i) => <Cell cell={input} key={i} />),
    [tx],
  );
  const outputs = useMemo(
    () =>
      tx?.outputs.map((cellOutput, i) => (
        <Cell cell={{ cellOutput, outputData: tx.outputsData[i] }} key={i} />
      )),
    [tx],
  );

  if (!tx) {
    return (
      <div
        ref={innerRef}
        className="flex grow flex-col items-center justify-center"
      >
        <button className="mb-4 rounded-full bg-green-400 p-6" onClick={onRun}>
          <Play size="32" />
        </button>
        <p className="text-lg">Run code to generate transaction</p>
      </div>
    );
  }

  return (
    <div
      ref={innerRef}
      className={`flex grow flex-col ${disableScroll ? "" : "overflow-hidden"}`}
    >
      <div
        className={`flex basis-1/2 flex-col ${
          disableScroll ? "" : "overflow-y-hidden"
        }`}
      >
        <div className="p-3 pb-0">
          Inputs ({ccc.fixedPointToString(inputAmount)} CKB)
        </div>
        <div className={`${disableScroll ? "" : "overflow-y-auto"} grow p-3`}>
          <div className="flex flex-wrap justify-center gap-2">{inputs}</div>
        </div>
      </div>

      <div
        className={`flex basis-1/2 flex-col border-t border-fuchsia-900 ${
          disableScroll ? "" : "overflow-y-hidden"
        }`}
      >
        <div className="p-3 pb-0">
          Outputs ({ccc.fixedPointToString(outputAmount)} +{" "}
          {outputAmount > inputAmount
            ? "?"
            : ccc.fixedPointToString(inputAmount - outputAmount)}{" "}
          CKB)
        </div>
        <div className={`${disableScroll ? "" : "overflow-y-auto"} grow p-3`}>
          <div className="flex flex-wrap justify-center gap-2">{outputs}</div>
        </div>
      </div>
    </div>
  );
}


================================================
File: packages/rei/README.md
================================================
<p align="center">
  <a href="https://app.ckbccc.com/">
    <img alt="Logo" src="https://raw.githubusercontent.com/ckb-devrel/ccc/master/assets/logoAndText.svg" style="height: 8rem; max-width: 90%; padding: 0.5rem 0;" />
  </a>
</p>

<h1 align="center" style="font-size: 48px;">
  CCC's support for REI Wallet
</h1>

<p align="center">
  <a href="https://www.npmjs.com/package/@ckb-ccc/rei"><img
    alt="NPM Version" src="https://img.shields.io/npm/v/%40ckb-ccc%2Frei"
  /></a>
  <img alt="GitHub commit activity" src="https://img.shields.io/github/commit-activity/m/ckb-devrel/ccc" />
  <img alt="GitHub last commit" src="https://img.shields.io/github/last-commit/ckb-devrel/ccc/master" />
  <img alt="GitHub branch check runs" src="https://img.shields.io/github/check-runs/ckb-devrel/ccc/master" />
  <a href="https://live.ckbccc.com/"><img
    alt="Playground" src="https://img.shields.io/website?url=https%3A%2F%2Flive.ckbccc.com%2F&label=Playground"
  /></a>
  <a href="https://app.ckbccc.com/"><img
    alt="App" src="https://img.shields.io/website?url=https%3A%2F%2Fapp.ckbccc.com%2F&label=App"
  /></a>
  <a href="https://docs.ckbccc.com/"><img
    alt="Docs" src="https://img.shields.io/website?url=https%3A%2F%2Fdocs.ckbccc.com%2F&label=Docs"
  /></a>
</p>

<p align="center">
  CCC - CKBers' Codebase is a one-stop solution for your CKB JS/TS ecosystem development.
  <br />
  Empower yourself with CCC to discover the unlimited potential of CKB.
  <br />
  Interoperate with wallets from different chain ecosystems.
  <br />
  Fully enabling CKB's Turing completeness and cryptographic freedom power.
</p>

<h3 align="center">
  Read more about CCC on <a href="https://docs.ckbccc.com">our website</a> or <a href="https://github.com/ckb-devrel/ccc">GitHub Repo</a>.
</h3>


================================================
File: packages/rei/CHANGELOG.md
================================================
# @ckb-ccc/rei

## 1.0.11

### Patch Changes

- Updated dependencies [[`28c211d`](https://github.com/ckb-devrel/ccc/commit/28c211d839a2d2305eca56e82ba7da144aa3df4a)]:
  - @ckb-ccc/core@1.5.0

## 1.0.10

### Patch Changes

- Updated dependencies [[`3fdb2c4`](https://github.com/ckb-devrel/ccc/commit/3fdb2c477d0b2766b231e436b8f396f047b02634), [`f429087`](https://github.com/ckb-devrel/ccc/commit/f4290874dfab3fe58844e5169673c5d47bda64e3)]:
  - @ckb-ccc/core@1.4.0

## 1.0.9

### Patch Changes

- Updated dependencies [[`a48cccf`](https://github.com/ckb-devrel/ccc/commit/a48cccfae3ce6b3456a5eb863f207e7e5a6e568f)]:
  - @ckb-ccc/core@1.3.1

## 1.0.8

### Patch Changes

- Updated dependencies [[`4dbf4fd`](https://github.com/ckb-devrel/ccc/commit/4dbf4fd8021cf14d05282706a7667ea7d108fb09), [`4c76f9e`](https://github.com/ckb-devrel/ccc/commit/4c76f9e2a93a226fcfc4c32a5378bb531bfff08f), [`c2c4c26`](https://github.com/ckb-devrel/ccc/commit/c2c4c264e04461948e4b913b2f22054e6032ddc8), [`b6a73fa`](https://github.com/ckb-devrel/ccc/commit/b6a73fa9628ebdff51cb8f246309654cd53e36f2), [`8c97c85`](https://github.com/ckb-devrel/ccc/commit/8c97c851db4a2d940c7e59116ca7620cfd0afae1)]:
  - @ckb-ccc/core@1.3.0

## 1.0.7

### Patch Changes

- Updated dependencies [[`01263bd`](https://github.com/ckb-devrel/ccc/commit/01263bd8c601fa8fcdfa24be52601716e1864843)]:
  - @ckb-ccc/core@1.2.3

## 1.0.6

### Patch Changes

- Updated dependencies [[`7886e3d`](https://github.com/ckb-devrel/ccc/commit/7886e3d89e9ca8f3514a2044c6dd4e8ec6b49933)]:
  - @ckb-ccc/core@1.2.2

## 1.0.5

### Patch Changes

- Updated dependencies [[`94e2618`](https://github.com/ckb-devrel/ccc/commit/94e26182515e09d6086ec5b653d091f117a499e6)]:
  - @ckb-ccc/core@1.2.1

## 1.0.4

### Patch Changes

- Updated dependencies [[`128e87b`](https://github.com/ckb-devrel/ccc/commit/128e87b5ca3e97bfe7842e76f786aa6aec010797)]:
  - @ckb-ccc/core@1.2.0

## 1.0.3

### Patch Changes

- Updated dependencies [[`925991c`](https://github.com/ckb-devrel/ccc/commit/925991c8a24b1f34667e30b28b69812e936e3928)]:
  - @ckb-ccc/core@1.1.1

## 1.0.2

### Patch Changes

- Updated dependencies [[`ddc0a28`](https://github.com/ckb-devrel/ccc/commit/ddc0a281c3d1dfa6ebc990dae92994f026dfddcc)]:
  - @ckb-ccc/core@1.1.0

## 1.0.1

### Patch Changes

- Updated dependencies [[`719055b`](https://github.com/ckb-devrel/ccc/commit/719055b404f31b40362f51714b9f11c85b857581), [`94caaca`](https://github.com/ckb-devrel/ccc/commit/94caaca11c63752a25282d42f51161c94397dec6)]:
  - @ckb-ccc/core@1.0.1

## 1.0.0

### Major Changes

- [#107](https://github.com/ckb-devrel/ccc/pull/107) [`b99f55f`](https://github.com/ckb-devrel/ccc/commit/b99f55f74e64106391ce53f7d0bd0fa7522023cc) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: molecule

### Patch Changes

- Updated dependencies [[`b99f55f`](https://github.com/ckb-devrel/ccc/commit/b99f55f74e64106391ce53f7d0bd0fa7522023cc)]:
  - @ckb-ccc/core@1.0.0

## 0.0.18

### Patch Changes

- Updated dependencies [[`c1cb910`](https://github.com/ckb-devrel/ccc/commit/c1cb91091780c7b33fbbd683ef8edc9f11452ecd)]:
  - @ckb-ccc/core@0.1.2

## 0.0.17

### Patch Changes

- [#101](https://github.com/ckb-devrel/ccc/pull/101) [`d9affcc`](https://github.com/ckb-devrel/ccc/commit/d9affcc01c7b839b227e4d79bcb66e717577502a) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix: commonjs

- Updated dependencies [[`d9affcc`](https://github.com/ckb-devrel/ccc/commit/d9affcc01c7b839b227e4d79bcb66e717577502a)]:
  - @ckb-ccc/core@0.1.1

## 0.0.16

### Patch Changes

- [#70](https://github.com/ckb-devrel/ccc/pull/70) [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): websocket transport

- Updated dependencies [[`a3d5359`](https://github.com/ckb-devrel/ccc/commit/a3d53595f6dd11f2f59cdf0086b3d7ce558a2fdd), [`8824ff2`](https://github.com/ckb-devrel/ccc/commit/8824ff27af3b76186f1a7d6db8c907cd66f09d6a), [`f07a506`](https://github.com/ckb-devrel/ccc/commit/f07a506bd6fc27fe659a17d2f7baaeec54716d81), [`f21d7e4`](https://github.com/ckb-devrel/ccc/commit/f21d7e4cf422edab4a836ef6d678b620594fef8d), [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366), [`1720d5a`](https://github.com/ckb-devrel/ccc/commit/1720d5a398543f1c6e24763eeaf15d84cd2214bf), [`e63a06e`](https://github.com/ckb-devrel/ccc/commit/e63a06ee75ac8595208d216dec88a4228c465e23), [`c092988`](https://github.com/ckb-devrel/ccc/commit/c092988e7765b9ac79498d6bd72a6a2f62859b6f), [`50f2ce0`](https://github.com/ckb-devrel/ccc/commit/50f2ce08e74cb3fbeae926267d42e28b426fd7f4), [`4709384`](https://github.com/ckb-devrel/ccc/commit/4709384e37188991cb937b16f99f47ca82c912b8)]:
  - @ckb-ccc/core@0.1.0

## 0.0.16-alpha.7

### Patch Changes

- Updated dependencies [[`f07a506`](https://github.com/ckb-devrel/ccc/commit/f07a506bd6fc27fe659a17d2f7baaeec54716d81)]:
  - @ckb-ccc/core@0.1.0-alpha.7

## 0.0.16-alpha.6

### Patch Changes

- Updated dependencies [[`4709384`](https://github.com/ckb-devrel/ccc/commit/4709384e37188991cb937b16f99f47ca82c912b8)]:
  - @ckb-ccc/core@0.1.0-alpha.6

## 0.0.16-alpha.5

### Patch Changes

- Updated dependencies [[`50f2ce0`](https://github.com/ckb-devrel/ccc/commit/50f2ce08e74cb3fbeae926267d42e28b426fd7f4)]:
  - @ckb-ccc/core@0.1.0-alpha.5

## 0.0.16-alpha.4

### Patch Changes

- Updated dependencies [[`f21d7e4`](https://github.com/ckb-devrel/ccc/commit/f21d7e4cf422edab4a836ef6d678b620594fef8d)]:
  - @ckb-ccc/core@0.1.0-alpha.4

## 0.0.16-alpha.3

### Patch Changes

- Updated dependencies [[`a3d5359`](https://github.com/ckb-devrel/ccc/commit/a3d53595f6dd11f2f59cdf0086b3d7ce558a2fdd)]:
  - @ckb-ccc/core@0.0.16-alpha.3

## 0.0.16-alpha.2

### Patch Changes

- [#70](https://github.com/ckb-devrel/ccc/pull/70) [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): websocket transport

- Updated dependencies [[`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366)]:
  - @ckb-ccc/core@0.0.16-alpha.2

## 0.0.16-alpha.1

### Patch Changes

- Updated dependencies [[`8824ff2`](https://github.com/ckb-devrel/ccc/commit/8824ff27af3b76186f1a7d6db8c907cd66f09d6a), [`c092988`](https://github.com/ckb-devrel/ccc/commit/c092988e7765b9ac79498d6bd72a6a2f62859b6f)]:
  - @ckb-ccc/core@0.0.16-alpha.1

## 0.0.16-alpha.0

### Patch Changes

- Updated dependencies [[`1720d5a`](https://github.com/ckb-devrel/ccc/commit/1720d5a398543f1c6e24763eeaf15d84cd2214bf)]:
  - @ckb-ccc/core@0.0.16-alpha.0

## 0.0.15

### Patch Changes

- Updated dependencies [[`8f2560a`](https://github.com/ckb-devrel/ccc/commit/8f2560ab0e5619654fff7c5eacda8425385f908e)]:
  - @ckb-ccc/core@0.0.15

## 0.0.14

### Patch Changes

- Updated dependencies [[`5e942f8`](https://github.com/ckb-devrel/ccc/commit/5e942f8f1ed678abdb7ab9716f5449f0714cea53), [`f5b5938`](https://github.com/ckb-devrel/ccc/commit/f5b5938ab8f9c0a338dfd6765fe717f7ad1b1dd8), [`f13f4d3`](https://github.com/ckb-devrel/ccc/commit/f13f4d319ca66b571029a65e945e3a038bfeea25), [`7ba62a0`](https://github.com/ckb-devrel/ccc/commit/7ba62a056f17808fe5684786c00c2dff80bb7d1d), [`2164efd`](https://github.com/ckb-devrel/ccc/commit/2164efd6d834c1917ad5f4a514dc25941f937185), [`e5bd2ad`](https://github.com/ckb-devrel/ccc/commit/e5bd2ad5de4b42a22c422ecfc42056750f69b88b), [`aae3e06`](https://github.com/ckb-devrel/ccc/commit/aae3e0679fb940dd8c12ac9be12a4b53277a339d)]:
  - @ckb-ccc/core@0.0.14

## 0.0.14-alpha.2

### Patch Changes

- Updated dependencies [[`7ba62a0`](https://github.com/ckb-devrel/ccc/commit/7ba62a056f17808fe5684786c00c2dff80bb7d1d)]:
  - @ckb-ccc/core@0.0.14-alpha.2

## 0.0.14-alpha.1

### Patch Changes

- Updated dependencies [[`5e942f8`](https://github.com/ckb-devrel/ccc/commit/5e942f8f1ed678abdb7ab9716f5449f0714cea53), [`e5bd2ad`](https://github.com/ckb-devrel/ccc/commit/e5bd2ad5de4b42a22c422ecfc42056750f69b88b), [`aae3e06`](https://github.com/ckb-devrel/ccc/commit/aae3e0679fb940dd8c12ac9be12a4b53277a339d)]:
  - @ckb-ccc/core@0.0.14-alpha.1

## 0.0.14-alpha.0

### Patch Changes

- Updated dependencies [[`f5b5938`](https://github.com/ckb-devrel/ccc/commit/f5b5938ab8f9c0a338dfd6765fe717f7ad1b1dd8), [`2164efd`](https://github.com/ckb-devrel/ccc/commit/2164efd6d834c1917ad5f4a514dc25941f937185)]:
  - @ckb-ccc/core@0.0.14-alpha.0

## 0.0.13

### Patch Changes

- [`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): recordCells should not add usableCells

- [`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): node.js websocket

- [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): completeInputs

- [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): more APIs. Since parsing.

- [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Signer.findCells

- Updated dependencies [[`3378e85`](https://github.com/ckb-devrel/ccc/commit/3378e85b32797f5cdc1943b9ecaca1fd1d9fad5e), [`8629449`](https://github.com/ckb-devrel/ccc/commit/86294490e76fc2a1cee20f827883e02fceca6e8b), [`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97), [`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f), [`69c10fd`](https://github.com/ckb-devrel/ccc/commit/69c10fdfcd507433c13b15d17015dca4687afb97), [`600cc13`](https://github.com/ckb-devrel/ccc/commit/600cc137ac6eb7c5b2533670de6df29d82f1b9e1), [`642f731`](https://github.com/ckb-devrel/ccc/commit/642f7317f4951ef801f1245aea96c40b4b6fb73e), [`96dbb61`](https://github.com/ckb-devrel/ccc/commit/96dbb6107d2071b9383350ddd578557746227054), [`0462a4e`](https://github.com/ckb-devrel/ccc/commit/0462a4ee101926f0da857173626dc4ab879e3b56), [`52156f9`](https://github.com/ckb-devrel/ccc/commit/52156f9df9cae9e0b71b77b49cda0e4d73e76142), [`63606db`](https://github.com/ckb-devrel/ccc/commit/63606db908f95bfc857430083932144d1ef4deef), [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b), [`1043c2b`](https://github.com/ckb-devrel/ccc/commit/1043c2bc211ec283b88dba3b81feef98e4185c0e), [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11), [`1f999f8`](https://github.com/ckb-devrel/ccc/commit/1f999f854beb255b3cd9dbbc5a7268e75442b3db), [`a69a9dc`](https://github.com/ckb-devrel/ccc/commit/a69a9dc0c722f7b4cfa36b2ae8ecba4dcde0db90), [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895)]:
  - @ckb-ccc/core@0.0.13

## 0.0.13-alpha.8

### Patch Changes

- Updated dependencies [[`8629449`](https://github.com/ckb-devrel/ccc/commit/86294490e76fc2a1cee20f827883e02fceca6e8b), [`52156f9`](https://github.com/ckb-devrel/ccc/commit/52156f9df9cae9e0b71b77b49cda0e4d73e76142), [`63606db`](https://github.com/ckb-devrel/ccc/commit/63606db908f95bfc857430083932144d1ef4deef)]:
  - @ckb-ccc/core@0.0.13-alpha.8

## 0.0.13-alpha.7

### Patch Changes

- [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): more APIs. Since parsing.

- [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Signer.findCells

- Updated dependencies [[`1043c2b`](https://github.com/ckb-devrel/ccc/commit/1043c2bc211ec283b88dba3b81feef98e4185c0e), [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11), [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895)]:
  - @ckb-ccc/core@0.0.13-alpha.7

## 0.0.13-alpha.6

### Patch Changes

- [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): completeInputs

- Updated dependencies [[`69c10fd`](https://github.com/ckb-devrel/ccc/commit/69c10fdfcd507433c13b15d17015dca4687afb97), [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b)]:
  - @ckb-ccc/core@0.0.13-alpha.6

## 0.0.13-alpha.5

### Patch Changes

- [`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): recordCells should not add usableCells

- Updated dependencies [[`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97)]:
  - @ckb-ccc/core@0.0.13-alpha.5

## 0.0.13-alpha.4

### Patch Changes

- [`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): node.js websocket

- Updated dependencies [[`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f), [`642f731`](https://github.com/ckb-devrel/ccc/commit/642f7317f4951ef801f1245aea96c40b4b6fb73e)]:
  - @ckb-ccc/core@0.0.13-alpha.4

## 0.0.13-alpha.3

### Patch Changes

- Updated dependencies [[`1f999f8`](https://github.com/ckb-devrel/ccc/commit/1f999f854beb255b3cd9dbbc5a7268e75442b3db)]:
  - @ckb-ccc/core@0.0.13-alpha.3

## 0.0.13-alpha.2

### Patch Changes

- Updated dependencies [[`96dbb61`](https://github.com/ckb-devrel/ccc/commit/96dbb6107d2071b9383350ddd578557746227054)]:
  - @ckb-ccc/core@0.0.13-alpha.2

## 0.0.13-alpha.1

### Patch Changes

- Updated dependencies [[`3378e85`](https://github.com/ckb-devrel/ccc/commit/3378e85b32797f5cdc1943b9ecaca1fd1d9fad5e), [`a69a9dc`](https://github.com/ckb-devrel/ccc/commit/a69a9dc0c722f7b4cfa36b2ae8ecba4dcde0db90)]:
  - @ckb-ccc/core@0.0.13-alpha.1

## 0.0.13-alpha.0

### Patch Changes

- Updated dependencies [[`600cc13`](https://github.com/ckb-devrel/ccc/commit/600cc137ac6eb7c5b2533670de6df29d82f1b9e1)]:
  - @ckb-ccc/core@0.0.13-alpha.0

## 0.0.12

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/core@0.0.12


================================================
File: packages/rei/eslint.config.mjs
================================================
// @ts-check

import eslint from "@eslint/js";
import eslintPluginPrettierRecommended from "eslint-plugin-prettier/recommended";
import tseslint from "typescript-eslint";

import { dirname } from "path";
import { fileURLToPath } from "url";

export default [
  ...tseslint.config({
    files: ["**/*.ts"],
    extends: [
      eslint.configs.recommended,
      ...tseslint.configs.recommendedTypeChecked,
    ],
    rules: {
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          args: "all",
          argsIgnorePattern: "^_",
          caughtErrors: "all",
          caughtErrorsIgnorePattern: "^_",
          destructuredArrayIgnorePattern: "^_",
          varsIgnorePattern: "^_",
          ignoreRestSiblings: true,
        },
      ],
      "@typescript-eslint/unbound-method": ["error", { ignoreStatic: true }],
      "@typescript-eslint/no-unsafe-member-access": "off",
      "@typescript-eslint/require-await": "off",
      "no-empty": "off",
      "prefer-const": [
        "error",
        { ignoreReadBeforeAssign: true, destructuring: "all" },
      ],
    },
    languageOptions: {
      parserOptions: {
        project: true,
        tsconfigRootDir: dirname(fileURLToPath(import.meta.url)),
      },
    },
  }),
  eslintPluginPrettierRecommended,
];


================================================
File: packages/rei/package.json
================================================
{
  "name": "@ckb-ccc/rei",
  "version": "1.0.11",
  "description": "CCC - CKBer's Codebase. Common Chains Connector's support for Rei",
  "license": "MIT",
  "private": false,
  "homepage": "https://github.com/ckb-devrel/ccc",
  "repository": {
    "type": "git",
    "url": "git://github.com/ckb-devrel/ccc.git"
  },
  "sideEffects": false,
  "main": "dist.commonjs/index.js",
  "module": "dist/index.js",
  "exports": {
    ".": {
      "import": "./dist/index.js",
      "require": "./dist.commonjs/index.js",
      "default": "./dist.commonjs/index.js"
    },
    "./barrel": {
      "import": "./dist/barrel.js",
      "require": "./dist.commonjs/barrel.js",
      "default": "./dist.commonjs/barrel.js"
    },
    "./advanced": {
      "import": "./dist/advanced.js",
      "require": "./dist.commonjs/advanced.js",
      "default": "./dist.commonjs/advanced.js"
    },
    "./advancedBarrel": {
      "import": "./dist/advancedBarrel.js",
      "require": "./dist.commonjs/advancedBarrel.js",
      "default": "./dist.commonjs/advancedBarrel.js"
    }
  },
  "scripts": {
    "build": "rimraf ./dist && rimraf ./dist.commonjs && tsc && tsc --project tsconfig.commonjs.json && copyfiles -u 2 misc/basedirs/**/* .",
    "lint": "eslint ./src",
    "format": "prettier --write . && eslint --fix ./src"
  },
  "devDependencies": {
    "@eslint/js": "^9.1.1",
    "copyfiles": "^2.4.1",
    "eslint": "^9.1.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.1.3",
    "prettier": "^3.2.5",
    "prettier-plugin-organize-imports": "^3.2.4",
    "rimraf": "^5.0.5",
    "typescript": "^5.4.5",
    "typescript-eslint": "^7.7.0"
  },
  "publishConfig": {
    "access": "public"
  },
  "dependencies": {
    "@ckb-ccc/core": "workspace:*"
  }
}


================================================
File: packages/rei/tsconfig.base.json
================================================
{
  "compilerOptions": {
    "target": "es2020",
    "incremental": true,
    "allowJs": true,
    "importHelpers": false,
    "declaration": true,
    "declarationMap": true,
    "experimentalDecorators": true,
    "useDefineForClassFields": false,
    "esModuleInterop": true,
    "strict": true,
    "noImplicitAny": true,
    "strictBindCallApply": true,
    "strictNullChecks": true,
    "alwaysStrict": true,
    "noFallthroughCasesInSwitch": true,
    "forceConsistentCasingInFileNames": true,
    "skipLibCheck": true
  },
  "include": ["src/**/*"]
}


================================================
File: packages/rei/tsconfig.commonjs.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "NodeNext",
    "moduleResolution": "NodeNext",
    "outDir": "./dist.commonjs"
  }
}


================================================
File: packages/rei/tsconfig.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "ESNext",
    "moduleResolution": "Bundler",
    "outDir": "./dist",
  }
}


================================================
File: packages/rei/typedoc.json
================================================
{
  "$schema": "https://typedoc.org/schema.json",
  "entryPoints": ["./src/index.ts", "./src/advanced.ts"],
  "extends": ["../../typedoc.base.json"],
  "name": "@ckb-ccc rei"
}


================================================
File: packages/rei/.npmignore
================================================
node_modules/
misc/

*test.js
*test.ts
*test.d.ts
*test.d.ts.map
*spec.js
*spec.ts
*spec.d.ts
*spec.d.ts.map

tsconfig.json
tsconfig.*.json
eslint.config.mjs
.prettierrc
.prettierignore

tsconfig.tsbuildinfo
tsconfig.*.tsbuildinfo
.github/


================================================
File: packages/rei/.prettierignore
================================================
node_modules/

dist/
dist.commonjs/

.npmignore
.prettierrc
tsconfig.json
eslint.config.mjs
.prettierrc

tsconfig.tsbuildinfo
.github/


================================================
File: packages/rei/.prettierrc
================================================
{
  "singleQuote": false,
  "trailingComma": "all",
  "plugins": ["prettier-plugin-organize-imports"]
}


================================================
File: packages/rei/misc/basedirs/dist/package.json
================================================
{
  "type": "module"
}

================================================
File: packages/rei/misc/basedirs/dist.commonjs/package.json
================================================
{
  "type": "commonjs"
}


================================================
File: packages/rei/src/advanced.ts
================================================
export * as ReiA from "./advancedBarrel.js";


================================================
File: packages/rei/src/advancedBarrel.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { cccA } from "@ckb-ccc/core/advanced";

/**
 * Interface representing a provider for interacting with accounts and signing messages.
 * @interface
 */
export interface Provider {
  /**
   * Sends a request to the provider.
   * @type {RequestMethod}
   */
  request: RequestMethod;

  /**
   * Adds an event listener to the provider.
   * @type {OnMethod}
   */
  on: OnMethod;

  /**
   * Checks if rei wallet is connected.
   * @returns A promise that resolves to true if connected, false otherwise.
   */
  isConnected(): Promise<boolean>;

  /**
   * Removes an event listener from the provider.
   * @param {string} eventName - The name of the event to remove the listener from.
   * @param {(...args: unknown[]) => unknown} listener - The listener function to remove.
   * @returns {Provider} The provider instance.
   */
  off(eventName: string, listener: (...args: unknown[]) => unknown): void;
}

/**
 * Interface representing a method to add event listeners to the provider.
 * @interface
 */
export interface OnMethod {
  /**
   * Adds an event listener to the provider.
   * @param {string} eventName - The name of the event.
   * @param {(...args: unknown[]) => unknown} listener - The listener function.
   * @returns {Provider} The provider instance.
   */
  (eventName: string, listener: (...args: unknown[]) => unknown): void;
}

export interface RequestMethod {
  /**
   * Requests the accounts from the provider.
   * @param request - The request object.
   * @param request.method - The method name.
   * @param request.data - The optional method parameters.
   * @returns A promise that resolves to an array of account addresses.
   */
  (request: {
    method: "ckb_requestAccounts";
    data?: undefined;
  }): Promise<string>;

  /**
   * Signs a message with the personal account.
   * @param request - The request object.
   * @param request.method - The method name.
   * @param request.data - The method parameters.
   * @returns A promise that resolves to the signed message.
   */
  (request: {
    method: "ckb_signMessage";
    data: { message: string };
  }): Promise<ccc.Hex>;

  /**
   * Gets the identity of the signer.
   * @param request - The request object.
   * @param request.method - The method name.
   * @returns A promise that resolves to the signed message.
   */
  (request: { method: "ckb_getPublicKey" }): Promise<string>;

  /**
   * Get network.
   * @param request - The request object.
   * @param request.method - The method name.
   * @param request.data - The method parameters.
   * @returns A promise that resolves to the signed message.
   */
  (request: {
    method: "ckb_switchNetwork";
    data: string;
  }): Promise<{ type: string; network: string }>;

  /**
   * Signs transaction .
   * @param request - The request object.
   * @param request.method - The method name.
   * @param request.data - The method parameters.
   * @returns A promise that resolves to the signed message.
   */

  (request: {
    method: "ckb_signTransaction";
    data: { txSkeleton: cccA.JsonRpcTransaction };
  }): Promise<ccc.Transaction>;
}


================================================
File: packages/rei/src/barrel.ts
================================================
export * from "./signer.js";
export * from "./signersFactory.js";


================================================
File: packages/rei/src/index.ts
================================================
export * as Rei from "./barrel.js";


================================================
File: packages/rei/src/signer.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { cccA } from "@ckb-ccc/core/advanced";

import { Provider } from "./advancedBarrel.js";

/**
 * Class representing a CKB signer that extends Signer from @ckb-ccc/core.
 * @public
 */
export class ReiSigner extends ccc.Signer {
  /**
   * Creates an instance of Signer.
   * @param client - The client instance.
   * @param provider - The provider instance.
   */
  constructor(
    client: ccc.Client,
    public readonly provider: Provider,
  ) {
    super(client);
  }

  /**
   * Register a listener to be called when this signer is replaced.
   *
   * @returns A function for unregister
   */

  onReplaced(listener: () => void): () => void {
    const stop: (() => void)[] = [];
    const replacer = async () => {
      listener();
      stop[0]?.();
    };
    stop.push(() => {
      this.provider.off("accountsChanged", replacer);
      this.provider.off("chainChanged", replacer);
    });
    this.provider.on("accountsChanged", replacer);
    this.provider.on("chainChanged", replacer);

    return stop[0];
  }

  /**
   * Gets the signer type.
   * @returns The type of the signer.
   */
  get type(): ccc.SignerType {
    return ccc.SignerType.CKB;
  }

  /**
   * Gets the sign type.
   * @returns The sign type.
   */
  get signType(): ccc.SignerSignType {
    return ccc.SignerSignType.CkbSecp256k1;
  }

  /**
   * Connects to the provider by requesting authentication.
   * @returns A promise that resolves when the connection is established.
   */
  async connect(): Promise<void> {
    const prefixClient = this.client.addressPrefix;
    const netChange = await this._getNetworkChanged();
    if (netChange) {
      const data = prefixClient === "ckb" ? "mainnet" : "testnet";
      await this.provider.request({ method: "ckb_switchNetwork", data });
    }
  }

  /**
   * Checks if the signer is connected.
   * @returns A promise that resolves to true if connected, false otherwise.
   */
  async isConnected(): Promise<boolean> {
    const connected = await this.provider.isConnected();
    if (!connected || (await this._getNetworkChanged())) {
      return false;
    }
    return connected;
  }

  async _getNetworkChanged(): Promise<boolean> {
    const prefixClient = this.client.addressPrefix;

    const address = await this.getInternalAddress();
    const { prefix } = cccA.addressPayloadFromString(address);
    return prefixClient !== prefix;
  }

  /**
   * Gets the internal address.
   * @returns A promise that resolves to the internal address.
   */
  async getInternalAddress(): Promise<string> {
    return this.provider.request({ method: "ckb_requestAccounts" });
  }

  /**
   * Gets the address object.
   * @returns A promise that resolves to the address object.
   */
  async getAddressObj(): Promise<ccc.Address> {
    return ccc.Address.fromString(await this.getInternalAddress(), this.client);
  }

  /**
   * Gets the address objects.
   * @returns A promise that resolves to an array of address objects.
   */
  async getAddressObjs(): Promise<ccc.Address[]> {
    return [await this.getAddressObj()];
  }

  /**
   * Gets the identity of the signer.
   * @returns A promise that resolves to the identity.
   */
  async getIdentity(): Promise<string> {
    return this.provider.request({
      method: "ckb_getPublicKey",
    });
  }

  /**
   * Signs a raw message with the personal account.
   * @param message - The message to sign.
   * @returns A promise that resolves to the signed message.
   */
  async signMessageRaw(message: string): Promise<ccc.Hex> {
    return this.provider.request({
      method: "ckb_signMessage",
      data: { message },
    });
  }

  /**
   * prepare a transaction before signing.
   *
   * @param txLike - The transaction to prepare, represented as a TransactionLike object.
   * @returns A promise that resolves to the prepared Transaction object.
   */

  async prepareTransaction(
    txLike: ccc.TransactionLike,
  ): Promise<ccc.Transaction> {
    const tx = ccc.Transaction.from(txLike);
    await tx.addCellDepsOfKnownScripts(
      this.client,
      ccc.KnownScript.Secp256k1Blake160,
    );
    return ccc.reduceAsync(
      await this.getAddressObjs(),
      (tx: ccc.Transaction, { script }) =>
        tx.prepareSighashAllWitness(script, 65, this.client),
      tx,
    );
  }

  /**
   * Signs a transaction without preparing information for it.
   *
   * @param txLike - The transaction to sign, represented as a TransactionLike object.
   * @returns A promise that resolves to the signed Transaction object.
   */

  async signOnlyTransaction(
    txLike: ccc.TransactionLike,
  ): Promise<ccc.Transaction> {
    const txFormat = cccA.JsonRpcTransformers.transactionFrom(txLike);

    return this.provider.request({
      method: "ckb_signTransaction",
      data: { txSkeleton: txFormat },
    });
  }
}


================================================
File: packages/rei/src/signersFactory.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { Provider } from "./advancedBarrel.js";
import { ReiSigner } from "./signer.js";

/**
 * Retrieves the Rei signer if available.
 * @param {ccc.Client} client - The client instance.
 * @returns {Signer | undefined} The Signer instance if the Rei provider is available, otherwise undefined.

 */
export function getReiSigners(client: ccc.Client): ccc.SignerInfo[] {
  const windowRef = window as { rei?: { ckb: Provider } };

  if (typeof windowRef?.rei?.ckb === "undefined") {
    return [];
  }
  return [
    {
      signer: new ReiSigner(client, windowRef.rei.ckb),
      name: "CKB",
    },
  ];
}


================================================
File: packages/shell/README.md
================================================
<p align="center">
  <a href="https://app.ckbccc.com/">
    <img alt="Logo" src="https://raw.githubusercontent.com/ckb-devrel/ccc/master/assets/logoAndText.svg" style="height: 8rem; max-width: 90%; padding: 0.5rem 0;" />
  </a>
</p>

<h1 align="center" style="font-size: 64px;">
  CCC Shell
</h1>

<p align="center">
  <a href="https://www.npmjs.com/package/@ckb-ccc/shell"><img
    alt="NPM Version" src="https://img.shields.io/npm/v/%40ckb-ccc%2Fshell"
  /></a>
  <img alt="GitHub commit activity" src="https://img.shields.io/github/commit-activity/m/ckb-devrel/ccc" />
  <img alt="GitHub last commit" src="https://img.shields.io/github/last-commit/ckb-devrel/ccc/master" />
  <img alt="GitHub branch check runs" src="https://img.shields.io/github/check-runs/ckb-devrel/ccc/master" />
  <a href="https://live.ckbccc.com/"><img
    alt="Playground" src="https://img.shields.io/website?url=https%3A%2F%2Flive.ckbccc.com%2F&label=Playground"
  /></a>
  <a href="https://app.ckbccc.com/"><img
    alt="App" src="https://img.shields.io/website?url=https%3A%2F%2Fapp.ckbccc.com%2F&label=App"
  /></a>
  <a href="https://docs.ckbccc.com/"><img
    alt="Docs" src="https://img.shields.io/website?url=https%3A%2F%2Fdocs.ckbccc.com%2F&label=Docs"
  /></a>
</p>

<p align="center">
  CCC - CKBers' Codebase is a one-stop solution for your CKB JS/TS ecosystem development. 
  <br />
  Empower yourself with CCC to discover the unlimited potential of CKB.
  <br />
  Interoperate with wallets from different chain ecosystems.
  <br />
  Fully enabling CKB's Turing completeness and cryptographic freedom power.
</p>

<h3 align="center">
  Read more about CCC on <a href="https://docs.ckbccc.com">our website</a> or <a href="https://github.com/ckb-devrel/ccc">GitHub Repo</a>.
</h3>


================================================
File: packages/shell/CHANGELOG.md
================================================
# @ckb-ccc/shell

## 1.1.3

### Patch Changes

- Updated dependencies [[`28c211d`](https://github.com/ckb-devrel/ccc/commit/28c211d839a2d2305eca56e82ba7da144aa3df4a)]:
  - @ckb-ccc/core@1.5.0
  - @ckb-ccc/spore@1.2.1
  - @ckb-ccc/ssri@0.2.1
  - @ckb-ccc/udt@0.1.3

## 1.1.2

### Patch Changes

- Updated dependencies [[`a1d5626`](https://github.com/ckb-devrel/ccc/commit/a1d56266da68602495054ad6b627b998ef27f04d), [`3fdb2c4`](https://github.com/ckb-devrel/ccc/commit/3fdb2c477d0b2766b231e436b8f396f047b02634), [`52ef11b`](https://github.com/ckb-devrel/ccc/commit/52ef11baa7bde8a73467683f5c44a863190aa1f1), [`f429087`](https://github.com/ckb-devrel/ccc/commit/f4290874dfab3fe58844e5169673c5d47bda64e3), [`e4ea183`](https://github.com/ckb-devrel/ccc/commit/e4ea18359675877511550ac0b28f207550f907e4)]:
  - @ckb-ccc/spore@1.2.0
  - @ckb-ccc/core@1.4.0
  - @ckb-ccc/ssri@0.2.0
  - @ckb-ccc/udt@0.1.2

## 1.1.1

### Patch Changes

- Updated dependencies [[`ecb9059`](https://github.com/ckb-devrel/ccc/commit/ecb9059e54f8a2afacda45e58a961532bf1107a1), [`a48cccf`](https://github.com/ckb-devrel/ccc/commit/a48cccfae3ce6b3456a5eb863f207e7e5a6e568f), [`5d4517e`](https://github.com/ckb-devrel/ccc/commit/5d4517e049b541b2a695db7821c4cfc2218678e0), [`092c0a9`](https://github.com/ckb-devrel/ccc/commit/092c0a9e30ece8a8767fa59d23707833dce015eb)]:
  - @ckb-ccc/ssri@0.1.1
  - @ckb-ccc/core@1.3.1
  - @ckb-ccc/spore@1.1.1
  - @ckb-ccc/udt@0.1.1

## 1.1.0

### Minor Changes

- [#130](https://github.com/ckb-devrel/ccc/pull/130) [`8c97c85`](https://github.com/ckb-devrel/ccc/commit/8c97c851db4a2d940c7e59116ca7620cfd0afae1) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: export backend packages in @ckb-ccc/shell

### Patch Changes

- Updated dependencies [[`8c97c85`](https://github.com/ckb-devrel/ccc/commit/8c97c851db4a2d940c7e59116ca7620cfd0afae1), [`4dbf4fd`](https://github.com/ckb-devrel/ccc/commit/4dbf4fd8021cf14d05282706a7667ea7d108fb09), [`4c76f9e`](https://github.com/ckb-devrel/ccc/commit/4c76f9e2a93a226fcfc4c32a5378bb531bfff08f), [`c2c4c26`](https://github.com/ckb-devrel/ccc/commit/c2c4c264e04461948e4b913b2f22054e6032ddc8), [`b6a73fa`](https://github.com/ckb-devrel/ccc/commit/b6a73fa9628ebdff51cb8f246309654cd53e36f2), [`8c97c85`](https://github.com/ckb-devrel/ccc/commit/8c97c851db4a2d940c7e59116ca7620cfd0afae1)]:
  - @ckb-ccc/spore@1.1.0
  - @ckb-ccc/core@1.3.0
  - @ckb-ccc/ssri@0.1.0
  - @ckb-ccc/udt@0.1.0


================================================
File: packages/shell/eslint.config.mjs
================================================
// @ts-check

import eslint from "@eslint/js";
import eslintPluginPrettierRecommended from "eslint-plugin-prettier/recommended";
import tseslint from "typescript-eslint";

import { dirname } from "path";
import { fileURLToPath } from "url";

export default [
  ...tseslint.config({
    files: ["**/*.ts"],
    extends: [
      eslint.configs.recommended,
      ...tseslint.configs.recommendedTypeChecked,
    ],
    rules: {
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          args: "all",
          argsIgnorePattern: "^_",
          caughtErrors: "all",
          caughtErrorsIgnorePattern: "^_",
          destructuredArrayIgnorePattern: "^_",
          varsIgnorePattern: "^_",
          ignoreRestSiblings: true,
        },
      ],
      "@typescript-eslint/unbound-method": ["error", { ignoreStatic: true }],
      "@typescript-eslint/no-unsafe-member-access": "off",
      "@typescript-eslint/require-await": "off",
      "no-empty": "off",
      "prefer-const": [
        "error",
        { ignoreReadBeforeAssign: true, destructuring: "all" },
      ],
    },
    languageOptions: {
      parserOptions: {
        project: true,
        tsconfigRootDir: dirname(fileURLToPath(import.meta.url)),
      },
    },
  }),
  eslintPluginPrettierRecommended,
];


================================================
File: packages/shell/package.json
================================================
{
  "name": "@ckb-ccc/shell",
  "version": "1.1.3",
  "description": "Backend Shell of CCC - CKBer's Codebase. Common Chains Connector.",
  "author": "Hanssen0 <hanssen0@hanssen0.com>",
  "license": "MIT",
  "private": false,
  "homepage": "https://github.com/ckb-devrel/ccc",
  "repository": {
    "type": "git",
    "url": "git://github.com/ckb-devrel/ccc.git"
  },
  "sideEffects": false,
  "main": "dist.commonjs/index.js",
  "module": "dist/index.js",
  "exports": {
    ".": {
      "import": "./dist/index.js",
      "require": "./dist.commonjs/index.js",
      "default": "./dist.commonjs/index.js"
    },
    "./barrel": {
      "import": "./dist/barrel.js",
      "require": "./dist.commonjs/barrel.js",
      "default": "./dist.commonjs/barrel.js"
    },
    "./advancedBarrel": {
      "import": "./dist/advancedBarrel.js",
      "require": "./dist.commonjs/advancedBarrel.js",
      "default": "./dist.commonjs/advancedBarrel.js"
    },
    "./advanced": {
      "import": "./dist/advanced.js",
      "require": "./dist.commonjs/advanced.js",
      "default": "./dist.commonjs/advanced.js"
    }
  },
  "scripts": {
    "build": "rimraf ./dist && rimraf ./dist.commonjs && tsc && tsc --project tsconfig.commonjs.json && copyfiles -u 2 misc/basedirs/**/* .",
    "lint": "eslint ./src",
    "format": "prettier --write . && eslint --fix ./src"
  },
  "devDependencies": {
    "@eslint/js": "^9.1.1",
    "copyfiles": "^2.4.1",
    "eslint": "^9.1.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.1.3",
    "prettier": "^3.2.5",
    "prettier-plugin-organize-imports": "^3.2.4",
    "rimraf": "^5.0.5",
    "typescript": "^5.4.5",
    "typescript-eslint": "^7.7.0"
  },
  "publishConfig": {
    "access": "public"
  },
  "dependencies": {
    "@ckb-ccc/core": "workspace:*",
    "@ckb-ccc/spore": "workspace:*",
    "@ckb-ccc/udt": "workspace:*",
    "@ckb-ccc/ssri": "workspace:*"
  }
}


================================================
File: packages/shell/tsconfig.base.json
================================================
{
  "compilerOptions": {
    "target": "es2020",
    "incremental": true,
    "allowJs": true,
    "importHelpers": false,
    "declaration": true,
    "declarationMap": true,
    "experimentalDecorators": true,
    "useDefineForClassFields": false,
    "esModuleInterop": true,
    "strict": true,
    "noImplicitAny": true,
    "strictBindCallApply": true,
    "strictNullChecks": true,
    "alwaysStrict": true,
    "noFallthroughCasesInSwitch": true,
    "forceConsistentCasingInFileNames": true,
    "skipLibCheck": true
  },
  "include": ["src/**/*"]
}


================================================
File: packages/shell/tsconfig.commonjs.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "NodeNext",
    "moduleResolution": "NodeNext",
    "outDir": "./dist.commonjs"
  }
}


================================================
File: packages/shell/tsconfig.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "ESNext",
    "moduleResolution": "Bundler",
    "outDir": "./dist",
  }
}


================================================
File: packages/shell/typedoc.json
================================================
{
  "$schema": "https://typedoc.org/schema.json",
  "entryPoints": ["./src/index.ts", "./src/advanced.ts"],
  "extends": ["../../typedoc.base.json"],
  "name": "@ckb-ccc shell"
}


================================================
File: packages/shell/.npmignore
================================================
node_modules/
misc/

*test.js
*test.ts
*test.d.ts
*test.d.ts.map
*spec.js
*spec.ts
*spec.d.ts
*spec.d.ts.map

tsconfig.json
tsconfig.*.json
eslint.config.mjs
.prettierrc
.prettierignore

tsconfig.tsbuildinfo
tsconfig.*.tsbuildinfo
.github/


================================================
File: packages/shell/.prettierignore
================================================
node_modules/

dist/
dist.commonjs/

.npmignore
.prettierrc
tsconfig.json
eslint.config.mjs
.prettierrc

tsconfig.tsbuildinfo
.github/


================================================
File: packages/shell/.prettierrc
================================================
{
  "singleQuote": false,
  "trailingComma": "all",
  "plugins": ["prettier-plugin-organize-imports"]
}


================================================
File: packages/shell/misc/basedirs/dist/package.json
================================================
{
  "type": "module"
}

================================================
File: packages/shell/misc/basedirs/dist.commonjs/package.json
================================================
{
  "type": "commonjs"
}


================================================
File: packages/shell/src/advanced.ts
================================================
export * from "./advancedBarrel.js";
export * as cccA from "./advancedBarrel.js";


================================================
File: packages/shell/src/advancedBarrel.ts
================================================
export * from "@ckb-ccc/core/advancedBarrel";
export { sporeA } from "@ckb-ccc/spore/advanced";


================================================
File: packages/shell/src/barrel.ts
================================================
export * from "@ckb-ccc/core/barrel";
export { spore } from "@ckb-ccc/spore";
export { ssri } from "@ckb-ccc/ssri";
export { udt } from "@ckb-ccc/udt";


================================================
File: packages/shell/src/index.ts
================================================
export * from "./barrel.js";
export * as ccc from "./barrel.js";


================================================
File: packages/spore/README.md
================================================
<p align="center">
  <a href="https://app.ckbccc.com/">
    <img alt="Logo" src="https://raw.githubusercontent.com/ckb-devrel/ccc/master/assets/logoAndText.svg" style="height: 8rem; max-width: 90%; padding: 0.5rem 0;" />
  </a>
</p>

<h1 align="center" style="font-size: 48px;">
  CCC's support for Spore protocol
</h1>

<p align="center">
  <a href="https://www.npmjs.com/package/@ckb-ccc/spore"><img
    alt="NPM Version" src="https://img.shields.io/npm/v/%40ckb-ccc%2Fspore"
  /></a>
  <img alt="GitHub commit activity" src="https://img.shields.io/github/commit-activity/m/ckb-devrel/ccc" />
  <img alt="GitHub last commit" src="https://img.shields.io/github/last-commit/ckb-devrel/ccc/master" />
  <img alt="GitHub branch check runs" src="https://img.shields.io/github/check-runs/ckb-devrel/ccc/master" />
  <a href="https://live.ckbccc.com/"><img
    alt="Playground" src="https://img.shields.io/website?url=https%3A%2F%2Flive.ckbccc.com%2F&label=Playground"
  /></a>
  <a href="https://app.ckbccc.com/"><img
    alt="App" src="https://img.shields.io/website?url=https%3A%2F%2Fapp.ckbccc.com%2F&label=App"
  /></a>
  <a href="https://docs.ckbccc.com/"><img
    alt="Docs" src="https://img.shields.io/website?url=https%3A%2F%2Fdocs.ckbccc.com%2F&label=Docs"
  /></a>
</p>

<p align="center">
  CCC - CKBers' Codebase is a one-stop solution for your CKB JS/TS ecosystem development.
  <br />
  Empower yourself with CCC to discover the unlimited potential of CKB.
  <br />
  Interoperate with wallets from different chain ecosystems.
  <br />
  Fully enabling CKB's Turing completeness and cryptographic freedom power.
</p>

For non-developers, you can also [try CCC's app now here](https://app.ckbccc.com/). It showcases how to use CCC for some basic scenarios in CKB.

<h3 align="center">
  Read more about CCC on <a href="https://docs.ckbccc.com">our website</a> or <a href="https://github.com/ckb-devrel/ccc">GitHub Repo</a>.
</h3>


================================================
File: packages/spore/CHANGELOG.md
================================================
# @ckb-ccc/spore

## 1.2.1

### Patch Changes

- Updated dependencies [[`28c211d`](https://github.com/ckb-devrel/ccc/commit/28c211d839a2d2305eca56e82ba7da144aa3df4a)]:
  - @ckb-ccc/core@1.5.0

## 1.2.0

### Minor Changes

- [#136](https://github.com/ckb-devrel/ccc/pull/136) [`a1d5626`](https://github.com/ckb-devrel/ccc/commit/a1d56266da68602495054ad6b627b998ef27f04d) Thanks [@ashuralyk](https://github.com/ashuralyk)! - feat(spore): support decoding rendered dob data from spore data and cluster data

### Patch Changes

- Updated dependencies [[`3fdb2c4`](https://github.com/ckb-devrel/ccc/commit/3fdb2c477d0b2766b231e436b8f396f047b02634), [`f429087`](https://github.com/ckb-devrel/ccc/commit/f4290874dfab3fe58844e5169673c5d47bda64e3)]:
  - @ckb-ccc/core@1.4.0

## 1.1.1

### Patch Changes

- [`5d4517e`](https://github.com/ckb-devrel/ccc/commit/5d4517e049b541b2a695db7821c4cfc2218678e0) Thanks [@sfsf332](https://github.com/sfsf332)! - refactor(spore): unified findSpore(s) interface

- Updated dependencies [[`a48cccf`](https://github.com/ckb-devrel/ccc/commit/a48cccfae3ce6b3456a5eb863f207e7e5a6e568f)]:
  - @ckb-ccc/core@1.3.1

## 1.1.0

### Minor Changes

- [#130](https://github.com/ckb-devrel/ccc/pull/130) [`8c97c85`](https://github.com/ckb-devrel/ccc/commit/8c97c851db4a2d940c7e59116ca7620cfd0afae1) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: export backend packages in @ckb-ccc/shell

### Patch Changes

- [#131](https://github.com/ckb-devrel/ccc/pull/131) [`4c76f9e`](https://github.com/ckb-devrel/ccc/commit/4c76f9e2a93a226fcfc4c32a5378bb531bfff08f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Transaction.completeInputs(Add/AtLeast)One

- Updated dependencies [[`4dbf4fd`](https://github.com/ckb-devrel/ccc/commit/4dbf4fd8021cf14d05282706a7667ea7d108fb09), [`4c76f9e`](https://github.com/ckb-devrel/ccc/commit/4c76f9e2a93a226fcfc4c32a5378bb531bfff08f), [`c2c4c26`](https://github.com/ckb-devrel/ccc/commit/c2c4c264e04461948e4b913b2f22054e6032ddc8), [`b6a73fa`](https://github.com/ckb-devrel/ccc/commit/b6a73fa9628ebdff51cb8f246309654cd53e36f2), [`8c97c85`](https://github.com/ckb-devrel/ccc/commit/8c97c851db4a2d940c7e59116ca7620cfd0afae1)]:
  - @ckb-ccc/core@1.3.0

## 1.0.8

### Patch Changes

- Updated dependencies [[`01263bd`](https://github.com/ckb-devrel/ccc/commit/01263bd8c601fa8fcdfa24be52601716e1864843)]:
  - @ckb-ccc/core@1.2.3

## 1.0.7

### Patch Changes

- [#123](https://github.com/ckb-devrel/ccc/pull/123) [`7e64eea`](https://github.com/ckb-devrel/ccc/commit/7e64eeac15268725358f74b531a3013c9189979c) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix: spore cluster lock proxy

## 1.0.6

### Patch Changes

- Updated dependencies [[`7886e3d`](https://github.com/ckb-devrel/ccc/commit/7886e3d89e9ca8f3514a2044c6dd4e8ec6b49933)]:
  - @ckb-ccc/core@1.2.2

## 1.0.5

### Patch Changes

- Updated dependencies [[`94e2618`](https://github.com/ckb-devrel/ccc/commit/94e26182515e09d6086ec5b653d091f117a499e6)]:
  - @ckb-ccc/core@1.2.1

## 1.0.4

### Patch Changes

- Updated dependencies [[`128e87b`](https://github.com/ckb-devrel/ccc/commit/128e87b5ca3e97bfe7842e76f786aa6aec010797)]:
  - @ckb-ccc/core@1.2.0

## 1.0.3

### Patch Changes

- Updated dependencies [[`925991c`](https://github.com/ckb-devrel/ccc/commit/925991c8a24b1f34667e30b28b69812e936e3928)]:
  - @ckb-ccc/core@1.1.1

## 1.0.2

### Patch Changes

- Updated dependencies [[`ddc0a28`](https://github.com/ckb-devrel/ccc/commit/ddc0a281c3d1dfa6ebc990dae92994f026dfddcc)]:
  - @ckb-ccc/core@1.1.0

## 1.0.1

### Patch Changes

- [#111](https://github.com/ckb-devrel/ccc/pull/111) [`719055b`](https://github.com/ckb-devrel/ccc/commit/719055b404f31b40362f51714b9f11c85b857581) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix: call stack overflow caused by spread operator

- Updated dependencies [[`719055b`](https://github.com/ckb-devrel/ccc/commit/719055b404f31b40362f51714b9f11c85b857581), [`94caaca`](https://github.com/ckb-devrel/ccc/commit/94caaca11c63752a25282d42f51161c94397dec6)]:
  - @ckb-ccc/core@1.0.1

## 1.0.0

### Major Changes

- [#107](https://github.com/ckb-devrel/ccc/pull/107) [`b99f55f`](https://github.com/ckb-devrel/ccc/commit/b99f55f74e64106391ce53f7d0bd0fa7522023cc) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: molecule

### Patch Changes

- Updated dependencies [[`b99f55f`](https://github.com/ckb-devrel/ccc/commit/b99f55f74e64106391ce53f7d0bd0fa7522023cc)]:
  - @ckb-ccc/core@1.0.0

## 0.1.2

### Patch Changes

- Updated dependencies [[`c1cb910`](https://github.com/ckb-devrel/ccc/commit/c1cb91091780c7b33fbbd683ef8edc9f11452ecd)]:
  - @ckb-ccc/core@0.1.2

## 0.1.1

### Patch Changes

- [#101](https://github.com/ckb-devrel/ccc/pull/101) [`d9affcc`](https://github.com/ckb-devrel/ccc/commit/d9affcc01c7b839b227e4d79bcb66e717577502a) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix: commonjs

- Updated dependencies [[`d9affcc`](https://github.com/ckb-devrel/ccc/commit/d9affcc01c7b839b227e4d79bcb66e717577502a)]:
  - @ckb-ccc/core@0.1.1

## 0.1.0

### Minor Changes

- [#74](https://github.com/ckb-devrel/ccc/pull/74) [`f21d7e4`](https://github.com/ckb-devrel/ccc/commit/f21d7e4cf422edab4a836ef6d678b620594fef8d) Thanks [@Hanssen0](https://github.com/Hanssen0)! - add spore package and some known scripts

### Patch Changes

- [#88](https://github.com/ckb-devrel/ccc/pull/88) [`f07a506`](https://github.com/ckb-devrel/ccc/commit/f07a506bd6fc27fe659a17d2f7baaeec54716d81) Thanks [@ashuralyk](https://github.com/ashuralyk)! - feat: molecule codec
  feat: spore searcher
- Updated dependencies [[`a3d5359`](https://github.com/ckb-devrel/ccc/commit/a3d53595f6dd11f2f59cdf0086b3d7ce558a2fdd), [`8824ff2`](https://github.com/ckb-devrel/ccc/commit/8824ff27af3b76186f1a7d6db8c907cd66f09d6a), [`f07a506`](https://github.com/ckb-devrel/ccc/commit/f07a506bd6fc27fe659a17d2f7baaeec54716d81), [`f21d7e4`](https://github.com/ckb-devrel/ccc/commit/f21d7e4cf422edab4a836ef6d678b620594fef8d), [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366), [`1720d5a`](https://github.com/ckb-devrel/ccc/commit/1720d5a398543f1c6e24763eeaf15d84cd2214bf), [`e63a06e`](https://github.com/ckb-devrel/ccc/commit/e63a06ee75ac8595208d216dec88a4228c465e23), [`c092988`](https://github.com/ckb-devrel/ccc/commit/c092988e7765b9ac79498d6bd72a6a2f62859b6f), [`50f2ce0`](https://github.com/ckb-devrel/ccc/commit/50f2ce08e74cb3fbeae926267d42e28b426fd7f4), [`4709384`](https://github.com/ckb-devrel/ccc/commit/4709384e37188991cb937b16f99f47ca82c912b8)]:
  - @ckb-ccc/core@0.1.0

## 0.1.0-alpha.5

### Patch Changes

- [#88](https://github.com/ckb-devrel/ccc/pull/88) [`f07a506`](https://github.com/ckb-devrel/ccc/commit/f07a506bd6fc27fe659a17d2f7baaeec54716d81) Thanks [@ashuralyk](https://github.com/ashuralyk)! - feat: molecule codec
  feat: spore searcher
- Updated dependencies [[`f07a506`](https://github.com/ckb-devrel/ccc/commit/f07a506bd6fc27fe659a17d2f7baaeec54716d81)]:
  - @ckb-ccc/core@0.1.0-alpha.7

## 0.1.0-alpha.4

### Patch Changes

- Updated dependencies [[`4709384`](https://github.com/ckb-devrel/ccc/commit/4709384e37188991cb937b16f99f47ca82c912b8)]:
  - @ckb-ccc/core@0.1.0-alpha.6

## 0.1.0-alpha.3

### Patch Changes

- Updated dependencies [[`50f2ce0`](https://github.com/ckb-devrel/ccc/commit/50f2ce08e74cb3fbeae926267d42e28b426fd7f4)]:
  - @ckb-ccc/core@0.1.0-alpha.5

## 0.1.0-alpha.2

### Minor Changes

- [#74](https://github.com/ckb-devrel/ccc/pull/74) [`f21d7e4`](https://github.com/ckb-devrel/ccc/commit/f21d7e4cf422edab4a836ef6d678b620594fef8d) Thanks [@Hanssen0](https://github.com/Hanssen0)! - add spore package and some known scripts

### Patch Changes

- Updated dependencies [[`f21d7e4`](https://github.com/ckb-devrel/ccc/commit/f21d7e4cf422edab4a836ef6d678b620594fef8d)]:
  - @ckb-ccc/core@0.1.0-alpha.4


================================================
File: packages/spore/eslint.config.mjs
================================================
// @ts-check

import eslint from "@eslint/js";
import eslintPluginPrettierRecommended from "eslint-plugin-prettier/recommended";
import tseslint from "typescript-eslint";

import { dirname } from "path";
import { fileURLToPath } from "url";

export default [
  ...tseslint.config({
    files: ["**/*.ts"],
    extends: [
      eslint.configs.recommended,
      ...tseslint.configs.recommendedTypeChecked,
    ],
    rules: {
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          args: "all",
          argsIgnorePattern: "^_",
          caughtErrors: "all",
          caughtErrorsIgnorePattern: "^_",
          destructuredArrayIgnorePattern: "^_",
          varsIgnorePattern: "^_",
          ignoreRestSiblings: true,
        },
      ],
      "@typescript-eslint/unbound-method": ["error", { ignoreStatic: true }],
      "@typescript-eslint/no-unsafe-member-access": "off",
      "@typescript-eslint/require-await": "off",
      "no-empty": "off",
      "prefer-const": [
        "error",
        { ignoreReadBeforeAssign: true, destructuring: "all" },
      ],
    },
    languageOptions: {
      parserOptions: {
        project: true,
        tsconfigRootDir: dirname(fileURLToPath(import.meta.url)),
      },
    },
  }),
  eslintPluginPrettierRecommended,
];


================================================
File: packages/spore/package.json
================================================
{
  "name": "@ckb-ccc/spore",
  "version": "1.2.1",
  "description": "CCC - CKBer's Codebase. Common Chains Connector's support for Spore protocol",
  "author": "ashuralyk <ashuralyk@live.com>",
  "license": "MIT",
  "private": false,
  "homepage": "https://github.com/ckb-devrel/ccc",
  "repository": {
    "type": "git",
    "url": "git://github.com/ckb-devrel/ccc.git"
  },
  "sideEffects": false,
  "main": "dist.commonjs/index.js",
  "module": "dist/index.js",
  "exports": {
    ".": {
      "import": "./dist/index.js",
      "require": "./dist.commonjs/index.js",
      "default": "./dist.commonjs/index.js"
    },
    "./barrel": {
      "import": "./dist/barrel.js",
      "require": "./dist.commonjs/barrel.js",
      "default": "./dist.commonjs/barrel.js"
    },
    "./advanced": {
      "import": "./dist/advanced.js",
      "require": "./dist.commonjs/advanced.js",
      "default": "./dist.commonjs/advanced.js"
    },
    "./advancedBarrel": {
      "import": "./dist/advancedBarrel.js",
      "require": "./dist.commonjs/advancedBarrel.js",
      "default": "./dist.commonjs/advancedBarrel.js"
    }
  },
  "scripts": {
    "build": "rimraf ./dist && rimraf ./dist.commonjs && tsc && tsc --project tsconfig.commonjs.json && copyfiles -u 2 misc/basedirs/**/* .",
    "lint": "eslint ./src",
    "format": "prettier --write . && eslint --fix ./src"
  },
  "devDependencies": {
    "@eslint/js": "^9.1.1",
    "@types/node": "^22.10.0",
    "copyfiles": "^2.4.1",
    "dotenv": "^16.4.5",
    "eslint": "^9.1.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.1.3",
    "prettier": "^3.2.5",
    "prettier-plugin-organize-imports": "^3.2.4",
    "rimraf": "^5.0.5",
    "typescript": "^5.4.5",
    "typescript-eslint": "^7.7.0"
  },
  "publishConfig": {
    "access": "public"
  },
  "dependencies": {
    "@ckb-ccc/core": "workspace:*",
    "axios": "^1.7.7"
  }
}


================================================
File: packages/spore/tsconfig.base.json
================================================
{
  "compilerOptions": {
    "target": "es2020",
    "incremental": true,
    "allowJs": true,
    "importHelpers": false,
    "declaration": true,
    "declarationMap": true,
    "experimentalDecorators": true,
    "useDefineForClassFields": false,
    "esModuleInterop": true,
    "strict": true,
    "noImplicitAny": true,
    "strictBindCallApply": true,
    "strictNullChecks": true,
    "alwaysStrict": true,
    "noFallthroughCasesInSwitch": true,
    "forceConsistentCasingInFileNames": true,
    "skipLibCheck": true
  },
  "include": ["src/**/*"]
}


================================================
File: packages/spore/tsconfig.commonjs.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "NodeNext",
    "moduleResolution": "NodeNext",
    "outDir": "./dist.commonjs"
  }
}


================================================
File: packages/spore/tsconfig.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "ESNext",
    "moduleResolution": "Bundler",
    "outDir": "./dist",
  }
}


================================================
File: packages/spore/typedoc.json
================================================
{
  "$schema": "https://typedoc.org/schema.json",
  "entryPoints": ["./src/index.ts", "./src/advanced.ts"],
  "extends": ["../../typedoc.base.json"],
  "name": "@ckb-ccc spore"
}


================================================
File: packages/spore/.npmignore
================================================
node_modules/
misc/

*test.js
*test.ts
*test.d.ts
*test.d.ts.map
*spec.js
*spec.ts
*spec.d.ts
*spec.d.ts.map

tsconfig.json
tsconfig.*.json
eslint.config.mjs
.prettierrc
.prettierignore

tsconfig.tsbuildinfo
tsconfig.*.tsbuildinfo
.github/


================================================
File: packages/spore/.prettierignore
================================================
node_modules/

dist/
dist.commonjs/

.npmignore
.prettierrc
tsconfig.json
eslint.config.mjs
.prettierrc

tsconfig.tsbuildinfo
.github/


================================================
File: packages/spore/.prettierrc
================================================
{
  "singleQuote": false,
  "trailingComma": "all",
  "plugins": ["prettier-plugin-organize-imports"]
}


================================================
File: packages/spore/misc/basedirs/dist/package.json
================================================
{
  "type": "module"
}

================================================
File: packages/spore/misc/basedirs/dist.commonjs/package.json
================================================
{
  "type": "commonjs"
}


================================================
File: packages/spore/src/advanced.ts
================================================
export * from "./advancedBarrel.js";
export * as sporeA from "./advancedBarrel.js";


================================================
File: packages/spore/src/advancedBarrel.ts
================================================
export * from "./cobuild/index.js";
export * from "./codec/index.js";
export * from "./predefined/advanced.js";
export * from "./spore/advanced.js";


================================================
File: packages/spore/src/barrel.ts
================================================
export * from "./cluster/index.js";
export * as dob from "./dob/index.js";
export * from "./predefined/index.js";
export * from "./spore/index.js";


================================================
File: packages/spore/src/index.ts
================================================
export * from "./barrel.js";
export * as spore from "./barrel.js";


================================================
File: packages/spore/src/__examples__/createDobCluster.test.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { JsonRpcTransformers } from "@ckb-ccc/core/advanced";
import { createSporeCluster, dob } from "../index.js";

function generateClusterDescriptionUnderDobProtocol(
  client: ccc.Client,
): string {
  /**
   * Generation example for DOB0
   */
  const clusterDescription = "My First DOB Cluster";
  const dob0Pattern: dob.PatternElementDob0[] = [
    {
      traitName: "BackgroundColor",
      dobType: "String",
      dnaOffset: 0,
      dnaLength: 1,
      patternType: "options",
      traitArgs: ["red", "blue", "green", "black", "white"],
    },
    {
      traitName: "FontSize",
      dobType: "Number",
      dnaOffset: 1,
      dnaLength: 1,
      patternType: "range",
      traitArgs: [10, 50],
    },
    {
      traitName: "FontFamily",
      dobType: "String",
      dnaOffset: 2,
      dnaLength: 1,
      patternType: "options",
      traitArgs: ["Arial", "Helvetica", "Times New Roman", "Courier New"],
    },
    {
      traitName: "Timestamp",
      dobType: "Number",
      dnaOffset: 3,
      dnaLength: 4,
      patternType: "rawNumber",
    },
    {
      traitName: "ConsoleLog",
      dobType: "String",
      dnaOffset: 7,
      dnaLength: 13,
      patternType: "utf8",
    },
  ];
  const dob0: dob.Dob0 = {
    description: clusterDescription,
    dob: {
      ver: 0,
      decoder: dob.getDecoder(client, "dob0"),
      pattern: dob0Pattern,
    },
  };
  const dob0ClusterDescription = dob.encodeClusterDescriptionForDob0(dob0);
  console.log("dob0 =", dob0ClusterDescription);

  /**
   * Generation example for DOB1
   */
  const dob1Pattern: dob.PatternElementDob1[] = [
    {
      imageName: "IMAGE.0",
      svgFields: "attributes",
      traitName: "",
      patternType: "raw",
      traitArgs: "xmlns='http://www.w3.org/2000/svg' viewBox='0 0 300 200'",
    },
    {
      imageName: "IMAGE.0",
      svgFields: "elements",
      traitName: "Timestamp",
      patternType: "options",
      traitArgs: [
        [
          [0, 1000000],
          "<image width='300' height='200' href='btcfs://b2f4560f17679d3e3fca66209ac425c660d28a252ef72444c3325c6eb0364393i0' />",
        ],
        [
          ["*"],
          "<image width='300' height='200' btcfs://eb3910b3e32a5ed9460bd0d75168c01ba1b8f00cc0faf83e4d8b67b48ea79676i0 />",
        ],
      ],
    },
    {
      imageName: "IMAGE.0",
      svgFields: "elements",
      traitName: "BackgroundColor",
      patternType: "options",
      traitArgs: [
        ["red", "<rect width='20' height='20' x='5' y='5' fill='red' />"],
        ["blud", "<rect width='20' height='20' x='20' y='5' fill='blue' />"],
        ["green", "<rect width='20' height='20' x='5' y='20' fill='green' />"],
        [["*"], "<rect width='20' height='20' x='20' y='20' fill='pink' />"],
      ],
    },
    {
      imageName: "IMAGE.0",
      svgFields: "elements",
      traitName: "ConsoleLog",
      patternType: "options",
      traitArgs: [
        [
          "hello, world!",
          "<image width='100' height='100' href='ipfs://QmeQ6TfqzsjJCMtYmpbyZeMxiSzQGc6Aqg6NyJTeLYrrJr' />",
        ],
        [
          ["*"],
          "<image width='100' height='100' href='ipfs://QmYiiN8EXxAnyddatCbXRYzwU9wwAjh21ms4KEJodxg8Fo' />",
        ],
      ],
    },
  ];
  const dob1: dob.Dob1 = {
    description: clusterDescription,
    dob: {
      ver: 1,
      decoders: [
        {
          decoder: dob.getDecoder(client, "dob0"),
          pattern: dob0Pattern,
        },
        {
          decoder: dob.getDecoder(client, "dob1"),
          pattern: dob1Pattern,
        },
      ],
    },
  };
  const dob1ClusterDescription = dob.encodeClusterDescriptionForDob1(dob1);
  console.log("dob1 =", dob1ClusterDescription);

  return dob1ClusterDescription;
}

describe("createCluster [testnet]", () => {
  expect(process.env.PRIVATE_KEY).toBeDefined();

  it("should create a Cluster cell under DOB protocol", async () => {
    const client = new ccc.ClientPublicTestnet();
    const signer = new ccc.SignerCkbPrivateKey(
      client,
      process.env.PRIVATE_KEY!,
    );

    // Build transaction
    let { tx, id } = await createSporeCluster({
      signer,
      data: {
        name: "Hello, Cluster",
        description: generateClusterDescriptionUnderDobProtocol(client),
      },
    });
    console.log("clusterId:", id);

    // Complete transaction
    await tx.completeFeeBy(signer);
    tx = await signer.signTransaction(tx);
    console.log(JSON.stringify(JsonRpcTransformers.transactionFrom(tx)));

    // Send transaction
    const txHash = await signer.sendTransaction(tx);
    console.log(txHash);
  }, 60000);
});


================================================
File: packages/spore/src/__examples__/createDobSpore.test.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { JsonRpcTransformers } from "@ckb-ccc/core/advanced";
import { createSpore } from "../index.js";

describe("createSpore [testnet]", () => {
  expect(process.env.PRIVATE_KEY).toBeDefined();

  it("should create a Spore cell under DOB protocol", async () => {
    const client = new ccc.ClientPublicTestnet();
    const signer = new ccc.SignerCkbPrivateKey(
      client,
      process.env.PRIVATE_KEY!,
    );

    // Generate the DNA of DOB protocol for `createDobCluster` example required
    //
    // note: each different DOB pattern may require different DNA length and format
    const hasher = new ccc.HasherCkb(7);
    hasher.update(ccc.bytesFrom("hello, dob", "utf8"));
    let dna = ccc.bytesFrom(hasher.digest());
    dna = ccc.bytesConcat(dna, ccc.bytesFrom("hello, world!", "utf8"));
    expect(dna.length === 20);
    const hexedDna = ccc.bytesTo(dna, "hex"); // no leading "0x"
    const content = `{"dna":"${hexedDna}"}`;

    // Build transaction
    let { tx, id } = await createSpore({
      signer,
      data: {
        contentType: "dob/1",
        content: ccc.bytesFrom(content, "utf8"),
        clusterId:
          "0x52d19bd6ae411bfddaa48ede1881bcbb12c1a06f55531423aa29fc1ccb5f073c",
      },
      clusterMode: "clusterCell",
    });
    console.log("sporeId:", id);

    // Complete transaction
    await tx.completeFeeBy(signer);
    tx = await signer.signTransaction(tx);
    console.log(JSON.stringify(JsonRpcTransformers.transactionFrom(tx)));

    // Send transaction
    const txHash = await signer.sendTransaction(tx);
    console.log(txHash);
  }, 60000);
});


================================================
File: packages/spore/src/__examples__/createSporeWithoutCluster.test.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { JsonRpcTransformers } from "@ckb-ccc/core/advanced";
import "dotenv/config";
import { createSpore } from "../index.js";

describe("createSpore [testnet]", () => {
  expect(process.env.PRIVATE_KEY).toBeDefined();

  it("should create a simple Spore cell without cluster", async () => {
    const client = new ccc.ClientPublicTestnet();
    const signer = new ccc.SignerCkbPrivateKey(
      client,
      process.env.PRIVATE_KEY!,
    );

    // Build transaction
    let { tx, id } = await createSpore({
      signer,
      data: {
        contentType: "text/plain",
        content: ccc.bytesFrom("hello, spore", "utf8"),
      },
    });
    console.log("sporeId:", id);

    // Complete transaction
    await tx.completeFeeBy(signer);
    tx = await signer.signTransaction(tx);
    console.log(JSON.stringify(JsonRpcTransformers.transactionFrom(tx)));

    // Send transaction
    const txHash = await signer.sendTransaction(tx);
    console.log(txHash);
  }, 60000);
});


================================================
File: packages/spore/src/__examples__/decodeDob.test.ts
================================================
import "dotenv/config";
import { decodeDobBySporeId } from "../dob/index.js";

describe("decodeDob [testnet]", () => {
  it("should respose a decoded dob render data from a spore id", async () => {
    // The address that https://github.com/sporeprotocol/dob-decoder-standalone-server running at
    const decoderServerUrl = "http://127.0.0.1:8090";

    // The spore id that you want to decode (must be a valid spore dob)
    const sporeId =
      "0x29e4cfd388b9a01f7a853d476feb8e33af38565a1e751d55c9423bf7aa4b480b";

    // Decode from spore id
    const dob = await decodeDobBySporeId(sporeId, decoderServerUrl);
    console.log(dob);
  }, 60000);
});


================================================
File: packages/spore/src/__examples__/meltSpore.test.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { JsonRpcTransformers } from "@ckb-ccc/core/advanced";
import { meltSpore } from "..";

describe("meltSpore [testnet]", () => {
  expect(process.env.PRIVATE_KEY).toBeDefined();

  it("should melt a Spore cell by sporeId", async () => {
    const client = new ccc.ClientPublicTestnet();
    const signer = new ccc.SignerCkbPrivateKey(
      client,
      process.env.PRIVATE_KEY!,
    );

    // Build transaction
    let { tx } = await meltSpore({
      signer,
      // Change this if you have a different sporeId
      id: "0x29e4cfd388b9a01f7a853d476feb8e33af38565a1e751d55c9423bf7aa4b480b",
    });

    // Complete transaction
    await tx.completeFeeBy(signer);
    tx = await signer.signTransaction(tx);
    console.log(JSON.stringify(JsonRpcTransformers.transactionFrom(tx)));

    // Send transaction
    const txHash = await signer.sendTransaction(tx);
    console.log(txHash);
  }, 60000);
});


================================================
File: packages/spore/src/__examples__/meltThenCreateSpore.test.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { JsonRpcTransformers } from "@ckb-ccc/core/advanced";
import { createSpore, meltSpore } from "..";

describe("meltSpore [testnet]", () => {
  expect(process.env.PRIVATE_KEY).toBeDefined();

  it("should melt a Spore cell by sporeId", async () => {
    const client = new ccc.ClientPublicTestnet();
    const signer = new ccc.SignerCkbPrivateKey(
      client,
      process.env.PRIVATE_KEY!,
    );

    // Build melt transaction
    const { tx: meltTx } = await meltSpore({
      signer,
      // Change this if you have a different sporeId
      id: "0xb0b9f846db65aa152b6ae1244f8826f0e8b3f1c473381138726d0e7b84413d7c",
    });

    // Provide create transaction
    let { tx } = await createSpore({
      signer,
      tx: meltTx,
      data: {
        contentType: "text/plain",
        content: ccc.bytesFrom("hello, spore", "utf8"),
      },
    });

    // Complete transaction
    await tx.completeFeeBy(signer);
    tx = await signer.signTransaction(tx);
    console.log(JSON.stringify(JsonRpcTransformers.transactionFrom(tx)));

    // Send transaction
    const txHash = await signer.sendTransaction(tx);
    console.log(txHash);
  }, 60000);
});


================================================
File: packages/spore/src/__examples__/searchClusters.test.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { findSporeClustersBySigner } from "../cluster";

describe("searchClusters [testnet]", () => {
  expect(process.env.PRIVATE_KEY).toBeDefined();

  it("should search multiple Cluster cells under private key", async () => {
    const client = new ccc.ClientPublicTestnet();
    const signer = new ccc.SignerCkbPrivateKey(
      client,
      process.env.PRIVATE_KEY!,
    );

    // Search Cluster cells
    for await (const cluster of findSporeClustersBySigner({
      signer,
      order: "desc",
    })) {
      console.log(cluster);
    }
  }, 60000);
});


================================================
File: packages/spore/src/__examples__/searchSpores.test.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { findSporesBySigner } from "../spore";

describe("searchSpores [testnet]", () => {
  expect(process.env.PRIVATE_KEY).toBeDefined();

  it("should search multiple Spore cells under private key", async () => {
    const client = new ccc.ClientPublicTestnet();
    const signer = new ccc.SignerCkbPrivateKey(
      client,
      process.env.PRIVATE_KEY!,
    );

    // Search Spore cells
    for await (const spore of findSporesBySigner({ signer, order: "desc" })) {
      console.log(spore);
    }
  }, 60000);
});


================================================
File: packages/spore/src/__examples__/transferCluster.test.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { JsonRpcTransformers } from "@ckb-ccc/core/advanced";
import { transferSporeCluster } from "..";

describe("transferCluster [testnet]", () => {
  expect(process.env.PRIVATE_KEY).toBeDefined();

  it("should transfer a Cluster cell by sporeId", async () => {
    const client = new ccc.ClientPublicTestnet();
    const signer = new ccc.SignerCkbPrivateKey(
      client,
      process.env.PRIVATE_KEY!,
    );

    // Create a new owner
    const owner = await ccc.Address.fromString(
      "ckt1qzda0cr08m85hc8jlnfp3zer7xulejywt49kt2rr0vthywaa50xwsqv5puz2ee96nuh9nmc6rtm0n8v7agju4rgdmxlnk",
      signer.client,
    );

    // Build transaction
    let { tx } = await transferSporeCluster({
      signer,
      id: "0xcf95169f4843b7647837c7cf7e54e5ce7fbc3c7a5ce3c56898b54525d40d72d6",
      to: owner.script,
    });

    // Complete transaction
    await tx.completeFeeBy(signer);
    tx = await signer.signTransaction(tx);
    console.log(JSON.stringify(JsonRpcTransformers.transactionFrom(tx)));

    // Send transaction
    const txHash = await signer.sendTransaction(tx);
    console.log(txHash);
  }, 60000);
});


================================================
File: packages/spore/src/__examples__/transferSpore.test.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { JsonRpcTransformers } from "@ckb-ccc/core/advanced";
import { transferSpore } from "../index.js";

describe("transferSpore [testnet]", () => {
  expect(process.env.PRIVATE_KEY).toBeDefined();

  it("should transfer a Spore cell by sporeId", async () => {
    const client = new ccc.ClientPublicTestnet();
    const signer = new ccc.SignerCkbPrivateKey(
      client,
      process.env.PRIVATE_KEY!,
    );

    // Create a new owner
    const owner = await ccc.Address.fromString(
      "ckt1qzda0cr08m85hc8jlnfp3zer7xulejywt49kt2rr0vthywaa50xwsqv5puz2ee96nuh9nmc6rtm0n8v7agju4rgdmxlnk",
      signer.client,
    );

    // Build transaction
    let { tx } = await transferSpore({
      signer,
      // Change this if you have a different sporeId
      id: "0x293c6e579dcb8a66f9877517ea45bc9bba0d2513b33970606dfd2c6f3d27c2f0",
      to: owner.script,
    });

    // Complete transaction
    await tx.completeFeeBy(signer);
    tx = await signer.signTransaction(tx);
    console.log(JSON.stringify(JsonRpcTransformers.transactionFrom(tx)));

    // Send transaction
    const txHash = await signer.client.sendTransaction(tx);
    console.log(txHash);
  }, 60000);
});


================================================
File: packages/spore/src/cluster/index.ts
================================================
import { ccc } from "@ckb-ccc/core";
import {
  assembleCreateClusterAction,
  assembleTransferClusterAction,
  prepareSporeTransaction,
} from "../advanced.js";
import {
  ClusterDataView,
  packRawClusterData,
  unpackToRawClusterData,
} from "../codec/index.js";
import { findSingletonCellByArgs } from "../helper/index.js";
import {
  SporeScriptInfo,
  SporeScriptInfoLike,
  getClusterScriptInfo,
  getClusterScriptInfos,
} from "../predefined/index.js";

export async function findCluster(
  client: ccc.Client,
  id: ccc.HexLike,
  scripts?: SporeScriptInfoLike[],
): Promise<
  | {
      cell: ccc.Cell;
      cluster: ccc.Cell;
      clusterData: ClusterDataView;
      scriptInfo: SporeScriptInfo;
    }
  | undefined
> {
  const found = await findSingletonCellByArgs(
    client,
    id,
    scripts ?? Object.values(getClusterScriptInfos(client)),
  );
  if (!found) {
    return;
  }

  return {
    cell: found.cell,
    cluster: found.cell,
    clusterData: unpackToRawClusterData(found.cell.outputData),
    scriptInfo: found.scriptInfo,
  };
}

export async function assertCluster(
  client: ccc.Client,
  args: ccc.HexLike,
  scripts?: SporeScriptInfoLike[],
): Promise<{
  cell: ccc.Cell;
  scriptInfo: SporeScriptInfo;
}> {
  const res = await findCluster(client, args, scripts);

  if (!res) {
    throw new Error(`Cluster ${ccc.hexFrom(args)} not found`);
  }

  return res;
}

/**
 * Create a new Cluster cell
 *
 * @param signer who takes the responsibility to balance and sign the transaction
 * @param data specific format of data required by Cluster protocol
 * @param to the owner of the Cluster cell, which will be replaced with signer if not provided
 * @param tx the transaction skeleton, if not provided, a new one will be created
 * @param scriptInfo the script info of new cluster, default spore version if undefined
 * @param scriptInfoHash the script info hash used in cobuild
 * @returns
 *  - **tx**: a new transaction that contains created Cluster cell
 *  - **id**: the id of the created Cluster cell
 */
export async function createSporeCluster(params: {
  signer: ccc.Signer;
  data: ClusterDataView;
  to?: ccc.ScriptLike;
  tx?: ccc.TransactionLike;
  scriptInfo?: SporeScriptInfoLike;
  scriptInfoHash?: ccc.HexLike;
}): Promise<{
  tx: ccc.Transaction;
  id: ccc.Hex;
}> {
  const { signer, data, to, scriptInfoHash } = params;
  const scriptInfo = params.scriptInfo ?? getClusterScriptInfo(signer.client);

  // prepare transaction
  const tx = ccc.Transaction.from(params.tx ?? {});
  await tx.completeInputsAtLeastOne(signer);

  // build cluster cell
  const id = ccc.hashTypeId(tx.inputs[0], tx.outputs.length);
  const packedClusterData = packRawClusterData(data);
  tx.addOutput(
    {
      lock: to ?? (await signer.getRecommendedAddressObj()).script,
      type: {
        ...scriptInfo,
        args: id,
      },
    },
    packedClusterData,
  );

  // complete cellDeps
  await tx.addCellDepInfos(signer.client, scriptInfo.cellDeps);

  // generate cobuild action
  const actions = scriptInfo.cobuild
    ? [
        assembleCreateClusterAction(
          tx.outputs[tx.outputs.length - 1],
          packedClusterData,
          scriptInfoHash,
        ),
      ]
    : [];

  return {
    tx: await prepareSporeTransaction(signer, tx, actions),
    id,
  };
}

/**
 * Transfer a Cluster cell
 *
 * @param signer who takes the responsibility to balance and sign the transaction
 * @param id the id of the Cluster cell to be transferred
 * @param to the new owner of the Cluster cell
 * @param tx the transaction skeleton, if not provided, a new one will be created
 * @param scriptInfoHash the script info hash used in cobuild
 * @returns
 *  - **tx**: a new transaction that contains transferred Cluster cell
 */
export async function transferSporeCluster(params: {
  signer: ccc.Signer;
  id: ccc.HexLike;
  to: ccc.ScriptLike;
  tx?: ccc.TransactionLike;
  scriptInfoHash?: ccc.HexLike;
}): Promise<{
  tx: ccc.Transaction;
}> {
  const { signer, id, to, scriptInfoHash } = params;

  // prepare transaction
  const tx = ccc.Transaction.from(params.tx ?? {});

  // build cluster cell
  const { cell: cluster, scriptInfo } = await assertCluster(signer.client, id);

  tx.addInput(cluster);
  tx.addOutput(
    {
      lock: to,
      type: cluster.cellOutput.type,
    },
    cluster.outputData,
  );

  // complete cellDeps
  await tx.addCellDepInfos(signer.client, scriptInfo.cellDeps);

  // generate cobuild action
  const actions = scriptInfo.cobuild
    ? [
        assembleTransferClusterAction(
          cluster.cellOutput,
          tx.outputs[tx.outputs.length - 1],
          scriptInfoHash,
        ),
      ]
    : [];

  return {
    tx: await prepareSporeTransaction(signer, tx, actions),
  };
}

/**
 * Search on-chain clusters under the signer's control
 *
 * @param signer the owner of clusters
 * @param order the order in creation time of clusters
 * @param scriptInfos the deployed script infos of clusters
 */
export async function* findSporeClustersBySigner({
  signer,
  order,
  limit,
  scriptInfos,
}: {
  signer: ccc.Signer;
  order?: "asc" | "desc";
  limit?: number;
  scriptInfos?: SporeScriptInfoLike[];
}): AsyncGenerator<{
  cell: ccc.Cell;
  cluster: ccc.Cell;
  clusterData: ClusterDataView;
  scriptInfo: SporeScriptInfo;
}> {
  for (const scriptInfo of scriptInfos ??
    Object.values(getClusterScriptInfos(signer.client))) {
    if (!scriptInfo) {
      continue;
    }

    for await (const cluster of signer.findCells(
      {
        script: {
          ...scriptInfo,
          args: "",
        },
      },
      true,
      order,
      limit,
    )) {
      yield {
        cell: cluster,
        cluster,
        clusterData: unpackToRawClusterData(cluster.outputData),
        scriptInfo: SporeScriptInfo.from(scriptInfo),
      };
    }
  }
}


================================================
File: packages/spore/src/cobuild/index.ts
================================================
import { ccc, mol } from "@ckb-ccc/core";
import {
  Action,
  ActionVec,
  SporeAction,
  WitnessLayout,
} from "../codec/index.js";
import { DEFAULT_COBUILD_INFO_HASH } from "../predefined/index.js";

export function assembleCreateSporeAction(
  sporeOutput: ccc.CellOutputLike,
  sporeData: ccc.BytesLike,
  scriptInfoHash: ccc.HexLike = DEFAULT_COBUILD_INFO_HASH,
): mol.EncodableType<typeof Action> {
  if (!sporeOutput.type) {
    throw new Error("Spore cell must have a type script");
  }
  const sporeType = ccc.Script.from(sporeOutput.type);
  const sporeTypeHash = sporeType.hash();
  const actionData = SporeAction.encode({
    type: "CreateSpore",
    value: {
      sporeId: sporeType.args,
      to: {
        type: "Script",
        value: sporeOutput.lock,
      },
      dataHash: ccc.hashCkb(sporeData),
    },
  });
  return {
    scriptInfoHash: ccc.hexFrom(scriptInfoHash),
    scriptHash: sporeTypeHash,
    data: ccc.hexFrom(actionData),
  };
}

export function assembleTransferSporeAction(
  sporeInput: ccc.CellOutputLike,
  sporeOutput: ccc.CellOutputLike,
  scriptInfoHash: ccc.HexLike = DEFAULT_COBUILD_INFO_HASH,
): mol.EncodableType<typeof Action> {
  if (!sporeInput.type || !sporeOutput.type) {
    throw new Error("Spore cell must have a type script");
  }

  const sporeType = ccc.Script.from(sporeOutput.type);
  const sporeTypeHash = sporeType.hash();
  const actionData = SporeAction.encode({
    type: "TransferSpore",
    value: {
      sporeId: sporeType.args,
      from: {
        type: "Script",
        value: sporeInput.lock,
      },
      to: {
        type: "Script",
        value: sporeOutput.lock,
      },
    },
  });
  return {
    scriptInfoHash: ccc.hexFrom(scriptInfoHash),
    scriptHash: sporeTypeHash,
    data: ccc.hexFrom(actionData),
  };
}

export function assembleMeltSporeAction(
  sporeInput: ccc.CellOutputLike,
  scriptInfoHash: ccc.HexLike = DEFAULT_COBUILD_INFO_HASH,
): mol.EncodableType<typeof Action> {
  if (!sporeInput.type) {
    throw new Error("Spore cell must have a type script");
  }
  const sporeType = ccc.Script.from(sporeInput.type);
  const sporeTypeHash = sporeType.hash();
  const actionData = SporeAction.encode({
    type: "MeltSpore",
    value: {
      sporeId: sporeType.args,
      from: {
        type: "Script",
        value: sporeInput.lock,
      },
    },
  });
  return {
    scriptInfoHash: ccc.hexFrom(scriptInfoHash),
    scriptHash: sporeTypeHash,
    data: ccc.hexFrom(actionData),
  };
}

export function assembleCreateClusterAction(
  clusterOutput: ccc.CellOutputLike,
  clusterData: ccc.BytesLike,
  scriptInfoHash: ccc.HexLike = DEFAULT_COBUILD_INFO_HASH,
): mol.EncodableType<typeof Action> {
  if (!clusterOutput.type) {
    throw new Error("Cluster cell must have a type script");
  }
  const clusterType = ccc.Script.from(clusterOutput.type);
  const clusterTypeHash = clusterType.hash();
  const actionData = SporeAction.encode({
    type: "CreateCluster",
    value: {
      clusterId: clusterType.args,
      to: {
        type: "Script",
        value: clusterOutput.lock,
      },
      dataHash: ccc.hashCkb(clusterData),
    },
  });
  return {
    scriptInfoHash: ccc.hexFrom(scriptInfoHash),
    scriptHash: clusterTypeHash,
    data: ccc.hexFrom(actionData),
  };
}

export function assembleTransferClusterAction(
  clusterInput: ccc.CellOutputLike,
  clusterOutput: ccc.CellOutputLike,
  scriptInfoHash: ccc.HexLike = DEFAULT_COBUILD_INFO_HASH,
): mol.EncodableType<typeof Action> {
  if (!clusterInput.type || !clusterOutput.type) {
    throw new Error("Cluster cell must have a type script");
  }
  const clusterType = ccc.Script.from(clusterOutput.type);
  const clusterTypeHash = clusterType.hash();
  const actionData = SporeAction.encode({
    type: "TransferCluster",
    value: {
      clusterId: clusterType.args,
      from: {
        type: "Script",
        value: clusterInput.lock,
      },
      to: {
        type: "Script",
        value: clusterOutput.lock,
      },
    },
  });
  return {
    scriptInfoHash: ccc.hexFrom(scriptInfoHash),
    scriptHash: clusterTypeHash,
    data: ccc.hexFrom(actionData),
  };
}

export async function prepareSporeTransaction(
  signer: ccc.Signer,
  txLike: ccc.TransactionLike,
  actions: mol.EncodableType<typeof ActionVec>,
): Promise<ccc.Transaction> {
  let tx = ccc.Transaction.from(txLike);

  if (actions.length === 0) {
    return signer.prepareTransaction(tx);
  }

  const existedActions = extractCobuildActionsFromTx(tx);
  tx = await signer.prepareTransaction(tx);
  injectCobuild(tx, [existedActions, actions].flat());
  return tx;
}

export function unpackCommonCobuildProof(
  data: ccc.HexLike,
): mol.EncodableType<typeof WitnessLayout> | undefined {
  try {
    return WitnessLayout.decode(ccc.bytesFrom(data));
  } catch {
    return;
  }
}

export function extractCobuildActionsFromTx(
  tx: ccc.Transaction,
): mol.EncodableType<typeof ActionVec> {
  if (tx.witnesses.length === 0) {
    return [];
  }
  const witnessLayout = unpackCommonCobuildProof(
    tx.witnesses[tx.witnesses.length - 1],
  );
  if (!witnessLayout) {
    return [];
  }
  if (witnessLayout.type !== "SighashAll") {
    throw new Error("Invalid cobuild proof type: SighashAll");
  }

  // Remove existed cobuild witness
  tx.witnesses.pop();
  return witnessLayout.value.message.actions;
}

export function injectCobuild(
  tx: ccc.Transaction,
  actions: mol.EncodableType<typeof ActionVec>,
): void {
  const witnessLayout = ccc.hexFrom(
    WitnessLayout.encode({
      type: "SighashAll",
      value: {
        seal: "0x",
        message: {
          actions,
        },
      },
    }),
  );
  tx.witnesses.push(ccc.hexFrom(witnessLayout));
}


================================================
File: packages/spore/src/codec/cluster.ts
================================================
import { ccc, mol } from "@ckb-ccc/core";

export interface ClusterDataV1View {
  name: string;
  description: string;
}

export const ClusterDataV1: mol.Codec<ClusterDataV1View> = mol.table({
  name: mol.String,
  description: mol.String,
});

export interface ClusterDataV2View {
  name: string;
  description: string;
  mutantId?: ccc.HexLike;
}

export const ClusterDataV2: mol.Codec<ClusterDataV2View> = mol.table({
  name: mol.String,
  description: mol.String,
  mutantId: mol.BytesOpt,
});

export type ClusterDataView = ClusterDataV2View;

export type ClusterDataVersion = "v1" | "v2";

export const ClusterData = ClusterDataV2;

/**
 * Pack RawClusterData to Uint8Array.
 * Pass an optional "version" field to select a specific packing version.
 */
export function packRawClusterData(packable: ClusterDataView): Uint8Array;
export function packRawClusterData(
  packable: ClusterDataV1View,
  version: "v1",
): Uint8Array;
export function packRawClusterData(
  packable: ClusterDataV2View,
  version: "v2",
): Uint8Array;
export function packRawClusterData(
  packable: ClusterDataV1View | ClusterDataV2View,
  version?: ClusterDataVersion,
): Uint8Array {
  if (!version) {
    return packRawClusterDataV2(packable);
  }
  switch (version) {
    case "v1":
      return packRawClusterDataV1(packable);
    case "v2":
      return packRawClusterDataV2(packable);
  }
}

export function packRawClusterDataV1(packable: ClusterDataV1View): Uint8Array {
  return ccc.bytesFrom(
    ClusterDataV1.encode({
      name: packable.name,
      description: packable.description,
    }),
  );
}

export function packRawClusterDataV2(packable: ClusterDataV2View): Uint8Array {
  return ccc.bytesFrom(
    ClusterDataV2.encode({
      name: packable.name,
      description: packable.description,
      mutantId: packable.mutantId,
    }),
  );
}

/**
 * Unpack Hex/Bytes to RawClusterData.
 * Pass an optional "version" field to select a specific unpacking version.
 */
export function unpackToRawClusterData(
  unpackable: ccc.BytesLike,
): ClusterDataView;
export function unpackToRawClusterData(
  unpackable: ccc.BytesLike,
  version: "v1",
): ClusterDataV1View;
export function unpackToRawClusterData(
  unpackable: ccc.BytesLike,
  version: "v2",
): ClusterDataV2View;
export function unpackToRawClusterData(
  unpackable: ccc.BytesLike,
  version?: ClusterDataVersion,
): unknown {
  if (version) {
    switch (version) {
      case "v1":
        return unpackToRawClusterDataV1(unpackable);
      case "v2":
        return unpackToRawClusterDataV2(unpackable);
    }
  }
  try {
    return unpackToRawClusterDataV2(unpackable);
  } catch {
    try {
      return unpackToRawClusterDataV1(unpackable);
    } catch {
      throw new Error(
        `Cannot unpack ClusterData, no matching molecule: ${ccc.hexFrom(unpackable)}`,
      );
    }
  }
}

export function unpackToRawClusterDataV1(
  unpackable: ccc.BytesLike,
): ClusterDataV1View {
  return ClusterDataV1.decode(unpackable);
}

export function unpackToRawClusterDataV2(
  unpackable: ccc.BytesLike,
): ClusterDataV2View {
  return ClusterDataV2.decode(unpackable);
}


================================================
File: packages/spore/src/codec/index.ts
================================================
export * from "./cluster.js";
export * from "./cobuild/index.js";
export * from "./spore.js";


================================================
File: packages/spore/src/codec/spore.ts
================================================
import { ccc, mol } from "@ckb-ccc/core";

export interface SporeDataView {
  contentType: string;
  content: ccc.BytesLike;
  clusterId?: ccc.HexLike;
}

export const SporeData: mol.Codec<SporeDataView> = mol.table({
  contentType: mol.String,
  content: mol.Bytes,
  clusterId: mol.BytesOpt,
});

export function packRawSporeData(packable: SporeDataView): Uint8Array {
  return ccc.bytesFrom(
    SporeData.encode({
      contentType: packable.contentType,
      content: packable.content,
      clusterId: packable.clusterId,
    }),
  );
}

export function unpackToRawSporeData(unpackable: ccc.BytesLike): SporeDataView {
  return SporeData.decode(unpackable);
}


================================================
File: packages/spore/src/codec/cobuild/buildingPacket.ts
================================================
import { ccc, mol } from "@ckb-ccc/core";

export const Action = mol.table({
  scriptInfoHash: mol.Byte32,
  scriptHash: mol.Byte32,
  data: mol.Bytes,
});

export const ActionVec = mol.vector(Action);

export const Message = mol.table({
  actions: ActionVec,
});

export const ResolvedInputs = mol.table({
  outputs: ccc.CellOutputVec,
  outputsData: mol.BytesVec,
});

export const ScriptInfo = mol.table({
  name: mol.String,
  url: mol.String,
  scriptHash: mol.Byte32,
  schema: mol.String,
  messageType: mol.String,
});

export const ScriptInfoVec = mol.vector(ScriptInfo);

export const BuildingPacketV1 = mol.table({
  message: Message,
  payload: ccc.Transaction,
  resolvedInputs: ResolvedInputs,
  changeOutput: mol.Uint32Opt,
  scriptInfos: ScriptInfoVec,
  lockActions: ActionVec,
});

export const BuildingPacket = mol.union({
  BuildingPacketV1,
});


================================================
File: packages/spore/src/codec/cobuild/index.ts
================================================
export * from "./buildingPacket.js";
export * from "./sporeAction.js";
export * from "./witnessLayout.js";


================================================
File: packages/spore/src/codec/cobuild/sporeAction.ts
================================================
import { ccc, mol } from "@ckb-ccc/core";

export const Address = mol.union({
  Script: ccc.Script,
});

/**
 * Spore
 */
export const CreateSpore = mol.table({
  sporeId: mol.Byte32,
  to: Address,
  dataHash: mol.Byte32,
});
export const TransferSpore = mol.table({
  sporeId: mol.Byte32,
  from: Address,
  to: Address,
});
export const MeltSpore = mol.table({
  sporeId: mol.Byte32,
  from: Address,
});

/**
 * Cluster
 */
export const CreateCluster = mol.table({
  clusterId: mol.Byte32,
  to: Address,
  dataHash: mol.Byte32,
});
export const TransferCluster = mol.table({
  clusterId: mol.Byte32,
  from: Address,
  to: Address,
});

/**
 * ClusterProxy
 */
export const CreateClusterProxy = mol.table({
  clusterId: mol.Byte32,
  clusterProxyId: mol.Byte32,
  to: Address,
});
export const TransferClusterProxy = mol.table({
  clusterId: mol.Byte32,
  clusterProxyId: mol.Byte32,
  from: Address,
  to: Address,
});
export const MeltClusterProxy = mol.table({
  clusterId: mol.Byte32,
  clusterProxyId: mol.Byte32,
  from: Address,
});

/**
 * ClusterAgent
 */
export const CreateClusterAgent = mol.table({
  clusterId: mol.Byte32,
  clusterProxyId: mol.Byte32,
  to: Address,
});
export const TransferClusterAgent = mol.table({
  clusterId: mol.Byte32,
  from: Address,
  to: Address,
});
export const MeltClusterAgent = mol.table({
  clusterId: mol.Byte32,
  from: Address,
});

/**
 * Spore ScriptInfo Actions
 */
export const SporeAction = mol.union({
  // Spore
  CreateSpore,
  TransferSpore,
  MeltSpore,

  // Cluster
  CreateCluster,
  TransferCluster,

  // ClusterProxy
  CreateClusterProxy,
  TransferClusterProxy,
  MeltClusterProxy,

  // ClusterAgent
  CreateClusterAgent,
  TransferClusterAgent,
  MeltClusterAgent,
});


================================================
File: packages/spore/src/codec/cobuild/witnessLayout.ts
================================================
import { mol } from "@ckb-ccc/core";
import { Message } from "./buildingPacket.js";

export const SighashAll = mol.table({
  seal: mol.Bytes,
  message: Message,
});

export const SighashAllOnly = mol.table({
  seal: mol.Bytes,
});

/**
 * Otx related are not implemented yet, so just placeholders.
 */
export const Otx = mol.table({});
export const OtxStart = mol.table({});

export const WitnessLayoutFieldTags = {
  SighashAll: 4278190081,
  SighashAllOnly: 4278190082,
  Otx: 4278190083,
  OtxStart: 4278190084,
} as const;

export const WitnessLayout = mol.union(
  {
    SighashAll,
    SighashAllOnly,
    Otx,
    OtxStart,
  },
  WitnessLayoutFieldTags,
);


================================================
File: packages/spore/src/dob/index.ts
================================================
export * from "./api/index.js";
export * from "./config/index.js";
export * from "./helper/index.js";


================================================
File: packages/spore/src/dob/api/decode.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { Axios } from "axios";
import { getErrorByCode } from "../helper/error.js";
import { RenderOutput } from "../helper/object.js";

export function extractDobFromDecoderResult(result: string): RenderOutput {
  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
  const decoderResult = JSON.parse(result);
  if ("error" in decoderResult) {
    const serverError = getErrorByCode(decoderResult.error.code as number);
    throw new Error(`Decode DOB failed: ${serverError}`);
  }
  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-argument
  const renderResult = JSON.parse(decoderResult.result);
  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-argument
  const renderOutput = JSON.parse(renderResult.render_output);
  // eslint-disable-next-line @typescript-eslint/no-unsafe-return
  return renderOutput;
}

export async function decodeDobBySporeId(
  sporeId: ccc.HexLike,
  dobServerUrl: string,
): Promise<RenderOutput> {
  const axios = new Axios({
    baseURL: dobServerUrl,
    method: "POST",
    headers: {
      "Content-Type": "application/json",
    },
  });
  const result = await axios.post(
    "/",
    JSON.stringify({
      id: 0,
      jsonrpc: "2.0",
      method: "dob_decode",
      params: [ccc.hexFrom(sporeId).replace(/^0x/, "")],
    }),
  );
  return extractDobFromDecoderResult(result.data as string);
}

export async function decodeDobBySporeCell(
  sporeOutput: ccc.CellOutputLike,
  dobServerUrl: string,
): Promise<RenderOutput> {
  const sporeId = sporeOutput.type?.args;
  if (sporeId === undefined) {
    throw new Error("Invalid spore cell: missing spore id");
  }
  return decodeDobBySporeId(ccc.hexFrom(sporeId), dobServerUrl);
}

export async function decodeDobBySporeOutpoint(
  client: ccc.Client,
  sporeOutpoint: ccc.OutPointLike,
  dobServerUrl: string,
): Promise<RenderOutput> {
  const liveCell = await client.getCell(sporeOutpoint);
  if (!liveCell) {
    throw new Error("Invalid spore outpoint: missing spore cell");
  }
  return decodeDobBySporeCell(liveCell.cellOutput, dobServerUrl);
}

export async function decodeDobByRawData(
  sporeCellData: ccc.HexLike,
  clusterCellData: ccc.HexLike,
  dobServerUrl: string,
): Promise<RenderOutput> {
  const axios = new Axios({
    baseURL: dobServerUrl,
    method: "POST",
    headers: {
      "Content-Type": "application/json",
    },
  });
  const result = await axios.post(
    "/",
    JSON.stringify({
      id: 0,
      jsonrpc: "2.0",
      method: "dob_raw_decode",
      params: [ccc.hexFrom(sporeCellData), ccc.hexFrom(clusterCellData)],
    }),
  );
  return extractDobFromDecoderResult(result.data as string);
}


================================================
File: packages/spore/src/dob/api/encode.ts
================================================
import {
  checkDecoder,
  checkPatternDob0,
  checkPatternDob1,
  DNA,
  Dob0,
  Dob1,
} from "../helper/index.js";

export function encodeDna(dna: DNA): ArrayBuffer {
  const encoder = new TextEncoder();
  return encoder.encode(JSON.stringify(dna));
}

export function encodeClusterDescriptionForDob0(dob0: Dob0): string {
  checkDecoder(dob0.dob.decoder);
  dob0.dob.pattern.forEach((v) => {
    checkPatternDob0(v);
    v.toJSON = function () {
      if (v.traitArgs) {
        return [
          v.traitName,
          v.dobType,
          v.dnaOffset,
          v.dnaLength,
          v.patternType,
          v.traitArgs,
        ];
      } else {
        return [
          v.traitName,
          v.dobType,
          v.dnaOffset,
          v.dnaLength,
          v.patternType,
        ];
      }
    };
  });
  return JSON.stringify(dob0);
}

export function encodeClusterDescriptionForDob1(dob1: Dob1): string {
  dob1.dob.decoders.forEach((value) => {
    checkDecoder(value.decoder);
    value.pattern.forEach((v) => {
      if ("dnaOffset" in v) {
        checkPatternDob0(v);
        v.toJSON = function () {
          if (v.traitArgs) {
            return [
              v.traitName,
              v.dobType,
              v.dnaOffset,
              v.dnaLength,
              v.patternType,
              v.traitArgs,
            ];
          } else {
            return [
              v.traitName,
              v.dobType,
              v.dnaOffset,
              v.dnaLength,
              v.patternType,
            ];
          }
        };
      } else {
        checkPatternDob1(v);
        v.toJSON = () => {
          return [
            v.imageName,
            v.svgFields,
            v.traitName,
            v.patternType,
            v.traitArgs,
          ];
        };
      }
    });
  });
  return JSON.stringify(dob1);
}


================================================
File: packages/spore/src/dob/api/index.ts
================================================
export * from "./decode.js";
export * from "./encode.js";


================================================
File: packages/spore/src/dob/config/index.ts
================================================
export * from "./predefined.js";


================================================
File: packages/spore/src/dob/config/predefined.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { Decoder } from "../helper/index.js";

export type DobType = "dob0" | "dob1";
export type DobScriptInfo = Record<DobType, Decoder>;

export const DOB_TESTNET_DECODERS: DobScriptInfo = Object.freeze({
  ["dob0"]: {
    type: "code_hash",
    hash: "0x13cac78ad8482202f18f9df4ea707611c35f994375fa03ae79121312dda9925c",
  },
  // another avaliable options:
  // {
  //   type: "type_id",
  //   hash: "0x784e32cef202b9d4759ea96e80d806f94051e8069fd34d761f452553700138d7",
  // }
  // or
  // {
  //   type: "type_script",
  //   script: {
  //     code_hash:
  //       "0x00000000000000000000000000000000000000000000000000545950455f4944",
  //     hash_type: "type",
  //     args: "0x784e32cef202b9d4759ea96e80d806f94051e8069fd34d761f452553700138d7",
  //   }
  // }
  ["dob1"]: {
    type: "code_hash",
    hash: "0xda3525549b72970b4c95f5b5749357f20d1293d335710b674f09c32f7d54b6dc",
  },
});

export const DOB_MAINNET_DECODERS: DobScriptInfo = Object.freeze({
  ["dob0"]: {
    type: "code_hash",
    hash: "0x13cac78ad8482202f18f9df4ea707611c35f994375fa03ae79121312dda9925c",
  },
  // another avaliable options:
  // {
  //   type: "type_id",
  //   hash: "0x8892bea4405a1f077921799bc0f4516e0ebaef7aea0dfc6614a8898fb47d5372",
  // },
  // or
  // {
  //   type: "type_script",
  //   script: {
  //     code_hash:
  //       "0x00000000000000000000000000000000000000000000000000545950455f4944",
  //     hash_type: "type",
  //     args: "0x8892bea4405a1f077921799bc0f4516e0ebaef7aea0dfc6614a8898fb47d5372",
  //   }
  // }
  ["dob1"]: {
    type: "code_hash",
    hash: "0xda3525549b72970b4c95f5b5749357f20d1293d335710b674f09c32f7d54b6dc",
  },
});

export function getDecoder(
  client: ccc.Client,
  dobType: DobType,
  dobScriptInfo?: DobScriptInfo,
): Decoder {
  if (dobScriptInfo) {
    return dobScriptInfo[dobType];
  }
  if (client.addressPrefix === "ckb") {
    return DOB_MAINNET_DECODERS[dobType];
  }
  return DOB_TESTNET_DECODERS[dobType];
}


================================================
File: packages/spore/src/dob/helper/check.ts
================================================
import { Decoder, PatternElementDob0, PatternElementDob1 } from "./object.js";

export function checkDecoder(decoder: Decoder) {
  if (decoder.type === "code_hash" || decoder.type === "type_id") {
    if (decoder.hash === undefined) {
      throw new Error(
        "Invalid decoder: 'hash' is required for 'code_hash' and 'type_id'",
      );
    }
  }
  if (decoder.type === "type_script" && decoder.script === undefined) {
    throw new Error("Invalid decoder: 'script' is required for 'type_script'");
  }
}

export function checkPatternDob0(value: PatternElementDob0) {
  switch (value.patternType) {
    case "options": {
      if (value.traitArgs === undefined) {
        throw new Error(
          "Invalid pattern: 'traitArgs' is required for 'options'",
        );
      }
      if (value.traitArgs.length === 0) {
        throw new Error(
          "Invalid pattern: 'traitArgs' should not be empty for 'options'",
        );
      }
      break;
    }
    case "range": {
      if (value.traitArgs === undefined) {
        throw new Error("Invalid pattern: 'traitArgs' is required for 'range'");
      }
      if (
        value.traitArgs.length !== 2 ||
        value.traitArgs.filter((v) => typeof v === "number").length !== 2
      ) {
        throw new Error(
          "Invalid pattern: 'traitArgs' should contain exactly 2 numbers for 'range'",
        );
      }
      break;
    }
  }
  if (value.dnaLength === 0) {
    throw new Error("Invalid pattern: 'dnaLength' should be greater than 0");
  }
}

export function checkPatternDob1(value: PatternElementDob1) {
  switch (value.patternType) {
    case "options": {
      if (!Array.isArray(value.traitArgs)) {
        throw new Error(
          "Invalid pattern: 'traitArgs' should be an array for 'options'",
        );
      }
      for (const args of value.traitArgs) {
        if (args.length !== 2) {
          throw new Error(
            "Invalid pattern: 'traitArgs' should contain exactly 2 elements for 'options'",
          );
        }
        if (typeof args[0] !== "string") {
          if (!Array.isArray(args[0])) {
            throw new Error(
              "Invalid pattern: 'traitArgs[0]' should be a string or an array that contains only 2 numbers or the '*' for 'options'",
            );
          }
          if (args[0].length === 1 && args[0][0] !== "*") {
            throw new Error(
              "Invalid pattern: 'traitArgs[0]' should be a string or an array that contains only 2 numbers or the '*' for 'options'",
            );
          }
          if (
            args[0].length === 2 &&
            (typeof args[0][0] !== "number" || typeof args[0][1] !== "number")
          ) {
            throw new Error(
              "Invalid pattern: 'traitArgs[0]' should be a string or an array that contains only 2 numbers or the '*' for 'options'",
            );
          }
          if (args[0].length === 0 || args[0].length > 2) {
            throw new Error(
              "Invalid pattern: 'traitArgs[0]' should be a string or an array that contains only 2 numbers or the '*' for 'options'",
            );
          }
        }
        if (typeof args[1] !== "string") {
          throw new Error(
            "Invalid pattern: 'traitArgs[1]' should be a string for 'options'",
          );
        }
      }
      break;
    }
    case "raw": {
      if (value.traitName !== "" || typeof value.traitArgs !== "string") {
        throw new Error(
          "Invalid pattern: 'traitName' should be empty and 'traitArgs' should be a string for 'raw'",
        );
      }
      break;
    }
  }
}


================================================
File: packages/spore/src/dob/helper/error.ts
================================================
const errors = {
  1001: "DnaLengthNotMatch",
  1002: "SporeIdLengthInvalid",
  1003: "NativeDecoderNotFound",
  1004: "SporeIdNotFound",
  1005: "SporeDataUncompatible",
  1006: "SporeDataContentTypeUncompatible",
  1007: "DOBVersionUnexpected",
  1008: "ClusterIdNotSet",
  1009: "ClusterIdNotFound",
  1010: "ClusterDataUncompatible",
  1011: "DecoderIdNotFound",
  1012: "DecoderOutputInvalid",
  1013: "HexedDNAParseError",
  1014: "HexedSporeIdParseError",
  1015: "DecoderBinaryPathInvalid",
  1016: "DecoderExecutionError",
  1017: "DecoderExecutionInternalError",
  1018: "FetchLiveCellsError",
  1019: "FetchTransactionError",
  1020: "NoOutputCellInTransaction",
  1021: "DOBContentUnexpected",
  1022: "DOBMetadataUnexpected",
  1023: "DOBRenderCacheNotFound",
  1024: "DOBRenderCacheModified",
  1025: "DecoderBinaryHashInvalid",
  1026: "DecoderBinaryNotFoundInCell",
  1027: "JsonRpcRequestError",
  1028: "SystemTimeError",
  1029: "DecoderHashNotFound",
  1030: "DecoderScriptNotFound",
  1031: "DecoderChainIsEmpty",
};

export function getErrorByCode(code: number): string {
  const errorIndex = Object.keys(errors).indexOf(code.toString());
  if (errorIndex < 0) {
    throw new Error(`Error code ${code} not found`);
  }
  return Object.values(errors)[errorIndex];
}


================================================
File: packages/spore/src/dob/helper/index.ts
================================================
export * from "./check.js";
export * from "./error.js";
export * from "./object.js";


================================================
File: packages/spore/src/dob/helper/object.ts
================================================
export type DNA = string | { dna: string } | string[];

export interface Decoder {
  type: "code_hash" | "type_id" | "type_script";
  hash?: string; // required if `type` is `code_hash` or `type_id`
  script?: {
    code_hash: string;
    hash_type: string;
    args: string;
  }; // required if `type` is `type_script`
}

export interface PatternElementDob0 {
  traitName: string;
  dobType: string; // String | Number
  dnaOffset: number;
  dnaLength: number;
  patternType: "options" | "range" | "rawNumber" | "rawString" | "utf8";
  traitArgs?: string[] | number[]; // can only be `undefined` in case that `patternType` is `rawNumber` or `rawString`
  toJSON?: () => unknown;
}

export interface PatternDob0 {
  ver: 0;
  decoder: Decoder;
  pattern: PatternElementDob0[];
}

export interface Dob0 {
  description: string;
  dob: PatternDob0;
}

export type Dob1PatternArgs = string | number[] | ["*"];

export interface PatternElementDob1 {
  imageName: string;
  svgFields: "attributes" | "elements";
  traitName: string; // can only be empty in case that `patternType` is `raw`
  patternType: "options" | "raw";
  traitArgs: Dob1PatternArgs[][] | string; // can only be `string` in case that `patternType` is `raw`
  toJSON?: () => unknown;
}

export interface PatternDob1 {
  ver: 1;
  decoders: {
    decoder: Decoder;
    pattern: PatternElementDob0[] | PatternElementDob1[];
  }[];
}

export interface Dob1 {
  description: string;
  dob: PatternDob1;
}

export interface DecodeElement {
  name: string;
  traits: {
    type: string;
    value: number | string;
  }[];
}

export type RenderOutput = DecodeElement[];


================================================
File: packages/spore/src/helper/index.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { SporeScriptInfo, SporeScriptInfoLike } from "../predefined/index.js";

export async function findSingletonCellByArgs(
  client: ccc.Client,
  args: ccc.HexLike,
  scripts: (SporeScriptInfoLike | undefined)[],
): Promise<
  | {
      cell: ccc.Cell;
      scriptInfo: SporeScriptInfo;
    }
  | undefined
> {
  for (const scriptInfo of scripts) {
    if (!scriptInfo) {
      continue;
    }

    const cell = await client.findSingletonCellByType(
      {
        ...scriptInfo,
        args,
      },
      true,
    );

    if (cell) {
      return {
        cell,
        scriptInfo: SporeScriptInfo.from(scriptInfo),
      };
    }
  }
}


================================================
File: packages/spore/src/predefined/advanced.ts
================================================
export * from "./mainnet.advanced.js";
export * from "./testnet.advanced.js";


================================================
File: packages/spore/src/predefined/index.ts
================================================
export * from "./types.js";
export * from "./utils.js";


================================================
File: packages/spore/src/predefined/mainnet.advanced.ts
================================================
import { SporeScriptInfoLike, SporeVersion } from "./types.js";

export const SCRIPTS_SPORE_MAINNET: Record<
  SporeVersion,
  SporeScriptInfoLike | undefined
> = Object.freeze({
  [SporeVersion.DID]: {
    codeHash:
      "0xcfba73b58b6f30e70caed8a999748781b164ef9a1e218424a6fb55ebf641cb33",
    hashType: "type",
    cellDeps: [
      {
        cellDep: {
          outPoint: {
            txHash:
              "0x37c80ba8124780920bc8fe06b49e3535b43ca339bb9a97fb462b16d575bfa9a6",
            index: 0,
          },
          depType: "code",
        },
        type: {
          codeHash:
            "0x00000000000000000000000000000000000000000000000000545950455f4944",
          hashType: "type",
          args: "0x62312cd846659e188b05da11dc3f080b083c27371ea701d6026e11e713e0e3de",
        },
      },
    ],
    cobuild: true,
  },
  [SporeVersion.V2]: {
    codeHash:
      "0x4a4dce1df3dffff7f8b2cd7dff7303df3b6150c9788cb75dcf6747247132b9f5",
    hashType: "data1",
    cellDeps: [
      {
        cellDep: {
          outPoint: {
            txHash:
              "0x96b198fb5ddbd1eed57ed667068f1f1e55d07907b4c0dbd38675a69ea1b69824",
            index: 0,
          },
          depType: "code",
        },
      },
    ],
    cobuild: true,
  },
  [SporeVersion.V1]: undefined,
});

export const SCRIPTS_CLUSTER_MAINNET: Record<
  SporeVersion,
  SporeScriptInfoLike | undefined
> = Object.freeze({
  [SporeVersion.V2]: {
    codeHash:
      "0x7366a61534fa7c7e6225ecc0d828ea3b5366adec2b58206f2ee84995fe030075",
    hashType: "data1",
    cellDeps: [
      {
        cellDep: {
          outPoint: {
            txHash:
              "0xe464b7fb9311c5e2820e61c99afc615d6b98bdefbe318c34868c010cbd0dc938",
            index: 0,
          },
          depType: "code",
        },
      },
    ],
    cobuild: true,
  },
  [SporeVersion.V1]: undefined,
  [SporeVersion.DID]: undefined,
});


================================================
File: packages/spore/src/predefined/testnet.advanced.ts
================================================
import { SporeScriptInfoLike, SporeVersion } from "./types.js";

export const SCRIPTS_SPORE_TESTNET: Record<
  SporeVersion,
  SporeScriptInfoLike | undefined
> = Object.freeze({
  [SporeVersion.DID]: {
    codeHash:
      "0x0b1f412fbae26853ff7d082d422c2bdd9e2ff94ee8aaec11240a5b34cc6e890f",
    hashType: "type",
    cellDeps: [
      {
        cellDep: {
          outPoint: {
            txHash:
              "0x306961e0eb04ed972c60cb89a0aed1b0ef065d96d2fc0000c62db5275e32dc6f",
            index: 0,
          },
          depType: "code",
        },
        type: {
          codeHash:
            "0x00000000000000000000000000000000000000000000000000545950455f4944",
          hashType: "type",
          args: "0x80f0d4bf6b3951911aa6b98cc609d477a8a10b903b35cfd528d098e95c36f680",
        },
      },
    ],
  },
  [SporeVersion.V2]: {
    codeHash:
      "0x685a60219309029d01310311dba953d67029170ca4848a4ff638e57002130a0d",
    hashType: "data1",
    cellDeps: [
      {
        cellDep: {
          outPoint: {
            txHash:
              "0x5e8d2a517d50fd4bb4d01737a7952a1f1d35c8afc77240695bb569cd7d9d5a1f",
            index: 0,
          },
          depType: "code",
        },
      },
    ],
    cobuild: true,
  },
  [SporeVersion.V1]: {
    codeHash:
      "0xbbad126377d45f90a8ee120da988a2d7332c78ba8fd679aab478a19d6c133494",
    hashType: "data1",
    cellDeps: [
      {
        cellDep: {
          outPoint: {
            txHash:
              "0xfd694382e621f175ddf81ce91ce2ecf8bfc027d53d7d31b8438f7d26fc37fd19",
            index: 0,
          },
          depType: "code",
        },
      },
    ],
  },
});

export const SCRIPTS_CLUSTER_TESTNET: Record<
  SporeVersion,
  SporeScriptInfoLike | undefined
> = Object.freeze({
  [SporeVersion.V2]: {
    codeHash:
      "0x0bbe768b519d8ea7b96d58f1182eb7e6ef96c541fbd9526975077ee09f049058",
    hashType: "data1",
    cellDeps: [
      {
        cellDep: {
          outPoint: {
            txHash:
              "0xcebb174d6e300e26074aea2f5dbd7f694bb4fe3de52b6dfe205e54f90164510a",
            index: 0,
          },
          depType: "code",
        },
      },
    ],
    cobuild: true,
  },
  [SporeVersion.V1]: {
    codeHash:
      "0x598d793defef36e2eeba54a9b45130e4ca92822e1d193671f490950c3b856080",
    hashType: "data1",
    cellDeps: [
      {
        cellDep: {
          outPoint: {
            txHash:
              "0x49551a20dfe39231e7db49431d26c9c08ceec96a29024eef3acc936deeb2ca76",
            index: 0,
          },
          depType: "code",
        },
      },
    ],
  },
  [SporeVersion.DID]: undefined,
});


================================================
File: packages/spore/src/predefined/types.ts
================================================
import { ccc } from "@ckb-ccc/core";

export const DEFAULT_COBUILD_INFO_HASH = ccc.hashCkb(
  ccc.bytesFrom("CCC_DEFAULT_COBUILD_INFO", "utf8"),
);

export enum SporeVersion {
  V1 = "V1",
  V2 = "V2",
  DID = "DID",
}

export const SPORE_VERSION_DEFAULT = SporeVersion.V2;

export type SporeScriptInfoLike = ccc.ScriptInfoLike & {
  cobuild?: boolean;
};

export class SporeScriptInfo extends ccc.ScriptInfo {
  constructor(
    codeHash: ccc.Hex,
    hashType: ccc.HashType,
    cellDeps: ccc.CellDepInfo[],
    public cobuild?: boolean,
  ) {
    super(codeHash, hashType, cellDeps);
  }

  static from(scriptInfoLike: SporeScriptInfoLike): SporeScriptInfo {
    return new SporeScriptInfo(
      ccc.hexFrom(scriptInfoLike.codeHash),
      ccc.hashTypeFrom(scriptInfoLike.hashType),
      scriptInfoLike.cellDeps.map((c) => ccc.CellDepInfo.from(c)),
      scriptInfoLike.cobuild,
    );
  }
}


================================================
File: packages/spore/src/predefined/utils.ts
================================================
import { ccc } from "@ckb-ccc/core";
import {
  SCRIPTS_CLUSTER_MAINNET,
  SCRIPTS_CLUSTER_TESTNET,
  SCRIPTS_SPORE_MAINNET,
  SCRIPTS_SPORE_TESTNET,
} from "./advanced.js";
import {
  SPORE_VERSION_DEFAULT,
  SporeScriptInfo,
  SporeVersion,
} from "./types.js";

export function getSporeScriptInfos(client: ccc.Client) {
  return client.addressPrefix === "ckb"
    ? SCRIPTS_SPORE_MAINNET
    : SCRIPTS_SPORE_TESTNET;
}

export function getClusterScriptInfos(client: ccc.Client) {
  return client.addressPrefix === "ckb"
    ? SCRIPTS_CLUSTER_MAINNET
    : SCRIPTS_CLUSTER_TESTNET;
}

export function getSporeScriptInfo(
  client: ccc.Client,
  version?: SporeVersion,
): SporeScriptInfo {
  const scriptInfo =
    getSporeScriptInfos(client)[version ?? SPORE_VERSION_DEFAULT];

  if (!scriptInfo) {
    throw new Error(
      `Spore script info not found of for version ${version} on ${client.addressPrefix}`,
    );
  }

  return SporeScriptInfo.from(scriptInfo);
}

export function getClusterScriptInfo(
  client: ccc.Client,
  version?: SporeVersion,
): SporeScriptInfo {
  const scriptInfo =
    getClusterScriptInfos(client)[version ?? SPORE_VERSION_DEFAULT];

  if (!scriptInfo) {
    throw new Error(
      `Cluster script info not found of for version ${version} on ${client.addressPrefix}`,
    );
  }

  return SporeScriptInfo.from(scriptInfo);
}


================================================
File: packages/spore/src/spore/advanced.ts
================================================
import { ccc, mol } from "@ckb-ccc/core";
import { assembleTransferClusterAction } from "../advanced.js";
import { assertCluster } from "../cluster/index.js";
import { Action, SporeDataView } from "../codec/index.js";

export async function prepareCluster(
  signer: ccc.Signer,
  tx: ccc.Transaction,
  data: SporeDataView,
  clusterMode?: "lockProxy" | "clusterCell" | "skip",
  scriptInfoHash?: ccc.HexLike,
): Promise<mol.EncodableType<typeof Action> | undefined> {
  // skip if the spore is not belong to a cluster
  if (!data.clusterId || clusterMode === "skip") {
    return;
  }

  if (!clusterMode) {
    throw Error("clusterMode is undefined but the spore has a cluster");
  }

  const { cell: cluster, scriptInfo } = await assertCluster(
    signer.client,
    data.clusterId,
  );

  // If this cluster has been processed, nothing will happen to the tx
  switch (clusterMode) {
    case "lockProxy": {
      const lock = cluster.cellOutput.lock;

      if ((await tx.findInputIndexByLock(lock, signer.client)) === undefined) {
        // note: We can only search proxy of signer, if any custom logic is in need, developer should get
        // the proxy filled in transaction before invoking `createSpore`
        await tx.completeInputsAddOne(signer);
      }
      if (tx.outputs.every((output) => output.lock !== lock)) {
        tx.addOutput({
          lock,
        });
      }
      tx.addCellDeps({
        outPoint: cluster.outPoint,
        depType: "code",
      });
      return;
    }
    case "clusterCell": {
      if (tx.inputs.some((i) => i.previousOutput.eq(cluster.outPoint))) {
        return;
      }

      tx.addInput(cluster);
      tx.addOutput(cluster.cellOutput, cluster.outputData);
      await tx.addCellDepInfos(signer.client, scriptInfo.cellDeps);
      // note: add cluster as cellDep, which will be used in Spore contract
      tx.addCellDeps({
        outPoint: cluster.outPoint,
        depType: "code",
      });

      if (scriptInfo.cobuild) {
        return assembleTransferClusterAction(
          cluster.cellOutput,
          cluster.cellOutput,
          scriptInfoHash,
        );
      }
      return;
    }
  }
}


================================================
File: packages/spore/src/spore/index.ts
================================================
import { ccc } from "@ckb-ccc/core";
import {
  assembleCreateSporeAction,
  assembleMeltSporeAction,
  assembleTransferSporeAction,
  prepareSporeTransaction,
} from "../advanced.js";
import {
  SporeDataView,
  packRawSporeData,
  unpackToRawSporeData,
} from "../codec/index.js";
import { findSingletonCellByArgs } from "../helper/index.js";
import {
  SporeScriptInfo,
  SporeScriptInfoLike,
  getSporeScriptInfo,
  getSporeScriptInfos,
} from "../predefined/index.js";
import { prepareCluster } from "./advanced.js";

export async function findSpore(
  client: ccc.Client,
  id: ccc.HexLike,
  scripts?: SporeScriptInfoLike[],
): Promise<
  | {
      cell: ccc.Cell;
      spore: ccc.Cell;
      sporeData: SporeDataView;
      scriptInfo: SporeScriptInfo;
    }
  | undefined
> {
  const found = await findSingletonCellByArgs(
    client,
    id,
    scripts ?? Object.values(getSporeScriptInfos(client)),
  );
  if (!found) {
    return undefined;
  }

  return {
    cell: found.cell,
    spore: found.cell,
    sporeData: unpackToRawSporeData(found.cell.outputData),
    scriptInfo: found.scriptInfo,
  };
}

export async function assertSpore(
  client: ccc.Client,
  args: ccc.HexLike,
  scripts?: SporeScriptInfoLike[],
): Promise<{
  cell: ccc.Cell;
  scriptInfo: SporeScriptInfo;
}> {
  const res = await findSpore(client, args, scripts);

  if (!res) {
    throw new Error(`Spore ${ccc.hexFrom(args)} not found`);
  }

  return res;
}

/**
 * Create one Spore cell with the specified Spore data.
 *
 * @param signer who takes the responsibility to balance and sign the transaction
 * @param data specific format of data required by Spore protocol
 * @param to owner of new spore cell, signer if no provided
 * @param clusterMode how to process cluster cell **(if clusterId is not provided in SporeData, this parameter will be ignored)**
 *   - undefined: error if the spore has a cluster but the clusterMode is not set
 *   - lockProxy: put a cell that uses the same lock from Cluster cell in both Inputs and Outputs
 *   - clusterCell: directly put Cluster cell in Inputs and Outputs
 *   - skip: don't handle the cluster logic
 * @param tx the transaction skeleton, if not provided, a new one will be created
 * @param scriptInfo the script info of Spore cell, if not provided, the default script info will be used
 * @param scriptInfoHash the script info hash used in cobuild
 * @returns
 *  - **tx**: a new transaction that contains created Spore cells
 *  - **id**: the sporeId of created Spore cell
 */
export async function createSpore(params: {
  signer: ccc.Signer;
  data: SporeDataView;
  to?: ccc.ScriptLike;
  clusterMode?: "lockProxy" | "clusterCell" | "skip";
  tx?: ccc.TransactionLike;
  scriptInfo?: SporeScriptInfoLike;
  scriptInfoHash?: ccc.HexLike;
}): Promise<{
  tx: ccc.Transaction;
  id: ccc.Hex;
}> {
  const { signer, data, to, clusterMode, scriptInfoHash } = params;
  const scriptInfo = params.scriptInfo ?? getSporeScriptInfo(signer.client);

  // prepare transaction
  const actions = [];
  const ids: ccc.Hex[] = [];
  const tx = ccc.Transaction.from(params.tx ?? {});
  await tx.completeInputsAtLeastOne(signer);

  const { script: lock } = await signer.getRecommendedAddressObj();

  // build spore cell
  const id = ccc.hashTypeId(tx.inputs[0], tx.outputs.length);
  ids.push(id);

  const packedData = packRawSporeData(data);
  tx.addOutput(
    {
      lock: to ?? lock,
      type: {
        ...scriptInfo,
        args: id,
      },
    },
    packedData,
  );

  // create spore action
  if (scriptInfo.cobuild) {
    const output = tx.outputs[tx.outputs.length - 1];
    const createAction = assembleCreateSporeAction(
      output,
      packedData,
      scriptInfoHash,
    );
    actions.push(createAction);
  }

  // complete cellDeps
  await tx.addCellDepInfos(signer.client, scriptInfo.cellDeps);

  const action = await prepareCluster(signer, tx, data, clusterMode);
  if (action) {
    actions.push(action);
  }

  return {
    tx: await prepareSporeTransaction(signer, tx, actions),
    id,
  };
}

/**
 * Transfer one Spore cell
 *
 * @param signer who takes the responsibility to balance and sign the transaction
 * @param id sporeId
 * @param to Spore's new owner
 * @param tx the transaction skeleton, if not provided, a new one will be created
 * @param scriptInfoHash the script info hash used in cobuild
 * @returns
 *  - **tx**: a new transaction that contains transferred Spore cells
 */
export async function transferSpore(params: {
  signer: ccc.Signer;
  id: ccc.HexLike;
  to: ccc.ScriptLike;
  tx?: ccc.TransactionLike;
  scriptInfoHash?: ccc.HexLike;
}): Promise<{
  tx: ccc.Transaction;
}> {
  const { signer, id, to, scriptInfoHash } = params;

  // prepare transaction
  const tx = ccc.Transaction.from(params.tx ?? {});

  const { cell: sporeCell, scriptInfo } = await assertSpore(signer.client, id);
  await tx.addCellDepInfos(signer.client, scriptInfo.cellDeps);
  tx.addInput(sporeCell);
  tx.addOutput(
    {
      lock: to,
      type: sporeCell.cellOutput.type,
    },
    sporeCell.outputData,
  );

  const actions = scriptInfo.cobuild
    ? [
        assembleTransferSporeAction(
          sporeCell.cellOutput,
          tx.outputs[tx.outputs.length - 1],
          scriptInfoHash,
        ),
      ]
    : [];

  return {
    tx: await prepareSporeTransaction(signer, tx, actions),
  };
}

/**
 * Melt one Spore cell
 *
 * @param signer who takes the responsibility to balance and sign the transaction
 * @param id sporeId to be melted
 * @param tx the transaction skeleton, if not provided, a new one will be created
 * @param scriptInfoHash the script info hash used in cobuild
 * @returns
 *  - **tx**: a new transaction that contains melted Spore cell
 */
export async function meltSpore(params: {
  signer: ccc.Signer;
  id: ccc.HexLike;
  tx?: ccc.TransactionLike;
  scriptInfoHash?: ccc.HexLike;
}): Promise<{
  tx: ccc.Transaction;
}> {
  const { signer, id, scriptInfoHash } = params;

  // prepare transaction
  const tx = ccc.Transaction.from(params.tx ?? {});

  // build spore cell
  const { cell: sporeCell, scriptInfo } = await assertSpore(signer.client, id);
  await tx.addCellDepInfos(signer.client, scriptInfo.cellDeps);
  tx.addInput(sporeCell);

  const actions = scriptInfo.cobuild
    ? [assembleMeltSporeAction(sporeCell.cellOutput, scriptInfoHash)]
    : [];

  return {
    tx: await prepareSporeTransaction(signer, tx, actions),
  };
}

/**
 * Search on-chain spores under the signer's control, if cluster provided, filter spores belonging to this cluster
 *
 * @param signer the owner of spores
 * @param order the order in creation time of spores
 * @param clusterId the cluster that spores belong to. "" to find public spores
 * @param scriptInfos the deployed script infos of spores
 * @returns specified spore cells
 */
export async function* findSporesBySigner({
  signer,
  clusterId,
  scriptInfos,
  limit,
  order,
}: {
  signer: ccc.Signer;
  order?: "asc" | "desc";
  limit?: number;
  clusterId?: ccc.HexLike;
  scriptInfos?: SporeScriptInfoLike[];
}): AsyncGenerator<{
  cell: ccc.Cell;
  spore: ccc.Cell;
  sporeData: SporeDataView;
  scriptInfo: SporeScriptInfo;
}> {
  for (const scriptInfo of scriptInfos ??
    Object.values(getSporeScriptInfos(signer.client))) {
    if (!scriptInfo) {
      continue;
    }
    for await (const spore of signer.findCells(
      {
        script: {
          ...scriptInfo,
          args: [],
        },
      },
      true,
      order,
      limit,
    )) {
      const sporeData = unpackToRawSporeData(spore.outputData);
      if (
        !clusterId ||
        (clusterId === "" && !sporeData.clusterId) ||
        sporeData.clusterId === ccc.hexFrom(clusterId)
      ) {
        yield {
          cell: spore,
          spore,
          sporeData,
          scriptInfo: SporeScriptInfo.from(scriptInfo),
        };
      }
    }
  }
}


================================================
File: packages/ssri/README.md
================================================
<p align="center">
  <a href="https://app.ckbccc.com/">
    <img alt="Logo" src="https://raw.githubusercontent.com/ckb-devrel/ccc/master/assets/logoAndText.svg" style="height: 8rem; max-width: 90%; padding: 0.5rem 0;" />
  </a>
</p>

<h1 align="center" style="font-size: 48px;">
  CCC's Support for SSRI
</h1>

<p align="center">
  <a href="https://www.npmjs.com/package/@ckb-ccc/ssri"><img
    alt="NPM Version" src="https://img.shields.io/npm/v/%40ckb-ccc%2Fssri"
  /></a>
  <img alt="GitHub commit activity" src="https://img.shields.io/github/commit-activity/m/ckb-devrel/ccc" />
  <img alt="GitHub last commit" src="https://img.shields.io/github/last-commit/ckb-devrel/ccc/master" />
  <img alt="GitHub branch check runs" src="https://img.shields.io/github/check-runs/ckb-devrel/ccc/master" />
  <a href="https://live.ckbccc.com/"><img
    alt="Playground" src="https://img.shields.io/website?url=https%3A%2F%2Flive.ckbccc.com%2F&label=Playground"
  /></a>
  <a href="https://app.ckbccc.com/"><img
    alt="App" src="https://img.shields.io/website?url=https%3A%2F%2Fapp.ckbccc.com%2F&label=App"
  /></a>
  <a href="https://docs.ckbccc.com/"><img
    alt="Docs" src="https://img.shields.io/website?url=https%3A%2F%2Fdocs.ckbccc.com%2F&label=Docs"
  /></a>
</p>

<p align="center">
  CCC - CKBers' Codebase is a one-stop solution for your CKB JS/TS ecosystem development.
  <br />
  Empower yourself with CCC to discover the unlimited potential of CKB.
  <br />
  Interoperate with wallets from different chain ecosystems.
  <br />
  Fully enabling CKB's Turing completeness and cryptographic freedom power.
</p>

### Script-Sourced Rich Information

Read more about SSRI on [[EN/CN] Script-Sourced Rich Information - 来源于 Script 的富信息](https://talk.nervos.org/t/en-cn-script-sourced-rich-information-script/8256).

NOTE: This is the base package for interaction with SSRI-Compliant scripts.

If you are looking for UDT support, please refer directly to [@ckb-ccc/udt](https://www.npmjs.com/package/@ckb-ccc/udt) which supports both SSRI-compliant UDT and falling back to xUDT.

### Related Projects

- [`ssri-server`](https://github.com/ckb-devrel/ssri-server): Server for calling SSRI methods.
- [`ckb_ssri_sdk`](https://github.com/ckb-devrel/ckb_ssri_sdk): A toolkit to help developers build SSRI-Compliant scripts on CKB with production level example script `pausable-udt` for reference.

<h3 align="center">
  Read more about CCC on <a href="https://docs.ckbccc.com">our website</a> or <a href="https://github.com/ckb-devrel/ccc">GitHub Repo</a>.
</h3>


================================================
File: packages/ssri/CHANGELOG.md
================================================
# @ckb-ccc/ssri

## 0.2.1

### Patch Changes

- Updated dependencies [[`28c211d`](https://github.com/ckb-devrel/ccc/commit/28c211d839a2d2305eca56e82ba7da144aa3df4a)]:
  - @ckb-ccc/core@1.5.0

## 0.2.0

### Minor Changes

- [`e4ea183`](https://github.com/ckb-devrel/ccc/commit/e4ea18359675877511550ac0b28f207550f907e4) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(ssri): Trait.tryRun to handle expected error

### Patch Changes

- [`52ef11b`](https://github.com/ckb-devrel/ccc/commit/52ef11baa7bde8a73467683f5c44a863190aa1f1) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(ssri): Trait.version() should throw if byteLength mismatch

- Updated dependencies [[`3fdb2c4`](https://github.com/ckb-devrel/ccc/commit/3fdb2c477d0b2766b231e436b8f396f047b02634), [`f429087`](https://github.com/ckb-devrel/ccc/commit/f4290874dfab3fe58844e5169673c5d47bda64e3)]:
  - @ckb-ccc/core@1.4.0

## 0.1.1

### Patch Changes

- [#134](https://github.com/ckb-devrel/ccc/pull/134) [`ecb9059`](https://github.com/ckb-devrel/ccc/commit/ecb9059e54f8a2afacda45e58a961532bf1107a1) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(ssri): ssri.Trait class should not be abstract

- [`092c0a9`](https://github.com/ckb-devrel/ccc/commit/092c0a9e30ece8a8767fa59d23707833dce015eb) Thanks [@Hanssen0](https://github.com/Hanssen0)! - refactor(ssri): error types

- Updated dependencies [[`a48cccf`](https://github.com/ckb-devrel/ccc/commit/a48cccfae3ce6b3456a5eb863f207e7e5a6e568f)]:
  - @ckb-ccc/core@1.3.1

## 0.1.0

### Minor Changes

- [#130](https://github.com/ckb-devrel/ccc/pull/130) [`8c97c85`](https://github.com/ckb-devrel/ccc/commit/8c97c851db4a2d940c7e59116ca7620cfd0afae1) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: SSRI & UDT SDK

### Patch Changes

- Updated dependencies [[`4dbf4fd`](https://github.com/ckb-devrel/ccc/commit/4dbf4fd8021cf14d05282706a7667ea7d108fb09), [`4c76f9e`](https://github.com/ckb-devrel/ccc/commit/4c76f9e2a93a226fcfc4c32a5378bb531bfff08f), [`c2c4c26`](https://github.com/ckb-devrel/ccc/commit/c2c4c264e04461948e4b913b2f22054e6032ddc8), [`b6a73fa`](https://github.com/ckb-devrel/ccc/commit/b6a73fa9628ebdff51cb8f246309654cd53e36f2), [`8c97c85`](https://github.com/ckb-devrel/ccc/commit/8c97c851db4a2d940c7e59116ca7620cfd0afae1)]:
  - @ckb-ccc/core@1.3.0


================================================
File: packages/ssri/eslint.config.mjs
================================================
// @ts-check

import eslint from "@eslint/js";
import eslintPluginPrettierRecommended from "eslint-plugin-prettier/recommended";
import tseslint from "typescript-eslint";

import { dirname } from "path";
import { fileURLToPath } from "url";

export default [
  ...tseslint.config({
    files: ["**/*.ts"],
    extends: [
      eslint.configs.recommended,
      ...tseslint.configs.recommendedTypeChecked,
    ],
    rules: {
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          args: "all",
          argsIgnorePattern: "^_",
          caughtErrors: "all",
          caughtErrorsIgnorePattern: "^_",
          destructuredArrayIgnorePattern: "^_",
          varsIgnorePattern: "^_",
          ignoreRestSiblings: true,
        },
      ],
      "@typescript-eslint/unbound-method": ["error", { ignoreStatic: true }],
      "@typescript-eslint/no-unsafe-member-access": "off",
      "@typescript-eslint/require-await": "off",
      "no-empty": "off",
      "prefer-const": [
        "error",
        { ignoreReadBeforeAssign: true, destructuring: "all" },
      ],
    },
    languageOptions: {
      parserOptions: {
        project: true,
        tsconfigRootDir: dirname(fileURLToPath(import.meta.url)),
      },
    },
  }),
  eslintPluginPrettierRecommended,
];


================================================
File: packages/ssri/jest.config.js
================================================
/** @type {import('ts-jest').JestConfigWithTsJest} */
module.exports = {
  preset: "ts-jest",
  testEnvironment: "node",
};


================================================
File: packages/ssri/package.json
================================================
{
  "name": "@ckb-ccc/ssri",
  "version": "0.2.1",
  "description": "SSRI",
  "author": "Alive24 <xct24@live.com>",
  "license": "MIT",
  "private": false,
  "homepage": "https://github.com/ckb-devrel/ccc",
  "repository": {
    "type": "git",
    "url": "git://github.com/ckb-devrel/ccc.git"
  },
  "main": "./dist.commonjs/index.js",
  "module": "./dist/index.js",
  "exports": {
    ".": {
      "import": "./dist/index.js",
      "default": "./dist.commonjs/index.js"
    },
    "./barrel": {
      "import": "./dist/barrel.js",
      "default": "./dist.commonjs/barrel.js"
    }
  },
  "scripts": {
    "test": "jest",
    "build": "rimraf ./dist && rimraf ./dist.commonjs && tsc && tsc --project tsconfig.commonjs.json && copyfiles -u 2 misc/basedirs/**/* .",
    "lint": "eslint ./src",
    "format": "prettier --write . && eslint --fix ./src"
  },
  "devDependencies": {
    "@eslint/js": "^9.1.1",
    "@types/jest": "^29.5.12",
    "@types/node": "^22.10.2",
    "copyfiles": "^2.4.1",
    "eslint": "^9.1.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.1.3",
    "jest": "^29.7.0",
    "prettier": "^3.2.5",
    "prettier-plugin-organize-imports": "^3.2.4",
    "rimraf": "^5.0.5",
    "ts-jest": "^29.1.4",
    "typescript": "^5.4.5",
    "typescript-eslint": "^7.7.0"
  },
  "publishConfig": {
    "access": "public"
  },
  "dependencies": {
    "@ckb-ccc/core": "workspace:*"
  }
}


================================================
File: packages/ssri/tsconfig.base.json
================================================
{
  "compilerOptions": {
    "target": "es2020",
    "incremental": true,
    "allowJs": true,
    "importHelpers": false,
    "declaration": true,
    "declarationMap": true,
    "experimentalDecorators": true,
    "useDefineForClassFields": false,
    "esModuleInterop": true,
    "strict": true,
    "noImplicitAny": true,
    "strictBindCallApply": true,
    "strictNullChecks": true,
    "alwaysStrict": true,
    "noFallthroughCasesInSwitch": true,
    "forceConsistentCasingInFileNames": true,
    "skipLibCheck": true
  },
  "include": ["src/**/*"]
}


================================================
File: packages/ssri/tsconfig.commonjs.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "NodeNext",
    "moduleResolution": "NodeNext",
    "outDir": "./dist.commonjs"
  }
}


================================================
File: packages/ssri/tsconfig.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "ESNext",
    "moduleResolution": "Bundler",
    "outDir": "./dist",
  }
}


================================================
File: packages/ssri/typedoc.json
================================================
{
  "$schema": "https://typedoc.org/schema.json",
  "entryPoints": ["./src/index.ts"],
  "extends": ["../../typedoc.base.json"],
  "name": "@ckb-ccc ssri"
}


================================================
File: packages/ssri/.npmignore
================================================
node_modules/
misc/

*test.js
*test.ts
*test.d.ts
*test.d.ts.map
*spec.js
*spec.ts
*spec.d.ts
*spec.d.ts.map

tsconfig.json
tsconfig.*.json
eslint.config.mjs
.prettierrc
.prettierignore

tsconfig.tsbuildinfo
tsconfig.*.tsbuildinfo
.github/


================================================
File: packages/ssri/.prettierignore
================================================
node_modules/

dist/
dist.commonjs/

.npmignore
.prettierrc
tsconfig.json
eslint.config.mjs
.prettierrc

tsconfig.tsbuildinfo
.github/


================================================
File: packages/ssri/.prettierrc
================================================
{
  "singleQuote": false,
  "trailingComma": "all",
  "plugins": ["prettier-plugin-organize-imports"]
}


================================================
File: packages/ssri/misc/basedirs/dist/package.json
================================================
{
  "type": "module"
}


================================================
File: packages/ssri/misc/basedirs/dist.commonjs/package.json
================================================
{
  "type": "commonjs"
}


================================================
File: packages/ssri/src/barrel.ts
================================================
export * from "./executor.js";
export * from "./trait.js";
export * from "./utils.js";


================================================
File: packages/ssri/src/executor.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { cccA } from "@ckb-ccc/core/advanced";
import { getMethodPath } from "./utils.js";

export type ContextTransaction = {
  script?: ccc.ScriptLike | null;
  cell?: Omit<ccc.CellLike, "outPoint"> | null;
  tx: ccc.TransactionLike;
};

export type ContextCell = {
  script?: ccc.ScriptLike | null;
  cell: Omit<ccc.CellLike, "outPoint">;
  tx?: undefined | null;
};

export type ContextScript = {
  script: ccc.ScriptLike;
  cell?: undefined | null;
  tx?: undefined | null;
};

export class ExecutorErrorUnknown extends Error {
  constructor(msg?: string) {
    super(msg);
  }
}

export class ExecutorErrorExecutionFailed extends Error {
  constructor(msg?: string) {
    super(msg);
  }
}

export class ExecutorErrorDecode extends Error {
  constructor(msg?: string) {
    super(msg);
  }
}

export type ContextCode =
  | undefined
  | {
      script?: undefined | null;
      cell?: undefined | null;
      tx?: undefined | null;
    };

export class ExecutorResponse<T> {
  constructor(
    public readonly res: T,
    public readonly cellDeps: ccc.OutPoint[],
  ) {}

  static new<T>(res: T, cellDeps?: ccc.OutPointLike[] | null) {
    return new ExecutorResponse(res, cellDeps?.map(ccc.OutPoint.from) ?? []);
  }

  map<U>(fn: (res: T) => U): ExecutorResponse<U> {
    try {
      return new ExecutorResponse(fn(this.res), this.cellDeps);
    } catch (err) {
      throw new ExecutorErrorDecode(JSON.stringify(err));
    }
  }
}

/**
 * Represents an SSRI executor.
 */
export abstract class Executor {
  abstract runScript(
    codeOutPoint: ccc.OutPointLike,
    method: string,
    args: ccc.HexLike[],
    context?: ContextCode | ContextScript | ContextCell | ContextTransaction,
  ): Promise<ExecutorResponse<ccc.Hex>>;

  async runScriptTry(
    codeOutPoint: ccc.OutPointLike,
    method: string,
    args: ccc.HexLike[],
    context?: ContextCode | ContextScript | ContextCell | ContextTransaction,
  ): Promise<ExecutorResponse<ccc.Hex> | undefined> {
    try {
      return await this.runScript(codeOutPoint, method, args, context);
    } catch (err) {
      if (err instanceof ExecutorErrorExecutionFailed) {
        return undefined;
      }
      throw err;
    }
  }
}

export class ExecutorJsonRpc extends Executor {
  public readonly requestor: ccc.RequestorJsonRpc;

  /**
   * Creates an instance of SSRI executor through Json RPC.
   * @param {string} [url] - The external server URL.
   */
  constructor(
    url: string,
    config?: ccc.RequestorJsonRpcConfig & { requestor?: ccc.RequestorJsonRpc },
  ) {
    super();

    this.requestor =
      config?.requestor ??
      new ccc.RequestorJsonRpc(url, config, (errAny) => {
        if (
          typeof errAny !== "object" ||
          errAny === null ||
          !("code" in errAny) ||
          typeof errAny.code !== "number"
        ) {
          throw new ExecutorErrorUnknown(JSON.stringify(errAny));
        }

        if (errAny.code === 1003 || errAny.code === 1004) {
          if ("message" in errAny && typeof errAny.message === "string") {
            throw new ExecutorErrorExecutionFailed(errAny.message);
          }
          throw new ExecutorErrorExecutionFailed();
        }

        if ("message" in errAny && typeof errAny.message === "string") {
          throw new ExecutorErrorUnknown(errAny.message);
        }
        throw new ExecutorErrorUnknown();
      });
  }

  get url() {
    return this.requestor.url;
  }

  /* Calls a method on the SSRI executor through SSRI Server.
   * @param codeOutPoint - The code OutPoint.
   * @param method - The SSRI method.
   * @param args - The arguments for the method.
   * @param context - The SSRI context for the method.
   * @param context.script - The script level parameters.
   * @param context.cell - The cell level parameters. Take precedence over script.
   * @param context.transaction - The transaction level parameters. Take precedence over cell.
   * @returns The result of the call.
   */
  async runScript(
    codeOutPoint: ccc.OutPointLike,
    method: string,
    args: ccc.HexLike[],
    context?: ContextCode | ContextScript | ContextCell | ContextTransaction,
  ): Promise<ExecutorResponse<ccc.Hex>> {
    const code = ccc.OutPoint.from(codeOutPoint);
    const [rpcMethod, rpcContext] = (() => {
      if (context?.tx) {
        const tx = ccc.Transaction.from(context.tx);
        return [
          "run_script_level_transaction",
          [
            {
              inner: cccA.JsonRpcTransformers.transactionFrom(tx),
              hash: tx.hash(),
            },
          ],
        ];
      }
      if (context?.cell) {
        return [
          "run_script_level_cell",
          [
            {
              cell_output: cccA.JsonRpcTransformers.cellOutputFrom(
                ccc.CellOutput.from(context.cell.cellOutput),
              ),
              hex_data: ccc.hexFrom(context.cell.outputData),
            },
          ],
        ];
      }
      if (context?.script) {
        return [
          "run_script_level_script",
          [cccA.JsonRpcTransformers.scriptFrom(context.script)],
        ];
      }
      return ["run_script_level_code", []];
    })();

    const { content, cell_deps } = (await this.requestor.request(rpcMethod, [
      code.txHash,
      Number(code.index),
      [getMethodPath(method), ...args.map(ccc.hexFrom)],
      ...rpcContext,
    ])) as { content: ccc.Hex; cell_deps: cccA.JsonRpcOutPoint[] };

    return ExecutorResponse.new(
      content,
      cell_deps.map(cccA.JsonRpcTransformers.outPointTo),
    );
  }
}


================================================
File: packages/ssri/src/index.ts
================================================
export * as ssri from "./barrel.js";


================================================
File: packages/ssri/src/trait.ts
================================================
import { ccc } from "@ckb-ccc/core";
import {
  Executor,
  ExecutorErrorDecode,
  ExecutorErrorExecutionFailed,
  ExecutorResponse,
} from "./executor.js";
import { getMethodPath } from "./utils.js";

/**
 * Class representing an SSRI trait. Should be used as the base of all SSRI traits.
 */
export class Trait {
  public readonly code: ccc.OutPoint;
  public readonly executor?: Executor;

  /**
   * Creates an instance of SSRI trait.
   * @param code - The cell dependency.
   * @param executor - The SSRI executor instance.
   */
  constructor(code: ccc.OutPointLike, executor?: Executor | null) {
    this.code = ccc.OutPoint.from(code);
    this.executor = executor ?? undefined;
  }

  static async tryRun<T>(
    call: Promise<ExecutorResponse<T>>,
  ): Promise<ExecutorResponse<T | undefined>> {
    try {
      return await call;
    } catch (e) {
      if (
        e instanceof ExecutorErrorExecutionFailed ||
        e instanceof ExecutorErrorDecode
      ) {
        return ExecutorResponse.new(undefined);
      }
      throw e;
    }
  }

  async tryRun<T>(
    call: Promise<ExecutorResponse<T>>,
  ): Promise<ExecutorResponse<T | undefined>> {
    return Trait.tryRun(call);
  }

  assertExecutor() {
    if (!this.executor) {
      throw new Error("SSRI executor is not set");
    }

    return this.executor;
  }

  /**
   * Retrieves a list of methods.
   * @param offset - The offset for the methods.
   * @param limit - The limit for the methods.
   * @returns {Promise<Bytes[]>} A promise that resolves to a list of methods.
   */
  async getMethods(
    offset: ccc.NumLike = 0,
    limit: ccc.NumLike = 0,
  ): Promise<ExecutorResponse<ccc.Hex[]>> {
    const res = await this.assertExecutor().runScript(
      this.code,
      "SSRI.get_methods",
      [ccc.numToBytes(offset ?? 0, 8), ccc.numToBytes(limit ?? 0, 8)],
    );

    return res.map((res) => ccc.mol.Byte8Vec.decode(res));
  }

  /**
   * Checks if the specified methods exist.
   * @param methodNames - The methods to check.
   * @returns A promise that resolves to an array of booleans indicating if methods exist.
   */
  async hasMethods(
    methodNames: string[],
    extraMethodPaths?: ccc.HexLike[],
  ): Promise<ExecutorResponse<boolean[]>> {
    const methodPaths = ccc.mol.Byte8Vec.encode(
      methodNames
        .map(getMethodPath)
        .concat(extraMethodPaths?.map(ccc.hexFrom) ?? []),
    );
    const res = await this.assertExecutor().runScript(
      this.code,
      "SSRI.has_methods",
      [methodPaths],
    );
    return res.map((res) => ccc.mol.BoolVec.decode(res));
  }

  /**
   * Retrieves the version of the trait.
   * @returns A promise that resolves to the version number.
   */
  async version(): Promise<ExecutorResponse<ccc.Num>> {
    const res = await this.assertExecutor().runScript(
      this.code,
      "SSRI.version",
      [],
    );

    return res.map((res) => {
      if (res.length !== 4) {
        throw new Error("Invalid U8");
      }
      return ccc.numFrom(res);
    });
  }
}


================================================
File: packages/ssri/src/utils.ts
================================================
import { ccc } from "@ckb-ccc/core";

export function getMethodPath(method: string): ccc.Hex {
  return ccc.hashCkb(ccc.bytesFrom(method, "utf8")).slice(0, 18) as ccc.Hex;
}


================================================
File: packages/udt/README.md
================================================
<p align="center">
  <a href="https://app.ckbccc.com/">
    <img alt="Logo" src="https://raw.githubusercontent.com/ckb-devrel/ccc/master/assets/logoAndText.svg" style="height: 8rem; max-width: 90%; padding: 0.5rem 0;" />
  </a>
</p>

<h1 align="center" style="font-size: 48px;">
  CCC's Support for User Defined Token (UDT)
</h1>

<p align="center">
  <a href="https://www.npmjs.com/package/@ckb-ccc/udt"><img
    alt="NPM Version" src="https://img.shields.io/npm/v/%40ckb-ccc%2Fudt"
  /></a>
  <img alt="GitHub commit activity" src="https://img.shields.io/github/commit-activity/m/ckb-devrel/ccc" />
  <img alt="GitHub last commit" src="https://img.shields.io/github/last-commit/ckb-devrel/ccc/master" />
  <img alt="GitHub branch check runs" src="https://img.shields.io/github/check-runs/ckb-devrel/ccc/master" />
  <a href="https://live.ckbccc.com/"><img
    alt="Playground" src="https://img.shields.io/website?url=https%3A%2F%2Flive.ckbccc.com%2F&label=Playground"
  /></a>
  <a href="https://app.ckbccc.com/"><img
    alt="App" src="https://img.shields.io/website?url=https%3A%2F%2Fapp.ckbccc.com%2F&label=App"
  /></a>
  <a href="https://docs.ckbccc.com/"><img
    alt="Docs" src="https://img.shields.io/website?url=https%3A%2F%2Fdocs.ckbccc.com%2F&label=Docs"
  /></a>
</p>

<p align="center">
  CCC - CKBers' Codebase is a one-stop solution for your CKB JS/TS ecosystem development.
  <br />
  Empower yourself with CCC to discover the unlimited potential of CKB.
  <br />
  Interoperate with wallets from different chain ecosystems.
  <br />
  Fully enabling CKB's Turing completeness and cryptographic freedom power.
</p>

## Quick Start

- At the moment, `UDT` and `UDTPausable` from `@ckb-ccc/udt` are fully supported through SSRI. In the future, there will be built in TypeScript generation directly based on the Rust source code on compilation.
- To instantiate a `UDT` script compliant with SSRI, you can provide the SSRI server url and also specify the OutPoint of the script code.
- You can also instantiate a `UDTPausable` script or other scripts that extends from `UDT`.

```ts
import { Server } from "@ckb-ccc/ssri";
import { Udt, UdtPausable } from "@ckb-ccc/udt";

const { signer } = useApp();
const server = new Server("https://localhost:9090");

const udt = new Udt(
  server,
  {
    txHash: "0x...",
    index: 0,
  },
  {
    codeHash: "0x...",
    hashType: "type",
    args: "0x...",
  },
);

const udtPausable = new UdtPausable(
  server,
  {
    txHash: "0x...",
    index: 0,
  },
  {
    codeHash: "0x...",
    hashType: "type",
    args: "0x...",
  },
);
```

You can directly call the methods in the script:

```ts
const { res: udtSymbol } = await udt.symbol();
const { res: pauseList } = await udtPausable.enumeratePaused();
```

Some of the methods can return a `ccc.Transaction`. For example, you can call `transfer` with the following params:

```ts
const { script: to } = await signer.getRecommendedAddressObj();

const { res: transferTx } = await udt.transfer(signer, [{ to, amount: 100 }]);
const completedTx = await udt.completeUdtBy(transferTx, signer);

await completedTx.completeInputsByCapacity(signer);
await completedTx.completeFeeBy(signer);
const transferTxHash = await signer.sendTransaction(completedTx);
```

<h3 align="center">
  Read more about CCC on <a href="https://docs.ckbccc.com">our website</a> or <a href="https://github.com/ckb-devrel/ccc">GitHub Repo</a>.
</h3>


================================================
File: packages/udt/CHANGELOG.md
================================================
# @ckb-ccc/udt

## 0.1.3

### Patch Changes

- Updated dependencies [[`28c211d`](https://github.com/ckb-devrel/ccc/commit/28c211d839a2d2305eca56e82ba7da144aa3df4a)]:
  - @ckb-ccc/core@1.5.0
  - @ckb-ccc/ssri@0.2.1

## 0.1.2

### Patch Changes

- Updated dependencies [[`3fdb2c4`](https://github.com/ckb-devrel/ccc/commit/3fdb2c477d0b2766b231e436b8f396f047b02634), [`52ef11b`](https://github.com/ckb-devrel/ccc/commit/52ef11baa7bde8a73467683f5c44a863190aa1f1), [`f429087`](https://github.com/ckb-devrel/ccc/commit/f4290874dfab3fe58844e5169673c5d47bda64e3), [`e4ea183`](https://github.com/ckb-devrel/ccc/commit/e4ea18359675877511550ac0b28f207550f907e4)]:
  - @ckb-ccc/core@1.4.0
  - @ckb-ccc/ssri@0.2.0

## 0.1.1

### Patch Changes

- Updated dependencies [[`ecb9059`](https://github.com/ckb-devrel/ccc/commit/ecb9059e54f8a2afacda45e58a961532bf1107a1), [`a48cccf`](https://github.com/ckb-devrel/ccc/commit/a48cccfae3ce6b3456a5eb863f207e7e5a6e568f), [`092c0a9`](https://github.com/ckb-devrel/ccc/commit/092c0a9e30ece8a8767fa59d23707833dce015eb)]:
  - @ckb-ccc/ssri@0.1.1
  - @ckb-ccc/core@1.3.1

## 0.1.0

### Minor Changes

- [#130](https://github.com/ckb-devrel/ccc/pull/130) [`8c97c85`](https://github.com/ckb-devrel/ccc/commit/8c97c851db4a2d940c7e59116ca7620cfd0afae1) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: SSRI & UDT SDK

### Patch Changes

- Updated dependencies [[`4dbf4fd`](https://github.com/ckb-devrel/ccc/commit/4dbf4fd8021cf14d05282706a7667ea7d108fb09), [`4c76f9e`](https://github.com/ckb-devrel/ccc/commit/4c76f9e2a93a226fcfc4c32a5378bb531bfff08f), [`c2c4c26`](https://github.com/ckb-devrel/ccc/commit/c2c4c264e04461948e4b913b2f22054e6032ddc8), [`b6a73fa`](https://github.com/ckb-devrel/ccc/commit/b6a73fa9628ebdff51cb8f246309654cd53e36f2), [`8c97c85`](https://github.com/ckb-devrel/ccc/commit/8c97c851db4a2d940c7e59116ca7620cfd0afae1)]:
  - @ckb-ccc/core@1.3.0
  - @ckb-ccc/ssri@0.1.0


================================================
File: packages/udt/eslint.config.mjs
================================================
// @ts-check

import eslint from "@eslint/js";
import eslintPluginPrettierRecommended from "eslint-plugin-prettier/recommended";
import tseslint from "typescript-eslint";

import { dirname } from "path";
import { fileURLToPath } from "url";

export default [
  ...tseslint.config({
    files: ["**/*.ts"],
    extends: [
      eslint.configs.recommended,
      ...tseslint.configs.recommendedTypeChecked,
    ],
    rules: {
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          args: "all",
          argsIgnorePattern: "^_",
          caughtErrors: "all",
          caughtErrorsIgnorePattern: "^_",
          destructuredArrayIgnorePattern: "^_",
          varsIgnorePattern: "^_",
          ignoreRestSiblings: true,
        },
      ],
      "@typescript-eslint/unbound-method": ["error", { ignoreStatic: true }],
      "@typescript-eslint/no-unsafe-member-access": "off",
      "@typescript-eslint/require-await": "off",
      "no-empty": "off",
      "prefer-const": [
        "error",
        { ignoreReadBeforeAssign: true, destructuring: "all" },
      ],
    },
    languageOptions: {
      parserOptions: {
        project: true,
        tsconfigRootDir: dirname(fileURLToPath(import.meta.url)),
      },
    },
  }),
  eslintPluginPrettierRecommended,
];


================================================
File: packages/udt/jest.config.js
================================================
/** @type {import('ts-jest').JestConfigWithTsJest} */
module.exports = {
  preset: "ts-jest",
  testEnvironment: "node",
};


================================================
File: packages/udt/package.json
================================================
{
  "name": "@ckb-ccc/udt",
  "version": "0.1.3",
  "description": "UDT",
  "author": "Alive24 <xct24@live.com>",
  "license": "MIT",
  "private": false,
  "homepage": "https://github.com/ckb-devrel/ccc",
  "repository": {
    "type": "git",
    "url": "git://github.com/ckb-devrel/ccc.git"
  },
  "main": "./dist.commonjs/index.js",
  "module": "./dist/index.js",
  "exports": {
    ".": {
      "import": "./dist/index.js",
      "default": "./dist.commonjs/index.js"
    },
    "./advanced": {
      "import": "./dist/advanced.js",
      "default": "./dist.commonjs/advanced.js"
    }
  },
  "scripts": {
    "test": "jest",
    "build": "rimraf ./dist && rimraf ./dist.commonjs && tsc && tsc --project tsconfig.commonjs.json && copyfiles -u 2 misc/basedirs/**/* .",
    "lint": "eslint ./src",
    "format": "prettier --write . && eslint --fix ./src"
  },
  "devDependencies": {
    "@eslint/js": "^9.1.1",
    "@types/jest": "^29.5.12",
    "@types/node": "^22.10.2",
    "copyfiles": "^2.4.1",
    "eslint": "^9.1.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.1.3",
    "jest": "^29.7.0",
    "prettier": "^3.2.5",
    "prettier-plugin-organize-imports": "^3.2.4",
    "rimraf": "^5.0.5",
    "ts-jest": "^29.1.4",
    "typescript": "^5.4.5",
    "typescript-eslint": "^7.7.0"
  },
  "publishConfig": {
    "access": "public"
  },
  "dependencies": {
    "@ckb-ccc/core": "workspace:*",
    "@ckb-ccc/ssri": "workspace:*"
  }
}


================================================
File: packages/udt/tsconfig.base.json
================================================
{
  "compilerOptions": {
    "target": "es2020",
    "incremental": true,
    "allowJs": true,
    "importHelpers": false,
    "declaration": true,
    "declarationMap": true,
    "experimentalDecorators": true,
    "useDefineForClassFields": false,
    "esModuleInterop": true,
    "strict": true,
    "noImplicitAny": true,
    "strictBindCallApply": true,
    "strictNullChecks": true,
    "alwaysStrict": true,
    "noFallthroughCasesInSwitch": true,
    "forceConsistentCasingInFileNames": true,
    "skipLibCheck": true
  },
  "include": ["src/**/*"]
}


================================================
File: packages/udt/tsconfig.commonjs.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "NodeNext",
    "moduleResolution": "NodeNext",
    "outDir": "./dist.commonjs"
  }
}


================================================
File: packages/udt/tsconfig.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "ESNext",
    "moduleResolution": "Bundler",
    "outDir": "./dist",
  }
}


================================================
File: packages/udt/typedoc.json
================================================
{
  "$schema": "https://typedoc.org/schema.json",
  "entryPoints": ["./src/index.ts"],
  "extends": ["../../typedoc.base.json"],
  "name": "@ckb-ccc udt"
}


================================================
File: packages/udt/.npmignore
================================================
node_modules/
misc/

*test.js
*test.ts
*test.d.ts
*test.d.ts.map
*spec.js
*spec.ts
*spec.d.ts
*spec.d.ts.map

tsconfig.json
tsconfig.*.json
eslint.config.mjs
.prettierrc
.prettierignore

tsconfig.tsbuildinfo
tsconfig.*.tsbuildinfo
.github/


================================================
File: packages/udt/.prettierignore
================================================
node_modules/

dist/
dist.commonjs/

.npmignore
.prettierrc
tsconfig.json
eslint.config.mjs
.prettierrc

tsconfig.tsbuildinfo
.github/


================================================
File: packages/udt/.prettierrc
================================================
{
  "singleQuote": false,
  "trailingComma": "all",
  "plugins": ["prettier-plugin-organize-imports"]
}


================================================
File: packages/udt/misc/basedirs/dist/package.json
================================================
{
  "type": "module"
}


================================================
File: packages/udt/misc/basedirs/dist.commonjs/package.json
================================================
{
  "type": "commonjs"
}


================================================
File: packages/udt/src/barrel.ts
================================================
export * from "./udt/index.js";
export * from "./udtPausable/index.js";


================================================
File: packages/udt/src/index.ts
================================================
export * from "./barrel.js";
export * as udt from "./barrel.js";


================================================
File: packages/udt/src/udt/index.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { ssri } from "@ckb-ccc/ssri";

/**
 * Represents a User Defined Token (UDT) script compliant with the SSRI protocol.
 *
 * This class provides a comprehensive implementation for interacting with User Defined Tokens,
 * supporting various token operations such as querying metadata, checking balances, and performing transfers.
 * It supports both SSRI-compliant UDTs and legacy sUDT/xUDT standard tokens.
 *
 * @public
 * @category Blockchain
 * @category Token
 */
export class Udt extends ssri.Trait {
  public readonly script: ccc.Script;

  /**
   * Constructs a new UDT (User Defined Token) script instance.
   * By default it is a SSRI-compliant UDT. By providing `xudtType`, it is compatible with the legacy xUDT.
   *
   * @param executor - The SSRI executor instance.
   * @param code - The script code cell of the UDT.
   * @param script - The type script of the UDT.
   * @example
   * ```typescript
   * const udt = new Udt(executor, code, script);
   * ```
   */
  constructor(
    code: ccc.OutPointLike,
    script: ccc.ScriptLike,
    config?: {
      executor?: ssri.Executor | null;
    } | null,
  ) {
    super(code, config?.executor);
    this.script = ccc.Script.from(script);
  }

  /**
   * Retrieves the human-readable name of the User Defined Token.
   *
   * @returns A promise resolving to the token's name.
   */
  async name(
    context?: ssri.ContextScript,
  ): Promise<ssri.ExecutorResponse<string | undefined>> {
    if (this.executor) {
      const res = await this.executor.runScriptTry(this.code, "UDT.name", [], {
        script: this.script,
        ...context,
      });
      if (res) {
        return res.map((res) => ccc.bytesTo(res, "utf8"));
      }
    }

    return ssri.ExecutorResponse.new(undefined);
  }

  /**
   * Retrieves the symbol of the UDT.
   * @returns The symbol of the UDT.
   */
  async symbol(
    context?: ssri.ContextScript,
  ): Promise<ssri.ExecutorResponse<string | undefined>> {
    if (this.executor) {
      const res = await this.executor.runScriptTry(
        this.code,
        "UDT.symbol",
        [],
        {
          script: this.script,
          ...context,
        },
      );
      if (res) {
        return res.map((res) => ccc.bytesTo(res, "utf8"));
      }
    }

    return ssri.ExecutorResponse.new(undefined);
  }

  /**
   * Retrieves the decimals of the UDT.
   * @returns The decimals of the UDT.
   */
  async decimals(
    context?: ssri.ContextScript,
  ): Promise<ssri.ExecutorResponse<ccc.Num | undefined>> {
    if (this.executor) {
      const res = await this.executor.runScriptTry(
        this.code,
        "UDT.decimals",
        [],
        {
          script: this.script,
          ...context,
        },
      );
      if (res) {
        return res.map((res) => ccc.numFromBytes(res));
      }
    }

    return ssri.ExecutorResponse.new(undefined);
  }

  /**
   * Retrieves the icon of the UDT
   * @returns The icon of the UDT.
   */
  async icon(
    context?: ssri.ContextScript,
  ): Promise<ssri.ExecutorResponse<string | undefined>> {
    if (this.executor) {
      const res = await this.executor.runScriptTry(this.code, "UDT.icon", [], {
        script: this.script,
        ...context,
      });
      if (res) {
        return res.map((res) => ccc.bytesTo(res, "utf8"));
      }
    }

    return ssri.ExecutorResponse.new(undefined);
  }

  /**
   * Transfers UDT to specified addresses.
   * @param tx - Transfer on the basis of an existing transaction to achieve combined actions. If not provided, a new transaction will be created.
   * @param transfers - The array of transfers.
   * @param transfers.to - The receiver of token.
   * @param transfers.amount - The amount of token to the receiver.
   * @returns The transaction result.
   * @tag Mutation - This method represents a mutation of the onchain state and will return a transaction object.
   * @example
   * ```typescript
   * const { script: change } = await signer.getRecommendedAddressObj();
   * const { script: to } = await ccc.Address.fromString(receiver, signer.client);
   *
   * const udt = new Udt(
   *   {
   *     txHash: "0x4e2e832e0b1e7b5994681b621b00c1e65f577ee4b440ef95fa07db9bb3d50269",
   *     index: 0,
   *   },
   *   {
   *     codeHash: "0xcc9dc33ef234e14bc788c43a4848556a5fb16401a04662fc55db9bb201987037",
   *     hashType: "type",
   *     args: "0x71fd1985b2971a9903e4d8ed0d59e6710166985217ca0681437883837b86162f"
   *   },
   * );
   *
   * const { res: tx } = await udtTrait.transfer(
   *   signer,
   *   [{ to, amount: 100 }],
   * );
   *
   * const completedTx = udt.completeUdtBy(tx, signer);
   * await completedTx.completeInputsByCapacity(signer);
   * await completedTx.completeFeeBy(signer);
   * const transferTxHash = await signer.sendTransaction(completedTx);
   * ```
   */
  async transfer(
    signer: ccc.Signer,
    transfers: {
      to: ccc.ScriptLike;
      amount: ccc.NumLike;
    }[],
    tx?: ccc.TransactionLike | null,
  ): Promise<ssri.ExecutorResponse<ccc.Transaction>> {
    let resTx;
    if (this.executor) {
      const txReq = ccc.Transaction.from(tx ?? {});
      await txReq.completeInputsAtLeastOne(signer);

      const res = await this.executor.runScriptTry(
        this.code,
        "UDT.transfer",
        [
          txReq.toBytes(),
          ccc.ScriptVec.encode(transfers.map(({ to }) => to)),
          ccc.mol.Uint128Vec.encode(transfers.map(({ amount }) => amount)),
        ],
        {
          script: this.script,
        },
      );
      if (res) {
        resTx = res.map((res) => ccc.Transaction.fromBytes(res));
      }
    }

    if (!resTx) {
      const transfer = ccc.Transaction.from(tx ?? {});
      for (const { to, amount } of transfers) {
        transfer.addOutput(
          {
            lock: to,
            type: this.script,
          },
          ccc.numLeToBytes(amount, 16),
        );
      }
      resTx = ssri.ExecutorResponse.new(transfer);
    }
    resTx.res.addCellDeps({
      outPoint: this.code,
      depType: "code",
    });
    return resTx;
  }

  /**
   * Mints new tokens to specified addresses. See the example in `transfer` as they are similar.
   * @param tx - Optional existing transaction to build upon
   * @param mints - Array of mints
   * @param mints.to - receiver of token
   * @param mints.amount - amount to the receiver
   * @returns The transaction containing the mint operation
   * @tag Mutation - This method represents a mutation of the onchain state
   */
  async mint(
    signer: ccc.Signer,
    mints: {
      to: ccc.ScriptLike;
      amount: ccc.NumLike;
    }[],
    tx?: ccc.TransactionLike | null,
  ): Promise<ssri.ExecutorResponse<ccc.Transaction>> {
    let resTx;
    if (this.executor) {
      const txReq = ccc.Transaction.from(tx ?? {});
      await txReq.completeInputsAtLeastOne(signer);

      const res = await this.executor.runScriptTry(
        this.code,
        "UDT.mint",
        [
          txReq.toBytes(),
          ccc.ScriptVec.encode(mints.map(({ to }) => to)),
          ccc.mol.Uint128Vec.encode(mints.map(({ amount }) => amount)),
        ],
        {
          script: this.script,
        },
      );
      if (res) {
        resTx = res.map((res) => ccc.Transaction.fromBytes(res));
      }
    }

    if (!resTx) {
      const mint = ccc.Transaction.from(tx ?? {});
      for (const { to, amount } of mints) {
        mint.addOutput(
          {
            lock: to,
            type: this.script,
          },
          ccc.numLeToBytes(amount),
        );
      }
      resTx = ssri.ExecutorResponse.new(mint);
    }
    resTx.res.addCellDeps({
      outPoint: this.code,
      depType: "code",
    });
    return resTx;
  }

  async completeChangeToLock(
    txLike: ccc.TransactionLike,
    signer: ccc.Signer,
    change: ccc.ScriptLike,
  ) {
    const tx = ccc.Transaction.from(txLike);

    await tx.completeInputsByUdt(signer, this.script);
    const balanceDiff =
      (await tx.getInputsUdtBalance(signer.client, this.script)) -
      tx.getOutputsUdtBalance(this.script);
    if (balanceDiff > ccc.Zero) {
      tx.addOutput(
        {
          lock: change,
          type: this.script,
        },
        ccc.numLeToBytes(balanceDiff, 16),
      );
    }

    return tx;
  }

  async completeBy(tx: ccc.TransactionLike, from: ccc.Signer) {
    const { script } = await from.getRecommendedAddressObj();

    return this.completeChangeToLock(tx, from, script);
  }
}


================================================
File: packages/udt/src/udtPausable/index.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { ssri } from "@ckb-ccc/ssri";
import { Udt } from "../udt/index.js";

/**
 * Represents a UDT (User Defined Token) with pausable functionality.
 * @extends {Udt} This must be a SSRI UDT that does not fallback to xUDT.
 * @public
 */
export class UdtPausable extends Udt {
  constructor(
    code: ccc.OutPointLike,
    script: ccc.ScriptLike,
    config: {
      executor: ssri.Executor;
    },
  ) {
    super(code, script, config);
  }

  /**
   * Pauses the UDT for the specified lock hashes. Pausing/Unpause without lock hashes should take effect on the global level. Note that this method is only available if the pausable UDT uses external pause list.
   * @param {ccc.HexLike[]} lockHashes - The array of lock hashes to be paused.
   * @param {ccc.TransactionLike} tx - The transaction to be used.
   * @returns The transaction result.
   * @tag Mutation - This method represents a mutation of the onchain state and will return a transaction to be sent.
   */
  async pause(
    signer: ccc.Signer,
    locks: ccc.ScriptLike[],
    tx?: ccc.TransactionLike | null,
    extraLockHashes?: ccc.HexLike[] | null,
  ): Promise<ssri.ExecutorResponse<ccc.Transaction>> {
    const txReq = ccc.Transaction.from(tx ?? {});
    await txReq.completeInputsAtLeastOne(signer);

    const res = await this.assertExecutor().runScript(
      this.code,
      "UDTPausable.pause",
      [
        txReq.toBytes(),
        ccc.mol.Byte32Vec.encode(
          locks
            .map((l) => ccc.Script.from(l).hash())
            .concat(extraLockHashes?.map(ccc.hexFrom) ?? []),
        ),
      ],
      { script: this.script },
    );
    const resTx = res.map((res) => ccc.Transaction.fromBytes(res));
    resTx.res.addCellDeps({
      outPoint: this.code,
      depType: "code",
    });
    return resTx;
  }

  /**
   * Unpauses the UDT for the specified lock hashes. Note that this method is only available if the pausable UDT uses external pause list.
   * @param tx - The transaction to be used.
   * @param lockHashes - The array of lock hashes to be unpaused.
   * @returns The transaction result.
   * @tag Mutation - This method represents a mutation of the onchain state and will return a transaction to be sent.
   */
  async unpause(
    signer: ccc.Signer,
    locks: ccc.ScriptLike[],
    tx?: ccc.TransactionLike | null,
    extraLockHashes?: ccc.HexLike[] | null,
  ): Promise<ssri.ExecutorResponse<ccc.Transaction>> {
    const txReq = ccc.Transaction.from(tx ?? {});
    await txReq.completeInputsAtLeastOne(signer);

    const res = await this.assertExecutor().runScript(
      this.code,
      "UDTPausable.unpause",
      [
        txReq.toBytes(),
        ccc.mol.Byte32Vec.encode(
          locks
            .map((l) => ccc.Script.from(l).hash())
            .concat(extraLockHashes?.map(ccc.hexFrom) ?? []),
        ),
      ],
      { script: this.script },
    );
    const resTx = res.map((res) => ccc.Transaction.fromBytes(res));
    resTx.res.addCellDeps({
      outPoint: this.code,
      depType: "code",
    });
    return resTx;
  }

  /**
   * Checks if the UDT is paused for the specified lock hashes within a transaction. If not using external pause list, it can also be run on Code environment level.
   * @param lockHashes - The lock hashes to check.
   * @returns True if any of the lock hashes are paused, false otherwise.
   */
  async isPaused(
    locks: ccc.ScriptLike[],
    extraLockHashes?: ccc.HexLike[] | null,
  ): Promise<ssri.ExecutorResponse<boolean[]>> {
    const res = await this.assertExecutor().runScript(
      this.code,
      "UDTPausable.is_paused",
      [
        ccc.mol.Byte32Vec.encode(
          locks
            .map((l) => ccc.Script.from(l).hash())
            .concat(extraLockHashes?.map(ccc.hexFrom) ?? []),
        ),
      ],
      { script: this.script },
    );
    return res.map((res) => ccc.mol.BoolVec.decode(res));
  }

  /**
   * Enumerates all paused lock hashes in UDTPausableData.
   * @returns The array of lock hashes.
   */
  async enumeratePaused(
    offset?: ccc.Num,
    limit?: ccc.Num,
  ): Promise<ssri.ExecutorResponse<ccc.Hex[]>> {
    const res = await this.assertExecutor().runScript(
      this.code,
      "UDTPausable.enumerate_paused",
      [ccc.numToBytes(offset ?? 0, 8), ccc.numToBytes(limit ?? 0, 8)],
      { script: this.script },
    );

    return res.map((res) => ccc.mol.Byte32Vec.decode(res));
  }
}


================================================
File: packages/uni-sat/README.md
================================================
<p align="center">
  <a href="https://app.ckbccc.com/">
    <img alt="Logo" src="https://raw.githubusercontent.com/ckb-devrel/ccc/master/assets/logoAndText.svg" style="height: 8rem; max-width: 90%; padding: 0.5rem 0;" />
  </a>
</p>

<h1 align="center" style="font-size: 48px;">
  CCC's support for UniSat
</h1>

<p align="center">
  <a href="https://www.npmjs.com/package/@ckb-ccc/uni-sat"><img
    alt="NPM Version" src="https://img.shields.io/npm/v/%40ckb-ccc%2Funi-sat"
  /></a>
  <img alt="GitHub commit activity" src="https://img.shields.io/github/commit-activity/m/ckb-devrel/ccc" />
  <img alt="GitHub last commit" src="https://img.shields.io/github/last-commit/ckb-devrel/ccc/master" />
  <img alt="GitHub branch check runs" src="https://img.shields.io/github/check-runs/ckb-devrel/ccc/master" />
  <a href="https://live.ckbccc.com/"><img
    alt="Playground" src="https://img.shields.io/website?url=https%3A%2F%2Flive.ckbccc.com%2F&label=Playground"
  /></a>
  <a href="https://app.ckbccc.com/"><img
    alt="App" src="https://img.shields.io/website?url=https%3A%2F%2Fapp.ckbccc.com%2F&label=App"
  /></a>
  <a href="https://docs.ckbccc.com/"><img
    alt="Docs" src="https://img.shields.io/website?url=https%3A%2F%2Fdocs.ckbccc.com%2F&label=Docs"
  /></a>
</p>

<p align="center">
  CCC - CKBers' Codebase is a one-stop solution for your CKB JS/TS ecosystem development.
  <br />
  Empower yourself with CCC to discover the unlimited potential of CKB.
  <br />
  Interoperate with wallets from different chain ecosystems.
  <br />
  Fully enabling CKB's Turing completeness and cryptographic freedom power.
</p>

## Preview

<p align="center">
  <a href="https://app.ckbccc.com/">
    <img src="https://raw.githubusercontent.com/ckb-devrel/ccc/master/assets/preview.png" width="30%" />
  </a>
</p>

This project is still under active development, and we are looking forward to your feedback. [Try its demo now here](https://app.ckbccc.com/). It showcases how to use CCC for some basic scenarios in CKB.

<h3 align="center">
  Read more about CCC on <a href="https://docs.ckbccc.com">our website</a> or <a href="https://github.com/ckb-devrel/ccc">GitHub Repo</a>.
</h3>


================================================
File: packages/uni-sat/CHANGELOG.md
================================================
# @ckb-ccc/uni-sat

## 1.0.11

### Patch Changes

- Updated dependencies [[`28c211d`](https://github.com/ckb-devrel/ccc/commit/28c211d839a2d2305eca56e82ba7da144aa3df4a)]:
  - @ckb-ccc/core@1.5.0

## 1.0.10

### Patch Changes

- Updated dependencies [[`3fdb2c4`](https://github.com/ckb-devrel/ccc/commit/3fdb2c477d0b2766b231e436b8f396f047b02634), [`f429087`](https://github.com/ckb-devrel/ccc/commit/f4290874dfab3fe58844e5169673c5d47bda64e3)]:
  - @ckb-ccc/core@1.4.0

## 1.0.9

### Patch Changes

- Updated dependencies [[`a48cccf`](https://github.com/ckb-devrel/ccc/commit/a48cccfae3ce6b3456a5eb863f207e7e5a6e568f)]:
  - @ckb-ccc/core@1.3.1

## 1.0.8

### Patch Changes

- Updated dependencies [[`4dbf4fd`](https://github.com/ckb-devrel/ccc/commit/4dbf4fd8021cf14d05282706a7667ea7d108fb09), [`4c76f9e`](https://github.com/ckb-devrel/ccc/commit/4c76f9e2a93a226fcfc4c32a5378bb531bfff08f), [`c2c4c26`](https://github.com/ckb-devrel/ccc/commit/c2c4c264e04461948e4b913b2f22054e6032ddc8), [`b6a73fa`](https://github.com/ckb-devrel/ccc/commit/b6a73fa9628ebdff51cb8f246309654cd53e36f2), [`8c97c85`](https://github.com/ckb-devrel/ccc/commit/8c97c851db4a2d940c7e59116ca7620cfd0afae1)]:
  - @ckb-ccc/core@1.3.0

## 1.0.7

### Patch Changes

- Updated dependencies [[`01263bd`](https://github.com/ckb-devrel/ccc/commit/01263bd8c601fa8fcdfa24be52601716e1864843)]:
  - @ckb-ccc/core@1.2.3

## 1.0.6

### Patch Changes

- Updated dependencies [[`7886e3d`](https://github.com/ckb-devrel/ccc/commit/7886e3d89e9ca8f3514a2044c6dd4e8ec6b49933)]:
  - @ckb-ccc/core@1.2.2

## 1.0.5

### Patch Changes

- Updated dependencies [[`94e2618`](https://github.com/ckb-devrel/ccc/commit/94e26182515e09d6086ec5b653d091f117a499e6)]:
  - @ckb-ccc/core@1.2.1

## 1.0.4

### Patch Changes

- Updated dependencies [[`128e87b`](https://github.com/ckb-devrel/ccc/commit/128e87b5ca3e97bfe7842e76f786aa6aec010797)]:
  - @ckb-ccc/core@1.2.0

## 1.0.3

### Patch Changes

- Updated dependencies [[`925991c`](https://github.com/ckb-devrel/ccc/commit/925991c8a24b1f34667e30b28b69812e936e3928)]:
  - @ckb-ccc/core@1.1.1

## 1.0.2

### Patch Changes

- Updated dependencies [[`ddc0a28`](https://github.com/ckb-devrel/ccc/commit/ddc0a281c3d1dfa6ebc990dae92994f026dfddcc)]:
  - @ckb-ccc/core@1.1.0

## 1.0.1

### Patch Changes

- Updated dependencies [[`719055b`](https://github.com/ckb-devrel/ccc/commit/719055b404f31b40362f51714b9f11c85b857581), [`94caaca`](https://github.com/ckb-devrel/ccc/commit/94caaca11c63752a25282d42f51161c94397dec6)]:
  - @ckb-ccc/core@1.0.1

## 1.0.0

### Major Changes

- [#107](https://github.com/ckb-devrel/ccc/pull/107) [`b99f55f`](https://github.com/ckb-devrel/ccc/commit/b99f55f74e64106391ce53f7d0bd0fa7522023cc) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: molecule

### Patch Changes

- Updated dependencies [[`b99f55f`](https://github.com/ckb-devrel/ccc/commit/b99f55f74e64106391ce53f7d0bd0fa7522023cc)]:
  - @ckb-ccc/core@1.0.0

## 0.0.18

### Patch Changes

- Updated dependencies [[`c1cb910`](https://github.com/ckb-devrel/ccc/commit/c1cb91091780c7b33fbbd683ef8edc9f11452ecd)]:
  - @ckb-ccc/core@0.1.2

## 0.0.17

### Patch Changes

- [#101](https://github.com/ckb-devrel/ccc/pull/101) [`d9affcc`](https://github.com/ckb-devrel/ccc/commit/d9affcc01c7b839b227e4d79bcb66e717577502a) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix: commonjs

- Updated dependencies [[`d9affcc`](https://github.com/ckb-devrel/ccc/commit/d9affcc01c7b839b227e4d79bcb66e717577502a)]:
  - @ckb-ccc/core@0.1.1

## 0.0.16

### Patch Changes

- [#70](https://github.com/ckb-devrel/ccc/pull/70) [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): websocket transport

- Updated dependencies [[`a3d5359`](https://github.com/ckb-devrel/ccc/commit/a3d53595f6dd11f2f59cdf0086b3d7ce558a2fdd), [`8824ff2`](https://github.com/ckb-devrel/ccc/commit/8824ff27af3b76186f1a7d6db8c907cd66f09d6a), [`f07a506`](https://github.com/ckb-devrel/ccc/commit/f07a506bd6fc27fe659a17d2f7baaeec54716d81), [`f21d7e4`](https://github.com/ckb-devrel/ccc/commit/f21d7e4cf422edab4a836ef6d678b620594fef8d), [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366), [`1720d5a`](https://github.com/ckb-devrel/ccc/commit/1720d5a398543f1c6e24763eeaf15d84cd2214bf), [`e63a06e`](https://github.com/ckb-devrel/ccc/commit/e63a06ee75ac8595208d216dec88a4228c465e23), [`c092988`](https://github.com/ckb-devrel/ccc/commit/c092988e7765b9ac79498d6bd72a6a2f62859b6f), [`50f2ce0`](https://github.com/ckb-devrel/ccc/commit/50f2ce08e74cb3fbeae926267d42e28b426fd7f4), [`4709384`](https://github.com/ckb-devrel/ccc/commit/4709384e37188991cb937b16f99f47ca82c912b8)]:
  - @ckb-ccc/core@0.1.0

## 0.0.16-alpha.7

### Patch Changes

- Updated dependencies [[`f07a506`](https://github.com/ckb-devrel/ccc/commit/f07a506bd6fc27fe659a17d2f7baaeec54716d81)]:
  - @ckb-ccc/core@0.1.0-alpha.7

## 0.0.16-alpha.6

### Patch Changes

- Updated dependencies [[`4709384`](https://github.com/ckb-devrel/ccc/commit/4709384e37188991cb937b16f99f47ca82c912b8)]:
  - @ckb-ccc/core@0.1.0-alpha.6

## 0.0.16-alpha.5

### Patch Changes

- Updated dependencies [[`50f2ce0`](https://github.com/ckb-devrel/ccc/commit/50f2ce08e74cb3fbeae926267d42e28b426fd7f4)]:
  - @ckb-ccc/core@0.1.0-alpha.5

## 0.0.16-alpha.4

### Patch Changes

- Updated dependencies [[`f21d7e4`](https://github.com/ckb-devrel/ccc/commit/f21d7e4cf422edab4a836ef6d678b620594fef8d)]:
  - @ckb-ccc/core@0.1.0-alpha.4

## 0.0.16-alpha.3

### Patch Changes

- Updated dependencies [[`a3d5359`](https://github.com/ckb-devrel/ccc/commit/a3d53595f6dd11f2f59cdf0086b3d7ce558a2fdd)]:
  - @ckb-ccc/core@0.0.16-alpha.3

## 0.0.16-alpha.2

### Patch Changes

- [#70](https://github.com/ckb-devrel/ccc/pull/70) [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): websocket transport

- Updated dependencies [[`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366)]:
  - @ckb-ccc/core@0.0.16-alpha.2

## 0.0.16-alpha.1

### Patch Changes

- Updated dependencies [[`8824ff2`](https://github.com/ckb-devrel/ccc/commit/8824ff27af3b76186f1a7d6db8c907cd66f09d6a), [`c092988`](https://github.com/ckb-devrel/ccc/commit/c092988e7765b9ac79498d6bd72a6a2f62859b6f)]:
  - @ckb-ccc/core@0.0.16-alpha.1

## 0.0.16-alpha.0

### Patch Changes

- Updated dependencies [[`1720d5a`](https://github.com/ckb-devrel/ccc/commit/1720d5a398543f1c6e24763eeaf15d84cd2214bf)]:
  - @ckb-ccc/core@0.0.16-alpha.0

## 0.0.15

### Patch Changes

- Updated dependencies [[`8f2560a`](https://github.com/ckb-devrel/ccc/commit/8f2560ab0e5619654fff7c5eacda8425385f908e)]:
  - @ckb-ccc/core@0.0.15

## 0.0.14

### Patch Changes

- Updated dependencies [[`5e942f8`](https://github.com/ckb-devrel/ccc/commit/5e942f8f1ed678abdb7ab9716f5449f0714cea53), [`f5b5938`](https://github.com/ckb-devrel/ccc/commit/f5b5938ab8f9c0a338dfd6765fe717f7ad1b1dd8), [`f13f4d3`](https://github.com/ckb-devrel/ccc/commit/f13f4d319ca66b571029a65e945e3a038bfeea25), [`7ba62a0`](https://github.com/ckb-devrel/ccc/commit/7ba62a056f17808fe5684786c00c2dff80bb7d1d), [`2164efd`](https://github.com/ckb-devrel/ccc/commit/2164efd6d834c1917ad5f4a514dc25941f937185), [`e5bd2ad`](https://github.com/ckb-devrel/ccc/commit/e5bd2ad5de4b42a22c422ecfc42056750f69b88b), [`aae3e06`](https://github.com/ckb-devrel/ccc/commit/aae3e0679fb940dd8c12ac9be12a4b53277a339d)]:
  - @ckb-ccc/core@0.0.14

## 0.0.14-alpha.2

### Patch Changes

- Updated dependencies [[`7ba62a0`](https://github.com/ckb-devrel/ccc/commit/7ba62a056f17808fe5684786c00c2dff80bb7d1d)]:
  - @ckb-ccc/core@0.0.14-alpha.2

## 0.0.14-alpha.1

### Patch Changes

- Updated dependencies [[`5e942f8`](https://github.com/ckb-devrel/ccc/commit/5e942f8f1ed678abdb7ab9716f5449f0714cea53), [`e5bd2ad`](https://github.com/ckb-devrel/ccc/commit/e5bd2ad5de4b42a22c422ecfc42056750f69b88b), [`aae3e06`](https://github.com/ckb-devrel/ccc/commit/aae3e0679fb940dd8c12ac9be12a4b53277a339d)]:
  - @ckb-ccc/core@0.0.14-alpha.1

## 0.0.14-alpha.0

### Patch Changes

- Updated dependencies [[`f5b5938`](https://github.com/ckb-devrel/ccc/commit/f5b5938ab8f9c0a338dfd6765fe717f7ad1b1dd8), [`2164efd`](https://github.com/ckb-devrel/ccc/commit/2164efd6d834c1917ad5f4a514dc25941f937185)]:
  - @ckb-ccc/core@0.0.14-alpha.0

## 0.0.13

### Patch Changes

- [`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): recordCells should not add usableCells

- [`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): node.js websocket

- [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): completeInputs

- [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): more APIs. Since parsing.

- [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Signer.findCells

- Updated dependencies [[`3378e85`](https://github.com/ckb-devrel/ccc/commit/3378e85b32797f5cdc1943b9ecaca1fd1d9fad5e), [`8629449`](https://github.com/ckb-devrel/ccc/commit/86294490e76fc2a1cee20f827883e02fceca6e8b), [`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97), [`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f), [`69c10fd`](https://github.com/ckb-devrel/ccc/commit/69c10fdfcd507433c13b15d17015dca4687afb97), [`600cc13`](https://github.com/ckb-devrel/ccc/commit/600cc137ac6eb7c5b2533670de6df29d82f1b9e1), [`642f731`](https://github.com/ckb-devrel/ccc/commit/642f7317f4951ef801f1245aea96c40b4b6fb73e), [`96dbb61`](https://github.com/ckb-devrel/ccc/commit/96dbb6107d2071b9383350ddd578557746227054), [`0462a4e`](https://github.com/ckb-devrel/ccc/commit/0462a4ee101926f0da857173626dc4ab879e3b56), [`52156f9`](https://github.com/ckb-devrel/ccc/commit/52156f9df9cae9e0b71b77b49cda0e4d73e76142), [`63606db`](https://github.com/ckb-devrel/ccc/commit/63606db908f95bfc857430083932144d1ef4deef), [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b), [`1043c2b`](https://github.com/ckb-devrel/ccc/commit/1043c2bc211ec283b88dba3b81feef98e4185c0e), [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11), [`1f999f8`](https://github.com/ckb-devrel/ccc/commit/1f999f854beb255b3cd9dbbc5a7268e75442b3db), [`a69a9dc`](https://github.com/ckb-devrel/ccc/commit/a69a9dc0c722f7b4cfa36b2ae8ecba4dcde0db90), [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895)]:
  - @ckb-ccc/core@0.0.13

## 0.0.13-alpha.8

### Patch Changes

- Updated dependencies [[`8629449`](https://github.com/ckb-devrel/ccc/commit/86294490e76fc2a1cee20f827883e02fceca6e8b), [`52156f9`](https://github.com/ckb-devrel/ccc/commit/52156f9df9cae9e0b71b77b49cda0e4d73e76142), [`63606db`](https://github.com/ckb-devrel/ccc/commit/63606db908f95bfc857430083932144d1ef4deef)]:
  - @ckb-ccc/core@0.0.13-alpha.8

## 0.0.13-alpha.7

### Patch Changes

- [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): more APIs. Since parsing.

- [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Signer.findCells

- Updated dependencies [[`1043c2b`](https://github.com/ckb-devrel/ccc/commit/1043c2bc211ec283b88dba3b81feef98e4185c0e), [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11), [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895)]:
  - @ckb-ccc/core@0.0.13-alpha.7

## 0.0.13-alpha.6

### Patch Changes

- [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): completeInputs

- Updated dependencies [[`69c10fd`](https://github.com/ckb-devrel/ccc/commit/69c10fdfcd507433c13b15d17015dca4687afb97), [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b)]:
  - @ckb-ccc/core@0.0.13-alpha.6

## 0.0.13-alpha.5

### Patch Changes

- [`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): recordCells should not add usableCells

- Updated dependencies [[`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97)]:
  - @ckb-ccc/core@0.0.13-alpha.5

## 0.0.13-alpha.4

### Patch Changes

- [`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): node.js websocket

- Updated dependencies [[`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f), [`642f731`](https://github.com/ckb-devrel/ccc/commit/642f7317f4951ef801f1245aea96c40b4b6fb73e)]:
  - @ckb-ccc/core@0.0.13-alpha.4

## 0.0.13-alpha.3

### Patch Changes

- Updated dependencies [[`1f999f8`](https://github.com/ckb-devrel/ccc/commit/1f999f854beb255b3cd9dbbc5a7268e75442b3db)]:
  - @ckb-ccc/core@0.0.13-alpha.3

## 0.0.13-alpha.2

### Patch Changes

- Updated dependencies [[`96dbb61`](https://github.com/ckb-devrel/ccc/commit/96dbb6107d2071b9383350ddd578557746227054)]:
  - @ckb-ccc/core@0.0.13-alpha.2

## 0.0.13-alpha.1

### Patch Changes

- Updated dependencies [[`3378e85`](https://github.com/ckb-devrel/ccc/commit/3378e85b32797f5cdc1943b9ecaca1fd1d9fad5e), [`a69a9dc`](https://github.com/ckb-devrel/ccc/commit/a69a9dc0c722f7b4cfa36b2ae8ecba4dcde0db90)]:
  - @ckb-ccc/core@0.0.13-alpha.1

## 0.0.13-alpha.0

### Patch Changes

- Updated dependencies [[`600cc13`](https://github.com/ckb-devrel/ccc/commit/600cc137ac6eb7c5b2533670de6df29d82f1b9e1)]:
  - @ckb-ccc/core@0.0.13-alpha.0

## 0.0.12

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/core@0.0.12


================================================
File: packages/uni-sat/eslint.config.mjs
================================================
// @ts-check

import eslint from "@eslint/js";
import eslintPluginPrettierRecommended from "eslint-plugin-prettier/recommended";
import tseslint from "typescript-eslint";

import { dirname } from "path";
import { fileURLToPath } from "url";

export default [
  ...tseslint.config({
    files: ["**/*.ts"],
    extends: [
      eslint.configs.recommended,
      ...tseslint.configs.recommendedTypeChecked,
    ],
    rules: {
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          args: "all",
          argsIgnorePattern: "^_",
          caughtErrors: "all",
          caughtErrorsIgnorePattern: "^_",
          destructuredArrayIgnorePattern: "^_",
          varsIgnorePattern: "^_",
          ignoreRestSiblings: true,
        },
      ],
      "@typescript-eslint/unbound-method": ["error", { ignoreStatic: true }],
      "@typescript-eslint/no-unsafe-member-access": "off",
      "@typescript-eslint/require-await": "off",
      "no-empty": "off",
      "prefer-const": [
        "error",
        { ignoreReadBeforeAssign: true, destructuring: "all" },
      ],
    },
    languageOptions: {
      parserOptions: {
        project: true,
        tsconfigRootDir: dirname(fileURLToPath(import.meta.url)),
      },
    },
  }),
  eslintPluginPrettierRecommended,
];


================================================
File: packages/uni-sat/package.json
================================================
{
  "name": "@ckb-ccc/uni-sat",
  "version": "1.0.11",
  "description": "CCC - CKBer's Codebase. Common Chains Connector's support for UniSat",
  "author": "Hanssen0 <hanssen0@hanssen0.com>",
  "license": "MIT",
  "private": false,
  "homepage": "https://github.com/ckb-devrel/ccc",
  "repository": {
    "type": "git",
    "url": "git://github.com/ckb-devrel/ccc.git"
  },
  "sideEffects": false,
  "main": "dist.commonjs/index.js",
  "module": "dist/index.js",
  "exports": {
    ".": {
      "import": "./dist/index.js",
      "require": "./dist.commonjs/index.js",
      "default": "./dist.commonjs/index.js"
    },
    "./barrel": {
      "import": "./dist/barrel.js",
      "require": "./dist.commonjs/barrel.js",
      "default": "./dist.commonjs/barrel.js"
    },
    "./advanced": {
      "import": "./dist/advanced.js",
      "require": "./dist.commonjs/advanced.js",
      "default": "./dist.commonjs/advanced.js"
    },
    "./advancedBarrel": {
      "import": "./dist/advancedBarrel.js",
      "require": "./dist.commonjs/advancedBarrel.js",
      "default": "./dist.commonjs/advancedBarrel.js"
    }
  },
  "scripts": {
    "build": "rimraf ./dist && rimraf ./dist.commonjs && tsc && tsc --project tsconfig.commonjs.json && copyfiles -u 2 misc/basedirs/**/* .",
    "lint": "eslint ./src",
    "format": "prettier --write . && eslint --fix ./src"
  },
  "devDependencies": {
    "@eslint/js": "^9.1.1",
    "copyfiles": "^2.4.1",
    "eslint": "^9.1.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.1.3",
    "prettier": "^3.2.5",
    "prettier-plugin-organize-imports": "^3.2.4",
    "rimraf": "^5.0.5",
    "typescript": "^5.4.5",
    "typescript-eslint": "^7.7.0"
  },
  "publishConfig": {
    "access": "public"
  },
  "dependencies": {
    "@ckb-ccc/core": "workspace:*"
  }
}


================================================
File: packages/uni-sat/tsconfig.base.json
================================================
{
  "compilerOptions": {
    "target": "es2020",
    "incremental": true,
    "allowJs": true,
    "importHelpers": false,
    "declaration": true,
    "declarationMap": true,
    "experimentalDecorators": true,
    "useDefineForClassFields": false,
    "esModuleInterop": true,
    "strict": true,
    "noImplicitAny": true,
    "strictBindCallApply": true,
    "strictNullChecks": true,
    "alwaysStrict": true,
    "noFallthroughCasesInSwitch": true,
    "forceConsistentCasingInFileNames": true,
    "skipLibCheck": true
  },
  "include": ["src/**/*"]
}


================================================
File: packages/uni-sat/tsconfig.commonjs.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "NodeNext",
    "moduleResolution": "NodeNext",
    "outDir": "./dist.commonjs"
  }
}


================================================
File: packages/uni-sat/tsconfig.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "ESNext",
    "moduleResolution": "Bundler",
    "outDir": "./dist",
  }
}


================================================
File: packages/uni-sat/typedoc.json
================================================
{
  "$schema": "https://typedoc.org/schema.json",
  "entryPoints": ["./src/index.ts", "./src/advanced.ts"],
  "extends": ["../../typedoc.base.json"],
  "name": "@ckb-ccc uni-sat"
}


================================================
File: packages/uni-sat/.npmignore
================================================
node_modules/
misc/

*test.js
*test.ts
*test.d.ts
*test.d.ts.map
*spec.js
*spec.ts
*spec.d.ts
*spec.d.ts.map

tsconfig.json
tsconfig.*.json
eslint.config.mjs
.prettierrc
.prettierignore

tsconfig.tsbuildinfo
tsconfig.*.tsbuildinfo
.github/


================================================
File: packages/uni-sat/.prettierignore
================================================
node_modules/

dist/
dist.commonjs/

.npmignore
.prettierrc
tsconfig.json
eslint.config.mjs
.prettierrc

tsconfig.tsbuildinfo
.github/


================================================
File: packages/uni-sat/.prettierrc
================================================
{
  "singleQuote": false,
  "trailingComma": "all",
  "plugins": ["prettier-plugin-organize-imports"]
}


================================================
File: packages/uni-sat/misc/basedirs/dist/package.json
================================================
{
  "type": "module"
}

================================================
File: packages/uni-sat/misc/basedirs/dist.commonjs/package.json
================================================
{
  "type": "commonjs"
}


================================================
File: packages/uni-sat/src/advanced.ts
================================================
export * as UniSatA from "./advancedBarrel.js";


================================================
File: packages/uni-sat/src/advancedBarrel.ts
================================================
/**
 * Interface representing a provider for interacting with accounts and signing messages.
 */
export interface Provider {
  /**
   * Requests user accounts.
   * @returns A promise that resolves to an array of account addresses.
   */
  requestAccounts(): Promise<string[]>;

  /**
   * Gets the current network.
   * @returns current network.
   */
  getNetwork(): Promise<"livenet" | "testnet">;

  /**
   * Switch the current network.
   */
  switchNetwork(chain: "livenet" | "testnet"): Promise<void>;

  /**
   * Gets the current chain.
   * @returns current chain.
   */
  getChain?(): Promise<{ enum: string; name: string; network: string }>;

  /**
   * Switch the current chain.
   */
  switchChain?(
    chain: string,
  ): Promise<{ enum: string; name: string; network: string }>;

  /**
   * Gets the current accounts.
   * @returns A promise that resolves to an array of account addresses.
   */
  getAccounts(): Promise<string[]>;

  /**
   * Gets the public key of the account.
   * @returns A promise that resolves to the public key.
   */
  getPublicKey(): Promise<string>;

  /**
   * Signs a message with the specified type.
   * @param msg - The message to sign.
   * @param type - The type of signature.
   * @returns A promise that resolves to the signed message.
   */
  signMessage(msg: string, type: "ecdsa" | "bip322-simple"): Promise<string>;

  /**
   * Adds an event listener to the provider.
   */
  on: OnMethod;

  /**
   * Removes an event listener from the provider.
   * @param eventName - The name of the event to remove the listener from.
   * @param listener - The listener function to remove.
   * @returns The provider instance.
   */
  removeListener(
    eventName: string,
    listener: (...args: unknown[]) => unknown,
  ): Provider;
}

/**
 * Interface representing a method to add event listeners to the provider.
 */
export interface OnMethod {
  /**
   * Adds an event listener to the provider.
   * @param eventName - The name of the event.
   * @param listener - The listener function.
   * @returns The provider instance.
   */
  (eventName: string, listener: (...args: unknown[]) => unknown): Provider;
}


================================================
File: packages/uni-sat/src/barrel.ts
================================================
export * from "./signer.js";
export * from "./signersFactory.js";


================================================
File: packages/uni-sat/src/index.ts
================================================
export * as UniSat from "./barrel.js";


================================================
File: packages/uni-sat/src/signer.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { Provider } from "./advancedBarrel.js";

/**
 * Class representing a Bitcoin signer that extends SignerBtc
 * @public
 */
export class Signer extends ccc.SignerBtc {
  /**
   * Creates an instance of Signer.
   * @param client - The client instance.
   * @param provider - The provider instance.
   */
  constructor(
    client: ccc.Client,
    public readonly provider: Provider,
    private readonly preferredNetworks: ccc.NetworkPreference[] = [
      {
        addressPrefix: "ckb",
        signerType: ccc.SignerType.BTC,
        network: "btc",
      },
      {
        addressPrefix: "ckt",
        signerType: ccc.SignerType.BTC,
        network: "btcTestnet",
      },
    ],
  ) {
    super(client);
  }

  async _getNetworkToChange(): Promise<string | undefined> {
    const currentNetwork = await (async () => {
      if (this.provider.getChain) {
        return (
          {
            BITCOIN_MAINNET: "btc",
            BITCOIN_TESTNET: "btcTestnet",
            FRACTAL_BITCOIN_MAINNET: "fractalBtc",
          }[(await this.provider.getChain()).enum] ?? ""
        );
      }
      return (await this.provider.getNetwork()) === "livenet"
        ? "btc"
        : "btcTestnet";
    })();
    const { network } = this.matchNetworkPreference(
      this.preferredNetworks,
      currentNetwork,
    ) ?? { network: currentNetwork };
    if (network === currentNetwork) {
      return;
    }

    return network;
  }

  /**
   * Ensure the BTC network is the same as CKB network.
   */
  async ensureNetwork(): Promise<void> {
    const network = await this._getNetworkToChange();
    if (!network) {
      return;
    }
    if (this.provider.switchChain) {
      const chain = {
        btc: "BITCOIN_MAINNET",
        btcTestnet: "BITCOIN_TESTNET",
        fractalBtc: "FRACTAL_BITCOIN_MAINNET",
      }[network];
      if (chain) {
        await this.provider.switchChain(chain);
        return;
      }
    } else if (network === "btc" || network === "btcTestnet") {
      await this.provider.switchNetwork(
        network === "btc" ? "livenet" : "testnet",
      );
      return;
    }

    throw new Error(
      `UniSat wallet doesn't support the requested chain ${network}`,
    );
  }

  /**
   * Gets the Bitcoin account address.
   * @returns A promise that resolves to the Bitcoin account address.
   */
  async getBtcAccount(): Promise<string> {
    return (await this.provider.getAccounts())[0];
  }

  /**
   * Gets the Bitcoin public key.
   * @returns A promise that resolves to the Bitcoin public key.
   */
  async getBtcPublicKey(): Promise<ccc.Hex> {
    return ccc.hexFrom(await this.provider.getPublicKey());
  }

  /**
   * Connects to the provider by requesting accounts.
   * @returns A promise that resolves when the connection is established.
   */
  async connect(): Promise<void> {
    await this.provider.requestAccounts();
    await this.ensureNetwork();
  }

  onReplaced(listener: () => void): () => void {
    const stop: (() => void)[] = [];
    const replacer = async () => {
      listener();
      stop[0]?.();
    };
    stop.push(() => {
      this.provider.removeListener("accountsChanged", replacer);
      this.provider.removeListener("networkChanged", replacer);
    });

    this.provider.on("accountsChanged", replacer);
    this.provider.on("networkChanged", replacer);

    return stop[0];
  }

  /**
   * Checks if the signer is connected.
   * @returns A promise that resolves to true if connected, false otherwise.
   */
  async isConnected(): Promise<boolean> {
    if (await this._getNetworkToChange()) {
      return false;
    }
    return (await this.provider.getAccounts()).length !== 0;
  }

  /**
   * Signs a raw message with the Bitcoin account.
   * @param message - The message to sign.
   * @returns A promise that resolves to the signed message.
   */
  async signMessageRaw(message: string | ccc.BytesLike): Promise<string> {
    const challenge =
      typeof message === "string" ? message : ccc.hexFrom(message).slice(2);

    return this.provider.signMessage(challenge, "ecdsa");
  }
}


================================================
File: packages/uni-sat/src/signersFactory.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { Provider } from "./advancedBarrel.js";
import { Signer } from "./signer.js";

/**
 * Retrieves the UniSat signer if available.
 * @public
 *
 * @param client - The client instance.
 * @returns The Signer instance if the UniSat provider is available, otherwise undefined.
 */
export function getUniSatSigners(
  client: ccc.Client,
  preferredNetworks?: ccc.NetworkPreference[],
): ccc.SignerInfo[] {
  const windowRef = window as { unisat?: Provider };

  if (typeof windowRef.unisat === "undefined") {
    return [];
  }

  return [
    {
      signer: new Signer(client, windowRef.unisat, preferredNetworks),
      name: "BTC",
    },
  ];
}


================================================
File: packages/utxo-global/README.md
================================================
<p align="center">
  <a href="https://app.ckbccc.com/">
    <img alt="Logo" src="https://raw.githubusercontent.com/ckb-devrel/ccc/master/assets/logoAndText.svg" style="height: 8rem; max-width: 90%; padding: 0.5rem 0;" />
  </a>
</p>

<h1 align="center" style="font-size: 32px;">
  UTXO Global Wallet for Nervos - A New Horizon for Your Crypto Adventures!
</h1>

<p align="center">
  <a href="https://www.npmjs.com/package/@ckb-ccc/ccc"><img
    alt="NPM Version" src="https://img.shields.io/npm/v/%40ckb-ccc%2Fccc"
  /></a>
  <img alt="GitHub commit activity" src="https://img.shields.io/github/commit-activity/m/ckb-devrel/ccc" />
  <img alt="GitHub last commit" src="https://img.shields.io/github/last-commit/ckb-devrel/ccc/master" />
  <img alt="GitHub branch check runs" src="https://img.shields.io/github/check-runs/ckb-devrel/ccc/master" />
  <a href="https://live.ckbccc.com/"><img
    alt="Playground" src="https://img.shields.io/website?url=https%3A%2F%2Flive.ckbccc.com%2F&label=Playground"
  /></a>
  <a href="https://app.ckbccc.com/"><img
    alt="App" src="https://img.shields.io/website?url=https%3A%2F%2Fapp.ckbccc.com%2F&label=App"
  /></a>
  <a href="https://docs.ckbccc.com/"><img
    alt="Docs" src="https://img.shields.io/website?url=https%3A%2F%2Fdocs.ckbccc.com%2F&label=Docs"
  /></a>
</p>

<p align="center">
  CCC - CKBers' Codebase is a one-stop solution for your CKB JS/TS ecosystem development.
  <br />
  Empower yourself with CCC to discover the unlimited potential of CKB.
  <br />
  Interoperate with wallets from different chain ecosystems.
  <br />
  Fully enabling CKB's Turing completeness and cryptographic freedom power.
</p>

<h3 align="center">
  Read more about CCC on <a href="https://docs.ckbccc.com">our website</a> or <a href="https://github.com/ckb-devrel/ccc">GitHub Repo</a>.
</h3>


================================================
File: packages/utxo-global/CHANGELOG.md
================================================
# @ckb-ccc/utxo-global

## 1.0.11

### Patch Changes

- Updated dependencies [[`28c211d`](https://github.com/ckb-devrel/ccc/commit/28c211d839a2d2305eca56e82ba7da144aa3df4a)]:
  - @ckb-ccc/core@1.5.0

## 1.0.10

### Patch Changes

- Updated dependencies [[`3fdb2c4`](https://github.com/ckb-devrel/ccc/commit/3fdb2c477d0b2766b231e436b8f396f047b02634), [`f429087`](https://github.com/ckb-devrel/ccc/commit/f4290874dfab3fe58844e5169673c5d47bda64e3)]:
  - @ckb-ccc/core@1.4.0

## 1.0.9

### Patch Changes

- Updated dependencies [[`a48cccf`](https://github.com/ckb-devrel/ccc/commit/a48cccfae3ce6b3456a5eb863f207e7e5a6e568f)]:
  - @ckb-ccc/core@1.3.1

## 1.0.8

### Patch Changes

- Updated dependencies [[`4dbf4fd`](https://github.com/ckb-devrel/ccc/commit/4dbf4fd8021cf14d05282706a7667ea7d108fb09), [`4c76f9e`](https://github.com/ckb-devrel/ccc/commit/4c76f9e2a93a226fcfc4c32a5378bb531bfff08f), [`c2c4c26`](https://github.com/ckb-devrel/ccc/commit/c2c4c264e04461948e4b913b2f22054e6032ddc8), [`b6a73fa`](https://github.com/ckb-devrel/ccc/commit/b6a73fa9628ebdff51cb8f246309654cd53e36f2), [`8c97c85`](https://github.com/ckb-devrel/ccc/commit/8c97c851db4a2d940c7e59116ca7620cfd0afae1)]:
  - @ckb-ccc/core@1.3.0

## 1.0.7

### Patch Changes

- Updated dependencies [[`01263bd`](https://github.com/ckb-devrel/ccc/commit/01263bd8c601fa8fcdfa24be52601716e1864843)]:
  - @ckb-ccc/core@1.2.3

## 1.0.6

### Patch Changes

- Updated dependencies [[`7886e3d`](https://github.com/ckb-devrel/ccc/commit/7886e3d89e9ca8f3514a2044c6dd4e8ec6b49933)]:
  - @ckb-ccc/core@1.2.2

## 1.0.5

### Patch Changes

- Updated dependencies [[`94e2618`](https://github.com/ckb-devrel/ccc/commit/94e26182515e09d6086ec5b653d091f117a499e6)]:
  - @ckb-ccc/core@1.2.1

## 1.0.4

### Patch Changes

- Updated dependencies [[`128e87b`](https://github.com/ckb-devrel/ccc/commit/128e87b5ca3e97bfe7842e76f786aa6aec010797)]:
  - @ckb-ccc/core@1.2.0

## 1.0.3

### Patch Changes

- Updated dependencies [[`925991c`](https://github.com/ckb-devrel/ccc/commit/925991c8a24b1f34667e30b28b69812e936e3928)]:
  - @ckb-ccc/core@1.1.1

## 1.0.2

### Patch Changes

- Updated dependencies [[`ddc0a28`](https://github.com/ckb-devrel/ccc/commit/ddc0a281c3d1dfa6ebc990dae92994f026dfddcc)]:
  - @ckb-ccc/core@1.1.0

## 1.0.1

### Patch Changes

- Updated dependencies [[`719055b`](https://github.com/ckb-devrel/ccc/commit/719055b404f31b40362f51714b9f11c85b857581), [`94caaca`](https://github.com/ckb-devrel/ccc/commit/94caaca11c63752a25282d42f51161c94397dec6)]:
  - @ckb-ccc/core@1.0.1

## 1.0.0

### Major Changes

- [#107](https://github.com/ckb-devrel/ccc/pull/107) [`b99f55f`](https://github.com/ckb-devrel/ccc/commit/b99f55f74e64106391ce53f7d0bd0fa7522023cc) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: molecule

### Patch Changes

- Updated dependencies [[`b99f55f`](https://github.com/ckb-devrel/ccc/commit/b99f55f74e64106391ce53f7d0bd0fa7522023cc)]:
  - @ckb-ccc/core@1.0.0

## 0.0.18

### Patch Changes

- Updated dependencies [[`c1cb910`](https://github.com/ckb-devrel/ccc/commit/c1cb91091780c7b33fbbd683ef8edc9f11452ecd)]:
  - @ckb-ccc/core@0.1.2

## 0.0.17

### Patch Changes

- [#101](https://github.com/ckb-devrel/ccc/pull/101) [`d9affcc`](https://github.com/ckb-devrel/ccc/commit/d9affcc01c7b839b227e4d79bcb66e717577502a) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix: commonjs

- Updated dependencies [[`d9affcc`](https://github.com/ckb-devrel/ccc/commit/d9affcc01c7b839b227e4d79bcb66e717577502a)]:
  - @ckb-ccc/core@0.1.1

## 0.0.16

### Patch Changes

- [#70](https://github.com/ckb-devrel/ccc/pull/70) [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): websocket transport

- [#96](https://github.com/ckb-devrel/ccc/pull/96) [`e63a06e`](https://github.com/ckb-devrel/ccc/commit/e63a06ee75ac8595208d216dec88a4228c465e23) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: support doge signer

- Updated dependencies [[`a3d5359`](https://github.com/ckb-devrel/ccc/commit/a3d53595f6dd11f2f59cdf0086b3d7ce558a2fdd), [`8824ff2`](https://github.com/ckb-devrel/ccc/commit/8824ff27af3b76186f1a7d6db8c907cd66f09d6a), [`f07a506`](https://github.com/ckb-devrel/ccc/commit/f07a506bd6fc27fe659a17d2f7baaeec54716d81), [`f21d7e4`](https://github.com/ckb-devrel/ccc/commit/f21d7e4cf422edab4a836ef6d678b620594fef8d), [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366), [`1720d5a`](https://github.com/ckb-devrel/ccc/commit/1720d5a398543f1c6e24763eeaf15d84cd2214bf), [`e63a06e`](https://github.com/ckb-devrel/ccc/commit/e63a06ee75ac8595208d216dec88a4228c465e23), [`c092988`](https://github.com/ckb-devrel/ccc/commit/c092988e7765b9ac79498d6bd72a6a2f62859b6f), [`50f2ce0`](https://github.com/ckb-devrel/ccc/commit/50f2ce08e74cb3fbeae926267d42e28b426fd7f4), [`4709384`](https://github.com/ckb-devrel/ccc/commit/4709384e37188991cb937b16f99f47ca82c912b8)]:
  - @ckb-ccc/core@0.1.0

## 0.0.16-alpha.7

### Patch Changes

- Updated dependencies [[`f07a506`](https://github.com/ckb-devrel/ccc/commit/f07a506bd6fc27fe659a17d2f7baaeec54716d81)]:
  - @ckb-ccc/core@0.1.0-alpha.7

## 0.0.16-alpha.6

### Patch Changes

- Updated dependencies [[`4709384`](https://github.com/ckb-devrel/ccc/commit/4709384e37188991cb937b16f99f47ca82c912b8)]:
  - @ckb-ccc/core@0.1.0-alpha.6

## 0.0.16-alpha.5

### Patch Changes

- Updated dependencies [[`50f2ce0`](https://github.com/ckb-devrel/ccc/commit/50f2ce08e74cb3fbeae926267d42e28b426fd7f4)]:
  - @ckb-ccc/core@0.1.0-alpha.5

## 0.0.16-alpha.4

### Patch Changes

- Updated dependencies [[`f21d7e4`](https://github.com/ckb-devrel/ccc/commit/f21d7e4cf422edab4a836ef6d678b620594fef8d)]:
  - @ckb-ccc/core@0.1.0-alpha.4

## 0.0.16-alpha.3

### Patch Changes

- Updated dependencies [[`a3d5359`](https://github.com/ckb-devrel/ccc/commit/a3d53595f6dd11f2f59cdf0086b3d7ce558a2fdd)]:
  - @ckb-ccc/core@0.0.16-alpha.3

## 0.0.16-alpha.2

### Patch Changes

- [#70](https://github.com/ckb-devrel/ccc/pull/70) [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): websocket transport

- Updated dependencies [[`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366)]:
  - @ckb-ccc/core@0.0.16-alpha.2

## 0.0.16-alpha.1

### Patch Changes

- Updated dependencies [[`8824ff2`](https://github.com/ckb-devrel/ccc/commit/8824ff27af3b76186f1a7d6db8c907cd66f09d6a), [`c092988`](https://github.com/ckb-devrel/ccc/commit/c092988e7765b9ac79498d6bd72a6a2f62859b6f)]:
  - @ckb-ccc/core@0.0.16-alpha.1

## 0.0.16-alpha.0

### Patch Changes

- Updated dependencies [[`1720d5a`](https://github.com/ckb-devrel/ccc/commit/1720d5a398543f1c6e24763eeaf15d84cd2214bf)]:
  - @ckb-ccc/core@0.0.16-alpha.0

## 0.0.15

### Patch Changes

- Updated dependencies [[`8f2560a`](https://github.com/ckb-devrel/ccc/commit/8f2560ab0e5619654fff7c5eacda8425385f908e)]:
  - @ckb-ccc/core@0.0.15

## 0.0.14

### Patch Changes

- Updated dependencies [[`5e942f8`](https://github.com/ckb-devrel/ccc/commit/5e942f8f1ed678abdb7ab9716f5449f0714cea53), [`f5b5938`](https://github.com/ckb-devrel/ccc/commit/f5b5938ab8f9c0a338dfd6765fe717f7ad1b1dd8), [`f13f4d3`](https://github.com/ckb-devrel/ccc/commit/f13f4d319ca66b571029a65e945e3a038bfeea25), [`7ba62a0`](https://github.com/ckb-devrel/ccc/commit/7ba62a056f17808fe5684786c00c2dff80bb7d1d), [`2164efd`](https://github.com/ckb-devrel/ccc/commit/2164efd6d834c1917ad5f4a514dc25941f937185), [`e5bd2ad`](https://github.com/ckb-devrel/ccc/commit/e5bd2ad5de4b42a22c422ecfc42056750f69b88b), [`aae3e06`](https://github.com/ckb-devrel/ccc/commit/aae3e0679fb940dd8c12ac9be12a4b53277a339d)]:
  - @ckb-ccc/core@0.0.14

## 0.0.14-alpha.2

### Patch Changes

- Updated dependencies [[`7ba62a0`](https://github.com/ckb-devrel/ccc/commit/7ba62a056f17808fe5684786c00c2dff80bb7d1d)]:
  - @ckb-ccc/core@0.0.14-alpha.2

## 0.0.14-alpha.1

### Patch Changes

- Updated dependencies [[`5e942f8`](https://github.com/ckb-devrel/ccc/commit/5e942f8f1ed678abdb7ab9716f5449f0714cea53), [`e5bd2ad`](https://github.com/ckb-devrel/ccc/commit/e5bd2ad5de4b42a22c422ecfc42056750f69b88b), [`aae3e06`](https://github.com/ckb-devrel/ccc/commit/aae3e0679fb940dd8c12ac9be12a4b53277a339d)]:
  - @ckb-ccc/core@0.0.14-alpha.1

## 0.0.14-alpha.0

### Patch Changes

- Updated dependencies [[`f5b5938`](https://github.com/ckb-devrel/ccc/commit/f5b5938ab8f9c0a338dfd6765fe717f7ad1b1dd8), [`2164efd`](https://github.com/ckb-devrel/ccc/commit/2164efd6d834c1917ad5f4a514dc25941f937185)]:
  - @ckb-ccc/core@0.0.14-alpha.0

## 0.0.13

### Patch Changes

- [`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): recordCells should not add usableCells

- [`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): node.js websocket

- [#25](https://github.com/ckb-devrel/ccc/pull/25) [`69c10fd`](https://github.com/ckb-devrel/ccc/commit/69c10fdfcd507433c13b15d17015dca4687afb97) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(utxo-global): switchNetwork

- [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): completeInputs

- [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): more APIs. Since parsing.

- [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Signer.findCells

- Updated dependencies [[`3378e85`](https://github.com/ckb-devrel/ccc/commit/3378e85b32797f5cdc1943b9ecaca1fd1d9fad5e), [`8629449`](https://github.com/ckb-devrel/ccc/commit/86294490e76fc2a1cee20f827883e02fceca6e8b), [`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97), [`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f), [`69c10fd`](https://github.com/ckb-devrel/ccc/commit/69c10fdfcd507433c13b15d17015dca4687afb97), [`600cc13`](https://github.com/ckb-devrel/ccc/commit/600cc137ac6eb7c5b2533670de6df29d82f1b9e1), [`642f731`](https://github.com/ckb-devrel/ccc/commit/642f7317f4951ef801f1245aea96c40b4b6fb73e), [`96dbb61`](https://github.com/ckb-devrel/ccc/commit/96dbb6107d2071b9383350ddd578557746227054), [`0462a4e`](https://github.com/ckb-devrel/ccc/commit/0462a4ee101926f0da857173626dc4ab879e3b56), [`52156f9`](https://github.com/ckb-devrel/ccc/commit/52156f9df9cae9e0b71b77b49cda0e4d73e76142), [`63606db`](https://github.com/ckb-devrel/ccc/commit/63606db908f95bfc857430083932144d1ef4deef), [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b), [`1043c2b`](https://github.com/ckb-devrel/ccc/commit/1043c2bc211ec283b88dba3b81feef98e4185c0e), [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11), [`1f999f8`](https://github.com/ckb-devrel/ccc/commit/1f999f854beb255b3cd9dbbc5a7268e75442b3db), [`a69a9dc`](https://github.com/ckb-devrel/ccc/commit/a69a9dc0c722f7b4cfa36b2ae8ecba4dcde0db90), [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895)]:
  - @ckb-ccc/core@0.0.13

## 0.0.13-alpha.8

### Patch Changes

- Updated dependencies [[`8629449`](https://github.com/ckb-devrel/ccc/commit/86294490e76fc2a1cee20f827883e02fceca6e8b), [`52156f9`](https://github.com/ckb-devrel/ccc/commit/52156f9df9cae9e0b71b77b49cda0e4d73e76142), [`63606db`](https://github.com/ckb-devrel/ccc/commit/63606db908f95bfc857430083932144d1ef4deef)]:
  - @ckb-ccc/core@0.0.13-alpha.8

## 0.0.13-alpha.7

### Patch Changes

- [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): more APIs. Since parsing.

- [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): Signer.findCells

- Updated dependencies [[`1043c2b`](https://github.com/ckb-devrel/ccc/commit/1043c2bc211ec283b88dba3b81feef98e4185c0e), [`079e20e`](https://github.com/ckb-devrel/ccc/commit/079e20ef14cf9a7c06bbaddf3e92cbfbb005da11), [`ed154d1`](https://github.com/ckb-devrel/ccc/commit/ed154d189e239907ad686ec51ac8133b6d5eb895)]:
  - @ckb-ccc/core@0.0.13-alpha.7

## 0.0.13-alpha.6

### Patch Changes

- [#25](https://github.com/ckb-devrel/ccc/pull/25) [`69c10fd`](https://github.com/ckb-devrel/ccc/commit/69c10fdfcd507433c13b15d17015dca4687afb97) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(utxo-global): switchNetwork

- [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): completeInputs

- Updated dependencies [[`69c10fd`](https://github.com/ckb-devrel/ccc/commit/69c10fdfcd507433c13b15d17015dca4687afb97), [`44c7fee`](https://github.com/ckb-devrel/ccc/commit/44c7feed37369836268fba21884418682f15254b)]:
  - @ckb-ccc/core@0.0.13-alpha.6

## 0.0.13-alpha.5

### Patch Changes

- [`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): recordCells should not add usableCells

- Updated dependencies [[`6d62032`](https://github.com/ckb-devrel/ccc/commit/6d620326f42f8c48eff9deb95578cf28d7bf5c97)]:
  - @ckb-ccc/core@0.0.13-alpha.5

## 0.0.13-alpha.4

### Patch Changes

- [`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat(core): node.js websocket

- Updated dependencies [[`3658797`](https://github.com/ckb-devrel/ccc/commit/3658797e67c42c56b20fa66481d0455ed019e69f), [`642f731`](https://github.com/ckb-devrel/ccc/commit/642f7317f4951ef801f1245aea96c40b4b6fb73e)]:
  - @ckb-ccc/core@0.0.13-alpha.4

## 0.0.13-alpha.3

### Patch Changes

- Updated dependencies [[`1f999f8`](https://github.com/ckb-devrel/ccc/commit/1f999f854beb255b3cd9dbbc5a7268e75442b3db)]:
  - @ckb-ccc/core@0.0.13-alpha.3

## 0.0.13-alpha.2

### Patch Changes

- Updated dependencies [[`96dbb61`](https://github.com/ckb-devrel/ccc/commit/96dbb6107d2071b9383350ddd578557746227054)]:
  - @ckb-ccc/core@0.0.13-alpha.2

## 0.0.13-alpha.1

### Patch Changes

- Updated dependencies [[`3378e85`](https://github.com/ckb-devrel/ccc/commit/3378e85b32797f5cdc1943b9ecaca1fd1d9fad5e), [`a69a9dc`](https://github.com/ckb-devrel/ccc/commit/a69a9dc0c722f7b4cfa36b2ae8ecba4dcde0db90)]:
  - @ckb-ccc/core@0.0.13-alpha.1

## 0.0.13-alpha.0

### Patch Changes

- Updated dependencies [[`600cc13`](https://github.com/ckb-devrel/ccc/commit/600cc137ac6eb7c5b2533670de6df29d82f1b9e1)]:
  - @ckb-ccc/core@0.0.13-alpha.0

## 0.0.12

### Patch Changes

- Updated dependencies []:
  - @ckb-ccc/core@0.0.12


================================================
File: packages/utxo-global/eslint.config.mjs
================================================
// @ts-check

import eslint from "@eslint/js";
import eslintPluginPrettierRecommended from "eslint-plugin-prettier/recommended";
import tseslint from "typescript-eslint";

import { dirname } from "path";
import { fileURLToPath } from "url";

export default [
  ...tseslint.config({
    files: ["**/*.ts"],
    extends: [
      eslint.configs.recommended,
      ...tseslint.configs.recommendedTypeChecked,
    ],
    rules: {
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          args: "all",
          argsIgnorePattern: "^_",
          caughtErrors: "all",
          caughtErrorsIgnorePattern: "^_",
          destructuredArrayIgnorePattern: "^_",
          varsIgnorePattern: "^_",
          ignoreRestSiblings: true,
        },
      ],
      "@typescript-eslint/unbound-method": ["error", { ignoreStatic: true }],
      "@typescript-eslint/no-unsafe-member-access": "off",
      "@typescript-eslint/require-await": "off",
      "no-empty": "off",
      "prefer-const": [
        "error",
        { ignoreReadBeforeAssign: true, destructuring: "all" },
      ],
    },
    languageOptions: {
      parserOptions: {
        project: true,
        tsconfigRootDir: dirname(fileURLToPath(import.meta.url)),
      },
    },
  }),
  eslintPluginPrettierRecommended,
];


================================================
File: packages/utxo-global/package.json
================================================
{
  "name": "@ckb-ccc/utxo-global",
  "version": "1.0.11",
  "description": "Common Chains Connector's support for UTXO Global",
  "author": "Trong Dinh <trong@nexm.io>",
  "license": "MIT",
  "private": false,
  "homepage": "https://github.com/ckb-devrel/ccc",
  "repository": {
    "type": "git",
    "url": "git://github.com/ckb-devrel/ccc.git"
  },
  "sideEffects": false,
  "main": "dist.commonjs/index.js",
  "module": "dist/index.js",
  "exports": {
    ".": {
      "import": "./dist/index.js",
      "require": "./dist.commonjs/index.js",
      "default": "./dist.commonjs/index.js"
    },
    "./barrel": {
      "import": "./dist/barrel.js",
      "require": "./dist.commonjs/barrel.js",
      "default": "./dist.commonjs/barrel.js"
    },
    "./advancedBarrel": {
      "import": "./dist/advancedBarrel.js",
      "require": "./dist.commonjs/advancedBarrel.js",
      "default": "./dist.commonjs/advancedBarrel.js"
    },
    "./advanced": {
      "import": "./dist/advanced.js",
      "require": "./dist.commonjs/advanced.js",
      "default": "./dist.commonjs/advanced.js"
    }
  },
  "scripts": {
    "build": "rimraf ./dist && rimraf ./dist.commonjs && tsc && tsc --project tsconfig.commonjs.json && copyfiles -u 2 misc/basedirs/**/* .",
    "lint": "eslint ./src",
    "format": "prettier --write . && eslint --fix ./src"
  },
  "devDependencies": {
    "@eslint/js": "^9.1.1",
    "copyfiles": "^2.4.1",
    "eslint": "^9.1.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.1.3",
    "prettier": "^3.2.5",
    "prettier-plugin-organize-imports": "^3.2.4",
    "rimraf": "^5.0.5",
    "typescript": "^5.4.5",
    "typescript-eslint": "^7.7.0"
  },
  "publishConfig": {
    "access": "public"
  },
  "dependencies": {
    "@ckb-ccc/core": "workspace:*"
  }
}


================================================
File: packages/utxo-global/tsconfig.base.json
================================================
{
  "compilerOptions": {
    "target": "es2020",
    "incremental": true,
    "allowJs": true,
    "importHelpers": false,
    "declaration": true,
    "declarationMap": true,
    "experimentalDecorators": true,
    "useDefineForClassFields": false,
    "esModuleInterop": true,
    "strict": true,
    "noImplicitAny": true,
    "strictBindCallApply": true,
    "strictNullChecks": true,
    "alwaysStrict": true,
    "noFallthroughCasesInSwitch": true,
    "forceConsistentCasingInFileNames": true,
    "skipLibCheck": true
  },
  "include": ["src/**/*"]
}


================================================
File: packages/utxo-global/tsconfig.commonjs.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "NodeNext",
    "moduleResolution": "NodeNext",
    "outDir": "./dist.commonjs"
  }
}


================================================
File: packages/utxo-global/tsconfig.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "ESNext",
    "moduleResolution": "Bundler",
    "outDir": "./dist",
  }
}


================================================
File: packages/utxo-global/typedoc.json
================================================
{
  "$schema": "https://typedoc.org/schema.json",
  "entryPoints": ["./src/index.ts", "./src/advanced.ts"],
  "extends": ["../../typedoc.base.json"],
  "name": "@ckb-ccc utxo-global"
}


================================================
File: packages/utxo-global/.npmignore
================================================
node_modules/
misc/

*test.js
*test.ts
*test.d.ts
*test.d.ts.map
*spec.js
*spec.ts
*spec.d.ts
*spec.d.ts.map

tsconfig.json
tsconfig.*.json
eslint.config.mjs
.prettierrc
.prettierignore

tsconfig.tsbuildinfo
tsconfig.*.tsbuildinfo
.github/


================================================
File: packages/utxo-global/.prettierignore
================================================
node_modules/

dist/
dist.commonjs/

.npmignore
.prettierrc
tsconfig.json
eslint.config.mjs
.prettierrc

tsconfig.tsbuildinfo
.github/


================================================
File: packages/utxo-global/.prettierrc
================================================
{
  "singleQuote": false,
  "trailingComma": "all",
  "plugins": ["prettier-plugin-organize-imports"]
}


================================================
File: packages/utxo-global/misc/basedirs/dist/package.json
================================================
{
  "type": "module"
}

================================================
File: packages/utxo-global/misc/basedirs/dist.commonjs/package.json
================================================
{
  "type": "commonjs"
}


================================================
File: packages/utxo-global/src/advanced.ts
================================================
export * as UtxoGlobalA from "./advancedBarrel.js";


================================================
File: packages/utxo-global/src/advancedBarrel.ts
================================================
import { ccc } from "@ckb-ccc/core";

export interface Provider {
  requestAccounts(): Promise<string[]>;
  getAccount(): Promise<string[]>;
  getPublicKey(): Promise<{ address: string; publicKey: string }[]>;
  connect(): Promise<void>;
  isConnected(): Promise<boolean>;
  signMessage(msg: string, address: string): Promise<string>;
  signTransaction(tx: ccc.TransactionLike): Promise<ccc.TransactionLike>;

  getNetwork(): Promise<string>;
  switchNetwork(network: string): Promise<void>;

  on: OnMethod;
  removeListener(
    eventName: string,
    listener: (...args: unknown[]) => unknown,
  ): Provider;
}

export interface OnMethod {
  (eventName: string, listener: (...args: unknown[]) => unknown): Provider;
}


================================================
File: packages/utxo-global/src/barrel.ts
================================================
export * from "./btc/index.js";
export * from "./ckb/index.js";
export * from "./signersFactory.js";


================================================
File: packages/utxo-global/src/index.ts
================================================
export * as UtxoGlobal from "./barrel.js";


================================================
File: packages/utxo-global/src/signersFactory.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { Provider } from "./advancedBarrel.js";
import { SignerBtc } from "./btc/index.js";
import { SignerCkb } from "./ckb/index.js";
import { SignerDoge } from "./doge/index.js";

/**
 * @public
 */
export function getUtxoGlobalSigners(
  client: ccc.Client,
  preferredNetworks?: ccc.NetworkPreference[],
): ccc.SignerInfo[] {
  const windowRef = window as {
    utxoGlobal?: {
      bitcoinSigner: Provider;
      ckbSigner: Provider;
      dogeSigner: Provider;
    };
  };

  if (typeof windowRef.utxoGlobal === "undefined") {
    return [];
  }

  return [
    {
      name: "CKB",
      signer: new SignerCkb(client, windowRef.utxoGlobal.ckbSigner),
    },
    {
      name: "BTC",
      signer: new SignerBtc(
        client,
        windowRef.utxoGlobal.bitcoinSigner,
        preferredNetworks,
      ),
    },
    {
      name: "DOGE",
      signer: new SignerDoge(
        client,
        windowRef.utxoGlobal.dogeSigner,
        preferredNetworks,
      ),
    },
  ];
}


================================================
File: packages/utxo-global/src/btc/index.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { Provider } from "../advancedBarrel.js";

/**
 * @public
 */
export class SignerBtc extends ccc.SignerBtc {
  private accountCache: string | undefined;

  constructor(
    client: ccc.Client,
    public readonly provider: Provider,
    private readonly preferredNetworks: ccc.NetworkPreference[] = [
      {
        addressPrefix: "ckb",
        signerType: ccc.SignerType.BTC,
        network: "btc",
      },
      {
        addressPrefix: "ckt",
        signerType: ccc.SignerType.BTC,
        network: "btcTestnet",
      },
    ],
  ) {
    super(client);
  }

  async getBtcAccount() {
    const accounts = await this.provider.getAccount();
    this.accountCache = accounts[0];
    return this.accountCache;
  }

  async getBtcPublicKey(): Promise<ccc.Hex> {
    const pubKeys = await this.provider.getPublicKey();
    const account = await this.getBtcAccount();
    const pubKey = pubKeys.find((p) => p.address === account);

    if (!pubKey) {
      throw new Error("pubKey not found");
    }

    return ccc.hexFrom(pubKey.publicKey);
  }

  /**
   * Ensure the BTC network is the same as CKB network.
   */
  async ensureNetwork(): Promise<void> {
    const network = await this._getNetworkToChange();
    if (!network) {
      return;
    }

    const chain = {
      btc: "btc",
      btcTestnet: "btc_testnet",
      btcTestnet4: "btc_testnet_4",
      btcSignet: "btc_signet",
    }[network];

    if (chain) {
      await this.provider.switchNetwork(chain);
      return;
    }

    throw new Error(
      `UTXO Global wallet doesn't support the requested chain ${network}`,
    );
  }

  async _getNetworkToChange(): Promise<string | undefined> {
    const currentNetwork = {
      btc: "btc",
      btc_testnet: "btcTestnet",
      btc_testnet_4: "btcTestnet4",
      btc_signet: "btcSignet",
    }[await this.provider.getNetwork()];

    const { network } = this.matchNetworkPreference(
      this.preferredNetworks,
      currentNetwork,
    ) ?? { network: currentNetwork };
    if (network === currentNetwork) {
      return;
    }

    return network;
  }

  onReplaced(listener: () => void): () => void {
    const stop: (() => void)[] = [];
    const replacer = async () => {
      listener();
      stop[0]?.();
    };
    stop.push(() => {
      this.provider.removeListener("accountsChanged", replacer);
      this.provider.removeListener("networkChanged", replacer);
    });

    this.provider.on("accountsChanged", replacer);
    this.provider.on("networkChanged", replacer);

    return stop[0];
  }

  async connect(): Promise<void> {
    await this.provider.connect();
    await this.ensureNetwork();
  }

  async isConnected(): Promise<boolean> {
    if ((await this._getNetworkToChange()) !== undefined) {
      return false;
    }

    return await this.provider.isConnected();
  }

  async signMessageRaw(message: string | ccc.BytesLike): Promise<string> {
    const challenge =
      typeof message === "string" ? message : ccc.hexFrom(message).slice(2);
    return this.provider.signMessage(
      challenge,
      this.accountCache ?? (await this.getBtcAccount()),
    );
  }
}


================================================
File: packages/utxo-global/src/ckb/index.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { Provider } from "../advancedBarrel.js";

/**
 * @public
 */
export class SignerCkb extends ccc.Signer {
  private accountCache: string | undefined;
  get type(): ccc.SignerType {
    return ccc.SignerType.CKB;
  }

  /**
   * Gets the sign type.
   * @returns The sign type.
   */
  get signType(): ccc.SignerSignType {
    return ccc.SignerSignType.CkbSecp256k1;
  }

  constructor(
    client: ccc.Client,
    public readonly provider: Provider,
  ) {
    super(client);
  }

  getInternalAddress(): Promise<string> {
    return this.getAccount();
  }

  async getIdentity(): Promise<string> {
    return this.getPublicKey();
  }

  async getAddressObj(): Promise<ccc.Address> {
    const address = await this.getInternalAddress();
    return ccc.Address.fromString(address, this.client);
  }

  async getAddressObjs(): Promise<ccc.Address[]> {
    return [await this.getAddressObj()];
  }

  async getAccount() {
    const accounts = await this.provider.getAccount();
    this.accountCache = accounts[0];
    return this.accountCache;
  }

  async getPublicKey(): Promise<ccc.Hex> {
    const pubKeys = await this.provider.getPublicKey();
    const account = await this.getAccount();
    const pubKey = pubKeys.find((p) => p.address === account);

    if (!pubKey) {
      throw new Error("pubKey not found");
    }

    return ccc.hexFrom(pubKey.publicKey);
  }

  get ckbNetwork(): string {
    return this.client.addressPrefix === "ckb" ? "nervos" : "nervos_testnet";
  }

  async connect(): Promise<void> {
    await this.provider.connect();

    if (this.ckbNetwork === (await this.provider.getNetwork())) {
      return;
    }

    await this.provider.switchNetwork(this.ckbNetwork);
  }

  onReplaced(listener: () => void): () => void {
    const stop: (() => void)[] = [];
    const replacer = async () => {
      listener();
      stop[0]?.();
    };
    stop.push(() => {
      this.provider.removeListener("accountsChanged", replacer);
      this.provider.removeListener("networkChanged", replacer);
    });

    this.provider.on("accountsChanged", replacer);
    this.provider.on("networkChanged", replacer);

    return stop[0];
  }

  async isConnected(): Promise<boolean> {
    if ((await this.provider.getNetwork()) !== this.ckbNetwork) {
      return false;
    }

    return await this.provider.isConnected();
  }

  async signMessageRaw(message: string | ccc.BytesLike): Promise<string> {
    const challenge =
      typeof message === "string" ? message : ccc.hexFrom(message).slice(2);

    return this.provider.signMessage(
      challenge,
      this.accountCache ?? (await this.getAccount()),
    );
  }

  async signOnlyTransaction(
    txLike: ccc.TransactionLike,
  ): Promise<ccc.Transaction> {
    const txSigned = await this.provider.signTransaction(txLike);
    return ccc.Transaction.from(txSigned);
  }

  async prepareTransaction(
    txLike: ccc.TransactionLike,
  ): Promise<ccc.Transaction> {
    const tx = ccc.Transaction.from(txLike);
    const { script } = await this.getAddressObj();

    await tx.addCellDepsOfKnownScripts(
      this.client,
      ccc.KnownScript.Secp256k1Blake160,
    );
    await tx.prepareSighashAllWitness(script, 65, this.client);
    return tx;
  }
}


================================================
File: packages/utxo-global/src/doge/index.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { Provider } from "../advancedBarrel.js";

/**
 * @public
 */
export class SignerDoge extends ccc.SignerDoge {
  private accountCache: string | undefined;

  constructor(
    client: ccc.Client,
    public readonly provider: Provider,
    private readonly preferredNetworks: ccc.NetworkPreference[] = [
      {
        addressPrefix: "ckb",
        signerType: ccc.SignerType.Doge,
        network: "doge",
      },
      {
        addressPrefix: "ckt",
        signerType: ccc.SignerType.Doge,
        network: "dogeTestnet",
      },
    ],
  ) {
    super(client);
  }

  async getDogeAddress(): Promise<string> {
    const accounts = await this.provider.getAccount();
    this.accountCache = accounts[0];
    return this.accountCache;
  }

  /**
   * Ensure the BTC network is the same as CKB network.
   */
  async ensureNetwork(): Promise<void> {
    const network = await this._getNetworkToChange();
    if (!network) {
      return;
    }

    const chain = {
      doge: "dogecoin",
      dogeTestnet: "dogecoin_testnet",
    }[network];

    if (chain) {
      await this.provider.switchNetwork(chain);
      return;
    }

    throw new Error(
      `UTXO Global Doge wallet doesn't support the requested chain ${network}`,
    );
  }

  async _getNetworkToChange(): Promise<string | undefined> {
    const currentNetwork = {
      dogecoin: "doge",
      dogecoin_testnet: "dogeTestnet",
    }[await this.provider.getNetwork()];

    const { network } = this.matchNetworkPreference(
      this.preferredNetworks,
      currentNetwork,
    ) ?? { network: currentNetwork };
    if (network === currentNetwork) {
      return;
    }

    return network;
  }

  onReplaced(listener: () => void): () => void {
    const stop: (() => void)[] = [];
    const replacer = async () => {
      listener();
      stop[0]?.();
    };
    stop.push(() => {
      this.provider.removeListener("accountsChanged", replacer);
      this.provider.removeListener("networkChanged", replacer);
    });

    this.provider.on("accountsChanged", replacer);
    this.provider.on("networkChanged", replacer);

    return stop[0];
  }

  async connect(): Promise<void> {
    await this.provider.connect();
    await this.ensureNetwork();
  }

  async isConnected(): Promise<boolean> {
    if ((await this._getNetworkToChange()) !== undefined) {
      return false;
    }

    return await this.provider.isConnected();
  }

  async signMessageRaw(message: string | ccc.BytesLike): Promise<string> {
    const challenge =
      typeof message === "string" ? message : ccc.hexFrom(message).slice(2);
    return this.provider.signMessage(
      challenge,
      this.accountCache ?? (await this.getDogeAddress()),
    );
  }
}


================================================
File: packages/xverse/README.md
================================================
<p align="center">
  <a href="https://app.ckbccc.com/">
    <img alt="Logo" src="https://raw.githubusercontent.com/ckb-devrel/ccc/master/assets/logoAndText.svg" style="height: 8rem; max-width: 90%; padding: 0.5rem 0;" />
  </a>
</p>

<h1 align="center" style="font-size: 48px;">
  CCC's support for Xverse
</h1>

<p align="center">
  <a href="https://www.npmjs.com/package/@ckb-ccc/xverse"><img
    alt="NPM Version" src="https://img.shields.io/npm/v/%40ckb-ccc%2Fxverse"
  /></a>
  <img alt="GitHub commit activity" src="https://img.shields.io/github/commit-activity/m/ckb-devrel/ccc" />
  <img alt="GitHub last commit" src="https://img.shields.io/github/last-commit/ckb-devrel/ccc/master" />
  <img alt="GitHub branch check runs" src="https://img.shields.io/github/check-runs/ckb-devrel/ccc/master" />
  <a href="https://live.ckbccc.com/"><img
    alt="Playground" src="https://img.shields.io/website?url=https%3A%2F%2Flive.ckbccc.com%2F&label=Playground"
  /></a>
  <a href="https://app.ckbccc.com/"><img
    alt="App" src="https://img.shields.io/website?url=https%3A%2F%2Fapp.ckbccc.com%2F&label=App"
  /></a>
  <a href="https://docs.ckbccc.com/"><img
    alt="Docs" src="https://img.shields.io/website?url=https%3A%2F%2Fdocs.ckbccc.com%2F&label=Docs"
  /></a>
</p>

<p align="center">
  CCC - CKBers' Codebase is a one-stop solution for your CKB JS/TS ecosystem development.
  <br />
  Empower yourself with CCC to discover the unlimited potential of CKB.
  <br />
  Interoperate with wallets from different chain ecosystems.
  <br />
  Fully enabling CKB's Turing completeness and cryptographic freedom power.
</p>

## Preview

<p align="center">
  <a href="https://app.ckbccc.com/">
    <img src="https://raw.githubusercontent.com/ckb-devrel/ccc/master/assets/preview.png" width="30%" />
  </a>
</p>

This project is still under active development, and we are looking forward to your feedback. [Try its demo now here](https://app.ckbccc.com/). It showcases how to use CCC for some basic scenarios in CKB.

<h3 align="center">
  Read more about CCC on <a href="https://docs.ckbccc.com">our website</a> or <a href="https://github.com/ckb-devrel/ccc">GitHub Repo</a>.
</h3>


================================================
File: packages/xverse/CHANGELOG.md
================================================
# @ckb-ccc/xverse

## 1.0.11

### Patch Changes

- Updated dependencies [[`28c211d`](https://github.com/ckb-devrel/ccc/commit/28c211d839a2d2305eca56e82ba7da144aa3df4a)]:
  - @ckb-ccc/core@1.5.0

## 1.0.10

### Patch Changes

- Updated dependencies [[`3fdb2c4`](https://github.com/ckb-devrel/ccc/commit/3fdb2c477d0b2766b231e436b8f396f047b02634), [`f429087`](https://github.com/ckb-devrel/ccc/commit/f4290874dfab3fe58844e5169673c5d47bda64e3)]:
  - @ckb-ccc/core@1.4.0

## 1.0.9

### Patch Changes

- Updated dependencies [[`a48cccf`](https://github.com/ckb-devrel/ccc/commit/a48cccfae3ce6b3456a5eb863f207e7e5a6e568f)]:
  - @ckb-ccc/core@1.3.1

## 1.0.8

### Patch Changes

- Updated dependencies [[`4dbf4fd`](https://github.com/ckb-devrel/ccc/commit/4dbf4fd8021cf14d05282706a7667ea7d108fb09), [`4c76f9e`](https://github.com/ckb-devrel/ccc/commit/4c76f9e2a93a226fcfc4c32a5378bb531bfff08f), [`c2c4c26`](https://github.com/ckb-devrel/ccc/commit/c2c4c264e04461948e4b913b2f22054e6032ddc8), [`b6a73fa`](https://github.com/ckb-devrel/ccc/commit/b6a73fa9628ebdff51cb8f246309654cd53e36f2), [`8c97c85`](https://github.com/ckb-devrel/ccc/commit/8c97c851db4a2d940c7e59116ca7620cfd0afae1)]:
  - @ckb-ccc/core@1.3.0

## 1.0.7

### Patch Changes

- Updated dependencies [[`01263bd`](https://github.com/ckb-devrel/ccc/commit/01263bd8c601fa8fcdfa24be52601716e1864843)]:
  - @ckb-ccc/core@1.2.3

## 1.0.6

### Patch Changes

- Updated dependencies [[`7886e3d`](https://github.com/ckb-devrel/ccc/commit/7886e3d89e9ca8f3514a2044c6dd4e8ec6b49933)]:
  - @ckb-ccc/core@1.2.2

## 1.0.5

### Patch Changes

- Updated dependencies [[`94e2618`](https://github.com/ckb-devrel/ccc/commit/94e26182515e09d6086ec5b653d091f117a499e6)]:
  - @ckb-ccc/core@1.2.1

## 1.0.4

### Patch Changes

- Updated dependencies [[`128e87b`](https://github.com/ckb-devrel/ccc/commit/128e87b5ca3e97bfe7842e76f786aa6aec010797)]:
  - @ckb-ccc/core@1.2.0

## 1.0.3

### Patch Changes

- Updated dependencies [[`925991c`](https://github.com/ckb-devrel/ccc/commit/925991c8a24b1f34667e30b28b69812e936e3928)]:
  - @ckb-ccc/core@1.1.1

## 1.0.2

### Patch Changes

- Updated dependencies [[`ddc0a28`](https://github.com/ckb-devrel/ccc/commit/ddc0a281c3d1dfa6ebc990dae92994f026dfddcc)]:
  - @ckb-ccc/core@1.1.0

## 1.0.1

### Patch Changes

- Updated dependencies [[`719055b`](https://github.com/ckb-devrel/ccc/commit/719055b404f31b40362f51714b9f11c85b857581), [`94caaca`](https://github.com/ckb-devrel/ccc/commit/94caaca11c63752a25282d42f51161c94397dec6)]:
  - @ckb-ccc/core@1.0.1

## 1.0.0

### Major Changes

- [#107](https://github.com/ckb-devrel/ccc/pull/107) [`b99f55f`](https://github.com/ckb-devrel/ccc/commit/b99f55f74e64106391ce53f7d0bd0fa7522023cc) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: molecule

### Patch Changes

- Updated dependencies [[`b99f55f`](https://github.com/ckb-devrel/ccc/commit/b99f55f74e64106391ce53f7d0bd0fa7522023cc)]:
  - @ckb-ccc/core@1.0.0

## 0.0.17

### Patch Changes

- Updated dependencies [[`c1cb910`](https://github.com/ckb-devrel/ccc/commit/c1cb91091780c7b33fbbd683ef8edc9f11452ecd)]:
  - @ckb-ccc/core@0.1.2

## 0.0.16

### Patch Changes

- [#101](https://github.com/ckb-devrel/ccc/pull/101) [`d9affcc`](https://github.com/ckb-devrel/ccc/commit/d9affcc01c7b839b227e4d79bcb66e717577502a) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix: commonjs

- Updated dependencies [[`d9affcc`](https://github.com/ckb-devrel/ccc/commit/d9affcc01c7b839b227e4d79bcb66e717577502a)]:
  - @ckb-ccc/core@0.1.1

## 0.0.15

### Patch Changes

- [#70](https://github.com/ckb-devrel/ccc/pull/70) [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): websocket transport

- [#85](https://github.com/ckb-devrel/ccc/pull/85) [`91832b1`](https://github.com/ckb-devrel/ccc/commit/91832b103c5d7a1272060639f77754a1c731a753) Thanks [@yixyxiu](https://github.com/yixyxiu)! - fixed: To resolve module not found compilation errors in the CRA app.

- [#60](https://github.com/ckb-devrel/ccc/pull/60) [`e904963`](https://github.com/ckb-devrel/ccc/commit/e904963a16f12c410d861eb3ae01b87d68cb3e34) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: support Xverse

- Updated dependencies [[`a3d5359`](https://github.com/ckb-devrel/ccc/commit/a3d53595f6dd11f2f59cdf0086b3d7ce558a2fdd), [`8824ff2`](https://github.com/ckb-devrel/ccc/commit/8824ff27af3b76186f1a7d6db8c907cd66f09d6a), [`f07a506`](https://github.com/ckb-devrel/ccc/commit/f07a506bd6fc27fe659a17d2f7baaeec54716d81), [`f21d7e4`](https://github.com/ckb-devrel/ccc/commit/f21d7e4cf422edab4a836ef6d678b620594fef8d), [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366), [`1720d5a`](https://github.com/ckb-devrel/ccc/commit/1720d5a398543f1c6e24763eeaf15d84cd2214bf), [`e63a06e`](https://github.com/ckb-devrel/ccc/commit/e63a06ee75ac8595208d216dec88a4228c465e23), [`c092988`](https://github.com/ckb-devrel/ccc/commit/c092988e7765b9ac79498d6bd72a6a2f62859b6f), [`50f2ce0`](https://github.com/ckb-devrel/ccc/commit/50f2ce08e74cb3fbeae926267d42e28b426fd7f4), [`4709384`](https://github.com/ckb-devrel/ccc/commit/4709384e37188991cb937b16f99f47ca82c912b8)]:
  - @ckb-ccc/core@0.1.0

## 0.0.15-alpha.9

### Patch Changes

- Updated dependencies [[`f07a506`](https://github.com/ckb-devrel/ccc/commit/f07a506bd6fc27fe659a17d2f7baaeec54716d81)]:
  - @ckb-ccc/core@0.1.0-alpha.7

## 0.0.15-alpha.8

### Patch Changes

- Updated dependencies [[`4709384`](https://github.com/ckb-devrel/ccc/commit/4709384e37188991cb937b16f99f47ca82c912b8)]:
  - @ckb-ccc/core@0.1.0-alpha.6

## 0.0.15-alpha.7

### Patch Changes

- [#85](https://github.com/ckb-devrel/ccc/pull/85) [`91832b1`](https://github.com/ckb-devrel/ccc/commit/91832b103c5d7a1272060639f77754a1c731a753) Thanks [@yixyxiu](https://github.com/yixyxiu)! - fixed: To resolve module not found compilation errors in the CRA app.

## 0.0.15-alpha.6

### Patch Changes

- Updated dependencies [[`50f2ce0`](https://github.com/ckb-devrel/ccc/commit/50f2ce08e74cb3fbeae926267d42e28b426fd7f4)]:
  - @ckb-ccc/core@0.1.0-alpha.5

## 0.0.15-alpha.5

### Patch Changes

- Updated dependencies [[`f21d7e4`](https://github.com/ckb-devrel/ccc/commit/f21d7e4cf422edab4a836ef6d678b620594fef8d)]:
  - @ckb-ccc/core@0.1.0-alpha.4

## 0.0.15-alpha.4

### Patch Changes

- Updated dependencies [[`a3d5359`](https://github.com/ckb-devrel/ccc/commit/a3d53595f6dd11f2f59cdf0086b3d7ce558a2fdd)]:
  - @ckb-ccc/core@0.0.16-alpha.3

## 0.0.15-alpha.3

### Patch Changes

- [#70](https://github.com/ckb-devrel/ccc/pull/70) [`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366) Thanks [@Hanssen0](https://github.com/Hanssen0)! - fix(core): websocket transport

- Updated dependencies [[`acfc050`](https://github.com/ckb-devrel/ccc/commit/acfc0502cd6beb48b9310dec8411dcd630507366)]:
  - @ckb-ccc/core@0.0.16-alpha.2

## 0.0.15-alpha.2

### Patch Changes

- Updated dependencies [[`8824ff2`](https://github.com/ckb-devrel/ccc/commit/8824ff27af3b76186f1a7d6db8c907cd66f09d6a), [`c092988`](https://github.com/ckb-devrel/ccc/commit/c092988e7765b9ac79498d6bd72a6a2f62859b6f)]:
  - @ckb-ccc/core@0.0.16-alpha.1

## 0.0.15-alpha.1

### Patch Changes

- Updated dependencies [[`1720d5a`](https://github.com/ckb-devrel/ccc/commit/1720d5a398543f1c6e24763eeaf15d84cd2214bf)]:
  - @ckb-ccc/core@0.0.16-alpha.0

## 0.0.15-alpha.0

### Patch Changes

- [#60](https://github.com/ckb-devrel/ccc/pull/60) [`e904963`](https://github.com/ckb-devrel/ccc/commit/e904963a16f12c410d861eb3ae01b87d68cb3e34) Thanks [@Hanssen0](https://github.com/Hanssen0)! - feat: support Xverse


================================================
File: packages/xverse/eslint.config.mjs
================================================
// @ts-check

import eslint from "@eslint/js";
import eslintPluginPrettierRecommended from "eslint-plugin-prettier/recommended";
import tseslint from "typescript-eslint";

import { dirname } from "path";
import { fileURLToPath } from "url";

export default [
  ...tseslint.config({
    files: ["**/*.ts"],
    extends: [
      eslint.configs.recommended,
      ...tseslint.configs.recommendedTypeChecked,
    ],
    rules: {
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          args: "all",
          argsIgnorePattern: "^_",
          caughtErrors: "all",
          caughtErrorsIgnorePattern: "^_",
          destructuredArrayIgnorePattern: "^_",
          varsIgnorePattern: "^_",
          ignoreRestSiblings: true,
        },
      ],
      "@typescript-eslint/unbound-method": ["error", { ignoreStatic: true }],
      "@typescript-eslint/no-unsafe-member-access": "off",
      "@typescript-eslint/require-await": "off",
      "no-empty": "off",
      "prefer-const": [
        "error",
        { ignoreReadBeforeAssign: true, destructuring: "all" },
      ],
    },
    languageOptions: {
      parserOptions: {
        project: true,
        tsconfigRootDir: dirname(fileURLToPath(import.meta.url)),
      },
    },
  }),
  eslintPluginPrettierRecommended,
];


================================================
File: packages/xverse/package.json
================================================
{
  "name": "@ckb-ccc/xverse",
  "version": "1.0.11",
  "description": "CCC - CKBer's Codebase. Common Chains Connector's support for Xverse",
  "author": "Hanssen0 <hanssen0@hanssen0.com>",
  "license": "MIT",
  "private": false,
  "homepage": "https://github.com/ckb-devrel/ccc",
  "repository": {
    "type": "git",
    "url": "git://github.com/ckb-devrel/ccc.git"
  },
  "sideEffects": false,
  "main": "dist.commonjs/index.js",
  "module": "dist/index.js",
  "exports": {
    ".": {
      "import": "./dist/index.js",
      "require": "./dist.commonjs/index.js",
      "default": "./dist.commonjs/index.js"
    },
    "./barrel": {
      "import": "./dist/barrel.js",
      "require": "./dist.commonjs/barrel.js",
      "default": "./dist.commonjs/barrel.js"
    },
    "./advanced": {
      "import": "./dist/advanced.js",
      "require": "./dist.commonjs/advanced.js",
      "default": "./dist.commonjs/advanced.js"
    },
    "./advancedBarrel": {
      "import": "./dist/advancedBarrel.js",
      "require": "./dist.commonjs/advancedBarrel.js",
      "default": "./dist.commonjs/advancedBarrel.js"
    }
  },
  "scripts": {
    "build": "rimraf ./dist && rimraf ./dist.commonjs && tsc && tsc --project tsconfig.commonjs.json && copyfiles -u 2 misc/basedirs/**/* .",
    "lint": "eslint ./src",
    "format": "prettier --write . && eslint --fix ./src"
  },
  "devDependencies": {
    "@eslint/js": "^9.1.1",
    "copyfiles": "^2.4.1",
    "eslint": "^9.1.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.1.3",
    "prettier": "^3.2.5",
    "prettier-plugin-organize-imports": "^3.2.4",
    "rimraf": "^5.0.5",
    "typescript": "^5.4.5",
    "typescript-eslint": "^7.7.0"
  },
  "publishConfig": {
    "access": "public"
  },
  "dependencies": {
    "@ckb-ccc/core": "workspace:*",
    "valibot": "^0.42.1"
  }
}


================================================
File: packages/xverse/tsconfig.base.json
================================================
{
  "compilerOptions": {
    "target": "es2020",
    "incremental": true,
    "allowJs": true,
    "importHelpers": false,
    "declaration": true,
    "declarationMap": true,
    "experimentalDecorators": true,
    "useDefineForClassFields": false,
    "esModuleInterop": true,
    "strict": true,
    "noImplicitAny": true,
    "strictBindCallApply": true,
    "strictNullChecks": true,
    "alwaysStrict": true,
    "noFallthroughCasesInSwitch": true,
    "forceConsistentCasingInFileNames": true,
    "skipLibCheck": true
  },
  "include": ["src/**/*"]
}


================================================
File: packages/xverse/tsconfig.commonjs.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "NodeNext",
    "moduleResolution": "NodeNext",
    "outDir": "./dist.commonjs"
  }
}


================================================
File: packages/xverse/tsconfig.json
================================================
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "module": "ESNext",
    "moduleResolution": "Bundler",
    "outDir": "./dist",
  }
}


================================================
File: packages/xverse/typedoc.json
================================================
{
  "$schema": "https://typedoc.org/schema.json",
  "entryPoints": ["./src/index.ts", "./src/advanced.ts"],
  "extends": ["../../typedoc.base.json"],
  "name": "@ckb-ccc xverse"
}


================================================
File: packages/xverse/.npmignore
================================================
node_modules/
misc/

*test.js
*test.ts
*test.d.ts
*test.d.ts.map
*spec.js
*spec.ts
*spec.d.ts
*spec.d.ts.map

tsconfig.json
tsconfig.*.json
eslint.config.mjs
.prettierrc
.prettierignore

tsconfig.tsbuildinfo
tsconfig.*.tsbuildinfo
.github/


================================================
File: packages/xverse/.prettierignore
================================================
node_modules/

dist/
dist.commonjs/

.npmignore
.prettierrc
tsconfig.json
eslint.config.mjs
.prettierrc

tsconfig.tsbuildinfo
.github/


================================================
File: packages/xverse/.prettierrc
================================================
{
  "singleQuote": false,
  "trailingComma": "all",
  "plugins": ["prettier-plugin-organize-imports"]
}


================================================
File: packages/xverse/misc/basedirs/dist/package.json
================================================
{
  "type": "module"
}

================================================
File: packages/xverse/misc/basedirs/dist.commonjs/package.json
================================================
{
  "type": "commonjs"
}


================================================
File: packages/xverse/src/advanced.ts
================================================
export * as XverseA from "./advancedBarrel.js";


================================================
File: packages/xverse/src/advancedBarrel.ts
================================================
export * from "./sat-connect-core/advanced.js";


================================================
File: packages/xverse/src/barrel.ts
================================================
export * from "./signer.js";
export * from "./signersFactory.js";


================================================
File: packages/xverse/src/index.ts
================================================
export * as Xverse from "./barrel.js";


================================================
File: packages/xverse/src/signer.ts
================================================
import { ccc } from "@ckb-ccc/core";
import * as v from "valibot";
import {
  Address,
  AddressPurpose,
  BtcProvider,
  MessageSigningProtocols,
  Requests,
  Return,
  RpcErrorCode,
  RpcResponse,
  rpcErrorResponseMessageSchema,
  rpcSuccessResponseMessageSchema,
} from "./advancedBarrel.js";

async function checkResponse<T extends keyof Requests>(
  response: Promise<RpcResponse<T>>,
): Promise<Return<T>> {
  const res = await response;
  if (v.is(rpcErrorResponseMessageSchema, res)) {
    throw res.error;
  }

  if (v.is(rpcSuccessResponseMessageSchema, res)) {
    return res.result as Return<T>;
  }

  throw {
    code: RpcErrorCode.INTERNAL_ERROR,
    message: "Received unknown response from provider.",
    data: res,
  };
}

/**
 * Class representing a Bitcoin signer that extends SignerBtc
 * @public
 */
export class Signer extends ccc.SignerBtc {
  private addressCache: Promise<Address | undefined> | undefined;

  /**
   * Creates an instance of Signer.
   * @param client - The client instance.
   * @param provider - The provider instance.
   */
  constructor(
    client: ccc.Client,
    public readonly provider: BtcProvider,
    private readonly preferredNetworks: ccc.NetworkPreference[] = [
      {
        addressPrefix: "ckb",
        signerType: ccc.SignerType.BTC,
        network: "btc",
      },
      {
        addressPrefix: "ckt",
        signerType: ccc.SignerType.BTC,
        network: "btcTestnet",
      },
    ],
  ) {
    super(client);
  }

  async assertAddress(): Promise<Address> {
    this.addressCache =
      this.addressCache ??
      (async () => {
        if (!(await this.isConnected())) {
          return;
        }

        return (
          await checkResponse(
            this.provider.request("getAddresses", {
              purposes: [AddressPurpose.Payment],
            }),
          )
        ).addresses[0];
      })();
    const address = await this.addressCache;

    if (address) {
      return address;
    }
    throw Error("Not connected");
  }

  /**
   * Gets the Bitcoin account address.
   * @returns A promise that resolves to the Bitcoin account address.
   */
  async getBtcAccount(): Promise<string> {
    return (await this.assertAddress()).address;
  }

  /**
   * Gets the Bitcoin public key.
   * @returns A promise that resolves to the Bitcoin public key.
   */
  async getBtcPublicKey(): Promise<ccc.Hex> {
    return ccc.hexFrom((await this.assertAddress()).publicKey);
  }

  /**
   * Connects to the provider by requesting accounts.
   * @returns A promise that resolves when the connection is established.
   */
  async connect(): Promise<void> {
    if (await this.isConnected()) {
      return;
    }

    await checkResponse(
      this.provider.request("wallet_requestPermissions", undefined),
    );
  }

  async disconnect(): Promise<void> {
    this.addressCache = undefined;
  }

  onReplaced(listener: () => void): () => void {
    const stop: (() => void)[] = [];
    const replacer = () => {
      listener();
      stop[0]?.();
    };
    stop.push(
      this.provider.addListener("accountChange", replacer),
      this.provider.addListener("networkChange", replacer),
    );

    return stop[0];
  }

  /**
   * Checks if the signer is connected.
   * @returns A promise that resolves to true if connected, false otherwise.
   */
  async isConnected(): Promise<boolean> {
    try {
      await checkResponse(this.provider.request("getBalance", undefined));
      return true;
    } catch (_error) {
      return false;
    }
  }

  /**
   * Signs a raw message with the Bitcoin account.
   * @param message - The message to sign.
   * @returns A promise that resolves to the signed message.
   */
  async signMessageRaw(message: string | ccc.BytesLike): Promise<string> {
    const challenge =
      typeof message === "string" ? message : ccc.hexFrom(message).slice(2);

    return (
      await checkResponse(
        this.provider.request("signMessage", {
          message: challenge,
          address: (await this.assertAddress()).address,
          protocol: MessageSigningProtocols.ECDSA,
        }),
      )
    ).signature;
  }
}


================================================
File: packages/xverse/src/signersFactory.ts
================================================
import { ccc } from "@ckb-ccc/core";
import { BtcProvider, Provider } from "./advancedBarrel.js";
import { Signer } from "./signer.js";

function getProviderById(providerId: string) {
  return (
    providerId
      ?.split(".")
      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-return
      .reduce((acc: any, part) => acc?.[part], window) as BtcProvider
  );
}

/**
 * Retrieves the Xverse signer if available.
 * @public
 *
 * @param client - The client instance.
 * @returns All Xverse Signer instances
 */
export function getXverseSigners(
  client: ccc.Client,
  preferredNetworks?: ccc.NetworkPreference[],
): { wallet: ccc.Wallet; signerInfo: ccc.SignerInfo }[] {
  const windowRef = window as {
    BitcoinProvider?: BtcProvider;
    XverseProviders?: {
      BitcoinProvider?: BtcProvider;
    };
    btc_providers?: Provider[];
  };

  const signers = (() => {
    if (windowRef.btc_providers) {
      return windowRef.btc_providers.map((provider) => ({
        wallet: {
          name: provider.name,
          icon: provider.icon,
        },
        signerInfo: {
          name: "BTC",
          signer: new Signer(
            client,
            getProviderById(provider.id),
            preferredNetworks,
          ),
        },
      }));
    }

    return [];
  })();

  return signers;
}


================================================
File: packages/xverse/src/sat-connect-core/advanced.ts
================================================
export * from "./btcMethods.advanced.js";
export * from "./provider.advanced.js";
export * from "./requests.advanced.js";
export * from "./types.advanced.js";


================================================
File: packages/xverse/src/sat-connect-core/btcMethods.advanced.ts
================================================
// From https://github.com/secretkeylabs/sats-connect-core/

/**
 * Represents the types and interfaces related to BTC methods.
 */

import * as v from "valibot";
import {
  MethodParamsAndResult,
  rpcRequestMessageSchema,
} from "./types.advanced.js";
import { walletTypeSchema } from "./walletMethods.advanced.js";

export enum AddressPurpose {
  Ordinals = "ordinals",
  Payment = "payment",
  Stacks = "stacks",
}

export enum AddressType {
  p2pkh = "p2pkh",
  p2sh = "p2sh",
  p2wpkh = "p2wpkh",
  p2wsh = "p2wsh",
  p2tr = "p2tr",
  stacks = "stacks",
}

export const addressSchema = v.object({
  address: v.string(),
  publicKey: v.string(),
  purpose: v.enum(AddressPurpose),
  addressType: v.enum(AddressType),
});
export type Address = v.InferOutput<typeof addressSchema>;

export const getInfoMethodName = "getInfo";
export const getInfoParamsSchema = v.nullish(v.null());
export type GetInfoParams = v.InferOutput<typeof getInfoParamsSchema>;
export const getInfoResultSchema = v.object({
  /**
   * Version of the wallet.
   */
  version: v.string(),

  /**
   * [WBIP](https://wbips.netlify.app/wbips/WBIP002) methods supported by the wallet.
   */
  methods: v.optional(v.array(v.string())),

  /**
   * List of WBIP standards supported by the wallet. Not currently used.
   */
  supports: v.array(v.string()),
});
export type GetInfoResult = v.InferOutput<typeof getInfoResultSchema>;
export const getInfoRequestMessageSchema = v.object({
  ...rpcRequestMessageSchema.entries,
  ...v.object({
    method: v.literal(getInfoMethodName),
    params: getInfoParamsSchema,
    id: v.string(),
  }).entries,
});
export type GetInfoRequestMessage = v.InferOutput<
  typeof getInfoRequestMessageSchema
>;
export type GetInfo = MethodParamsAndResult<
  v.InferOutput<typeof getInfoParamsSchema>,
  v.InferOutput<typeof getInfoResultSchema>
>;

export const getAddressesMethodName = "getAddresses";
export const getAddressesParamsSchema = v.object({
  /**
   * The purposes for which to generate addresses. See
   * {@linkcode AddressPurpose} for available purposes.
   */
  purposes: v.array(v.enum(AddressPurpose)),
  /**
   * A message to be displayed to the user in the request prompt.
   */
  message: v.optional(v.string()),
});
export type GetAddressesParams = v.InferOutput<typeof getAddressesParamsSchema>;
export const getAddressesResultSchema = v.object({
  /**
   * The addresses generated for the given purposes.
   */
  addresses: v.array(addressSchema),
});
export type GetAddressesResult = v.InferOutput<typeof getAddressesResultSchema>;
export const getAddressesRequestMessageSchema = v.object({
  ...rpcRequestMessageSchema.entries,
  ...v.object({
    method: v.literal(getAddressesMethodName),
    params: getAddressesParamsSchema,
    id: v.string(),
  }).entries,
});
export type GetAddressesRequestMessage = v.InferOutput<
  typeof getAddressesRequestMessageSchema
>;
export type GetAddresses = MethodParamsAndResult<
  v.InferOutput<typeof getAddressesParamsSchema>,
  v.InferOutput<typeof getAddressesResultSchema>
>;

export const signMessageMethodName = "signMessage";

export enum MessageSigningProtocols {
  ECDSA = "ECDSA",
  BIP322 = "BIP322",
}

export const signMessageParamsSchema = v.object({
  /**
   * The address used for signing.
   **/
  address: v.string(),
  /**
   * The message to sign.
   **/
  message: v.string(),
  /**
   * The protocol to use for signing the message.
   */
  protocol: v.optional(v.enum(MessageSigningProtocols)),
});
export type SignMessageParams = v.InferOutput<typeof signMessageParamsSchema>;
export const signMessageResultSchema = v.object({
  /**
   * The signature of the message.
   */
  signature: v.string(),
  /**
   * hash of the message.
   */
  messageHash: v.string(),
  /**
   * The address used for signing.
   */
  address: v.string(),
  /**
   * The protocol to use for signing the message.
   */
  protocol: v.enum(MessageSigningProtocols),
});
export type SignMessageResult = v.InferOutput<typeof signMessageResultSchema>;
export const signMessageRequestMessageSchema = v.object({
  ...rpcRequestMessageSchema.entries,
  ...v.object({
    method: v.literal(signMessageMethodName),
    params: signMessageParamsSchema,
    id: v.string(),
  }).entries,
});
export type SignMessageRequestMessage = v.InferOutput<
  typeof signMessageRequestMessageSchema
>;
export type SignMessage = MethodParamsAndResult<
  v.InferOutput<typeof signMessageParamsSchema>,
  v.InferOutput<typeof signMessageResultSchema>
>;

type Recipient = {
  /**
   * The recipient's address.
   **/
  address: string;
  /**
   * The amount to send to the recipient in satoshis.
   */
  amount: number;
};

export type SendTransferParams = {
  /**
   * Array of recipients to send to.
   * The amount to send to each recipient is in satoshis.
   */
  recipients: Array<Recipient>;
};
type SendTransferResult = {
  /**
   * The transaction id as a hex-encoded string.
   */
  txid: string;
};

export type SendTransfer = MethodParamsAndResult<
  SendTransferParams,
  SendTransferResult
>;

export type SignPsbtParams = {
  /**
   * The base64 encoded PSBT to sign.
   */
  psbt: string;
  /**
   * The inputs to sign.
   * The key is the address and the value is an array of indexes of the inputs to sign.
   */
  signInputs: Record<string, number[]>;
  /**
   * the sigHash type to use for signing.
   * will default to the sighash type of the input if not provided.
   **/
  allowedSignHash?: number;
  /**
   * Whether to broadcast the transaction after signing.
   **/
  broadcast?: boolean;
};

export type SignPsbtResult = {
  /**
   * The base64 encoded PSBT after signing.
   */
  psbt: string;
  /**
   * The transaction id as a hex-encoded string.
   * This is only returned if the transaction was broadcast.
   **/
  txid?: string;
};

export type SignPsbt = MethodParamsAndResult<SignPsbtParams, SignPsbtResult>;

export const getAccountsMethodName = "getAccounts";
export const getAccountsParamsSchema = v.object({
  /**
   * The purposes for which to generate addresses. See
   * {@linkcode AddressPurpose} for available purposes.
   */
  purposes: v.array(v.enum(AddressPurpose)),
  /**
   * A message to be displayed to the user in the request prompt.
   */
  message: v.optional(v.string()),
});
export type GetAccountsParams = v.InferOutput<typeof getAccountsParamsSchema>;

export const getAccountsResultSchema = v.array(
  v.object({
    ...addressSchema.entries,
    ...v.object({
      walletType: walletTypeSchema,
    }).entries,
  }),
);
export type GetAccountsResult = v.InferOutput<typeof getAccountsResultSchema>;
export const getAccountsRequestMessageSchema = v.object({
  ...rpcRequestMessageSchema.entries,
  ...v.object({
    method: v.literal(getAccountsMethodName),
    params: getAccountsParamsSchema,
    id: v.string(),
  }).entries,
});
export type GetAccountsRequestMessage = v.InferOutput<
  typeof getAccountsRequestMessageSchema
>;
export type GetAccounts = MethodParamsAndResult<
  v.InferOutput<typeof getAccountsParamsSchema>,
  v.InferOutput<typeof getAccountsResultSchema>
>;

export const getBalanceMethodName = "getBalance";
export const getBalanceParamsSchema = v.nullish(v.null());
export const getBalanceResultSchema = v.object({
  /**
   * The confirmed balance of the wallet in sats. Using a string due to chrome
   * messages not supporting bigint
   * (https://issues.chromium.org/issues/40116184).
   */
  confirmed: v.string(),

  /**
   * The unconfirmed balance of the wallet in sats. Using a string due to chrome
   * messages not supporting bigint
   * (https://issues.chromium.org/issues/40116184).
   */
  unconfirmed: v.string(),

  /**
   * The total balance (both confirmed and unconfrimed UTXOs) of the wallet in
   * sats. Using a string due to chrome messages not supporting bigint
   * (https://issues.chromium.org/issues/40116184).
   */
  total: v.string(),
});
export const getBalanceRequestMessageSchema = v.object({
  ...rpcRequestMessageSchema.entries,
  ...v.object({
    method: v.literal(getBalanceMethodName),
    id: v.string(),
  }).entries,
});
export type GetBalance = MethodParamsAndResult<
  v.InferOutput<typeof getBalanceParamsSchema>,
  v.InferOutput<typeof getBalanceResultSchema>
>;


================================================
File: packages/xverse/src/sat-connect-core/provider.advanced.ts
================================================
import * as v from "valibot";
import { Params, Requests } from "./requests.advanced.js";
import { RpcResponse } from "./types.advanced.js";

// accountChange
export const accountChangeEventName = "accountChange";
export const accountChangeSchema = v.object({
  type: v.literal(accountChangeEventName),
});
export type AccountChangeEvent = v.InferOutput<typeof accountChangeSchema>;

// networkChange
export const networkChangeEventName = "networkChange";
export const networkChangeSchema = v.object({
  type: v.literal(networkChangeEventName),
});
export type NetworkChangeEvent = v.InferOutput<typeof networkChangeSchema>;

// disconnect
export const disconnectEventName = "disconnect";
export const disconnectSchema = v.object({
  type: v.literal(disconnectEventName),
});
export type DisconnectEvent = v.InferOutput<typeof disconnectSchema>;

export const walletEventSchema = v.variant("type", [
  accountChangeSchema,
  networkChangeSchema,
  disconnectSchema,
]);

export type WalletEvent = v.InferOutput<typeof walletEventSchema>;
export type AddListener = <const WalletEventName extends WalletEvent["type"]>(
  eventName: WalletEventName,
  cb: (event: Extract<WalletEvent, { type: WalletEventName }>) => void,
) => () => void;

/**
 * Interface representing a provider for interacting with accounts and signing messages.
 */
export interface BtcProvider {
  request: <Method extends keyof Requests>(
    method: Method,
    options: Params<Method>,
    providerId?: string,
  ) => Promise<RpcResponse<Method>>;

  addListener: AddListener;
}

export interface Provider {
  id: string;
  name: string;
  icon: string;
  webUrl?: string;
  chromeWebStoreUrl?: string;
  mozillaAddOnsUrl?: string;
  googlePlayStoreUrl?: string;
  iOSAppStoreUrl?: string;
  methods?: string[];
}


================================================
File: packages/xverse/src/sat-connect-core/requests.advanced.ts
================================================
import {
  GetAccounts,
  GetAddresses,
  GetBalance,
  GetInfo,
  SendTransfer,
  SignMessage,
  SignPsbt,
} from "./btcMethods.advanced.js";
import {
  GetWalletType,
  RenouncePermissions,
  RequestPermissions,
} from "./walletMethods.advanced.js";

export interface BtcRequests {
  getInfo: GetInfo;
  getAddresses: GetAddresses;
  getAccounts: GetAccounts;
  getBalance: GetBalance;
  signMessage: SignMessage;
  sendTransfer: SendTransfer;
  signPsbt: SignPsbt;
}

export type BtcRequestMethod = keyof BtcRequests;

export interface WalletRequests {
  wallet_requestPermissions: RequestPermissions;
  wallet_renouncePermissions: RenouncePermissions;
  wallet_getWalletType: GetWalletType;
}

export type Requests = BtcRequests & WalletRequests;

export type Return<Method> = Method extends keyof Requests
  ? Requests[Method]["result"]
  : never;
export type Params<Method> = Method extends keyof Requests
  ? Requests[Method]["params"]
  : never;


================================================
File: packages/xverse/src/sat-connect-core/types.advanced.ts
================================================
/* eslint-disable @typescript-eslint/no-explicit-any */
// From https://github.com/secretkeylabs/sats-connect-core/

import * as v from "valibot";
import type { BtcProvider } from "./provider.advanced.js";
import type { Requests, Return } from "./requests.advanced.js";

export enum BitcoinNetworkType {
  Mainnet = "Mainnet",
  Testnet = "Testnet",
  Signet = "Signet",
}

export interface BitcoinNetwork {
  type: BitcoinNetworkType;
  address?: string;
}

export interface RequestPayload {
  network: BitcoinNetwork;
}

export interface RequestOptions<Payload extends RequestPayload, Response> {
  onFinish: (response: Response) => void;
  onCancel: () => void;
  payload: Payload;
  getProvider?: () => Promise<BtcProvider | undefined>;
}

// RPC Request and Response types

export const RpcIdSchema = v.optional(
  v.union([v.string(), v.number(), v.null()]),
);
export type RpcId = v.InferOutput<typeof RpcIdSchema>;
export const rpcRequestMessageSchema = v.object({
  jsonrpc: v.literal("2.0"),
  method: v.string(),
  params: v.optional(
    v.union([
      v.array(v.unknown()),
      v.looseObject({}),
      // Note: This is to support current incorrect usage of RPC 2.0. Params need
      // to be either an array or an object when provided. Changing this now would
      // be a breaking change, so accepting null values for now. Tracking in
      // https://linear.app/xverseapp/issue/ENG-4538.
      v.null(),
    ]),
  ),
  id: RpcIdSchema,
});
export type RpcRequestMessage = v.InferOutput<typeof rpcRequestMessageSchema>;

export interface RpcBase {
  jsonrpc: "2.0";
  id: RpcId;
}
export interface RpcRequest<T extends string, U> extends RpcBase {
  method: T;
  params: U;
}

export interface MethodParamsAndResult<TParams, TResult> {
  params: TParams;
  result: TResult;
}

/**
 * @enum {number} RpcErrorCode
 * @description JSON-RPC error codes
 * @see https://www.jsonrpc.org/specification#error_object
 */
export enum RpcErrorCode {
  /**
   * Parse error Invalid JSON
   **/
  PARSE_ERROR = -32700,
  /**
   * The JSON sent is not a valid Request object.
   **/
  INVALID_REQUEST = -32600,
  /**
   * The method does not exist/is not available.
   **/
  METHOD_NOT_FOUND = -32601,
  /**
   * Invalid method parameter(s).
   */
  INVALID_PARAMS = -32602,
  /**
   * Internal JSON-RPC error.
   * This is a generic error, used when the server encounters an error in performing the request.
   **/
  INTERNAL_ERROR = -32603,
  /**
   * user rejected/canceled the request
   */
  USER_REJECTION = -32000,
  /**
   * method is not supported for the address provided
   */
  METHOD_NOT_SUPPORTED = -32001,
  /**
   * The client does not have permission to access the requested resource.
   */
  ACCESS_DENIED = -32002,
}

export const rpcSuccessResponseMessageSchema = v.object({
  jsonrpc: v.literal("2.0"),
  result: v.nonOptional(v.unknown()),
  id: RpcIdSchema,
});
export type RpcSuccessResponseMessage = v.InferOutput<
  typeof rpcSuccessResponseMessageSchema
>;

export const rpcErrorResponseMessageSchema = v.object({
  jsonrpc: v.literal("2.0"),
  error: v.nonOptional(v.unknown()),
  id: RpcIdSchema,
});
export type RpcErrorResponseMessage = v.InferOutput<
  typeof rpcErrorResponseMessageSchema
>;
export const rpcResponseMessageSchema = v.union([
  rpcSuccessResponseMessageSchema,
  rpcErrorResponseMessageSchema,
]);
export type RpcResponseMessage = v.InferOutput<typeof rpcResponseMessageSchema>;

export interface RpcError {
  code: number | RpcErrorCode;
  message: string;
  data?: any;
}

export interface RpcErrorResponse<TError extends RpcError = RpcError>
  extends RpcBase {
  error: TError;
}

export interface RpcSuccessResponse<Method extends keyof Requests>
  extends RpcBase {
  result: Return<Method>;
}

export type RpcResponse<Method extends keyof Requests> =
  | RpcSuccessResponse<Method>
  | RpcErrorResponse;

export type RpcResult<Method extends keyof Requests> =
  | {
      result: RpcSuccessResponse<Method>["result"];
      status: "success";
    }
  | {
      error: RpcErrorResponse["error"];
      status: "error";
    };


================================================
File: packages/xverse/src/sat-connect-core/walletMethods.advanced.ts
================================================
// From https://github.com/secretkeylabs/sats-connect-core/

import * as v from "valibot";
import {
  MethodParamsAndResult,
  rpcRequestMessageSchema,
} from "./types.advanced.js";

export const walletTypes = ["software", "ledger"] as const;
export const walletTypeSchema = v.picklist(walletTypes);
export type WalletType = v.InferOutput<typeof walletTypeSchema>;

export const requestPermissionsMethodName = "wallet_requestPermissions";
export const requestPermissionsParamsSchema = v.undefined();
export const requestPermissionsResultSchema = v.literal(true);
export const requestPermissionsRequestMessageSchema = v.object({
  ...rpcRequestMessageSchema.entries,
  ...v.object({
    method: v.literal(requestPermissionsMethodName),
    params: requestPermissionsParamsSchema,
    id: v.string(),
  }).entries,
});
export type RequestPermissions = MethodParamsAndResult<
  v.InferOutput<typeof requestPermissionsParamsSchema>,
  v.InferOutput<typeof requestPermissionsResultSchema>
>;

export const renouncePermissionsMethodName = "wallet_renouncePermissions";
export const renouncePermissionsParamsSchema = v.undefined();
export const renouncePermissionsResultSchema = v.literal(true);
export const renouncePermissionsRequestMessageSchema = v.object({
  ...rpcRequestMessageSchema.entries,
  ...v.object({
    method: v.literal(renouncePermissionsMethodName),
    params: renouncePermissionsParamsSchema,
    id: v.string(),
  }).entries,
});
export type RenouncePermissions = MethodParamsAndResult<
  v.InferOutput<typeof renouncePermissionsParamsSchema>,
  v.InferOutput<typeof renouncePermissionsResultSchema>
>;

export const getWalletTypeMethodName = "wallet_getWalletType";
export const getWalletTypeParamsSchema = v.nullish(v.null());
export const getWalletTypeResultSchema = walletTypeSchema;
export const getWalletTypeRequestMessageSchema = v.object({
  ...rpcRequestMessageSchema.entries,
  ...v.object({
    method: v.literal(getWalletTypeMethodName),
    id: v.string(),
  }).entries,
});
export type GetWalletType = MethodParamsAndResult<
  v.InferOutput<typeof getWalletTypeParamsSchema>,
  v.InferOutput<typeof getWalletTypeResultSchema>
>;


================================================
File: patches/bs58check@4.0.0.patch
================================================
diff --git a/package.json b/package.json
index 66d45a73078b2b149d19fa2280568bd6b8908d0b..32fe88fb7b22b340e513a9f9027e7a122b002389 100644
--- a/package.json
+++ b/package.json
@@ -2,7 +2,6 @@
   "name": "bs58check",
   "version": "4.0.0",
   "description": "A straightforward implementation of base58-check encoding",
-  "type": "module",
   "keywords": [
     "base",
     "base58",


================================================
File: .changeset/README.md
================================================
# Changesets

Hello and welcome! This folder has been automatically generated by `@changesets/cli`, a build tool that works
with multi-package repos, or single-package repos to help you version and publish your code. You can
find the full documentation for it [in our repository](https://github.com/changesets/changesets)

We have a quick list of common questions to get you started engaging with this project in
[our documentation](https://github.com/changesets/changesets/blob/main/docs/common-questions.md)


================================================
File: .changeset/chilled-pumas-reflect.md
================================================
---
"@ckb-ccc/core": minor
---

feat(core): stringify util


================================================
File: .changeset/config.json
================================================
{
  "$schema": "https://unpkg.com/@changesets/config@3.0.2/schema.json",
  "changelog": ["@changesets/changelog-github", { "repo": "ckb-devrel/ccc" }],
  "commit": false,
  "fixed": [],
  "linked": [],
  "access": "public",
  "baseBranch": "master",
  "updateInternalDependencies": "patch",
  "ignore": ["@ckb-ccc/ccc-demo", "@ckb-ccc/faucet"]
}


================================================
File: .changeset/lemon-ads-laugh.md
================================================
---
"@ckb-ccc/core": patch
---

fix(core): uncatched websocket error


================================================
File: .changeset/light-vans-arrive.md
================================================
---
"@ckb-ccc/core": minor
---

feat(core): more rpc calls cache


================================================
File: .changeset/proud-crabs-grow.md
================================================
---
"@ckb-ccc/core": minor
---

feat(core): fee rate checks


================================================
File: .changeset/rude-numbers-deny.md
================================================
---
"@ckb-ccc/core": minor
"@ckb-ccc/spore": patch
---

feat(core): Transaction utils


================================================
File: .changeset/strong-countries-help.md
================================================
---
"@ckb-ccc/rei": patch
---

fix: update window.rei.ckb


================================================
File: .changeset/violet-foxes-destroy.md
================================================
---
"@ckb-ccc/core": patch
---

chore(core): remove ankr public node from default


================================================
File: .github/workflows/check.yaml
================================================
name: Lint and build

on: [pull_request, push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: pnpm build:all
      - name: Lint
        run: pnpm lint


================================================
File: .github/workflows/publish-canary.yaml
================================================
name: Release to NPM Canary

permissions:
  contents: write

on: workflow_dispatch

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm build:prepare
      - name: Build
        run: pnpm build

      - name: Version changesets
        run: pnpm changeset version --snapshot canary
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to npm canary
        id: changesets
        uses: changesets/action@v1
        with:
          publish: pnpm changeset publish --tag canary
          createGithubReleases: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}


================================================
File: .github/workflows/publish.yaml
================================================
name: Release to NPM

permissions:
  pull-requests: write
  contents: write

on:
  push:
    branches:
      - master

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm build:prepare
      - name: Build
        run: pnpm build

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          title: "chore: bump packages version"
          commit: "chore: bump packages version"
          version: pnpm run version
          publish: pnpm changeset publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}


