Directory structure:
└── nervina-labs-joyid-docs/
    ├── README.md
    ├── next.config.mjs
    ├── package.json
    ├── pnpm-lock.yaml
    ├── postcss.config.js
    ├── tailwind.config.ts
    ├── theme.config.tsx
    ├── tsconfig.json
    ├── .editorconfig
    ├── .eslintrc.json
    ├── components/
    │   ├── card/
    │   │   └── index.tsx
    │   ├── click-to-activate/
    │   │   └── index.tsx
    │   ├── framework-tabs/
    │   │   ├── index.tsx
    │   │   └── icons/
    │   │       ├── react.tsx
    │   │       └── vue.tsx
    │   ├── npm-tabs/
    │   │   ├── index.tsx
    │   │   └── icons/
    │   │       ├── bun.tsx
    │   │       ├── npm.tsx
    │   │       ├── pnpm.tsx
    │   │       └── yarn.tsx
    │   ├── sandbox/
    │   │   ├── index.tsx
    │   │   ├── sandbox-root.tsx
    │   │   ├── use-sandpack.ts
    │   │   └── templates/
    │   │       └── common.ts
    │   └── tabs/
    │       └── index.tsx
    ├── pages/
    │   ├── _app.mdx
    │   ├── _meta.json
    │   ├── showcase.json
    │   ├── showcase.mdx
    │   ├── api/
    │   │   ├── Inter-SemiBold.otf
    │   │   └── og.jsx
    │   ├── apis/
    │   │   ├── _meta.json
    │   │   ├── index.mdx
    │   │   ├── bitcoin/
    │   │   │   ├── _meta.json
    │   │   │   ├── get-accounts.mdx
    │   │   │   ├── get-publickey.md
    │   │   │   ├── init-config.mdx
    │   │   │   ├── request-accounts.mdx
    │   │   │   ├── send-psbt.mdx
    │   │   │   ├── sign-message.md
    │   │   │   └── sign-psbt.mdx
    │   │   ├── ckb/
    │   │   │   ├── _meta.json
    │   │   │   ├── connect.md
    │   │   │   ├── init-config.mdx
    │   │   │   ├── sign-cota.md
    │   │   │   ├── sign-raw-tx.md
    │   │   │   ├── sign-tx.md
    │   │   │   └── sign.md
    │   │   ├── ethereum-provider/
    │   │   │   ├── _meta.json
    │   │   │   └── ethereum-provider.md
    │   │   ├── ethers/
    │   │   │   ├── _meta.json
    │   │   │   ├── provider.md
    │   │   │   └── signer.md
    │   │   ├── evm/
    │   │   │   ├── _meta.json
    │   │   │   ├── connect.mdx
    │   │   │   ├── disconnect.md
    │   │   │   ├── get-connected-address.md
    │   │   │   ├── init-config.mdx
    │   │   │   ├── redirect-api.md
    │   │   │   ├── send-tx.mdx
    │   │   │   ├── sign-message.mdx
    │   │   │   ├── sign-tx.md
    │   │   │   └── sign-typed-data.mdx
    │   │   ├── nostr/
    │   │   │   ├── _meta.json
    │   │   │   ├── get-connected-pubkey.md
    │   │   │   ├── init-config.md
    │   │   │   ├── logout.md
    │   │   │   └── nostr.md
    │   │   ├── public-api/
    │   │   │   ├── _meta.json
    │   │   │   └── jpoints.md
    │   │   ├── rainbowkit/
    │   │   │   ├── _meta.json
    │   │   │   ├── connector.md
    │   │   │   └── wallet.md
    │   │   └── wagmi/
    │   │       ├── _meta.json
    │   │       └── connector.md
    │   └── guide/
    │       ├── _meta.json
    │       ├── index.mdx
    │       ├── public-good.md
    │       ├── sdk.mdx
    │       ├── security-model.md
    │       ├── applications/
    │       │   ├── _meta.json
    │       │   ├── native.md
    │       │   ├── pwa.md
    │       │   ├── telegram.md
    │       │   └── webdapp.md
    │       ├── bitcoin/
    │       │   ├── _meta.json
    │       │   └── bitcoin-sdk.mdx
    │       ├── ckb/
    │       │   ├── _meta.json
    │       │   ├── connect.mdx
    │       │   ├── sign-cota.mdx
    │       │   ├── sign-message.mdx
    │       │   ├── sign-raw-transaction.mdx
    │       │   ├── sign-transaction.mdx
    │       │   ├── smart-contract.mdx
    │       │   ├── verify-message.mdx
    │       │   └── _shared/
    │       │       ├── callout-challenge-vs-message.mdx
    │       │       ├── note-code-does-not-broadcast.mdx
    │       │       └── step-1-save-users-joyid-info.mdx
    │       ├── evm/
    │       │   ├── _meta.json
    │       │   ├── connect.mdx
    │       │   ├── evm-aa.mdx
    │       │   ├── manage-network.mdx
    │       │   ├── send-transaction.mdx
    │       │   ├── sign-message.mdx
    │       │   ├── sign-typed-data.mdx
    │       │   ├── web2-login.mdx
    │       │   └── adapters/
    │       │       ├── _meta.json
    │       │       ├── ethereum-provider.mdx
    │       │       ├── ethers.mdx
    │       │       ├── rainbowkit-v1.mdx
    │       │       ├── rainbowkit.mdx
    │       │       ├── wagmi-v1.mdx
    │       │       └── wagmi.mdx
    │       └── nostr/
    │           ├── _meta.json
    │           └── nip-07.mdx
    ├── public/
    ├── sandboxes/
    │   ├── package.json
    │   ├── pnpm-lock.yaml
    │   ├── .gitignore
    │   ├── nostr/
    │   │   ├── App.tsx
    │   │   ├── App.vue
    │   │   └── SignEvent.vue
    │   ├── rainbowkit/
    │   │   ├── App.tsx
    │   │   ├── index.tsx
    │   │   ├── provider.tsx
    │   │   └── typedData.tsx
    │   └── wagmi/
    │       ├── App.tsx
    │       ├── index.tsx
    │       ├── provider.tsx
    │       └── typedData.tsx
    └── styles/
        └── globals.css

================================================
File: README.md
================================================
This is a [Next.js](https://nextjs.org/) project bootstrapped with [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app).

## Getting Started

First, run the development server:

```bash
npm run dev
# or
yarn dev
# or
pnpm dev
# or
bun dev
```

Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.

You can start editing the page by modifying `pages/index.tsx`. The page auto-updates as you edit the file.

[API routes](https://nextjs.org/docs/api-routes/introduction) can be accessed on [http://localhost:3000/api/hello](http://localhost:3000/api/hello). This endpoint can be edited in `pages/api/hello.ts`.

The `pages/api` directory is mapped to `/api/*`. Files in this directory are treated as [API routes](https://nextjs.org/docs/api-routes/introduction) instead of React pages.

This project uses [`next/font`](https://nextjs.org/docs/basic-features/font-optimization) to automatically optimize and load Inter, a custom Google Font.

## Learn More

To learn more about Next.js, take a look at the following resources:

- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.
- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.

You can check out [the Next.js GitHub repository](https://github.com/vercel/next.js/) - your feedback and contributions are welcome!

## Deploy on Vercel

The easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.

Check out our [Next.js deployment documentation](https://nextjs.org/docs/deployment) for more details.


================================================
File: next.config.mjs
================================================
import nextra from 'nextra'

const withNextra = nextra({
  theme: 'nextra-theme-docs',
  themeConfig: './theme.config.tsx',
  latex: true,
  flexsearch: {
    codeblocks: false,
  },
  defaultShowCopyCode: true,
})

export default withNextra({
  reactStrictMode: true,
  eslint: {
    // ESLint behaves weirdly in this monorepo.
    ignoreDuringBuilds: true,
  },
  redirects: () => [
    {
      source: '/',
      destination: '/guide',
      permanent: true,
    },
  ],
  images: {
    remotePatterns: [
      {
        protocol: 'https',
        hostname: '**',
      },
    ],
  },
  webpack(config) {
    const allowedSvgRegex = /components\/icons\/.+\.svg$/

    const fileLoaderRule = config.module.rules.find((rule) =>
      rule.test?.test?.('.svg')
    )
    fileLoaderRule.exclude = allowedSvgRegex

    config.module.rules.push({
      test: allowedSvgRegex,
      use: ['@svgr/webpack'],
    })
    return config
  },
})


================================================
File: package.json
================================================
{
  "name": "joyid-docs",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev -p 3030",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "@codesandbox/sandpack-react": "^2.9.0",
    "@codesandbox/sandpack-themes": "^2.0.21",
    "@radix-ui/react-tabs": "^1.0.4",
    "@vercel/og": "^0.5.20",
    "clsx": "^2.0.0",
    "daisyui": "^3.9.3",
    "next": "14.1.3",
    "nextra": "^2.13.2",
    "nextra-theme-docs": "^2.13.2",
    "react": "^18.2.0",
    "react-dom": "^18.2.0"
  },
  "prettier": {
    "semi": false,
    "trailingComma": "es5",
    "singleQuote": true,
    "bracketSameLine": true,
    "tabWidth": 2,
    "printWidth": 80
  },
  "devDependencies": {
    "@svgr/webpack": "^8.1.0",
    "@types/node": "^20",
    "@types/react": "^18",
    "@types/react-dom": "^18",
    "autoprefixer": "^10.4.16",
    "eslint": "^8",
    "eslint-config-next": "13.5.6",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.1",
    "postcss": "^8.4.31",
    "prettier": "^3.0.3",
    "tailwindcss": "^3.3.3",
    "typescript": "^5"
  }
}


================================================
File: pnpm-lock.yaml
================================================
lockfileVersion: '6.1'

settings:
  autoInstallPeers: true
  excludeLinksFromLockfile: false

dependencies:
  '@codesandbox/sandpack-react':
    specifier: ^2.9.0
    version: 2.9.0(@lezer/common@1.1.0)(react-dom@18.2.0)(react@18.2.0)
  '@codesandbox/sandpack-themes':
    specifier: ^2.0.21
    version: 2.0.21
  '@radix-ui/react-tabs':
    specifier: ^1.0.4
    version: 1.0.4(@types/react-dom@18.0.0)(@types/react@18.0.0)(react-dom@18.2.0)(react@18.2.0)
  '@vercel/og':
    specifier: ^0.5.20
    version: 0.5.20
  clsx:
    specifier: ^2.0.0
    version: 2.0.0
  daisyui:
    specifier: ^3.9.3
    version: 3.9.3
  next:
    specifier: 14.1.3
    version: 14.1.3(@babel/core@7.23.2)(react-dom@18.2.0)(react@18.2.0)
  nextra:
    specifier: ^2.13.2
    version: 2.13.2(next@14.1.3)(react-dom@18.2.0)(react@18.2.0)
  nextra-theme-docs:
    specifier: ^2.13.2
    version: 2.13.2(next@14.1.3)(nextra@2.13.2)(react-dom@18.2.0)(react@18.2.0)
  react:
    specifier: ^18.2.0
    version: 18.2.0
  react-dom:
    specifier: ^18.2.0
    version: 18.2.0(react@18.2.0)

devDependencies:
  '@svgr/webpack':
    specifier: ^8.1.0
    version: 8.1.0(typescript@5.0.2)
  '@types/node':
    specifier: ^20
    version: 20.0.0
  '@types/react':
    specifier: ^18
    version: 18.0.0
  '@types/react-dom':
    specifier: ^18
    version: 18.0.0
  autoprefixer:
    specifier: ^10.4.16
    version: 10.4.16(postcss@8.4.31)
  eslint:
    specifier: ^8
    version: 8.0.0
  eslint-config-next:
    specifier: 13.5.6
    version: 13.5.6(eslint@8.0.0)(typescript@5.0.2)
  eslint-config-prettier:
    specifier: ^9.0.0
    version: 9.0.0(eslint@8.0.0)
  eslint-plugin-prettier:
    specifier: ^5.0.1
    version: 5.0.1(eslint-config-prettier@9.0.0)(eslint@8.0.0)(prettier@3.0.3)
  postcss:
    specifier: ^8.4.31
    version: 8.4.31
  prettier:
    specifier: ^3.0.3
    version: 3.0.3
  tailwindcss:
    specifier: ^3.3.3
    version: 3.3.3
  typescript:
    specifier: ^5
    version: 5.0.2

packages:

  /@aashutoshrathi/word-wrap@1.2.6:
    resolution: {integrity: sha512-1Yjs2SvM8TflER/OD3cOjhWWOZb58A2t7wpE2S9XfBYTiIl+XFhQG2bjy4Pu1I+EAlCNUzRDYDdFwFYUKvXcIA==}
    engines: {node: '>=0.10.0'}
    dev: true

  /@alloc/quick-lru@5.2.0:
    resolution: {integrity: sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==}
    engines: {node: '>=10'}

  /@ampproject/remapping@2.2.1:
    resolution: {integrity: sha512-lFMjJTrFL3j7L9yBxwYfCq2k6qqwHyzuUl/XBnif78PWTJYyL/dfowQHWE3sp6U6ZzqWiiIZnpTMO96zhkjwtg==}
    engines: {node: '>=6.0.0'}
    dependencies:
      '@jridgewell/gen-mapping': 0.3.3
      '@jridgewell/trace-mapping': 0.3.20

  /@babel/code-frame@7.22.13:
    resolution: {integrity: sha512-XktuhWlJ5g+3TJXc5upd9Ks1HutSArik6jf2eAjYFyIOf4ej3RN+184cZbzDvbPnuTJIUhPKKJE3cIsYTiAT3w==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@babel/highlight': 7.22.20
      chalk: 2.4.2

  /@babel/compat-data@7.23.2:
    resolution: {integrity: sha512-0S9TQMmDHlqAZ2ITT95irXKfxN9bncq8ZCoJhun3nHL/lLUxd2NKBJYoNGWH7S0hz6fRQwWlAWn/ILM0C70KZQ==}
    engines: {node: '>=6.9.0'}

  /@babel/core@7.23.2:
    resolution: {integrity: sha512-n7s51eWdaWZ3vGT2tD4T7J6eJs3QoBXydv7vkUM06Bf1cbVD2Kc2UrkzhiQwobfV7NwOnQXYL7UBJ5VPU+RGoQ==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@ampproject/remapping': 2.2.1
      '@babel/code-frame': 7.22.13
      '@babel/generator': 7.23.0
      '@babel/helper-compilation-targets': 7.22.15
      '@babel/helper-module-transforms': 7.23.0(@babel/core@7.23.2)
      '@babel/helpers': 7.23.2
      '@babel/parser': 7.23.0
      '@babel/template': 7.22.15
      '@babel/traverse': 7.23.2
      '@babel/types': 7.23.0
      convert-source-map: 2.0.0
      debug: 4.3.4
      gensync: 1.0.0-beta.2
      json5: 2.2.3
      semver: 6.3.1
    transitivePeerDependencies:
      - supports-color

  /@babel/generator@7.23.0:
    resolution: {integrity: sha512-lN85QRR+5IbYrMWM6Y4pE/noaQtg4pNiqeNGX60eqOfo6gtEj6uw/JagelB8vVztSd7R6M5n1+PQkDbHbBRU4g==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@babel/types': 7.23.0
      '@jridgewell/gen-mapping': 0.3.3
      '@jridgewell/trace-mapping': 0.3.20
      jsesc: 2.5.2

  /@babel/helper-annotate-as-pure@7.22.5:
    resolution: {integrity: sha512-LvBTxu8bQSQkcyKOU+a1btnNFQ1dMAd0R6PyW3arXes06F6QLWLIrd681bxRPIXlrMGR3XYnW9JyML7dP3qgxg==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@babel/types': 7.23.0
    dev: true

  /@babel/helper-builder-binary-assignment-operator-visitor@7.22.15:
    resolution: {integrity: sha512-QkBXwGgaoC2GtGZRoma6kv7Szfv06khvhFav67ZExau2RaXzy8MpHSMO2PNoP2XtmQphJQRHFfg77Bq731Yizw==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@babel/types': 7.23.0
    dev: true

  /@babel/helper-compilation-targets@7.22.15:
    resolution: {integrity: sha512-y6EEzULok0Qvz8yyLkCvVX+02ic+By2UdOhylwUOvOn9dvYc9mKICJuuU1n1XBI02YWsNsnrY1kc6DVbjcXbtw==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@babel/compat-data': 7.23.2
      '@babel/helper-validator-option': 7.22.15
      browserslist: 4.22.1
      lru-cache: 5.1.1
      semver: 6.3.1

  /@babel/helper-create-class-features-plugin@7.22.15(@babel/core@7.23.2):
    resolution: {integrity: sha512-jKkwA59IXcvSaiK2UN45kKwSC9o+KuoXsBDvHvU/7BecYIp8GQ2UwrVvFgJASUT+hBnwJx6MhvMCuMzwZZ7jlg==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-annotate-as-pure': 7.22.5
      '@babel/helper-environment-visitor': 7.22.20
      '@babel/helper-function-name': 7.23.0
      '@babel/helper-member-expression-to-functions': 7.23.0
      '@babel/helper-optimise-call-expression': 7.22.5
      '@babel/helper-replace-supers': 7.22.20(@babel/core@7.23.2)
      '@babel/helper-skip-transparent-expression-wrappers': 7.22.5
      '@babel/helper-split-export-declaration': 7.22.6
      semver: 6.3.1
    dev: true

  /@babel/helper-create-regexp-features-plugin@7.22.15(@babel/core@7.23.2):
    resolution: {integrity: sha512-29FkPLFjn4TPEa3RE7GpW+qbE8tlsu3jntNYNfcGsc49LphF1PQIiD+vMZ1z1xVOKt+93khA9tc2JBs3kBjA7w==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-annotate-as-pure': 7.22.5
      regexpu-core: 5.3.2
      semver: 6.3.1
    dev: true

  /@babel/helper-define-polyfill-provider@0.4.3(@babel/core@7.23.2):
    resolution: {integrity: sha512-WBrLmuPP47n7PNwsZ57pqam6G/RGo1vw/87b0Blc53tZNGZ4x7YvZ6HgQe2vo1W/FR20OgjeZuGXzudPiXHFug==}
    peerDependencies:
      '@babel/core': ^7.4.0 || ^8.0.0-0 <8.0.0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-compilation-targets': 7.22.15
      '@babel/helper-plugin-utils': 7.22.5
      debug: 4.3.4
      lodash.debounce: 4.0.8
      resolve: 1.22.8
    transitivePeerDependencies:
      - supports-color
    dev: true

  /@babel/helper-environment-visitor@7.22.20:
    resolution: {integrity: sha512-zfedSIzFhat/gFhWfHtgWvlec0nqB9YEIVrpuwjruLlXfUSnA8cJB0miHKwqDnQ7d32aKo2xt88/xZptwxbfhA==}
    engines: {node: '>=6.9.0'}

  /@babel/helper-function-name@7.23.0:
    resolution: {integrity: sha512-OErEqsrxjZTJciZ4Oo+eoZqeW9UIiOcuYKRJA4ZAgV9myA+pOXhhmpfNCKjEH/auVfEYVFJ6y1Tc4r0eIApqiw==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@babel/template': 7.22.15
      '@babel/types': 7.23.0

  /@babel/helper-hoist-variables@7.22.5:
    resolution: {integrity: sha512-wGjk9QZVzvknA6yKIUURb8zY3grXCcOZt+/7Wcy8O2uctxhplmUPkOdlgoNhmdVee2c92JXbf1xpMtVNbfoxRw==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@babel/types': 7.23.0

  /@babel/helper-member-expression-to-functions@7.23.0:
    resolution: {integrity: sha512-6gfrPwh7OuT6gZyJZvd6WbTfrqAo7vm4xCzAXOusKqq/vWdKXphTpj5klHKNmRUU6/QRGlBsyU9mAIPaWHlqJA==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@babel/types': 7.23.0
    dev: true

  /@babel/helper-module-imports@7.22.15:
    resolution: {integrity: sha512-0pYVBnDKZO2fnSPCrgM/6WMc7eS20Fbok+0r88fp+YtWVLZrp4CkafFGIp+W0VKw4a22sgebPT99y+FDNMdP4w==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@babel/types': 7.23.0

  /@babel/helper-module-transforms@7.23.0(@babel/core@7.23.2):
    resolution: {integrity: sha512-WhDWw1tdrlT0gMgUJSlX0IQvoO1eN279zrAUbVB+KpV2c3Tylz8+GnKOLllCS6Z/iZQEyVYxhZVUdPTqs2YYPw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-environment-visitor': 7.22.20
      '@babel/helper-module-imports': 7.22.15
      '@babel/helper-simple-access': 7.22.5
      '@babel/helper-split-export-declaration': 7.22.6
      '@babel/helper-validator-identifier': 7.22.20

  /@babel/helper-optimise-call-expression@7.22.5:
    resolution: {integrity: sha512-HBwaojN0xFRx4yIvpwGqxiV2tUfl7401jlok564NgB9EHS1y6QT17FmKWm4ztqjeVdXLuC4fSvHc5ePpQjoTbw==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@babel/types': 7.23.0
    dev: true

  /@babel/helper-plugin-utils@7.22.5:
    resolution: {integrity: sha512-uLls06UVKgFG9QD4OeFYLEGteMIAa5kpTPcFL28yuCIIzsf6ZyKZMllKVOCZFhiZ5ptnwX4mtKdWCBE/uT4amg==}
    engines: {node: '>=6.9.0'}
    dev: true

  /@babel/helper-remap-async-to-generator@7.22.20(@babel/core@7.23.2):
    resolution: {integrity: sha512-pBGyV4uBqOns+0UvhsTO8qgl8hO89PmiDYv+/COyp1aeMcmfrfruz+/nCMFiYyFF/Knn0yfrC85ZzNFjembFTw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-annotate-as-pure': 7.22.5
      '@babel/helper-environment-visitor': 7.22.20
      '@babel/helper-wrap-function': 7.22.20
    dev: true

  /@babel/helper-replace-supers@7.22.20(@babel/core@7.23.2):
    resolution: {integrity: sha512-qsW0In3dbwQUbK8kejJ4R7IHVGwHJlV6lpG6UA7a9hSa2YEiAib+N1T2kr6PEeUT+Fl7najmSOS6SmAwCHK6Tw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-environment-visitor': 7.22.20
      '@babel/helper-member-expression-to-functions': 7.23.0
      '@babel/helper-optimise-call-expression': 7.22.5
    dev: true

  /@babel/helper-simple-access@7.22.5:
    resolution: {integrity: sha512-n0H99E/K+Bika3++WNL17POvo4rKWZ7lZEp1Q+fStVbUi8nxPQEBOlTmCOxW/0JsS56SKKQ+ojAe2pHKJHN35w==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@babel/types': 7.23.0

  /@babel/helper-skip-transparent-expression-wrappers@7.22.5:
    resolution: {integrity: sha512-tK14r66JZKiC43p8Ki33yLBVJKlQDFoA8GYN67lWCDCqoL6EMMSuM9b+Iff2jHaM/RRFYl7K+iiru7hbRqNx8Q==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@babel/types': 7.23.0
    dev: true

  /@babel/helper-split-export-declaration@7.22.6:
    resolution: {integrity: sha512-AsUnxuLhRYsisFiaJwvp1QF+I3KjD5FOxut14q/GzovUe6orHLesW2C7d754kRm53h5gqrz6sFl6sxc4BVtE/g==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@babel/types': 7.23.0

  /@babel/helper-string-parser@7.22.5:
    resolution: {integrity: sha512-mM4COjgZox8U+JcXQwPijIZLElkgEpO5rsERVDJTc2qfCDfERyob6k5WegS14SX18IIjv+XD+GrqNumY5JRCDw==}
    engines: {node: '>=6.9.0'}

  /@babel/helper-validator-identifier@7.22.20:
    resolution: {integrity: sha512-Y4OZ+ytlatR8AI+8KZfKuL5urKp7qey08ha31L8b3BwewJAoJamTzyvxPR/5D+KkdJCGPq/+8TukHBlY10FX9A==}
    engines: {node: '>=6.9.0'}

  /@babel/helper-validator-option@7.22.15:
    resolution: {integrity: sha512-bMn7RmyFjY/mdECUbgn9eoSY4vqvacUnS9i9vGAGttgFWesO6B4CYWA7XlpbWgBt71iv/hfbPlynohStqnu5hA==}
    engines: {node: '>=6.9.0'}

  /@babel/helper-wrap-function@7.22.20:
    resolution: {integrity: sha512-pms/UwkOpnQe/PDAEdV/d7dVCoBbB+R4FvYoHGZz+4VPcg7RtYy2KP7S2lbuWM6FCSgob5wshfGESbC/hzNXZw==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@babel/helper-function-name': 7.23.0
      '@babel/template': 7.22.15
      '@babel/types': 7.23.0
    dev: true

  /@babel/helpers@7.23.2:
    resolution: {integrity: sha512-lzchcp8SjTSVe/fPmLwtWVBFC7+Tbn8LGHDVfDp9JGxpAY5opSaEFgt8UQvrnECWOTdji2mOWMz1rOhkHscmGQ==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@babel/template': 7.22.15
      '@babel/traverse': 7.23.2
      '@babel/types': 7.23.0
    transitivePeerDependencies:
      - supports-color

  /@babel/highlight@7.22.20:
    resolution: {integrity: sha512-dkdMCN3py0+ksCgYmGG8jKeGA/8Tk+gJwSYYlFGxG5lmhfKNoAy004YpLxpS1W2J8m/EK2Ew+yOs9pVRwO89mg==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@babel/helper-validator-identifier': 7.22.20
      chalk: 2.4.2
      js-tokens: 4.0.0

  /@babel/parser@7.23.0:
    resolution: {integrity: sha512-vvPKKdMemU85V9WE/l5wZEmImpCtLqbnTvqDS2U1fJ96KrxoW7KrXhNsNCblQlg8Ck4b85yxdTyelsMUgFUXiw==}
    engines: {node: '>=6.0.0'}
    hasBin: true
    dependencies:
      '@babel/types': 7.23.0

  /@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression@7.22.15(@babel/core@7.23.2):
    resolution: {integrity: sha512-FB9iYlz7rURmRJyXRKEnalYPPdn87H5no108cyuQQyMwlpJ2SJtpIUBI27kdTin956pz+LPypkPVPUTlxOmrsg==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining@7.22.15(@babel/core@7.23.2):
    resolution: {integrity: sha512-Hyph9LseGvAeeXzikV88bczhsrLrIZqDPxO+sSmAunMPaGrBGhfMWzCPYTtiW9t+HzSE2wtV8e5cc5P6r1xMDQ==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.13.0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
      '@babel/helper-skip-transparent-expression-wrappers': 7.22.5
      '@babel/plugin-transform-optional-chaining': 7.23.0(@babel/core@7.23.2)
    dev: true

  /@babel/plugin-proposal-private-property-in-object@7.21.0-placeholder-for-preset-env.2(@babel/core@7.23.2):
    resolution: {integrity: sha512-SOSkfJDddaM7mak6cPEpswyTRnuRltl429hMraQEglW+OkovnCzsiszTmsrlY//qLFjCpQDFRvjdm2wA5pPm9w==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
    dev: true

  /@babel/plugin-syntax-async-generators@7.8.4(@babel/core@7.23.2):
    resolution: {integrity: sha512-tycmZxkGfZaxhMRbXlPXuVFpdWlXpir2W4AMhSJgRKzk/eDlIXOhb2LHWoLpDF7TEHylV5zNhykX6KAgHJmTNw==}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-syntax-class-properties@7.12.13(@babel/core@7.23.2):
    resolution: {integrity: sha512-fm4idjKla0YahUNgFNLCB0qySdsoPiZP3iQE3rky0mBUtMZ23yDJ9SJdg6dXTSDnulOVqiF3Hgr9nbXvXTQZYA==}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-syntax-class-static-block@7.14.5(@babel/core@7.23.2):
    resolution: {integrity: sha512-b+YyPmr6ldyNnM6sqYeMWE+bgJcJpO6yS4QD7ymxgH34GBPNDM/THBh8iunyvKIZztiwLH4CJZ0RxTk9emgpjw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-syntax-dynamic-import@7.8.3(@babel/core@7.23.2):
    resolution: {integrity: sha512-5gdGbFon+PszYzqs83S3E5mpi7/y/8M9eC90MRTZfduQOYW76ig6SOSPNe41IG5LoP3FGBn2N0RjVDSQiS94kQ==}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-syntax-export-namespace-from@7.8.3(@babel/core@7.23.2):
    resolution: {integrity: sha512-MXf5laXo6c1IbEbegDmzGPwGNTsHZmEy6QGznu5Sh2UCWvueywb2ee+CCE4zQiZstxU9BMoQO9i6zUFSY0Kj0Q==}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-syntax-import-assertions@7.22.5(@babel/core@7.23.2):
    resolution: {integrity: sha512-rdV97N7KqsRzeNGoWUOK6yUsWarLjE5Su/Snk9IYPU9CwkWHs4t+rTGOvffTR8XGkJMTAdLfO0xVnXm8wugIJg==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-syntax-import-attributes@7.22.5(@babel/core@7.23.2):
    resolution: {integrity: sha512-KwvoWDeNKPETmozyFE0P2rOLqh39EoQHNjqizrI5B8Vt0ZNS7M56s7dAiAqbYfiAYOuIzIh96z3iR2ktgu3tEg==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-syntax-import-meta@7.10.4(@babel/core@7.23.2):
    resolution: {integrity: sha512-Yqfm+XDx0+Prh3VSeEQCPU81yC+JWZ2pDPFSS4ZdpfZhp4MkFMaDC1UqseovEKwSUpnIL7+vK+Clp7bfh0iD7g==}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-syntax-json-strings@7.8.3(@babel/core@7.23.2):
    resolution: {integrity: sha512-lY6kdGpWHvjoe2vk4WrAapEuBR69EMxZl+RoGRhrFGNYVK8mOPAW8VfbT/ZgrFbXlDNiiaxQnAtgVCZ6jv30EA==}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-syntax-jsx@7.22.5(@babel/core@7.23.2):
    resolution: {integrity: sha512-gvyP4hZrgrs/wWMaocvxZ44Hw0b3W8Pe+cMxc8V1ULQ07oh8VNbIRaoD1LRZVTvD+0nieDKjfgKg89sD7rrKrg==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-syntax-logical-assignment-operators@7.10.4(@babel/core@7.23.2):
    resolution: {integrity: sha512-d8waShlpFDinQ5MtvGU9xDAOzKH47+FFoney2baFIoMr952hKOLp1HR7VszoZvOsV/4+RRszNY7D17ba0te0ig==}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-syntax-nullish-coalescing-operator@7.8.3(@babel/core@7.23.2):
    resolution: {integrity: sha512-aSff4zPII1u2QD7y+F8oDsz19ew4IGEJg9SVW+bqwpwtfFleiQDMdzA/R+UlWDzfnHFCxxleFT0PMIrR36XLNQ==}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-syntax-numeric-separator@7.10.4(@babel/core@7.23.2):
    resolution: {integrity: sha512-9H6YdfkcK/uOnY/K7/aA2xpzaAgkQn37yzWUMRK7OaPOqOpGS1+n0H5hxT9AUw9EsSjPW8SVyMJwYRtWs3X3ug==}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-syntax-object-rest-spread@7.8.3(@babel/core@7.23.2):
    resolution: {integrity: sha512-XoqMijGZb9y3y2XskN+P1wUGiVwWZ5JmoDRwx5+3GmEplNyVM2s2Dg8ILFQm8rWM48orGy5YpI5Bl8U1y7ydlA==}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-syntax-optional-catch-binding@7.8.3(@babel/core@7.23.2):
    resolution: {integrity: sha512-6VPD0Pc1lpTqw0aKoeRTMiB+kWhAoT24PA+ksWSBrFtl5SIRVpZlwN3NNPQjehA2E/91FV3RjLWoVTglWcSV3Q==}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-syntax-optional-chaining@7.8.3(@babel/core@7.23.2):
    resolution: {integrity: sha512-KoK9ErH1MBlCPxV0VANkXW2/dw4vlbGDrFgz8bmUsBGYkFRcbRwMh6cIJubdPrkxRwuGdtCk0v/wPTKbQgBjkg==}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-syntax-private-property-in-object@7.14.5(@babel/core@7.23.2):
    resolution: {integrity: sha512-0wVnp9dxJ72ZUJDV27ZfbSj6iHLoytYZmh3rFcxNnvsJF3ktkzLDZPy/mA17HGsaQT3/DQsWYX1f1QGWkCoVUg==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-syntax-top-level-await@7.14.5(@babel/core@7.23.2):
    resolution: {integrity: sha512-hx++upLv5U1rgYfwe1xBQUhRmU41NEvpUvrp8jkrSCdvGSnM5/qdRMtylJ6PG5OFkBaHkbTAKTnd3/YyESRHFw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-syntax-typescript@7.22.5(@babel/core@7.23.2):
    resolution: {integrity: sha512-1mS2o03i7t1c6VzH6fdQ3OA8tcEIxwG18zIPRp+UY1Ihv6W+XZzBCVxExF9upussPXJ0xE9XRHwMoNs1ep/nRQ==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-syntax-unicode-sets-regex@7.18.6(@babel/core@7.23.2):
    resolution: {integrity: sha512-727YkEAPwSIQTv5im8QHz3upqp92JTWhidIC81Tdx4VJYIte/VndKf1qKrfnnhPLiPghStWfvC/iFaMCQu7Nqg==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-create-regexp-features-plugin': 7.22.15(@babel/core@7.23.2)
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-transform-arrow-functions@7.22.5(@babel/core@7.23.2):
    resolution: {integrity: sha512-26lTNXoVRdAnsaDXPpvCNUq+OVWEVC6bx7Vvz9rC53F2bagUWW4u4ii2+h8Fejfh7RYqPxn+libeFBBck9muEw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-transform-async-generator-functions@7.23.2(@babel/core@7.23.2):
    resolution: {integrity: sha512-BBYVGxbDVHfoeXbOwcagAkOQAm9NxoTdMGfTqghu1GrvadSaw6iW3Je6IcL5PNOw8VwjxqBECXy50/iCQSY/lQ==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-environment-visitor': 7.22.20
      '@babel/helper-plugin-utils': 7.22.5
      '@babel/helper-remap-async-to-generator': 7.22.20(@babel/core@7.23.2)
      '@babel/plugin-syntax-async-generators': 7.8.4(@babel/core@7.23.2)
    dev: true

  /@babel/plugin-transform-async-to-generator@7.22.5(@babel/core@7.23.2):
    resolution: {integrity: sha512-b1A8D8ZzE/VhNDoV1MSJTnpKkCG5bJo+19R4o4oy03zM7ws8yEMK755j61Dc3EyvdysbqH5BOOTquJ7ZX9C6vQ==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-module-imports': 7.22.15
      '@babel/helper-plugin-utils': 7.22.5
      '@babel/helper-remap-async-to-generator': 7.22.20(@babel/core@7.23.2)
    dev: true

  /@babel/plugin-transform-block-scoped-functions@7.22.5(@babel/core@7.23.2):
    resolution: {integrity: sha512-tdXZ2UdknEKQWKJP1KMNmuF5Lx3MymtMN/pvA+p/VEkhK8jVcQ1fzSy8KM9qRYhAf2/lV33hoMPKI/xaI9sADA==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-transform-block-scoping@7.23.0(@babel/core@7.23.2):
    resolution: {integrity: sha512-cOsrbmIOXmf+5YbL99/S49Y3j46k/T16b9ml8bm9lP6N9US5iQ2yBK7gpui1pg0V/WMcXdkfKbTb7HXq9u+v4g==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-transform-class-properties@7.22.5(@babel/core@7.23.2):
    resolution: {integrity: sha512-nDkQ0NfkOhPTq8YCLiWNxp1+f9fCobEjCb0n8WdbNUBc4IB5V7P1QnX9IjpSoquKrXF5SKojHleVNs2vGeHCHQ==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-create-class-features-plugin': 7.22.15(@babel/core@7.23.2)
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-transform-class-static-block@7.22.11(@babel/core@7.23.2):
    resolution: {integrity: sha512-GMM8gGmqI7guS/llMFk1bJDkKfn3v3C4KHK9Yg1ey5qcHcOlKb0QvcMrgzvxo+T03/4szNh5lghY+fEC98Kq9g==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.12.0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-create-class-features-plugin': 7.22.15(@babel/core@7.23.2)
      '@babel/helper-plugin-utils': 7.22.5
      '@babel/plugin-syntax-class-static-block': 7.14.5(@babel/core@7.23.2)
    dev: true

  /@babel/plugin-transform-classes@7.22.15(@babel/core@7.23.2):
    resolution: {integrity: sha512-VbbC3PGjBdE0wAWDdHM9G8Gm977pnYI0XpqMd6LrKISj8/DJXEsWqgRuTYaNE9Bv0JGhTZUzHDlMk18IpOuoqw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-annotate-as-pure': 7.22.5
      '@babel/helper-compilation-targets': 7.22.15
      '@babel/helper-environment-visitor': 7.22.20
      '@babel/helper-function-name': 7.23.0
      '@babel/helper-optimise-call-expression': 7.22.5
      '@babel/helper-plugin-utils': 7.22.5
      '@babel/helper-replace-supers': 7.22.20(@babel/core@7.23.2)
      '@babel/helper-split-export-declaration': 7.22.6
      globals: 11.12.0
    dev: true

  /@babel/plugin-transform-computed-properties@7.22.5(@babel/core@7.23.2):
    resolution: {integrity: sha512-4GHWBgRf0krxPX+AaPtgBAlTgTeZmqDynokHOX7aqqAB4tHs3U2Y02zH6ETFdLZGcg9UQSD1WCmkVrE9ErHeOg==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
      '@babel/template': 7.22.15
    dev: true

  /@babel/plugin-transform-destructuring@7.23.0(@babel/core@7.23.2):
    resolution: {integrity: sha512-vaMdgNXFkYrB+8lbgniSYWHsgqK5gjaMNcc84bMIOMRLH0L9AqYq3hwMdvnyqj1OPqea8UtjPEuS/DCenah1wg==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-transform-dotall-regex@7.22.5(@babel/core@7.23.2):
    resolution: {integrity: sha512-5/Yk9QxCQCl+sOIB1WelKnVRxTJDSAIxtJLL2/pqL14ZVlbH0fUQUZa/T5/UnQtBNgghR7mfB8ERBKyKPCi7Vw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-create-regexp-features-plugin': 7.22.15(@babel/core@7.23.2)
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-transform-duplicate-keys@7.22.5(@babel/core@7.23.2):
    resolution: {integrity: sha512-dEnYD+9BBgld5VBXHnF/DbYGp3fqGMsyxKbtD1mDyIA7AkTSpKXFhCVuj/oQVOoALfBs77DudA0BE4d5mcpmqw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-transform-dynamic-import@7.22.11(@babel/core@7.23.2):
    resolution: {integrity: sha512-g/21plo58sfteWjaO0ZNVb+uEOkJNjAaHhbejrnBmu011l/eNDScmkbjCC3l4FKb10ViaGU4aOkFznSu2zRHgA==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
      '@babel/plugin-syntax-dynamic-import': 7.8.3(@babel/core@7.23.2)
    dev: true

  /@babel/plugin-transform-exponentiation-operator@7.22.5(@babel/core@7.23.2):
    resolution: {integrity: sha512-vIpJFNM/FjZ4rh1myqIya9jXwrwwgFRHPjT3DkUA9ZLHuzox8jiXkOLvwm1H+PQIP3CqfC++WPKeuDi0Sjdj1g==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-builder-binary-assignment-operator-visitor': 7.22.15
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-transform-export-namespace-from@7.22.11(@babel/core@7.23.2):
    resolution: {integrity: sha512-xa7aad7q7OiT8oNZ1mU7NrISjlSkVdMbNxn9IuLZyL9AJEhs1Apba3I+u5riX1dIkdptP5EKDG5XDPByWxtehw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
      '@babel/plugin-syntax-export-namespace-from': 7.8.3(@babel/core@7.23.2)
    dev: true

  /@babel/plugin-transform-for-of@7.22.15(@babel/core@7.23.2):
    resolution: {integrity: sha512-me6VGeHsx30+xh9fbDLLPi0J1HzmeIIyenoOQHuw2D4m2SAU3NrspX5XxJLBpqn5yrLzrlw2Iy3RA//Bx27iOA==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-transform-function-name@7.22.5(@babel/core@7.23.2):
    resolution: {integrity: sha512-UIzQNMS0p0HHiQm3oelztj+ECwFnj+ZRV4KnguvlsD2of1whUeM6o7wGNj6oLwcDoAXQ8gEqfgC24D+VdIcevg==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-compilation-targets': 7.22.15
      '@babel/helper-function-name': 7.23.0
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-transform-json-strings@7.22.11(@babel/core@7.23.2):
    resolution: {integrity: sha512-CxT5tCqpA9/jXFlme9xIBCc5RPtdDq3JpkkhgHQqtDdiTnTI0jtZ0QzXhr5DILeYifDPp2wvY2ad+7+hLMW5Pw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
      '@babel/plugin-syntax-json-strings': 7.8.3(@babel/core@7.23.2)
    dev: true

  /@babel/plugin-transform-literals@7.22.5(@babel/core@7.23.2):
    resolution: {integrity: sha512-fTLj4D79M+mepcw3dgFBTIDYpbcB9Sm0bpm4ppXPaO+U+PKFFyV9MGRvS0gvGw62sd10kT5lRMKXAADb9pWy8g==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-transform-logical-assignment-operators@7.22.11(@babel/core@7.23.2):
    resolution: {integrity: sha512-qQwRTP4+6xFCDV5k7gZBF3C31K34ut0tbEcTKxlX/0KXxm9GLcO14p570aWxFvVzx6QAfPgq7gaeIHXJC8LswQ==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
      '@babel/plugin-syntax-logical-assignment-operators': 7.10.4(@babel/core@7.23.2)
    dev: true

  /@babel/plugin-transform-member-expression-literals@7.22.5(@babel/core@7.23.2):
    resolution: {integrity: sha512-RZEdkNtzzYCFl9SE9ATaUMTj2hqMb4StarOJLrZRbqqU4HSBE7UlBw9WBWQiDzrJZJdUWiMTVDI6Gv/8DPvfew==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-transform-modules-amd@7.23.0(@babel/core@7.23.2):
    resolution: {integrity: sha512-xWT5gefv2HGSm4QHtgc1sYPbseOyf+FFDo2JbpE25GWl5BqTGO9IMwTYJRoIdjsF85GE+VegHxSCUt5EvoYTAw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-module-transforms': 7.23.0(@babel/core@7.23.2)
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-transform-modules-commonjs@7.23.0(@babel/core@7.23.2):
    resolution: {integrity: sha512-32Xzss14/UVc7k9g775yMIvkVK8xwKE0DPdP5JTapr3+Z9w4tzeOuLNY6BXDQR6BdnzIlXnCGAzsk/ICHBLVWQ==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-module-transforms': 7.23.0(@babel/core@7.23.2)
      '@babel/helper-plugin-utils': 7.22.5
      '@babel/helper-simple-access': 7.22.5
    dev: true

  /@babel/plugin-transform-modules-systemjs@7.23.0(@babel/core@7.23.2):
    resolution: {integrity: sha512-qBej6ctXZD2f+DhlOC9yO47yEYgUh5CZNz/aBoH4j/3NOlRfJXJbY7xDQCqQVf9KbrqGzIWER1f23doHGrIHFg==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-hoist-variables': 7.22.5
      '@babel/helper-module-transforms': 7.23.0(@babel/core@7.23.2)
      '@babel/helper-plugin-utils': 7.22.5
      '@babel/helper-validator-identifier': 7.22.20
    dev: true

  /@babel/plugin-transform-modules-umd@7.22.5(@babel/core@7.23.2):
    resolution: {integrity: sha512-+S6kzefN/E1vkSsKx8kmQuqeQsvCKCd1fraCM7zXm4SFoggI099Tr4G8U81+5gtMdUeMQ4ipdQffbKLX0/7dBQ==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-module-transforms': 7.23.0(@babel/core@7.23.2)
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-transform-named-capturing-groups-regex@7.22.5(@babel/core@7.23.2):
    resolution: {integrity: sha512-YgLLKmS3aUBhHaxp5hi1WJTgOUb/NCuDHzGT9z9WTt3YG+CPRhJs6nprbStx6DnWM4dh6gt7SU3sZodbZ08adQ==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-create-regexp-features-plugin': 7.22.15(@babel/core@7.23.2)
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-transform-new-target@7.22.5(@babel/core@7.23.2):
    resolution: {integrity: sha512-AsF7K0Fx/cNKVyk3a+DW0JLo+Ua598/NxMRvxDnkpCIGFh43+h/v2xyhRUYf6oD8gE4QtL83C7zZVghMjHd+iw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-transform-nullish-coalescing-operator@7.22.11(@babel/core@7.23.2):
    resolution: {integrity: sha512-YZWOw4HxXrotb5xsjMJUDlLgcDXSfO9eCmdl1bgW4+/lAGdkjaEvOnQ4p5WKKdUgSzO39dgPl0pTnfxm0OAXcg==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
      '@babel/plugin-syntax-nullish-coalescing-operator': 7.8.3(@babel/core@7.23.2)
    dev: true

  /@babel/plugin-transform-numeric-separator@7.22.11(@babel/core@7.23.2):
    resolution: {integrity: sha512-3dzU4QGPsILdJbASKhF/V2TVP+gJya1PsueQCxIPCEcerqF21oEcrob4mzjsp2Py/1nLfF5m+xYNMDpmA8vffg==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
      '@babel/plugin-syntax-numeric-separator': 7.10.4(@babel/core@7.23.2)
    dev: true

  /@babel/plugin-transform-object-rest-spread@7.22.15(@babel/core@7.23.2):
    resolution: {integrity: sha512-fEB+I1+gAmfAyxZcX1+ZUwLeAuuf8VIg67CTznZE0MqVFumWkh8xWtn58I4dxdVf080wn7gzWoF8vndOViJe9Q==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/compat-data': 7.23.2
      '@babel/core': 7.23.2
      '@babel/helper-compilation-targets': 7.22.15
      '@babel/helper-plugin-utils': 7.22.5
      '@babel/plugin-syntax-object-rest-spread': 7.8.3(@babel/core@7.23.2)
      '@babel/plugin-transform-parameters': 7.22.15(@babel/core@7.23.2)
    dev: true

  /@babel/plugin-transform-object-super@7.22.5(@babel/core@7.23.2):
    resolution: {integrity: sha512-klXqyaT9trSjIUrcsYIfETAzmOEZL3cBYqOYLJxBHfMFFggmXOv+NYSX/Jbs9mzMVESw/WycLFPRx8ba/b2Ipw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
      '@babel/helper-replace-supers': 7.22.20(@babel/core@7.23.2)
    dev: true

  /@babel/plugin-transform-optional-catch-binding@7.22.11(@babel/core@7.23.2):
    resolution: {integrity: sha512-rli0WxesXUeCJnMYhzAglEjLWVDF6ahb45HuprcmQuLidBJFWjNnOzssk2kuc6e33FlLaiZhG/kUIzUMWdBKaQ==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
      '@babel/plugin-syntax-optional-catch-binding': 7.8.3(@babel/core@7.23.2)
    dev: true

  /@babel/plugin-transform-optional-chaining@7.23.0(@babel/core@7.23.2):
    resolution: {integrity: sha512-sBBGXbLJjxTzLBF5rFWaikMnOGOk/BmK6vVByIdEggZ7Vn6CvWXZyRkkLFK6WE0IF8jSliyOkUN6SScFgzCM0g==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
      '@babel/helper-skip-transparent-expression-wrappers': 7.22.5
      '@babel/plugin-syntax-optional-chaining': 7.8.3(@babel/core@7.23.2)
    dev: true

  /@babel/plugin-transform-parameters@7.22.15(@babel/core@7.23.2):
    resolution: {integrity: sha512-hjk7qKIqhyzhhUvRT683TYQOFa/4cQKwQy7ALvTpODswN40MljzNDa0YldevS6tGbxwaEKVn502JmY0dP7qEtQ==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-transform-private-methods@7.22.5(@babel/core@7.23.2):
    resolution: {integrity: sha512-PPjh4gyrQnGe97JTalgRGMuU4icsZFnWkzicB/fUtzlKUqvsWBKEpPPfr5a2JiyirZkHxnAqkQMO5Z5B2kK3fA==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-create-class-features-plugin': 7.22.15(@babel/core@7.23.2)
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-transform-private-property-in-object@7.22.11(@babel/core@7.23.2):
    resolution: {integrity: sha512-sSCbqZDBKHetvjSwpyWzhuHkmW5RummxJBVbYLkGkaiTOWGxml7SXt0iWa03bzxFIx7wOj3g/ILRd0RcJKBeSQ==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-annotate-as-pure': 7.22.5
      '@babel/helper-create-class-features-plugin': 7.22.15(@babel/core@7.23.2)
      '@babel/helper-plugin-utils': 7.22.5
      '@babel/plugin-syntax-private-property-in-object': 7.14.5(@babel/core@7.23.2)
    dev: true

  /@babel/plugin-transform-property-literals@7.22.5(@babel/core@7.23.2):
    resolution: {integrity: sha512-TiOArgddK3mK/x1Qwf5hay2pxI6wCZnvQqrFSqbtg1GLl2JcNMitVH/YnqjP+M31pLUeTfzY1HAXFDnUBV30rQ==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-transform-react-constant-elements@7.22.5(@babel/core@7.23.2):
    resolution: {integrity: sha512-BF5SXoO+nX3h5OhlN78XbbDrBOffv+AxPP2ENaJOVqjWCgBDeOY3WcaUcddutGSfoap+5NEQ/q/4I3WZIvgkXA==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-transform-react-display-name@7.22.5(@babel/core@7.23.2):
    resolution: {integrity: sha512-PVk3WPYudRF5z4GKMEYUrLjPl38fJSKNaEOkFuoprioowGuWN6w2RKznuFNSlJx7pzzXXStPUnNSOEO0jL5EVw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-transform-react-jsx-development@7.22.5(@babel/core@7.23.2):
    resolution: {integrity: sha512-bDhuzwWMuInwCYeDeMzyi7TaBgRQei6DqxhbyniL7/VG4RSS7HtSL2QbY4eESy1KJqlWt8g3xeEBGPuo+XqC8A==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/plugin-transform-react-jsx': 7.22.15(@babel/core@7.23.2)
    dev: true

  /@babel/plugin-transform-react-jsx@7.22.15(@babel/core@7.23.2):
    resolution: {integrity: sha512-oKckg2eZFa8771O/5vi7XeTvmM6+O9cxZu+kanTU7tD4sin5nO/G8jGJhq8Hvt2Z0kUoEDRayuZLaUlYl8QuGA==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-annotate-as-pure': 7.22.5
      '@babel/helper-module-imports': 7.22.15
      '@babel/helper-plugin-utils': 7.22.5
      '@babel/plugin-syntax-jsx': 7.22.5(@babel/core@7.23.2)
      '@babel/types': 7.23.0
    dev: true

  /@babel/plugin-transform-react-pure-annotations@7.22.5(@babel/core@7.23.2):
    resolution: {integrity: sha512-gP4k85wx09q+brArVinTXhWiyzLl9UpmGva0+mWyKxk6JZequ05x3eUcIUE+FyttPKJFRRVtAvQaJ6YF9h1ZpA==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-annotate-as-pure': 7.22.5
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-transform-regenerator@7.22.10(@babel/core@7.23.2):
    resolution: {integrity: sha512-F28b1mDt8KcT5bUyJc/U9nwzw6cV+UmTeRlXYIl2TNqMMJif0Jeey9/RQ3C4NOd2zp0/TRsDns9ttj2L523rsw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
      regenerator-transform: 0.15.2
    dev: true

  /@babel/plugin-transform-reserved-words@7.22.5(@babel/core@7.23.2):
    resolution: {integrity: sha512-DTtGKFRQUDm8svigJzZHzb/2xatPc6TzNvAIJ5GqOKDsGFYgAskjRulbR/vGsPKq3OPqtexnz327qYpP57RFyA==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-transform-shorthand-properties@7.22.5(@babel/core@7.23.2):
    resolution: {integrity: sha512-vM4fq9IXHscXVKzDv5itkO1X52SmdFBFcMIBZ2FRn2nqVYqw6dBexUgMvAjHW+KXpPPViD/Yo3GrDEBaRC0QYA==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-transform-spread@7.22.5(@babel/core@7.23.2):
    resolution: {integrity: sha512-5ZzDQIGyvN4w8+dMmpohL6MBo+l2G7tfC/O2Dg7/hjpgeWvUx8FzfeOKxGog9IimPa4YekaQ9PlDqTLOljkcxg==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
      '@babel/helper-skip-transparent-expression-wrappers': 7.22.5
    dev: true

  /@babel/plugin-transform-sticky-regex@7.22.5(@babel/core@7.23.2):
    resolution: {integrity: sha512-zf7LuNpHG0iEeiyCNwX4j3gDg1jgt1k3ZdXBKbZSoA3BbGQGvMiSvfbZRR3Dr3aeJe3ooWFZxOOG3IRStYp2Bw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-transform-template-literals@7.22.5(@babel/core@7.23.2):
    resolution: {integrity: sha512-5ciOehRNf+EyUeewo8NkbQiUs4d6ZxiHo6BcBcnFlgiJfu16q0bQUw9Jvo0b0gBKFG1SMhDSjeKXSYuJLeFSMA==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-transform-typeof-symbol@7.22.5(@babel/core@7.23.2):
    resolution: {integrity: sha512-bYkI5lMzL4kPii4HHEEChkD0rkc+nvnlR6+o/qdqR6zrm0Sv/nodmyLhlq2DO0YKLUNd2VePmPRjJXSBh9OIdA==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-transform-typescript@7.22.15(@babel/core@7.23.2):
    resolution: {integrity: sha512-1uirS0TnijxvQLnlv5wQBwOX3E1wCFX7ITv+9pBV2wKEk4K+M5tqDaoNXnTH8tjEIYHLO98MwiTWO04Ggz4XuA==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-annotate-as-pure': 7.22.5
      '@babel/helper-create-class-features-plugin': 7.22.15(@babel/core@7.23.2)
      '@babel/helper-plugin-utils': 7.22.5
      '@babel/plugin-syntax-typescript': 7.22.5(@babel/core@7.23.2)
    dev: true

  /@babel/plugin-transform-unicode-escapes@7.22.10(@babel/core@7.23.2):
    resolution: {integrity: sha512-lRfaRKGZCBqDlRU3UIFovdp9c9mEvlylmpod0/OatICsSfuQ9YFthRo1tpTkGsklEefZdqlEFdY4A2dwTb6ohg==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-transform-unicode-property-regex@7.22.5(@babel/core@7.23.2):
    resolution: {integrity: sha512-HCCIb+CbJIAE6sXn5CjFQXMwkCClcOfPCzTlilJ8cUatfzwHlWQkbtV0zD338u9dZskwvuOYTuuaMaA8J5EI5A==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-create-regexp-features-plugin': 7.22.15(@babel/core@7.23.2)
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-transform-unicode-regex@7.22.5(@babel/core@7.23.2):
    resolution: {integrity: sha512-028laaOKptN5vHJf9/Arr/HiJekMd41hOEZYvNsrsXqJ7YPYuX2bQxh31fkZzGmq3YqHRJzYFFAVYvKfMPKqyg==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-create-regexp-features-plugin': 7.22.15(@babel/core@7.23.2)
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/plugin-transform-unicode-sets-regex@7.22.5(@babel/core@7.23.2):
    resolution: {integrity: sha512-lhMfi4FC15j13eKrh3DnYHjpGj6UKQHtNKTbtc1igvAhRy4+kLhV07OpLcsN0VgDEw/MjAvJO4BdMJsHwMhzCg==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-create-regexp-features-plugin': 7.22.15(@babel/core@7.23.2)
      '@babel/helper-plugin-utils': 7.22.5
    dev: true

  /@babel/preset-env@7.23.2(@babel/core@7.23.2):
    resolution: {integrity: sha512-BW3gsuDD+rvHL2VO2SjAUNTBe5YrjsTiDyqamPDWY723na3/yPQ65X5oQkFVJZ0o50/2d+svm1rkPoJeR1KxVQ==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/compat-data': 7.23.2
      '@babel/core': 7.23.2
      '@babel/helper-compilation-targets': 7.22.15
      '@babel/helper-plugin-utils': 7.22.5
      '@babel/helper-validator-option': 7.22.15
      '@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression': 7.22.15(@babel/core@7.23.2)
      '@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining': 7.22.15(@babel/core@7.23.2)
      '@babel/plugin-proposal-private-property-in-object': 7.21.0-placeholder-for-preset-env.2(@babel/core@7.23.2)
      '@babel/plugin-syntax-async-generators': 7.8.4(@babel/core@7.23.2)
      '@babel/plugin-syntax-class-properties': 7.12.13(@babel/core@7.23.2)
      '@babel/plugin-syntax-class-static-block': 7.14.5(@babel/core@7.23.2)
      '@babel/plugin-syntax-dynamic-import': 7.8.3(@babel/core@7.23.2)
      '@babel/plugin-syntax-export-namespace-from': 7.8.3(@babel/core@7.23.2)
      '@babel/plugin-syntax-import-assertions': 7.22.5(@babel/core@7.23.2)
      '@babel/plugin-syntax-import-attributes': 7.22.5(@babel/core@7.23.2)
      '@babel/plugin-syntax-import-meta': 7.10.4(@babel/core@7.23.2)
      '@babel/plugin-syntax-json-strings': 7.8.3(@babel/core@7.23.2)
      '@babel/plugin-syntax-logical-assignment-operators': 7.10.4(@babel/core@7.23.2)
      '@babel/plugin-syntax-nullish-coalescing-operator': 7.8.3(@babel/core@7.23.2)
      '@babel/plugin-syntax-numeric-separator': 7.10.4(@babel/core@7.23.2)
      '@babel/plugin-syntax-object-rest-spread': 7.8.3(@babel/core@7.23.2)
      '@babel/plugin-syntax-optional-catch-binding': 7.8.3(@babel/core@7.23.2)
      '@babel/plugin-syntax-optional-chaining': 7.8.3(@babel/core@7.23.2)
      '@babel/plugin-syntax-private-property-in-object': 7.14.5(@babel/core@7.23.2)
      '@babel/plugin-syntax-top-level-await': 7.14.5(@babel/core@7.23.2)
      '@babel/plugin-syntax-unicode-sets-regex': 7.18.6(@babel/core@7.23.2)
      '@babel/plugin-transform-arrow-functions': 7.22.5(@babel/core@7.23.2)
      '@babel/plugin-transform-async-generator-functions': 7.23.2(@babel/core@7.23.2)
      '@babel/plugin-transform-async-to-generator': 7.22.5(@babel/core@7.23.2)
      '@babel/plugin-transform-block-scoped-functions': 7.22.5(@babel/core@7.23.2)
      '@babel/plugin-transform-block-scoping': 7.23.0(@babel/core@7.23.2)
      '@babel/plugin-transform-class-properties': 7.22.5(@babel/core@7.23.2)
      '@babel/plugin-transform-class-static-block': 7.22.11(@babel/core@7.23.2)
      '@babel/plugin-transform-classes': 7.22.15(@babel/core@7.23.2)
      '@babel/plugin-transform-computed-properties': 7.22.5(@babel/core@7.23.2)
      '@babel/plugin-transform-destructuring': 7.23.0(@babel/core@7.23.2)
      '@babel/plugin-transform-dotall-regex': 7.22.5(@babel/core@7.23.2)
      '@babel/plugin-transform-duplicate-keys': 7.22.5(@babel/core@7.23.2)
      '@babel/plugin-transform-dynamic-import': 7.22.11(@babel/core@7.23.2)
      '@babel/plugin-transform-exponentiation-operator': 7.22.5(@babel/core@7.23.2)
      '@babel/plugin-transform-export-namespace-from': 7.22.11(@babel/core@7.23.2)
      '@babel/plugin-transform-for-of': 7.22.15(@babel/core@7.23.2)
      '@babel/plugin-transform-function-name': 7.22.5(@babel/core@7.23.2)
      '@babel/plugin-transform-json-strings': 7.22.11(@babel/core@7.23.2)
      '@babel/plugin-transform-literals': 7.22.5(@babel/core@7.23.2)
      '@babel/plugin-transform-logical-assignment-operators': 7.22.11(@babel/core@7.23.2)
      '@babel/plugin-transform-member-expression-literals': 7.22.5(@babel/core@7.23.2)
      '@babel/plugin-transform-modules-amd': 7.23.0(@babel/core@7.23.2)
      '@babel/plugin-transform-modules-commonjs': 7.23.0(@babel/core@7.23.2)
      '@babel/plugin-transform-modules-systemjs': 7.23.0(@babel/core@7.23.2)
      '@babel/plugin-transform-modules-umd': 7.22.5(@babel/core@7.23.2)
      '@babel/plugin-transform-named-capturing-groups-regex': 7.22.5(@babel/core@7.23.2)
      '@babel/plugin-transform-new-target': 7.22.5(@babel/core@7.23.2)
      '@babel/plugin-transform-nullish-coalescing-operator': 7.22.11(@babel/core@7.23.2)
      '@babel/plugin-transform-numeric-separator': 7.22.11(@babel/core@7.23.2)
      '@babel/plugin-transform-object-rest-spread': 7.22.15(@babel/core@7.23.2)
      '@babel/plugin-transform-object-super': 7.22.5(@babel/core@7.23.2)
      '@babel/plugin-transform-optional-catch-binding': 7.22.11(@babel/core@7.23.2)
      '@babel/plugin-transform-optional-chaining': 7.23.0(@babel/core@7.23.2)
      '@babel/plugin-transform-parameters': 7.22.15(@babel/core@7.23.2)
      '@babel/plugin-transform-private-methods': 7.22.5(@babel/core@7.23.2)
      '@babel/plugin-transform-private-property-in-object': 7.22.11(@babel/core@7.23.2)
      '@babel/plugin-transform-property-literals': 7.22.5(@babel/core@7.23.2)
      '@babel/plugin-transform-regenerator': 7.22.10(@babel/core@7.23.2)
      '@babel/plugin-transform-reserved-words': 7.22.5(@babel/core@7.23.2)
      '@babel/plugin-transform-shorthand-properties': 7.22.5(@babel/core@7.23.2)
      '@babel/plugin-transform-spread': 7.22.5(@babel/core@7.23.2)
      '@babel/plugin-transform-sticky-regex': 7.22.5(@babel/core@7.23.2)
      '@babel/plugin-transform-template-literals': 7.22.5(@babel/core@7.23.2)
      '@babel/plugin-transform-typeof-symbol': 7.22.5(@babel/core@7.23.2)
      '@babel/plugin-transform-unicode-escapes': 7.22.10(@babel/core@7.23.2)
      '@babel/plugin-transform-unicode-property-regex': 7.22.5(@babel/core@7.23.2)
      '@babel/plugin-transform-unicode-regex': 7.22.5(@babel/core@7.23.2)
      '@babel/plugin-transform-unicode-sets-regex': 7.22.5(@babel/core@7.23.2)
      '@babel/preset-modules': 0.1.6-no-external-plugins(@babel/core@7.23.2)
      '@babel/types': 7.23.0
      babel-plugin-polyfill-corejs2: 0.4.6(@babel/core@7.23.2)
      babel-plugin-polyfill-corejs3: 0.8.5(@babel/core@7.23.2)
      babel-plugin-polyfill-regenerator: 0.5.3(@babel/core@7.23.2)
      core-js-compat: 3.33.1
      semver: 6.3.1
    transitivePeerDependencies:
      - supports-color
    dev: true

  /@babel/preset-modules@0.1.6-no-external-plugins(@babel/core@7.23.2):
    resolution: {integrity: sha512-HrcgcIESLm9aIR842yhJ5RWan/gebQUJ6E/E5+rf0y9o6oj7w0Br+sWuL6kEQ/o/AdfvR1Je9jG18/gnpwjEyA==}
    peerDependencies:
      '@babel/core': ^7.0.0-0 || ^8.0.0-0 <8.0.0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
      '@babel/types': 7.23.0
      esutils: 2.0.3
    dev: true

  /@babel/preset-react@7.22.15(@babel/core@7.23.2):
    resolution: {integrity: sha512-Csy1IJ2uEh/PecCBXXoZGAZBeCATTuePzCSB7dLYWS0vOEj6CNpjxIhW4duWwZodBNueH7QO14WbGn8YyeuN9w==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
      '@babel/helper-validator-option': 7.22.15
      '@babel/plugin-transform-react-display-name': 7.22.5(@babel/core@7.23.2)
      '@babel/plugin-transform-react-jsx': 7.22.15(@babel/core@7.23.2)
      '@babel/plugin-transform-react-jsx-development': 7.22.5(@babel/core@7.23.2)
      '@babel/plugin-transform-react-pure-annotations': 7.22.5(@babel/core@7.23.2)
    dev: true

  /@babel/preset-typescript@7.23.2(@babel/core@7.23.2):
    resolution: {integrity: sha512-u4UJc1XsS1GhIGteM8rnGiIvf9rJpiVgMEeCnwlLA7WJPC+jcXWJAGxYmeqs5hOZD8BbAfnV5ezBOxQbb4OUxA==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-plugin-utils': 7.22.5
      '@babel/helper-validator-option': 7.22.15
      '@babel/plugin-syntax-jsx': 7.22.5(@babel/core@7.23.2)
      '@babel/plugin-transform-modules-commonjs': 7.23.0(@babel/core@7.23.2)
      '@babel/plugin-transform-typescript': 7.22.15(@babel/core@7.23.2)
    dev: true

  /@babel/regjsgen@0.8.0:
    resolution: {integrity: sha512-x/rqGMdzj+fWZvCOYForTghzbtqPDZ5gPwaoNGHdgDfF2QA/XZbCBp4Moo5scrkAMPhB7z26XM/AaHuIJdgauA==}
    dev: true

  /@babel/runtime@7.23.2:
    resolution: {integrity: sha512-mM8eg4yl5D6i3lu2QKPuPH4FArvJ8KhTofbE7jwMUv9KX5mBvwPAqnV3MlyBNqdp9RyRKP6Yck8TrfYrPvX3bg==}
    engines: {node: '>=6.9.0'}
    dependencies:
      regenerator-runtime: 0.14.0

  /@babel/template@7.22.15:
    resolution: {integrity: sha512-QPErUVm4uyJa60rkI73qneDacvdvzxshT3kksGqlGWYdOTIUOwJ7RDUL8sGqslY1uXWSL6xMFKEXDS3ox2uF0w==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@babel/code-frame': 7.22.13
      '@babel/parser': 7.23.0
      '@babel/types': 7.23.0

  /@babel/traverse@7.23.2:
    resolution: {integrity: sha512-azpe59SQ48qG6nu2CzcMLbxUudtN+dOM9kDbUqGq3HXUJRlo7i8fvPoxQUzYgLZ4cMVmuZgm8vvBpNeRhd6XSw==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@babel/code-frame': 7.22.13
      '@babel/generator': 7.23.0
      '@babel/helper-environment-visitor': 7.22.20
      '@babel/helper-function-name': 7.23.0
      '@babel/helper-hoist-variables': 7.22.5
      '@babel/helper-split-export-declaration': 7.22.6
      '@babel/parser': 7.23.0
      '@babel/types': 7.23.0
      debug: 4.3.4
      globals: 11.12.0
    transitivePeerDependencies:
      - supports-color

  /@babel/types@7.23.0:
    resolution: {integrity: sha512-0oIyUfKoI3mSqMvsxBdclDwxXKXAUA8v/apZbc+iSyARYou1o8ZGDxbUYyLFoW2arqS2jDGqJuZvv1d/io1axg==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@babel/helper-string-parser': 7.22.5
      '@babel/helper-validator-identifier': 7.22.20
      to-fast-properties: 2.0.0

  /@braintree/sanitize-url@6.0.4:
    resolution: {integrity: sha512-s3jaWicZd0pkP0jf5ysyHUI/RE7MHos6qlToFcGWXVp+ykHOy77OUMrfbgJ9it2C5bow7OIQwYYaHjk9XlBQ2A==}
    dev: false

  /@codemirror/autocomplete@6.10.2(@codemirror/language@6.9.2)(@codemirror/state@6.3.1)(@codemirror/view@6.21.4)(@lezer/common@1.1.0):
    resolution: {integrity: sha512-3dCL7b0j2GdtZzWN5j7HDpRAJ26ip07R4NGYz7QYthIYMiX8I4E4TNrYcdTayPJGeVQtd/xe7lWU4XL7THFb/w==}
    peerDependencies:
      '@codemirror/language': ^6.0.0
      '@codemirror/state': ^6.0.0
      '@codemirror/view': ^6.0.0
      '@lezer/common': ^1.0.0
    dependencies:
      '@codemirror/language': 6.9.2
      '@codemirror/state': 6.3.1
      '@codemirror/view': 6.21.4
      '@lezer/common': 1.1.0
    dev: false

  /@codemirror/commands@6.3.0:
    resolution: {integrity: sha512-tFfcxRIlOWiQDFhjBSWJ10MxcvbCIsRr6V64SgrcaY0MwNk32cUOcCuNlWo8VjV4qRQCgNgUAnIeo0svkk4R5Q==}
    dependencies:
      '@codemirror/language': 6.9.2
      '@codemirror/state': 6.3.1
      '@codemirror/view': 6.21.4
      '@lezer/common': 1.1.0
    dev: false

  /@codemirror/lang-css@6.2.1(@codemirror/view@6.21.4):
    resolution: {integrity: sha512-/UNWDNV5Viwi/1lpr/dIXJNWiwDxpw13I4pTUAsNxZdg6E0mI2kTQb0P2iHczg1Tu+H4EBgJR+hYhKiHKko7qg==}
    dependencies:
      '@codemirror/autocomplete': 6.10.2(@codemirror/language@6.9.2)(@codemirror/state@6.3.1)(@codemirror/view@6.21.4)(@lezer/common@1.1.0)
      '@codemirror/language': 6.9.2
      '@codemirror/state': 6.3.1
      '@lezer/common': 1.1.0
      '@lezer/css': 1.1.3
    transitivePeerDependencies:
      - '@codemirror/view'
    dev: false

  /@codemirror/lang-html@6.4.6:
    resolution: {integrity: sha512-E4C8CVupBksXvgLSme/zv31x91g06eZHSph7NczVxZW+/K+3XgJGWNT//2WLzaKSBoxpAjaOi5ZnPU1SHhjh3A==}
    dependencies:
      '@codemirror/autocomplete': 6.10.2(@codemirror/language@6.9.2)(@codemirror/state@6.3.1)(@codemirror/view@6.21.4)(@lezer/common@1.1.0)
      '@codemirror/lang-css': 6.2.1(@codemirror/view@6.21.4)
      '@codemirror/lang-javascript': 6.2.1
      '@codemirror/language': 6.9.2
      '@codemirror/state': 6.3.1
      '@codemirror/view': 6.21.4
      '@lezer/common': 1.1.0
      '@lezer/css': 1.1.3
      '@lezer/html': 1.3.6
    dev: false

  /@codemirror/lang-javascript@6.2.1:
    resolution: {integrity: sha512-jlFOXTejVyiQCW3EQwvKH0m99bUYIw40oPmFjSX2VS78yzfe0HELZ+NEo9Yfo1MkGRpGlj3Gnu4rdxV1EnAs5A==}
    dependencies:
      '@codemirror/autocomplete': 6.10.2(@codemirror/language@6.9.2)(@codemirror/state@6.3.1)(@codemirror/view@6.21.4)(@lezer/common@1.1.0)
      '@codemirror/language': 6.9.2
      '@codemirror/lint': 6.4.2
      '@codemirror/state': 6.3.1
      '@codemirror/view': 6.21.4
      '@lezer/common': 1.1.0
      '@lezer/javascript': 1.4.8
    dev: false

  /@codemirror/language@6.9.2:
    resolution: {integrity: sha512-QGTQXSpAKDIzaSE96zNK1UfIUhPgkT1CLjh1N5qVzZuxgsEOhz5RqaN8QCIdyOQklGLx3MgHd9YrE3X3+Pl1ow==}
    dependencies:
      '@codemirror/state': 6.3.1
      '@codemirror/view': 6.21.4
      '@lezer/common': 1.1.0
      '@lezer/highlight': 1.1.6
      '@lezer/lr': 1.3.13
      style-mod: 4.1.0
    dev: false

  /@codemirror/lint@6.4.2:
    resolution: {integrity: sha512-wzRkluWb1ptPKdzlsrbwwjYCPLgzU6N88YBAmlZi8WFyuiEduSd05MnJYNogzyc8rPK7pj6m95ptUApc8sHKVA==}
    dependencies:
      '@codemirror/state': 6.3.1
      '@codemirror/view': 6.21.4
      crelt: 1.0.6
    dev: false

  /@codemirror/state@6.3.1:
    resolution: {integrity: sha512-88e4HhMtKJyw6fKprGaN/yZfiaoGYOi2nM45YCUC6R/kex9sxFWBDGatS1vk4lMgnWmdIIB9tk8Gj1LmL8YfvA==}
    dev: false

  /@codemirror/view@6.21.4:
    resolution: {integrity: sha512-WKVZ7nvN0lwWPfAf05WxWqTpwjC8YN3q5goj3CsSig7//DD81LULgOx3nBegqpqP0iygBqRmW8z0KSc2QTAdAg==}
    dependencies:
      '@codemirror/state': 6.3.1
      style-mod: 4.1.0
      w3c-keyname: 2.2.8
    dev: false

  /@codesandbox/nodebox@0.1.8:
    resolution: {integrity: sha512-2VRS6JDSk+M+pg56GA6CryyUSGPjBEe8Pnae0QL3jJF1mJZJVMDKr93gJRtBbLkfZN6LD/DwMtf+2L0bpWrjqg==}
    dependencies:
      outvariant: 1.4.0
      strict-event-emitter: 0.4.6
    dev: false

  /@codesandbox/sandpack-client@2.9.0:
    resolution: {integrity: sha512-KkG/YusBsL0RnI3P079cckHrRleLaGQVM5Plzn6xWOPM04Dce52MMkr6XIU77ZMjZm/zZ5pmgXLW7M6HoyIy/A==}
    dependencies:
      '@codesandbox/nodebox': 0.1.8
      buffer: 6.0.3
      dequal: 2.0.3
      outvariant: 1.4.0
      static-browser-server: 1.0.3
    dev: false

  /@codesandbox/sandpack-react@2.9.0(@lezer/common@1.1.0)(react-dom@18.2.0)(react@18.2.0):
    resolution: {integrity: sha512-A0quGugVyWbRktpdq2Nc6W1+XV0QnHq1lbqDCHAs2ijfWxvhhNaqMr6lWDaG/NTUGRNLUNETbipcNaBeC0dxhw==}
    peerDependencies:
      react: ^16.8.0 || ^17 || ^18
      react-dom: ^16.8.0 || ^17 || ^18
    dependencies:
      '@codemirror/autocomplete': 6.10.2(@codemirror/language@6.9.2)(@codemirror/state@6.3.1)(@codemirror/view@6.21.4)(@lezer/common@1.1.0)
      '@codemirror/commands': 6.3.0
      '@codemirror/lang-css': 6.2.1(@codemirror/view@6.21.4)
      '@codemirror/lang-html': 6.4.6
      '@codemirror/lang-javascript': 6.2.1
      '@codemirror/language': 6.9.2
      '@codemirror/state': 6.3.1
      '@codemirror/view': 6.21.4
      '@codesandbox/sandpack-client': 2.9.0
      '@lezer/highlight': 1.1.6
      '@react-hook/intersection-observer': 3.1.1(react@18.2.0)
      '@stitches/core': 1.2.8
      anser: 2.1.1
      clean-set: 1.1.2
      codesandbox-import-util-types: 2.2.3
      dequal: 2.0.3
      escape-carriage: 1.3.1
      lz-string: 1.5.0
      react: 18.2.0
      react-devtools-inline: 4.4.0
      react-dom: 18.2.0(react@18.2.0)
      react-is: 17.0.2
    transitivePeerDependencies:
      - '@lezer/common'
    dev: false

  /@codesandbox/sandpack-themes@2.0.21:
    resolution: {integrity: sha512-CMH/MO/dh6foPYb/3eSn2Cu/J3+1+/81Fsaj7VggICkCrmRk0qG5dmgjGAearPTnRkOGORIPHuRqwNXgw0E6YQ==}
    dev: false

  /@eslint/eslintrc@1.4.1:
    resolution: {integrity: sha512-XXrH9Uarn0stsyldqDYq8r++mROmWRI1xKMXa640Bb//SY1+ECYX6VzT6Lcx5frD0V30XieqJ0oX9I2Xj5aoMA==}
    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}
    dependencies:
      ajv: 6.12.6
      debug: 4.3.4
      espree: 9.6.1
      globals: 13.23.0
      ignore: 5.2.4
      import-fresh: 3.3.0
      js-yaml: 4.1.0
      minimatch: 3.1.2
      strip-json-comments: 3.1.1
    transitivePeerDependencies:
      - supports-color
    dev: true

  /@headlessui/react@1.7.17(react-dom@18.2.0)(react@18.2.0):
    resolution: {integrity: sha512-4am+tzvkqDSSgiwrsEpGWqgGo9dz8qU5M3znCkC4PgkpY4HcCZzEDEvozltGGGHIKl9jbXbZPSH5TWn4sWJdow==}
    engines: {node: '>=10'}
    peerDependencies:
      react: ^16 || ^17 || ^18
      react-dom: ^16 || ^17 || ^18
    dependencies:
      client-only: 0.0.1
      react: 18.2.0
      react-dom: 18.2.0(react@18.2.0)
    dev: false

  /@humanwhocodes/config-array@0.6.0:
    resolution: {integrity: sha512-JQlEKbcgEUjBFhLIF4iqM7u/9lwgHRBcpHrmUNCALK0Q3amXN6lxdoXLnF0sm11E9VqTmBALR87IlUg1bZ8A9A==}
    engines: {node: '>=10.10.0'}
    dependencies:
      '@humanwhocodes/object-schema': 1.2.1
      debug: 4.3.4
      minimatch: 3.1.2
    transitivePeerDependencies:
      - supports-color
    dev: true

  /@humanwhocodes/object-schema@1.2.1:
    resolution: {integrity: sha512-ZnQMnLV4e7hDlUvw8H+U8ASL02SS2Gn6+9Ac3wGGLIe7+je2AeAOxPY+izIPJDfFDb7eDjev0Us8MO1iFRN8hA==}
    dev: true

  /@jridgewell/gen-mapping@0.3.3:
    resolution: {integrity: sha512-HLhSWOLRi875zjjMG/r+Nv0oCW8umGb0BgEhyX3dDX3egwZtB8PqLnjz3yedt8R5StBrzcg4aBpnh8UA9D1BoQ==}
    engines: {node: '>=6.0.0'}
    dependencies:
      '@jridgewell/set-array': 1.1.2
      '@jridgewell/sourcemap-codec': 1.4.15
      '@jridgewell/trace-mapping': 0.3.20

  /@jridgewell/resolve-uri@3.1.1:
    resolution: {integrity: sha512-dSYZh7HhCDtCKm4QakX0xFpsRDqjjtZf/kjI/v3T3Nwt5r8/qz/M19F9ySyOqU94SXBmeG9ttTul+YnR4LOxFA==}
    engines: {node: '>=6.0.0'}

  /@jridgewell/set-array@1.1.2:
    resolution: {integrity: sha512-xnkseuNADM0gt2bs+BvhO0p78Mk762YnZdsuzFV018NoG1Sj1SCQvpSqa7XUaTam5vAGasABV9qXASMKnFMwMw==}
    engines: {node: '>=6.0.0'}

  /@jridgewell/sourcemap-codec@1.4.15:
    resolution: {integrity: sha512-eF2rxCRulEKXHTRiDrDy6erMYWqNw4LPdQ8UQA4huuxaQsVeRPFl2oM8oDGxMFhJUWZf9McpLtJasDDZb/Bpeg==}

  /@jridgewell/trace-mapping@0.3.20:
    resolution: {integrity: sha512-R8LcPeWZol2zR8mmH3JeKQ6QRCFb7XgUhV9ZlGhHLGyg4wpPiPZNQOOWhFZhxKw8u//yTbNGI42Bx/3paXEQ+Q==}
    dependencies:
      '@jridgewell/resolve-uri': 3.1.1
      '@jridgewell/sourcemap-codec': 1.4.15

  /@lezer/common@1.1.0:
    resolution: {integrity: sha512-XPIN3cYDXsoJI/oDWoR2tD++juVrhgIago9xyKhZ7IhGlzdDM9QgC8D8saKNCz5pindGcznFr2HBSsEQSWnSjw==}
    dev: false

  /@lezer/css@1.1.3:
    resolution: {integrity: sha512-SjSM4pkQnQdJDVc80LYzEaMiNy9txsFbI7HsMgeVF28NdLaAdHNtQ+kB/QqDUzRBV/75NTXjJ/R5IdC8QQGxMg==}
    dependencies:
      '@lezer/highlight': 1.1.6
      '@lezer/lr': 1.3.13
    dev: false

  /@lezer/highlight@1.1.6:
    resolution: {integrity: sha512-cmSJYa2us+r3SePpRCjN5ymCqCPv+zyXmDl0ciWtVaNiORT/MxM7ZgOMQZADD0o51qOaOg24qc/zBViOIwAjJg==}
    dependencies:
      '@lezer/common': 1.1.0
    dev: false

  /@lezer/html@1.3.6:
    resolution: {integrity: sha512-Kk9HJARZTc0bAnMQUqbtuhFVsB4AnteR2BFUWfZV7L/x1H0aAKz6YabrfJ2gk/BEgjh9L3hg5O4y2IDZRBdzuQ==}
    dependencies:
      '@lezer/common': 1.1.0
      '@lezer/highlight': 1.1.6
      '@lezer/lr': 1.3.13
    dev: false

  /@lezer/javascript@1.4.8:
    resolution: {integrity: sha512-QRmw/5xrcyRLyWr3JT3KCzn2XZr5NYNqQMGsqnYy+FghbQn9DZPuj6JDkE6uSXvfMLpdapu8KBIaeoJFaR4QVw==}
    dependencies:
      '@lezer/highlight': 1.1.6
      '@lezer/lr': 1.3.13
    dev: false

  /@lezer/lr@1.3.13:
    resolution: {integrity: sha512-RLAbau/4uSzKgIKj96mI5WUtG1qtiR0Frn0Ei9zhPj8YOkHM+1Bb8SgdVvmR/aWJCFIzjo2KFnDiRZ75Xf5NdQ==}
    dependencies:
      '@lezer/common': 1.1.0
    dev: false

  /@mdx-js/mdx@2.3.0:
    resolution: {integrity: sha512-jLuwRlz8DQfQNiUCJR50Y09CGPq3fLtmtUQfVrj79E0JWu3dvsVcxVIcfhR5h0iXu+/z++zDrYeiJqifRynJkA==}
    dependencies:
      '@types/estree-jsx': 1.0.2
      '@types/mdx': 2.0.9
      estree-util-build-jsx: 2.2.2
      estree-util-is-identifier-name: 2.1.0
      estree-util-to-js: 1.2.0
      estree-walker: 3.0.3
      hast-util-to-estree: 2.3.3
      markdown-extensions: 1.1.1
      periscopic: 3.1.0
      remark-mdx: 2.3.0
      remark-parse: 10.0.2
      remark-rehype: 10.1.0
      unified: 10.1.2
      unist-util-position-from-estree: 1.1.2
      unist-util-stringify-position: 3.0.3
      unist-util-visit: 4.1.2
      vfile: 5.3.7
    transitivePeerDependencies:
      - supports-color
    dev: false

  /@mdx-js/react@2.3.0(react@18.2.0):
    resolution: {integrity: sha512-zQH//gdOmuu7nt2oJR29vFhDv88oGPmVw6BggmrHeMI+xgEkp1B2dX9/bMBSYtK0dyLX/aOmesKS09g222K1/g==}
    peerDependencies:
      react: '>=16'
    dependencies:
      '@types/mdx': 2.0.9
      '@types/react': 18.0.0
      react: 18.2.0
    dev: false

  /@napi-rs/simple-git-android-arm-eabi@0.1.9:
    resolution: {integrity: sha512-9D4JnfePMpgL4pg9aMUX7/TIWEUQ+Tgx8n3Pf8TNCMGjUbImJyYsDSLJzbcv9wH7srgn4GRjSizXFJHAPjzEug==}
    engines: {node: '>= 10'}
    cpu: [arm]
    os: [android]
    requiresBuild: true
    dev: false
    optional: true

  /@napi-rs/simple-git-android-arm64@0.1.9:
    resolution: {integrity: sha512-Krilsw0gPrrASZzudNEl9pdLuNbhoTK0j7pUbfB8FRifpPdFB/zouwuEm0aSnsDXN4ftGrmGG82kuiR/2MeoPg==}
    engines: {node: '>= 10'}
    cpu: [arm64]
    os: [android]
    requiresBuild: true
    dev: false
    optional: true

  /@napi-rs/simple-git-darwin-arm64@0.1.9:
    resolution: {integrity: sha512-H/F09nDgYjv4gcFrZBgdTKkZEepqt0KLYcCJuUADuxkKupmjLdecMhypXLk13AzvLW4UQI7NlLTLDXUFLyr2BA==}
    engines: {node: '>= 10'}
    cpu: [arm64]
    os: [darwin]
    requiresBuild: true
    dev: false
    optional: true

  /@napi-rs/simple-git-darwin-x64@0.1.9:
    resolution: {integrity: sha512-jBR2xS9nVPqmHv0TWz874W0m/d453MGrMeLjB+boK5IPPLhg3AWIZj0aN9jy2Je1BGVAa0w3INIQJtBBeB6kFA==}
    engines: {node: '>= 10'}
    cpu: [x64]
    os: [darwin]
    requiresBuild: true
    dev: false
    optional: true

  /@napi-rs/simple-git-linux-arm-gnueabihf@0.1.9:
    resolution: {integrity: sha512-3n0+VpO4YfZxndZ0sCvsHIvsazd+JmbSjrlTRBCnJeAU1/sfos3skNZtKGZksZhjvd+3o+/GFM8L7Xnv01yggA==}
    engines: {node: '>= 10'}
    cpu: [arm]
    os: [linux]
    requiresBuild: true
    dev: false
    optional: true

  /@napi-rs/simple-git-linux-arm64-gnu@0.1.9:
    resolution: {integrity: sha512-lIzf0KHU2SKC12vMrWwCtysG2Sdt31VHRPMUiz9lD9t3xwVn8qhFSTn5yDkTeG3rgX6o0p5EKalfQN5BXsJq2w==}
    engines: {node: '>= 10'}
    cpu: [arm64]
    os: [linux]
    requiresBuild: true
    dev: false
    optional: true

  /@napi-rs/simple-git-linux-arm64-musl@0.1.9:
    resolution: {integrity: sha512-KQozUoNXrxrB8k741ncWXSiMbjl1AGBGfZV21PANzUM8wH4Yem2bg3kfglYS/QIx3udspsT35I9abu49n7D1/w==}
    engines: {node: '>= 10'}
    cpu: [arm64]
    os: [linux]
    requiresBuild: true
    dev: false
    optional: true

  /@napi-rs/simple-git-linux-x64-gnu@0.1.9:
    resolution: {integrity: sha512-O/Niui5mnHPcK3iYC3ui8wgERtJWsQ3Y74W/09t0bL/3dgzGMl4oQt0qTj9dWCsnoGsIEYHPzwCBp/2vqYp/pw==}
    engines: {node: '>= 10'}
    cpu: [x64]
    os: [linux]
    requiresBuild: true
    dev: false
    optional: true

  /@napi-rs/simple-git-linux-x64-musl@0.1.9:
    resolution: {integrity: sha512-L9n+e8Wn3hKr3RsIdY8GaB+ry4xZ4BaGwyKExgoB8nDGQuRUY9oP6p0WA4hWfJvJnU1H6hvo36a5UFPReyBO7A==}
    engines: {node: '>= 10'}
    cpu: [x64]
    os: [linux]
    requiresBuild: true
    dev: false
    optional: true

  /@napi-rs/simple-git-win32-arm64-msvc@0.1.9:
    resolution: {integrity: sha512-Z6Ja/SZK+lMvRWaxj7wjnvSbAsGrH006sqZo8P8nxKUdZfkVvoCaAWr1r0cfkk2Z3aijLLtD+vKeXGlUPH6gGQ==}
    engines: {node: '>= 10'}
    cpu: [arm64]
    os: [win32]
    requiresBuild: true
    dev: false
    optional: true

  /@napi-rs/simple-git-win32-x64-msvc@0.1.9:
    resolution: {integrity: sha512-VAZj1UvC+R2MjKOD3I/Y7dmQlHWAYy4omhReQJRpbCf+oGCBi9CWiIduGqeYEq723nLIKdxP7XjaO0wl1NnUww==}
    engines: {node: '>= 10'}
    cpu: [x64]
    os: [win32]
    requiresBuild: true
    dev: false
    optional: true

  /@napi-rs/simple-git@0.1.9:
    resolution: {integrity: sha512-qKzDS0+VjMvVyU28px+C6zlD1HKy83NIdYzfMQWa/g/V1iG/Ic8uwrS2ihHfm7mp7X0PPrmINLiTTi6ieUIKfw==}
    engines: {node: '>= 10'}
    optionalDependencies:
      '@napi-rs/simple-git-android-arm-eabi': 0.1.9
      '@napi-rs/simple-git-android-arm64': 0.1.9
      '@napi-rs/simple-git-darwin-arm64': 0.1.9
      '@napi-rs/simple-git-darwin-x64': 0.1.9
      '@napi-rs/simple-git-linux-arm-gnueabihf': 0.1.9
      '@napi-rs/simple-git-linux-arm64-gnu': 0.1.9
      '@napi-rs/simple-git-linux-arm64-musl': 0.1.9
      '@napi-rs/simple-git-linux-x64-gnu': 0.1.9
      '@napi-rs/simple-git-linux-x64-musl': 0.1.9
      '@napi-rs/simple-git-win32-arm64-msvc': 0.1.9
      '@napi-rs/simple-git-win32-x64-msvc': 0.1.9
    dev: false

  /@next/env@14.1.3:
    resolution: {integrity: sha512-VhgXTvrgeBRxNPjyfBsDIMvgsKDxjlpw4IAUsHCX8Gjl1vtHUYRT3+xfQ/wwvLPDd/6kqfLqk9Pt4+7gysuCKQ==}
    dev: false

  /@next/eslint-plugin-next@13.5.6:
    resolution: {integrity: sha512-ng7pU/DDsxPgT6ZPvuprxrkeew3XaRf4LAT4FabaEO/hAbvVx4P7wqnqdbTdDn1kgTvsI4tpIgT4Awn/m0bGbg==}
    dependencies:
      glob: 7.1.7
    dev: true

  /@next/swc-darwin-arm64@14.1.3:
    resolution: {integrity: sha512-LALu0yIBPRiG9ANrD5ncB3pjpO0Gli9ZLhxdOu6ZUNf3x1r3ea1rd9Q+4xxUkGrUXLqKVK9/lDkpYIJaCJ6AHQ==}
    engines: {node: '>= 10'}
    cpu: [arm64]
    os: [darwin]
    requiresBuild: true
    dev: false
    optional: true

  /@next/swc-darwin-x64@14.1.3:
    resolution: {integrity: sha512-E/9WQeXxkqw2dfcn5UcjApFgUq73jqNKaE5bysDm58hEUdUGedVrnRhblhJM7HbCZNhtVl0j+6TXsK0PuzXTCg==}
    engines: {node: '>= 10'}
    cpu: [x64]
    os: [darwin]
    requiresBuild: true
    dev: false
    optional: true

  /@next/swc-linux-arm64-gnu@14.1.3:
    resolution: {integrity: sha512-USArX9B+3rZSXYLFvgy0NVWQgqh6LHWDmMt38O4lmiJNQcwazeI6xRvSsliDLKt+78KChVacNiwvOMbl6g6BBw==}
    engines: {node: '>= 10'}
    cpu: [arm64]
    os: [linux]
    requiresBuild: true
    dev: false
    optional: true

  /@next/swc-linux-arm64-musl@14.1.3:
    resolution: {integrity: sha512-esk1RkRBLSIEp1qaQXv1+s6ZdYzuVCnDAZySpa62iFTMGTisCyNQmqyCTL9P+cLJ4N9FKCI3ojtSfsyPHJDQNw==}
    engines: {node: '>= 10'}
    cpu: [arm64]
    os: [linux]
    requiresBuild: true
    dev: false
    optional: true

  /@next/swc-linux-x64-gnu@14.1.3:
    resolution: {integrity: sha512-8uOgRlYEYiKo0L8YGeS+3TudHVDWDjPVDUcST+z+dUzgBbTEwSSIaSgF/vkcC1T/iwl4QX9iuUyUdQEl0Kxalg==}
    engines: {node: '>= 10'}
    cpu: [x64]
    os: [linux]
    requiresBuild: true
    dev: false
    optional: true

  /@next/swc-linux-x64-musl@14.1.3:
    resolution: {integrity: sha512-DX2zqz05ziElLoxskgHasaJBREC5Y9TJcbR2LYqu4r7naff25B4iXkfXWfcp69uD75/0URmmoSgT8JclJtrBoQ==}
    engines: {node: '>= 10'}
    cpu: [x64]
    os: [linux]
    requiresBuild: true
    dev: false
    optional: true

  /@next/swc-win32-arm64-msvc@14.1.3:
    resolution: {integrity: sha512-HjssFsCdsD4GHstXSQxsi2l70F/5FsRTRQp8xNgmQs15SxUfUJRvSI9qKny/jLkY3gLgiCR3+6A7wzzK0DBlfA==}
    engines: {node: '>= 10'}
    cpu: [arm64]
    os: [win32]
    requiresBuild: true
    dev: false
    optional: true

  /@next/swc-win32-ia32-msvc@14.1.3:
    resolution: {integrity: sha512-DRuxD5axfDM1/Ue4VahwSxl1O5rn61hX8/sF0HY8y0iCbpqdxw3rB3QasdHn/LJ6Wb2y5DoWzXcz3L1Cr+Thrw==}
    engines: {node: '>= 10'}
    cpu: [ia32]
    os: [win32]
    requiresBuild: true
    dev: false
    optional: true

  /@next/swc-win32-x64-msvc@14.1.3:
    resolution: {integrity: sha512-uC2DaDoWH7h1P/aJ4Fok3Xiw6P0Lo4ez7NbowW2VGNXw/Xv6tOuLUcxhBYZxsSUJtpeknCi8/fvnSpyCFp4Rcg==}
    engines: {node: '>= 10'}
    cpu: [x64]
    os: [win32]
    requiresBuild: true
    dev: false
    optional: true

  /@nodelib/fs.scandir@2.1.5:
    resolution: {integrity: sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==}
    engines: {node: '>= 8'}
    dependencies:
      '@nodelib/fs.stat': 2.0.5
      run-parallel: 1.2.0

  /@nodelib/fs.stat@2.0.5:
    resolution: {integrity: sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==}
    engines: {node: '>= 8'}

  /@nodelib/fs.walk@1.2.8:
    resolution: {integrity: sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==}
    engines: {node: '>= 8'}
    dependencies:
      '@nodelib/fs.scandir': 2.1.5
      fastq: 1.15.0

  /@open-draft/deferred-promise@2.2.0:
    resolution: {integrity: sha512-CecwLWx3rhxVQF6V4bAgPS5t+So2sTbPgAzafKkVizyi7tlwpcFpdFqq+wqF2OwNBmqFuu6tOyouTuxgpMfzmA==}
    dev: false

  /@pkgr/utils@2.4.2:
    resolution: {integrity: sha512-POgTXhjrTfbTV63DiFXav4lBHiICLKKwDeaKn9Nphwj7WH6m0hMMCaJkMyRWjgtPFyRKRVoMXXjczsTQRDEhYw==}
    engines: {node: ^12.20.0 || ^14.18.0 || >=16.0.0}
    dependencies:
      cross-spawn: 7.0.3
      fast-glob: 3.3.1
      is-glob: 4.0.3
      open: 9.1.0
      picocolors: 1.0.0
      tslib: 2.6.2
    dev: true

  /@popperjs/core@2.11.8:
    resolution: {integrity: sha512-P1st0aksCrn9sGZhp8GMYwBnQsbvAWsZAX44oXNNvLHGqAOcoVxmjZiohstwQ7SqKnbR47akdNi+uleWD8+g6A==}
    dev: false

  /@radix-ui/primitive@1.0.1:
    resolution: {integrity: sha512-yQ8oGX2GVsEYMWGxcovu1uGWPCxV5BFfeeYxqPmuAzUyLT9qmaMXSAhXpb0WrspIeqYzdJpkh2vHModJPgRIaw==}
    dependencies:
      '@babel/runtime': 7.23.2
    dev: false

  /@radix-ui/react-collection@1.0.3(@types/react-dom@18.0.0)(@types/react@18.0.0)(react-dom@18.2.0)(react@18.2.0):
    resolution: {integrity: sha512-3SzW+0PW7yBBoQlT8wNcGtaxaD0XSu0uLUFgrtHY08Acx05TaHaOmVLR73c0j/cqpDy53KBMO7s0dx2wmOIDIA==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0
      react-dom: ^16.8 || ^17.0 || ^18.0
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true
    dependencies:
      '@babel/runtime': 7.23.2
      '@radix-ui/react-compose-refs': 1.0.1(@types/react@18.0.0)(react@18.2.0)
      '@radix-ui/react-context': 1.0.1(@types/react@18.0.0)(react@18.2.0)
      '@radix-ui/react-primitive': 1.0.3(@types/react-dom@18.0.0)(@types/react@18.0.0)(react-dom@18.2.0)(react@18.2.0)
      '@radix-ui/react-slot': 1.0.2(@types/react@18.0.0)(react@18.2.0)
      '@types/react': 18.0.0
      '@types/react-dom': 18.0.0
      react: 18.2.0
      react-dom: 18.2.0(react@18.2.0)
    dev: false

  /@radix-ui/react-compose-refs@1.0.1(@types/react@18.0.0)(react@18.2.0):
    resolution: {integrity: sha512-fDSBgd44FKHa1FRMU59qBMPFcl2PZE+2nmqunj+BWFyYYjnhIDWL2ItDs3rrbJDQOtzt5nIebLCQc4QRfz6LJw==}
    peerDependencies:
      '@types/react': '*'
      react: ^16.8 || ^17.0 || ^18.0
    peerDependenciesMeta:
      '@types/react':
        optional: true
    dependencies:
      '@babel/runtime': 7.23.2
      '@types/react': 18.0.0
      react: 18.2.0
    dev: false

  /@radix-ui/react-context@1.0.1(@types/react@18.0.0)(react@18.2.0):
    resolution: {integrity: sha512-ebbrdFoYTcuZ0v4wG5tedGnp9tzcV8awzsxYph7gXUyvnNLuTIcCk1q17JEbnVhXAKG9oX3KtchwiMIAYp9NLg==}
    peerDependencies:
      '@types/react': '*'
      react: ^16.8 || ^17.0 || ^18.0
    peerDependenciesMeta:
      '@types/react':
        optional: true
    dependencies:
      '@babel/runtime': 7.23.2
      '@types/react': 18.0.0
      react: 18.2.0
    dev: false

  /@radix-ui/react-direction@1.0.1(@types/react@18.0.0)(react@18.2.0):
    resolution: {integrity: sha512-RXcvnXgyvYvBEOhCBuddKecVkoMiI10Jcm5cTI7abJRAHYfFxeu+FBQs/DvdxSYucxR5mna0dNsL6QFlds5TMA==}
    peerDependencies:
      '@types/react': '*'
      react: ^16.8 || ^17.0 || ^18.0
    peerDependenciesMeta:
      '@types/react':
        optional: true
    dependencies:
      '@babel/runtime': 7.23.2
      '@types/react': 18.0.0
      react: 18.2.0
    dev: false

  /@radix-ui/react-id@1.0.1(@types/react@18.0.0)(react@18.2.0):
    resolution: {integrity: sha512-tI7sT/kqYp8p96yGWY1OAnLHrqDgzHefRBKQ2YAkBS5ja7QLcZ9Z/uY7bEjPUatf8RomoXM8/1sMj1IJaE5UzQ==}
    peerDependencies:
      '@types/react': '*'
      react: ^16.8 || ^17.0 || ^18.0
    peerDependenciesMeta:
      '@types/react':
        optional: true
    dependencies:
      '@babel/runtime': 7.23.2
      '@radix-ui/react-use-layout-effect': 1.0.1(@types/react@18.0.0)(react@18.2.0)
      '@types/react': 18.0.0
      react: 18.2.0
    dev: false

  /@radix-ui/react-presence@1.0.1(@types/react-dom@18.0.0)(@types/react@18.0.0)(react-dom@18.2.0)(react@18.2.0):
    resolution: {integrity: sha512-UXLW4UAbIY5ZjcvzjfRFo5gxva8QirC9hF7wRE4U5gz+TP0DbRk+//qyuAQ1McDxBt1xNMBTaciFGvEmJvAZCg==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0
      react-dom: ^16.8 || ^17.0 || ^18.0
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true
    dependencies:
      '@babel/runtime': 7.23.2
      '@radix-ui/react-compose-refs': 1.0.1(@types/react@18.0.0)(react@18.2.0)
      '@radix-ui/react-use-layout-effect': 1.0.1(@types/react@18.0.0)(react@18.2.0)
      '@types/react': 18.0.0
      '@types/react-dom': 18.0.0
      react: 18.2.0
      react-dom: 18.2.0(react@18.2.0)
    dev: false

  /@radix-ui/react-primitive@1.0.3(@types/react-dom@18.0.0)(@types/react@18.0.0)(react-dom@18.2.0)(react@18.2.0):
    resolution: {integrity: sha512-yi58uVyoAcK/Nq1inRY56ZSjKypBNKTa/1mcL8qdl6oJeEaDbOldlzrGn7P6Q3Id5d+SYNGc5AJgc4vGhjs5+g==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0
      react-dom: ^16.8 || ^17.0 || ^18.0
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true
    dependencies:
      '@babel/runtime': 7.23.2
      '@radix-ui/react-slot': 1.0.2(@types/react@18.0.0)(react@18.2.0)
      '@types/react': 18.0.0
      '@types/react-dom': 18.0.0
      react: 18.2.0
      react-dom: 18.2.0(react@18.2.0)
    dev: false

  /@radix-ui/react-roving-focus@1.0.4(@types/react-dom@18.0.0)(@types/react@18.0.0)(react-dom@18.2.0)(react@18.2.0):
    resolution: {integrity: sha512-2mUg5Mgcu001VkGy+FfzZyzbmuUWzgWkj3rvv4yu+mLw03+mTzbxZHvfcGyFp2b8EkQeMkpRQ5FiA2Vr2O6TeQ==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0
      react-dom: ^16.8 || ^17.0 || ^18.0
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true
    dependencies:
      '@babel/runtime': 7.23.2
      '@radix-ui/primitive': 1.0.1
      '@radix-ui/react-collection': 1.0.3(@types/react-dom@18.0.0)(@types/react@18.0.0)(react-dom@18.2.0)(react@18.2.0)
      '@radix-ui/react-compose-refs': 1.0.1(@types/react@18.0.0)(react@18.2.0)
      '@radix-ui/react-context': 1.0.1(@types/react@18.0.0)(react@18.2.0)
      '@radix-ui/react-direction': 1.0.1(@types/react@18.0.0)(react@18.2.0)
      '@radix-ui/react-id': 1.0.1(@types/react@18.0.0)(react@18.2.0)
      '@radix-ui/react-primitive': 1.0.3(@types/react-dom@18.0.0)(@types/react@18.0.0)(react-dom@18.2.0)(react@18.2.0)
      '@radix-ui/react-use-callback-ref': 1.0.1(@types/react@18.0.0)(react@18.2.0)
      '@radix-ui/react-use-controllable-state': 1.0.1(@types/react@18.0.0)(react@18.2.0)
      '@types/react': 18.0.0
      '@types/react-dom': 18.0.0
      react: 18.2.0
      react-dom: 18.2.0(react@18.2.0)
    dev: false

  /@radix-ui/react-slot@1.0.2(@types/react@18.0.0)(react@18.2.0):
    resolution: {integrity: sha512-YeTpuq4deV+6DusvVUW4ivBgnkHwECUu0BiN43L5UCDFgdhsRUWAghhTF5MbvNTPzmiFOx90asDSUjWuCNapwg==}
    peerDependencies:
      '@types/react': '*'
      react: ^16.8 || ^17.0 || ^18.0
    peerDependenciesMeta:
      '@types/react':
        optional: true
    dependencies:
      '@babel/runtime': 7.23.2
      '@radix-ui/react-compose-refs': 1.0.1(@types/react@18.0.0)(react@18.2.0)
      '@types/react': 18.0.0
      react: 18.2.0
    dev: false

  /@radix-ui/react-tabs@1.0.4(@types/react-dom@18.0.0)(@types/react@18.0.0)(react-dom@18.2.0)(react@18.2.0):
    resolution: {integrity: sha512-egZfYY/+wRNCflXNHx+dePvnz9FbmssDTJBtgRfDY7e8SE5oIo3Py2eCB1ckAbh1Q7cQ/6yJZThJ++sgbxibog==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0
      react-dom: ^16.8 || ^17.0 || ^18.0
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true
    dependencies:
      '@babel/runtime': 7.23.2
      '@radix-ui/primitive': 1.0.1
      '@radix-ui/react-context': 1.0.1(@types/react@18.0.0)(react@18.2.0)
      '@radix-ui/react-direction': 1.0.1(@types/react@18.0.0)(react@18.2.0)
      '@radix-ui/react-id': 1.0.1(@types/react@18.0.0)(react@18.2.0)
      '@radix-ui/react-presence': 1.0.1(@types/react-dom@18.0.0)(@types/react@18.0.0)(react-dom@18.2.0)(react@18.2.0)
      '@radix-ui/react-primitive': 1.0.3(@types/react-dom@18.0.0)(@types/react@18.0.0)(react-dom@18.2.0)(react@18.2.0)
      '@radix-ui/react-roving-focus': 1.0.4(@types/react-dom@18.0.0)(@types/react@18.0.0)(react-dom@18.2.0)(react@18.2.0)
      '@radix-ui/react-use-controllable-state': 1.0.1(@types/react@18.0.0)(react@18.2.0)
      '@types/react': 18.0.0
      '@types/react-dom': 18.0.0
      react: 18.2.0
      react-dom: 18.2.0(react@18.2.0)
    dev: false

  /@radix-ui/react-use-callback-ref@1.0.1(@types/react@18.0.0)(react@18.2.0):
    resolution: {integrity: sha512-D94LjX4Sp0xJFVaoQOd3OO9k7tpBYNOXdVhkltUbGv2Qb9OXdrg/CpsjlZv7ia14Sylv398LswWBVVu5nqKzAQ==}
    peerDependencies:
      '@types/react': '*'
      react: ^16.8 || ^17.0 || ^18.0
    peerDependenciesMeta:
      '@types/react':
        optional: true
    dependencies:
      '@babel/runtime': 7.23.2
      '@types/react': 18.0.0
      react: 18.2.0
    dev: false

  /@radix-ui/react-use-controllable-state@1.0.1(@types/react@18.0.0)(react@18.2.0):
    resolution: {integrity: sha512-Svl5GY5FQeN758fWKrjM6Qb7asvXeiZltlT4U2gVfl8Gx5UAv2sMR0LWo8yhsIZh2oQ0eFdZ59aoOOMV7b47VA==}
    peerDependencies:
      '@types/react': '*'
      react: ^16.8 || ^17.0 || ^18.0
    peerDependenciesMeta:
      '@types/react':
        optional: true
    dependencies:
      '@babel/runtime': 7.23.2
      '@radix-ui/react-use-callback-ref': 1.0.1(@types/react@18.0.0)(react@18.2.0)
      '@types/react': 18.0.0
      react: 18.2.0
    dev: false

  /@radix-ui/react-use-layout-effect@1.0.1(@types/react@18.0.0)(react@18.2.0):
    resolution: {integrity: sha512-v/5RegiJWYdoCvMnITBkNNx6bCj20fiaJnWtRkU18yITptraXjffz5Qbn05uOiQnOvi+dbkznkoaMltz1GnszQ==}
    peerDependencies:
      '@types/react': '*'
      react: ^16.8 || ^17.0 || ^18.0
    peerDependenciesMeta:
      '@types/react':
        optional: true
    dependencies:
      '@babel/runtime': 7.23.2
      '@types/react': 18.0.0
      react: 18.2.0
    dev: false

  /@react-hook/intersection-observer@3.1.1(react@18.2.0):
    resolution: {integrity: sha512-OTDx8/wFaRvzFtKl1dEUEXSOqK2zVJHporiTTdC2xO++0e9FEx9wIrPis5q3lqtXeZH9zYGLbk+aB75qNFbbuw==}
    peerDependencies:
      react: '>=16.8'
    dependencies:
      '@react-hook/passive-layout-effect': 1.2.1(react@18.2.0)
      intersection-observer: 0.10.0
      react: 18.2.0
    dev: false

  /@react-hook/passive-layout-effect@1.2.1(react@18.2.0):
    resolution: {integrity: sha512-IwEphTD75liO8g+6taS+4oqz+nnroocNfWVHWz7j+N+ZO2vYrc6PV1q7GQhuahL0IOR7JccFTsFKQ/mb6iZWAg==}
    peerDependencies:
      react: '>=16.8'
    dependencies:
      react: 18.2.0
    dev: false

  /@resvg/resvg-wasm@2.6.0:
    resolution: {integrity: sha512-iDkBM6Ivex8nULtBu8cX670/lfsGxq8U1cuqE+qS9xFpPQP1enPdVm/33Kq3+B+bAldA+AHNZnCgpmlHo/fZrQ==}
    engines: {node: '>= 10'}
    dev: false

  /@rushstack/eslint-patch@1.5.1:
    resolution: {integrity: sha512-6i/8UoL0P5y4leBIGzvkZdS85RDMG9y1ihZzmTZQ5LdHUYmZ7pKFoj8X0236s3lusPs1Fa5HTQUpwI+UfTcmeA==}
    dev: true

  /@shuding/opentype.js@1.4.0-beta.0:
    resolution: {integrity: sha512-3NgmNyH3l/Hv6EvsWJbsvpcpUba6R8IREQ83nH83cyakCw7uM1arZKNfHwv1Wz6jgqrF/j4x5ELvR6PnK9nTcA==}
    engines: {node: '>= 8.0.0'}
    hasBin: true
    dependencies:
      fflate: 0.7.4
      string.prototype.codepointat: 0.2.1
    dev: false

  /@stitches/core@1.2.8:
    resolution: {integrity: sha512-Gfkvwk9o9kE9r9XNBmJRfV8zONvXThnm1tcuojL04Uy5uRyqg93DC83lDebl0rocZCfKSjUv+fWYtMQmEDJldg==}
    dev: false

  /@svgr/babel-plugin-add-jsx-attribute@8.0.0(@babel/core@7.23.2):
    resolution: {integrity: sha512-b9MIk7yhdS1pMCZM8VeNfUlSKVRhsHZNMl5O9SfaX0l0t5wjdgu4IDzGB8bpnGBBOjGST3rRFVsaaEtI4W6f7g==}
    engines: {node: '>=14'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
    dev: true

  /@svgr/babel-plugin-remove-jsx-attribute@8.0.0(@babel/core@7.23.2):
    resolution: {integrity: sha512-BcCkm/STipKvbCl6b7QFrMh/vx00vIP63k2eM66MfHJzPr6O2U0jYEViXkHJWqXqQYjdeA9cuCl5KWmlwjDvbA==}
    engines: {node: '>=14'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
    dev: true

  /@svgr/babel-plugin-remove-jsx-empty-expression@8.0.0(@babel/core@7.23.2):
    resolution: {integrity: sha512-5BcGCBfBxB5+XSDSWnhTThfI9jcO5f0Ai2V24gZpG+wXF14BzwxxdDb4g6trdOux0rhibGs385BeFMSmxtS3uA==}
    engines: {node: '>=14'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
    dev: true

  /@svgr/babel-plugin-replace-jsx-attribute-value@8.0.0(@babel/core@7.23.2):
    resolution: {integrity: sha512-KVQ+PtIjb1BuYT3ht8M5KbzWBhdAjjUPdlMtpuw/VjT8coTrItWX6Qafl9+ji831JaJcu6PJNKCV0bp01lBNzQ==}
    engines: {node: '>=14'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
    dev: true

  /@svgr/babel-plugin-svg-dynamic-title@8.0.0(@babel/core@7.23.2):
    resolution: {integrity: sha512-omNiKqwjNmOQJ2v6ge4SErBbkooV2aAWwaPFs2vUY7p7GhVkzRkJ00kILXQvRhA6miHnNpXv7MRnnSjdRjK8og==}
    engines: {node: '>=14'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
    dev: true

  /@svgr/babel-plugin-svg-em-dimensions@8.0.0(@babel/core@7.23.2):
    resolution: {integrity: sha512-mURHYnu6Iw3UBTbhGwE/vsngtCIbHE43xCRK7kCw4t01xyGqb2Pd+WXekRRoFOBIY29ZoOhUCTEweDMdrjfi9g==}
    engines: {node: '>=14'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
    dev: true

  /@svgr/babel-plugin-transform-react-native-svg@8.1.0(@babel/core@7.23.2):
    resolution: {integrity: sha512-Tx8T58CHo+7nwJ+EhUwx3LfdNSG9R2OKfaIXXs5soiy5HtgoAEkDay9LIimLOcG8dJQH1wPZp/cnAv6S9CrR1Q==}
    engines: {node: '>=14'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
    dev: true

  /@svgr/babel-plugin-transform-svg-component@8.0.0(@babel/core@7.23.2):
    resolution: {integrity: sha512-DFx8xa3cZXTdb/k3kfPeaixecQLgKh5NVBMwD0AQxOzcZawK4oo1Jh9LbrcACUivsCA7TLG8eeWgrDXjTMhRmw==}
    engines: {node: '>=12'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
    dev: true

  /@svgr/babel-preset@8.1.0(@babel/core@7.23.2):
    resolution: {integrity: sha512-7EYDbHE7MxHpv4sxvnVPngw5fuR6pw79SkcrILHJ/iMpuKySNCl5W1qcwPEpU+LgyRXOaAFgH0KhwD18wwg6ug==}
    engines: {node: '>=14'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.23.2
      '@svgr/babel-plugin-add-jsx-attribute': 8.0.0(@babel/core@7.23.2)
      '@svgr/babel-plugin-remove-jsx-attribute': 8.0.0(@babel/core@7.23.2)
      '@svgr/babel-plugin-remove-jsx-empty-expression': 8.0.0(@babel/core@7.23.2)
      '@svgr/babel-plugin-replace-jsx-attribute-value': 8.0.0(@babel/core@7.23.2)
      '@svgr/babel-plugin-svg-dynamic-title': 8.0.0(@babel/core@7.23.2)
      '@svgr/babel-plugin-svg-em-dimensions': 8.0.0(@babel/core@7.23.2)
      '@svgr/babel-plugin-transform-react-native-svg': 8.1.0(@babel/core@7.23.2)
      '@svgr/babel-plugin-transform-svg-component': 8.0.0(@babel/core@7.23.2)
    dev: true

  /@svgr/core@8.1.0(typescript@5.0.2):
    resolution: {integrity: sha512-8QqtOQT5ACVlmsvKOJNEaWmRPmcojMOzCz4Hs2BGG/toAp/K38LcsMRyLp349glq5AzJbCEeimEoxaX6v/fLrA==}
    engines: {node: '>=14'}
    dependencies:
      '@babel/core': 7.23.2
      '@svgr/babel-preset': 8.1.0(@babel/core@7.23.2)
      camelcase: 6.3.0
      cosmiconfig: 8.3.6(typescript@5.0.2)
      snake-case: 3.0.4
    transitivePeerDependencies:
      - supports-color
      - typescript
    dev: true

  /@svgr/hast-util-to-babel-ast@8.0.0:
    resolution: {integrity: sha512-EbDKwO9GpfWP4jN9sGdYwPBU0kdomaPIL2Eu4YwmgP+sJeXT+L7bMwJUBnhzfH8Q2qMBqZ4fJwpCyYsAN3mt2Q==}
    engines: {node: '>=14'}
    dependencies:
      '@babel/types': 7.23.0
      entities: 4.5.0
    dev: true

  /@svgr/plugin-jsx@8.1.0(@svgr/core@8.1.0):
    resolution: {integrity: sha512-0xiIyBsLlr8quN+WyuxooNW9RJ0Dpr8uOnH/xrCVO8GLUcwHISwj1AG0k+LFzteTkAA0GbX0kj9q6Dk70PTiPA==}
    engines: {node: '>=14'}
    peerDependencies:
      '@svgr/core': '*'
    dependencies:
      '@babel/core': 7.23.2
      '@svgr/babel-preset': 8.1.0(@babel/core@7.23.2)
      '@svgr/core': 8.1.0(typescript@5.0.2)
      '@svgr/hast-util-to-babel-ast': 8.0.0
      svg-parser: 2.0.4
    transitivePeerDependencies:
      - supports-color
    dev: true

  /@svgr/plugin-svgo@8.1.0(@svgr/core@8.1.0)(typescript@5.0.2):
    resolution: {integrity: sha512-Ywtl837OGO9pTLIN/onoWLmDQ4zFUycI1g76vuKGEz6evR/ZTJlJuz3G/fIkb6OVBJ2g0o6CGJzaEjfmEo3AHA==}
    engines: {node: '>=14'}
    peerDependencies:
      '@svgr/core': '*'
    dependencies:
      '@svgr/core': 8.1.0(typescript@5.0.2)
      cosmiconfig: 8.3.6(typescript@5.0.2)
      deepmerge: 4.3.1
      svgo: 3.0.2
    transitivePeerDependencies:
      - typescript
    dev: true

  /@svgr/webpack@8.1.0(typescript@5.0.2):
    resolution: {integrity: sha512-LnhVjMWyMQV9ZmeEy26maJk+8HTIbd59cH4F2MJ439k9DqejRisfFNGAPvRYlKETuh9LrImlS8aKsBgKjMA8WA==}
    engines: {node: '>=14'}
    dependencies:
      '@babel/core': 7.23.2
      '@babel/plugin-transform-react-constant-elements': 7.22.5(@babel/core@7.23.2)
      '@babel/preset-env': 7.23.2(@babel/core@7.23.2)
      '@babel/preset-react': 7.22.15(@babel/core@7.23.2)
      '@babel/preset-typescript': 7.23.2(@babel/core@7.23.2)
      '@svgr/core': 8.1.0(typescript@5.0.2)
      '@svgr/plugin-jsx': 8.1.0(@svgr/core@8.1.0)
      '@svgr/plugin-svgo': 8.1.0(@svgr/core@8.1.0)(typescript@5.0.2)
    transitivePeerDependencies:
      - supports-color
      - typescript
    dev: true

  /@swc/helpers@0.5.2:
    resolution: {integrity: sha512-E4KcWTpoLHqwPHLxidpOqQbcrZVgi0rsmmZXUle1jXmJfuIf/UWpczUJ7MZZ5tlxytgJXyp0w4PGkkeLiuIdZw==}
    dependencies:
      tslib: 2.6.2
    dev: false

  /@theguild/remark-mermaid@0.0.5(react@18.2.0):
    resolution: {integrity: sha512-e+ZIyJkEv9jabI4m7q29wZtZv+2iwPGsXJ2d46Zi7e+QcFudiyuqhLhHG/3gX3ZEB+hxTch+fpItyMS8jwbIcw==}
    peerDependencies:
      react: ^18.2.0
    dependencies:
      mermaid: 10.5.1
      react: 18.2.0
      unist-util-visit: 5.0.0
    transitivePeerDependencies:
      - supports-color
    dev: false

  /@theguild/remark-npm2yarn@0.2.1:
    resolution: {integrity: sha512-jUTFWwDxtLEFtGZh/TW/w30ySaDJ8atKWH8dq2/IiQF61dPrGfETpl0WxD0VdBfuLOeU14/kop466oBSRO/5CA==}
    dependencies:
      npm-to-yarn: 2.1.0
      unist-util-visit: 5.0.0
    dev: false

  /@trysound/sax@0.2.0:
    resolution: {integrity: sha512-L7z9BgrNEcYyUYtF+HaEfiS5ebkh9jXqbszz7pC0hRBPaatV0XjSD3+eHrpqFemQfgwiFF0QPIarnIihIDn7OA==}
    engines: {node: '>=10.13.0'}
    dev: true

  /@types/acorn@4.0.6:
    resolution: {integrity: sha512-veQTnWP+1D/xbxVrPC3zHnCZRjSrKfhbMUlEA43iMZLu7EsnTtkJklIuwrCPbOi8YkvDQAiW05VQQFvvz9oieQ==}
    dependencies:
      '@types/estree': 1.0.3
    dev: false

  /@types/d3-scale-chromatic@3.0.1:
    resolution: {integrity: sha512-Ob7OrwiTeQXY/WBBbRHGZBOn6rH1h7y3jjpTSKYqDEeqFjktql6k2XSgNwLrLDmAsXhEn8P9NHDY4VTuo0ZY1w==}
    dev: false

  /@types/d3-scale@4.0.6:
    resolution: {integrity: sha512-lo3oMLSiqsQUovv8j15X4BNEDOsnHuGjeVg7GRbAuB2PUa1prK5BNSOu6xixgNf3nqxPl4I1BqJWrPvFGlQoGQ==}
    dependencies:
      '@types/d3-time': 3.0.2
    dev: false

  /@types/d3-time@3.0.2:
    resolution: {integrity: sha512-kbdRXTmUgNfw5OTE3KZnFQn6XdIc4QGroN5UixgdrXATmYsdlPQS6pEut9tVlIojtzuFD4txs/L+Rq41AHtLpg==}
    dev: false

  /@types/debug@4.1.10:
    resolution: {integrity: sha512-tOSCru6s732pofZ+sMv9o4o3Zc+Sa8l3bxd/tweTQudFn06vAzb13ZX46Zi6m6EJ+RUbRTHvgQJ1gBtSgkaUYA==}
    dependencies:
      '@types/ms': 0.7.33
    dev: false

  /@types/estree-jsx@1.0.2:
    resolution: {integrity: sha512-GNBWlGBMjiiiL5TSkvPtOteuXsiVitw5MYGY1UYlrAq0SKyczsls6sCD7TZ8fsjRsvCVxml7EbyjJezPb3DrSA==}
    dependencies:
      '@types/estree': 1.0.3
    dev: false

  /@types/estree@1.0.3:
    resolution: {integrity: sha512-CS2rOaoQ/eAgAfcTfq6amKG7bsN+EMcgGY4FAFQdvSj2y1ixvOZTUA9mOtCai7E1SYu283XNw7urKK30nP3wkQ==}
    dev: false

  /@types/hast@2.3.7:
    resolution: {integrity: sha512-EVLigw5zInURhzfXUM65eixfadfsHKomGKUakToXo84t8gGIJuTcD2xooM2See7GyQ7DRtYjhCHnSUQez8JaLw==}
    dependencies:
      '@types/unist': 2.0.9
    dev: false

  /@types/hast@3.0.2:
    resolution: {integrity: sha512-B5hZHgHsXvfCoO3xgNJvBnX7N8p86TqQeGKXcokW4XXi+qY4vxxPSFYofytvVmpFxzPv7oxDQzjg5Un5m2/xiw==}
    dependencies:
      '@types/unist': 3.0.1
    dev: false

  /@types/js-yaml@4.0.8:
    resolution: {integrity: sha512-m6jnPk1VhlYRiLFm3f8X9Uep761f+CK8mHyS65LutH2OhmBF0BeMEjHgg05usH8PLZMWWc/BUR9RPmkvpWnyRA==}
    dev: false

  /@types/json5@0.0.29:
    resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}
    dev: true

  /@types/katex@0.16.5:
    resolution: {integrity: sha512-DD2Y3xMlTQvAnN6d8803xdgnOeYZ+HwMglb7/9YCf49J9RkJL53azf9qKa40MkEYhqVwxZ1GS2+VlShnz4Z1Bw==}
    dev: false

  /@types/mdast@3.0.14:
    resolution: {integrity: sha512-gVZ04PGgw1qLZKsnWnyFv4ORnaJ+DXLdHTVSFbU8yX6xZ34Bjg4Q32yPkmveUP1yItXReKfB0Aknlh/3zxTKAw==}
    dependencies:
      '@types/unist': 2.0.9
    dev: false

  /@types/mdast@4.0.2:
    resolution: {integrity: sha512-tYR83EignvhYO9iU3kDg8V28M0jqyh9zzp5GV+EO+AYnyUl3P5ltkTeJuTiFZQFz670FSb3EwT/6LQdX+UdKfw==}
    dependencies:
      '@types/unist': 3.0.1
    dev: false

  /@types/mdx@2.0.9:
    resolution: {integrity: sha512-OKMdj17y8Cs+k1r0XFyp59ChSOwf8ODGtMQ4mnpfz5eFDk1aO41yN3pSKGuvVzmWAkFp37seubY1tzOVpwfWwg==}
    dev: false

  /@types/ms@0.7.33:
    resolution: {integrity: sha512-AuHIyzR5Hea7ij0P9q7vx7xu4z0C28ucwjAZC0ja7JhINyCnOw8/DnvAPQQ9TfOlCtZAmCERKQX9+o1mgQhuOQ==}
    dev: false

  /@types/node@20.0.0:
    resolution: {integrity: sha512-cD2uPTDnQQCVpmRefonO98/PPijuOnnEy5oytWJFPY1N9aJCz2wJ5kSGWO+zJoed2cY2JxQh6yBuUq4vIn61hw==}
    dev: true

  /@types/prop-types@15.7.9:
    resolution: {integrity: sha512-n1yyPsugYNSmHgxDFjicaI2+gCNjsBck8UX9kuofAKlc0h1bL+20oSF72KeNaW2DUlesbEVCFgyV2dPGTiY42g==}

  /@types/react-dom@18.0.0:
    resolution: {integrity: sha512-49897Y0UiCGmxZqpC8Blrf6meL8QUla6eb+BBhn69dTXlmuOlzkfr7HHY/O8J25e1lTUMs+YYxSlVDAaGHCOLg==}
    dependencies:
      '@types/react': 18.0.0

  /@types/react@18.0.0:
    resolution: {integrity: sha512-7+K7zEQYu7NzOwQGLR91KwWXXDzmTFODRVizJyIALf6RfLv2GDpqpknX64pvRVILXCpXi7O/pua8NGk44dLvJw==}
    dependencies:
      '@types/prop-types': 15.7.9
      '@types/scheduler': 0.16.5
      csstype: 3.1.2

  /@types/scheduler@0.16.5:
    resolution: {integrity: sha512-s/FPdYRmZR8SjLWGMCuax7r3qCWQw9QKHzXVukAuuIJkXkDRwp+Pu5LMIVFi0Fxbav35WURicYr8u1QsoybnQw==}

  /@types/unist@2.0.9:
    resolution: {integrity: sha512-zC0iXxAv1C1ERURduJueYzkzZ2zaGyc+P2c95hgkikHPr3z8EdUZOlgEQ5X0DRmwDZn+hekycQnoeiiRVrmilQ==}
    dev: false

  /@types/unist@3.0.1:
    resolution: {integrity: sha512-ue/hDUpPjC85m+PM9OQDMZr3LywT+CT6mPsQq8OJtCLiERkGRcQUFvu9XASF5XWqyZFXbf15lvb3JFJ4dRLWPg==}
    dev: false

  /@typescript-eslint/parser@6.8.0(eslint@8.0.0)(typescript@5.0.2):
    resolution: {integrity: sha512-5tNs6Bw0j6BdWuP8Fx+VH4G9fEPDxnVI7yH1IAPkQH5RUtvKwRoqdecAPdQXv4rSOADAaz1LFBZvZG7VbXivSg==}
    engines: {node: ^16.0.0 || >=18.0.0}
    peerDependencies:
      eslint: ^7.0.0 || ^8.0.0
      typescript: '*'
    peerDependenciesMeta:
      typescript:
        optional: true
    dependencies:
      '@typescript-eslint/scope-manager': 6.8.0
      '@typescript-eslint/types': 6.8.0
      '@typescript-eslint/typescript-estree': 6.8.0(typescript@5.0.2)
      '@typescript-eslint/visitor-keys': 6.8.0
      debug: 4.3.4
      eslint: 8.0.0
      typescript: 5.0.2
    transitivePeerDependencies:
      - supports-color
    dev: true

  /@typescript-eslint/scope-manager@6.8.0:
    resolution: {integrity: sha512-xe0HNBVwCph7rak+ZHcFD6A+q50SMsFwcmfdjs9Kz4qDh5hWhaPhFjRs/SODEhroBI5Ruyvyz9LfwUJ624O40g==}
    engines: {node: ^16.0.0 || >=18.0.0}
    dependencies:
      '@typescript-eslint/types': 6.8.0
      '@typescript-eslint/visitor-keys': 6.8.0
    dev: true

  /@typescript-eslint/types@6.8.0:
    resolution: {integrity: sha512-p5qOxSum7W3k+llc7owEStXlGmSl8FcGvhYt8Vjy7FqEnmkCVlM3P57XQEGj58oqaBWDQXbJDZxwUWMS/EAPNQ==}
    engines: {node: ^16.0.0 || >=18.0.0}
    dev: true

  /@typescript-eslint/typescript-estree@6.8.0(typescript@5.0.2):
    resolution: {integrity: sha512-ISgV0lQ8XgW+mvv5My/+iTUdRmGspducmQcDw5JxznasXNnZn3SKNrTRuMsEXv+V/O+Lw9AGcQCfVaOPCAk/Zg==}
    engines: {node: ^16.0.0 || >=18.0.0}
    peerDependencies:
      typescript: '*'
    peerDependenciesMeta:
      typescript:
        optional: true
    dependencies:
      '@typescript-eslint/types': 6.8.0
      '@typescript-eslint/visitor-keys': 6.8.0
      debug: 4.3.4
      globby: 11.1.0
      is-glob: 4.0.3
      semver: 7.5.4
      ts-api-utils: 1.0.3(typescript@5.0.2)
      typescript: 5.0.2
    transitivePeerDependencies:
      - supports-color
    dev: true

  /@typescript-eslint/visitor-keys@6.8.0:
    resolution: {integrity: sha512-oqAnbA7c+pgOhW2OhGvxm0t1BULX5peQI/rLsNDpGM78EebV3C9IGbX5HNZabuZ6UQrYveCLjKo8Iy/lLlBkkg==}
    engines: {node: ^16.0.0 || >=18.0.0}
    dependencies:
      '@typescript-eslint/types': 6.8.0
      eslint-visitor-keys: 3.4.3
    dev: true

  /@ungap/structured-clone@1.2.0:
    resolution: {integrity: sha512-zuVdFrMJiuCDQUMCzQaD6KL28MjnqqN8XnAqiEq9PNm/hCPTSGfrXCOfwj1ow4LFb/tNymJPwsNbVePc1xFqrQ==}
    dev: false

  /@vercel/og@0.5.20:
    resolution: {integrity: sha512-zi+ZXSx/peXA+1lq7s/5Vzmm/TTfTSf/5P1qNYnh42+7X+pZmahWoXt0i7SWiq3WagfsNUNA4hUDapDiHRoXqA==}
    engines: {node: '>=16'}
    dependencies:
      '@resvg/resvg-wasm': 2.6.0
      satori: 0.10.9
      yoga-wasm-web: 0.3.3
    dev: false

  /acorn-jsx@5.3.2(acorn@8.10.0):
    resolution: {integrity: sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==}
    peerDependencies:
      acorn: ^6.0.0 || ^7.0.0 || ^8.0.0
    dependencies:
      acorn: 8.10.0

  /acorn@8.10.0:
    resolution: {integrity: sha512-F0SAmZ8iUtS//m8DmCTA0jlh6TDKkHQyK6xc6V4KDTyZKA9dnvX9/3sRTVQrWm79glUAZbnmmNcdYwUIHWVybw==}
    engines: {node: '>=0.4.0'}
    hasBin: true

  /ajv@6.12.6:
    resolution: {integrity: sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==}
    dependencies:
      fast-deep-equal: 3.1.3
      fast-json-stable-stringify: 2.1.0
      json-schema-traverse: 0.4.1
      uri-js: 4.4.1
    dev: true

  /anser@2.1.1:
    resolution: {integrity: sha512-nqLm4HxOTpeLOxcmB3QWmV5TcDFhW9y/fyQ+hivtDFcK4OQ+pQ5fzPnXHM1Mfcm0VkLtvVi1TCPr++Qy0Q/3EQ==}
    dev: false

  /ansi-colors@4.1.3:
    resolution: {integrity: sha512-/6w/C21Pm1A7aZitlI5Ni/2J6FFQN8i1Cvz3kHABAAbw93v/NlvKdVOqz7CCWz/3iv/JplRSEEZ83XION15ovw==}
    engines: {node: '>=6'}
    dev: true

  /ansi-regex@5.0.1:
    resolution: {integrity: sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==}
    engines: {node: '>=8'}
    dev: true

  /ansi-sequence-parser@1.1.1:
    resolution: {integrity: sha512-vJXt3yiaUL4UU546s3rPXlsry/RnM730G1+HkpKE012AN0sx1eOrxSu95oKDIonskeLTijMgqWZ3uDEe3NFvyg==}
    dev: false

  /ansi-styles@3.2.1:
    resolution: {integrity: sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==}
    engines: {node: '>=4'}
    dependencies:
      color-convert: 1.9.3

  /ansi-styles@4.3.0:
    resolution: {integrity: sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==}
    engines: {node: '>=8'}
    dependencies:
      color-convert: 2.0.1
    dev: true

  /any-promise@1.3.0:
    resolution: {integrity: sha512-7UvmKalWRt1wgjL1RrGxoSJW/0QZFIegpeGvZG9kjp8vrRu55XTHbwnqq2GpXm9uLbcuhxm3IqX9OB4MZR1b2A==}

  /anymatch@3.1.3:
    resolution: {integrity: sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==}
    engines: {node: '>= 8'}
    dependencies:
      normalize-path: 3.0.0
      picomatch: 2.3.1

  /arch@2.2.0:
    resolution: {integrity: sha512-Of/R0wqp83cgHozfIYLbBMnej79U/SVGOOyuB3VVFv1NRM/PSFMK12x9KVtiYzJqmnU5WR2qp0Z5rHb7sWGnFQ==}
    dev: false

  /arg@1.0.0:
    resolution: {integrity: sha512-Wk7TEzl1KqvTGs/uyhmHO/3XLd3t1UeU4IstvPXVzGPM522cTjqjNZ99esCkcL52sjqjo8e8CTBcWhkxvGzoAw==}
    dev: false

  /arg@5.0.2:
    resolution: {integrity: sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg==}

  /argparse@1.0.10:
    resolution: {integrity: sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==}
    dependencies:
      sprintf-js: 1.0.3
    dev: false

  /argparse@2.0.1:
    resolution: {integrity: sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==}

  /aria-query@5.3.0:
    resolution: {integrity: sha512-b0P0sZPKtyu8HkeRAfCq0IfURZK+SuwMjY1UXGBU27wpAiTwQAIlq56IbIO+ytk/JjS1fMR14ee5WBBfKi5J6A==}
    dependencies:
      dequal: 2.0.3
    dev: true

  /array-buffer-byte-length@1.0.0:
    resolution: {integrity: sha512-LPuwb2P+NrQw3XhxGc36+XSvuBPopovXYTR9Ew++Du9Yb/bx5AzBfrIsBoj0EZUifjQU+sHL21sseZ3jerWO/A==}
    dependencies:
      call-bind: 1.0.5
      is-array-buffer: 3.0.2
    dev: true

  /array-includes@3.1.7:
    resolution: {integrity: sha512-dlcsNBIiWhPkHdOEEKnehA+RNUWDc4UqFtnIXU4uuYDPtA4LDkr7qip2p0VvFAEXNDr0yWZ9PJyIRiGjRLQzwQ==}
    engines: {node: '>= 0.4'}
    dependencies:
      call-bind: 1.0.5
      define-properties: 1.2.1
      es-abstract: 1.22.3
      get-intrinsic: 1.2.2
      is-string: 1.0.7
    dev: true

  /array-union@2.1.0:
    resolution: {integrity: sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==}
    engines: {node: '>=8'}
    dev: true

  /array.prototype.findlastindex@1.2.3:
    resolution: {integrity: sha512-LzLoiOMAxvy+Gd3BAq3B7VeIgPdo+Q8hthvKtXybMvRV0jrXfJM/t8mw7nNlpEcVlVUnCnM2KSX4XU5HmpodOA==}
    engines: {node: '>= 0.4'}
    dependencies:
      call-bind: 1.0.5
      define-properties: 1.2.1
      es-abstract: 1.22.3
      es-shim-unscopables: 1.0.2
      get-intrinsic: 1.2.2
    dev: true

  /array.prototype.flat@1.3.2:
    resolution: {integrity: sha512-djYB+Zx2vLewY8RWlNCUdHjDXs2XOgm602S9E7P/UpHgfeHL00cRiIF+IN/G/aUJ7kGPb6yO/ErDI5V2s8iycA==}
    engines: {node: '>= 0.4'}
    dependencies:
      call-bind: 1.0.5
      define-properties: 1.2.1
      es-abstract: 1.22.3
      es-shim-unscopables: 1.0.2
    dev: true

  /array.prototype.flatmap@1.3.2:
    resolution: {integrity: sha512-Ewyx0c9PmpcsByhSW4r+9zDU7sGjFc86qf/kKtuSCRdhfbk0SNLLkaT5qvcHnRGgc5NP/ly/y+qkXkqONX54CQ==}
    engines: {node: '>= 0.4'}
    dependencies:
      call-bind: 1.0.5
      define-properties: 1.2.1
      es-abstract: 1.22.3
      es-shim-unscopables: 1.0.2
    dev: true

  /array.prototype.tosorted@1.1.2:
    resolution: {integrity: sha512-HuQCHOlk1Weat5jzStICBCd83NxiIMwqDg/dHEsoefabn/hJRj5pVdWcPUSpRrwhwxZOsQassMpgN/xRYFBMIg==}
    dependencies:
      call-bind: 1.0.5
      define-properties: 1.2.1
      es-abstract: 1.22.3
      es-shim-unscopables: 1.0.2
      get-intrinsic: 1.2.2
    dev: true

  /arraybuffer.prototype.slice@1.0.2:
    resolution: {integrity: sha512-yMBKppFur/fbHu9/6USUe03bZ4knMYiwFBcyiaXB8Go0qNehwX6inYPzK9U0NeQvGxKthcmHcaR8P5MStSRBAw==}
    engines: {node: '>= 0.4'}
    dependencies:
      array-buffer-byte-length: 1.0.0
      call-bind: 1.0.5
      define-properties: 1.2.1
      es-abstract: 1.22.3
      get-intrinsic: 1.2.2
      is-array-buffer: 3.0.2
      is-shared-array-buffer: 1.0.2
    dev: true

  /ast-types-flow@0.0.7:
    resolution: {integrity: sha512-eBvWn1lvIApYMhzQMsu9ciLfkBY499mFZlNqG+/9WR7PVlroQw0vG30cOQQbaKz3sCEc44TAOu2ykzqXSNnwag==}
    dev: true

  /astring@1.8.6:
    resolution: {integrity: sha512-ISvCdHdlTDlH5IpxQJIex7BWBywFWgjJSVdwst+/iQCoEYnyOaQ95+X1JGshuBjGp6nxKUy1jMgE3zPqN7fQdg==}
    hasBin: true
    dev: false

  /asynciterator.prototype@1.0.0:
    resolution: {integrity: sha512-wwHYEIS0Q80f5mosx3L/dfG5t5rjEa9Ft51GTaNt862EnpyGHpgz2RkZvLPp1oF5TnAiTohkEKVEu8pQPJI7Vg==}
    dependencies:
      has-symbols: 1.0.3
    dev: true

  /autoprefixer@10.4.16(postcss@8.4.31):
    resolution: {integrity: sha512-7vd3UC6xKp0HLfua5IjZlcXvGAGy7cBAXTg2lyQ/8WpNhd6SiZ8Be+xm3FyBSYJx5GKcpRCzBh7RH4/0dnY+uQ==}
    engines: {node: ^10 || ^12 || >=14}
    hasBin: true
    peerDependencies:
      postcss: ^8.1.0
    dependencies:
      browserslist: 4.22.1
      caniuse-lite: 1.0.30001553
      fraction.js: 4.3.7
      normalize-range: 0.1.2
      picocolors: 1.0.0
      postcss: 8.4.31
      postcss-value-parser: 4.2.0
    dev: true

  /available-typed-arrays@1.0.5:
    resolution: {integrity: sha512-DMD0KiN46eipeziST1LPP/STfDU0sufISXmjSgvVsoU2tqxctQeASejWcfNtxYKqETM1UxQ8sp2OrSBWpHY6sw==}
    engines: {node: '>= 0.4'}
    dev: true

  /axe-core@4.8.2:
    resolution: {integrity: sha512-/dlp0fxyM3R8YW7MFzaHWXrf4zzbr0vaYb23VBFCl83R7nWNPg/yaQw2Dc8jzCMmDVLhSdzH8MjrsuIUuvX+6g==}
    engines: {node: '>=4'}
    dev: true

  /axobject-query@3.2.1:
    resolution: {integrity: sha512-jsyHu61e6N4Vbz/v18DHwWYKK0bSWLqn47eeDSKPB7m8tqMHF9YJ+mhIk2lVteyZrY8tnSj/jHOv4YiTCuCJgg==}
    dependencies:
      dequal: 2.0.3
    dev: true

  /babel-plugin-polyfill-corejs2@0.4.6(@babel/core@7.23.2):
    resolution: {integrity: sha512-jhHiWVZIlnPbEUKSSNb9YoWcQGdlTLq7z1GHL4AjFxaoOUMuuEVJ+Y4pAaQUGOGk93YsVCKPbqbfw3m0SM6H8Q==}
    peerDependencies:
      '@babel/core': ^7.4.0 || ^8.0.0-0 <8.0.0
    dependencies:
      '@babel/compat-data': 7.23.2
      '@babel/core': 7.23.2
      '@babel/helper-define-polyfill-provider': 0.4.3(@babel/core@7.23.2)
      semver: 6.3.1
    transitivePeerDependencies:
      - supports-color
    dev: true

  /babel-plugin-polyfill-corejs3@0.8.5(@babel/core@7.23.2):
    resolution: {integrity: sha512-Q6CdATeAvbScWPNLB8lzSO7fgUVBkQt6zLgNlfyeCr/EQaEQR+bWiBYYPYAFyE528BMjRhL+1QBMOI4jc/c5TA==}
    peerDependencies:
      '@babel/core': ^7.4.0 || ^8.0.0-0 <8.0.0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-define-polyfill-provider': 0.4.3(@babel/core@7.23.2)
      core-js-compat: 3.33.1
    transitivePeerDependencies:
      - supports-color
    dev: true

  /babel-plugin-polyfill-regenerator@0.5.3(@babel/core@7.23.2):
    resolution: {integrity: sha512-8sHeDOmXC8csczMrYEOf0UTNa4yE2SxV5JGeT/LP1n0OYVDUUFPxG9vdk2AlDlIit4t+Kf0xCtpgXPBwnn/9pw==}
    peerDependencies:
      '@babel/core': ^7.4.0 || ^8.0.0-0 <8.0.0
    dependencies:
      '@babel/core': 7.23.2
      '@babel/helper-define-polyfill-provider': 0.4.3(@babel/core@7.23.2)
    transitivePeerDependencies:
      - supports-color
    dev: true

  /bail@2.0.2:
    resolution: {integrity: sha512-0xO6mYd7JB2YesxDKplafRpsiOzPt9V02ddPCLbY1xYGPOX24NTyN50qnUxgCPcSoYMhKpAuBTjQoRZCAkUDRw==}
    dev: false

  /balanced-match@1.0.2:
    resolution: {integrity: sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==}

  /base64-js@0.0.8:
    resolution: {integrity: sha512-3XSA2cR/h/73EzlXXdU6YNycmYI7+kicTxks4eJg2g39biHR84slg2+des+p7iHYhbRg/udIS4TD53WabcOUkw==}
    engines: {node: '>= 0.4'}
    dev: false

  /base64-js@1.5.1:
    resolution: {integrity: sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==}
    dev: false

  /big-integer@1.6.51:
    resolution: {integrity: sha512-GPEid2Y9QU1Exl1rpO9B2IPJGHPSupF5GnVIP0blYvNOMer2bTvSWs1jGOUg04hTmu67nmLsQ9TBo1puaotBHg==}
    engines: {node: '>=0.6'}
    dev: true

  /binary-extensions@2.2.0:
    resolution: {integrity: sha512-jDctJ/IVQbZoJykoeHbhXpOlNBqGNcwXJKJog42E5HDPUwQTSdjCHdihjj0DlnheQ7blbT6dHOafNAiS8ooQKA==}
    engines: {node: '>=8'}

  /boolbase@1.0.0:
    resolution: {integrity: sha512-JZOSA7Mo9sNGB8+UjSgzdLtokWAky1zbztM3WRLCbZ70/3cTANmQmOdR7y2g+J0e2WXywy1yS468tY+IruqEww==}
    dev: true

  /bplist-parser@0.2.0:
    resolution: {integrity: sha512-z0M+byMThzQmD9NILRniCUXYsYpjwnlO8N5uCFaCqIOpqRsJCrQL9NK3JsD67CN5a08nF5oIL2bD6loTdHOuKw==}
    engines: {node: '>= 5.10.0'}
    dependencies:
      big-integer: 1.6.51
    dev: true

  /brace-expansion@1.1.11:
    resolution: {integrity: sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==}
    dependencies:
      balanced-match: 1.0.2
      concat-map: 0.0.1

  /braces@3.0.2:
    resolution: {integrity: sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==}
    engines: {node: '>=8'}
    dependencies:
      fill-range: 7.0.1

  /browserslist@4.22.1:
    resolution: {integrity: sha512-FEVc202+2iuClEhZhrWy6ZiAcRLvNMyYcxZ8raemul1DYVOVdFsbqckWLdsixQZCpJlwe77Z3UTalE7jsjnKfQ==}
    engines: {node: ^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7}
    hasBin: true
    dependencies:
      caniuse-lite: 1.0.30001553
      electron-to-chromium: 1.4.563
      node-releases: 2.0.13
      update-browserslist-db: 1.0.13(browserslist@4.22.1)

  /buffer@6.0.3:
    resolution: {integrity: sha512-FTiCpNxtwiZZHEZbcbTIcZjERVICn9yq/pDFkTl95/AxzD1naBctN7YO68riM/gLSDY7sdrMby8hofADYuuqOA==}
    dependencies:
      base64-js: 1.5.1
      ieee754: 1.2.1
    dev: false

  /bundle-name@3.0.0:
    resolution: {integrity: sha512-PKA4BeSvBpQKQ8iPOGCSiell+N8P+Tf1DlwqmYhpe2gAhKPHn8EYOxVT+ShuGmhg8lN8XiSlS80yiExKXrURlw==}
    engines: {node: '>=12'}
    dependencies:
      run-applescript: 5.0.0
    dev: true

  /busboy@1.6.0:
    resolution: {integrity: sha512-8SFQbg/0hQ9xy3UNTB0YEnsNBbWfhf7RtnzpL7TkBiTBRfrQ9Fxcnz7VJsleJpyp6rVLvXiuORqjlHi5q+PYuA==}
    engines: {node: '>=10.16.0'}
    dependencies:
      streamsearch: 1.1.0
    dev: false

  /call-bind@1.0.5:
    resolution: {integrity: sha512-C3nQxfFZxFRVoJoGKKI8y3MOEo129NQ+FgQ08iye+Mk4zNZZGdjfs06bVTr+DBSlA66Q2VEcMki/cUCP4SercQ==}
    dependencies:
      function-bind: 1.1.2
      get-intrinsic: 1.2.2
      set-function-length: 1.1.1
    dev: true

  /callsites@3.1.0:
    resolution: {integrity: sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==}
    engines: {node: '>=6'}
    dev: true

  /camelcase-css@2.0.1:
    resolution: {integrity: sha512-QOSvevhslijgYwRx6Rv7zKdMF8lbRmx+uQGx2+vDc+KI/eBnsy9kit5aj23AgGu3pa4t9AgwbnXWqS+iOY+2aA==}
    engines: {node: '>= 6'}

  /camelcase@6.3.0:
    resolution: {integrity: sha512-Gmy6FhYlCY7uOElZUSbxo2UCDH8owEk996gkbrpsgGtrJLM3J7jGxl9Ic7Qwwj4ivOE5AWZWRMecDdF7hqGjFA==}
    engines: {node: '>=10'}
    dev: true

  /camelize@1.0.1:
    resolution: {integrity: sha512-dU+Tx2fsypxTgtLoE36npi3UqcjSSMNYfkqgmoEhtZrraP5VWq0K7FkWVTYa8eMPtnU/G2txVsfdCJTn9uzpuQ==}
    dev: false

  /caniuse-lite@1.0.30001553:
    resolution: {integrity: sha512-N0ttd6TrFfuqKNi+pMgWJTb9qrdJu4JSpgPFLe/lrD19ugC6fZgF0pUewRowDwzdDnb9V41mFcdlYgl/PyKf4A==}

  /caniuse-lite@1.0.30001599:
    resolution: {integrity: sha512-LRAQHZ4yT1+f9LemSMeqdMpMxZcc4RMWdj4tiFe3G8tNkWK+E58g+/tzotb5cU6TbcVJLr4fySiAW7XmxQvZQA==}
    dev: false

  /ccount@2.0.1:
    resolution: {integrity: sha512-eyrF0jiFpY+3drT6383f1qhkbGsLSifNAjA61IUjZjmLCWjItY6LB9ft9YhoDgwfmclB2zhu51Lc7+95b8NRAg==}
    dev: false

  /chalk@2.3.0:
    resolution: {integrity: sha512-Az5zJR2CBujap2rqXGaJKaPHyJ0IrUimvYNX+ncCy8PJP4ltOGTrHUIo097ZaL2zMeKYpiCdqDvS6zdrTFok3Q==}
    engines: {node: '>=4'}
    dependencies:
      ansi-styles: 3.2.1
      escape-string-regexp: 1.0.5
      supports-color: 4.5.0
    dev: false

  /chalk@2.4.2:
    resolution: {integrity: sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==}
    engines: {node: '>=4'}
    dependencies:
      ansi-styles: 3.2.1
      escape-string-regexp: 1.0.5
      supports-color: 5.5.0

  /chalk@4.1.2:
    resolution: {integrity: sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==}
    engines: {node: '>=10'}
    dependencies:
      ansi-styles: 4.3.0
      supports-color: 7.2.0
    dev: true

  /character-entities-html4@2.1.0:
    resolution: {integrity: sha512-1v7fgQRj6hnSwFpq1Eu0ynr/CDEw0rXo2B61qXrLNdHZmPKgb7fqS1a2JwF0rISo9q77jDI8VMEHoApn8qDoZA==}
    dev: false

  /character-entities-legacy@3.0.0:
    resolution: {integrity: sha512-RpPp0asT/6ufRm//AJVwpViZbGM/MkjQFxJccQRHmISF/22NBtsHqAWmL+/pmkPWoIUJdWyeVleTl1wydHATVQ==}
    dev: false

  /character-entities@2.0.2:
    resolution: {integrity: sha512-shx7oQ0Awen/BRIdkjkvz54PnEEI/EjwXDSIZp86/KKdbafHh1Df/RYGBhn4hbe2+uKC9FnT5UCEdyPz3ai9hQ==}
    dev: false

  /character-reference-invalid@2.0.1:
    resolution: {integrity: sha512-iBZ4F4wRbyORVsu0jPV7gXkOsGYjGHPmAyv+HiHG8gi5PtC9KI2j1+v8/tlibRvjoWX027ypmG/n0HtO5t7unw==}
    dev: false

  /chokidar@3.5.3:
    resolution: {integrity: sha512-Dr3sfKRP6oTcjf2JmUmFJfeVMvXBdegxB0iVQ5eb2V10uFJUCAS8OByZdVAyVb8xXNz3GjjTgj9kLWsZTqE6kw==}
    engines: {node: '>= 8.10.0'}
    dependencies:
      anymatch: 3.1.3
      braces: 3.0.2
      glob-parent: 5.1.2
      is-binary-path: 2.1.0
      is-glob: 4.0.3
      normalize-path: 3.0.0
      readdirp: 3.6.0
    optionalDependencies:
      fsevents: 2.3.3

  /clean-set@1.1.2:
    resolution: {integrity: sha512-cA8uCj0qSoG9e0kevyOWXwPaELRPVg5Pxp6WskLMwerx257Zfnh8Nl0JBH59d7wQzij2CK7qEfJQK3RjuKKIug==}
    dev: false

  /client-only@0.0.1:
    resolution: {integrity: sha512-IV3Ou0jSMzZrd3pZ48nLkT9DA7Ag1pnPzaiQhpW7c3RbcqqzvzzVu+L8gfqMp/8IM2MQtSiqaCxrrcfu8I8rMA==}
    dev: false

  /clipboardy@1.2.2:
    resolution: {integrity: sha512-16KrBOV7bHmHdxcQiCvfUFYVFyEah4FI8vYT1Fr7CGSA4G+xBWMEfUEQJS1hxeHGtI9ju1Bzs9uXSbj5HZKArw==}
    engines: {node: '>=4'}
    dependencies:
      arch: 2.2.0
      execa: 0.8.0
    dev: false

  /clsx@2.0.0:
    resolution: {integrity: sha512-rQ1+kcj+ttHG0MKVGBUXwayCCF1oh39BF5COIpRzuCEv8Mwjv0XucrI2ExNTOn9IlLifGClWQcU9BrZORvtw6Q==}
    engines: {node: '>=6'}
    dev: false

  /codesandbox-import-util-types@2.2.3:
    resolution: {integrity: sha512-Qj00p60oNExthP2oR3vvXmUGjukij+rxJGuiaKM6tyUmSyimdZsqHI/TUvFFClAffk9s7hxGnQgWQ8KCce27qQ==}
    dev: false

  /color-convert@1.9.3:
    resolution: {integrity: sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==}
    dependencies:
      color-name: 1.1.3

  /color-convert@2.0.1:
    resolution: {integrity: sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==}
    engines: {node: '>=7.0.0'}
    dependencies:
      color-name: 1.1.4
    dev: true

  /color-name@1.1.3:
    resolution: {integrity: sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==}

  /color-name@1.1.4:
    resolution: {integrity: sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==}

  /colord@2.9.3:
    resolution: {integrity: sha512-jeC1axXpnb0/2nn/Y1LPuLdgXBLH7aDcHu4KEKfqw3CUhX7ZpfBSlPKyqXE6btIgEzfWtrX3/tyBCaCvXvMkOw==}
    dev: false

  /comma-separated-tokens@2.0.3:
    resolution: {integrity: sha512-Fu4hJdvzeylCfQPp9SGWidpzrMs7tTrlu6Vb8XGaRGck8QSNZJJp538Wrb60Lax4fPwR64ViY468OIUTbRlGZg==}
    dev: false

  /commander@4.1.1:
    resolution: {integrity: sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==}
    engines: {node: '>= 6'}

  /commander@7.2.0:
    resolution: {integrity: sha512-QrWXB+ZQSVPmIWIhtEO9H+gwHaMGYiF5ChvoJ+K9ZGHG/sVsa6yiesAD1GC/x46sET00Xlwo1u49RVVVzvcSkw==}
    engines: {node: '>= 10'}

  /commander@8.3.0:
    resolution: {integrity: sha512-OkTL9umf+He2DZkUq8f8J9of7yL6RJKI24dVITBmNfZBmri9zYZQrKkuXiKhyfPSu8tUhnVBB1iKXevvnlR4Ww==}
    engines: {node: '>= 12'}
    dev: false

  /compute-scroll-into-view@3.1.0:
    resolution: {integrity: sha512-rj8l8pD4bJ1nx+dAkMhV1xB5RuZEyVysfxJqB1pRchh1KVvwOv9b7CGB8ZfjTImVv2oF+sYMUkMZq6Na5Ftmbg==}
    dev: false

  /concat-map@0.0.1:
    resolution: {integrity: sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==}

  /convert-source-map@2.0.0:
    resolution: {integrity: sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==}

  /core-js-compat@3.33.1:
    resolution: {integrity: sha512-6pYKNOgD/j/bkC5xS5IIg6bncid3rfrI42oBH1SQJbsmYPKF7rhzcFzYCcxYMmNQQ0rCEB8WqpW7QHndOggaeQ==}
    dependencies:
      browserslist: 4.22.1
    dev: true

  /cose-base@1.0.3:
    resolution: {integrity: sha512-s9whTXInMSgAp/NVXVNuVxVKzGH2qck3aQlVHxDCdAEPgtMKwc4Wq6/QKhgdEdgbLSi9rBTAcPoRa6JpiG4ksg==}
    dependencies:
      layout-base: 1.0.2
    dev: false

  /cose-base@2.2.0:
    resolution: {integrity: sha512-AzlgcsCbUMymkADOJtQm3wO9S3ltPfYOFD5033keQn9NJzIbtnZj+UdBJe7DYml/8TdbtHJW3j58SOnKhWY/5g==}
    dependencies:
      layout-base: 2.0.1
    dev: false

  /cosmiconfig@8.3.6(typescript@5.0.2):
    resolution: {integrity: sha512-kcZ6+W5QzcJ3P1Mt+83OUv/oHFqZHIx8DuxG6eZ5RGMERoLqp4BuGjhHLYGK+Kf5XVkQvqBSmAy/nGWN3qDgEA==}
    engines: {node: '>=14'}
    peerDependencies:
      typescript: '>=4.9.5'
    peerDependenciesMeta:
      typescript:
        optional: true
    dependencies:
      import-fresh: 3.3.0
      js-yaml: 4.1.0
      parse-json: 5.2.0
      path-type: 4.0.0
      typescript: 5.0.2
    dev: true

  /crelt@1.0.6:
    resolution: {integrity: sha512-VQ2MBenTq1fWZUH9DJNGti7kKv6EeAuYr3cLwxUWhIu1baTaXh4Ib5W2CqHVqib4/MqbYGJqiL3Zb8GJZr3l4g==}
    dev: false

  /cross-spawn@5.1.0:
    resolution: {integrity: sha512-pTgQJ5KC0d2hcY8eyL1IzlBPYjTkyH72XRZPnLyKus2mBfNjQs3klqbJU2VILqZryAZUt9JOb3h/mWMy23/f5A==}
    dependencies:
      lru-cache: 4.1.5
      shebang-command: 1.2.0
      which: 1.3.1
    dev: false

  /cross-spawn@7.0.3:
    resolution: {integrity: sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==}
    engines: {node: '>= 8'}
    dependencies:
      path-key: 3.1.1
      shebang-command: 2.0.0
      which: 2.0.2
    dev: true

  /css-background-parser@0.1.0:
    resolution: {integrity: sha512-2EZLisiZQ+7m4wwur/qiYJRniHX4K5Tc9w93MT3AS0WS1u5kaZ4FKXlOTBhOjc+CgEgPiGY+fX1yWD8UwpEqUA==}
    dev: false

  /css-box-shadow@1.0.0-3:
    resolution: {integrity: sha512-9jaqR6e7Ohds+aWwmhe6wILJ99xYQbfmK9QQB9CcMjDbTxPZjwEmUQpU91OG05Xgm8BahT5fW+svbsQGjS/zPg==}
    dev: false

  /css-color-keywords@1.0.0:
    resolution: {integrity: sha512-FyyrDHZKEjXDpNJYvVsV960FiqQyXc/LlYmsxl2BcdMb2WPx0OGRVgTg55rPSyLSNMqP52R9r8geSp7apN3Ofg==}
    engines: {node: '>=4'}
    dev: false

  /css-select@5.1.0:
    resolution: {integrity: sha512-nwoRF1rvRRnnCqqY7updORDsuqKzqYJ28+oSMaJMMgOauh3fvwHqMS7EZpIPqK8GL+g9mKxF1vP/ZjSeNjEVHg==}
    dependencies:
      boolbase: 1.0.0
      css-what: 6.1.0
      domhandler: 5.0.3
      domutils: 3.1.0
      nth-check: 2.1.1
    dev: true

  /css-selector-tokenizer@0.8.0:
    resolution: {integrity: sha512-Jd6Ig3/pe62/qe5SBPTN8h8LeUg/pT4lLgtavPf7updwwHpvFzxvOQBHYj2LZDMjUnBzgvIUSjRcf6oT5HzHFg==}
    dependencies:
      cssesc: 3.0.0
      fastparse: 1.1.2
    dev: false

  /css-to-react-native@3.2.0:
    resolution: {integrity: sha512-e8RKaLXMOFii+02mOlqwjbD00KSEKqblnpO9e++1aXS1fPQOpS1YoqdVHBqPjHNoxeF2mimzVqawm2KCbEdtHQ==}
    dependencies:
      camelize: 1.0.1
      css-color-keywords: 1.0.0
      postcss-value-parser: 4.2.0
    dev: false

  /css-tree@2.2.1:
    resolution: {integrity: sha512-OA0mILzGc1kCOCSJerOeqDxDQ4HOh+G8NbOJFOTgOCzpw7fCBubk0fEyxp8AgOL/jvLgYA/uV0cMbe43ElF1JA==}
    engines: {node: ^10 || ^12.20.0 || ^14.13.0 || >=15.0.0, npm: '>=7.0.0'}
    dependencies:
      mdn-data: 2.0.28
      source-map-js: 1.0.2
    dev: true

  /css-tree@2.3.1:
    resolution: {integrity: sha512-6Fv1DV/TYw//QF5IzQdqsNDjx/wc8TrMBZsqjL9eW01tWb7R7k/mq+/VXfJCl7SoD5emsJop9cOByJZfs8hYIw==}
    engines: {node: ^10 || ^12.20.0 || ^14.13.0 || >=15.0.0}
    dependencies:
      mdn-data: 2.0.30
      source-map-js: 1.0.2
    dev: true

  /css-what@6.1.0:
    resolution: {integrity: sha512-HTUrgRJ7r4dsZKU6GjmpfRK1O76h97Z8MfS1G0FozR+oF2kG6Vfe8JE6zwrkbxigziPHinCJ+gCPjA9EaBDtRw==}
    engines: {node: '>= 6'}
    dev: true

  /cssesc@3.0.0:
    resolution: {integrity: sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==}
    engines: {node: '>=4'}
    hasBin: true

  /csso@5.0.5:
    resolution: {integrity: sha512-0LrrStPOdJj+SPCCrGhzryycLjwcgUSHBtxNA8aIDxf0GLsRh1cKYhB00Gd1lDOS4yGH69+SNn13+TWbVHETFQ==}
    engines: {node: ^10 || ^12.20.0 || ^14.13.0 || >=15.0.0, npm: '>=7.0.0'}
    dependencies:
      css-tree: 2.2.1
    dev: true

  /csstype@3.1.2:
    resolution: {integrity: sha512-I7K1Uu0MBPzaFKg4nI5Q7Vs2t+3gWWW648spaF+Rg7pI9ds18Ugn+lvg4SHczUdKlHI5LWBXyqfS8+DufyBsgQ==}

  /cytoscape-cose-bilkent@4.1.0(cytoscape@3.26.0):
    resolution: {integrity: sha512-wgQlVIUJF13Quxiv5e1gstZ08rnZj2XaLHGoFMYXz7SkNfCDOOteKBE6SYRfA9WxxI/iBc3ajfDoc6hb/MRAHQ==}
    peerDependencies:
      cytoscape: ^3.2.0
    dependencies:
      cose-base: 1.0.3
      cytoscape: 3.26.0
    dev: false

  /cytoscape-fcose@2.2.0(cytoscape@3.26.0):
    resolution: {integrity: sha512-ki1/VuRIHFCzxWNrsshHYPs6L7TvLu3DL+TyIGEsRcvVERmxokbf5Gdk7mFxZnTdiGtnA4cfSmjZJMviqSuZrQ==}
    peerDependencies:
      cytoscape: ^3.2.0
    dependencies:
      cose-base: 2.2.0
      cytoscape: 3.26.0
    dev: false

  /cytoscape@3.26.0:
    resolution: {integrity: sha512-IV+crL+KBcrCnVVUCZW+zRRRFUZQcrtdOPXki+o4CFUWLdAEYvuZLcBSJC9EBK++suamERKzeY7roq2hdovV3w==}
    engines: {node: '>=0.10'}
    dependencies:
      heap: 0.2.7
      lodash: 4.17.21
    dev: false

  /d3-array@2.12.1:
    resolution: {integrity: sha512-B0ErZK/66mHtEsR1TkPEEkwdy+WDesimkM5gpZr5Dsg54BiTA5RXtYW5qTLIAcekaS9xfZrzBLF/OAkB3Qn1YQ==}
    dependencies:
      internmap: 1.0.1
    dev: false

  /d3-array@3.2.4:
    resolution: {integrity: sha512-tdQAmyA18i4J7wprpYq8ClcxZy3SC31QMeByyCFyRt7BVHdREQZ5lpzoe5mFEYZUWe+oq8HBvk9JjpibyEV4Jg==}
    engines: {node: '>=12'}
    dependencies:
      internmap: 2.0.3
    dev: false

  /d3-axis@3.0.0:
    resolution: {integrity: sha512-IH5tgjV4jE/GhHkRV0HiVYPDtvfjHQlQfJHs0usq7M30XcSBvOotpmH1IgkcXsO/5gEQZD43B//fc7SRT5S+xw==}
    engines: {node: '>=12'}
    dev: false

  /d3-brush@3.0.0:
    resolution: {integrity: sha512-ALnjWlVYkXsVIGlOsuWH1+3udkYFI48Ljihfnh8FZPF2QS9o+PzGLBslO0PjzVoHLZ2KCVgAM8NVkXPJB2aNnQ==}
    engines: {node: '>=12'}
    dependencies:
      d3-dispatch: 3.0.1
      d3-drag: 3.0.0
      d3-interpolate: 3.0.1
      d3-selection: 3.0.0
      d3-transition: 3.0.1(d3-selection@3.0.0)
    dev: false

  /d3-chord@3.0.1:
    resolution: {integrity: sha512-VE5S6TNa+j8msksl7HwjxMHDM2yNK3XCkusIlpX5kwauBfXuyLAtNg9jCp/iHH61tgI4sb6R/EIMWCqEIdjT/g==}
    engines: {node: '>=12'}
    dependencies:
      d3-path: 3.1.0
    dev: false

  /d3-color@3.1.0:
    resolution: {integrity: sha512-zg/chbXyeBtMQ1LbD/WSoW2DpC3I0mpmPdW+ynRTj/x2DAWYrIY7qeZIHidozwV24m4iavr15lNwIwLxRmOxhA==}
    engines: {node: '>=12'}
    dev: false

  /d3-contour@4.0.2:
    resolution: {integrity: sha512-4EzFTRIikzs47RGmdxbeUvLWtGedDUNkTcmzoeyg4sP/dvCexO47AaQL7VKy/gul85TOxw+IBgA8US2xwbToNA==}
    engines: {node: '>=12'}
    dependencies:
      d3-array: 3.2.4
    dev: false

  /d3-delaunay@6.0.4:
    resolution: {integrity: sha512-mdjtIZ1XLAM8bm/hx3WwjfHt6Sggek7qH043O8KEjDXN40xi3vx/6pYSVTwLjEgiXQTbvaouWKynLBiUZ6SK6A==}
    engines: {node: '>=12'}
    dependencies:
      delaunator: 5.0.0
    dev: false

  /d3-dispatch@3.0.1:
    resolution: {integrity: sha512-rzUyPU/S7rwUflMyLc1ETDeBj0NRuHKKAcvukozwhshr6g6c5d8zh4c2gQjY2bZ0dXeGLWc1PF174P2tVvKhfg==}
    engines: {node: '>=12'}
    dev: false

  /d3-drag@3.0.0:
    resolution: {integrity: sha512-pWbUJLdETVA8lQNJecMxoXfH6x+mO2UQo8rSmZ+QqxcbyA3hfeprFgIT//HW2nlHChWeIIMwS2Fq+gEARkhTkg==}
    engines: {node: '>=12'}
    dependencies:
      d3-dispatch: 3.0.1
      d3-selection: 3.0.0
    dev: false

  /d3-dsv@3.0.1:
    resolution: {integrity: sha512-UG6OvdI5afDIFP9w4G0mNq50dSOsXHJaRE8arAS5o9ApWnIElp8GZw1Dun8vP8OyHOZ/QJUKUJwxiiCCnUwm+Q==}
    engines: {node: '>=12'}
    hasBin: true
    dependencies:
      commander: 7.2.0
      iconv-lite: 0.6.3
      rw: 1.3.3
    dev: false

  /d3-ease@3.0.1:
    resolution: {integrity: sha512-wR/XK3D3XcLIZwpbvQwQ5fK+8Ykds1ip7A2Txe0yxncXSdq1L9skcG7blcedkOX+ZcgxGAmLX1FrRGbADwzi0w==}
    engines: {node: '>=12'}
    dev: false

  /d3-fetch@3.0.1:
    resolution: {integrity: sha512-kpkQIM20n3oLVBKGg6oHrUchHM3xODkTzjMoj7aWQFq5QEM+R6E4WkzT5+tojDY7yjez8KgCBRoj4aEr99Fdqw==}
    engines: {node: '>=12'}
    dependencies:
      d3-dsv: 3.0.1
    dev: false

  /d3-force@3.0.0:
    resolution: {integrity: sha512-zxV/SsA+U4yte8051P4ECydjD/S+qeYtnaIyAs9tgHCqfguma/aAQDjo85A9Z6EKhBirHRJHXIgJUlffT4wdLg==}
    engines: {node: '>=12'}
    dependencies:
      d3-dispatch: 3.0.1
      d3-quadtree: 3.0.1
      d3-timer: 3.0.1
    dev: false

  /d3-format@3.1.0:
    resolution: {integrity: sha512-YyUI6AEuY/Wpt8KWLgZHsIU86atmikuoOmCfommt0LYHiQSPjvX2AcFc38PX0CBpr2RCyZhjex+NS/LPOv6YqA==}
    engines: {node: '>=12'}
    dev: false

  /d3-geo@3.1.0:
    resolution: {integrity: sha512-JEo5HxXDdDYXCaWdwLRt79y7giK8SbhZJbFWXqbRTolCHFI5jRqteLzCsq51NKbUoX0PjBVSohxrx+NoOUujYA==}
    engines: {node: '>=12'}
    dependencies:
      d3-array: 3.2.4
    dev: false

  /d3-hierarchy@3.1.2:
    resolution: {integrity: sha512-FX/9frcub54beBdugHjDCdikxThEqjnR93Qt7PvQTOHxyiNCAlvMrHhclk3cD5VeAaq9fxmfRp+CnWw9rEMBuA==}
    engines: {node: '>=12'}
    dev: false

  /d3-interpolate@3.0.1:
    resolution: {integrity: sha512-3bYs1rOD33uo8aqJfKP3JWPAibgw8Zm2+L9vBKEHJ2Rg+viTR7o5Mmv5mZcieN+FRYaAOWX5SJATX6k1PWz72g==}
    engines: {node: '>=12'}
    dependencies:
      d3-color: 3.1.0
    dev: false

  /d3-path@1.0.9:
    resolution: {integrity: sha512-VLaYcn81dtHVTjEHd8B+pbe9yHWpXKZUC87PzoFmsFrJqgFwDe/qxfp5MlfsfM1V5E/iVt0MmEbWQ7FVIXh/bg==}
    dev: false

  /d3-path@3.1.0:
    resolution: {integrity: sha512-p3KP5HCf/bvjBSSKuXid6Zqijx7wIfNW+J/maPs+iwR35at5JCbLUT0LzF1cnjbCHWhqzQTIN2Jpe8pRebIEFQ==}
    engines: {node: '>=12'}
    dev: false

  /d3-polygon@3.0.1:
    resolution: {integrity: sha512-3vbA7vXYwfe1SYhED++fPUQlWSYTTGmFmQiany/gdbiWgU/iEyQzyymwL9SkJjFFuCS4902BSzewVGsHHmHtXg==}
    engines: {node: '>=12'}
    dev: false

  /d3-quadtree@3.0.1:
    resolution: {integrity: sha512-04xDrxQTDTCFwP5H6hRhsRcb9xxv2RzkcsygFzmkSIOJy3PeRJP7sNk3VRIbKXcog561P9oU0/rVH6vDROAgUw==}
    engines: {node: '>=12'}
    dev: false

  /d3-random@3.0.1:
    resolution: {integrity: sha512-FXMe9GfxTxqd5D6jFsQ+DJ8BJS4E/fT5mqqdjovykEB2oFbTMDVdg1MGFxfQW+FBOGoB++k8swBrgwSHT1cUXQ==}
    engines: {node: '>=12'}
    dev: false

  /d3-sankey@0.12.3:
    resolution: {integrity: sha512-nQhsBRmM19Ax5xEIPLMY9ZmJ/cDvd1BG3UVvt5h3WRxKg5zGRbvnteTyWAbzeSvlh3tW7ZEmq4VwR5mB3tutmQ==}
    dependencies:
      d3-array: 2.12.1
      d3-shape: 1.3.7
    dev: false

  /d3-scale-chromatic@3.0.0:
    resolution: {integrity: sha512-Lx9thtxAKrO2Pq6OO2Ua474opeziKr279P/TKZsMAhYyNDD3EnCffdbgeSYN5O7m2ByQsxtuP2CSDczNUIZ22g==}
    engines: {node: '>=12'}
    dependencies:
      d3-color: 3.1.0
      d3-interpolate: 3.0.1
    dev: false

  /d3-scale@4.0.2:
    resolution: {integrity: sha512-GZW464g1SH7ag3Y7hXjf8RoUuAFIqklOAq3MRl4OaWabTFJY9PN/E1YklhXLh+OQ3fM9yS2nOkCoS+WLZ6kvxQ==}
    engines: {node: '>=12'}
    dependencies:
      d3-array: 3.2.4
      d3-format: 3.1.0
      d3-interpolate: 3.0.1
      d3-time: 3.1.0
      d3-time-format: 4.1.0
    dev: false

  /d3-selection@3.0.0:
    resolution: {integrity: sha512-fmTRWbNMmsmWq6xJV8D19U/gw/bwrHfNXxrIN+HfZgnzqTHp9jOmKMhsTUjXOJnZOdZY9Q28y4yebKzqDKlxlQ==}
    engines: {node: '>=12'}
    dev: false

  /d3-shape@1.3.7:
    resolution: {integrity: sha512-EUkvKjqPFUAZyOlhY5gzCxCeI0Aep04LwIRpsZ/mLFelJiUfnK56jo5JMDSE7yyP2kLSb6LtF+S5chMk7uqPqw==}
    dependencies:
      d3-path: 1.0.9
    dev: false

  /d3-shape@3.2.0:
    resolution: {integrity: sha512-SaLBuwGm3MOViRq2ABk3eLoxwZELpH6zhl3FbAoJ7Vm1gofKx6El1Ib5z23NUEhF9AsGl7y+dzLe5Cw2AArGTA==}
    engines: {node: '>=12'}
    dependencies:
      d3-path: 3.1.0
    dev: false

  /d3-time-format@4.1.0:
    resolution: {integrity: sha512-dJxPBlzC7NugB2PDLwo9Q8JiTR3M3e4/XANkreKSUxF8vvXKqm1Yfq4Q5dl8budlunRVlUUaDUgFt7eA8D6NLg==}
    engines: {node: '>=12'}
    dependencies:
      d3-time: 3.1.0
    dev: false

  /d3-time@3.1.0:
    resolution: {integrity: sha512-VqKjzBLejbSMT4IgbmVgDjpkYrNWUYJnbCGo874u7MMKIWsILRX+OpX/gTk8MqjpT1A/c6HY2dCA77ZN0lkQ2Q==}
    engines: {node: '>=12'}
    dependencies:
      d3-array: 3.2.4
    dev: false

  /d3-timer@3.0.1:
    resolution: {integrity: sha512-ndfJ/JxxMd3nw31uyKoY2naivF+r29V+Lc0svZxe1JvvIRmi8hUsrMvdOwgS1o6uBHmiz91geQ0ylPP0aj1VUA==}
    engines: {node: '>=12'}
    dev: false

  /d3-transition@3.0.1(d3-selection@3.0.0):
    resolution: {integrity: sha512-ApKvfjsSR6tg06xrL434C0WydLr7JewBB3V+/39RMHsaXTOG0zmt/OAXeng5M5LBm0ojmxJrpomQVZ1aPvBL4w==}
    engines: {node: '>=12'}
    peerDependencies:
      d3-selection: 2 - 3
    dependencies:
      d3-color: 3.1.0
      d3-dispatch: 3.0.1
      d3-ease: 3.0.1
      d3-interpolate: 3.0.1
      d3-selection: 3.0.0
      d3-timer: 3.0.1
    dev: false

  /d3-zoom@3.0.0:
    resolution: {integrity: sha512-b8AmV3kfQaqWAuacbPuNbL6vahnOJflOhexLzMMNLga62+/nh0JzvJ0aO/5a5MVgUFGS7Hu1P9P03o3fJkDCyw==}
    engines: {node: '>=12'}
    dependencies:
      d3-dispatch: 3.0.1
      d3-drag: 3.0.0
      d3-interpolate: 3.0.1
      d3-selection: 3.0.0
      d3-transition: 3.0.1(d3-selection@3.0.0)
    dev: false

  /d3@7.8.5:
    resolution: {integrity: sha512-JgoahDG51ncUfJu6wX/1vWQEqOflgXyl4MaHqlcSruTez7yhaRKR9i8VjjcQGeS2en/jnFivXuaIMnseMMt0XA==}
    engines: {node: '>=12'}
    dependencies:
      d3-array: 3.2.4
      d3-axis: 3.0.0
      d3-brush: 3.0.0
      d3-chord: 3.0.1
      d3-color: 3.1.0
      d3-contour: 4.0.2
      d3-delaunay: 6.0.4
      d3-dispatch: 3.0.1
      d3-drag: 3.0.0
      d3-dsv: 3.0.1
      d3-ease: 3.0.1
      d3-fetch: 3.0.1
      d3-force: 3.0.0
      d3-format: 3.1.0
      d3-geo: 3.1.0
      d3-hierarchy: 3.1.2
      d3-interpolate: 3.0.1
      d3-path: 3.1.0
      d3-polygon: 3.0.1
      d3-quadtree: 3.0.1
      d3-random: 3.0.1
      d3-scale: 4.0.2
      d3-scale-chromatic: 3.0.0
      d3-selection: 3.0.0
      d3-shape: 3.2.0
      d3-time: 3.1.0
      d3-time-format: 4.1.0
      d3-timer: 3.0.1
      d3-transition: 3.0.1(d3-selection@3.0.0)
      d3-zoom: 3.0.0
    dev: false

  /d@1.0.1:
    resolution: {integrity: sha512-m62ShEObQ39CfralilEQRjH6oAMtNCV1xJyEx5LpRYUVN+EviphDgUc/F3hnYbADmkiNs67Y+3ylmlG7Lnu+FA==}
    dependencies:
      es5-ext: 0.10.62
      type: 1.2.0
    dev: false

  /dagre-d3-es@7.0.10:
    resolution: {integrity: sha512-qTCQmEhcynucuaZgY5/+ti3X/rnszKZhEQH/ZdWdtP1tA/y3VoHJzcVrO9pjjJCNpigfscAtoUB5ONcd2wNn0A==}
    dependencies:
      d3: 7.8.5
      lodash-es: 4.17.21
    dev: false

  /daisyui@3.9.3:
    resolution: {integrity: sha512-8li177QCu6dqlEOzE3h/dAV1y9Movbjx5bzJIO/hNqMNZtJkbHM0trjTzbDejV7N57eNGdjBvAGtxZYKzS4jow==}
    engines: {node: '>=16.9.0'}
    dependencies:
      colord: 2.9.3
      css-selector-tokenizer: 0.8.0
      postcss: 8.4.31
      postcss-js: 4.0.1(postcss@8.4.31)
      tailwindcss: 3.3.3
    transitivePeerDependencies:
      - ts-node
    dev: false

  /damerau-levenshtein@1.0.8:
    resolution: {integrity: sha512-sdQSFB7+llfUcQHUQO3+B8ERRj0Oa4w9POWMI/puGtuf7gFywGmkaLCElnudfTiKZV+NvHqL0ifzdrI8Ro7ESA==}
    dev: true

  /dayjs@1.11.10:
    resolution: {integrity: sha512-vjAczensTgRcqDERK0SR2XMwsF/tSvnvlv6VcF2GIhg6Sx4yOIt/irsr1RDJsKiIyBzJDpCoXiWWq28MqH2cnQ==}
    dev: false

  /debug@3.2.7:
    resolution: {integrity: sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==}
    peerDependencies:
      supports-color: '*'
    peerDependenciesMeta:
      supports-color:
        optional: true
    dependencies:
      ms: 2.1.3
    dev: true

  /debug@4.3.4:
    resolution: {integrity: sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==}
    engines: {node: '>=6.0'}
    peerDependencies:
      supports-color: '*'
    peerDependenciesMeta:
      supports-color:
        optional: true
    dependencies:
      ms: 2.1.2

  /decode-named-character-reference@1.0.2:
    resolution: {integrity: sha512-O8x12RzrUF8xyVcY0KJowWsmaJxQbmy0/EtnNtHRpsOcT7dFk5W598coHqBVpmWo1oQQfsCqfCmkZN5DJrZVdg==}
    dependencies:
      character-entities: 2.0.2
    dev: false

  /deep-is@0.1.4:
    resolution: {integrity: sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==}
    dev: true

  /deepmerge@4.3.1:
    resolution: {integrity: sha512-3sUqbMEc77XqpdNO7FRyRog+eW3ph+GYCbj+rK+uYyRMuwsVy0rMiVtPn+QJlKFvWP/1PYpapqYn0Me2knFn+A==}
    engines: {node: '>=0.10.0'}
    dev: true

  /default-browser-id@3.0.0:
    resolution: {integrity: sha512-OZ1y3y0SqSICtE8DE4S8YOE9UZOJ8wO16fKWVP5J1Qz42kV9jcnMVFrEE/noXb/ss3Q4pZIH79kxofzyNNtUNA==}
    engines: {node: '>=12'}
    dependencies:
      bplist-parser: 0.2.0
      untildify: 4.0.0
    dev: true

  /default-browser@4.0.0:
    resolution: {integrity: sha512-wX5pXO1+BrhMkSbROFsyxUm0i/cJEScyNhA4PPxc41ICuv05ZZB/MX28s8aZx6xjmatvebIapF6hLEKEcpneUA==}
    engines: {node: '>=14.16'}
    dependencies:
      bundle-name: 3.0.0
      default-browser-id: 3.0.0
      execa: 7.2.0
      titleize: 3.0.0
    dev: true

  /define-data-property@1.1.1:
    resolution: {integrity: sha512-E7uGkTzkk1d0ByLeSc6ZsFS79Axg+m1P/VsgYsxHgiuc3tFSj+MjMIwe90FC4lOAZzNBdY7kkO2P2wKdsQ1vgQ==}
    engines: {node: '>= 0.4'}
    dependencies:
      get-intrinsic: 1.2.2
      gopd: 1.0.1
      has-property-descriptors: 1.0.1
    dev: true

  /define-lazy-prop@3.0.0:
    resolution: {integrity: sha512-N+MeXYoqr3pOgn8xfyRPREN7gHakLYjhsHhWGT3fWAiL4IkAt0iDw14QiiEm2bE30c5XX5q0FtAA3CK5f9/BUg==}
    engines: {node: '>=12'}
    dev: true

  /define-properties@1.2.1:
    resolution: {integrity: sha512-8QmQKqEASLd5nx0U1B1okLElbUuuttJ/AnYmRXbbbGDWh6uS208EjD4Xqq/I9wK7u0v6O08XhTWnt5XtEbR6Dg==}
    engines: {node: '>= 0.4'}
    dependencies:
      define-data-property: 1.1.1
      has-property-descriptors: 1.0.1
      object-keys: 1.1.1
    dev: true

  /delaunator@5.0.0:
    resolution: {integrity: sha512-AyLvtyJdbv/U1GkiS6gUUzclRoAY4Gs75qkMygJJhU75LW4DNuSF2RMzpxs9jw9Oz1BobHjTdkG3zdP55VxAqw==}
    dependencies:
      robust-predicates: 3.0.2
    dev: false

  /dequal@2.0.3:
    resolution: {integrity: sha512-0je+qPKHEMohvfRTCEo3CrPG6cAzAYgmzKyxRiYSSDkS6eGJdyVJm7WaYA5ECaAD9wLB2T4EEeymA5aFVcYXCA==}
    engines: {node: '>=6'}

  /devlop@1.1.0:
    resolution: {integrity: sha512-RWmIqhcFf1lRYBvNmr7qTNuyCt/7/ns2jbpp1+PalgE/rDQcBT0fioSMUpJ93irlUhC5hrg4cYqe6U+0ImW0rA==}
    dependencies:
      dequal: 2.0.3
    dev: false

  /didyoumean@1.2.2:
    resolution: {integrity: sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==}

  /diff@5.1.0:
    resolution: {integrity: sha512-D+mk+qE8VC/PAUrlAU34N+VfXev0ghe5ywmpqrawphmVZc1bEfn56uo9qpyGp1p4xpzOHkSW4ztBd6L7Xx4ACw==}
    engines: {node: '>=0.3.1'}
    dev: false

  /dir-glob@3.0.1:
    resolution: {integrity: sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==}
    engines: {node: '>=8'}
    dependencies:
      path-type: 4.0.0
    dev: true

  /dlv@1.1.3:
    resolution: {integrity: sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA==}

  /doctrine@2.1.0:
    resolution: {integrity: sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==}
    engines: {node: '>=0.10.0'}
    dependencies:
      esutils: 2.0.3
    dev: true

  /doctrine@3.0.0:
    resolution: {integrity: sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==}
    engines: {node: '>=6.0.0'}
    dependencies:
      esutils: 2.0.3
    dev: true

  /dom-serializer@2.0.0:
    resolution: {integrity: sha512-wIkAryiqt/nV5EQKqQpo3SToSOV9J0DnbJqwK7Wv/Trc92zIAYZ4FlMu+JPFW1DfGFt81ZTCGgDEabffXeLyJg==}
    dependencies:
      domelementtype: 2.3.0
      domhandler: 5.0.3
      entities: 4.5.0
    dev: true

  /domelementtype@2.3.0:
    resolution: {integrity: sha512-OLETBj6w0OsagBwdXnPdN0cnMfF9opN69co+7ZrbfPGrdpPVNBUj02spi6B1N7wChLQiPn4CSH/zJvXw56gmHw==}
    dev: true

  /domhandler@5.0.3:
    resolution: {integrity: sha512-cgwlv/1iFQiFnU96XXgROh8xTeetsnJiDsTc7TYCLFd9+/WNkIqPTxiM/8pSd8VIrhXGTf1Ny1q1hquVqDJB5w==}
    engines: {node: '>= 4'}
    dependencies:
      domelementtype: 2.3.0
    dev: true

  /dompurify@3.0.6:
    resolution: {integrity: sha512-ilkD8YEnnGh1zJ240uJsW7AzE+2qpbOUYjacomn3AvJ6J4JhKGSZ2nh4wUIXPZrEPppaCLx5jFe8T89Rk8tQ7w==}
    dev: false

  /domutils@3.1.0:
    resolution: {integrity: sha512-H78uMmQtI2AhgDJjWeQmHwJJ2bLPD3GMmO7Zja/ZZh84wkm+4ut+IUnUdRa8uCGX88DiVx1j6FRe1XfxEgjEZA==}
    dependencies:
      dom-serializer: 2.0.0
      domelementtype: 2.3.0
      domhandler: 5.0.3
    dev: true

  /dot-case@3.0.4:
    resolution: {integrity: sha512-Kv5nKlh6yRrdrGvxeJ2e5y2eRUpkUosIW4A2AS38zwSz27zu7ufDwQPi5Jhs3XAlGNetl3bmnGhQsMtkKJnj3w==}
    dependencies:
      no-case: 3.0.4
      tslib: 2.6.2
    dev: true

  /dotenv@16.3.1:
    resolution: {integrity: sha512-IPzF4w4/Rd94bA9imS68tZBaYyBWSCE47V1RGuMrB94iyTOIEwRmVL2x/4An+6mETpLrKJ5hQkB8W4kFAadeIQ==}
    engines: {node: '>=12'}
    dev: false

  /electron-to-chromium@1.4.563:
    resolution: {integrity: sha512-dg5gj5qOgfZNkPNeyKBZQAQitIQ/xwfIDmEQJHCbXaD9ebTZxwJXUsDYcBlAvZGZLi+/354l35J1wkmP6CqYaw==}

  /elkjs@0.8.2:
    resolution: {integrity: sha512-L6uRgvZTH+4OF5NE/MBbzQx/WYpru1xCBE9respNj6qznEewGUIfhzmm7horWWxbNO2M0WckQypGctR8lH79xQ==}
    dev: false

  /emoji-regex@10.3.0:
    resolution: {integrity: sha512-QpLs9D9v9kArv4lfDEgg1X/gN5XLnf/A6l9cs8SPZLRZR3ZkY9+kwIQTxm+fsSej5UMYGE8fdoaZVIBlqG0XTw==}
    dev: false

  /emoji-regex@9.2.2:
    resolution: {integrity: sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==}
    dev: true

  /enhanced-resolve@5.15.0:
    resolution: {integrity: sha512-LXYT42KJ7lpIKECr2mAXIaMldcNCh/7E0KBKOu4KSfkHmP+mZmSs+8V5gBAqisWBy0OO4W5Oyys0GO1Y8KtdKg==}
    engines: {node: '>=10.13.0'}
    dependencies:
      graceful-fs: 4.2.11
      tapable: 2.2.1
    dev: true

  /enquirer@2.4.1:
    resolution: {integrity: sha512-rRqJg/6gd538VHvR3PSrdRBb/1Vy2YfzHqzvbhGIQpDRKIa4FgV/54b5Q1xYSxOOwKvjXweS26E0Q+nAMwp2pQ==}
    engines: {node: '>=8.6'}
    dependencies:
      ansi-colors: 4.1.3
      strip-ansi: 6.0.1
    dev: true

  /entities@4.5.0:
    resolution: {integrity: sha512-V0hjH4dGPh9Ao5p0MoRY6BVqtwCjhz6vI5LT8AJ55H+4g9/4vbHx1I54fS0XuclLhDHArPQCiMjDxjaL8fPxhw==}
    engines: {node: '>=0.12'}

  /error-ex@1.3.2:
    resolution: {integrity: sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==}
    dependencies:
      is-arrayish: 0.2.1
    dev: true

  /es-abstract@1.22.3:
    resolution: {integrity: sha512-eiiY8HQeYfYH2Con2berK+To6GrK2RxbPawDkGq4UiCQQfZHb6wX9qQqkbpPqaxQFcl8d9QzZqo0tGE0VcrdwA==}
    engines: {node: '>= 0.4'}
    dependencies:
      array-buffer-byte-length: 1.0.0
      arraybuffer.prototype.slice: 1.0.2
      available-typed-arrays: 1.0.5
      call-bind: 1.0.5
      es-set-tostringtag: 2.0.2
      es-to-primitive: 1.2.1
      function.prototype.name: 1.1.6
      get-intrinsic: 1.2.2
      get-symbol-description: 1.0.0
      globalthis: 1.0.3
      gopd: 1.0.1
      has-property-descriptors: 1.0.1
      has-proto: 1.0.1
      has-symbols: 1.0.3
      hasown: 2.0.0
      internal-slot: 1.0.6
      is-array-buffer: 3.0.2
      is-callable: 1.2.7
      is-negative-zero: 2.0.2
      is-regex: 1.1.4
      is-shared-array-buffer: 1.0.2
      is-string: 1.0.7
      is-typed-array: 1.1.12
      is-weakref: 1.0.2
      object-inspect: 1.13.1
      object-keys: 1.1.1
      object.assign: 4.1.4
      regexp.prototype.flags: 1.5.1
      safe-array-concat: 1.0.1
      safe-regex-test: 1.0.0
      string.prototype.trim: 1.2.8
      string.prototype.trimend: 1.0.7
      string.prototype.trimstart: 1.0.7
      typed-array-buffer: 1.0.0
      typed-array-byte-length: 1.0.0
      typed-array-byte-offset: 1.0.0
      typed-array-length: 1.0.4
      unbox-primitive: 1.0.2
      which-typed-array: 1.1.13
    dev: true

  /es-iterator-helpers@1.0.15:
    resolution: {integrity: sha512-GhoY8uYqd6iwUl2kgjTm4CZAf6oo5mHK7BPqx3rKgx893YSsy0LGHV6gfqqQvZt/8xM8xeOnfXBCfqclMKkJ5g==}
    dependencies:
      asynciterator.prototype: 1.0.0
      call-bind: 1.0.5
      define-properties: 1.2.1
      es-abstract: 1.22.3
      es-set-tostringtag: 2.0.2
      function-bind: 1.1.2
      get-intrinsic: 1.2.2
      globalthis: 1.0.3
      has-property-descriptors: 1.0.1
      has-proto: 1.0.1
      has-symbols: 1.0.3
      internal-slot: 1.0.6
      iterator.prototype: 1.1.2
      safe-array-concat: 1.0.1
    dev: true

  /es-set-tostringtag@2.0.2:
    resolution: {integrity: sha512-BuDyupZt65P9D2D2vA/zqcI3G5xRsklm5N3xCwuiy+/vKy8i0ifdsQP1sLgO4tZDSCaQUSnmC48khknGMV3D2Q==}
    engines: {node: '>= 0.4'}
    dependencies:
      get-intrinsic: 1.2.2
      has-tostringtag: 1.0.0
      hasown: 2.0.0
    dev: true

  /es-shim-unscopables@1.0.2:
    resolution: {integrity: sha512-J3yBRXCzDu4ULnQwxyToo/OjdMx6akgVC7K6few0a7F/0wLtmKKN7I73AH5T2836UuXRqN7Qg+IIUw/+YJksRw==}
    dependencies:
      hasown: 2.0.0
    dev: true

  /es-to-primitive@1.2.1:
    resolution: {integrity: sha512-QCOllgZJtaUo9miYBcLChTUaHNjJF3PYs1VidD7AwiEj1kYxKeQTctLAezAOH5ZKRH0g2IgPn6KwB4IT8iRpvA==}
    engines: {node: '>= 0.4'}
    dependencies:
      is-callable: 1.2.7
      is-date-object: 1.0.5
      is-symbol: 1.0.4
    dev: true

  /es5-ext@0.10.62:
    resolution: {integrity: sha512-BHLqn0klhEpnOKSrzn/Xsz2UIW8j+cGmo9JLzr8BiUapV8hPL9+FliFqjwr9ngW7jWdnxv6eO+/LqyhJVqgrjA==}
    engines: {node: '>=0.10'}
    requiresBuild: true
    dependencies:
      es6-iterator: 2.0.3
      es6-symbol: 3.1.3
      next-tick: 1.1.0
    dev: false

  /es6-iterator@2.0.3:
    resolution: {integrity: sha512-zw4SRzoUkd+cl+ZoE15A9o1oQd920Bb0iOJMQkQhl3jNc03YqVjAhG7scf9C5KWRU/R13Orf588uCC6525o02g==}
    dependencies:
      d: 1.0.1
      es5-ext: 0.10.62
      es6-symbol: 3.1.3
    dev: false

  /es6-symbol@3.1.3:
    resolution: {integrity: sha512-NJ6Yn3FuDinBaBRWl/q5X/s4koRHBrgKAu+yGI6JCBeiu3qrcbJhwT2GeR/EXVfylRk8dpQVJoLEFhK+Mu31NA==}
    dependencies:
      d: 1.0.1
      ext: 1.7.0
    dev: false

  /escalade@3.1.1:
    resolution: {integrity: sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX/TJjGJZHuh9B2UxbsaEkmlEo9MfhrSzmhIlhRlI2GXnw==}
    engines: {node: '>=6'}

  /escape-carriage@1.3.1:
    resolution: {integrity: sha512-GwBr6yViW3ttx1kb7/Oh+gKQ1/TrhYwxKqVmg5gS+BK+Qe2KrOa/Vh7w3HPBvgGf0LfcDGoY9I6NHKoA5Hozhw==}
    dev: false

  /escape-html@1.0.3:
    resolution: {integrity: sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==}
    dev: false

  /escape-string-regexp@1.0.5:
    resolution: {integrity: sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==}
    engines: {node: '>=0.8.0'}

  /escape-string-regexp@4.0.0:
    resolution: {integrity: sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==}
    engines: {node: '>=10'}
    dev: true

  /escape-string-regexp@5.0.0:
    resolution: {integrity: sha512-/veY75JbMK4j1yjvuUxuVsiS/hr/4iHs9FTT6cgTexxdE0Ly/glccBAkloH/DofkjRbZU3bnoj38mOmhkZ0lHw==}
    engines: {node: '>=12'}
    dev: false

  /eslint-config-next@13.5.6(eslint@8.0.0)(typescript@5.0.2):
    resolution: {integrity: sha512-o8pQsUHTo9aHqJ2YiZDym5gQAMRf7O2HndHo/JZeY7TDD+W4hk6Ma8Vw54RHiBeb7OWWO5dPirQB+Is/aVQ7Kg==}
    peerDependencies:
      eslint: ^7.23.0 || ^8.0.0
      typescript: '>=3.3.1'
    peerDependenciesMeta:
      typescript:
        optional: true
    dependencies:
      '@next/eslint-plugin-next': 13.5.6
      '@rushstack/eslint-patch': 1.5.1
      '@typescript-eslint/parser': 6.8.0(eslint@8.0.0)(typescript@5.0.2)
      eslint: 8.0.0
      eslint-import-resolver-node: 0.3.9
      eslint-import-resolver-typescript: 3.6.1(@typescript-eslint/parser@6.8.0)(eslint-import-resolver-node@0.3.9)(eslint-plugin-import@2.29.0)(eslint@8.0.0)
      eslint-plugin-import: 2.29.0(@typescript-eslint/parser@6.8.0)(eslint-import-resolver-typescript@3.6.1)(eslint@8.0.0)
      eslint-plugin-jsx-a11y: 6.7.1(eslint@8.0.0)
      eslint-plugin-react: 7.33.2(eslint@8.0.0)
      eslint-plugin-react-hooks: 4.6.0(eslint@8.0.0)
      typescript: 5.0.2
    transitivePeerDependencies:
      - eslint-import-resolver-webpack
      - supports-color
    dev: true

  /eslint-config-prettier@9.0.0(eslint@8.0.0):
    resolution: {integrity: sha512-IcJsTkJae2S35pRsRAwoCE+925rJJStOdkKnLVgtE+tEpqU0EVVM7OqrwxqgptKdX29NUwC82I5pXsGFIgSevw==}
    hasBin: true
    peerDependencies:
      eslint: '>=7.0.0'
    dependencies:
      eslint: 8.0.0
    dev: true

  /eslint-import-resolver-node@0.3.9:
    resolution: {integrity: sha512-WFj2isz22JahUv+B788TlO3N6zL3nNJGU8CcZbPZvVEkBPaJdCV4vy5wyghty5ROFbCRnm132v8BScu5/1BQ8g==}
    dependencies:
      debug: 3.2.7
      is-core-module: 2.13.1
      resolve: 1.22.8
    transitivePeerDependencies:
      - supports-color
    dev: true

  /eslint-import-resolver-typescript@3.6.1(@typescript-eslint/parser@6.8.0)(eslint-import-resolver-node@0.3.9)(eslint-plugin-import@2.29.0)(eslint@8.0.0):
    resolution: {integrity: sha512-xgdptdoi5W3niYeuQxKmzVDTATvLYqhpwmykwsh7f6HIOStGWEIL9iqZgQDF9u9OEzrRwR8no5q2VT+bjAujTg==}
    engines: {node: ^14.18.0 || >=16.0.0}
    peerDependencies:
      eslint: '*'
      eslint-plugin-import: '*'
    dependencies:
      debug: 4.3.4
      enhanced-resolve: 5.15.0
      eslint: 8.0.0
      eslint-module-utils: 2.8.0(@typescript-eslint/parser@6.8.0)(eslint-import-resolver-node@0.3.9)(eslint-import-resolver-typescript@3.6.1)(eslint@8.0.0)
      eslint-plugin-import: 2.29.0(@typescript-eslint/parser@6.8.0)(eslint-import-resolver-typescript@3.6.1)(eslint@8.0.0)
      fast-glob: 3.3.1
      get-tsconfig: 4.7.2
      is-core-module: 2.13.1
      is-glob: 4.0.3
    transitivePeerDependencies:
      - '@typescript-eslint/parser'
      - eslint-import-resolver-node
      - eslint-import-resolver-webpack
      - supports-color
    dev: true

  /eslint-module-utils@2.8.0(@typescript-eslint/parser@6.8.0)(eslint-import-resolver-node@0.3.9)(eslint-import-resolver-typescript@3.6.1)(eslint@8.0.0):
    resolution: {integrity: sha512-aWajIYfsqCKRDgUfjEXNN/JlrzauMuSEy5sbd7WXbtW3EH6A6MpwEh42c7qD+MqQo9QMJ6fWLAeIJynx0g6OAw==}
    engines: {node: '>=4'}
    peerDependencies:
      '@typescript-eslint/parser': '*'
      eslint: '*'
      eslint-import-resolver-node: '*'
      eslint-import-resolver-typescript: '*'
      eslint-import-resolver-webpack: '*'
    peerDependenciesMeta:
      '@typescript-eslint/parser':
        optional: true
      eslint:
        optional: true
      eslint-import-resolver-node:
        optional: true
      eslint-import-resolver-typescript:
        optional: true
      eslint-import-resolver-webpack:
        optional: true
    dependencies:
      '@typescript-eslint/parser': 6.8.0(eslint@8.0.0)(typescript@5.0.2)
      debug: 3.2.7
      eslint: 8.0.0
      eslint-import-resolver-node: 0.3.9
      eslint-import-resolver-typescript: 3.6.1(@typescript-eslint/parser@6.8.0)(eslint-import-resolver-node@0.3.9)(eslint-plugin-import@2.29.0)(eslint@8.0.0)
    transitivePeerDependencies:
      - supports-color
    dev: true

  /eslint-plugin-import@2.29.0(@typescript-eslint/parser@6.8.0)(eslint-import-resolver-typescript@3.6.1)(eslint@8.0.0):
    resolution: {integrity: sha512-QPOO5NO6Odv5lpoTkddtutccQjysJuFxoPS7fAHO+9m9udNHvTCPSAMW9zGAYj8lAIdr40I8yPCdUYrncXtrwg==}
    engines: {node: '>=4'}
    peerDependencies:
      '@typescript-eslint/parser': '*'
      eslint: ^2 || ^3 || ^4 || ^5 || ^6 || ^7.2.0 || ^8
    peerDependenciesMeta:
      '@typescript-eslint/parser':
        optional: true
    dependencies:
      '@typescript-eslint/parser': 6.8.0(eslint@8.0.0)(typescript@5.0.2)
      array-includes: 3.1.7
      array.prototype.findlastindex: 1.2.3
      array.prototype.flat: 1.3.2
      array.prototype.flatmap: 1.3.2
      debug: 3.2.7
      doctrine: 2.1.0
      eslint: 8.0.0
      eslint-import-resolver-node: 0.3.9
      eslint-module-utils: 2.8.0(@typescript-eslint/parser@6.8.0)(eslint-import-resolver-node@0.3.9)(eslint-import-resolver-typescript@3.6.1)(eslint@8.0.0)
      hasown: 2.0.0
      is-core-module: 2.13.1
      is-glob: 4.0.3
      minimatch: 3.1.2
      object.fromentries: 2.0.7
      object.groupby: 1.0.1
      object.values: 1.1.7
      semver: 6.3.1
      tsconfig-paths: 3.14.2
    transitivePeerDependencies:
      - eslint-import-resolver-typescript
      - eslint-import-resolver-webpack
      - supports-color
    dev: true

  /eslint-plugin-jsx-a11y@6.7.1(eslint@8.0.0):
    resolution: {integrity: sha512-63Bog4iIethyo8smBklORknVjB0T2dwB8Mr/hIC+fBS0uyHdYYpzM/Ed+YC8VxTjlXHEWFOdmgwcDn1U2L9VCA==}
    engines: {node: '>=4.0'}
    peerDependencies:
      eslint: ^3 || ^4 || ^5 || ^6 || ^7 || ^8
    dependencies:
      '@babel/runtime': 7.23.2
      aria-query: 5.3.0
      array-includes: 3.1.7
      array.prototype.flatmap: 1.3.2
      ast-types-flow: 0.0.7
      axe-core: 4.8.2
      axobject-query: 3.2.1
      damerau-levenshtein: 1.0.8
      emoji-regex: 9.2.2
      eslint: 8.0.0
      has: 1.0.4
      jsx-ast-utils: 3.3.5
      language-tags: 1.0.5
      minimatch: 3.1.2
      object.entries: 1.1.7
      object.fromentries: 2.0.7
      semver: 6.3.1
    dev: true

  /eslint-plugin-prettier@5.0.1(eslint-config-prettier@9.0.0)(eslint@8.0.0)(prettier@3.0.3):
    resolution: {integrity: sha512-m3u5RnR56asrwV/lDC4GHorlW75DsFfmUcjfCYylTUs85dBRnB7VM6xG8eCMJdeDRnppzmxZVf1GEPJvl1JmNg==}
    engines: {node: ^14.18.0 || >=16.0.0}
    peerDependencies:
      '@types/eslint': '>=8.0.0'
      eslint: '>=8.0.0'
      eslint-config-prettier: '*'
      prettier: '>=3.0.0'
    peerDependenciesMeta:
      '@types/eslint':
        optional: true
      eslint-config-prettier:
        optional: true
    dependencies:
      eslint: 8.0.0
      eslint-config-prettier: 9.0.0(eslint@8.0.0)
      prettier: 3.0.3
      prettier-linter-helpers: 1.0.0
      synckit: 0.8.5
    dev: true

  /eslint-plugin-react-hooks@4.6.0(eslint@8.0.0):
    resolution: {integrity: sha512-oFc7Itz9Qxh2x4gNHStv3BqJq54ExXmfC+a1NjAta66IAN87Wu0R/QArgIS9qKzX3dXKPI9H5crl9QchNMY9+g==}
    engines: {node: '>=10'}
    peerDependencies:
      eslint: ^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0 || ^7.0.0 || ^8.0.0-0
    dependencies:
      eslint: 8.0.0
    dev: true

  /eslint-plugin-react@7.33.2(eslint@8.0.0):
    resolution: {integrity: sha512-73QQMKALArI8/7xGLNI/3LylrEYrlKZSb5C9+q3OtOewTnMQi5cT+aE9E41sLCmli3I9PGGmD1yiZydyo4FEPw==}
    engines: {node: '>=4'}
    peerDependencies:
      eslint: ^3 || ^4 || ^5 || ^6 || ^7 || ^8
    dependencies:
      array-includes: 3.1.7
      array.prototype.flatmap: 1.3.2
      array.prototype.tosorted: 1.1.2
      doctrine: 2.1.0
      es-iterator-helpers: 1.0.15
      eslint: 8.0.0
      estraverse: 5.3.0
      jsx-ast-utils: 3.3.5
      minimatch: 3.1.2
      object.entries: 1.1.7
      object.fromentries: 2.0.7
      object.hasown: 1.1.3
      object.values: 1.1.7
      prop-types: 15.8.1
      resolve: 2.0.0-next.5
      semver: 6.3.1
      string.prototype.matchall: 4.0.10
    dev: true

  /eslint-scope@6.0.0:
    resolution: {integrity: sha512-uRDL9MWmQCkaFus8RF5K9/L/2fn+80yoW3jkD53l4shjCh26fCtvJGasxjUqP5OT87SYTxCVA3BwTUzuELx9kA==}
    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}
    dependencies:
      esrecurse: 4.3.0
      estraverse: 5.3.0
    dev: true

  /eslint-utils@3.0.0(eslint@8.0.0):
    resolution: {integrity: sha512-uuQC43IGctw68pJA1RgbQS8/NP7rch6Cwd4j3ZBtgo4/8Flj4eGE7ZYSZRN3iq5pVUv6GPdW5Z1RFleo84uLDA==}
    engines: {node: ^10.0.0 || ^12.0.0 || >= 14.0.0}
    peerDependencies:
      eslint: '>=5'
    dependencies:
      eslint: 8.0.0
      eslint-visitor-keys: 2.1.0
    dev: true

  /eslint-visitor-keys@2.1.0:
    resolution: {integrity: sha512-0rSmRBzXgDzIsD6mGdJgevzgezI534Cer5L/vyMX0kHzT/jiB43jRhd9YUlMGYLQy2zprNmoT8qasCGtY+QaKw==}
    engines: {node: '>=10'}
    dev: true

  /eslint-visitor-keys@3.4.3:
    resolution: {integrity: sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==}
    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}
    dev: true

  /eslint@8.0.0:
    resolution: {integrity: sha512-03spzPzMAO4pElm44m60Nj08nYonPGQXmw6Ceai/S4QK82IgwWO1EXx1s9namKzVlbVu3Jf81hb+N+8+v21/HQ==}
    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}
    hasBin: true
    dependencies:
      '@eslint/eslintrc': 1.4.1
      '@humanwhocodes/config-array': 0.6.0
      ajv: 6.12.6
      chalk: 4.1.2
      cross-spawn: 7.0.3
      debug: 4.3.4
      doctrine: 3.0.0
      enquirer: 2.4.1
      escape-string-regexp: 4.0.0
      eslint-scope: 6.0.0
      eslint-utils: 3.0.0(eslint@8.0.0)
      eslint-visitor-keys: 3.4.3
      espree: 9.6.1
      esquery: 1.5.0
      esutils: 2.0.3
      fast-deep-equal: 3.1.3
      file-entry-cache: 6.0.1
      functional-red-black-tree: 1.0.1
      glob-parent: 6.0.2
      globals: 13.23.0
      ignore: 4.0.6
      import-fresh: 3.3.0
      imurmurhash: 0.1.4
      is-glob: 4.0.3
      js-yaml: 4.1.0
      json-stable-stringify-without-jsonify: 1.0.1
      levn: 0.4.1
      lodash.merge: 4.6.2
      minimatch: 3.1.2
      natural-compare: 1.4.0
      optionator: 0.9.3
      progress: 2.0.3
      regexpp: 3.2.0
      semver: 7.5.4
      strip-ansi: 6.0.1
      strip-json-comments: 3.1.1
      text-table: 0.2.0
      v8-compile-cache: 2.4.0
    transitivePeerDependencies:
      - supports-color
    dev: true

  /espree@9.6.1:
    resolution: {integrity: sha512-oruZaFkjorTpF32kDSI5/75ViwGeZginGGy2NoOSg3Q9bnwlnmDm4HLnkl0RE3n+njDXR037aY1+x58Z/zFdwQ==}
    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}
    dependencies:
      acorn: 8.10.0
      acorn-jsx: 5.3.2(acorn@8.10.0)
      eslint-visitor-keys: 3.4.3
    dev: true

  /esprima@4.0.1:
    resolution: {integrity: sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==}
    engines: {node: '>=4'}
    hasBin: true
    dev: false

  /esquery@1.5.0:
    resolution: {integrity: sha512-YQLXUplAwJgCydQ78IMJywZCceoqk1oH01OERdSAJc/7U2AylwjhSCLDEtqwg811idIS/9fIU5GjG73IgjKMVg==}
    engines: {node: '>=0.10'}
    dependencies:
      estraverse: 5.3.0
    dev: true

  /esrecurse@4.3.0:
    resolution: {integrity: sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==}
    engines: {node: '>=4.0'}
    dependencies:
      estraverse: 5.3.0
    dev: true

  /estraverse@5.3.0:
    resolution: {integrity: sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==}
    engines: {node: '>=4.0'}
    dev: true

  /estree-util-attach-comments@2.1.1:
    resolution: {integrity: sha512-+5Ba/xGGS6mnwFbXIuQiDPTbuTxuMCooq3arVv7gPZtYpjp+VXH/NkHAP35OOefPhNG/UGqU3vt/LTABwcHX0w==}
    dependencies:
      '@types/estree': 1.0.3
    dev: false

  /estree-util-build-jsx@2.2.2:
    resolution: {integrity: sha512-m56vOXcOBuaF+Igpb9OPAy7f9w9OIkb5yhjsZuaPm7HoGi4oTOQi0h2+yZ+AtKklYFZ+rPC4n0wYCJCEU1ONqg==}
    dependencies:
      '@types/estree-jsx': 1.0.2
      estree-util-is-identifier-name: 2.1.0
      estree-walker: 3.0.3
    dev: false

  /estree-util-is-identifier-name@2.1.0:
    resolution: {integrity: sha512-bEN9VHRyXAUOjkKVQVvArFym08BTWB0aJPppZZr0UNyAqWsLaVfAqP7hbaTJjzHifmB5ebnR8Wm7r7yGN/HonQ==}
    dev: false

  /estree-util-to-js@1.2.0:
    resolution: {integrity: sha512-IzU74r1PK5IMMGZXUVZbmiu4A1uhiPgW5hm1GjcOfr4ZzHaMPpLNJjR7HjXiIOzi25nZDrgFTobHTkV5Q6ITjA==}
    dependencies:
      '@types/estree-jsx': 1.0.2
      astring: 1.8.6
      source-map: 0.7.4
    dev: false

  /estree-util-value-to-estree@1.3.0:
    resolution: {integrity: sha512-Y+ughcF9jSUJvncXwqRageavjrNPAI+1M/L3BI3PyLp1nmgYTGUXU6t5z1Y7OWuThoDdhPME07bQU+d5LxdJqw==}
    engines: {node: '>=12.0.0'}
    dependencies:
      is-plain-obj: 3.0.0
    dev: false

  /estree-util-visit@1.2.1:
    resolution: {integrity: sha512-xbgqcrkIVbIG+lI/gzbvd9SGTJL4zqJKBFttUl5pP27KhAjtMKbX/mQXJ7qgyXpMgVy/zvpm0xoQQaGL8OloOw==}
    dependencies:
      '@types/estree-jsx': 1.0.2
      '@types/unist': 2.0.9
    dev: false

  /estree-walker@3.0.3:
    resolution: {integrity: sha512-7RUKfXgSMMkzt6ZuXmqapOurLGPPfgj6l9uRZ7lRGolvk0y2yocc35LdcxKC5PQZdn2DMqioAQ2NoWcrTKmm6g==}
    dependencies:
      '@types/estree': 1.0.3
    dev: false

  /esutils@2.0.3:
    resolution: {integrity: sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==}
    engines: {node: '>=0.10.0'}
    dev: true

  /execa@0.8.0:
    resolution: {integrity: sha512-zDWS+Rb1E8BlqqhALSt9kUhss8Qq4nN3iof3gsOdyINksElaPyNBtKUMTR62qhvgVWR0CqCX7sdnKe4MnUbFEA==}
    engines: {node: '>=4'}
    dependencies:
      cross-spawn: 5.1.0
      get-stream: 3.0.0
      is-stream: 1.1.0
      npm-run-path: 2.0.2
      p-finally: 1.0.0
      signal-exit: 3.0.7
      strip-eof: 1.0.0
    dev: false

  /execa@5.1.1:
    resolution: {integrity: sha512-8uSpZZocAZRBAPIEINJj3Lo9HyGitllczc27Eh5YYojjMFMn8yHMDMaUHE2Jqfq05D/wucwI4JGURyXt1vchyg==}
    engines: {node: '>=10'}
    dependencies:
      cross-spawn: 7.0.3
      get-stream: 6.0.1
      human-signals: 2.1.0
      is-stream: 2.0.1
      merge-stream: 2.0.0
      npm-run-path: 4.0.1
      onetime: 5.1.2
      signal-exit: 3.0.7
      strip-final-newline: 2.0.0
    dev: true

  /execa@7.2.0:
    resolution: {integrity: sha512-UduyVP7TLB5IcAQl+OzLyLcS/l32W/GLg+AhHJ+ow40FOk2U3SAllPwR44v4vmdFwIWqpdwxxpQbF1n5ta9seA==}
    engines: {node: ^14.18.0 || ^16.14.0 || >=18.0.0}
    dependencies:
      cross-spawn: 7.0.3
      get-stream: 6.0.1
      human-signals: 4.3.1
      is-stream: 3.0.0
      merge-stream: 2.0.0
      npm-run-path: 5.1.0
      onetime: 6.0.0
      signal-exit: 3.0.7
      strip-final-newline: 3.0.0
    dev: true

  /ext@1.7.0:
    resolution: {integrity: sha512-6hxeJYaL110a9b5TEJSj0gojyHQAmA2ch5Os+ySCiA1QGdS697XWY1pzsrSjqA9LDEEgdB/KypIlR59RcLuHYw==}
    dependencies:
      type: 2.7.2
    dev: false

  /extend-shallow@2.0.1:
    resolution: {integrity: sha512-zCnTtlxNoAiDc3gqY2aYAWFx7XWWiasuF2K8Me5WbN8otHKTUKBwjPtNpRs/rbUZm7KxWAaNj7P1a/p52GbVug==}
    engines: {node: '>=0.10.0'}
    dependencies:
      is-extendable: 0.1.1
    dev: false

  /extend@3.0.2:
    resolution: {integrity: sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g==}
    dev: false

  /fast-deep-equal@3.1.3:
    resolution: {integrity: sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==}
    dev: true

  /fast-diff@1.3.0:
    resolution: {integrity: sha512-VxPP4NqbUjj6MaAOafWeUn2cXWLcCtljklUtZf0Ind4XQ+QPtmA0b18zZy0jIQx+ExRVCR/ZQpBmik5lXshNsw==}
    dev: true

  /fast-glob@3.3.1:
    resolution: {integrity: sha512-kNFPyjhh5cKjrUltxs+wFx+ZkbRaxxmZ+X0ZU31SOsxCEtP9VPgtq2teZw1DebupL5GmDaNQ6yKMMVcM41iqDg==}
    engines: {node: '>=8.6.0'}
    dependencies:
      '@nodelib/fs.stat': 2.0.5
      '@nodelib/fs.walk': 1.2.8
      glob-parent: 5.1.2
      merge2: 1.4.1
      micromatch: 4.0.5

  /fast-json-stable-stringify@2.1.0:
    resolution: {integrity: sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==}
    dev: true

  /fast-levenshtein@2.0.6:
    resolution: {integrity: sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==}
    dev: true

  /fastparse@1.1.2:
    resolution: {integrity: sha512-483XLLxTVIwWK3QTrMGRqUfUpoOs/0hbQrl2oz4J0pAcm3A3bu84wxTFqGqkJzewCLdME38xJLJAxBABfQT8sQ==}
    dev: false

  /fastq@1.15.0:
    resolution: {integrity: sha512-wBrocU2LCXXa+lWBt8RoIRD89Fi8OdABODa/kEnyeyjS5aZO5/GNvI5sEINADqP/h8M29UHTHUb53sUu5Ihqdw==}
    dependencies:
      reusify: 1.0.4

  /fflate@0.7.4:
    resolution: {integrity: sha512-5u2V/CDW15QM1XbbgS+0DfPxVB+jUKhWEKuuFuHncbk3tEEqzmoXL+2KyOFuKGqOnmdIy0/davWF1CkuwtibCw==}
    dev: false

  /file-entry-cache@6.0.1:
    resolution: {integrity: sha512-7Gps/XWymbLk2QLYK4NzpMOrYjMhdIxXuIvy2QBsLE6ljuodKvdkWs/cpyJJ3CVIVpH0Oi1Hvg1ovbMzLdFBBg==}
    engines: {node: ^10.12.0 || >=12.0.0}
    dependencies:
      flat-cache: 3.1.1
    dev: true

  /fill-range@7.0.1:
    resolution: {integrity: sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==}
    engines: {node: '>=8'}
    dependencies:
      to-regex-range: 5.0.1

  /flat-cache@3.1.1:
    resolution: {integrity: sha512-/qM2b3LUIaIgviBQovTLvijfyOQXPtSRnRK26ksj2J7rzPIecePUIpJsZ4T02Qg+xiAEKIs5K8dsHEd+VaKa/Q==}
    engines: {node: '>=12.0.0'}
    dependencies:
      flatted: 3.2.9
      keyv: 4.5.4
      rimraf: 3.0.2
    dev: true

  /flatted@3.2.9:
    resolution: {integrity: sha512-36yxDn5H7OFZQla0/jFJmbIKTdZAQHngCedGxiMmpNfEZM0sdEeT+WczLQrjK6D7o2aiyLYDnkw0R3JK0Qv1RQ==}
    dev: true

  /flexsearch@0.7.31:
    resolution: {integrity: sha512-XGozTsMPYkm+6b5QL3Z9wQcJjNYxp0CYn3U1gO7dwD6PAqU1SVWZxI9CCg3z+ml3YfqdPnrBehaBrnH2AGKbNA==}
    dev: false

  /focus-visible@5.2.0:
    resolution: {integrity: sha512-Rwix9pBtC1Nuy5wysTmKy+UjbDJpIfg8eHjw0rjZ1mX4GNLz1Bmd16uDpI3Gk1i70Fgcs8Csg2lPm8HULFg9DQ==}
    dev: false

  /for-each@0.3.3:
    resolution: {integrity: sha512-jqYfLp7mo9vIyQf8ykW2v7A+2N4QjeCeI5+Dz9XraiO1ign81wjiH7Fb9vSOWvQfNtmSa4H2RoQTrrXivdUZmw==}
    dependencies:
      is-callable: 1.2.7
    dev: true

  /fraction.js@4.3.7:
    resolution: {integrity: sha512-ZsDfxO51wGAXREY55a7la9LScWpwv9RxIrYABrlvOFBlH/ShPnrtsXeuUIfXKKOVicNxQ+o8JTbJvjS4M89yew==}
    dev: true

  /fs.realpath@1.0.0:
    resolution: {integrity: sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==}

  /fsevents@2.3.3:
    resolution: {integrity: sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==}
    engines: {node: ^8.16.0 || ^10.6.0 || >=11.0.0}
    os: [darwin]
    requiresBuild: true
    optional: true

  /function-bind@1.1.2:
    resolution: {integrity: sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==}

  /function.prototype.name@1.1.6:
    resolution: {integrity: sha512-Z5kx79swU5P27WEayXM1tBi5Ze/lbIyiNgU3qyXUOf9b2rgXYyF9Dy9Cx+IQv/Lc8WCG6L82zwUPpSS9hGehIg==}
    engines: {node: '>= 0.4'}
    dependencies:
      call-bind: 1.0.5
      define-properties: 1.2.1
      es-abstract: 1.22.3
      functions-have-names: 1.2.3
    dev: true

  /functional-red-black-tree@1.0.1:
    resolution: {integrity: sha512-dsKNQNdj6xA3T+QlADDA7mOSlX0qiMINjn0cgr+eGHGsbSHzTabcIogz2+p/iqP1Xs6EP/sS2SbqH+brGTbq0g==}
    dev: true

  /functions-have-names@1.2.3:
    resolution: {integrity: sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==}
    dev: true

  /gensync@1.0.0-beta.2:
    resolution: {integrity: sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==}
    engines: {node: '>=6.9.0'}

  /get-intrinsic@1.2.2:
    resolution: {integrity: sha512-0gSo4ml/0j98Y3lngkFEot/zhiCeWsbYIlZ+uZOVgzLyLaUw7wxUL+nCTP0XJvJg1AXulJRI3UJi8GsbDuxdGA==}
    dependencies:
      function-bind: 1.1.2
      has-proto: 1.0.1
      has-symbols: 1.0.3
      hasown: 2.0.0
    dev: true

  /get-stream@3.0.0:
    resolution: {integrity: sha512-GlhdIUuVakc8SJ6kK0zAFbiGzRFzNnY4jUuEbV9UROo4Y+0Ny4fjvcZFVTeDA4odpFyOQzaw6hXukJSq/f28sQ==}
    engines: {node: '>=4'}
    dev: false

  /get-stream@6.0.1:
    resolution: {integrity: sha512-ts6Wi+2j3jQjqi70w5AlN8DFnkSwC+MqmxEzdEALB2qXZYV3X/b1CTfgPLGJNMeAWxdPfU8FO1ms3NUfaHCPYg==}
    engines: {node: '>=10'}
    dev: true

  /get-symbol-description@1.0.0:
    resolution: {integrity: sha512-2EmdH1YvIQiZpltCNgkuiUnyukzxM/R6NDJX31Ke3BG1Nq5b0S2PhX59UKi9vZpPDQVdqn+1IcaAwnzTT5vCjw==}
    engines: {node: '>= 0.4'}
    dependencies:
      call-bind: 1.0.5
      get-intrinsic: 1.2.2
    dev: true

  /get-tsconfig@4.7.2:
    resolution: {integrity: sha512-wuMsz4leaj5hbGgg4IvDU0bqJagpftG5l5cXIAvo8uZrqn0NJqwtfupTN00VnkQJPcIRrxYrm1Ue24btpCha2A==}
    dependencies:
      resolve-pkg-maps: 1.0.0
    dev: true

  /git-up@7.0.0:
    resolution: {integrity: sha512-ONdIrbBCFusq1Oy0sC71F5azx8bVkvtZtMJAsv+a6lz5YAmbNnLD6HAB4gptHZVLPR8S2/kVN6Gab7lryq5+lQ==}
    dependencies:
      is-ssh: 1.4.0
      parse-url: 8.1.0
    dev: false

  /git-url-parse@13.1.1:
    resolution: {integrity: sha512-PCFJyeSSdtnbfhSNRw9Wk96dDCNx+sogTe4YNXeXSJxt7xz5hvXekuRn9JX7m+Mf4OscCu8h+mtAl3+h5Fo8lQ==}
    dependencies:
      git-up: 7.0.0
    dev: false

  /github-slugger@2.0.0:
    resolution: {integrity: sha512-IaOQ9puYtjrkq7Y0Ygl9KDZnrf/aiUJYUpVf89y8kyaxbRG7Y1SrX/jaumrv81vc61+kiMempujsM3Yw7w5qcw==}
    dev: false

  /glob-parent@5.1.2:
    resolution: {integrity: sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==}
    engines: {node: '>= 6'}
    dependencies:
      is-glob: 4.0.3

  /glob-parent@6.0.2:
    resolution: {integrity: sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==}
    engines: {node: '>=10.13.0'}
    dependencies:
      is-glob: 4.0.3

  /glob@7.1.6:
    resolution: {integrity: sha512-LwaxwyZ72Lk7vZINtNNrywX0ZuLyStrdDtabefZKAY5ZGJhVtgdznluResxNmPitE0SAO+O26sWTHeKSI2wMBA==}
    dependencies:
      fs.realpath: 1.0.0
      inflight: 1.0.6
      inherits: 2.0.4
      minimatch: 3.1.2
      once: 1.4.0
      path-is-absolute: 1.0.1

  /glob@7.1.7:
    resolution: {integrity: sha512-OvD9ENzPLbegENnYP5UUfJIirTg4+XwMWGaQfQTY0JenxNvvIKP3U3/tAQSPIu/lHxXYSZmpXlUHeqAIdKzBLQ==}
    dependencies:
      fs.realpath: 1.0.0
      inflight: 1.0.6
      inherits: 2.0.4
      minimatch: 3.1.2
      once: 1.4.0
      path-is-absolute: 1.0.1
    dev: true

  /glob@7.2.3:
    resolution: {integrity: sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==}
    dependencies:
      fs.realpath: 1.0.0
      inflight: 1.0.6
      inherits: 2.0.4
      minimatch: 3.1.2
      once: 1.4.0
      path-is-absolute: 1.0.1
    dev: true

  /globals@11.12.0:
    resolution: {integrity: sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==}
    engines: {node: '>=4'}

  /globals@13.23.0:
    resolution: {integrity: sha512-XAmF0RjlrjY23MA51q3HltdlGxUpXPvg0GioKiD9X6HD28iMjo2dKC8Vqwm7lne4GNr78+RHTfliktR6ZH09wA==}
    engines: {node: '>=8'}
    dependencies:
      type-fest: 0.20.2
    dev: true

  /globalthis@1.0.3:
    resolution: {integrity: sha512-sFdI5LyBiNTHjRd7cGPWapiHWMOXKyuBNX/cWJ3NfzrZQVa8GI/8cofCl74AOVqq9W5kNmguTIzJ/1s2gyI9wA==}
    engines: {node: '>= 0.4'}
    dependencies:
      define-properties: 1.2.1
    dev: true

  /globby@11.1.0:
    resolution: {integrity: sha512-jhIXaOzy1sb8IyocaruWSn1TjmnBVs8Ayhcy83rmxNJ8q2uWKCAj3CnJY+KpGSXCueAPc0i05kVvVKtP1t9S3g==}
    engines: {node: '>=10'}
    dependencies:
      array-union: 2.1.0
      dir-glob: 3.0.1
      fast-glob: 3.3.1
      ignore: 5.2.4
      merge2: 1.4.1
      slash: 3.0.0
    dev: true

  /gopd@1.0.1:
    resolution: {integrity: sha512-d65bNlIadxvpb/A2abVdlqKqV563juRnZ1Wtk6s1sIR8uNsXR70xqIzVqxVf1eTqDunwT2MkczEeaezCKTZhwA==}
    dependencies:
      get-intrinsic: 1.2.2
    dev: true

  /graceful-fs@4.2.11:
    resolution: {integrity: sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==}

  /gray-matter@4.0.3:
    resolution: {integrity: sha512-5v6yZd4JK3eMI3FqqCouswVqwugaA9r4dNZB1wwcmrD02QkV5H0y7XBQW8QwQqEaZY1pM9aqORSORhJRdNK44Q==}
    engines: {node: '>=6.0'}
    dependencies:
      js-yaml: 3.14.1
      kind-of: 6.0.3
      section-matter: 1.0.0
      strip-bom-string: 1.0.0
    dev: false

  /has-bigints@1.0.2:
    resolution: {integrity: sha512-tSvCKtBr9lkF0Ex0aQiP9N+OpV4zi2r/Nee5VkRDbaqv35RLYMzbwQfFSZZH0kR+Rd6302UJZ2p/bJCEoR3VoQ==}
    dev: true

  /has-flag@2.0.0:
    resolution: {integrity: sha512-P+1n3MnwjR/Epg9BBo1KT8qbye2g2Ou4sFumihwt6I4tsUX7jnLcX4BTOSKg/B1ZrIYMN9FcEnG4x5a7NB8Eng==}
    engines: {node: '>=0.10.0'}
    dev: false

  /has-flag@3.0.0:
    resolution: {integrity: sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==}
    engines: {node: '>=4'}

  /has-flag@4.0.0:
    resolution: {integrity: sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==}
    engines: {node: '>=8'}
    dev: true

  /has-property-descriptors@1.0.1:
    resolution: {integrity: sha512-VsX8eaIewvas0xnvinAe9bw4WfIeODpGYikiWYLH+dma0Jw6KHYqWiWfhQlgOVK8D6PvjubK5Uc4P0iIhIcNVg==}
    dependencies:
      get-intrinsic: 1.2.2
    dev: true

  /has-proto@1.0.1:
    resolution: {integrity: sha512-7qE+iP+O+bgF9clE5+UoBFzE65mlBiVj3tKCrlNQ0Ogwm0BjpT/gK4SlLYDMybDh5I3TCTKnPPa0oMG7JDYrhg==}
    engines: {node: '>= 0.4'}
    dev: true

  /has-symbols@1.0.3:
    resolution: {integrity: sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A==}
    engines: {node: '>= 0.4'}
    dev: true

  /has-tostringtag@1.0.0:
    resolution: {integrity: sha512-kFjcSNhnlGV1kyoGk7OXKSawH5JOb/LzUc5w9B02hOTO0dfFRjbHQKvg1d6cf3HbeUmtU9VbbV3qzZ2Teh97WQ==}
    engines: {node: '>= 0.4'}
    dependencies:
      has-symbols: 1.0.3
    dev: true

  /has@1.0.4:
    resolution: {integrity: sha512-qdSAmqLF6209RFj4VVItywPMbm3vWylknmB3nvNiUIs72xAimcM8nVYxYr7ncvZq5qzk9MKIZR8ijqD/1QuYjQ==}
    engines: {node: '>= 0.4.0'}
    dev: true

  /hash-obj@4.0.0:
    resolution: {integrity: sha512-FwO1BUVWkyHasWDW4S8o0ssQXjvyghLV2rfVhnN36b2bbcj45eGiuzdn9XOvOpjV3TKQD7Gm2BWNXdE9V4KKYg==}
    engines: {node: '>=12'}
    dependencies:
      is-obj: 3.0.0
      sort-keys: 5.0.0
      type-fest: 1.4.0
    dev: false

  /hasown@2.0.0:
    resolution: {integrity: sha512-vUptKVTpIJhcczKBbgnS+RtcuYMB8+oNzPK2/Hp3hanz8JmpATdmmgLgSaadVREkDm+e2giHwY3ZRkyjSIDDFA==}
    engines: {node: '>= 0.4'}
    dependencies:
      function-bind: 1.1.2

  /hast-util-from-dom@5.0.0:
    resolution: {integrity: sha512-d6235voAp/XR3Hh5uy7aGLbM3S4KamdW0WEgOaU1YoewnuYw4HXb5eRtv9g65m/RFGEfUY1Mw4UqCc5Y8L4Stg==}
    dependencies:
      '@types/hast': 3.0.2
      hastscript: 8.0.0
      web-namespaces: 2.0.1
    dev: false

  /hast-util-from-html-isomorphic@2.0.0:
    resolution: {integrity: sha512-zJfpXq44yff2hmE0XmwEOzdWin5xwH+QIhMLOScpX91e/NSGPsAzNCvLQDIEPyO2TXi+lBmU6hjLIhV8MwP2kw==}
    dependencies:
      '@types/hast': 3.0.2
      hast-util-from-dom: 5.0.0
      hast-util-from-html: 2.0.1
      unist-util-remove-position: 5.0.0
    dev: false

  /hast-util-from-html@2.0.1:
    resolution: {integrity: sha512-RXQBLMl9kjKVNkJTIO6bZyb2n+cUH8LFaSSzo82jiLT6Tfc+Pt7VQCS+/h3YwG4jaNE2TA2sdJisGWR+aJrp0g==}
    dependencies:
      '@types/hast': 3.0.2
      devlop: 1.1.0
      hast-util-from-parse5: 8.0.1
      parse5: 7.1.2
      vfile: 6.0.1
      vfile-message: 4.0.2
    dev: false

  /hast-util-from-parse5@8.0.1:
    resolution: {integrity: sha512-Er/Iixbc7IEa7r/XLtuG52zoqn/b3Xng/w6aZQ0xGVxzhw5xUFxcRqdPzP6yFi/4HBYRaifaI5fQ1RH8n0ZeOQ==}
    dependencies:
      '@types/hast': 3.0.2
      '@types/unist': 3.0.1
      devlop: 1.1.0
      hastscript: 8.0.0
      property-information: 6.3.0
      vfile: 6.0.1
      vfile-location: 5.0.2
      web-namespaces: 2.0.1
    dev: false

  /hast-util-is-element@3.0.0:
    resolution: {integrity: sha512-Val9mnv2IWpLbNPqc/pUem+a7Ipj2aHacCwgNfTiK0vJKl0LF+4Ba4+v1oPHFpf3bLYmreq0/l3Gud9S5OH42g==}
    dependencies:
      '@types/hast': 3.0.2
    dev: false

  /hast-util-parse-selector@4.0.0:
    resolution: {integrity: sha512-wkQCkSYoOGCRKERFWcxMVMOcYE2K1AaNLU8DXS9arxnLOUEWbOXKXiJUNzEpqZ3JOKpnha3jkFrumEjVliDe7A==}
    dependencies:
      '@types/hast': 3.0.2
    dev: false

  /hast-util-raw@9.0.1:
    resolution: {integrity: sha512-5m1gmba658Q+lO5uqL5YNGQWeh1MYWZbZmWrM5lncdcuiXuo5E2HT/CIOp0rLF8ksfSwiCVJ3twlgVRyTGThGA==}
    dependencies:
      '@types/hast': 3.0.2
      '@types/unist': 3.0.1
      '@ungap/structured-clone': 1.2.0
      hast-util-from-parse5: 8.0.1
      hast-util-to-parse5: 8.0.0
      html-void-elements: 3.0.0
      mdast-util-to-hast: 13.0.2
      parse5: 7.1.2
      unist-util-position: 5.0.0
      unist-util-visit: 5.0.0
      vfile: 6.0.1
      web-namespaces: 2.0.1
      zwitch: 2.0.4
    dev: false

  /hast-util-to-estree@2.3.3:
    resolution: {integrity: sha512-ihhPIUPxN0v0w6M5+IiAZZrn0LH2uZomeWwhn7uP7avZC6TE7lIiEh2yBMPr5+zi1aUCXq6VoYRgs2Bw9xmycQ==}
    dependencies:
      '@types/estree': 1.0.3
      '@types/estree-jsx': 1.0.2
      '@types/hast': 2.3.7
      '@types/unist': 2.0.9
      comma-separated-tokens: 2.0.3
      estree-util-attach-comments: 2.1.1
      estree-util-is-identifier-name: 2.1.0
      hast-util-whitespace: 2.0.1
      mdast-util-mdx-expression: 1.3.2
      mdast-util-mdxjs-esm: 1.3.1
      property-information: 6.3.0
      space-separated-tokens: 2.0.2
      style-to-object: 0.4.4
      unist-util-position: 4.0.4
      zwitch: 2.0.4
    transitivePeerDependencies:
      - supports-color
    dev: false

  /hast-util-to-parse5@8.0.0:
    resolution: {integrity: sha512-3KKrV5ZVI8if87DVSi1vDeByYrkGzg4mEfeu4alwgmmIeARiBLKCZS2uw5Gb6nU9x9Yufyj3iudm6i7nl52PFw==}
    dependencies:
      '@types/hast': 3.0.2
      comma-separated-tokens: 2.0.3
      devlop: 1.1.0
      property-information: 6.3.0
      space-separated-tokens: 2.0.2
      web-namespaces: 2.0.1
      zwitch: 2.0.4
    dev: false

  /hast-util-to-text@4.0.0:
    resolution: {integrity: sha512-EWiE1FSArNBPUo1cKWtzqgnuRQwEeQbQtnFJRYV1hb1BWDgrAlBU0ExptvZMM/KSA82cDpm2sFGf3Dmc5Mza3w==}
    dependencies:
      '@types/hast': 3.0.2
      '@types/unist': 3.0.1
      hast-util-is-element: 3.0.0
      unist-util-find-after: 5.0.0
    dev: false

  /hast-util-whitespace@2.0.1:
    resolution: {integrity: sha512-nAxA0v8+vXSBDt3AnRUNjyRIQ0rD+ntpbAp4LnPkumc5M9yUbSMa4XDU9Q6etY4f1Wp4bNgvc1yjiZtsTTrSng==}
    dev: false

  /hastscript@8.0.0:
    resolution: {integrity: sha512-dMOtzCEd3ABUeSIISmrETiKuyydk1w0pa+gE/uormcTpSYuaNJPbX1NU3JLyscSLjwAQM8bWMhhIlnCqnRvDTw==}
    dependencies:
      '@types/hast': 3.0.2
      comma-separated-tokens: 2.0.3
      hast-util-parse-selector: 4.0.0
      property-information: 6.3.0
      space-separated-tokens: 2.0.2
    dev: false

  /heap@0.2.7:
    resolution: {integrity: sha512-2bsegYkkHO+h/9MGbn6KWcE45cHZgPANo5LXF7EvWdT0yT2EguSVO1nDgU5c8+ZOPwp2vMNa7YFsJhVcDR9Sdg==}
    dev: false

  /hex-rgb@4.3.0:
    resolution: {integrity: sha512-Ox1pJVrDCyGHMG9CFg1tmrRUMRPRsAWYc/PinY0XzJU4K7y7vjNoLKIQ7BR5UJMCxNN8EM1MNDmHWA/B3aZUuw==}
    engines: {node: '>=6'}
    dev: false

  /html-void-elements@3.0.0:
    resolution: {integrity: sha512-bEqo66MRXsUGxWHV5IP0PUiAWwoEjba4VCzg0LjFJBpchPaTfyfCKTG6bc5F8ucKec3q5y6qOdGyYTSBEvhCrg==}
    dev: false

  /human-signals@2.1.0:
    resolution: {integrity: sha512-B4FFZ6q/T2jhhksgkbEW3HBvWIfDW85snkQgawt07S7J5QXTk6BkNV+0yAeZrM5QpMAdYlocGoljn0sJ/WQkFw==}
    engines: {node: '>=10.17.0'}
    dev: true

  /human-signals@4.3.1:
    resolution: {integrity: sha512-nZXjEF2nbo7lIw3mgYjItAfgQXog3OjJogSbKa2CQIIvSGWcKgeJnQlNXip6NglNzYH45nSRiEVimMvYL8DDqQ==}
    engines: {node: '>=14.18.0'}
    dev: true

  /iconv-lite@0.6.3:
    resolution: {integrity: sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==}
    engines: {node: '>=0.10.0'}
    dependencies:
      safer-buffer: 2.1.2
    dev: false

  /ieee754@1.2.1:
    resolution: {integrity: sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA==}
    dev: false

  /ignore@4.0.6:
    resolution: {integrity: sha512-cyFDKrqc/YdcWFniJhzI42+AzS+gNwmUzOSFcRCQYwySuBBBy/KjuxWLZ/FHEH6Moq1NizMOBWyTcv8O4OZIMg==}
    engines: {node: '>= 4'}
    dev: true

  /ignore@5.2.4:
    resolution: {integrity: sha512-MAb38BcSbH0eHNBxn7ql2NH/kX33OkB3lZ1BNdh7ENeRChHTYsTvWrMubiIAMNS2llXEEgZ1MUOBtXChP3kaFQ==}
    engines: {node: '>= 4'}
    dev: true

  /import-fresh@3.3.0:
    resolution: {integrity: sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==}
    engines: {node: '>=6'}
    dependencies:
      parent-module: 1.0.1
      resolve-from: 4.0.0
    dev: true

  /imurmurhash@0.1.4:
    resolution: {integrity: sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==}
    engines: {node: '>=0.8.19'}
    dev: true

  /inflight@1.0.6:
    resolution: {integrity: sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==}
    dependencies:
      once: 1.4.0
      wrappy: 1.0.2

  /inherits@2.0.4:
    resolution: {integrity: sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==}

  /inline-style-parser@0.1.1:
    resolution: {integrity: sha512-7NXolsK4CAS5+xvdj5OMMbI962hU/wvwoxk+LWR9Ek9bVtyuuYScDN6eS0rUm6TxApFpw7CX1o4uJzcd4AyD3Q==}
    dev: false

  /internal-slot@1.0.6:
    resolution: {integrity: sha512-Xj6dv+PsbtwyPpEflsejS+oIZxmMlV44zAhG479uYu89MsjcYOhCFnNyKrkJrihbsiasQyY0afoCl/9BLR65bg==}
    engines: {node: '>= 0.4'}
    dependencies:
      get-intrinsic: 1.2.2
      hasown: 2.0.0
      side-channel: 1.0.4
    dev: true

  /internmap@1.0.1:
    resolution: {integrity: sha512-lDB5YccMydFBtasVtxnZ3MRBHuaoE8GKsppq+EchKL2U4nK/DmEpPHNH8MZe5HkMtpSiTSOZwfN0tzYjO/lJEw==}
    dev: false

  /internmap@2.0.3:
    resolution: {integrity: sha512-5Hh7Y1wQbvY5ooGgPbDaL5iYLAPzMTUrjMulskHLH6wnv/A+1q5rgEaiuqEjB+oxGXIVZs1FF+R/KPN3ZSQYYg==}
    engines: {node: '>=12'}
    dev: false

  /intersection-observer@0.10.0:
    resolution: {integrity: sha512-fn4bQ0Xq8FTej09YC/jqKZwtijpvARlRp6wxL5WTA6yPe2YWSJ5RJh7Nm79rK2qB0wr6iDQzH60XGq5V/7u8YQ==}
    dev: false

  /intersection-observer@0.12.2:
    resolution: {integrity: sha512-7m1vEcPCxXYI8HqnL8CKI6siDyD+eIWSwgB3DZA+ZTogxk9I4CDnj4wilt9x/+/QbHI4YG5YZNmC6458/e9Ktg==}
    dev: false

  /is-alphabetical@2.0.1:
    resolution: {integrity: sha512-FWyyY60MeTNyeSRpkM2Iry0G9hpr7/9kD40mD/cGQEuilcZYS4okz8SN2Q6rLCJ8gbCt6fN+rC+6tMGS99LaxQ==}
    dev: false

  /is-alphanumerical@2.0.1:
    resolution: {integrity: sha512-hmbYhX/9MUMF5uh7tOXyK/n0ZvWpad5caBA17GsC6vyuCqaWliRG5K1qS9inmUhEMaOBIW7/whAnSwveW/LtZw==}
    dependencies:
      is-alphabetical: 2.0.1
      is-decimal: 2.0.1
    dev: false

  /is-array-buffer@3.0.2:
    resolution: {integrity: sha512-y+FyyR/w8vfIRq4eQcM1EYgSTnmHXPqaF+IgzgraytCFq5Xh8lllDVmAZolPJiZttZLeFSINPYMaEJ7/vWUa1w==}
    dependencies:
      call-bind: 1.0.5
      get-intrinsic: 1.2.2
      is-typed-array: 1.1.12
    dev: true

  /is-arrayish@0.2.1:
    resolution: {integrity: sha512-zz06S8t0ozoDXMG+ube26zeCTNXcKIPJZJi8hBrF4idCLms4CG9QtK7qBl1boi5ODzFpjswb5JPmHCbMpjaYzg==}
    dev: true

  /is-async-function@2.0.0:
    resolution: {integrity: sha512-Y1JXKrfykRJGdlDwdKlLpLyMIiWqWvuSd17TvZk68PLAOGOoF4Xyav1z0Xhoi+gCYjZVeC5SI+hYFOfvXmGRCA==}
    engines: {node: '>= 0.4'}
    dependencies:
      has-tostringtag: 1.0.0
    dev: true

  /is-bigint@1.0.4:
    resolution: {integrity: sha512-zB9CruMamjym81i2JZ3UMn54PKGsQzsJeo6xvN3HJJ4CAsQNB6iRutp2To77OfCNuoxspsIhzaPoO1zyCEhFOg==}
    dependencies:
      has-bigints: 1.0.2
    dev: true

  /is-binary-path@2.1.0:
    resolution: {integrity: sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==}
    engines: {node: '>=8'}
    dependencies:
      binary-extensions: 2.2.0

  /is-boolean-object@1.1.2:
    resolution: {integrity: sha512-gDYaKHJmnj4aWxyj6YHyXVpdQawtVLHU5cb+eztPGczf6cjuTdwve5ZIEfgXqH4e57An1D1AKf8CZ3kYrQRqYA==}
    engines: {node: '>= 0.4'}
    dependencies:
      call-bind: 1.0.5
      has-tostringtag: 1.0.0
    dev: true

  /is-buffer@2.0.5:
    resolution: {integrity: sha512-i2R6zNFDwgEHJyQUtJEk0XFi1i0dPFn/oqjK3/vPCcDeJvW5NQ83V8QbicfF1SupOaB0h8ntgBC2YiE7dfyctQ==}
    engines: {node: '>=4'}
    dev: false

  /is-callable@1.2.7:
    resolution: {integrity: sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==}
    engines: {node: '>= 0.4'}
    dev: true

  /is-core-module@2.13.1:
    resolution: {integrity: sha512-hHrIjvZsftOsvKSn2TRYl63zvxsgE0K+0mYMoH6gD4omR5IWB2KynivBQczo3+wF1cCkjzvptnI9Q0sPU66ilw==}
    dependencies:
      hasown: 2.0.0

  /is-date-object@1.0.5:
    resolution: {integrity: sha512-9YQaSxsAiSwcvS33MBk3wTCVnWK+HhF8VZR2jRxehM16QcVOdHqPn4VPHmRK4lSr38n9JriurInLcP90xsYNfQ==}
    engines: {node: '>= 0.4'}
    dependencies:
      has-tostringtag: 1.0.0
    dev: true

  /is-decimal@2.0.1:
    resolution: {integrity: sha512-AAB9hiomQs5DXWcRB1rqsxGUstbRroFOPPVAomNk/3XHR5JyEZChOyTWe2oayKnsSsr/kcGqF+z6yuH6HHpN0A==}
    dev: false

  /is-docker@2.2.1:
    resolution: {integrity: sha512-F+i2BKsFrH66iaUFc0woD8sLy8getkwTwtOBjvs56Cx4CgJDeKQeqfz8wAYiSb8JOprWhHH5p77PbmYCvvUuXQ==}
    engines: {node: '>=8'}
    hasBin: true
    dev: true

  /is-docker@3.0.0:
    resolution: {integrity: sha512-eljcgEDlEns/7AXFosB5K/2nCM4P7FQPkGc/DWLy5rmFEWvZayGrik1d9/QIY5nJ4f9YsVvBkA6kJpHn9rISdQ==}
    engines: {node: ^12.20.0 || ^14.13.1 || >=16.0.0}
    hasBin: true
    dev: true

  /is-extendable@0.1.1:
    resolution: {integrity: sha512-5BMULNob1vgFX6EjQw5izWDxrecWK9AM72rugNr0TFldMOi0fj6Jk+zeKIt0xGj4cEfQIJth4w3OKWOJ4f+AFw==}
    engines: {node: '>=0.10.0'}
    dev: false

  /is-extglob@2.1.1:
    resolution: {integrity: sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==}
    engines: {node: '>=0.10.0'}

  /is-finalizationregistry@1.0.2:
    resolution: {integrity: sha512-0by5vtUJs8iFQb5TYUHHPudOR+qXYIMKtiUzvLIZITZUjknFmziyBJuLhVRc+Ds0dREFlskDNJKYIdIzu/9pfw==}
    dependencies:
      call-bind: 1.0.5
    dev: true

  /is-generator-function@1.0.10:
    resolution: {integrity: sha512-jsEjy9l3yiXEQ+PsXdmBwEPcOxaXWLspKdplFUVI9vq1iZgIekeC0L167qeu86czQaxed3q/Uzuw0swL0irL8A==}
    engines: {node: '>= 0.4'}
    dependencies:
      has-tostringtag: 1.0.0
    dev: true

  /is-glob@4.0.3:
    resolution: {integrity: sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==}
    engines: {node: '>=0.10.0'}
    dependencies:
      is-extglob: 2.1.1

  /is-hexadecimal@2.0.1:
    resolution: {integrity: sha512-DgZQp241c8oO6cA1SbTEWiXeoxV42vlcJxgH+B3hi1AiqqKruZR3ZGF8In3fj4+/y/7rHvlOZLZtgJ/4ttYGZg==}
    dev: false

  /is-inside-container@1.0.0:
    resolution: {integrity: sha512-KIYLCCJghfHZxqjYBE7rEy0OBuTd5xCHS7tHVgvCLkx7StIoaxwNW3hCALgEUjFfeRk+MG/Qxmp/vtETEF3tRA==}
    engines: {node: '>=14.16'}
    hasBin: true
    dependencies:
      is-docker: 3.0.0
    dev: true

  /is-map@2.0.2:
    resolution: {integrity: sha512-cOZFQQozTha1f4MxLFzlgKYPTyj26picdZTx82hbc/Xf4K/tZOOXSCkMvU4pKioRXGDLJRn0GM7Upe7kR721yg==}
    dev: true

  /is-negative-zero@2.0.2:
    resolution: {integrity: sha512-dqJvarLawXsFbNDeJW7zAz8ItJ9cd28YufuuFzh0G8pNHjJMnY08Dv7sYX2uF5UpQOwieAeOExEYAWWfu7ZZUA==}
    engines: {node: '>= 0.4'}
    dev: true

  /is-number-object@1.0.7:
    resolution: {integrity: sha512-k1U0IRzLMo7ZlYIfzRu23Oh6MiIFasgpb9X76eqfFZAqwH44UI4KTBvBYIZ1dSL9ZzChTB9ShHfLkR4pdW5krQ==}
    engines: {node: '>= 0.4'}
    dependencies:
      has-tostringtag: 1.0.0
    dev: true

  /is-number@7.0.0:
    resolution: {integrity: sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==}
    engines: {node: '>=0.12.0'}

  /is-obj@3.0.0:
    resolution: {integrity: sha512-IlsXEHOjtKhpN8r/tRFj2nDyTmHvcfNeu/nrRIcXE17ROeatXchkojffa1SpdqW4cr/Fj6QkEf/Gn4zf6KKvEQ==}
    engines: {node: '>=12'}
    dev: false

  /is-plain-obj@3.0.0:
    resolution: {integrity: sha512-gwsOE28k+23GP1B6vFl1oVh/WOzmawBrKwo5Ev6wMKzPkaXaCDIQKzLnvsA42DRlbVTWorkgTKIviAKCWkfUwA==}
    engines: {node: '>=10'}
    dev: false

  /is-plain-obj@4.1.0:
    resolution: {integrity: sha512-+Pgi+vMuUNkJyExiMBt5IlFoMyKnr5zhJ4Uspz58WOhBF5QoIZkFyNHIbBAtHwzVAgk5RtndVNsDRN61/mmDqg==}
    engines: {node: '>=12'}
    dev: false

  /is-reference@3.0.2:
    resolution: {integrity: sha512-v3rht/LgVcsdZa3O2Nqs+NMowLOxeOm7Ay9+/ARQ2F+qEoANRcqrjAZKGN0v8ymUetZGgkp26LTnGT7H0Qo9Pg==}
    dependencies:
      '@types/estree': 1.0.3
    dev: false

  /is-regex@1.1.4:
    resolution: {integrity: sha512-kvRdxDsxZjhzUX07ZnLydzS1TU/TJlTUHHY4YLL87e37oUA49DfkLqgy+VjFocowy29cKvcSiu+kIv728jTTVg==}
    engines: {node: '>= 0.4'}
    dependencies:
      call-bind: 1.0.5
      has-tostringtag: 1.0.0
    dev: true

  /is-set@2.0.2:
    resolution: {integrity: sha512-+2cnTEZeY5z/iXGbLhPrOAaK/Mau5k5eXq9j14CpRTftq0pAJu2MwVRSZhyZWBzx3o6X795Lz6Bpb6R0GKf37g==}
    dev: true

  /is-shared-array-buffer@1.0.2:
    resolution: {integrity: sha512-sqN2UDu1/0y6uvXyStCOzyhAjCSlHceFoMKJW8W9EU9cvic/QdsZ0kEU93HEy3IUEFZIiH/3w+AH/UQbPHNdhA==}
    dependencies:
      call-bind: 1.0.5
    dev: true

  /is-ssh@1.4.0:
    resolution: {integrity: sha512-x7+VxdxOdlV3CYpjvRLBv5Lo9OJerlYanjwFrPR9fuGPjCiNiCzFgAWpiLAohSbsnH4ZAys3SBh+hq5rJosxUQ==}
    dependencies:
      protocols: 2.0.1
    dev: false

  /is-stream@1.1.0:
    resolution: {integrity: sha512-uQPm8kcs47jx38atAcWTVxyltQYoPT68y9aWYdV6yWXSyW8mzSat0TL6CiWdZeCdF3KrAvpVtnHbTv4RN+rqdQ==}
    engines: {node: '>=0.10.0'}
    dev: false

  /is-stream@2.0.1:
    resolution: {integrity: sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg==}
    engines: {node: '>=8'}
    dev: true

  /is-stream@3.0.0:
    resolution: {integrity: sha512-LnQR4bZ9IADDRSkvpqMGvt/tEJWclzklNgSw48V5EAaAeDd6qGvN8ei6k5p0tvxSR171VmGyHuTiAOfxAbr8kA==}
    engines: {node: ^12.20.0 || ^14.13.1 || >=16.0.0}
    dev: true

  /is-string@1.0.7:
    resolution: {integrity: sha512-tE2UXzivje6ofPW7l23cjDOMa09gb7xlAqG6jG5ej6uPV32TlWP3NKPigtaGeHNu9fohccRYvIiZMfOOnOYUtg==}
    engines: {node: '>= 0.4'}
    dependencies:
      has-tostringtag: 1.0.0
    dev: true

  /is-symbol@1.0.4:
    resolution: {integrity: sha512-C/CPBqKWnvdcxqIARxyOh4v1UUEOCHpgDa0WYgpKDFMszcrPcffg5uhwSgPCLD2WWxmq6isisz87tzT01tuGhg==}
    engines: {node: '>= 0.4'}
    dependencies:
      has-symbols: 1.0.3
    dev: true

  /is-typed-array@1.1.12:
    resolution: {integrity: sha512-Z14TF2JNG8Lss5/HMqt0//T9JeHXttXy5pH/DBU4vi98ozO2btxzq9MwYDZYnKwU8nRsz/+GVFVRDq3DkVuSPg==}
    engines: {node: '>= 0.4'}
    dependencies:
      which-typed-array: 1.1.13
    dev: true

  /is-weakmap@2.0.1:
    resolution: {integrity: sha512-NSBR4kH5oVj1Uwvv970ruUkCV7O1mzgVFO4/rev2cLRda9Tm9HrL70ZPut4rOHgY0FNrUu9BCbXA2sdQ+x0chA==}
    dev: true

  /is-weakref@1.0.2:
    resolution: {integrity: sha512-qctsuLZmIQ0+vSSMfoVvyFe2+GSEvnmZ2ezTup1SBse9+twCCeial6EEi3Nc2KFcf6+qz2FBPnjXsk8xhKSaPQ==}
    dependencies:
      call-bind: 1.0.5
    dev: true

  /is-weakset@2.0.2:
    resolution: {integrity: sha512-t2yVvttHkQktwnNNmBQ98AhENLdPUTDTE21uPqAQ0ARwQfGeQKRVS0NNurH7bTf7RrvcVn1OOge45CnBeHCSmg==}
    dependencies:
      call-bind: 1.0.5
      get-intrinsic: 1.2.2
    dev: true

  /is-wsl@2.2.0:
    resolution: {integrity: sha512-fKzAra0rGJUUBwGBgNkHZuToZcn+TtXHpeCgmkMJMMYx1sQDYaCSyjJBSCa2nH1DGm7s3n1oBnohoVTBaN7Lww==}
    engines: {node: '>=8'}
    dependencies:
      is-docker: 2.2.1
    dev: true

  /isarray@2.0.5:
    resolution: {integrity: sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==}
    dev: true

  /isexe@2.0.0:
    resolution: {integrity: sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==}

  /iterator.prototype@1.1.2:
    resolution: {integrity: sha512-DR33HMMr8EzwuRL8Y9D3u2BMj8+RqSE850jfGu59kS7tbmPLzGkZmVSfyCFSDxuZiEY6Rzt3T2NA/qU+NwVj1w==}
    dependencies:
      define-properties: 1.2.1
      get-intrinsic: 1.2.2
      has-symbols: 1.0.3
      reflect.getprototypeof: 1.0.4
      set-function-name: 2.0.1
    dev: true

  /jiti@1.20.0:
    resolution: {integrity: sha512-3TV69ZbrvV6U5DfQimop50jE9Dl6J8O1ja1dvBbMba/sZ3YBEQqJ2VZRoQPVnhlzjNtU1vaXRZVrVjU4qtm8yA==}
    hasBin: true

  /js-tokens@4.0.0:
    resolution: {integrity: sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==}

  /js-yaml@3.14.1:
    resolution: {integrity: sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==}
    hasBin: true
    dependencies:
      argparse: 1.0.10
      esprima: 4.0.1
    dev: false

  /js-yaml@4.1.0:
    resolution: {integrity: sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==}
    hasBin: true
    dependencies:
      argparse: 2.0.1

  /jsesc@0.5.0:
    resolution: {integrity: sha512-uZz5UnB7u4T9LvwmFqXii7pZSouaRPorGs5who1Ip7VO0wxanFvBL7GkM6dTHlgX+jhBApRetaWpnDabOeTcnA==}
    hasBin: true
    dev: true

  /jsesc@2.5.2:
    resolution: {integrity: sha512-OYu7XEzjkCQ3C5Ps3QIZsQfNpqoJyZZA99wd9aWd05NCtC5pWOkShK2mkL6HXQR6/Cy2lbNdPlZBpuQHXE63gA==}
    engines: {node: '>=4'}
    hasBin: true

  /json-buffer@3.0.1:
    resolution: {integrity: sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==}
    dev: true

  /json-parse-even-better-errors@2.3.1:
    resolution: {integrity: sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w==}
    dev: true

  /json-schema-traverse@0.4.1:
    resolution: {integrity: sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==}
    dev: true

  /json-stable-stringify-without-jsonify@1.0.1:
    resolution: {integrity: sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==}
    dev: true

  /json5@1.0.2:
    resolution: {integrity: sha512-g1MWMLBiz8FKi1e4w0UyVL3w+iJceWAFBAaBnnGKOpNa5f8TLktkbre1+s6oICydWAm+HRUGTmI+//xv2hvXYA==}
    hasBin: true
    dependencies:
      minimist: 1.2.8
    dev: true

  /json5@2.2.3:
    resolution: {integrity: sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==}
    engines: {node: '>=6'}
    hasBin: true

  /jsonc-parser@3.2.0:
    resolution: {integrity: sha512-gfFQZrcTc8CnKXp6Y4/CBT3fTc0OVuDofpre4aEeEpSBPV5X5v4+Vmx+8snU7RLPrNHPKSgLxGo9YuQzz20o+w==}
    dev: false

  /jsx-ast-utils@3.3.5:
    resolution: {integrity: sha512-ZZow9HBI5O6EPgSJLUb8n2NKgmVWTwCvHGwFuJlMjvLFqlGG6pjirPhtdsseaLZjSibD8eegzmYpUZwoIlj2cQ==}
    engines: {node: '>=4.0'}
    dependencies:
      array-includes: 3.1.7
      array.prototype.flat: 1.3.2
      object.assign: 4.1.4
      object.values: 1.1.7
    dev: true

  /katex@0.16.9:
    resolution: {integrity: sha512-fsSYjWS0EEOwvy81j3vRA8TEAhQhKiqO+FQaKWp0m39qwOzHVBgAUBIXWj1pB+O2W3fIpNa6Y9KSKCVbfPhyAQ==}
    hasBin: true
    dependencies:
      commander: 8.3.0
    dev: false

  /keyv@4.5.4:
    resolution: {integrity: sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==}
    dependencies:
      json-buffer: 3.0.1
    dev: true

  /khroma@2.1.0:
    resolution: {integrity: sha512-Ls993zuzfayK269Svk9hzpeGUKob/sIgZzyHYdjQoAdQetRKpOLj+k/QQQ/6Qi0Yz65mlROrfd+Ev+1+7dz9Kw==}
    dev: false

  /kind-of@6.0.3:
    resolution: {integrity: sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw==}
    engines: {node: '>=0.10.0'}
    dev: false

  /kleur@4.1.5:
    resolution: {integrity: sha512-o+NO+8WrRiQEE4/7nwRJhN1HWpVmJm511pBHUxPLtp0BUISzlBplORYSmTclCnJvQq2tKu/sgl3xVpkc7ZWuQQ==}
    engines: {node: '>=6'}
    dev: false

  /language-subtag-registry@0.3.22:
    resolution: {integrity: sha512-tN0MCzyWnoz/4nHS6uxdlFWoUZT7ABptwKPQ52Ea7URk6vll88bWBVhodtnlfEuCcKWNGoc+uGbw1cwa9IKh/w==}
    dev: true

  /language-tags@1.0.5:
    resolution: {integrity: sha512-qJhlO9cGXi6hBGKoxEG/sKZDAHD5Hnu9Hs4WbOY3pCWXDhw0N8x1NenNzm2EnNLkLkk7J2SdxAkDSbb6ftT+UQ==}
    dependencies:
      language-subtag-registry: 0.3.22
    dev: true

  /layout-base@1.0.2:
    resolution: {integrity: sha512-8h2oVEZNktL4BH2JCOI90iD1yXwL6iNW7KcCKT2QZgQJR2vbqDsldCTPRU9NifTCqHZci57XvQQ15YTu+sTYPg==}
    dev: false

  /layout-base@2.0.1:
    resolution: {integrity: sha512-dp3s92+uNI1hWIpPGH3jK2kxE2lMjdXdr+DH8ynZHpd6PUlH6x6cbuXnoMmiNumznqaNO31xu9e79F0uuZ0JFg==}
    dev: false

  /levn@0.4.1:
    resolution: {integrity: sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==}
    engines: {node: '>= 0.8.0'}
    dependencies:
      prelude-ls: 1.2.1
      type-check: 0.4.0
    dev: true

  /lilconfig@2.1.0:
    resolution: {integrity: sha512-utWOt/GHzuUxnLKxB6dk81RoOeoNeHgbrXiuGk4yyF5qlRz+iIVWu56E2fqGHFrXz0QNUhLB/8nKqvRH66JKGQ==}
    engines: {node: '>=10'}

  /linebreak@1.1.0:
    resolution: {integrity: sha512-MHp03UImeVhB7XZtjd0E4n6+3xr5Dq/9xI/5FptGk5FrbDR3zagPa2DS6U8ks/3HjbKWG9Q1M2ufOzxV2qLYSQ==}
    dependencies:
      base64-js: 0.0.8
      unicode-trie: 2.0.0
    dev: false

  /lines-and-columns@1.2.4:
    resolution: {integrity: sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==}

  /lodash-es@4.17.21:
    resolution: {integrity: sha512-mKnC+QJ9pWVzv+C4/U3rRsHapFfHvQFoFB92e52xeyGMcX6/OlIl78je1u8vePzYZSkkogMPJ2yjxxsb89cxyw==}
    dev: false

  /lodash.debounce@4.0.8:
    resolution: {integrity: sha512-FT1yDzDYEoYWhnSGnpE/4Kj1fLZkDFyqRb7fNt6FdYOSxlUWAtp42Eh6Wb0rGIv/m9Bgo7x4GhQbm5Ys4SG5ow==}
    dev: true

  /lodash.get@4.4.2:
    resolution: {integrity: sha512-z+Uw/vLuy6gQe8cfaFWD7p0wVv8fJl3mbzXh33RS+0oW2wvUqiRXiQ69gLWSLpgB5/6sU+r6BlQR0MBILadqTQ==}
    dev: false

  /lodash.merge@4.6.2:
    resolution: {integrity: sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==}
    dev: true

  /lodash@4.17.21:
    resolution: {integrity: sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==}
    dev: false

  /longest-streak@3.1.0:
    resolution: {integrity: sha512-9Ri+o0JYgehTaVBBDoMqIl8GXtbWg711O3srftcHhZ0dqnETqLaoIK0x17fUw9rFSlK/0NlsKe0Ahhyl5pXE2g==}
    dev: false

  /loose-envify@1.4.0:
    resolution: {integrity: sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==}
    hasBin: true
    dependencies:
      js-tokens: 4.0.0

  /lower-case@2.0.2:
    resolution: {integrity: sha512-7fm3l3NAF9WfN6W3JOmf5drwpVqX78JtoGJ3A6W0a6ZnldM41w2fV5D490psKFTpMds8TJse/eHLFFsNHHjHgg==}
    dependencies:
      tslib: 2.6.2
    dev: true

  /lru-cache@4.1.5:
    resolution: {integrity: sha512-sWZlbEP2OsHNkXrMl5GYk/jKk70MBng6UU4YI/qGDYbgf6YbP4EvmqISbXCoJiRKs+1bSpFHVgQxvJ17F2li5g==}
    dependencies:
      pseudomap: 1.0.2
      yallist: 2.1.2
    dev: false

  /lru-cache@5.1.1:
    resolution: {integrity: sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==}
    dependencies:
      yallist: 3.1.1

  /lru-cache@6.0.0:
    resolution: {integrity: sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==}
    engines: {node: '>=10'}
    dependencies:
      yallist: 4.0.0
    dev: true

  /lz-string@1.5.0:
    resolution: {integrity: sha512-h5bgJWpxJNswbU7qCrV0tIKQCaS3blPDrqKWx+QxzuzL1zGUzij9XCWLrSLsJPu5t+eWA/ycetzYAO5IOMcWAQ==}
    hasBin: true
    dev: false

  /markdown-extensions@1.1.1:
    resolution: {integrity: sha512-WWC0ZuMzCyDHYCasEGs4IPvLyTGftYwh6wIEOULOF0HXcqZlhwRzrK0w2VUlxWA98xnvb/jszw4ZSkJ6ADpM6Q==}
    engines: {node: '>=0.10.0'}
    dev: false

  /markdown-table@3.0.3:
    resolution: {integrity: sha512-Z1NL3Tb1M9wH4XESsCDEksWoKTdlUafKc4pt0GRwjUyXaCFZ+dc3g2erqB6zm3szA2IUSi7VnPI+o/9jnxh9hw==}
    dev: false

  /match-sorter@6.3.1:
    resolution: {integrity: sha512-mxybbo3pPNuA+ZuCUhm5bwNkXrJTbsk5VWbR5wiwz/GC6LIiegBGn2w3O08UG/jdbYLinw51fSQ5xNU1U3MgBw==}
    dependencies:
      '@babel/runtime': 7.23.2
      remove-accents: 0.4.2
    dev: false

  /mdast-util-definitions@5.1.2:
    resolution: {integrity: sha512-8SVPMuHqlPME/z3gqVwWY4zVXn8lqKv/pAhC57FuJ40ImXyBpmO5ukh98zB2v7Blql2FiHjHv9LVztSIqjY+MA==}
    dependencies:
      '@types/mdast': 3.0.14
      '@types/unist': 2.0.9
      unist-util-visit: 4.1.2
    dev: false

  /mdast-util-find-and-replace@2.2.2:
    resolution: {integrity: sha512-MTtdFRz/eMDHXzeK6W3dO7mXUlF82Gom4y0oOgvHhh/HXZAGvIQDUvQ0SuUx+j2tv44b8xTHOm8K/9OoRFnXKw==}
    dependencies:
      '@types/mdast': 3.0.14
      escape-string-regexp: 5.0.0
      unist-util-is: 5.2.1
      unist-util-visit-parents: 5.1.3
    dev: false

  /mdast-util-from-markdown@1.3.1:
    resolution: {integrity: sha512-4xTO/M8c82qBcnQc1tgpNtubGUW/Y1tBQ1B0i5CtSoelOLKFYlElIr3bvgREYYO5iRqbMY1YuqZng0GVOI8Qww==}
    dependencies:
      '@types/mdast': 3.0.14
      '@types/unist': 2.0.9
      decode-named-character-reference: 1.0.2
      mdast-util-to-string: 3.2.0
      micromark: 3.2.0
      micromark-util-decode-numeric-character-reference: 1.1.0
      micromark-util-decode-string: 1.1.0
      micromark-util-normalize-identifier: 1.1.0
      micromark-util-symbol: 1.1.0
      micromark-util-types: 1.1.0
      unist-util-stringify-position: 3.0.3
      uvu: 0.5.6
    transitivePeerDependencies:
      - supports-color
    dev: false

  /mdast-util-gfm-autolink-literal@1.0.3:
    resolution: {integrity: sha512-My8KJ57FYEy2W2LyNom4n3E7hKTuQk/0SES0u16tjA9Z3oFkF4RrC/hPAPgjlSpezsOvI8ObcXcElo92wn5IGA==}
    dependencies:
      '@types/mdast': 3.0.14
      ccount: 2.0.1
      mdast-util-find-and-replace: 2.2.2
      micromark-util-character: 1.2.0
    dev: false

  /mdast-util-gfm-footnote@1.0.2:
    resolution: {integrity: sha512-56D19KOGbE00uKVj3sgIykpwKL179QsVFwx/DCW0u/0+URsryacI4MAdNJl0dh+u2PSsD9FtxPFbHCzJ78qJFQ==}
    dependencies:
      '@types/mdast': 3.0.14
      mdast-util-to-markdown: 1.5.0
      micromark-util-normalize-identifier: 1.1.0
    dev: false

  /mdast-util-gfm-strikethrough@1.0.3:
    resolution: {integrity: sha512-DAPhYzTYrRcXdMjUtUjKvW9z/FNAMTdU0ORyMcbmkwYNbKocDpdk+PX1L1dQgOID/+vVs1uBQ7ElrBQfZ0cuiQ==}
    dependencies:
      '@types/mdast': 3.0.14
      mdast-util-to-markdown: 1.5.0
    dev: false

  /mdast-util-gfm-table@1.0.7:
    resolution: {integrity: sha512-jjcpmNnQvrmN5Vx7y7lEc2iIOEytYv7rTvu+MeyAsSHTASGCCRA79Igg2uKssgOs1i1po8s3plW0sTu1wkkLGg==}
    dependencies:
      '@types/mdast': 3.0.14
      markdown-table: 3.0.3
      mdast-util-from-markdown: 1.3.1
      mdast-util-to-markdown: 1.5.0
    transitivePeerDependencies:
      - supports-color
    dev: false

  /mdast-util-gfm-task-list-item@1.0.2:
    resolution: {integrity: sha512-PFTA1gzfp1B1UaiJVyhJZA1rm0+Tzn690frc/L8vNX1Jop4STZgOE6bxUhnzdVSB+vm2GU1tIsuQcA9bxTQpMQ==}
    dependencies:
      '@types/mdast': 3.0.14
      mdast-util-to-markdown: 1.5.0
    dev: false

  /mdast-util-gfm@2.0.2:
    resolution: {integrity: sha512-qvZ608nBppZ4icQlhQQIAdc6S3Ffj9RGmzwUKUWuEICFnd1LVkN3EktF7ZHAgfcEdvZB5owU9tQgt99e2TlLjg==}
    dependencies:
      mdast-util-from-markdown: 1.3.1
      mdast-util-gfm-autolink-literal: 1.0.3
      mdast-util-gfm-footnote: 1.0.2
      mdast-util-gfm-strikethrough: 1.0.3
      mdast-util-gfm-table: 1.0.7
      mdast-util-gfm-task-list-item: 1.0.2
      mdast-util-to-markdown: 1.5.0
    transitivePeerDependencies:
      - supports-color
    dev: false

  /mdast-util-math@2.0.2:
    resolution: {integrity: sha512-8gmkKVp9v6+Tgjtq6SYx9kGPpTf6FVYRa53/DLh479aldR9AyP48qeVOgNZ5X7QUK7nOy4yw7vg6mbiGcs9jWQ==}
    dependencies:
      '@types/mdast': 3.0.14
      longest-streak: 3.1.0
      mdast-util-to-markdown: 1.5.0
    dev: false

  /mdast-util-mdx-expression@1.3.2:
    resolution: {integrity: sha512-xIPmR5ReJDu/DHH1OoIT1HkuybIfRGYRywC+gJtI7qHjCJp/M9jrmBEJW22O8lskDWm562BX2W8TiAwRTb0rKA==}
    dependencies:
      '@types/estree-jsx': 1.0.2
      '@types/hast': 2.3.7
      '@types/mdast': 3.0.14
      mdast-util-from-markdown: 1.3.1
      mdast-util-to-markdown: 1.5.0
    transitivePeerDependencies:
      - supports-color
    dev: false

  /mdast-util-mdx-jsx@2.1.4:
    resolution: {integrity: sha512-DtMn9CmVhVzZx3f+optVDF8yFgQVt7FghCRNdlIaS3X5Bnym3hZwPbg/XW86vdpKjlc1PVj26SpnLGeJBXD3JA==}
    dependencies:
      '@types/estree-jsx': 1.0.2
      '@types/hast': 2.3.7
      '@types/mdast': 3.0.14
      '@types/unist': 2.0.9
      ccount: 2.0.1
      mdast-util-from-markdown: 1.3.1
      mdast-util-to-markdown: 1.5.0
      parse-entities: 4.0.1
      stringify-entities: 4.0.3
      unist-util-remove-position: 4.0.2
      unist-util-stringify-position: 3.0.3
      vfile-message: 3.1.4
    transitivePeerDependencies:
      - supports-color
    dev: false

  /mdast-util-mdx@2.0.1:
    resolution: {integrity: sha512-38w5y+r8nyKlGvNjSEqWrhG0w5PmnRA+wnBvm+ulYCct7nsGYhFVb0lljS9bQav4psDAS1eGkP2LMVcZBi/aqw==}
    dependencies:
      mdast-util-from-markdown: 1.3.1
      mdast-util-mdx-expression: 1.3.2
      mdast-util-mdx-jsx: 2.1.4
      mdast-util-mdxjs-esm: 1.3.1
      mdast-util-to-markdown: 1.5.0
    transitivePeerDependencies:
      - supports-color
    dev: false

  /mdast-util-mdxjs-esm@1.3.1:
    resolution: {integrity: sha512-SXqglS0HrEvSdUEfoXFtcg7DRl7S2cwOXc7jkuusG472Mmjag34DUDeOJUZtl+BVnyeO1frIgVpHlNRWc2gk/w==}
    dependencies:
      '@types/estree-jsx': 1.0.2
      '@types/hast': 2.3.7
      '@types/mdast': 3.0.14
      mdast-util-from-markdown: 1.3.1
      mdast-util-to-markdown: 1.5.0
    transitivePeerDependencies:
      - supports-color
    dev: false

  /mdast-util-phrasing@3.0.1:
    resolution: {integrity: sha512-WmI1gTXUBJo4/ZmSk79Wcb2HcjPJBzM1nlI/OUWA8yk2X9ik3ffNbBGsU+09BFmXaL1IBb9fiuvq6/KMiNycSg==}
    dependencies:
      '@types/mdast': 3.0.14
      unist-util-is: 5.2.1
    dev: false

  /mdast-util-to-hast@12.3.0:
    resolution: {integrity: sha512-pits93r8PhnIoU4Vy9bjW39M2jJ6/tdHyja9rrot9uujkN7UTU9SDnE6WNJz/IGyQk3XHX6yNNtrBH6cQzm8Hw==}
    dependencies:
      '@types/hast': 2.3.7
      '@types/mdast': 3.0.14
      mdast-util-definitions: 5.1.2
      micromark-util-sanitize-uri: 1.2.0
      trim-lines: 3.0.1
      unist-util-generated: 2.0.1
      unist-util-position: 4.0.4
      unist-util-visit: 4.1.2
    dev: false

  /mdast-util-to-hast@13.0.2:
    resolution: {integrity: sha512-U5I+500EOOw9e3ZrclN3Is3fRpw8c19SMyNZlZ2IS+7vLsNzb2Om11VpIVOR+/0137GhZsFEF6YiKD5+0Hr2Og==}
    dependencies:
      '@types/hast': 3.0.2
      '@types/mdast': 4.0.2
      '@ungap/structured-clone': 1.2.0
      devlop: 1.1.0
      micromark-util-sanitize-uri: 2.0.0
      trim-lines: 3.0.1
      unist-util-position: 5.0.0
      unist-util-visit: 5.0.0
    dev: false

  /mdast-util-to-markdown@1.5.0:
    resolution: {integrity: sha512-bbv7TPv/WC49thZPg3jXuqzuvI45IL2EVAr/KxF0BSdHsU0ceFHOmwQn6evxAh1GaoK/6GQ1wp4R4oW2+LFL/A==}
    dependencies:
      '@types/mdast': 3.0.14
      '@types/unist': 2.0.9
      longest-streak: 3.1.0
      mdast-util-phrasing: 3.0.1
      mdast-util-to-string: 3.2.0
      micromark-util-decode-string: 1.1.0
      unist-util-visit: 4.1.2
      zwitch: 2.0.4
    dev: false

  /mdast-util-to-string@3.2.0:
    resolution: {integrity: sha512-V4Zn/ncyN1QNSqSBxTrMOLpjr+IKdHl2v3KVLoWmDPscP4r9GcCi71gjgvUV1SFSKh92AjAG4peFuBl2/YgCJg==}
    dependencies:
      '@types/mdast': 3.0.14
    dev: false

  /mdn-data@2.0.28:
    resolution: {integrity: sha512-aylIc7Z9y4yzHYAJNuESG3hfhC+0Ibp/MAMiaOZgNv4pmEdFyfZhhhny4MNiAfWdBQ1RQ2mfDWmM1x8SvGyp8g==}
    dev: true

  /mdn-data@2.0.30:
    resolution: {integrity: sha512-GaqWWShW4kv/G9IEucWScBx9G1/vsFZZJUO+tD26M8J8z3Kw5RDQjaoZe03YAClgeS/SWPOcb4nkFBTEi5DUEA==}
    dev: true

  /merge-stream@2.0.0:
    resolution: {integrity: sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==}
    dev: true

  /merge2@1.4.1:
    resolution: {integrity: sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==}
    engines: {node: '>= 8'}

  /mermaid@10.5.1:
    resolution: {integrity: sha512-+4mkGW5PptHDSae4YZ/Jw1pEOf0irrB/aCL6BwZcJPhr5+84UJBrQnHTvyPqCUz67tXkrDvSzWv4B+J2hLO78g==}
    dependencies:
      '@braintree/sanitize-url': 6.0.4
      '@types/d3-scale': 4.0.6
      '@types/d3-scale-chromatic': 3.0.1
      cytoscape: 3.26.0
      cytoscape-cose-bilkent: 4.1.0(cytoscape@3.26.0)
      cytoscape-fcose: 2.2.0(cytoscape@3.26.0)
      d3: 7.8.5
      d3-sankey: 0.12.3
      dagre-d3-es: 7.0.10
      dayjs: 1.11.10
      dompurify: 3.0.6
      elkjs: 0.8.2
      khroma: 2.1.0
      lodash-es: 4.17.21
      mdast-util-from-markdown: 1.3.1
      non-layered-tidy-tree-layout: 2.0.2
      stylis: 4.3.0
      ts-dedent: 2.2.0
      uuid: 9.0.1
      web-worker: 1.2.0
    transitivePeerDependencies:
      - supports-color
    dev: false

  /micromark-core-commonmark@1.1.0:
    resolution: {integrity: sha512-BgHO1aRbolh2hcrzL2d1La37V0Aoz73ymF8rAcKnohLy93titmv62E0gP8Hrx9PKcKrqCZ1BbLGbP3bEhoXYlw==}
    dependencies:
      decode-named-character-reference: 1.0.2
      micromark-factory-destination: 1.1.0
      micromark-factory-label: 1.1.0
      micromark-factory-space: 1.1.0
      micromark-factory-title: 1.1.0
      micromark-factory-whitespace: 1.1.0
      micromark-util-character: 1.2.0
      micromark-util-chunked: 1.1.0
      micromark-util-classify-character: 1.1.0
      micromark-util-html-tag-name: 1.2.0
      micromark-util-normalize-identifier: 1.1.0
      micromark-util-resolve-all: 1.1.0
      micromark-util-subtokenize: 1.1.0
      micromark-util-symbol: 1.1.0
      micromark-util-types: 1.1.0
      uvu: 0.5.6
    dev: false

  /micromark-extension-gfm-autolink-literal@1.0.5:
    resolution: {integrity: sha512-z3wJSLrDf8kRDOh2qBtoTRD53vJ+CWIyo7uyZuxf/JAbNJjiHsOpG1y5wxk8drtv3ETAHutCu6N3thkOOgueWg==}
    dependencies:
      micromark-util-character: 1.2.0
      micromark-util-sanitize-uri: 1.2.0
      micromark-util-symbol: 1.1.0
      micromark-util-types: 1.1.0
    dev: false

  /micromark-extension-gfm-footnote@1.1.2:
    resolution: {integrity: sha512-Yxn7z7SxgyGWRNa4wzf8AhYYWNrwl5q1Z8ii+CSTTIqVkmGZF1CElX2JI8g5yGoM3GAman9/PVCUFUSJ0kB/8Q==}
    dependencies:
      micromark-core-commonmark: 1.1.0
      micromark-factory-space: 1.1.0
      micromark-util-character: 1.2.0
      micromark-util-normalize-identifier: 1.1.0
      micromark-util-sanitize-uri: 1.2.0
      micromark-util-symbol: 1.1.0
      micromark-util-types: 1.1.0
      uvu: 0.5.6
    dev: false

  /micromark-extension-gfm-strikethrough@1.0.7:
    resolution: {integrity: sha512-sX0FawVE1o3abGk3vRjOH50L5TTLr3b5XMqnP9YDRb34M0v5OoZhG+OHFz1OffZ9dlwgpTBKaT4XW/AsUVnSDw==}
    dependencies:
      micromark-util-chunked: 1.1.0
      micromark-util-classify-character: 1.1.0
      micromark-util-resolve-all: 1.1.0
      micromark-util-symbol: 1.1.0
      micromark-util-types: 1.1.0
      uvu: 0.5.6
    dev: false

  /micromark-extension-gfm-table@1.0.7:
    resolution: {integrity: sha512-3ZORTHtcSnMQEKtAOsBQ9/oHp9096pI/UvdPtN7ehKvrmZZ2+bbWhi0ln+I9drmwXMt5boocn6OlwQzNXeVeqw==}
    dependencies:
      micromark-factory-space: 1.1.0
      micromark-util-character: 1.2.0
      micromark-util-symbol: 1.1.0
      micromark-util-types: 1.1.0
      uvu: 0.5.6
    dev: false

  /micromark-extension-gfm-tagfilter@1.0.2:
    resolution: {integrity: sha512-5XWB9GbAUSHTn8VPU8/1DBXMuKYT5uOgEjJb8gN3mW0PNW5OPHpSdojoqf+iq1xo7vWzw/P8bAHY0n6ijpXF7g==}
    dependencies:
      micromark-util-types: 1.1.0
    dev: false

  /micromark-extension-gfm-task-list-item@1.0.5:
    resolution: {integrity: sha512-RMFXl2uQ0pNQy6Lun2YBYT9g9INXtWJULgbt01D/x8/6yJ2qpKyzdZD3pi6UIkzF++Da49xAelVKUeUMqd5eIQ==}
    dependencies:
      micromark-factory-space: 1.1.0
      micromark-util-character: 1.2.0
      micromark-util-symbol: 1.1.0
      micromark-util-types: 1.1.0
      uvu: 0.5.6
    dev: false

  /micromark-extension-gfm@2.0.3:
    resolution: {integrity: sha512-vb9OoHqrhCmbRidQv/2+Bc6pkP0FrtlhurxZofvOEy5o8RtuuvTq+RQ1Vw5ZDNrVraQZu3HixESqbG+0iKk/MQ==}
    dependencies:
      micromark-extension-gfm-autolink-literal: 1.0.5
      micromark-extension-gfm-footnote: 1.1.2
      micromark-extension-gfm-strikethrough: 1.0.7
      micromark-extension-gfm-table: 1.0.7
      micromark-extension-gfm-tagfilter: 1.0.2
      micromark-extension-gfm-task-list-item: 1.0.5
      micromark-util-combine-extensions: 1.1.0
      micromark-util-types: 1.1.0
    dev: false

  /micromark-extension-math@2.1.2:
    resolution: {integrity: sha512-es0CcOV89VNS9wFmyn+wyFTKweXGW4CEvdaAca6SWRWPyYCbBisnjaHLjWO4Nszuiud84jCpkHsqAJoa768Pvg==}
    dependencies:
      '@types/katex': 0.16.5
      katex: 0.16.9
      micromark-factory-space: 1.1.0
      micromark-util-character: 1.2.0
      micromark-util-symbol: 1.1.0
      micromark-util-types: 1.1.0
      uvu: 0.5.6
    dev: false

  /micromark-extension-mdx-expression@1.0.8:
    resolution: {integrity: sha512-zZpeQtc5wfWKdzDsHRBY003H2Smg+PUi2REhqgIhdzAa5xonhP03FcXxqFSerFiNUr5AWmHpaNPQTBVOS4lrXw==}
    dependencies:
      '@types/estree': 1.0.3
      micromark-factory-mdx-expression: 1.0.9
      micromark-factory-space: 1.1.0
      micromark-util-character: 1.2.0
      micromark-util-events-to-acorn: 1.2.3
      micromark-util-symbol: 1.1.0
      micromark-util-types: 1.1.0
      uvu: 0.5.6
    dev: false

  /micromark-extension-mdx-jsx@1.0.5:
    resolution: {integrity: sha512-gPH+9ZdmDflbu19Xkb8+gheqEDqkSpdCEubQyxuz/Hn8DOXiXvrXeikOoBA71+e8Pfi0/UYmU3wW3H58kr7akA==}
    dependencies:
      '@types/acorn': 4.0.6
      '@types/estree': 1.0.3
      estree-util-is-identifier-name: 2.1.0
      micromark-factory-mdx-expression: 1.0.9
      micromark-factory-space: 1.1.0
      micromark-util-character: 1.2.0
      micromark-util-symbol: 1.1.0
      micromark-util-types: 1.1.0
      uvu: 0.5.6
      vfile-message: 3.1.4
    dev: false

  /micromark-extension-mdx-md@1.0.1:
    resolution: {integrity: sha512-7MSuj2S7xjOQXAjjkbjBsHkMtb+mDGVW6uI2dBL9snOBCbZmoNgDAeZ0nSn9j3T42UE/g2xVNMn18PJxZvkBEA==}
    dependencies:
      micromark-util-types: 1.1.0
    dev: false

  /micromark-extension-mdxjs-esm@1.0.5:
    resolution: {integrity: sha512-xNRBw4aoURcyz/S69B19WnZAkWJMxHMT5hE36GtDAyhoyn/8TuAeqjFJQlwk+MKQsUD7b3l7kFX+vlfVWgcX1w==}
    dependencies:
      '@types/estree': 1.0.3
      micromark-core-commonmark: 1.1.0
      micromark-util-character: 1.2.0
      micromark-util-events-to-acorn: 1.2.3
      micromark-util-symbol: 1.1.0
      micromark-util-types: 1.1.0
      unist-util-position-from-estree: 1.1.2
      uvu: 0.5.6
      vfile-message: 3.1.4
    dev: false

  /micromark-extension-mdxjs@1.0.1:
    resolution: {integrity: sha512-7YA7hF6i5eKOfFUzZ+0z6avRG52GpWR8DL+kN47y3f2KhxbBZMhmxe7auOeaTBrW2DenbbZTf1ea9tA2hDpC2Q==}
    dependencies:
      acorn: 8.10.0
      acorn-jsx: 5.3.2(acorn@8.10.0)
      micromark-extension-mdx-expression: 1.0.8
      micromark-extension-mdx-jsx: 1.0.5
      micromark-extension-mdx-md: 1.0.1
      micromark-extension-mdxjs-esm: 1.0.5
      micromark-util-combine-extensions: 1.1.0
      micromark-util-types: 1.1.0
    dev: false

  /micromark-factory-destination@1.1.0:
    resolution: {integrity: sha512-XaNDROBgx9SgSChd69pjiGKbV+nfHGDPVYFs5dOoDd7ZnMAE+Cuu91BCpsY8RT2NP9vo/B8pds2VQNCLiu0zhg==}
    dependencies:
      micromark-util-character: 1.2.0
      micromark-util-symbol: 1.1.0
      micromark-util-types: 1.1.0
    dev: false

  /micromark-factory-label@1.1.0:
    resolution: {integrity: sha512-OLtyez4vZo/1NjxGhcpDSbHQ+m0IIGnT8BoPamh+7jVlzLJBH98zzuCoUeMxvM6WsNeh8wx8cKvqLiPHEACn0w==}
    dependencies:
      micromark-util-character: 1.2.0
      micromark-util-symbol: 1.1.0
      micromark-util-types: 1.1.0
      uvu: 0.5.6
    dev: false

  /micromark-factory-mdx-expression@1.0.9:
    resolution: {integrity: sha512-jGIWzSmNfdnkJq05c7b0+Wv0Kfz3NJ3N4cBjnbO4zjXIlxJr+f8lk+5ZmwFvqdAbUy2q6B5rCY//g0QAAaXDWA==}
    dependencies:
      '@types/estree': 1.0.3
      micromark-util-character: 1.2.0
      micromark-util-events-to-acorn: 1.2.3
      micromark-util-symbol: 1.1.0
      micromark-util-types: 1.1.0
      unist-util-position-from-estree: 1.1.2
      uvu: 0.5.6
      vfile-message: 3.1.4
    dev: false

  /micromark-factory-space@1.1.0:
    resolution: {integrity: sha512-cRzEj7c0OL4Mw2v6nwzttyOZe8XY/Z8G0rzmWQZTBi/jjwyw/U4uqKtUORXQrR5bAZZnbTI/feRV/R7hc4jQYQ==}
    dependencies:
      micromark-util-character: 1.2.0
      micromark-util-types: 1.1.0
    dev: false

  /micromark-factory-title@1.1.0:
    resolution: {integrity: sha512-J7n9R3vMmgjDOCY8NPw55jiyaQnH5kBdV2/UXCtZIpnHH3P6nHUKaH7XXEYuWwx/xUJcawa8plLBEjMPU24HzQ==}
    dependencies:
      micromark-factory-space: 1.1.0
      micromark-util-character: 1.2.0
      micromark-util-symbol: 1.1.0
      micromark-util-types: 1.1.0
    dev: false

  /micromark-factory-whitespace@1.1.0:
    resolution: {integrity: sha512-v2WlmiymVSp5oMg+1Q0N1Lxmt6pMhIHD457whWM7/GUlEks1hI9xj5w3zbc4uuMKXGisksZk8DzP2UyGbGqNsQ==}
    dependencies:
      micromark-factory-space: 1.1.0
      micromark-util-character: 1.2.0
      micromark-util-symbol: 1.1.0
      micromark-util-types: 1.1.0
    dev: false

  /micromark-util-character@1.2.0:
    resolution: {integrity: sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==}
    dependencies:
      micromark-util-symbol: 1.1.0
      micromark-util-types: 1.1.0
    dev: false

  /micromark-util-character@2.0.1:
    resolution: {integrity: sha512-3wgnrmEAJ4T+mGXAUfMvMAbxU9RDG43XmGce4j6CwPtVxB3vfwXSZ6KhFwDzZ3mZHhmPimMAXg71veiBGzeAZw==}
    dependencies:
      micromark-util-symbol: 2.0.0
      micromark-util-types: 2.0.0
    dev: false

  /micromark-util-chunked@1.1.0:
    resolution: {integrity: sha512-Ye01HXpkZPNcV6FiyoW2fGZDUw4Yc7vT0E9Sad83+bEDiCJ1uXu0S3mr8WLpsz3HaG3x2q0HM6CTuPdcZcluFQ==}
    dependencies:
      micromark-util-symbol: 1.1.0
    dev: false

  /micromark-util-classify-character@1.1.0:
    resolution: {integrity: sha512-SL0wLxtKSnklKSUplok1WQFoGhUdWYKggKUiqhX+Swala+BtptGCu5iPRc+xvzJ4PXE/hwM3FNXsfEVgoZsWbw==}
    dependencies:
      micromark-util-character: 1.2.0
      micromark-util-symbol: 1.1.0
      micromark-util-types: 1.1.0
    dev: false

  /micromark-util-combine-extensions@1.1.0:
    resolution: {integrity: sha512-Q20sp4mfNf9yEqDL50WwuWZHUrCO4fEyeDCnMGmG5Pr0Cz15Uo7KBs6jq+dq0EgX4DPwwrh9m0X+zPV1ypFvUA==}
    dependencies:
      micromark-util-chunked: 1.1.0
      micromark-util-types: 1.1.0
    dev: false

  /micromark-util-decode-numeric-character-reference@1.1.0:
    resolution: {integrity: sha512-m9V0ExGv0jB1OT21mrWcuf4QhP46pH1KkfWy9ZEezqHKAxkj4mPCy3nIH1rkbdMlChLHX531eOrymlwyZIf2iw==}
    dependencies:
      micromark-util-symbol: 1.1.0
    dev: false

  /micromark-util-decode-string@1.1.0:
    resolution: {integrity: sha512-YphLGCK8gM1tG1bd54azwyrQRjCFcmgj2S2GoJDNnh4vYtnL38JS8M4gpxzOPNyHdNEpheyWXCTnnTDY3N+NVQ==}
    dependencies:
      decode-named-character-reference: 1.0.2
      micromark-util-character: 1.2.0
      micromark-util-decode-numeric-character-reference: 1.1.0
      micromark-util-symbol: 1.1.0
    dev: false

  /micromark-util-encode@1.1.0:
    resolution: {integrity: sha512-EuEzTWSTAj9PA5GOAs992GzNh2dGQO52UvAbtSOMvXTxv3Criqb6IOzJUBCmEqrrXSblJIJBbFFv6zPxpreiJw==}
    dev: false

  /micromark-util-encode@2.0.0:
    resolution: {integrity: sha512-pS+ROfCXAGLWCOc8egcBvT0kf27GoWMqtdarNfDcjb6YLuV5cM3ioG45Ys2qOVqeqSbjaKg72vU+Wby3eddPsA==}
    dev: false

  /micromark-util-events-to-acorn@1.2.3:
    resolution: {integrity: sha512-ij4X7Wuc4fED6UoLWkmo0xJQhsktfNh1J0m8g4PbIMPlx+ek/4YdW5mvbye8z/aZvAPUoxgXHrwVlXAPKMRp1w==}
    dependencies:
      '@types/acorn': 4.0.6
      '@types/estree': 1.0.3
      '@types/unist': 2.0.9
      estree-util-visit: 1.2.1
      micromark-util-symbol: 1.1.0
      micromark-util-types: 1.1.0
      uvu: 0.5.6
      vfile-message: 3.1.4
    dev: false

  /micromark-util-html-tag-name@1.2.0:
    resolution: {integrity: sha512-VTQzcuQgFUD7yYztuQFKXT49KghjtETQ+Wv/zUjGSGBioZnkA4P1XXZPT1FHeJA6RwRXSF47yvJ1tsJdoxwO+Q==}
    dev: false

  /micromark-util-normalize-identifier@1.1.0:
    resolution: {integrity: sha512-N+w5vhqrBihhjdpM8+5Xsxy71QWqGn7HYNUvch71iV2PM7+E3uWGox1Qp90loa1ephtCxG2ftRV/Conitc6P2Q==}
    dependencies:
      micromark-util-symbol: 1.1.0
    dev: false

  /micromark-util-resolve-all@1.1.0:
    resolution: {integrity: sha512-b/G6BTMSg+bX+xVCshPTPyAu2tmA0E4X98NSR7eIbeC6ycCqCeE7wjfDIgzEbkzdEVJXRtOG4FbEm/uGbCRouA==}
    dependencies:
      micromark-util-types: 1.1.0
    dev: false

  /micromark-util-sanitize-uri@1.2.0:
    resolution: {integrity: sha512-QO4GXv0XZfWey4pYFndLUKEAktKkG5kZTdUNaTAkzbuJxn2tNBOr+QtxR2XpWaMhbImT2dPzyLrPXLlPhph34A==}
    dependencies:
      micromark-util-character: 1.2.0
      micromark-util-encode: 1.1.0
      micromark-util-symbol: 1.1.0
    dev: false

  /micromark-util-sanitize-uri@2.0.0:
    resolution: {integrity: sha512-WhYv5UEcZrbAtlsnPuChHUAsu/iBPOVaEVsntLBIdpibO0ddy8OzavZz3iL2xVvBZOpolujSliP65Kq0/7KIYw==}
    dependencies:
      micromark-util-character: 2.0.1
      micromark-util-encode: 2.0.0
      micromark-util-symbol: 2.0.0
    dev: false

  /micromark-util-subtokenize@1.1.0:
    resolution: {integrity: sha512-kUQHyzRoxvZO2PuLzMt2P/dwVsTiivCK8icYTeR+3WgbuPqfHgPPy7nFKbeqRivBvn/3N3GBiNC+JRTMSxEC7A==}
    dependencies:
      micromark-util-chunked: 1.1.0
      micromark-util-symbol: 1.1.0
      micromark-util-types: 1.1.0
      uvu: 0.5.6
    dev: false

  /micromark-util-symbol@1.1.0:
    resolution: {integrity: sha512-uEjpEYY6KMs1g7QfJ2eX1SQEV+ZT4rUD3UcF6l57acZvLNK7PBZL+ty82Z1qhK1/yXIY4bdx04FKMgR0g4IAag==}
    dev: false

  /micromark-util-symbol@2.0.0:
    resolution: {integrity: sha512-8JZt9ElZ5kyTnO94muPxIGS8oyElRJaiJO8EzV6ZSyGQ1Is8xwl4Q45qU5UOg+bGH4AikWziz0iN4sFLWs8PGw==}
    dev: false

  /micromark-util-types@1.1.0:
    resolution: {integrity: sha512-ukRBgie8TIAcacscVHSiddHjO4k/q3pnedmzMQ4iwDcK0FtFCohKOlFbaOL/mPgfnPsL3C1ZyxJa4sbWrBl3jg==}
    dev: false

  /micromark-util-types@2.0.0:
    resolution: {integrity: sha512-oNh6S2WMHWRZrmutsRmDDfkzKtxF+bc2VxLC9dvtrDIRFln627VsFP6fLMgTryGDljgLPjkrzQSDcPrjPyDJ5w==}
    dev: false

  /micromark@3.2.0:
    resolution: {integrity: sha512-uD66tJj54JLYq0De10AhWycZWGQNUvDI55xPgk2sQM5kn1JYlhbCMTtEeT27+vAhW2FBQxLlOmS3pmA7/2z4aA==}
    dependencies:
      '@types/debug': 4.1.10
      debug: 4.3.4
      decode-named-character-reference: 1.0.2
      micromark-core-commonmark: 1.1.0
      micromark-factory-space: 1.1.0
      micromark-util-character: 1.2.0
      micromark-util-chunked: 1.1.0
      micromark-util-combine-extensions: 1.1.0
      micromark-util-decode-numeric-character-reference: 1.1.0
      micromark-util-encode: 1.1.0
      micromark-util-normalize-identifier: 1.1.0
      micromark-util-resolve-all: 1.1.0
      micromark-util-sanitize-uri: 1.2.0
      micromark-util-subtokenize: 1.1.0
      micromark-util-symbol: 1.1.0
      micromark-util-types: 1.1.0
      uvu: 0.5.6
    transitivePeerDependencies:
      - supports-color
    dev: false

  /micromatch@4.0.5:
    resolution: {integrity: sha512-DMy+ERcEW2q8Z2Po+WNXuw3c5YaUSFjAO5GsJqfEl7UjvtIuFKO6ZrKvcItdy98dwFI2N1tg3zNIdKaQT+aNdA==}
    engines: {node: '>=8.6'}
    dependencies:
      braces: 3.0.2
      picomatch: 2.3.1

  /mime-db@1.52.0:
    resolution: {integrity: sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==}
    engines: {node: '>= 0.6'}
    dev: false

  /mimic-fn@2.1.0:
    resolution: {integrity: sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==}
    engines: {node: '>=6'}
    dev: true

  /mimic-fn@4.0.0:
    resolution: {integrity: sha512-vqiC06CuhBTUdZH+RYl8sFrL096vA45Ok5ISO6sE/Mr1jRbGH4Csnhi8f3wKVl7x8mO4Au7Ir9D3Oyv1VYMFJw==}
    engines: {node: '>=12'}
    dev: true

  /minimatch@3.1.2:
    resolution: {integrity: sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==}
    dependencies:
      brace-expansion: 1.1.11

  /minimist@1.2.8:
    resolution: {integrity: sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==}
    dev: true

  /mri@1.2.0:
    resolution: {integrity: sha512-tzzskb3bG8LvYGFF/mDTpq3jpI6Q9wc3LEmBaghu+DdCssd1FakN7Bc0hVNmEyGq1bq3RgfkCb3cmQLpNPOroA==}
    engines: {node: '>=4'}
    dev: false

  /ms@2.1.2:
    resolution: {integrity: sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==}

  /ms@2.1.3:
    resolution: {integrity: sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==}
    dev: true

  /mz@2.7.0:
    resolution: {integrity: sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==}
    dependencies:
      any-promise: 1.3.0
      object-assign: 4.1.1
      thenify-all: 1.6.0

  /nanoid@3.3.6:
    resolution: {integrity: sha512-BGcqMMJuToF7i1rt+2PWSNVnWIkGCU78jBG3RxO/bZlnZPK2Cmi2QaffxGO/2RvWi9sL+FAiRiXMgsyxQ1DIDA==}
    engines: {node: ^10 || ^12 || ^13.7 || ^14 || >=15.0.1}
    hasBin: true

  /natural-compare@1.4.0:
    resolution: {integrity: sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==}
    dev: true

  /next-mdx-remote@4.4.1(react-dom@18.2.0)(react@18.2.0):
    resolution: {integrity: sha512-1BvyXaIou6xy3XoNF4yaMZUCb6vD2GTAa5ciOa6WoO+gAUTYsb1K4rI/HSC2ogAWLrb/7VSV52skz07vOzmqIQ==}
    engines: {node: '>=14', npm: '>=7'}
    peerDependencies:
      react: '>=16.x <=18.x'
      react-dom: '>=16.x <=18.x'
    dependencies:
      '@mdx-js/mdx': 2.3.0
      '@mdx-js/react': 2.3.0(react@18.2.0)
      react: 18.2.0
      react-dom: 18.2.0(react@18.2.0)
      vfile: 5.3.7
      vfile-matter: 3.0.1
    transitivePeerDependencies:
      - supports-color
    dev: false

  /next-seo@6.1.0(next@14.1.3)(react-dom@18.2.0)(react@18.2.0):
    resolution: {integrity: sha512-iMBpFoJsR5zWhguHJvsoBDxDSmdYTHtnVPB1ij+CD0NReQCP78ZxxbdL9qkKIf4oEuZEqZkrjAQLB0bkII7RYA==}
    peerDependencies:
      next: ^8.1.1-canary.54 || >=9.0.0
      react: '>=16.0.0'
      react-dom: '>=16.0.0'
    dependencies:
      next: 14.1.3(@babel/core@7.23.2)(react-dom@18.2.0)(react@18.2.0)
      react: 18.2.0
      react-dom: 18.2.0(react@18.2.0)
    dev: false

  /next-themes@0.2.1(next@14.1.3)(react-dom@18.2.0)(react@18.2.0):
    resolution: {integrity: sha512-B+AKNfYNIzh0vqQQKqQItTS8evEouKD7H5Hj3kmuPERwddR2TxvDSFZuTj6T7Jfn1oyeUyJMydPl1Bkxkh0W7A==}
    peerDependencies:
      next: '*'
      react: '*'
      react-dom: '*'
    dependencies:
      next: 14.1.3(@babel/core@7.23.2)(react-dom@18.2.0)(react@18.2.0)
      react: 18.2.0
      react-dom: 18.2.0(react@18.2.0)
    dev: false

  /next-tick@1.1.0:
    resolution: {integrity: sha512-CXdUiJembsNjuToQvxayPZF9Vqht7hewsvy2sOWafLvi2awflj9mOC6bHIg50orX8IJvWKY9wYQ/zB2kogPslQ==}
    dev: false

  /next@14.1.3(@babel/core@7.23.2)(react-dom@18.2.0)(react@18.2.0):
    resolution: {integrity: sha512-oexgMV2MapI0UIWiXKkixF8J8ORxpy64OuJ/J9oVUmIthXOUCcuVEZX+dtpgq7wIfIqtBwQsKEDXejcjTsan9g==}
    engines: {node: '>=18.17.0'}
    hasBin: true
    peerDependencies:
      '@opentelemetry/api': ^1.1.0
      react: ^18.2.0
      react-dom: ^18.2.0
      sass: ^1.3.0
    peerDependenciesMeta:
      '@opentelemetry/api':
        optional: true
      sass:
        optional: true
    dependencies:
      '@next/env': 14.1.3
      '@swc/helpers': 0.5.2
      busboy: 1.6.0
      caniuse-lite: 1.0.30001599
      graceful-fs: 4.2.11
      postcss: 8.4.31
      react: 18.2.0
      react-dom: 18.2.0(react@18.2.0)
      styled-jsx: 5.1.1(@babel/core@7.23.2)(react@18.2.0)
    optionalDependencies:
      '@next/swc-darwin-arm64': 14.1.3
      '@next/swc-darwin-x64': 14.1.3
      '@next/swc-linux-arm64-gnu': 14.1.3
      '@next/swc-linux-arm64-musl': 14.1.3
      '@next/swc-linux-x64-gnu': 14.1.3
      '@next/swc-linux-x64-musl': 14.1.3
      '@next/swc-win32-arm64-msvc': 14.1.3
      '@next/swc-win32-ia32-msvc': 14.1.3
      '@next/swc-win32-x64-msvc': 14.1.3
    transitivePeerDependencies:
      - '@babel/core'
      - babel-plugin-macros
    dev: false

  /nextra-theme-docs@2.13.2(next@14.1.3)(nextra@2.13.2)(react-dom@18.2.0)(react@18.2.0):
    resolution: {integrity: sha512-yE4umXaImp1/kf/sFciPj2+EFrNSwd9Db26hi98sIIiujzGf3+9eUgAz45vF9CwBw50FSXxm1QGRcY+slQ4xQQ==}
    peerDependencies:
      next: '>=9.5.3'
      nextra: 2.13.2
      react: '>=16.13.1'
      react-dom: '>=16.13.1'
    dependencies:
      '@headlessui/react': 1.7.17(react-dom@18.2.0)(react@18.2.0)
      '@popperjs/core': 2.11.8
      clsx: 2.0.0
      escape-string-regexp: 5.0.0
      flexsearch: 0.7.31
      focus-visible: 5.2.0
      git-url-parse: 13.1.1
      intersection-observer: 0.12.2
      match-sorter: 6.3.1
      next: 14.1.3(@babel/core@7.23.2)(react-dom@18.2.0)(react@18.2.0)
      next-seo: 6.1.0(next@14.1.3)(react-dom@18.2.0)(react@18.2.0)
      next-themes: 0.2.1(next@14.1.3)(react-dom@18.2.0)(react@18.2.0)
      nextra: 2.13.2(next@14.1.3)(react-dom@18.2.0)(react@18.2.0)
      react: 18.2.0
      react-dom: 18.2.0(react@18.2.0)
      scroll-into-view-if-needed: 3.1.0
      zod: 3.22.4
    dev: false

  /nextra@2.13.2(next@14.1.3)(react-dom@18.2.0)(react@18.2.0):
    resolution: {integrity: sha512-pIgOSXNUqTz1laxV4ChFZOU7lzJAoDHHaBPj8L09PuxrLKqU1BU/iZtXAG6bQeKCx8EPdBsoXxEuENnL9QGnGA==}
    engines: {node: '>=16'}
    peerDependencies:
      next: '>=9.5.3'
      react: '>=16.13.1'
      react-dom: '>=16.13.1'
    dependencies:
      '@headlessui/react': 1.7.17(react-dom@18.2.0)(react@18.2.0)
      '@mdx-js/mdx': 2.3.0
      '@mdx-js/react': 2.3.0(react@18.2.0)
      '@napi-rs/simple-git': 0.1.9
      '@theguild/remark-mermaid': 0.0.5(react@18.2.0)
      '@theguild/remark-npm2yarn': 0.2.1
      clsx: 2.0.0
      github-slugger: 2.0.0
      graceful-fs: 4.2.11
      gray-matter: 4.0.3
      katex: 0.16.9
      lodash.get: 4.4.2
      next: 14.1.3(@babel/core@7.23.2)(react-dom@18.2.0)(react@18.2.0)
      next-mdx-remote: 4.4.1(react-dom@18.2.0)(react@18.2.0)
      p-limit: 3.1.0
      react: 18.2.0
      react-dom: 18.2.0(react@18.2.0)
      rehype-katex: 7.0.0
      rehype-pretty-code: 0.9.11(shiki@0.14.5)
      rehype-raw: 7.0.0
      remark-gfm: 3.0.1
      remark-math: 5.1.1
      remark-reading-time: 2.0.1
      shiki: 0.14.5
      slash: 3.0.0
      title: 3.5.3
      unist-util-remove: 4.0.0
      unist-util-visit: 5.0.0
      zod: 3.22.4
    transitivePeerDependencies:
      - supports-color
    dev: false

  /no-case@3.0.4:
    resolution: {integrity: sha512-fgAN3jGAh+RoxUGZHTSOLJIqUc2wmoBwGR4tbpNAKmmovFoWq0OdRkb0VkldReO2a2iBT/OEulG9XSUc10r3zg==}
    dependencies:
      lower-case: 2.0.2
      tslib: 2.6.2
    dev: true

  /node-releases@2.0.13:
    resolution: {integrity: sha512-uYr7J37ae/ORWdZeQ1xxMJe3NtdmqMC/JZK+geofDrkLUApKRHPd18/TxtBOJ4A0/+uUIliorNrfYV6s1b02eQ==}

  /non-layered-tidy-tree-layout@2.0.2:
    resolution: {integrity: sha512-gkXMxRzUH+PB0ax9dUN0yYF0S25BqeAYqhgMaLUFmpXLEk7Fcu8f4emJuOAY0V8kjDICxROIKsTAKsV/v355xw==}
    dev: false

  /normalize-path@3.0.0:
    resolution: {integrity: sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==}
    engines: {node: '>=0.10.0'}

  /normalize-range@0.1.2:
    resolution: {integrity: sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==}
    engines: {node: '>=0.10.0'}
    dev: true

  /npm-run-path@2.0.2:
    resolution: {integrity: sha512-lJxZYlT4DW/bRUtFh1MQIWqmLwQfAxnqWG4HhEdjMlkrJYnJn0Jrr2u3mgxqaWsdiBc76TYkTG/mhrnYTuzfHw==}
    engines: {node: '>=4'}
    dependencies:
      path-key: 2.0.1
    dev: false

  /npm-run-path@4.0.1:
    resolution: {integrity: sha512-S48WzZW777zhNIrn7gxOlISNAqi9ZC/uQFnRdbeIHhZhCA6UqpkOT8T1G7BvfdgP4Er8gF4sUbaS0i7QvIfCWw==}
    engines: {node: '>=8'}
    dependencies:
      path-key: 3.1.1
    dev: true

  /npm-run-path@5.1.0:
    resolution: {integrity: sha512-sJOdmRGrY2sjNTRMbSvluQqg+8X7ZK61yvzBEIDhz4f8z1TZFYABsqjjCBd/0PUNE9M6QDgHJXQkGUEm7Q+l9Q==}
    engines: {node: ^12.20.0 || ^14.13.1 || >=16.0.0}
    dependencies:
      path-key: 4.0.0
    dev: true

  /npm-to-yarn@2.1.0:
    resolution: {integrity: sha512-2C1IgJLdJngq1bSER7K7CGFszRr9s2rijEwvENPEgI0eK9xlD3tNwDc0UJnRj7FIT2aydWm72jB88uVswAhXHA==}
    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}
    dev: false

  /nth-check@2.1.1:
    resolution: {integrity: sha512-lqjrjmaOoAnWfMmBPL+XNnynZh2+swxiX3WUE0s4yEHI6m+AwrK2UZOimIRl3X/4QctVqS8AiZjFqyOGrMXb/w==}
    dependencies:
      boolbase: 1.0.0
    dev: true

  /object-assign@4.1.1:
    resolution: {integrity: sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==}
    engines: {node: '>=0.10.0'}

  /object-hash@3.0.0:
    resolution: {integrity: sha512-RSn9F68PjH9HqtltsSnqYC1XXoWe9Bju5+213R98cNGttag9q9yAOTzdbsqvIa7aNm5WffBZFpWYr2aWrklWAw==}
    engines: {node: '>= 6'}

  /object-inspect@1.13.1:
    resolution: {integrity: sha512-5qoj1RUiKOMsCCNLV1CBiPYE10sziTsnmNxkAI/rZhiD63CF7IqdFGC/XzjWjpSgLf0LxXX3bDFIh0E18f6UhQ==}
    dev: true

  /object-keys@1.1.1:
    resolution: {integrity: sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==}
    engines: {node: '>= 0.4'}
    dev: true

  /object.assign@4.1.4:
    resolution: {integrity: sha512-1mxKf0e58bvyjSCtKYY4sRe9itRk3PJpquJOjeIkz885CczcI4IvJJDLPS72oowuSh+pBxUFROpX+TU++hxhZQ==}
    engines: {node: '>= 0.4'}
    dependencies:
      call-bind: 1.0.5
      define-properties: 1.2.1
      has-symbols: 1.0.3
      object-keys: 1.1.1
    dev: true

  /object.entries@1.1.7:
    resolution: {integrity: sha512-jCBs/0plmPsOnrKAfFQXRG2NFjlhZgjjcBLSmTnEhU8U6vVTsVe8ANeQJCHTl3gSsI4J+0emOoCgoKlmQPMgmA==}
    engines: {node: '>= 0.4'}
    dependencies:
      call-bind: 1.0.5
      define-properties: 1.2.1
      es-abstract: 1.22.3
    dev: true

  /object.fromentries@2.0.7:
    resolution: {integrity: sha512-UPbPHML6sL8PI/mOqPwsH4G6iyXcCGzLin8KvEPenOZN5lpCNBZZQ+V62vdjB1mQHrmqGQt5/OJzemUA+KJmEA==}
    engines: {node: '>= 0.4'}
    dependencies:
      call-bind: 1.0.5
      define-properties: 1.2.1
      es-abstract: 1.22.3
    dev: true

  /object.groupby@1.0.1:
    resolution: {integrity: sha512-HqaQtqLnp/8Bn4GL16cj+CUYbnpe1bh0TtEaWvybszDG4tgxCJuRpV8VGuvNaI1fAnI4lUJzDG55MXcOH4JZcQ==}
    dependencies:
      call-bind: 1.0.5
      define-properties: 1.2.1
      es-abstract: 1.22.3
      get-intrinsic: 1.2.2
    dev: true

  /object.hasown@1.1.3:
    resolution: {integrity: sha512-fFI4VcYpRHvSLXxP7yiZOMAd331cPfd2p7PFDVbgUsYOfCT3tICVqXWngbjr4m49OvsBwUBQ6O2uQoJvy3RexA==}
    dependencies:
      define-properties: 1.2.1
      es-abstract: 1.22.3
    dev: true

  /object.values@1.1.7:
    resolution: {integrity: sha512-aU6xnDFYT3x17e/f0IiiwlGPTy2jzMySGfUB4fq6z7CV8l85CWHDk5ErhyhpfDHhrOMwGFhSQkhMGHaIotA6Ng==}
    engines: {node: '>= 0.4'}
    dependencies:
      call-bind: 1.0.5
      define-properties: 1.2.1
      es-abstract: 1.22.3
    dev: true

  /once@1.4.0:
    resolution: {integrity: sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==}
    dependencies:
      wrappy: 1.0.2

  /onetime@5.1.2:
    resolution: {integrity: sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==}
    engines: {node: '>=6'}
    dependencies:
      mimic-fn: 2.1.0
    dev: true

  /onetime@6.0.0:
    resolution: {integrity: sha512-1FlR+gjXK7X+AsAHso35MnyN5KqGwJRi/31ft6x0M194ht7S+rWAvd7PHss9xSKMzE0asv1pyIHaJYq+BbacAQ==}
    engines: {node: '>=12'}
    dependencies:
      mimic-fn: 4.0.0
    dev: true

  /open@9.1.0:
    resolution: {integrity: sha512-OS+QTnw1/4vrf+9hh1jc1jnYjzSG4ttTBB8UxOwAnInG3Uo4ssetzC1ihqaIHjLJnA5GGlRl6QlZXOTQhRBUvg==}
    engines: {node: '>=14.16'}
    dependencies:
      default-browser: 4.0.0
      define-lazy-prop: 3.0.0
      is-inside-container: 1.0.0
      is-wsl: 2.2.0
    dev: true

  /optionator@0.9.3:
    resolution: {integrity: sha512-JjCoypp+jKn1ttEFExxhetCKeJt9zhAgAve5FXHixTvFDW/5aEktX9bufBKLRRMdU7bNtpLfcGu94B3cdEJgjg==}
    engines: {node: '>= 0.8.0'}
    dependencies:
      '@aashutoshrathi/word-wrap': 1.2.6
      deep-is: 0.1.4
      fast-levenshtein: 2.0.6
      levn: 0.4.1
      prelude-ls: 1.2.1
      type-check: 0.4.0
    dev: true

  /outvariant@1.4.0:
    resolution: {integrity: sha512-AlWY719RF02ujitly7Kk/0QlV+pXGFDHrHf9O2OKqyqgBieaPOIeuSkL8sRK6j2WK+/ZAURq2kZsY0d8JapUiw==}
    dev: false

  /p-finally@1.0.0:
    resolution: {integrity: sha512-LICb2p9CB7FS+0eR1oqWnHhp0FljGLZCWBE9aix0Uye9W8LTQPwMTYVGWQWIw9RdQiDg4+epXQODwIYJtSJaow==}
    engines: {node: '>=4'}
    dev: false

  /p-limit@3.1.0:
    resolution: {integrity: sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==}
    engines: {node: '>=10'}
    dependencies:
      yocto-queue: 0.1.0
    dev: false

  /pako@0.2.9:
    resolution: {integrity: sha512-NUcwaKxUxWrZLpDG+z/xZaCgQITkA/Dv4V/T6bw7VON6l1Xz/VnrBqrYjZQ12TamKHzITTfOEIYUj48y2KXImA==}
    dev: false

  /parent-module@1.0.1:
    resolution: {integrity: sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==}
    engines: {node: '>=6'}
    dependencies:
      callsites: 3.1.0
    dev: true

  /parse-css-color@0.2.1:
    resolution: {integrity: sha512-bwS/GGIFV3b6KS4uwpzCFj4w297Yl3uqnSgIPsoQkx7GMLROXfMnWvxfNkL0oh8HVhZA4hvJoEoEIqonfJ3BWg==}
    dependencies:
      color-name: 1.1.4
      hex-rgb: 4.3.0
    dev: false

  /parse-entities@4.0.1:
    resolution: {integrity: sha512-SWzvYcSJh4d/SGLIOQfZ/CoNv6BTlI6YEQ7Nj82oDVnRpwe/Z/F1EMx42x3JAOwGBlCjeCH0BRJQbQ/opHL17w==}
    dependencies:
      '@types/unist': 2.0.9
      character-entities: 2.0.2
      character-entities-legacy: 3.0.0
      character-reference-invalid: 2.0.1
      decode-named-character-reference: 1.0.2
      is-alphanumerical: 2.0.1
      is-decimal: 2.0.1
      is-hexadecimal: 2.0.1
    dev: false

  /parse-json@5.2.0:
    resolution: {integrity: sha512-ayCKvm/phCGxOkYRSCM82iDwct8/EonSEgCSxWxD7ve6jHggsFl4fZVQBPRNgQoKiuV/odhFrGzQXZwbifC8Rg==}
    engines: {node: '>=8'}
    dependencies:
      '@babel/code-frame': 7.22.13
      error-ex: 1.3.2
      json-parse-even-better-errors: 2.3.1
      lines-and-columns: 1.2.4
    dev: true

  /parse-numeric-range@1.3.0:
    resolution: {integrity: sha512-twN+njEipszzlMJd4ONUYgSfZPDxgHhT9Ahed5uTigpQn90FggW4SA/AIPq/6a149fTbE9qBEcSwE3FAEp6wQQ==}
    dev: false

  /parse-path@7.0.0:
    resolution: {integrity: sha512-Euf9GG8WT9CdqwuWJGdf3RkUcTBArppHABkO7Lm8IzRQp0e2r/kkFnmhu4TSK30Wcu5rVAZLmfPKSBBi9tWFog==}
    dependencies:
      protocols: 2.0.1
    dev: false

  /parse-url@8.1.0:
    resolution: {integrity: sha512-xDvOoLU5XRrcOZvnI6b8zA6n9O9ejNk/GExuz1yBuWUGn9KA97GI6HTs6u02wKara1CeVmZhH+0TZFdWScR89w==}
    dependencies:
      parse-path: 7.0.0
    dev: false

  /parse5@7.1.2:
    resolution: {integrity: sha512-Czj1WaSVpaoj0wbhMzLmWD69anp2WH7FXMB9n1Sy8/ZFF9jolSQVMu1Ij5WIyGmcBmhk7EOndpO4mIpihVqAXw==}
    dependencies:
      entities: 4.5.0
    dev: false

  /path-is-absolute@1.0.1:
    resolution: {integrity: sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==}
    engines: {node: '>=0.10.0'}

  /path-key@2.0.1:
    resolution: {integrity: sha512-fEHGKCSmUSDPv4uoj8AlD+joPlq3peND+HRYyxFz4KPw4z926S/b8rIuFs2FYJg3BwsxJf6A9/3eIdLaYC+9Dw==}
    engines: {node: '>=4'}
    dev: false

  /path-key@3.1.1:
    resolution: {integrity: sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==}
    engines: {node: '>=8'}
    dev: true

  /path-key@4.0.0:
    resolution: {integrity: sha512-haREypq7xkM7ErfgIyA0z+Bj4AGKlMSdlQE2jvJo6huWD1EdkKYV+G/T4nq0YEF2vgTT8kqMFKo1uHn950r4SQ==}
    engines: {node: '>=12'}
    dev: true

  /path-parse@1.0.7:
    resolution: {integrity: sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==}

  /path-type@4.0.0:
    resolution: {integrity: sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==}
    engines: {node: '>=8'}
    dev: true

  /periscopic@3.1.0:
    resolution: {integrity: sha512-vKiQ8RRtkl9P+r/+oefh25C3fhybptkHKCZSPlcXiJux2tJF55GnEj3BVn4A5gKfq9NWWXXrxkHBwVPUfH0opw==}
    dependencies:
      '@types/estree': 1.0.3
      estree-walker: 3.0.3
      is-reference: 3.0.2
    dev: false

  /picocolors@1.0.0:
    resolution: {integrity: sha512-1fygroTLlHu66zi26VoTDv8yRgm0Fccecssto+MhsZ0D/DGW2sm8E8AjW7NU5VVTRt5GxbeZ5qBuJr+HyLYkjQ==}

  /picomatch@2.3.1:
    resolution: {integrity: sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==}
    engines: {node: '>=8.6'}

  /pify@2.3.0:
    resolution: {integrity: sha512-udgsAY+fTnvv7kI7aaxbqwWNb0AHiB0qBO89PZKPkoTmGOgdbrHDKD+0B2X4uTfJ/FT1R09r9gTsjUjNJotuog==}
    engines: {node: '>=0.10.0'}

  /pirates@4.0.6:
    resolution: {integrity: sha512-saLsH7WeYYPiD25LDuLRRY/i+6HaPYr6G1OUlN39otzkSTxKnubR9RTxS3/Kk50s1g2JTgFwWQDQyplC5/SHZg==}
    engines: {node: '>= 6'}

  /postcss-import@15.1.0(postcss@8.4.31):
    resolution: {integrity: sha512-hpr+J05B2FVYUAXHeK1YyI267J/dDDhMU6B6civm8hSY1jYJnBXxzKDKDswzJmtLHryrjhnDjqqp/49t8FALew==}
    engines: {node: '>=14.0.0'}
    peerDependencies:
      postcss: ^8.0.0
    dependencies:
      postcss: 8.4.31
      postcss-value-parser: 4.2.0
      read-cache: 1.0.0
      resolve: 1.22.8

  /postcss-js@4.0.1(postcss@8.4.31):
    resolution: {integrity: sha512-dDLF8pEO191hJMtlHFPRa8xsizHaM82MLfNkUHdUtVEV3tgTp5oj+8qbEqYM57SLfc74KSbw//4SeJma2LRVIw==}
    engines: {node: ^12 || ^14 || >= 16}
    peerDependencies:
      postcss: ^8.4.21
    dependencies:
      camelcase-css: 2.0.1
      postcss: 8.4.31

  /postcss-load-config@4.0.1(postcss@8.4.31):
    resolution: {integrity: sha512-vEJIc8RdiBRu3oRAI0ymerOn+7rPuMvRXslTvZUKZonDHFIczxztIyJ1urxM1x9JXEikvpWWTUUqal5j/8QgvA==}
    engines: {node: '>= 14'}
    peerDependencies:
      postcss: '>=8.0.9'
      ts-node: '>=9.0.0'
    peerDependenciesMeta:
      postcss:
        optional: true
      ts-node:
        optional: true
    dependencies:
      lilconfig: 2.1.0
      postcss: 8.4.31
      yaml: 2.3.3

  /postcss-nested@6.0.1(postcss@8.4.31):
    resolution: {integrity: sha512-mEp4xPMi5bSWiMbsgoPfcP74lsWLHkQbZc3sY+jWYd65CUwXrUaTp0fmNpa01ZcETKlIgUdFN/MpS2xZtqL9dQ==}
    engines: {node: '>=12.0'}
    peerDependencies:
      postcss: ^8.2.14
    dependencies:
      postcss: 8.4.31
      postcss-selector-parser: 6.0.13

  /postcss-selector-parser@6.0.13:
    resolution: {integrity: sha512-EaV1Gl4mUEV4ddhDnv/xtj7sxwrwxdetHdWUGnT4VJQf+4d05v6lHYZr8N573k5Z0BViss7BDhfWtKS3+sfAqQ==}
    engines: {node: '>=4'}
    dependencies:
      cssesc: 3.0.0
      util-deprecate: 1.0.2

  /postcss-value-parser@4.2.0:
    resolution: {integrity: sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==}

  /postcss@8.4.31:
    resolution: {integrity: sha512-PS08Iboia9mts/2ygV3eLpY5ghnUcfLV/EXTOW1E2qYxJKGGBUtNjN76FYHnMs36RmARn41bC0AZmn+rR0OVpQ==}
    engines: {node: ^10 || ^12 || >=14}
    dependencies:
      nanoid: 3.3.6
      picocolors: 1.0.0
      source-map-js: 1.0.2

  /prelude-ls@1.2.1:
    resolution: {integrity: sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==}
    engines: {node: '>= 0.8.0'}
    dev: true

  /prettier-linter-helpers@1.0.0:
    resolution: {integrity: sha512-GbK2cP9nraSSUF9N2XwUwqfzlAFlMNYYl+ShE/V+H8a9uNl/oUqB1w2EL54Jh0OlyRSd8RfWYJ3coVS4TROP2w==}
    engines: {node: '>=6.0.0'}
    dependencies:
      fast-diff: 1.3.0
    dev: true

  /prettier@3.0.3:
    resolution: {integrity: sha512-L/4pUDMxcNa8R/EthV08Zt42WBO4h1rarVtK0K+QJG0X187OLo7l699jWw0GKuwzkPQ//jMFA/8Xm6Fh3J/DAg==}
    engines: {node: '>=14'}
    hasBin: true
    dev: true

  /progress@2.0.3:
    resolution: {integrity: sha512-7PiHtLll5LdnKIMw100I+8xJXR5gW2QwWYkT6iJva0bXitZKa/XMrSbdmg3r2Xnaidz9Qumd0VPaMrZlF9V9sA==}
    engines: {node: '>=0.4.0'}
    dev: true

  /prop-types@15.8.1:
    resolution: {integrity: sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==}
    dependencies:
      loose-envify: 1.4.0
      object-assign: 4.1.1
      react-is: 16.13.1
    dev: true

  /property-information@6.3.0:
    resolution: {integrity: sha512-gVNZ74nqhRMiIUYWGQdosYetaKc83x8oT41a0LlV3AAFCAZwCpg4vmGkq8t34+cUhp3cnM4XDiU/7xlgK7HGrg==}
    dev: false

  /protocols@2.0.1:
    resolution: {integrity: sha512-/XJ368cyBJ7fzLMwLKv1e4vLxOju2MNAIokcr7meSaNcVbWz/CPcW22cP04mwxOErdA5mwjA8Q6w/cdAQxVn7Q==}
    dev: false

  /pseudomap@1.0.2:
    resolution: {integrity: sha512-b/YwNhb8lk1Zz2+bXXpS/LK9OisiZZ1SNsSLxN1x2OXVEhW2Ckr/7mWE5vrC1ZTiJlD9g19jWszTmJsB+oEpFQ==}
    dev: false

  /punycode@2.3.0:
    resolution: {integrity: sha512-rRV+zQD8tVFys26lAGR9WUuS4iUAngJScM+ZRSKtvl5tKeZ2t5bvdNFdNHBW9FWR4guGHlgmsZ1G7BSm2wTbuA==}
    engines: {node: '>=6'}
    dev: true

  /queue-microtask@1.2.3:
    resolution: {integrity: sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==}

  /react-devtools-inline@4.4.0:
    resolution: {integrity: sha512-ES0GolSrKO8wsKbsEkVeiR/ZAaHQTY4zDh1UW8DImVmm8oaGLl3ijJDvSGe+qDRKPZdPRnDtWWnSvvrgxXdThQ==}
    dependencies:
      es6-symbol: 3.1.3
    dev: false

  /react-dom@18.2.0(react@18.2.0):
    resolution: {integrity: sha512-6IMTriUmvsjHUjNtEDudZfuDQUoWXVxKHhlEGSk81n4YFS+r/Kl99wXiwlVXtPBtJenozv2P+hxDsw9eA7Xo6g==}
    peerDependencies:
      react: ^18.2.0
    dependencies:
      loose-envify: 1.4.0
      react: 18.2.0
      scheduler: 0.23.0
    dev: false

  /react-is@16.13.1:
    resolution: {integrity: sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==}
    dev: true

  /react-is@17.0.2:
    resolution: {integrity: sha512-w2GsyukL62IJnlaff/nRegPQR94C/XXamvMWmSHRJ4y7Ts/4ocGRmTHvOs8PSE6pB3dWOrD/nueuU5sduBsQ4w==}
    dev: false

  /react@18.2.0:
    resolution: {integrity: sha512-/3IjMdb2L9QbBdWiW5e3P2/npwMBaU9mHCSCUzNln0ZCYbcfTsGbTJrU/kGemdH2IWmB2ioZ+zkxtmq6g09fGQ==}
    engines: {node: '>=0.10.0'}
    dependencies:
      loose-envify: 1.4.0
    dev: false

  /read-cache@1.0.0:
    resolution: {integrity: sha512-Owdv/Ft7IjOgm/i0xvNDZ1LrRANRfew4b2prF3OWMQLxLfu3bS8FVhCsrSCMK4lR56Y9ya+AThoTpDCTxCmpRA==}
    dependencies:
      pify: 2.3.0

  /readdirp@3.6.0:
    resolution: {integrity: sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==}
    engines: {node: '>=8.10.0'}
    dependencies:
      picomatch: 2.3.1

  /reading-time@1.5.0:
    resolution: {integrity: sha512-onYyVhBNr4CmAxFsKS7bz+uTLRakypIe4R+5A824vBSkQy/hB3fZepoVEf8OVAxzLvK+H/jm9TzpI3ETSm64Kg==}
    dev: false

  /reflect.getprototypeof@1.0.4:
    resolution: {integrity: sha512-ECkTw8TmJwW60lOTR+ZkODISW6RQ8+2CL3COqtiJKLd6MmB45hN51HprHFziKLGkAuTGQhBb91V8cy+KHlaCjw==}
    engines: {node: '>= 0.4'}
    dependencies:
      call-bind: 1.0.5
      define-properties: 1.2.1
      es-abstract: 1.22.3
      get-intrinsic: 1.2.2
      globalthis: 1.0.3
      which-builtin-type: 1.1.3
    dev: true

  /regenerate-unicode-properties@10.1.1:
    resolution: {integrity: sha512-X007RyZLsCJVVrjgEFVpLUTZwyOZk3oiL75ZcuYjlIWd6rNJtOjkBwQc5AsRrpbKVkxN6sklw/k/9m2jJYOf8Q==}
    engines: {node: '>=4'}
    dependencies:
      regenerate: 1.4.2
    dev: true

  /regenerate@1.4.2:
    resolution: {integrity: sha512-zrceR/XhGYU/d/opr2EKO7aRHUeiBI8qjtfHqADTwZd6Szfy16la6kqD0MIUs5z5hx6AaKa+PixpPrR289+I0A==}
    dev: true

  /regenerator-runtime@0.14.0:
    resolution: {integrity: sha512-srw17NI0TUWHuGa5CFGGmhfNIeja30WMBfbslPNhf6JrqQlLN5gcrvig1oqPxiVaXb0oW0XRKtH6Nngs5lKCIA==}

  /regenerator-transform@0.15.2:
    resolution: {integrity: sha512-hfMp2BoF0qOk3uc5V20ALGDS2ddjQaLrdl7xrGXvAIow7qeWRM2VA2HuCHkUKk9slq3VwEwLNK3DFBqDfPGYtg==}
    dependencies:
      '@babel/runtime': 7.23.2
    dev: true

  /regexp.prototype.flags@1.5.1:
    resolution: {integrity: sha512-sy6TXMN+hnP/wMy+ISxg3krXx7BAtWVO4UouuCN/ziM9UEne0euamVNafDfvC83bRNr95y0V5iijeDQFUNpvrg==}
    engines: {node: '>= 0.4'}
    dependencies:
      call-bind: 1.0.5
      define-properties: 1.2.1
      set-function-name: 2.0.1
    dev: true

  /regexpp@3.2.0:
    resolution: {integrity: sha512-pq2bWo9mVD43nbts2wGv17XLiNLya+GklZ8kaDLV2Z08gDCsGpnKn9BFMepvWuHCbyVvY7J5o5+BVvoQbmlJLg==}
    engines: {node: '>=8'}
    dev: true

  /regexpu-core@5.3.2:
    resolution: {integrity: sha512-RAM5FlZz+Lhmo7db9L298p2vHP5ZywrVXmVXpmAD9GuL5MPH6t9ROw1iA/wfHkQ76Qe7AaPF0nGuim96/IrQMQ==}
    engines: {node: '>=4'}
    dependencies:
      '@babel/regjsgen': 0.8.0
      regenerate: 1.4.2
      regenerate-unicode-properties: 10.1.1
      regjsparser: 0.9.1
      unicode-match-property-ecmascript: 2.0.0
      unicode-match-property-value-ecmascript: 2.1.0
    dev: true

  /regjsparser@0.9.1:
    resolution: {integrity: sha512-dQUtn90WanSNl+7mQKcXAgZxvUe7Z0SqXlgzv0za4LwiUhyzBC58yQO3liFoUgu8GiJVInAhJjkj1N0EtQ5nkQ==}
    hasBin: true
    dependencies:
      jsesc: 0.5.0
    dev: true

  /rehype-katex@7.0.0:
    resolution: {integrity: sha512-h8FPkGE00r2XKU+/acgqwWUlyzve1IiOKwsEkg4pDL3k48PiE0Pt+/uLtVHDVkN1yA4iurZN6UES8ivHVEQV6Q==}
    dependencies:
      '@types/hast': 3.0.2
      '@types/katex': 0.16.5
      hast-util-from-html-isomorphic: 2.0.0
      hast-util-to-text: 4.0.0
      katex: 0.16.9
      unist-util-visit-parents: 6.0.1
      vfile: 6.0.1
    dev: false

  /rehype-pretty-code@0.9.11(shiki@0.14.5):
    resolution: {integrity: sha512-Eq90eCYXQJISktfRZ8PPtwc5SUyH6fJcxS8XOMnHPUQZBtC6RYo67gGlley9X2nR8vlniPj0/7oCDEYHKQa/oA==}
    engines: {node: '>=16'}
    peerDependencies:
      shiki: '*'
    dependencies:
      '@types/hast': 2.3.7
      hash-obj: 4.0.0
      parse-numeric-range: 1.3.0
      shiki: 0.14.5
    dev: false

  /rehype-raw@7.0.0:
    resolution: {integrity: sha512-/aE8hCfKlQeA8LmyeyQvQF3eBiLRGNlfBJEvWH7ivp9sBqs7TNqBL5X3v157rM4IFETqDnIOO+z5M/biZbo9Ww==}
    dependencies:
      '@types/hast': 3.0.2
      hast-util-raw: 9.0.1
      vfile: 6.0.1
    dev: false

  /remark-gfm@3.0.1:
    resolution: {integrity: sha512-lEFDoi2PICJyNrACFOfDD3JlLkuSbOa5Wd8EPt06HUdptv8Gn0bxYTdbU/XXQ3swAPkEaGxxPN9cbnMHvVu1Ig==}
    dependencies:
      '@types/mdast': 3.0.14
      mdast-util-gfm: 2.0.2
      micromark-extension-gfm: 2.0.3
      unified: 10.1.2
    transitivePeerDependencies:
      - supports-color
    dev: false

  /remark-math@5.1.1:
    resolution: {integrity: sha512-cE5T2R/xLVtfFI4cCePtiRn+e6jKMtFDR3P8V3qpv8wpKjwvHoBA4eJzvX+nVrnlNy0911bdGmuspCSwetfYHw==}
    dependencies:
      '@types/mdast': 3.0.14
      mdast-util-math: 2.0.2
      micromark-extension-math: 2.1.2
      unified: 10.1.2
    dev: false

  /remark-mdx@2.3.0:
    resolution: {integrity: sha512-g53hMkpM0I98MU266IzDFMrTD980gNF3BJnkyFcmN+dD873mQeD5rdMO3Y2X+x8umQfbSE0PcoEDl7ledSA+2g==}
    dependencies:
      mdast-util-mdx: 2.0.1
      micromark-extension-mdxjs: 1.0.1
    transitivePeerDependencies:
      - supports-color
    dev: false

  /remark-parse@10.0.2:
    resolution: {integrity: sha512-3ydxgHa/ZQzG8LvC7jTXccARYDcRld3VfcgIIFs7bI6vbRSxJJmzgLEIIoYKyrfhaY+ujuWaf/PJiMZXoiCXgw==}
    dependencies:
      '@types/mdast': 3.0.14
      mdast-util-from-markdown: 1.3.1
      unified: 10.1.2
    transitivePeerDependencies:
      - supports-color
    dev: false

  /remark-reading-time@2.0.1:
    resolution: {integrity: sha512-fy4BKy9SRhtYbEHvp6AItbRTnrhiDGbqLQTSYVbQPGuRCncU1ubSsh9p/W5QZSxtYcUXv8KGL0xBgPLyNJA1xw==}
    dependencies:
      estree-util-is-identifier-name: 2.1.0
      estree-util-value-to-estree: 1.3.0
      reading-time: 1.5.0
      unist-util-visit: 3.1.0
    dev: false

  /remark-rehype@10.1.0:
    resolution: {integrity: sha512-EFmR5zppdBp0WQeDVZ/b66CWJipB2q2VLNFMabzDSGR66Z2fQii83G5gTBbgGEnEEA0QRussvrFHxk1HWGJskw==}
    dependencies:
      '@types/hast': 2.3.7
      '@types/mdast': 3.0.14
      mdast-util-to-hast: 12.3.0
      unified: 10.1.2
    dev: false

  /remove-accents@0.4.2:
    resolution: {integrity: sha512-7pXIJqJOq5tFgG1A2Zxti3Ht8jJF337m4sowbuHsW30ZnkQFnDzy9qBNhgzX8ZLW4+UBcXiiR7SwR6pokHsxiA==}
    dev: false

  /resolve-from@4.0.0:
    resolution: {integrity: sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==}
    engines: {node: '>=4'}
    dev: true

  /resolve-pkg-maps@1.0.0:
    resolution: {integrity: sha512-seS2Tj26TBVOC2NIc2rOe2y2ZO7efxITtLZcGSOnHHNOQ7CkiUBfw0Iw2ck6xkIhPwLhKNLS8BO+hEpngQlqzw==}
    dev: true

  /resolve@1.22.8:
    resolution: {integrity: sha512-oKWePCxqpd6FlLvGV1VU0x7bkPmmCNolxzjMf4NczoDnQcIWrAF+cPtZn5i6n+RfD2d9i0tzpKnG6Yk168yIyw==}
    hasBin: true
    dependencies:
      is-core-module: 2.13.1
      path-parse: 1.0.7
      supports-preserve-symlinks-flag: 1.0.0

  /resolve@2.0.0-next.5:
    resolution: {integrity: sha512-U7WjGVG9sH8tvjW5SmGbQuui75FiyjAX72HX15DwBBwF9dNiQZRQAg9nnPhYy+TUnE0+VcrttuvNI8oSxZcocA==}
    hasBin: true
    dependencies:
      is-core-module: 2.13.1
      path-parse: 1.0.7
      supports-preserve-symlinks-flag: 1.0.0
    dev: true

  /reusify@1.0.4:
    resolution: {integrity: sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==}
    engines: {iojs: '>=1.0.0', node: '>=0.10.0'}

  /rimraf@3.0.2:
    resolution: {integrity: sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==}
    hasBin: true
    dependencies:
      glob: 7.2.3
    dev: true

  /robust-predicates@3.0.2:
    resolution: {integrity: sha512-IXgzBWvWQwE6PrDI05OvmXUIruQTcoMDzRsOd5CDvHCVLcLHMTSYvOK5Cm46kWqlV3yAbuSpBZdJ5oP5OUoStg==}
    dev: false

  /run-applescript@5.0.0:
    resolution: {integrity: sha512-XcT5rBksx1QdIhlFOCtgZkB99ZEouFZ1E2Kc2LHqNW13U3/74YGdkQRmThTwxy4QIyookibDKYZOPqX//6BlAg==}
    engines: {node: '>=12'}
    dependencies:
      execa: 5.1.1
    dev: true

  /run-parallel@1.2.0:
    resolution: {integrity: sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==}
    dependencies:
      queue-microtask: 1.2.3

  /rw@1.3.3:
    resolution: {integrity: sha512-PdhdWy89SiZogBLaw42zdeqtRJ//zFd2PgQavcICDUgJT5oW10QCRKbJ6bg4r0/UY2M6BWd5tkxuGFRvCkgfHQ==}
    dev: false

  /sade@1.8.1:
    resolution: {integrity: sha512-xal3CZX1Xlo/k4ApwCFrHVACi9fBqJ7V+mwhBsuf/1IOKbBy098Fex+Wa/5QMubw09pSZ/u8EY8PWgevJsXp1A==}
    engines: {node: '>=6'}
    dependencies:
      mri: 1.2.0
    dev: false

  /safe-array-concat@1.0.1:
    resolution: {integrity: sha512-6XbUAseYE2KtOuGueyeobCySj9L4+66Tn6KQMOPQJrAJEowYKW/YR/MGJZl7FdydUdaFu4LYyDZjxf4/Nmo23Q==}
    engines: {node: '>=0.4'}
    dependencies:
      call-bind: 1.0.5
      get-intrinsic: 1.2.2
      has-symbols: 1.0.3
      isarray: 2.0.5
    dev: true

  /safe-regex-test@1.0.0:
    resolution: {integrity: sha512-JBUUzyOgEwXQY1NuPtvcj/qcBDbDmEvWufhlnXZIm75DEHp+afM1r1ujJpJsV/gSM4t59tpDyPi1sd6ZaPFfsA==}
    dependencies:
      call-bind: 1.0.5
      get-intrinsic: 1.2.2
      is-regex: 1.1.4
    dev: true

  /safer-buffer@2.1.2:
    resolution: {integrity: sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==}
    dev: false

  /satori@0.10.9:
    resolution: {integrity: sha512-XU9EELUEZuioT4acLIpCXxHcFzrsC8muvg0MY28d+TlqwxbkTzBmWbw+3+hnCzXT7YZ0Qm8k3eXktDaEu+qmEw==}
    engines: {node: '>=16'}
    dependencies:
      '@shuding/opentype.js': 1.4.0-beta.0
      css-background-parser: 0.1.0
      css-box-shadow: 1.0.0-3
      css-to-react-native: 3.2.0
      emoji-regex: 10.3.0
      escape-html: 1.0.3
      linebreak: 1.1.0
      parse-css-color: 0.2.1
      postcss-value-parser: 4.2.0
      yoga-wasm-web: 0.3.3
    dev: false

  /scheduler@0.23.0:
    resolution: {integrity: sha512-CtuThmgHNg7zIZWAXi3AsyIzA3n4xx7aNyjwC2VJldO2LMVDhFK+63xGqq6CsJH4rTAt6/M+N4GhZiDYPx9eUw==}
    dependencies:
      loose-envify: 1.4.0
    dev: false

  /scroll-into-view-if-needed@3.1.0:
    resolution: {integrity: sha512-49oNpRjWRvnU8NyGVmUaYG4jtTkNonFZI86MmGRDqBphEK2EXT9gdEUoQPZhuBM8yWHxCWbobltqYO5M4XrUvQ==}
    dependencies:
      compute-scroll-into-view: 3.1.0
    dev: false

  /section-matter@1.0.0:
    resolution: {integrity: sha512-vfD3pmTzGpufjScBh50YHKzEu2lxBWhVEHsNGoEXmCmn2hKGfeNLYMzCJpe8cD7gqX7TJluOVpBkAequ6dgMmA==}
    engines: {node: '>=4'}
    dependencies:
      extend-shallow: 2.0.1
      kind-of: 6.0.3
    dev: false

  /semver@6.3.1:
    resolution: {integrity: sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==}
    hasBin: true

  /semver@7.5.4:
    resolution: {integrity: sha512-1bCSESV6Pv+i21Hvpxp3Dx+pSD8lIPt8uVjRrxAUt/nbswYc+tK6Y2btiULjd4+fnq15PX+nqQDC7Oft7WkwcA==}
    engines: {node: '>=10'}
    hasBin: true
    dependencies:
      lru-cache: 6.0.0
    dev: true

  /set-function-length@1.1.1:
    resolution: {integrity: sha512-VoaqjbBJKiWtg4yRcKBQ7g7wnGnLV3M8oLvVWwOk2PdYY6PEFegR1vezXR0tw6fZGF9csVakIRjrJiy2veSBFQ==}
    engines: {node: '>= 0.4'}
    dependencies:
      define-data-property: 1.1.1
      get-intrinsic: 1.2.2
      gopd: 1.0.1
      has-property-descriptors: 1.0.1
    dev: true

  /set-function-name@2.0.1:
    resolution: {integrity: sha512-tMNCiqYVkXIZgc2Hnoy2IvC/f8ezc5koaRFkCjrpWzGpCd3qbZXPzVy9MAZzK1ch/X0jvSkojys3oqJN0qCmdA==}
    engines: {node: '>= 0.4'}
    dependencies:
      define-data-property: 1.1.1
      functions-have-names: 1.2.3
      has-property-descriptors: 1.0.1
    dev: true

  /shebang-command@1.2.0:
    resolution: {integrity: sha512-EV3L1+UQWGor21OmnvojK36mhg+TyIKDh3iFBKBohr5xeXIhNBcx8oWdgkTEEQ+BEFFYdLRuqMfd5L84N1V5Vg==}
    engines: {node: '>=0.10.0'}
    dependencies:
      shebang-regex: 1.0.0
    dev: false

  /shebang-command@2.0.0:
    resolution: {integrity: sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==}
    engines: {node: '>=8'}
    dependencies:
      shebang-regex: 3.0.0
    dev: true

  /shebang-regex@1.0.0:
    resolution: {integrity: sha512-wpoSFAxys6b2a2wHZ1XpDSgD7N9iVjg29Ph9uV/uaP9Ex/KXlkTZTeddxDPSYQpgvzKLGJke2UU0AzoGCjNIvQ==}
    engines: {node: '>=0.10.0'}
    dev: false

  /shebang-regex@3.0.0:
    resolution: {integrity: sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==}
    engines: {node: '>=8'}
    dev: true

  /shiki@0.14.5:
    resolution: {integrity: sha512-1gCAYOcmCFONmErGTrS1fjzJLA7MGZmKzrBNX7apqSwhyITJg2O102uFzXUeBxNnEkDA9vHIKLyeKq0V083vIw==}
    dependencies:
      ansi-sequence-parser: 1.1.1
      jsonc-parser: 3.2.0
      vscode-oniguruma: 1.7.0
      vscode-textmate: 8.0.0
    dev: false

  /side-channel@1.0.4:
    resolution: {integrity: sha512-q5XPytqFEIKHkGdiMIrY10mvLRvnQh42/+GoBlFW3b2LXLE2xxJpZFdm94we0BaoV3RwJyGqg5wS7epxTv0Zvw==}
    dependencies:
      call-bind: 1.0.5
      get-intrinsic: 1.2.2
      object-inspect: 1.13.1
    dev: true

  /signal-exit@3.0.7:
    resolution: {integrity: sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ==}

  /slash@3.0.0:
    resolution: {integrity: sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==}
    engines: {node: '>=8'}

  /snake-case@3.0.4:
    resolution: {integrity: sha512-LAOh4z89bGQvl9pFfNF8V146i7o7/CqFPbqzYgP+yYzDIDeS9HaNFtXABamRW+AQzEVODcvE79ljJ+8a9YSdMg==}
    dependencies:
      dot-case: 3.0.4
      tslib: 2.6.2
    dev: true

  /sort-keys@5.0.0:
    resolution: {integrity: sha512-Pdz01AvCAottHTPQGzndktFNdbRA75BgOfeT1hH+AMnJFv8lynkPi42rfeEhpx1saTEI3YNMWxfqu0sFD1G8pw==}
    engines: {node: '>=12'}
    dependencies:
      is-plain-obj: 4.1.0
    dev: false

  /source-map-js@1.0.2:
    resolution: {integrity: sha512-R0XvVJ9WusLiqTCEiGCmICCMplcCkIwwR11mOSD9CR5u+IXYdiseeEuXCVAjS54zqwkLcPNnmU4OeJ6tUrWhDw==}
    engines: {node: '>=0.10.0'}

  /source-map@0.7.4:
    resolution: {integrity: sha512-l3BikUxvPOcn5E74dZiq5BGsTb5yEwhaTSzccU6t4sDOH8NWJCstKO5QT2CvtFoK6F0saL7p9xHAqHOlCPJygA==}
    engines: {node: '>= 8'}
    dev: false

  /space-separated-tokens@2.0.2:
    resolution: {integrity: sha512-PEGlAwrG8yXGXRjW32fGbg66JAlOAwbObuqVoJpv/mRgoWDQfgH1wDPvtzWyUSNAXBGSk8h755YDbbcEy3SH2Q==}
    dev: false

  /sprintf-js@1.0.3:
    resolution: {integrity: sha512-D9cPgkvLlV3t3IzL0D0YLvGA9Ahk4PcvVwUbN0dSGr1aP0Nrt4AEnTUbuGvquEC0mA64Gqt1fzirlRs5ibXx8g==}
    dev: false

  /static-browser-server@1.0.3:
    resolution: {integrity: sha512-ZUyfgGDdFRbZGGJQ1YhiM930Yczz5VlbJObrQLlk24+qNHVQx4OlLcYswEUo3bIyNAbQUIUR9Yr5/Hqjzqb4zA==}
    dependencies:
      '@open-draft/deferred-promise': 2.2.0
      dotenv: 16.3.1
      mime-db: 1.52.0
      outvariant: 1.4.0
    dev: false

  /streamsearch@1.1.0:
    resolution: {integrity: sha512-Mcc5wHehp9aXz1ax6bZUyY5afg9u2rv5cqQI3mRrYkGC8rW2hM02jWuwjtL++LS5qinSyhj2QfLyNsuc+VsExg==}
    engines: {node: '>=10.0.0'}
    dev: false

  /strict-event-emitter@0.4.6:
    resolution: {integrity: sha512-12KWeb+wixJohmnwNFerbyiBrAlq5qJLwIt38etRtKtmmHyDSoGlIqFE9wx+4IwG0aDjI7GV8tc8ZccjWZZtTg==}
    dev: false

  /string.prototype.codepointat@0.2.1:
    resolution: {integrity: sha512-2cBVCj6I4IOvEnjgO/hWqXjqBGsY+zwPmHl12Srk9IXSZ56Jwwmy+66XO5Iut/oQVR7t5ihYdLB0GMa4alEUcg==}
    dev: false

  /string.prototype.matchall@4.0.10:
    resolution: {integrity: sha512-rGXbGmOEosIQi6Qva94HUjgPs9vKW+dkG7Y8Q5O2OYkWL6wFaTRZO8zM4mhP94uX55wgyrXzfS2aGtGzUL7EJQ==}
    dependencies:
      call-bind: 1.0.5
      define-properties: 1.2.1
      es-abstract: 1.22.3
      get-intrinsic: 1.2.2
      has-symbols: 1.0.3
      internal-slot: 1.0.6
      regexp.prototype.flags: 1.5.1
      set-function-name: 2.0.1
      side-channel: 1.0.4
    dev: true

  /string.prototype.trim@1.2.8:
    resolution: {integrity: sha512-lfjY4HcixfQXOfaqCvcBuOIapyaroTXhbkfJN3gcB1OtyupngWK4sEET9Knd0cXd28kTUqu/kHoV4HKSJdnjiQ==}
    engines: {node: '>= 0.4'}
    dependencies:
      call-bind: 1.0.5
      define-properties: 1.2.1
      es-abstract: 1.22.3
    dev: true

  /string.prototype.trimend@1.0.7:
    resolution: {integrity: sha512-Ni79DqeB72ZFq1uH/L6zJ+DKZTkOtPIHovb3YZHQViE+HDouuU4mBrLOLDn5Dde3RF8qw5qVETEjhu9locMLvA==}
    dependencies:
      call-bind: 1.0.5
      define-properties: 1.2.1
      es-abstract: 1.22.3
    dev: true

  /string.prototype.trimstart@1.0.7:
    resolution: {integrity: sha512-NGhtDFu3jCEm7B4Fy0DpLewdJQOZcQ0rGbwQ/+stjnrp2i+rlKeCvos9hOIeCmqwratM47OBxY7uFZzjxHXmrg==}
    dependencies:
      call-bind: 1.0.5
      define-properties: 1.2.1
      es-abstract: 1.22.3
    dev: true

  /stringify-entities@4.0.3:
    resolution: {integrity: sha512-BP9nNHMhhfcMbiuQKCqMjhDP5yBCAxsPu4pHFFzJ6Alo9dZgY4VLDPutXqIjpRiMoKdp7Av85Gr73Q5uH9k7+g==}
    dependencies:
      character-entities-html4: 2.1.0
      character-entities-legacy: 3.0.0
    dev: false

  /strip-ansi@6.0.1:
    resolution: {integrity: sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==}
    engines: {node: '>=8'}
    dependencies:
      ansi-regex: 5.0.1
    dev: true

  /strip-bom-string@1.0.0:
    resolution: {integrity: sha512-uCC2VHvQRYu+lMh4My/sFNmF2klFymLX1wHJeXnbEJERpV/ZsVuonzerjfrGpIGF7LBVa1O7i9kjiWvJiFck8g==}
    engines: {node: '>=0.10.0'}
    dev: false

  /strip-bom@3.0.0:
    resolution: {integrity: sha512-vavAMRXOgBVNF6nyEEmL3DBK19iRpDcoIwW+swQ+CbGiu7lju6t+JklA1MHweoWtadgt4ISVUsXLyDq34ddcwA==}
    engines: {node: '>=4'}
    dev: true

  /strip-eof@1.0.0:
    resolution: {integrity: sha512-7FCwGGmx8mD5xQd3RPUvnSpUXHM3BWuzjtpD4TXsfcZ9EL4azvVVUscFYwD9nx8Kh+uCBC00XBtAykoMHwTh8Q==}
    engines: {node: '>=0.10.0'}
    dev: false

  /strip-final-newline@2.0.0:
    resolution: {integrity: sha512-BrpvfNAE3dcvq7ll3xVumzjKjZQ5tI1sEUIKr3Uoks0XUl45St3FlatVqef9prk4jRDzhW6WZg+3bk93y6pLjA==}
    engines: {node: '>=6'}
    dev: true

  /strip-final-newline@3.0.0:
    resolution: {integrity: sha512-dOESqjYr96iWYylGObzd39EuNTa5VJxyvVAEm5Jnh7KGo75V43Hk1odPQkNDyXNmUR6k+gEiDVXnjB8HJ3crXw==}
    engines: {node: '>=12'}
    dev: true

  /strip-json-comments@3.1.1:
    resolution: {integrity: sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==}
    engines: {node: '>=8'}
    dev: true

  /style-mod@4.1.0:
    resolution: {integrity: sha512-Ca5ib8HrFn+f+0n4N4ScTIA9iTOQ7MaGS1ylHcoVqW9J7w2w8PzN6g9gKmTYgGEBH8e120+RCmhpje6jC5uGWA==}
    dev: false

  /style-to-object@0.4.4:
    resolution: {integrity: sha512-HYNoHZa2GorYNyqiCaBgsxvcJIn7OHq6inEga+E6Ke3m5JkoqpQbnFssk4jwe+K7AhGa2fcha4wSOf1Kn01dMg==}
    dependencies:
      inline-style-parser: 0.1.1
    dev: false

  /styled-jsx@5.1.1(@babel/core@7.23.2)(react@18.2.0):
    resolution: {integrity: sha512-pW7uC1l4mBZ8ugbiZrcIsiIvVx1UmTfw7UkC3Um2tmfUq9Bhk8IiyEIPl6F8agHgjzku6j0xQEZbfA5uSgSaCw==}
    engines: {node: '>= 12.0.0'}
    peerDependencies:
      '@babel/core': '*'
      babel-plugin-macros: '*'
      react: '>= 16.8.0 || 17.x.x || ^18.0.0-0'
    peerDependenciesMeta:
      '@babel/core':
        optional: true
      babel-plugin-macros:
        optional: true
    dependencies:
      '@babel/core': 7.23.2
      client-only: 0.0.1
      react: 18.2.0
    dev: false

  /stylis@4.3.0:
    resolution: {integrity: sha512-E87pIogpwUsUwXw7dNyU4QDjdgVMy52m+XEOPEKUn161cCzWjjhPSQhByfd1CcNvrOLnXQ6OnnZDwnJrz/Z4YQ==}
    dev: false

  /sucrase@3.34.0:
    resolution: {integrity: sha512-70/LQEZ07TEcxiU2dz51FKaE6hCTWC6vr7FOk3Gr0U60C3shtAN+H+BFr9XlYe5xqf3RA8nrc+VIwzCfnxuXJw==}
    engines: {node: '>=8'}
    hasBin: true
    dependencies:
      '@jridgewell/gen-mapping': 0.3.3
      commander: 4.1.1
      glob: 7.1.6
      lines-and-columns: 1.2.4
      mz: 2.7.0
      pirates: 4.0.6
      ts-interface-checker: 0.1.13

  /supports-color@4.5.0:
    resolution: {integrity: sha512-ycQR/UbvI9xIlEdQT1TQqwoXtEldExbCEAJgRo5YXlmSKjv6ThHnP9/vwGa1gr19Gfw+LkFd7KqYMhzrRC5JYw==}
    engines: {node: '>=4'}
    dependencies:
      has-flag: 2.0.0
    dev: false

  /supports-color@5.5.0:
    resolution: {integrity: sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==}
    engines: {node: '>=4'}
    dependencies:
      has-flag: 3.0.0

  /supports-color@7.2.0:
    resolution: {integrity: sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==}
    engines: {node: '>=8'}
    dependencies:
      has-flag: 4.0.0
    dev: true

  /supports-preserve-symlinks-flag@1.0.0:
    resolution: {integrity: sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==}
    engines: {node: '>= 0.4'}

  /svg-parser@2.0.4:
    resolution: {integrity: sha512-e4hG1hRwoOdRb37cIMSgzNsxyzKfayW6VOflrwvR+/bzrkyxY/31WkbgnQpgtrNp1SdpJvpUAGTa/ZoiPNDuRQ==}
    dev: true

  /svgo@3.0.2:
    resolution: {integrity: sha512-Z706C1U2pb1+JGP48fbazf3KxHrWOsLme6Rv7imFBn5EnuanDW1GPaA/P1/dvObE670JDePC3mnj0k0B7P0jjQ==}
    engines: {node: '>=14.0.0'}
    hasBin: true
    dependencies:
      '@trysound/sax': 0.2.0
      commander: 7.2.0
      css-select: 5.1.0
      css-tree: 2.3.1
      csso: 5.0.5
      picocolors: 1.0.0
    dev: true

  /synckit@0.8.5:
    resolution: {integrity: sha512-L1dapNV6vu2s/4Sputv8xGsCdAVlb5nRDMFU/E27D44l5U6cw1g0dGd45uLc+OXjNMmF4ntiMdCimzcjFKQI8Q==}
    engines: {node: ^14.18.0 || >=16.0.0}
    dependencies:
      '@pkgr/utils': 2.4.2
      tslib: 2.6.2
    dev: true

  /tailwindcss@3.3.3:
    resolution: {integrity: sha512-A0KgSkef7eE4Mf+nKJ83i75TMyq8HqY3qmFIJSWy8bNt0v1lG7jUcpGpoTFxAwYcWOphcTBLPPJg+bDfhDf52w==}
    engines: {node: '>=14.0.0'}
    hasBin: true
    dependencies:
      '@alloc/quick-lru': 5.2.0
      arg: 5.0.2
      chokidar: 3.5.3
      didyoumean: 1.2.2
      dlv: 1.1.3
      fast-glob: 3.3.1
      glob-parent: 6.0.2
      is-glob: 4.0.3
      jiti: 1.20.0
      lilconfig: 2.1.0
      micromatch: 4.0.5
      normalize-path: 3.0.0
      object-hash: 3.0.0
      picocolors: 1.0.0
      postcss: 8.4.31
      postcss-import: 15.1.0(postcss@8.4.31)
      postcss-js: 4.0.1(postcss@8.4.31)
      postcss-load-config: 4.0.1(postcss@8.4.31)
      postcss-nested: 6.0.1(postcss@8.4.31)
      postcss-selector-parser: 6.0.13
      resolve: 1.22.8
      sucrase: 3.34.0
    transitivePeerDependencies:
      - ts-node

  /tapable@2.2.1:
    resolution: {integrity: sha512-GNzQvQTOIP6RyTfE2Qxb8ZVlNmw0n88vp1szwWRimP02mnTsx3Wtn5qRdqY9w2XduFNUgvOwhNnQsjwCp+kqaQ==}
    engines: {node: '>=6'}
    dev: true

  /text-table@0.2.0:
    resolution: {integrity: sha512-N+8UisAXDGk8PFXP4HAzVR9nbfmVJ3zYLAWiTIoqC5v5isinhr+r5uaO8+7r3BMfuNIufIsA7RdpVgacC2cSpw==}
    dev: true

  /thenify-all@1.6.0:
    resolution: {integrity: sha512-RNxQH/qI8/t3thXJDwcstUO4zeqo64+Uy/+sNVRBx4Xn2OX+OZ9oP+iJnNFqplFra2ZUVeKCSa2oVWi3T4uVmA==}
    engines: {node: '>=0.8'}
    dependencies:
      thenify: 3.3.1

  /thenify@3.3.1:
    resolution: {integrity: sha512-RVZSIV5IG10Hk3enotrhvz0T9em6cyHBLkH/YAZuKqd8hRkKhSfCGIcP2KUY0EPxndzANBmNllzWPwak+bheSw==}
    dependencies:
      any-promise: 1.3.0

  /tiny-inflate@1.0.3:
    resolution: {integrity: sha512-pkY1fj1cKHb2seWDy0B16HeWyczlJA9/WW3u3c4z/NiWDsO3DOU5D7nhTLE9CF0yXv/QZFY7sEJmj24dK+Rrqw==}
    dev: false

  /title@3.5.3:
    resolution: {integrity: sha512-20JyowYglSEeCvZv3EZ0nZ046vLarO37prvV0mbtQV7C8DJPGgN967r8SJkqd3XK3K3lD3/Iyfp3avjfil8Q2Q==}
    hasBin: true
    dependencies:
      arg: 1.0.0
      chalk: 2.3.0
      clipboardy: 1.2.2
      titleize: 1.0.0
    dev: false

  /titleize@1.0.0:
    resolution: {integrity: sha512-TARUb7z1pGvlLxgPk++7wJ6aycXF3GJ0sNSBTAsTuJrQG5QuZlkUQP+zl+nbjAh4gMX9yDw9ZYklMd7vAfJKEw==}
    engines: {node: '>=0.10.0'}
    dev: false

  /titleize@3.0.0:
    resolution: {integrity: sha512-KxVu8EYHDPBdUYdKZdKtU2aj2XfEx9AfjXxE/Aj0vT06w2icA09Vus1rh6eSu1y01akYg6BjIK/hxyLJINoMLQ==}
    engines: {node: '>=12'}
    dev: true

  /to-fast-properties@2.0.0:
    resolution: {integrity: sha512-/OaKK0xYrs3DmxRYqL/yDc+FxFUVYhDlXMhRmv3z915w2HF1tnN1omB354j8VUGO/hbRzyD6Y3sA7v7GS/ceog==}
    engines: {node: '>=4'}

  /to-regex-range@5.0.1:
    resolution: {integrity: sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==}
    engines: {node: '>=8.0'}
    dependencies:
      is-number: 7.0.0

  /trim-lines@3.0.1:
    resolution: {integrity: sha512-kRj8B+YHZCc9kQYdWfJB2/oUl9rA99qbowYYBtr4ui4mZyAQ2JpvVBd/6U2YloATfqBhBTSMhTpgBHtU0Mf3Rg==}
    dev: false

  /trough@2.1.0:
    resolution: {integrity: sha512-AqTiAOLcj85xS7vQ8QkAV41hPDIJ71XJB4RCUrzo/1GM2CQwhkJGaf9Hgr7BOugMRpgGUrqRg/DrBDl4H40+8g==}
    dev: false

  /ts-api-utils@1.0.3(typescript@5.0.2):
    resolution: {integrity: sha512-wNMeqtMz5NtwpT/UZGY5alT+VoKdSsOOP/kqHFcUW1P/VRhH2wJ48+DN2WwUliNbQ976ETwDL0Ifd2VVvgonvg==}
    engines: {node: '>=16.13.0'}
    peerDependencies:
      typescript: '>=4.2.0'
    dependencies:
      typescript: 5.0.2
    dev: true

  /ts-dedent@2.2.0:
    resolution: {integrity: sha512-q5W7tVM71e2xjHZTlgfTDoPF/SmqKG5hddq9SzR49CH2hayqRKJtQ4mtRlSxKaJlR/+9rEM+mnBHf7I2/BQcpQ==}
    engines: {node: '>=6.10'}
    dev: false

  /ts-interface-checker@0.1.13:
    resolution: {integrity: sha512-Y/arvbn+rrz3JCKl9C4kVNfTfSm2/mEp5FSz5EsZSANGPSlQrpRI5M4PKF+mJnE52jOO90PnPSc3Ur3bTQw0gA==}

  /tsconfig-paths@3.14.2:
    resolution: {integrity: sha512-o/9iXgCYc5L/JxCHPe3Hvh8Q/2xm5Z+p18PESBU6Ff33695QnCHBEjcytY2q19ua7Mbl/DavtBOLq+oG0RCL+g==}
    dependencies:
      '@types/json5': 0.0.29
      json5: 1.0.2
      minimist: 1.2.8
      strip-bom: 3.0.0
    dev: true

  /tslib@2.6.2:
    resolution: {integrity: sha512-AEYxH93jGFPn/a2iVAwW87VuUIkR1FVUKB77NwMF7nBTDkDrrT/Hpt/IrCJ0QXhW27jTBDcf5ZY7w6RiqTMw2Q==}

  /type-check@0.4.0:
    resolution: {integrity: sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==}
    engines: {node: '>= 0.8.0'}
    dependencies:
      prelude-ls: 1.2.1
    dev: true

  /type-fest@0.20.2:
    resolution: {integrity: sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==}
    engines: {node: '>=10'}
    dev: true

  /type-fest@1.4.0:
    resolution: {integrity: sha512-yGSza74xk0UG8k+pLh5oeoYirvIiWo5t0/o3zHHAO2tRDiZcxWP7fywNlXhqb6/r6sWvwi+RsyQMWhVLe4BVuA==}
    engines: {node: '>=10'}
    dev: false

  /type@1.2.0:
    resolution: {integrity: sha512-+5nt5AAniqsCnu2cEQQdpzCAh33kVx8n0VoFidKpB1dVVLAN/F+bgVOqOJqOnEnrhp222clB5p3vUlD+1QAnfg==}
    dev: false

  /type@2.7.2:
    resolution: {integrity: sha512-dzlvlNlt6AXU7EBSfpAscydQ7gXB+pPGsPnfJnZpiNJBDj7IaJzQlBZYGdEi4R9HmPdBv2XmWJ6YUtoTa7lmCw==}
    dev: false

  /typed-array-buffer@1.0.0:
    resolution: {integrity: sha512-Y8KTSIglk9OZEr8zywiIHG/kmQ7KWyjseXs1CbSo8vC42w7hg2HgYTxSWwP0+is7bWDc1H+Fo026CpHFwm8tkw==}
    engines: {node: '>= 0.4'}
    dependencies:
      call-bind: 1.0.5
      get-intrinsic: 1.2.2
      is-typed-array: 1.1.12
    dev: true

  /typed-array-byte-length@1.0.0:
    resolution: {integrity: sha512-Or/+kvLxNpeQ9DtSydonMxCx+9ZXOswtwJn17SNLvhptaXYDJvkFFP5zbfU/uLmvnBJlI4yrnXRxpdWH/M5tNA==}
    engines: {node: '>= 0.4'}
    dependencies:
      call-bind: 1.0.5
      for-each: 0.3.3
      has-proto: 1.0.1
      is-typed-array: 1.1.12
    dev: true

  /typed-array-byte-offset@1.0.0:
    resolution: {integrity: sha512-RD97prjEt9EL8YgAgpOkf3O4IF9lhJFr9g0htQkm0rchFp/Vx7LW5Q8fSXXub7BXAODyUQohRMyOc3faCPd0hg==}
    engines: {node: '>= 0.4'}
    dependencies:
      available-typed-arrays: 1.0.5
      call-bind: 1.0.5
      for-each: 0.3.3
      has-proto: 1.0.1
      is-typed-array: 1.1.12
    dev: true

  /typed-array-length@1.0.4:
    resolution: {integrity: sha512-KjZypGq+I/H7HI5HlOoGHkWUUGq+Q0TPhQurLbyrVrvnKTBgzLhIJ7j6J/XTQOi0d1RjyZ0wdas8bKs2p0x3Ng==}
    dependencies:
      call-bind: 1.0.5
      for-each: 0.3.3
      is-typed-array: 1.1.12
    dev: true

  /typescript@5.0.2:
    resolution: {integrity: sha512-wVORMBGO/FAs/++blGNeAVdbNKtIh1rbBL2EyQ1+J9lClJ93KiiKe8PmFIVdXhHcyv44SL9oglmfeSsndo0jRw==}
    engines: {node: '>=12.20'}
    hasBin: true
    dev: true

  /unbox-primitive@1.0.2:
    resolution: {integrity: sha512-61pPlCD9h51VoreyJ0BReideM3MDKMKnh6+V9L08331ipq6Q8OFXZYiqP6n/tbHx4s5I9uRhcye6BrbkizkBDw==}
    dependencies:
      call-bind: 1.0.5
      has-bigints: 1.0.2
      has-symbols: 1.0.3
      which-boxed-primitive: 1.0.2
    dev: true

  /unicode-canonical-property-names-ecmascript@2.0.0:
    resolution: {integrity: sha512-yY5PpDlfVIU5+y/BSCxAJRBIS1Zc2dDG3Ujq+sR0U+JjUevW2JhocOF+soROYDSaAezOzOKuyyixhD6mBknSmQ==}
    engines: {node: '>=4'}
    dev: true

  /unicode-match-property-ecmascript@2.0.0:
    resolution: {integrity: sha512-5kaZCrbp5mmbz5ulBkDkbY0SsPOjKqVS35VpL9ulMPfSl0J0Xsm+9Evphv9CoIZFwre7aJoa94AY6seMKGVN5Q==}
    engines: {node: '>=4'}
    dependencies:
      unicode-canonical-property-names-ecmascript: 2.0.0
      unicode-property-aliases-ecmascript: 2.1.0
    dev: true

  /unicode-match-property-value-ecmascript@2.1.0:
    resolution: {integrity: sha512-qxkjQt6qjg/mYscYMC0XKRn3Rh0wFPlfxB0xkt9CfyTvpX1Ra0+rAmdX2QyAobptSEvuy4RtpPRui6XkV+8wjA==}
    engines: {node: '>=4'}
    dev: true

  /unicode-property-aliases-ecmascript@2.1.0:
    resolution: {integrity: sha512-6t3foTQI9qne+OZoVQB/8x8rk2k1eVy1gRXhV3oFQ5T6R1dqQ1xtin3XqSlx3+ATBkliTaR/hHyJBm+LVPNM8w==}
    engines: {node: '>=4'}
    dev: true

  /unicode-trie@2.0.0:
    resolution: {integrity: sha512-x7bc76x0bm4prf1VLg79uhAzKw8DVboClSN5VxJuQ+LKDOVEW9CdH+VY7SP+vX7xCYQqzzgQpFqz15zeLvAtZQ==}
    dependencies:
      pako: 0.2.9
      tiny-inflate: 1.0.3
    dev: false

  /unified@10.1.2:
    resolution: {integrity: sha512-pUSWAi/RAnVy1Pif2kAoeWNBa3JVrx0MId2LASj8G+7AiHWoKZNTomq6LG326T68U7/e263X6fTdcXIy7XnF7Q==}
    dependencies:
      '@types/unist': 2.0.9
      bail: 2.0.2
      extend: 3.0.2
      is-buffer: 2.0.5
      is-plain-obj: 4.1.0
      trough: 2.1.0
      vfile: 5.3.7
    dev: false

  /unist-util-find-after@5.0.0:
    resolution: {integrity: sha512-amQa0Ep2m6hE2g72AugUItjbuM8X8cGQnFoHk0pGfrFeT9GZhzN5SW8nRsiGKK7Aif4CrACPENkA6P/Lw6fHGQ==}
    dependencies:
      '@types/unist': 3.0.1
      unist-util-is: 6.0.0
    dev: false

  /unist-util-generated@2.0.1:
    resolution: {integrity: sha512-qF72kLmPxAw0oN2fwpWIqbXAVyEqUzDHMsbtPvOudIlUzXYFIeQIuxXQCRCFh22B7cixvU0MG7m3MW8FTq/S+A==}
    dev: false

  /unist-util-is@5.2.1:
    resolution: {integrity: sha512-u9njyyfEh43npf1M+yGKDGVPbY/JWEemg5nH05ncKPfi+kBbKBJoTdsogMu33uhytuLlv9y0O7GH7fEdwLdLQw==}
    dependencies:
      '@types/unist': 2.0.9
    dev: false

  /unist-util-is@6.0.0:
    resolution: {integrity: sha512-2qCTHimwdxLfz+YzdGfkqNlH0tLi9xjTnHddPmJwtIG9MGsdbutfTc4P+haPD7l7Cjxf/WZj+we5qfVPvvxfYw==}
    dependencies:
      '@types/unist': 3.0.1
    dev: false

  /unist-util-position-from-estree@1.1.2:
    resolution: {integrity: sha512-poZa0eXpS+/XpoQwGwl79UUdea4ol2ZuCYguVaJS4qzIOMDzbqz8a3erUCOmubSZkaOuGamb3tX790iwOIROww==}
    dependencies:
      '@types/unist': 2.0.9
    dev: false

  /unist-util-position@4.0.4:
    resolution: {integrity: sha512-kUBE91efOWfIVBo8xzh/uZQ7p9ffYRtUbMRZBNFYwf0RK8koUMx6dGUfwylLOKmaT2cs4wSW96QoYUSXAyEtpg==}
    dependencies:
      '@types/unist': 2.0.9
    dev: false

  /unist-util-position@5.0.0:
    resolution: {integrity: sha512-fucsC7HjXvkB5R3kTCO7kUjRdrS0BJt3M/FPxmHMBOm8JQi2BsHAHFsy27E0EolP8rp0NzXsJ+jNPyDWvOJZPA==}
    dependencies:
      '@types/unist': 3.0.1
    dev: false

  /unist-util-remove-position@4.0.2:
    resolution: {integrity: sha512-TkBb0HABNmxzAcfLf4qsIbFbaPDvMO6wa3b3j4VcEzFVaw1LBKwnW4/sRJ/atSLSzoIg41JWEdnE7N6DIhGDGQ==}
    dependencies:
      '@types/unist': 2.0.9
      unist-util-visit: 4.1.2
    dev: false

  /unist-util-remove-position@5.0.0:
    resolution: {integrity: sha512-Hp5Kh3wLxv0PHj9m2yZhhLt58KzPtEYKQQ4yxfYFEO7EvHwzyDYnduhHnY1mDxoqr7VUwVuHXk9RXKIiYS1N8Q==}
    dependencies:
      '@types/unist': 3.0.1
      unist-util-visit: 5.0.0
    dev: false

  /unist-util-remove@4.0.0:
    resolution: {integrity: sha512-b4gokeGId57UVRX/eVKej5gXqGlc9+trkORhFJpu9raqZkZhU0zm8Doi05+HaiBsMEIJowL+2WtQ5ItjsngPXg==}
    dependencies:
      '@types/unist': 3.0.1
      unist-util-is: 6.0.0
      unist-util-visit-parents: 6.0.1
    dev: false

  /unist-util-stringify-position@3.0.3:
    resolution: {integrity: sha512-k5GzIBZ/QatR8N5X2y+drfpWG8IDBzdnVj6OInRNWm1oXrzydiaAT2OQiA8DPRRZyAKb9b6I2a6PxYklZD0gKg==}
    dependencies:
      '@types/unist': 2.0.9
    dev: false

  /unist-util-stringify-position@4.0.0:
    resolution: {integrity: sha512-0ASV06AAoKCDkS2+xw5RXJywruurpbC4JZSm7nr7MOt1ojAzvyyaO+UxZf18j8FCF6kmzCZKcAgN/yu2gm2XgQ==}
    dependencies:
      '@types/unist': 3.0.1
    dev: false

  /unist-util-visit-parents@4.1.1:
    resolution: {integrity: sha512-1xAFJXAKpnnJl8G7K5KgU7FY55y3GcLIXqkzUj5QF/QVP7biUm0K0O2oqVkYsdjzJKifYeWn9+o6piAK2hGSHw==}
    dependencies:
      '@types/unist': 2.0.9
      unist-util-is: 5.2.1
    dev: false

  /unist-util-visit-parents@5.1.3:
    resolution: {integrity: sha512-x6+y8g7wWMyQhL1iZfhIPhDAs7Xwbn9nRosDXl7qoPTSCy0yNxnKc+hWokFifWQIDGi154rdUqKvbCa4+1kLhg==}
    dependencies:
      '@types/unist': 2.0.9
      unist-util-is: 5.2.1
    dev: false

  /unist-util-visit-parents@6.0.1:
    resolution: {integrity: sha512-L/PqWzfTP9lzzEa6CKs0k2nARxTdZduw3zyh8d2NVBnsyvHjSX4TWse388YrrQKbvI8w20fGjGlhgT96WwKykw==}
    dependencies:
      '@types/unist': 3.0.1
      unist-util-is: 6.0.0
    dev: false

  /unist-util-visit@3.1.0:
    resolution: {integrity: sha512-Szoh+R/Ll68QWAyQyZZpQzZQm2UPbxibDvaY8Xc9SUtYgPsDzx5AWSk++UUt2hJuow8mvwR+rG+LQLw+KsuAKA==}
    dependencies:
      '@types/unist': 2.0.9
      unist-util-is: 5.2.1
      unist-util-visit-parents: 4.1.1
    dev: false

  /unist-util-visit@4.1.2:
    resolution: {integrity: sha512-MSd8OUGISqHdVvfY9TPhyK2VdUrPgxkUtWSuMHF6XAAFuL4LokseigBnZtPnJMu+FbynTkFNnFlyjxpVKujMRg==}
    dependencies:
      '@types/unist': 2.0.9
      unist-util-is: 5.2.1
      unist-util-visit-parents: 5.1.3
    dev: false

  /unist-util-visit@5.0.0:
    resolution: {integrity: sha512-MR04uvD+07cwl/yhVuVWAtw+3GOR/knlL55Nd/wAdblk27GCVt3lqpTivy/tkJcZoNPzTwS1Y+KMojlLDhoTzg==}
    dependencies:
      '@types/unist': 3.0.1
      unist-util-is: 6.0.0
      unist-util-visit-parents: 6.0.1
    dev: false

  /untildify@4.0.0:
    resolution: {integrity: sha512-KK8xQ1mkzZeg9inewmFVDNkg3l5LUhoq9kN6iWYB/CC9YMG8HA+c1Q8HwDe6dEX7kErrEVNVBO3fWsVq5iDgtw==}
    engines: {node: '>=8'}
    dev: true

  /update-browserslist-db@1.0.13(browserslist@4.22.1):
    resolution: {integrity: sha512-xebP81SNcPuNpPP3uzeW1NYXxI3rxyJzF3pD6sH4jE7o/IX+WtSpwnVU+qIsDPyk0d3hmFQ7mjqc6AtV604hbg==}
    hasBin: true
    peerDependencies:
      browserslist: '>= 4.21.0'
    dependencies:
      browserslist: 4.22.1
      escalade: 3.1.1
      picocolors: 1.0.0

  /uri-js@4.4.1:
    resolution: {integrity: sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==}
    dependencies:
      punycode: 2.3.0
    dev: true

  /util-deprecate@1.0.2:
    resolution: {integrity: sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==}

  /uuid@9.0.1:
    resolution: {integrity: sha512-b+1eJOlsR9K8HJpow9Ok3fiWOWSIcIzXodvv0rQjVoOVNpWMpxf1wZNpt4y9h10odCNrqnYp1OBzRktckBe3sA==}
    hasBin: true
    dev: false

  /uvu@0.5.6:
    resolution: {integrity: sha512-+g8ENReyr8YsOc6fv/NVJs2vFdHBnBNdfE49rshrTzDWOlUx4Gq7KOS2GD8eqhy2j+Ejq29+SbKH8yjkAqXqoA==}
    engines: {node: '>=8'}
    hasBin: true
    dependencies:
      dequal: 2.0.3
      diff: 5.1.0
      kleur: 4.1.5
      sade: 1.8.1
    dev: false

  /v8-compile-cache@2.4.0:
    resolution: {integrity: sha512-ocyWc3bAHBB/guyqJQVI5o4BZkPhznPYUG2ea80Gond/BgNWpap8TOmLSeeQG7bnh2KMISxskdADG59j7zruhw==}
    dev: true

  /vfile-location@5.0.2:
    resolution: {integrity: sha512-NXPYyxyBSH7zB5U6+3uDdd6Nybz6o6/od9rk8bp9H8GR3L+cm/fC0uUTbqBmUTnMCUDslAGBOIKNfvvb+gGlDg==}
    dependencies:
      '@types/unist': 3.0.1
      vfile: 6.0.1
    dev: false

  /vfile-matter@3.0.1:
    resolution: {integrity: sha512-CAAIDwnh6ZdtrqAuxdElUqQRQDQgbbIrYtDYI8gCjXS1qQ+1XdLoK8FIZWxJwn0/I+BkSSZpar3SOgjemQz4fg==}
    dependencies:
      '@types/js-yaml': 4.0.8
      is-buffer: 2.0.5
      js-yaml: 4.1.0
    dev: false

  /vfile-message@3.1.4:
    resolution: {integrity: sha512-fa0Z6P8HUrQN4BZaX05SIVXic+7kE3b05PWAtPuYP9QLHsLKYR7/AlLW3NtOrpXRLeawpDLMsVkmk5DG0NXgWw==}
    dependencies:
      '@types/unist': 2.0.9
      unist-util-stringify-position: 3.0.3
    dev: false

  /vfile-message@4.0.2:
    resolution: {integrity: sha512-jRDZ1IMLttGj41KcZvlrYAaI3CfqpLpfpf+Mfig13viT6NKvRzWZ+lXz0Y5D60w6uJIBAOGq9mSHf0gktF0duw==}
    dependencies:
      '@types/unist': 3.0.1
      unist-util-stringify-position: 4.0.0
    dev: false

  /vfile@5.3.7:
    resolution: {integrity: sha512-r7qlzkgErKjobAmyNIkkSpizsFPYiUPuJb5pNW1RB4JcYVZhs4lIbVqk8XPk033CV/1z8ss5pkax8SuhGpcG8g==}
    dependencies:
      '@types/unist': 2.0.9
      is-buffer: 2.0.5
      unist-util-stringify-position: 3.0.3
      vfile-message: 3.1.4
    dev: false

  /vfile@6.0.1:
    resolution: {integrity: sha512-1bYqc7pt6NIADBJ98UiG0Bn/CHIVOoZ/IyEkqIruLg0mE1BKzkOXY2D6CSqQIcKqgadppE5lrxgWXJmXd7zZJw==}
    dependencies:
      '@types/unist': 3.0.1
      unist-util-stringify-position: 4.0.0
      vfile-message: 4.0.2
    dev: false

  /vscode-oniguruma@1.7.0:
    resolution: {integrity: sha512-L9WMGRfrjOhgHSdOYgCt/yRMsXzLDJSL7BPrOZt73gU0iWO4mpqzqQzOz5srxqTvMBaR0XZTSrVWo4j55Rc6cA==}
    dev: false

  /vscode-textmate@8.0.0:
    resolution: {integrity: sha512-AFbieoL7a5LMqcnOF04ji+rpXadgOXnZsxQr//r83kLPr7biP7am3g9zbaZIaBGwBRWeSvoMD4mgPdX3e4NWBg==}
    dev: false

  /w3c-keyname@2.2.8:
    resolution: {integrity: sha512-dpojBhNsCNN7T82Tm7k26A6G9ML3NkhDsnw9n/eoxSRlVBB4CEtIQ/KTCLI2Fwf3ataSXRhYFkQi3SlnFwPvPQ==}
    dev: false

  /web-namespaces@2.0.1:
    resolution: {integrity: sha512-bKr1DkiNa2krS7qxNtdrtHAmzuYGFQLiQ13TsorsdT6ULTkPLKuu5+GsFpDlg6JFjUTwX2DyhMPG2be8uPrqsQ==}
    dev: false

  /web-worker@1.2.0:
    resolution: {integrity: sha512-PgF341avzqyx60neE9DD+XS26MMNMoUQRz9NOZwW32nPQrF6p77f1htcnjBSEV8BGMKZ16choqUG4hyI0Hx7mA==}
    dev: false

  /which-boxed-primitive@1.0.2:
    resolution: {integrity: sha512-bwZdv0AKLpplFY2KZRX6TvyuN7ojjr7lwkg6ml0roIy9YeuSr7JS372qlNW18UQYzgYK9ziGcerWqZOmEn9VNg==}
    dependencies:
      is-bigint: 1.0.4
      is-boolean-object: 1.1.2
      is-number-object: 1.0.7
      is-string: 1.0.7
      is-symbol: 1.0.4
    dev: true

  /which-builtin-type@1.1.3:
    resolution: {integrity: sha512-YmjsSMDBYsM1CaFiayOVT06+KJeXf0o5M/CAd4o1lTadFAtacTUM49zoYxr/oroopFDfhvN6iEcBxUyc3gvKmw==}
    engines: {node: '>= 0.4'}
    dependencies:
      function.prototype.name: 1.1.6
      has-tostringtag: 1.0.0
      is-async-function: 2.0.0
      is-date-object: 1.0.5
      is-finalizationregistry: 1.0.2
      is-generator-function: 1.0.10
      is-regex: 1.1.4
      is-weakref: 1.0.2
      isarray: 2.0.5
      which-boxed-primitive: 1.0.2
      which-collection: 1.0.1
      which-typed-array: 1.1.13
    dev: true

  /which-collection@1.0.1:
    resolution: {integrity: sha512-W8xeTUwaln8i3K/cY1nGXzdnVZlidBcagyNFtBdD5kxnb4TvGKR7FfSIS3mYpwWS1QUCutfKz8IY8RjftB0+1A==}
    dependencies:
      is-map: 2.0.2
      is-set: 2.0.2
      is-weakmap: 2.0.1
      is-weakset: 2.0.2
    dev: true

  /which-typed-array@1.1.13:
    resolution: {integrity: sha512-P5Nra0qjSncduVPEAr7xhoF5guty49ArDTwzJ/yNuPIbZppyRxFQsRCWrocxIY+CnMVG+qfbU2FmDKyvSGClow==}
    engines: {node: '>= 0.4'}
    dependencies:
      available-typed-arrays: 1.0.5
      call-bind: 1.0.5
      for-each: 0.3.3
      gopd: 1.0.1
      has-tostringtag: 1.0.0
    dev: true

  /which@1.3.1:
    resolution: {integrity: sha512-HxJdYWq1MTIQbJ3nw0cqssHoTNU267KlrDuGZ1WYlxDStUtKUhOaJmh112/TZmHxxUfuJqPXSOm7tDyas0OSIQ==}
    hasBin: true
    dependencies:
      isexe: 2.0.0
    dev: false

  /which@2.0.2:
    resolution: {integrity: sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==}
    engines: {node: '>= 8'}
    hasBin: true
    dependencies:
      isexe: 2.0.0
    dev: true

  /wrappy@1.0.2:
    resolution: {integrity: sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==}

  /yallist@2.1.2:
    resolution: {integrity: sha512-ncTzHV7NvsQZkYe1DW7cbDLm0YpzHmZF5r/iyP3ZnQtMiJ+pjzisCiMNI+Sj+xQF5pXhSHxSB3uDbsBTzY/c2A==}
    dev: false

  /yallist@3.1.1:
    resolution: {integrity: sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==}

  /yallist@4.0.0:
    resolution: {integrity: sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==}
    dev: true

  /yaml@2.3.3:
    resolution: {integrity: sha512-zw0VAJxgeZ6+++/su5AFoqBbZbrEakwu+X0M5HmcwUiBL7AzcuPKjj5we4xfQLp78LkEMpD0cOnUhmgOVy3KdQ==}
    engines: {node: '>= 14'}

  /yocto-queue@0.1.0:
    resolution: {integrity: sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==}
    engines: {node: '>=10'}
    dev: false

  /yoga-wasm-web@0.3.3:
    resolution: {integrity: sha512-N+d4UJSJbt/R3wqY7Coqs5pcV0aUj2j9IaQ3rNj9bVCLld8tTGKRa2USARjnvZJWVx1NDmQev8EknoczaOQDOA==}
    dev: false

  /zod@3.22.4:
    resolution: {integrity: sha512-iC+8Io04lddc+mVqQ9AZ7OQ2MrUKGN+oIQyq1vemgt46jwCwLfhq7/pwnBnNXXXZb8VTVLKwp9EDkx+ryxIWmg==}
    dev: false

  /zwitch@2.0.4:
    resolution: {integrity: sha512-bXE4cR/kVZhKZX/RjPEflHaKVhUVl85noU3v6b8apfQEc1x4A+zBxjZ4lN8LqGd6WZ3dl98pY4o717VFmoPp+A==}
    dev: false


================================================
File: postcss.config.js
================================================
module.exports = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}


================================================
File: tailwind.config.ts
================================================
import type { Config } from 'tailwindcss'

const config: Config = {
  content: [
    './pages/**/*.{js,ts,jsx,tsx,mdx}',
    './components/**/*.{js,ts,jsx,tsx,mdx}',
    './app/**/*.{js,ts,jsx,tsx,mdx}',
  ],
  theme: {
    extend: {
      backgroundImage: {
        'gradient-radial': 'radial-gradient(var(--tw-gradient-stops))',
        'gradient-conic':
          'conic-gradient(from 180deg at 50% 50%, var(--tw-gradient-stops))',
      },
    },
  },
}
export default config


================================================
File: theme.config.tsx
================================================
import { useRouter } from 'next/router'
import type { DocsThemeConfig } from 'nextra-theme-docs'
import { useConfig } from 'nextra-theme-docs'

const logo = (
  <svg
    height="20"
    viewBox="0 0 470 140"
    fill="none"
    xmlns="http://www.w3.org/2000/svg">
    <path
      d="M191.298 106.48C187.758 103.76 185.828 99.6004 185.498 94.0104L199.148 87.3004C199.428 90.4404 200.238 92.7804 201.598 94.3204C202.958 95.8604 204.948 96.6204 207.588 96.6204C211.048 96.6204 213.738 95.3504 215.638 92.8004C217.538 90.2504 218.968 86.2903 219.918 80.9103L228.438 32.6104H243.498L234.728 82.3804C232.968 92.3704 229.378 99.5603 223.958 103.96C218.538 108.36 212.228 110.56 205.028 110.56C199.408 110.57 194.838 109.21 191.298 106.48Z"
      fill="currentColor"
    />
    <path
      d="M251.989 67.2007C255.279 62.8707 259.249 59.5307 263.879 57.1907C268.519 54.8507 273.289 53.6807 278.209 53.6807C283.059 53.6807 287.369 54.8507 291.149 57.1907C294.929 59.5307 297.699 62.8707 299.459 67.2007C301.219 71.5307 301.609 76.5207 300.609 82.1807C299.609 87.8407 297.469 92.8306 294.179 97.1606C290.889 101.491 286.949 104.811 282.349 107.111C277.749 109.411 273.029 110.571 268.179 110.571C263.259 110.571 258.889 109.421 255.069 107.111C251.249 104.811 248.459 101.491 246.699 97.1606C244.929 92.8306 244.549 87.8407 245.549 82.1807C246.559 76.5207 248.699 71.5307 251.989 67.2007ZM262.079 93.6506C263.969 96.4806 266.719 97.8907 270.319 97.8907C273.919 97.8907 277.149 96.4806 279.999 93.6506C282.849 90.8206 284.709 87.0007 285.549 82.1807C286.399 77.3607 285.899 73.5206 284.049 70.6506C282.199 67.7906 279.469 66.3506 275.869 66.3506C272.269 66.3506 269.019 67.7806 266.129 70.6506C263.229 73.5106 261.359 77.3507 260.509 82.1807C259.669 87.0007 260.189 90.8206 262.079 93.6506Z"
      fill="currentColor"
    />
    <path
      d="M349.668 55.04H364.728L329.688 116.44C325.978 122.94 322.158 127.63 318.218 130.53C314.278 133.43 309.748 134.88 304.618 134.88C302.128 134.88 299.848 134.51 297.798 133.78C295.748 133.05 294.028 132.05 292.658 130.8L300.328 119.69C302.138 121.23 304.288 121.99 306.778 121.99C308.368 121.99 309.798 121.66 311.058 121C312.318 120.33 313.608 119.18 314.938 117.54C316.268 115.9 317.908 113.47 319.858 110.26L306.218 55.05H322.428L330.068 92.4501L349.668 55.04Z"
      fill="currentColor"
    />
    <path
      d="M378.648 109.31H363.588L377.108 32.6201H392.168L378.648 109.31Z"
      fill="currentColor"
    />
    <path
      d="M433.419 32.6201C440.829 32.6201 447.269 34.1201 452.729 37.1301C458.189 40.1401 462.149 44.5101 464.599 50.2801C467.049 56.0401 467.569 62.9001 466.159 70.8701C464.749 78.8301 461.809 85.7101 457.329 91.5101C452.839 97.3101 447.359 101.73 440.859 104.76C434.369 107.8 427.379 109.32 419.899 109.32H394.549L408.069 32.6301H433.419V32.6201ZM420.419 96.3201C428.589 96.3201 435.249 94.1201 440.389 89.7201C445.529 85.3201 448.819 79.0401 450.259 70.8601C451.679 62.8301 450.569 56.6001 446.959 52.1601C443.339 47.7301 437.479 45.5101 429.379 45.5101H420.859L411.899 96.3201H420.419Z"
      fill="currentColor"
    />
    <path
      d="M120.369 66.37C125.234 66.37 129.179 62.4256 129.179 57.56C129.179 52.6944 125.234 48.75 120.369 48.75C115.503 48.75 111.559 52.6944 111.559 57.56C111.559 62.4256 115.503 66.37 120.369 66.37Z"
      fill="#8CDD00"
    />
    <path
      d="M61.0583 48.75C56.6483 48.75 53.0684 52.33 53.0684 56.74C53.0684 61.15 56.6483 64.73 61.0583 64.73C65.4683 64.73 69.0484 61.15 69.0484 56.74C69.0384 52.33 65.4683 48.75 61.0583 48.75Z"
      fill="#8CDD00"
    />
    <path
      d="M85.1376 42.2002L76.3076 84.1802C75.4876 88.1002 71.9776 90.9402 67.9776 90.9402C65.3876 90.9402 62.9776 89.7801 61.3476 87.7701C60.0776 86.2001 59.4376 84.2702 59.4676 82.2902L43.5176 86.4102C44.1976 90.5902 45.9176 94.5802 48.6576 97.9902C53.3876 103.86 60.4276 107.23 67.9676 107.23C79.6276 107.23 89.8276 98.9502 92.2276 87.5402L101.768 42.2101H85.1376V42.2002Z"
      fill="#C1C1C1"
    />
    <path
      d="M159.878 12.37C154.528 5.77999 146.588 2 138.098 2H118.448L115.018 18.28H138.098C141.658 18.28 144.988 19.86 147.228 22.63C149.468 25.39 150.338 28.98 149.608 32.46L146.178 48.75H162.818L165.548 35.82C167.288 27.51 165.228 18.96 159.878 12.37Z"
      fill="#8CDD00"
    />
    <path
      d="M135.078 101.53C132.678 112.93 122.488 121.2 110.838 121.2H93.348L89.918 137.48H110.838C130.138 137.48 147.038 123.77 151.008 104.88L153.888 91.1797H137.248L135.078 101.53Z"
      fill="#8CDD00"
    />
    <path
      d="M15.1479 34.5997L12.168 48.7598H28.8079L31.0779 37.9597C33.4779 26.5597 43.6679 18.2897 55.3179 18.2897H72.0779L75.5079 2.00977H55.3179C36.0179 1.99977 19.1179 15.7097 15.1479 34.5997Z"
      fill="#8CDD00"
    />
    <path
      d="M18.9279 116.84C16.6879 114.08 15.8179 110.49 16.5479 107.01L19.5879 92.5801L1.98787 97.1201L0.607931 103.66C-1.14207 111.97 0.927914 120.52 6.27791 127.11C11.6279 133.7 19.5679 137.48 28.0579 137.48H46.9779L50.4079 121.2H28.0579C24.4979 121.19 21.1679 119.61 18.9279 116.84Z"
      fill="#8CDD00"
    />
  </svg>
)

const config: DocsThemeConfig = {
  project: {
    link: 'https://github.com/nervina-labs/joyid-docs',
  },
  docsRepositoryBase: 'https://github.com/nervina-labs/joyid-docs/tree/main',
  useNextSeoProps() {
    const { asPath } = useRouter()
    if (asPath !== '/') {
      return {
        titleTemplate: '%s - JoyID Docs',
      }
    }
  },
  logo,
  head: function useHead() {
    const { title } = useConfig()
    const { route } = useRouter()
    const socialCard =
      route === '/' || !title
        ? 'https://docs.joyid.dev/api/og?title=Documentation'
        : `https://docs.joyid.dev/api/og?title=${title}`

    return (
      <>
        <meta name="msapplication-TileColor" content="#fff" />
        <meta name="theme-color" content="#fff" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta httpEquiv="Content-Language" content="en" />
        <meta
          name="description"
          content="Universal Account Protocol for Web3 Mass-adoption."
        />
        <meta
          name="og:description"
          content="Universal Account Protocol for Web3 Mass-adoption."
        />
        <meta name="twitter:card" content="summary_large_image" />
        <meta name="twitter:image" content={socialCard} />
        <meta name="twitter:site:domain" content="joy.id" />
        <meta name="twitter:url" content="https://docs.joyi.id" />
        <meta
          name="og:title"
          content={title ? title + ' - JoyID Docs' : 'JoyID Docs'}
        />
        <meta name="og:image" content={socialCard} />
        <meta name="apple-mobile-web-app-title" content="JoyID Docs" />
        <link rel="icon" href="/favicon.svg" type="image/svg+xml" />
        <link rel="icon" href="/favicon.png" type="image/png" />
        <link
          rel="icon"
          href="/favicon-dark.svg"
          type="image/svg+xml"
          media="(prefers-color-scheme: dark)"
        />
        <link
          rel="icon"
          href="/favicon-dark.png"
          type="image/png"
          media="(prefers-color-scheme: dark)"
        />
      </>
    )
  },
  editLink: {
    text: 'Edit this page on GitHub →',
  },
  feedback: {
    content: 'Question? Give us feedback →',
    labels: 'feedback',
  },
  sidebar: {
    titleComponent({ title, type }) {
      if (type === 'separator') {
        return <span className="cursor-default">{title}</span>
      }
      return <>{title}</>
    },
    autoCollapse: false,
    toggleButton: true,
  },
  footer: {
    text: (
      <div className="flex w-full flex-col items-center sm:items-start">
        <p className="mt-6 text-xs">
          © {new Date().getFullYear()} Nervina Labs.
        </p>
      </div>
    ),
  },
  toc: {
    backToTop: true,
  },
}

export default config


================================================
File: tsconfig.json
================================================
{
  "compilerOptions": {
    "target": "es5",
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "paths": {
      "@/*": ["./*"]
    }
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", "pages/api/og.jsx"],
  "exclude": ["node_modules", "sandboxes"]
}


================================================
File: .editorconfig
================================================
# http://editorconfig.org
root = true

[*]
charset = utf-8
end_of_line = lf
indent_size = 2
indent_style = space
insert_final_newline = true
max_line_length = 80
trim_trailing_whitespace = true

[*.md]
max_line_length = 0

[*.json]
indent_size = 2


================================================
File: .eslintrc.json
================================================
{
  "extends": [
    "next/core-web-vitals",
    "prettier",
    "plugin:prettier/recommended"
  ],
  "plugins": [
    "prettier"
  ],
  "rules": {
    "prettier/prettier": ["error", {
      "semi": false,
      "trailingComma": "es5",
      "singleQuote": true,
      "bracketSameLine": true,
      "tabWidth": 2,
      "printWidth": 80
    }]
  }
}


================================================
File: components/card/index.tsx
================================================
import { clsx } from 'clsx'
import Image from 'next/image'

/* eslint-disable @next/next/no-img-element */
export interface CardProps {
  preview: string
  github?: string
  previewImage?: string
  title: string
  desc: string
}

export const Card: React.FC<CardProps> = ({
  preview,
  github,
  previewImage,
  title,
  desc,
}) => {
  return (
    <div
      className={clsx(
        'card card-compact bg-base-100 lg:w-80 xl:w-96 shadow-xl sm:w-80'
      )}>
      {previewImage ? (
        <figure>
          <Image src={previewImage} alt={title} width="400" height="200" />
        </figure>
      ) : null}
      <div className="card-body">
        <h2 className="card-title">{title}</h2>
        <p>{desc}</p>
        <div className="card-actions justify-end mt-2">
          {github ? (
            <a
              target="_blank"
              className="py-2.5 px-5 text-sm font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700 mr-4"
              href={github}>
              GitHub
            </a>
          ) : null}
          {preview ? (
            <a
              target="_blank"
              className="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800"
              href={preview}>
              Preview
            </a>
          ) : null}
        </div>
      </div>
    </div>
  )
}


================================================
File: components/click-to-activate/index.tsx
================================================
import { useState } from 'react'

export function ClickToActivate({ children }: React.PropsWithChildren<any>) {
  const [active, setActive] = useState(false)
  const [buttonHover, setButtonHover] = useState(false)
  const [buttonActive, setButtonActive] = useState(false)

  let html
  if (!active) {
    const divStyle = {
      background: '#f2f7fc',
      border: '1px solid transparent',
      borderRadius: '10px',
      height: '500px',
      marginTop: '20px',
      width: '100%',
    }
    const buttonStyle = {
      background: 'white',
      border: '2px solid black',
      borderRadius: '10px',
      cursor: 'pointer',
      display: 'block',
      fontSize: '30px',
      margin: '225px auto 0 auto',
      padding: '10px',
    }
    const buttonStyleHover = {
      ...buttonStyle,
      border: '2px solid #006be6',
      color: '#006be6',
    }
    const buttonStyleActive = {
      ...buttonStyle,
      background: '#006be6',
      color: 'white',
    }
    let currentButtonStyle = buttonStyle
    if (buttonHover) currentButtonStyle = buttonStyleHover
    if (buttonActive) currentButtonStyle = buttonStyleActive

    html = (
      <div className="click-to-activate" style={divStyle}>
        <button
          className="click-to-activate-button"
          onClick={() => setActive(true)}
          onMouseOver={() => setButtonHover(true)}
          onMouseOut={() => {
            setButtonHover(false)
            setButtonActive(false)
          }}
          onMouseDown={() => setButtonActive(true)}
          onMouseUp={() => setButtonActive(false)}
          style={currentButtonStyle}>
          Click to Activate Demo
        </button>
      </div>
    )
  } else {
    html = children
  }
  return html
}


================================================
File: components/framework-tabs/index.tsx
================================================
import { Tabs, Tab } from '@/components/tabs'
import { ReactIcon } from './icons/react'
import { VueIcon } from './icons/vue'

export function FrameworkTabs({ children }: React.PropsWithChildren<any>) {
  return (
    <Tabs
      items={[
        <div
          key="react"
          style={{
            display: 'flex',
            alignItems: 'center',
            fontSize: 15,
          }}>
          <ReactIcon />
          <span style={{ marginLeft: 6, marginBottom: 2 }}>React</span>
        </div>,
        <div
          key="vue"
          style={{
            display: 'flex',
            alignItems: 'center',
            fontSize: 15,
          }}>
          <VueIcon />
          <span style={{ marginLeft: 6, marginBottom: 2 }}>Vue</span>
        </div>,
      ]}>
      {children}
    </Tabs>
  )
}

// eslint-disable-next-line react/display-name
FrameworkTabs.React = ({ children }: React.PropsWithChildren<any>) => {
  return (
    <Tab key="react" value="0">
      {children}
    </Tab>
  )
}

// eslint-disable-next-line react/display-name
FrameworkTabs.Vue = ({ children }: React.PropsWithChildren<any>) => {
  return (
    <Tab key="vue" value="1">
      {children}
    </Tab>
  )
}


================================================
File: components/framework-tabs/icons/react.tsx
================================================
export function ReactIcon(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="1.13em"
      height="1em"
      viewBox="0 0 256 228"
      {...props}>
      <path
        fill="#00D8FF"
        d="M210.483 73.824a171.49 171.49 0 0 0-8.24-2.597c.465-1.9.893-3.777 1.273-5.621c6.238-30.281 2.16-54.676-11.769-62.708c-13.355-7.7-35.196.329-57.254 19.526a171.23 171.23 0 0 0-6.375 5.848a155.866 155.866 0 0 0-4.241-3.917C100.759 3.829 77.587-4.822 63.673 3.233C50.33 10.957 46.379 33.89 51.995 62.588a170.974 170.974 0 0 0 1.892 8.48c-3.28.932-6.445 1.924-9.474 2.98C17.309 83.498 0 98.307 0 113.668c0 15.865 18.582 31.778 46.812 41.427a145.52 145.52 0 0 0 6.921 2.165a167.467 167.467 0 0 0-2.01 9.138c-5.354 28.2-1.173 50.591 12.134 58.266c13.744 7.926 36.812-.22 59.273-19.855a145.567 145.567 0 0 0 5.342-4.923a168.064 168.064 0 0 0 6.92 6.314c21.758 18.722 43.246 26.282 56.54 18.586c13.731-7.949 18.194-32.003 12.4-61.268a145.016 145.016 0 0 0-1.535-6.842c1.62-.48 3.21-.974 4.76-1.488c29.348-9.723 48.443-25.443 48.443-41.52c0-15.417-17.868-30.326-45.517-39.844Zm-6.365 70.984c-1.4.463-2.836.91-4.3 1.345c-3.24-10.257-7.612-21.163-12.963-32.432c5.106-11 9.31-21.767 12.459-31.957c2.619.758 5.16 1.557 7.61 2.4c23.69 8.156 38.14 20.213 38.14 29.504c0 9.896-15.606 22.743-40.946 31.14Zm-10.514 20.834c2.562 12.94 2.927 24.64 1.23 33.787c-1.524 8.219-4.59 13.698-8.382 15.893c-8.067 4.67-25.32-1.4-43.927-17.412a156.726 156.726 0 0 1-6.437-5.87c7.214-7.889 14.423-17.06 21.459-27.246c12.376-1.098 24.068-2.894 34.671-5.345a134.17 134.17 0 0 1 1.386 6.193ZM87.276 214.515c-7.882 2.783-14.16 2.863-17.955.675c-8.075-4.657-11.432-22.636-6.853-46.752a156.923 156.923 0 0 1 1.869-8.499c10.486 2.32 22.093 3.988 34.498 4.994c7.084 9.967 14.501 19.128 21.976 27.15a134.668 134.668 0 0 1-4.877 4.492c-9.933 8.682-19.886 14.842-28.658 17.94ZM50.35 144.747c-12.483-4.267-22.792-9.812-29.858-15.863c-6.35-5.437-9.555-10.836-9.555-15.216c0-9.322 13.897-21.212 37.076-29.293c2.813-.98 5.757-1.905 8.812-2.773c3.204 10.42 7.406 21.315 12.477 32.332c-5.137 11.18-9.399 22.249-12.634 32.792a134.718 134.718 0 0 1-6.318-1.979Zm12.378-84.26c-4.811-24.587-1.616-43.134 6.425-47.789c8.564-4.958 27.502 2.111 47.463 19.835a144.318 144.318 0 0 1 3.841 3.545c-7.438 7.987-14.787 17.08-21.808 26.988c-12.04 1.116-23.565 2.908-34.161 5.309a160.342 160.342 0 0 1-1.76-7.887Zm110.427 27.268a347.8 347.8 0 0 0-7.785-12.803c8.168 1.033 15.994 2.404 23.343 4.08c-2.206 7.072-4.956 14.465-8.193 22.045a381.151 381.151 0 0 0-7.365-13.322Zm-45.032-43.861c5.044 5.465 10.096 11.566 15.065 18.186a322.04 322.04 0 0 0-30.257-.006c4.974-6.559 10.069-12.652 15.192-18.18ZM82.802 87.83a323.167 323.167 0 0 0-7.227 13.238c-3.184-7.553-5.909-14.98-8.134-22.152c7.304-1.634 15.093-2.97 23.209-3.984a321.524 321.524 0 0 0-7.848 12.897Zm8.081 65.352c-8.385-.936-16.291-2.203-23.593-3.793c2.26-7.3 5.045-14.885 8.298-22.6a321.187 321.187 0 0 0 7.257 13.246c2.594 4.48 5.28 8.868 8.038 13.147Zm37.542 31.03c-5.184-5.592-10.354-11.779-15.403-18.433c4.902.192 9.899.29 14.978.29c5.218 0 10.376-.117 15.453-.343c-4.985 6.774-10.018 12.97-15.028 18.486Zm52.198-57.817c3.422 7.8 6.306 15.345 8.596 22.52c-7.422 1.694-15.436 3.058-23.88 4.071a382.417 382.417 0 0 0 7.859-13.026a347.403 347.403 0 0 0 7.425-13.565Zm-16.898 8.101a358.557 358.557 0 0 1-12.281 19.815a329.4 329.4 0 0 1-23.444.823c-7.967 0-15.716-.248-23.178-.732a310.202 310.202 0 0 1-12.513-19.846h.001a307.41 307.41 0 0 1-10.923-20.627a310.278 310.278 0 0 1 10.89-20.637l-.001.001a307.318 307.318 0 0 1 12.413-19.761c7.613-.576 15.42-.876 23.31-.876H128c7.926 0 15.743.303 23.354.883a329.357 329.357 0 0 1 12.335 19.695a358.489 358.489 0 0 1 11.036 20.54a329.472 329.472 0 0 1-11 20.722Zm22.56-122.124c8.572 4.944 11.906 24.881 6.52 51.026c-.344 1.668-.73 3.367-1.15 5.09c-10.622-2.452-22.155-4.275-34.23-5.408c-7.034-10.017-14.323-19.124-21.64-27.008a160.789 160.789 0 0 1 5.888-5.4c18.9-16.447 36.564-22.941 44.612-18.3ZM128 90.808c12.625 0 22.86 10.235 22.86 22.86s-10.235 22.86-22.86 22.86s-22.86-10.235-22.86-22.86s10.235-22.86 22.86-22.86Z"></path>
    </svg>
  )
}


================================================
File: components/framework-tabs/icons/vue.tsx
================================================
export function VueIcon(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="1.16em"
      height="1em"
      viewBox="0 0 256 221"
      {...props}>
      <path
        fill="#41B883"
        d="M204.8 0H256L128 220.8L0 0h97.92L128 51.2L157.44 0h47.36Z"></path>
      <path
        fill="#41B883"
        d="m0 0l128 220.8L256 0h-51.2L128 132.48L50.56 0H0Z"></path>
      <path
        fill="#35495E"
        d="M50.56 0L128 133.12L204.8 0h-47.36L128 51.2L97.92 0H50.56Z"></path>
    </svg>
  )
}


================================================
File: components/npm-tabs/index.tsx
================================================
import { Tabs, Tab, Pre, Code } from 'nextra/components'
import { Npm } from './icons/npm'
import { Yarn } from './icons/yarn'
import { Pnpm } from './icons/pnpm'
import { Bun } from './icons/bun'

type PackageManager = 'npm' | 'yarn' | 'pnpm' | 'bun'

export interface PackageManagerTabProps {
  command:
    | string
    | {
        npm: string
        yarn: string
        pnpm: string
        bun: string
      }
  additionalTabs?: {
    tool: PackageManager
    icon?: React.ReactNode
  }[]
}

function normalizeCommand(command: string): string {
  if (!command.includes('install')) {
    return command
  }
  // If command include `install` and package name, replace `install` with `add`
  const pureCommand = command
    .split(' ')
    .filter((item) => !item.startsWith('-') && !item.startsWith('--'))
    .join(' ')
  if (pureCommand === 'yarn install' || pureCommand === 'bun install') {
    return command
  } else {
    return command.replace('install', 'add')
  }
}

export function PackageManagerTabs({
  command,
  additionalTabs = [],
}: PackageManagerTabProps) {
  let commandInfo: {
    npm: string
    yarn: string
    pnpm: string
    bun: string
    [key: string]: string
  }

  // Init Icons
  const packageMangerToIcon: Record<PackageManager, React.ReactNode> = {
    npm: <Npm />,
    yarn: <Yarn />,
    pnpm: <Pnpm />,
    bun: <Bun />,
  }
  additionalTabs.forEach((tab) => {
    packageMangerToIcon[tab.tool] = tab.icon
  })

  // Init Command
  if (typeof command === 'string') {
    commandInfo = {
      npm: `npm ${command}`,
      yarn: `yarn ${command}`,
      pnpm: `pnpm ${command}`,
      bun: `bun ${command}`,
    }
    additionalTabs.forEach((tab) => {
      commandInfo[tab.tool] = `${tab.tool} ${command}`
    })
  } else {
    commandInfo = command
  }

  // Normalize yarn/bun command
  commandInfo.yarn = normalizeCommand(commandInfo.yarn)
  commandInfo.bun = normalizeCommand(commandInfo.bun)
  commandInfo.pnpm = normalizeCommand(commandInfo.pnpm)

  return (
    <Tabs
      items={Object.entries(commandInfo).map(([key]) => (
        <div
          key={key}
          style={{
            display: 'flex',
            alignItems: 'center',
            fontSize: 15,
          }}>
          {packageMangerToIcon[key as PackageManager]}
          <span style={{ marginLeft: 6, marginBottom: 2 }}>{key}</span>
        </div>
      ))}>
      {Object.entries(commandInfo).map(([key, value]) => (
        <Tab key={key}>
          <Pre hasCopyCode>
            <Code>{value}</Code>
          </Pre>
        </Tab>
      ))}
    </Tabs>
  )
}


================================================
File: components/npm-tabs/icons/bun.tsx
================================================
import { ComponentProps } from 'react'

export function Bun(props: ComponentProps<'svg'>) {
  return (
    <svg width="1.2em" height="1.2em" viewBox="0 0 80 70" {...props}>
      <path
        id="Shadow"
        d="M71.09,20.74c-.16-.17-.33-.34-.5-.5s-.33-.34-.5-.5-.33-.34-.5-.5-.33-.34-.5-.5-.33-.34-.5-.5-.33-.34-.5-.5-.33-.34-.5-.5A26.46,26.46,0,0,1,75.5,35.7c0,16.57-16.82,30.05-37.5,30.05-11.58,0-21.94-4.23-28.83-10.86l.5.5.5.5.5.5.5.5.5.5.5.5.5.5C19.55,65.3,30.14,69.75,42,69.75c20.68,0,37.5-13.48,37.5-30C79.5,32.69,76.46,26,71.09,20.74Z"
      />
      <g id="Body">
        <path
          id="Background"
          d="M73,35.7c0,15.21-15.67,27.54-35,27.54S3,50.91,3,35.7C3,26.27,9,17.94,18.22,13S33.18,3,38,3s8.94,4.13,19.78,10C67,17.94,73,26.27,73,35.7Z"
          style={{ fill: '#fbf0df' }}
        />
        <path
          id="Bottom_Shadow"
          data-name="Bottom Shadow"
          d="M73,35.7a21.67,21.67,0,0,0-.8-5.78c-2.73,33.3-43.35,34.9-59.32,24.94A40,40,0,0,0,38,63.24C57.3,63.24,73,50.89,73,35.7Z"
          style={{ fill: '#f6dece' }}
        />
        <path
          id="Light_Shine"
          data-name="Light Shine"
          d="M24.53,11.17C29,8.49,34.94,3.46,40.78,3.45A9.29,9.29,0,0,0,38,3c-2.42,0-5,1.25-8.25,3.13-1.13.66-2.3,1.39-3.54,2.15-2.33,1.44-5,3.07-8,4.7C8.69,18.13,3,26.62,3,35.7c0,.4,0,.8,0,1.19C9.06,15.48,20.07,13.85,24.53,11.17Z"
          style={{ fill: '#fffefc' }}
        />
        <path
          id="Top"
          d="M35.12,5.53A16.41,16.41,0,0,1,29.49,18c-.28.25-.06.73.3.59,3.37-1.31,7.92-5.23,6-13.14C35.71,5,35.12,5.12,35.12,5.53Zm2.27,0A16.24,16.24,0,0,1,39,19c-.12.35.31.65.55.36C41.74,16.56,43.65,11,37.93,5,37.64,4.74,37.19,5.14,37.39,5.49Zm2.76-.17A16.42,16.42,0,0,1,47,17.12a.33.33,0,0,0,.65.11c.92-3.49.4-9.44-7.17-12.53C40.08,4.54,39.82,5.08,40.15,5.32ZM21.69,15.76a16.94,16.94,0,0,0,10.47-9c.18-.36.75-.22.66.18-1.73,8-7.52,9.67-11.12,9.45C21.32,16.4,21.33,15.87,21.69,15.76Z"
          style={{ fill: '#ccbea7', fillRule: 'evenodd' }}
        />
        <path
          id="Outline"
          d="M38,65.75C17.32,65.75.5,52.27.5,35.7c0-10,6.18-19.33,16.53-24.92,3-1.6,5.57-3.21,7.86-4.62,1.26-.78,2.45-1.51,3.6-2.19C32,1.89,35,.5,38,.5s5.62,1.2,8.9,3.14c1,.57,2,1.19,3.07,1.87,2.49,1.54,5.3,3.28,9,5.27C69.32,16.37,75.5,25.69,75.5,35.7,75.5,52.27,58.68,65.75,38,65.75ZM38,3c-2.42,0-5,1.25-8.25,3.13-1.13.66-2.3,1.39-3.54,2.15-2.33,1.44-5,3.07-8,4.7C8.69,18.13,3,26.62,3,35.7,3,50.89,18.7,63.25,38,63.25S73,50.89,73,35.7C73,26.62,67.31,18.13,57.78,13,54,11,51.05,9.12,48.66,7.64c-1.09-.67-2.09-1.29-3-1.84C42.63,4,40.42,3,38,3Z"
        />
      </g>
      <g id="Mouth">
        <g id="Background-2" data-name="Background">
          <path
            d="M45.05,43a8.93,8.93,0,0,1-2.92,4.71,6.81,6.81,0,0,1-4,1.88A6.84,6.84,0,0,1,34,47.71,8.93,8.93,0,0,1,31.12,43a.72.72,0,0,1,.8-.81H44.26A.72.72,0,0,1,45.05,43Z"
            style={{ fill: '#b71422' }}
          />
        </g>
        <g id="Tongue">
          <path
            id="Background-3"
            data-name="Background"
            d="M34,47.79a6.91,6.91,0,0,0,4.12,1.9,6.91,6.91,0,0,0,4.11-1.9,10.63,10.63,0,0,0,1-1.07,6.83,6.83,0,0,0-4.9-2.31,6.15,6.15,0,0,0-5,2.78C33.56,47.4,33.76,47.6,34,47.79Z"
            style={{ fill: '#ff6164' }}
          />
          <path
            id="Outline-2"
            data-name="Outline"
            d="M34.16,47a5.36,5.36,0,0,1,4.19-2.08,6,6,0,0,1,4,1.69c.23-.25.45-.51.66-.77a7,7,0,0,0-4.71-1.93,6.36,6.36,0,0,0-4.89,2.36A9.53,9.53,0,0,0,34.16,47Z"
          />
        </g>
        <path
          id="Outline-3"
          data-name="Outline"
          d="M38.09,50.19a7.42,7.42,0,0,1-4.45-2,9.52,9.52,0,0,1-3.11-5.05,1.2,1.2,0,0,1,.26-1,1.41,1.41,0,0,1,1.13-.51H44.26a1.44,1.44,0,0,1,1.13.51,1.19,1.19,0,0,1,.25,1h0a9.52,9.52,0,0,1-3.11,5.05A7.42,7.42,0,0,1,38.09,50.19Zm-6.17-7.4c-.16,0-.2.07-.21.09a8.29,8.29,0,0,0,2.73,4.37A6.23,6.23,0,0,0,38.09,49a6.28,6.28,0,0,0,3.65-1.73,8.3,8.3,0,0,0,2.72-4.37.21.21,0,0,0-.2-.09Z"
        />
      </g>
      <g id="Face">
        <ellipse
          id="Right_Blush"
          data-name="Right Blush"
          cx="53.22"
          cy="40.18"
          rx="5.85"
          ry="3.44"
          style={{
            fill: '#febbd0',
          }}
        />
        <ellipse
          id="Left_Bluch"
          data-name="Left Bluch"
          cx="22.95"
          cy="40.18"
          rx="5.85"
          ry="3.44"
          style={{ fill: '#febbd0' }}
        />
        <path
          id="Eyes"
          d="M25.7,38.8a5.51,5.51,0,1,0-5.5-5.51A5.51,5.51,0,0,0,25.7,38.8Zm24.77,0A5.51,5.51,0,1,0,45,33.29,5.5,5.5,0,0,0,50.47,38.8Z"
          style={{ fillRule: 'evenodd' }}
        />
        <path
          id="Iris"
          d="M24,33.64a2.07,2.07,0,1,0-2.06-2.07A2.07,2.07,0,0,0,24,33.64Zm24.77,0a2.07,2.07,0,1,0-2.06-2.07A2.07,2.07,0,0,0,48.75,33.64Z"
          style={{
            fill: '#fff',
            fillRule: 'evenodd',
          }}
        />
      </g>
    </svg>
  )
}


================================================
File: components/npm-tabs/icons/npm.tsx
================================================
import { ComponentProps } from 'react'

export function Npm(props: ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="1em"
      height="1em"
      viewBox="0 0 256 256"
      {...props}>
      <path fill="#C12127" d="M0 256V0h256v256z"></path>
      <path fill="#FFF" d="M48 48h160v160h-32V80h-48v128H48z"></path>
    </svg>
  )
}


================================================
File: components/npm-tabs/icons/pnpm.tsx
================================================
import { ComponentProps } from 'react'

export function Pnpm(props: ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="1em"
      height="1em"
      viewBox="0 0 128 128"
      {...props}>
      <path
        fill="#f8ab00"
        d="M0 .004V40h39.996V.004Zm43.996 0V40h40V.004Zm44.008 0V40H128V.004Zm0 43.996v39.996H128V44Z"></path>
      <path
        fill="#4c4c4c"
        d="M43.996 44v39.996h40V44ZM0 87.996v40h39.996v-40Zm43.996 0v40h40v-40Zm44.008 0v40H128v-40Z"></path>
    </svg>
  )
}


================================================
File: components/npm-tabs/icons/yarn.tsx
================================================
import { ComponentProps } from 'react'

export function Yarn(props: ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="1em"
      height="1em"
      viewBox="0 0 128 128"
      {...props}>
      <g fill="#2c8ebb">
        <path d="M99.24 80.71C94.9 80.76 91.1 83 87.89 85c-6 3.71-9 3.47-9 3.47l-.1-.17c-.41-.67 1.92-6.68-.69-13.84c-2.82-7.83-7.3-9.72-6.94-10.32c1.53-2.59 5.36-6.7 6.89-14.36c.91-4.64.67-12.28-1.39-16.28c-.38-.74-3.78 1.24-3.78 1.24s-3.18-7.09-4.07-7.66c-2.87-1.84-6 7.61-6 7.61a14 14 0 0 0-11.71 4.5a9.64 9.64 0 0 1-3.85 2.27c-.41.14-.91.12-2.15 3.47c-1.9 5.07 3.24 10.81 3.24 10.81s-6.13 4.33-8.4 9.72a24.78 24.78 0 0 0-1.75 11.68s-4.36 3.78-4.64 7.68a12.87 12.87 0 0 0 1.77 7.83a1.94 1.94 0 0 0 2.63.91s-2.9 3.38-.19 4.81c2.47 1.29 6.63 2 8.83-.19c1.6-1.6 1.92-5.17 2.51-6.63c.14-.34.62.57 1.08 1a10 10 0 0 0 1.36 1s-3.9 1.68-2.3 5.51c.53 1.27 2.42 2.08 5.51 2.06c1.15 0 13.76-.72 17.12-1.53a4.33 4.33 0 0 0 2.61-1.46a63 63 0 0 0 15.49-7c4.74-3.09 6.68-3.93 10.51-4.84c3.16-.75 2.95-5.65-1.24-5.58z"></path>
        <path d="M64 2a62 62 0 1 0 62 62A62 62 0 0 0 64 2zm37.3 87.83c-3.35.81-4.91 1.44-9.41 4.36a67 67 0 0 1-15.56 7.18a8.71 8.71 0 0 1-3.64 1.77c-3.81.93-16.88 1.63-17.91 1.63h-.24c-4 0-6.27-1.24-7.49-2.54c-3.4 1.7-7.8 1-11-.69a5.55 5.55 0 0 1-3-3.9a6 6 0 0 1 0-2.06a6.66 6.66 0 0 1-.79-1A16.38 16.38 0 0 1 30 84.52c.29-3.73 2.87-7.06 4.55-8.83A28.56 28.56 0 0 1 36.61 64a26.82 26.82 0 0 1 6.82-9c-1.65-2.78-3.33-7.06-1.7-11.42c1.17-3.11 2.13-4.84 4.24-5.58a6.84 6.84 0 0 0 2.51-1.34A17.65 17.65 0 0 1 60.34 31c.19-.48.41-1 .65-1.46c1.6-3.4 3.3-5.31 5.29-6a4.88 4.88 0 0 1 4.4.5c.65.43 1.48 1 3.9 6a4.69 4.69 0 0 1 2.85-.1a3.81 3.81 0 0 1 2.39 1.94c2.47 4.74 2.8 13.19 1.72 18.62a33.8 33.8 0 0 1-5.84 13.31a25.73 25.73 0 0 1 5.77 9.43a25.42 25.42 0 0 1 1.41 10.41A28.7 28.7 0 0 0 86 81.91c3.06-1.89 7.68-4.74 13.19-4.81a6.62 6.62 0 0 1 7 5.7a6.35 6.35 0 0 1-4.89 7.03z"></path>
      </g>
    </svg>
  )
}


================================================
File: components/sandbox/index.tsx
================================================
'use client'
import { memo, Suspense, useState, useEffect } from 'react'
import type { SandboxProps } from './sandbox-root'
import dynamic from 'next/dynamic'

const SandpackRoot = dynamic(() => import('./sandbox-root'), {
  ssr: false,
})

const SandpackGlimmer = ({ code }: { code: string }) => (
  <div className="sandpack sandpack--playground my-8">
    <div className="sp-wrapper">
      <div className="shadow-lg dark:shadow-lg-dark rounded-lg">
        <div className="bg-wash h-10 dark:bg-card-dark flex justify-between items-center relative z-10 border-b border-border dark:border-border-dark rounded-t-lg rounded-b-none">
          <div className="px-4 lg:px-6">
            <div className="sp-tabs"></div>
          </div>
          <div className="px-3 flex items-center justify-end grow text-right"></div>
        </div>
        <div className="sp-layout min-h-[216px] flex items-stretch flex-wrap">
          <div className="sp-stack sp-editor max-h-[406px] h-auto overflow-auto">
            <div className="sp-code-editor">
              <div className="sp-cm sp-pristine">
                <div className="cm-editor">
                  <div>
                    <div className="cm-gutters ps-9 sticky min-h-[192px]">
                      <div className="cm-gutter cm-lineNumbers whitespace-pre sp-pre-placeholder">
                        {code}
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div className="sp-stack order-last xl:order-2 max-h-[406px] h-auto">
            <div className="p-0 sm:p-2 md:p-4 lg:p-8 bg-card dark:bg-wash-dark h-full relative rounded-b-lg lg:rounded-b-none overflow-auto"></div>
          </div>
          {code?.split('\n').length > 16 && (
            <div className="flex h-[45px] text-base justify-between dark:border-card-dark bg-wash dark:bg-card-dark items-center z-10 rounded-t-none p-1 w-full order-2 xl:order-last border-b-1 relative top-0"></div>
          )}
        </div>
      </div>
    </div>
  </div>
)

export const Sandbox = memo(function SandpackWrapper(props: SandboxProps): any {
  const { files = {} } = props
  const activeCode = files[Object.keys(files)[0]]

  return (
    <Suspense
      fallback={
        <SandpackGlimmer
          code={typeof activeCode === 'string' ? activeCode : activeCode?.code}
        />
      }>
      <SandpackRoot {...props} />
    </Suspense>
  )
})


================================================
File: components/sandbox/sandbox-root.tsx
================================================
import { Sandpack, SandpackProps } from '@codesandbox/sandpack-react'
import { useSandpack } from './use-sandpack'
import { atomDark } from '@codesandbox/sandpack-themes'
import { useTheme } from 'nextra-theme-docs'

export interface SandboxProps extends SandpackProps {
  documentTitle?: string
  initConfigPackage?: string
  id?: string
  dependencies?: Record<string, string>
}

const SandboxRoot: React.FC<SandboxProps> = (props) => {
  const { files, customSetup, sandpackTemplate, options } = useSandpack({
    template: props.template,
    initPackage: props.initConfigPackage,
    files: props.files,
    dependencies: props.dependencies,
  })

  options.editorHeight = '500px'
  options.showLineNumbers = false
  const { theme, resolvedTheme } = useTheme()
  let sandpackTheme: SandboxProps['theme'] = atomDark
  if (theme === 'system') {
    sandpackTheme = resolvedTheme === 'dark' ? atomDark : 'light'
  } else if (theme === 'dark') {
    sandpackTheme = atomDark
  } else if (theme === 'light') {
    sandpackTheme = 'light'
  }

  return (
    <Sandpack
      {...props}
      options={{
        ...options,
        ...props.options,
      }}
      template={sandpackTemplate}
      theme={sandpackTheme}
      files={files}
      customSetup={customSetup}
    />
  )
}

export default SandboxRoot


================================================
File: components/sandbox/use-sandpack.ts
================================================
import {
  SandpackFiles,
  SandpackPredefinedTemplate,
  SandpackProps,
} from '@codesandbox/sandpack-react'

import { getFileEntry, stylesCss } from './templates/common'

export interface UseSandpackProps {
  files?: SandpackFiles
  template?: SandpackPredefinedTemplate
  dependencies?: Record<string, string>
  initPackage?: string
  options?: SandpackProps['options']
}

export const useSandpack = ({
  files = {},
  template = 'react-ts',
  dependencies = {},
  initPackage,
  options = {},
}: UseSandpackProps) => {
  const isReact = template.includes('react')
  const sandpackTemplate: SandpackPredefinedTemplate = isReact
    ? 'react-ts'
    : 'vue-ts'

  // get entry file by current template
  const entryFile = isReact ? 'index.tsx' : 'src/main.ts'

  // filter files by current template
  const filteredFiles = {
    ...files,
  }

  const customSetup: SandpackProps['customSetup'] = {
    dependencies,
    entry: entryFile,
  }

  options.editorHeight = '500px'
  options.showLineNumbers = false
  options.externalResources = [
    'https://cdn.tailwindcss.com',
    'https://cdn.jsdelivr.net/npm/daisyui@3.9.3/dist/full.css',
  ]

  return {
    customSetup,
    files: {
      [entryFile]: {
        code: getFileEntry(sandpackTemplate, initPackage),
        hidden: false,
      },
      [isReact ? 'styles.css' : 'src/styles.css']: {
        code: stylesCss,
        hidden: true,
      },
      '/sandbox.config.json': {
        code: `{
  "infiniteLoopProtection": false,
  "hardReloadOnChange": false,
  "view": "browser"
}`,
        hidden: true,
      },
      ...filteredFiles,
    },
    entryFile,
    sandpackTemplate: sandpackTemplate,
    options,
  }
}


================================================
File: components/sandbox/templates/common.ts
================================================
const buildReactIndexFile = (npm?: string) => {
  return `import React from "react";
import ReactDOM from "react-dom/client";
import { initConfig } from "${npm}";
import App from "./App";
import "./styles.css";

${
  npm
    ? `initConfig({
  name: "JoyID demo",
  logo: "https://fav.farm/🆔",
  joyidAppURL: "https://testnet.joyid.dev",
});`
    : ''
}

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
);
`
}

const buildVueIndexFile = (npm?: string) => {
  return `import { createApp } from 'vue'
import App from './App.vue'
${npm ? `import { initConfig } from "${npm}";` : ''}
import "./styles.css";

${
  npm
    ? `initConfig({
  name: "JoyID demo",
  logo: "https://fav.farm/🆔",
  joyidAppURL: "https://testnet.joyid.dev",
});`
    : ''
}

createApp(App).mount('#app')
`
}

export const getFileEntry = (template: string, initPackage?: string) =>
  template.includes('react')
    ? buildReactIndexFile(initPackage)
    : buildVueIndexFile(initPackage)

export const stylesCss = `h1 {
  word-break: break-all;
}

#app,
#root {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  padding: 1rem;
}`


================================================
File: components/tabs/index.tsx
================================================
import * as HeadlessTab from '@radix-ui/react-tabs'
import cn from 'clsx'
import type { ComponentProps, ReactElement, ReactNode } from 'react'
import { useCallback, useEffect, useState } from 'react'

type TabItem = string | ReactNode

type TabObjectItem = {
  label: TabItem
  disabled: boolean
}

function isTabObjectItem(item: unknown): item is TabObjectItem {
  return !!item && typeof item === 'object' && 'label' in item
}

function _Tabs({
  items,
  selectedIndex: _selectedIndex,
  defaultIndex = '0',
  onChange,
  children,
  storageKey,
}: {
  items: (TabItem | TabObjectItem)[]
  selectedIndex?: string
  defaultIndex?: string
  onChange?: (index: number) => void
  children: ReactNode
  storageKey?: string
}): ReactElement {
  const [selectedIndex, setSelectedIndex] = useState(defaultIndex)

  useEffect(() => {
    if (_selectedIndex !== undefined) {
      setSelectedIndex(_selectedIndex)
    }
  }, [_selectedIndex])

  useEffect(() => {
    if (!storageKey) {
      // Do not listen storage events if there is no storage key
      return
    }

    function fn(event: StorageEvent) {
      if (event.key === storageKey) {
        setSelectedIndex(event.newValue!)
      }
    }

    const index = localStorage.getItem(storageKey)
    setSelectedIndex(index == null ? '0' : index)

    window.addEventListener('storage', fn)
    return () => {
      window.removeEventListener('storage', fn)
    }
  }, []) // eslint-disable-line react-hooks/exhaustive-deps -- only on mount

  const handleChange = useCallback((index: string) => {
    if (storageKey) {
      const newValue = String(index)
      localStorage.setItem(storageKey, newValue)

      // the storage event only get picked up (by the listener) if the localStorage was changed in
      // another browser's tab/window (of the same app), but not within the context of the current tab.
      window.dispatchEvent(
        new StorageEvent('storage', { key: storageKey, newValue })
      )
      return
    }
    setSelectedIndex(index)
    // onChange?.(index)
  }, []) // eslint-disable-line react-hooks/exhaustive-deps -- only on mount

  return (
    <HeadlessTab.Root
      // selectedIndex={selectedIndex}
      // defaultIndex={defaultIndex}
      defaultValue="0"
      value={selectedIndex}
      onValueChange={handleChange}>
      <div className="nextra-scrollbar nx-overflow-x-auto nx-overflow-y-hidden nx-overscroll-x-contain">
        <HeadlessTab.List className="nx-mt-4 nx-flex nx-w-max nx-min-w-full nx-border-b nx-border-gray-200 nx-pb-px dark:nx-border-neutral-800">
          {items.map((item, index) => {
            const disabled = isTabObjectItem(item) && item.disabled
            const selected = index.toString() === selectedIndex
            return (
              <HeadlessTab.Trigger
                key={index}
                value={String(index)}
                disabled={disabled}
                className={cn(
                  'nx-mr-2 nx-rounded-t nx-p-2 nx-font-medium nx-leading-5 nx-transition-colors',
                  '-nx-mb-0.5 nx-select-none nx-border-b-2',
                  selected
                    ? 'nx-border-primary-500 nx-text-primary-600'
                    : 'nx-border-transparent nx-text-gray-600 hover:nx-border-gray-200 hover:nx-text-black dark:nx-text-gray-200 dark:hover:nx-border-neutral-800 dark:hover:nx-text-white',
                  disabled &&
                    'nx-pointer-events-none nx-text-gray-400 dark:nx-text-neutral-600'
                )}>
                {isTabObjectItem(item) ? item.label : item}
              </HeadlessTab.Trigger>
            )
          })}
        </HeadlessTab.List>
      </div>
      {children}
    </HeadlessTab.Root>
  )
}

export function Tab({
  children,
  ...props
}: ComponentProps<typeof HeadlessTab.Content>): ReactElement {
  return (
    <HeadlessTab.Content {...props} className="nx-rounded nx-pt-6">
      {children}
    </HeadlessTab.Content>
  )
}

export const Tabs = Object.assign(_Tabs, { displayName: 'Tabs', Tab })


================================================
File: pages/_app.mdx
================================================
import '@/styles/globals.css'

export default function App({ Component, pageProps }) {
  return <Component {...pageProps} />
}


================================================
File: pages/_meta.json
================================================
{
  "guide": {
    "type": "page",
    "title": "Guide"
  },
  "apis": {
    "type": "page",
    "title": "API"
  },
  "showcase": {
    "type": "page",
    "title": "Showcase",
    "theme": {
      "typesetting": "article",
      "layout": "full"
    }
  }
}


================================================
File: pages/showcase.json
================================================
{
  "real-world": [
    {
      "title": "Spore",
      "desc": "Create, Spread, and Monetize anything on chain",
      "preview": "https://spore.pro/",
      "previewImage": "https://spore.pro/img/ogp.png",
      "github": "https://github.com/sporeprotocol/spore-demo"
    },
    {
      "title": "Mail3",
      "desc": "Connect wallet to get a mail system designed for web3 natives",
      "preview": "https://app.mail3.me/",
      "previewImage": "https://mail3.me/preview2.png",
      "github": "https://github.com/mail3protocol/mail3-web-client"
    },
    {
      "title": "Donate3",
      "desc": "Donate3 is a web3 donation tool. It enables public goods and creators to set up donations in just 5 minutes.",
      "preview": "https://www.donate3.xyz/donate3",
      "previewImage": "https://www.donate3.xyz/images/heroShow.png"
    },
    {
      "title": "FlyCat",
      "desc": "nostr client to Exit Toxic Internet",
      "preview": "https://flycat.club/",
      "previewImage": "https://i.imgur.com/DMlvWzC.png",
      "github": "https://github.com/digi-monkey/flycat-web"
    }
  ],
  "demo": [
    {
      "title": "JoyID EVM demo",
      "desc": "EVM multi-chain demo with JoyID EVM SDK",
      "preview": "https://joyid-evm-demo.vercel.app/",
      "previewImage": "https://opengraph.githubassets.com/828cab4b745499200fc0d3353e047a90e6d8c17ebcc78e6c4b47c4d6fc383d5a/nervina-labs/joyid-evm-demo",
      "github": "https://github.com/nervina-labs/joyid-evm-demo"
    },
    {
      "title": "JoyID RainbowKit demo",
      "desc": "EVM multi-chain demo with RainbowKit",
      "preview": "https://joyid-rainbow-kit-demo.vercel.app/",
      "previewImage": "https://opengraph.githubassets.com/3f5e21b211770cb4395098c429512235f77dc53c287b36b4c54ef109b40ca8bf/nervina-labs/joyid-rainbow-kit-demo",
      "github": "https://github.com/nervina-labs/joyid-rainbow-kit-demo"
    },
    {
      "title": "JoyID Ethers.js demo",
      "desc": "EVM multi-chain demo with Ethers.js",
      "preview": "https://joyid-evm-demo-git-ethers-nervina.vercel.app/",
      "previewImage": "https://opengraph.githubassets.com/828cab4b745499200fc0d3353e047a90e6d8c17ebcc78e6c4b47c4d6fc383d5a/nervina-labs/joyid-evm-demo",
      "github": "https://github.com/nervina-labs/joyid-evm-demo/tree/ethers"
    },
    {
      "title": "JoyID Wagmi demo",
      "desc": "EVM demo with Wagmi",
      "preview": "https://codesandbox.io/p/sandbox/joyid-wagmi-demo-2y6lv4?file=%2Fsrc%2Fprovider.tsx%3A15%2C1-16%2C1",
      "previewImage": "https://screenshots.codesandbox.io/2y6lv4/4.png"
    },
    {
      "title": "JoyID React demo",
      "desc": "EVM demo with React and JoyID EVM SDK",
      "preview": "https://codesandbox.io/p/sandbox/react-joyid-evm-send-transaction-83hjjy?file=%2Fsrc%2FApp.tsx%3A1%2C1",
      "previewImage": "https://screenshots.codesandbox.io/2y6lv4/4.png"
    },
    {
      "title": "JoyID Vue demo",
      "desc": "EVM demo with Vue and JoyID EVM SDk",
      "preview": "https://codesandbox.io/p/sandbox/vue-joyid-evm-send-transaction-8tp5dz?file=%2Fsrc%2Fcomponents%2FSendTransaction.vue%3A1%2C1",
      "previewImage": "https://screenshots.codesandbox.io/rwk4ss/0.png"
    }
  ]
}


================================================
File: pages/showcase.mdx
================================================
---
title: Showcase
---

{<h1 className="mt-10 mb-10 text-center text-[2.5rem] font-bold tracking-tight">Showcase</h1>}

import { Card } from '@/components/card'
import showcases from './showcase.json'

{<div className="grid grid-cols-1 gap-8 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3 justify-items-center">
  {showcases['real-world'].map((props) => {
    return (
      <Card key={props.title} {...props} />
    )
  })}
</div>}

{<p className="mt-10 mb-10 text-center text-[2rem] font-bold">Demo</p>}

{<div className="grid grid-cols-1 gap-8 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3 justify-items-center">
  {showcases['demo'].map((props) => {
    return (
      <Card key={props.title} {...props} />
    )
  })}
</div>}

{<a className="mt-10 text-right text-md block" href="https://github.com/nervina-labs/joyid-docs/blob/main/pages/showcase.json">Add your project →</a>}


================================================
File: pages/api/og.jsx
================================================
/* eslint-disable import/no-anonymous-default-export */
/* eslint-env node */
import { ImageResponse } from '@vercel/og'

export const config = {
  runtime: 'edge',
}

const font = fetch(new URL('./Inter-SemiBold.otf', import.meta.url)).then(
  (res) => res.arrayBuffer()
)

export default async function (req) {
  const inter = await font

  const { searchParams } = new URL(req.url)

  // ?title=<title>
  const hasTitle = searchParams.has('title')
  const title = hasTitle
    ? searchParams.get('title')?.slice(0, 100)
    : 'JoyID Documentation'

  return new ImageResponse(
    (
      <div
        style={{
          height: '100%',
          width: '100%',
          display: 'flex',
          flexDirection: 'column',
          alignItems: 'flex-start',
          justifyContent: 'center',
          padding: 80,
          backgroundColor: '#030303',
          backgroundImage:
            'radial-gradient(circle at 25px 25px, #333 2%, transparent 0%), radial-gradient(circle at 75px 75px, #333 2%, transparent 0%)',
          backgroundSize: '100px 100px',
          backgroundPosition: '-30px -10px',
          fontWeight: 600,
          color: 'white',
        }}>
        <svg
          style={{ position: 'absolute', top: 70, left: 80 }}
          height="60"
          viewBox="0 0 470 140"
          fill="none"
          xmlns="http://www.w3.org/2000/svg">
          <path
            d="M191.298 106.48C187.758 103.76 185.828 99.6004 185.498 94.0104L199.148 87.3004C199.428 90.4404 200.238 92.7804 201.598 94.3204C202.958 95.8604 204.948 96.6204 207.588 96.6204C211.048 96.6204 213.738 95.3504 215.638 92.8004C217.538 90.2504 218.968 86.2903 219.918 80.9103L228.438 32.6104H243.498L234.728 82.3804C232.968 92.3704 229.378 99.5603 223.958 103.96C218.538 108.36 212.228 110.56 205.028 110.56C199.408 110.57 194.838 109.21 191.298 106.48Z"
            fill="white"
          />
          <path
            d="M251.989 67.2007C255.279 62.8707 259.249 59.5307 263.879 57.1907C268.519 54.8507 273.289 53.6807 278.209 53.6807C283.059 53.6807 287.369 54.8507 291.149 57.1907C294.929 59.5307 297.699 62.8707 299.459 67.2007C301.219 71.5307 301.609 76.5207 300.609 82.1807C299.609 87.8407 297.469 92.8306 294.179 97.1606C290.889 101.491 286.949 104.811 282.349 107.111C277.749 109.411 273.029 110.571 268.179 110.571C263.259 110.571 258.889 109.421 255.069 107.111C251.249 104.811 248.459 101.491 246.699 97.1606C244.929 92.8306 244.549 87.8407 245.549 82.1807C246.559 76.5207 248.699 71.5307 251.989 67.2007ZM262.079 93.6506C263.969 96.4806 266.719 97.8907 270.319 97.8907C273.919 97.8907 277.149 96.4806 279.999 93.6506C282.849 90.8206 284.709 87.0007 285.549 82.1807C286.399 77.3607 285.899 73.5206 284.049 70.6506C282.199 67.7906 279.469 66.3506 275.869 66.3506C272.269 66.3506 269.019 67.7806 266.129 70.6506C263.229 73.5106 261.359 77.3507 260.509 82.1807C259.669 87.0007 260.189 90.8206 262.079 93.6506Z"
            fill="white"
          />
          <path
            d="M349.668 55.04H364.728L329.688 116.44C325.978 122.94 322.158 127.63 318.218 130.53C314.278 133.43 309.748 134.88 304.618 134.88C302.128 134.88 299.848 134.51 297.798 133.78C295.748 133.05 294.028 132.05 292.658 130.8L300.328 119.69C302.138 121.23 304.288 121.99 306.778 121.99C308.368 121.99 309.798 121.66 311.058 121C312.318 120.33 313.608 119.18 314.938 117.54C316.268 115.9 317.908 113.47 319.858 110.26L306.218 55.05H322.428L330.068 92.4501L349.668 55.04Z"
            fill="white"
          />
          <path
            d="M378.648 109.31H363.588L377.108 32.6201H392.168L378.648 109.31Z"
            fill="white"
          />
          <path
            d="M433.419 32.6201C440.829 32.6201 447.269 34.1201 452.729 37.1301C458.189 40.1401 462.149 44.5101 464.599 50.2801C467.049 56.0401 467.569 62.9001 466.159 70.8701C464.749 78.8301 461.809 85.7101 457.329 91.5101C452.839 97.3101 447.359 101.73 440.859 104.76C434.369 107.8 427.379 109.32 419.899 109.32H394.549L408.069 32.6301H433.419V32.6201ZM420.419 96.3201C428.589 96.3201 435.249 94.1201 440.389 89.7201C445.529 85.3201 448.819 79.0401 450.259 70.8601C451.679 62.8301 450.569 56.6001 446.959 52.1601C443.339 47.7301 437.479 45.5101 429.379 45.5101H420.859L411.899 96.3201H420.419Z"
            fill="white"
          />
          <path
            d="M120.369 66.37C125.234 66.37 129.179 62.4256 129.179 57.56C129.179 52.6944 125.234 48.75 120.369 48.75C115.503 48.75 111.559 52.6944 111.559 57.56C111.559 62.4256 115.503 66.37 120.369 66.37Z"
            fill="#8CDD00"
          />
          <path
            d="M61.0583 48.75C56.6483 48.75 53.0684 52.33 53.0684 56.74C53.0684 61.15 56.6483 64.73 61.0583 64.73C65.4683 64.73 69.0484 61.15 69.0484 56.74C69.0384 52.33 65.4683 48.75 61.0583 48.75Z"
            fill="#8CDD00"
          />
          <path
            d="M85.1376 42.2002L76.3076 84.1802C75.4876 88.1002 71.9776 90.9402 67.9776 90.9402C65.3876 90.9402 62.9776 89.7801 61.3476 87.7701C60.0776 86.2001 59.4376 84.2702 59.4676 82.2902L43.5176 86.4102C44.1976 90.5902 45.9176 94.5802 48.6576 97.9902C53.3876 103.86 60.4276 107.23 67.9676 107.23C79.6276 107.23 89.8276 98.9502 92.2276 87.5402L101.768 42.2101H85.1376V42.2002Z"
            fill="#C1C1C1"
          />
          <path
            d="M159.878 12.37C154.528 5.77999 146.588 2 138.098 2H118.448L115.018 18.28H138.098C141.658 18.28 144.988 19.86 147.228 22.63C149.468 25.39 150.338 28.98 149.608 32.46L146.178 48.75H162.818L165.548 35.82C167.288 27.51 165.228 18.96 159.878 12.37Z"
            fill="#8CDD00"
          />
          <path
            d="M135.078 101.53C132.678 112.93 122.488 121.2 110.838 121.2H93.348L89.918 137.48H110.838C130.138 137.48 147.038 123.77 151.008 104.88L153.888 91.1797H137.248L135.078 101.53Z"
            fill="#8CDD00"
          />
          <path
            d="M15.1479 34.5997L12.168 48.7598H28.8079L31.0779 37.9597C33.4779 26.5597 43.6679 18.2897 55.3179 18.2897H72.0779L75.5079 2.00977H55.3179C36.0179 1.99977 19.1179 15.7097 15.1479 34.5997Z"
            fill="#8CDD00"
          />
          <path
            d="M18.9279 116.84C16.6879 114.08 15.8179 110.49 16.5479 107.01L19.5879 92.5801L1.98787 97.1201L0.607931 103.66C-1.14207 111.97 0.927914 120.52 6.27791 127.11C11.6279 133.7 19.5679 137.48 28.0579 137.48H46.9779L50.4079 121.2H28.0579C24.4979 121.19 21.1679 119.61 18.9279 116.84Z"
            fill="#8CDD00"
          />
        </svg>
        <p
          style={{
            position: 'absolute',
            bottom: 70,
            left: 80,
            margin: 0,
            fontSize: 30,
            letterSpacing: -1,
          }}>
          Universal Account Protocol for Web3 Mass-adoption.
        </p>
        <h1
          style={{
            fontSize: 82,
            margin: '0 0 40px -2px',
            lineHeight: 1.1,
            textShadow: '0 2px 30px #000',
            letterSpacing: -4,
            backgroundImage: 'linear-gradient(90deg, #fff 40%, #aaa)',
            backgroundClip: 'text',
            '-webkit-background-clip': 'text',
            color: 'transparent',
          }}>
          {title}
        </h1>
      </div>
    ),
    {
      width: 1200,
      height: 630,
      fonts: [
        {
          name: 'inter',
          data: inter,
          style: 'normal',
        },
      ],
    }
  )
}


================================================
File: pages/apis/_meta.json
================================================
{
  "index": "Overview",
  "evm": "@joyid/evm",
  "ckb": "@joyid/ckb",
  "ethers": "@joyid/ethers",
  "nostr": "@joyid/nostr",
  "wagmi": "@joyid/wagmi",
  "rainbowkit": "@joyid/rainbowkit",
  "ethereum-provider": "@joyid/ethereum-provider",
  "bitcoin": "@joyid/bitcoin",
  "public-api": "Public API"
}


================================================
File: pages/apis/index.mdx
================================================
# Overview

In order to interact with [JoyID App ↗](https://testnet.joyid.dev) we provide different packages to meet different requirements.

* `@joyid/ckb`: SDK for manipulating [Nervos CKB ↗](https://www.nervos.org/) assets, including transferring CKB/mNFT/CoTA NFT, signing Raw Transaction, etc.
* `@joyid/evm`: SDK for manipulating [EVM-compatible blockchains ↗](https://blog.thirdweb.com/evm-compatible-blockchains-and-ethereum-virtual-machine/) assets.
* `@joyid/nostr`: [NIP-07 ↗](https://github.com/nostr-protocol/nips/blob/master/07.md) implementation for [Nostr ↗](https://nostr.com/) protocol.
* `@joyid/ethers`: [Ethers.js ↗](https://docs.ethers.io/v5/) implementation for JoyID EVM SDK.
* `@joyid/wagmi`: [Wagmi ↗](https://wagmi.io/) implementation for JoyID EVM SDK.
* `@joyid/rainbowkit`: [RainbowKit ↗](https://www.rainbowkit.com/) implementation for JoyID EVM SDK.
* `@joyid/ethereum-provider`: [EIP-1193 ↗](https://eips.ethereum.org/EIPS/eip-1193) implementation for JoyID EVM SDK.

You can choose the appropriate SDK package according to your application scenario and follow the instructions in the documentation for installation and use. If you need technical support, feel free to contact us in [Discord ↗](https://discord.com/invite/77MyakRKVB).



================================================
File: pages/apis/bitcoin/_meta.json
================================================
{
  "init-config": "initConfig",
  "request-accounts": "requestAccounts",
  "get-publickey": "getPublicKey",
  "get-accounts": "getAccounts",
  "sign-message": "signMessage",
  "sign-psbt": "signPsbt",
  "send-psbt": "sendPsbt"
}


================================================
File: pages/apis/bitcoin/get-accounts.mdx
================================================
# getAccounts

Get address of current account

## Parameters

none

## Returns

`string`: address of current account

# Example

```js
try {
  let res =  getAccounts();
  console.log(res)
} catch (e) {
  console.log(e);
}
> ["tb1qrn7tvhdf6wnh790384ahj56u0xaa0kqgautnnz"]
```


================================================
File: pages/apis/bitcoin/get-publickey.md
================================================
# getPublicKey

Get publicKey of current account.

## Parameters

none

## Returns

`string`: publicKey

## Example

```js
try {
  let res = getPublicKey();
  console.log(res)
} catch (e) {
  console.log(e);
}
> 03cbaedc26f03fd3ba02fc936f338e980c9e2172c5e23128877ed46827e935296f
```


================================================
File: pages/apis/bitcoin/init-config.mdx
================================================
# `initConfig`

`initConfig` is a function that init the configuration for the JoyID SDK. You should call config function in your app's entry file to set the configuration.

## Types

```typescript
function initConfig(config?: DappConfig): DappConfig

interface DappConfig {
  /**
   * The name of your app
   */
  name?: string
  /**
   * The logo of your app
   */
  logo?: string
  /**
   * The URL of JoyID app url that your app is integrated with, defaults to https://app.joyid.dev
   */
  joyidAppURL?: string
  /**
   * The bitcoin address type you want to connect with, defaults to p2tr
   */
  requestAddressType?: 'p2wpkh' | 'p2tr'
}
```

## Example

import { FrameworkTabs } from '@/components/framework-tabs'

<FrameworkTabs>
  <FrameworkTabs.React>
```ts filename="main.tsx" /initConfig/
import React from "react";
import ReactDOM from "react-dom/client";
import { initConfig } from "@joyid/bitcoin";
import App from "./App";
import "./index.css";

initConfig({
  // your app name
  name: "JoyID demo",
  // your app logo
  logo: "https://fav.farm/🆔",
  // JoyID app URL, this is for testnet, for mainnet, use "https://app.joy.id"
  joyidAppURL: "https://testnet.joyid.dev",
  // bitcoin address type, p2wpkh or p2tr
  requestAddressType: 'p2tr',
});

ReactDOM.createRoot(document.getElementById("root") as HTMLElement).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
);
```
  </FrameworkTabs.React>
  <FrameworkTabs.Vue>
```ts filename="main.ts" /initConfig/
import { createApp } from "vue";
import "./style.css";
import App from "./App.vue";
import { initConfig } from "@joyid/nostr";

initConfig({
  // your app name
  name: "JoyID demo",
  // your app logo
  logo: "https://fav.farm/🆔",
  // JoyID app URL, this is for testnet, for mainnet, use "https://app.joy.id"
  joyidAppURL: "https://testnet.joyid.dev",
  // bitcoin address type, p2wpkh or p2tr
  requestAddressType: 'p2tr',
});

createApp(App).mount("#app");
```
  </FrameworkTabs.Vue>
</FrameworkTabs>


================================================
File: pages/apis/bitcoin/request-accounts.mdx
================================================
# requestAccounts

Connect the current account.

## Parameters

none

## Returns

`Promise<string[]>`: Address of current account.

## Example

```ts
try {
  let accounts = await requestAccounts();
  console.log('connect success', accounts);
} catch (e) {
  console.log('connect failed');
}
```


================================================
File: pages/apis/bitcoin/send-psbt.mdx
================================================
# sendPsbt

This function sends a PSBT to the network for broadcast.

The Parameters is idential to the `signPsbt` function, except that the `autoFinalized` parameter is always true. Returning the transaction id if the transaction was successfully sent.


================================================
File: pages/apis/bitcoin/sign-message.md
================================================
# signMessage

Sign a message with the current account.

## Parameters

- `msg - string`: a string to sign
- `type - string`:  (Optional) "ecdsa" | "bip322-simple". default is "ecdsa"
- `signerAddress - string`: (Optional) the address of the signer. default is the current account address.

## Returns

`Promise<string>`: the signature.

## Example

```js
// sign by ecdsa
try {
  let res = await signMessage("abcdefghijk123456789");
  console.log(res)
} catch (e) {
  console.log(e);
}

> G+LrYa7T5dUMDgQduAErw+i6ebK4GqTXYVWIDM+snYk7Yc6LdPitmaqM6j+iJOeID1CsMXOJFpVopvPiHBdulkE=

// verify by ecdsa
import { verifyMessage } from "@unisat/wallet-utils";
const pubkey = "026887958bcc4cb6f8c04ea49260f0d10e312c41baf485252953b14724db552aac";
const message = "abcdefghijk123456789";
const signature = "G+LrYa7T5dUMDgQduAErw+i6ebK4GqTXYVWIDM+snYk7Yc6LdPitmaqM6j+iJOeID1CsMXOJFpVopvPiHBdulkE=";
const result = verifyMessage(pubkey,message,signature);
console.log(result);

> true


// sign by bip322-simple
import { message } from '@unisat/wallet-sdk'
try {
  let res = await signMessage("abcdefghijk123456789","bip322-simple");
  console.log(res)
  // verify bip322-simple
  const isVerified = message.verifyMessageOfBIP322Simple(
    address,
    "abcdefghijk123456789", // message
    res, // signature
  )
} catch (e) {
  console.log(e);
}

> AkcwRAIgeHUcjr0jODaR7GMM8cenWnIj0MYdGmmrpGyMoryNSkgCICzVXWrLIKKp5cFtaCTErY7FGNXTFe6kuEofl4G+Vi5wASECaIeVi8xMtvjATqSSYPDRDjEsQbr0hSUpU7FHJNtVKqw=
```


================================================
File: pages/apis/bitcoin/sign-psbt.mdx
================================================
# signPsbt

This method will traverse all inputs that match the current address to sign.

## Parameters

- psbtHex - string: the hex string of psbt to sign
- options
  - autoFinalized - boolean: whether finalize psbt after signing, default is true
  - toSignInputs - array:
  - index - `number`: which input to sign
  - address - `string`: (at least specify either an address or a publicKey) Which corresponding private key to use for signing
  - publicKey - `string`: (at least specify either an address or a publicKey) Which corresponding private key to use for signing
  - sighashTypes - `number[]`: (optionals) sighashTypes
  - disableTweakSigner - `boolean` :(optionals) When signing and unlocking Taproot addresses, the tweakSigner is used by default for signature generation. Enabling this allows for signing with the original private key.

## Returns

`Promise<string>`: the hex string of signed psbt

## Example

```js
try {
  let res = await signPsbt(
    "70736274ff01007d....",
    {
        autoFinalized:false,
        toSignInputs:[
          {
            index: 0,
            address: "tb1q8h8....mjxzny",
          },
          {
            index: 1,
            publicKey: "tb1q8h8....mjxzny",
            sighashTypes: [1]
          },
          {
            index: 2,
            publicKey: "02062...8779693f",
          }
        ]
    }
  );
  console.log(res)
} catch (e) {
  console.log(e);
}

unisat.signPsbt("xxxxxxxx",{toSignInputs:[{index:0,publicKey:"xxxxxx",disableTweakSigner:true}],autoFinalized:false})
```


================================================
File: pages/apis/ckb/_meta.json
================================================
{
  "init-config": "initConfig",
  "connect": "connect",
  "sign": "signChallenge",
  "sign-tx": "signTransaction",
  "sign-cota": "signCotaNFTTx",
  "sign-raw-tx": "signRawTransaction"

}


================================================
File: pages/apis/ckb/connect.md
================================================
# `connect`

Connect JoyID Wallet to your app.

## Types

```typescript
function connect(config?: SignConfig): Promise<ConnectResponse>

interface SignConfig extends PopupConfig {
  /**
   * The name of your app
   */
  name?: string
  /**
   * The logo of your app
   */
  logo?: string
  /**
   * The RPC URL of the ckb node that your app is using
   */
  rpcURL?: string
  /**
   * The network that your app is using, defaults to JoyID AXON devnet
   */
  network?: Network
  /**
   * The URL of JoyID app url that your app is integrated with, defaults to https://app.joyid.dev
   */
  joyidAppURL?: string
  /**
   * The URL of JoyID server url that your app is integrated with
   */
  joyidServerURL?: string
}

interface PopupConfig {
  /**
   * Default is 300s
   */
  timeoutInSeconds?: number
  /**
   * popup instance
   */
  popup?: Window
}

interface Network {
  name: string
  chainId: number
}

interface ConnectResponse {
  // The CKB address of the authenticated user
  address: string
  // The Ethereum address of the authenticated user
  ethAddress: string
  // The public key of the authenticated user
  pubkey: string
  /**
   * key type of the authenticated user
   */
  keyType: 'main_key' | 'sub_key' | 'main_session_key' | 'sub_session_key'
}
```

## Example

```js
import { connect } from '@joyid/ckb'

async function joyidConnect() {
  const config = {
    name: 'Example App',
    logo: 'https://example.com/logo.png',
  }
  try {
    const res = await connect(config)
    console.log(res)
  } catch (e) {
    console.error(e)
  }
}
```


================================================
File: pages/apis/ckb/init-config.mdx
================================================
# `initConfig`

`initConfig` is a function that init the configuration for the JoyID SDK. You should call config function in your app's entry file to set the configuration.

After init the config, all the following functions will use the config as default value:

- [connect()](/apis/ckb/connect)
- [signMessage()](/apis/ckb/sign)
- [signTransaction()](/apis/ckb/sign-tx)
- [signCotaNFTTx()](/apis/ckb/sign-cota-nft)
- [signRawTransaction()](/apis/ckb/sign-raw-tx)

## Types

```typescript
function initConfig(config?: DappConfig): DappConfig

interface DappConfig {
  /**
   * The name of your app
   */
  name?: string
  /**
   * The logo of your app
   */
  logo?: string
  /**
   * The RPC URL of the ckb node that your app is using
   */
  rpcURL?: string
  /**
   * The network that your app is using, defaults to JoyID ckb testnet
   */
  network?: 'mainnet' | 'testnet'
  /**
   * The URL of JoyID app url that your app is integrated with, defaults to https://app.joyid.dev
   */
  joyidAppURL?: string
  /**
   * The URL of JoyID server url that your app is integrated with
   */
  joyidServerURL?: string
}
```

## Example

import { FrameworkTabs } from '@/components/framework-tabs'

<FrameworkTabs>
  <FrameworkTabs.React>
```ts filename="main.tsx" /initConfig/
import React from "react";
import ReactDOM from "react-dom/client";
import { initConfig } from "@joyid/ckb";
import App from "./App";
import "./index.css";

initConfig({
  name: "JoyID demo",
  logo: "https://fav.farm/🆔",
  joyidAppURL: "https://testnet.joyid.dev",
});

ReactDOM.createRoot(document.getElementById("root") as HTMLElement).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
);

```
  </FrameworkTabs.React>
  <FrameworkTabs.Vue>
```ts filename="main.ts" /initConfig/
import { createApp } from "vue";
import "./style.css";
import App from "./App.vue";
import { initConfig } from "@joyid/ckb";

initConfig({
  name: "JoyID demo",
  logo: "https://fav.farm/🆔",
  joyidAppURL: "https://testnet.joyid.dev",
});

createApp(App).mount("#app");
```

  </FrameworkTabs.Vue>
</FrameworkTabs>


================================================
File: pages/apis/ckb/sign-cota.md
================================================
# `signCotaNFTTx`

Open a JoyID app popup window to sign a CKB CoTA NFT transaction.

## Types

```typescript
function signTransaction(
  // The tx that was requested to be signed
  tx: CotaNFTTransactionRequest,
  config?: SignConfig,
): Promise<string>

interface CotaNFTTransactionRequest {
  /**
   * The from ckb address
   */
  from: string
  /**
   * The to ckb address
   */
  to: string
  /**
   * The CoTA NFT unique id which includes cota id and token index
   */
  tokenKey?: string
  /**
   * The cota id of CoTA NFT
   */
  tokenId?: string
  /**
   * The token index of CoTA NFT
   */
  tokenIndex?: string
}

interface SignConfig extends PopupConfig {
  /**
   * The name of your app
   */
  name?: string
  /**
   * The logo of your app
   */
  logo?: string
  /**
   * The RPC URL of the ckb node that your app is using
   */
  rpcURL?: string
  /**
   * The network that your app is using, defaults to JoyID testnet
   */
  network?: 'mainnet' | 'testnet'
  /**
   * The URL of JoyID app url that your app is integrated with, defaults to https://app.joyid.dev
   */
  joyidAppURL?: string
  /**
   * The URL of JoyID server url that your app is integrated with
   */
  joyidServerURL?: string
}

interface PopupConfig {
  /**
   * Default is 300s
   */
  timeoutInSeconds?: number
  /**
   * popup instance
   */
  popup?: Window
}
export interface SignCotaNFTResponseData {
  /**
   * The CKB transaction
   */
  tx: CKBTransaction
}
```

## Example

```js
import { signCotaNFTTx } from '@joyid/ckb'

async function joyidSignCotaNFT() {
  try {
    // send the NFT whose tokenKey is 0x003688bb1cba009d89dd3f1c8a6027a0c5851e8600000006 to
    // ckt1qrfrwcdnvssswdwpn3s9v8fp87emat306ctjwsm3nmlkjg8qyza2cqgqqxv6drphrp47xalweq9pvr6ll3mvkj225quegpcw
    const signedTx = await signCotaNFTTx({
      from: 'ckt1qrfrwcdnvssswdwpn3s9v8fp87emat306ctjwsm3nmlkjg8qyza2cqgqq9t8kvtsy2u2yz6s49r3fzk8dnt2rudy5gg5hfnm',
      to: 'ckt1qrfrwcdnvssswdwpn3s9v8fp87emat306ctjwsm3nmlkjg8qyza2cqgqqxv6drphrp47xalweq9pvr6ll3mvkj225quegpcw',
      tokenKey: '0x003688bb1cba009d89dd3f1c8a6027a0c5851e8600000006',
    })
    // send signed tx to blockchain
    const hash = await rpc.sendTransaction(signedTx, 'passthrough')
    console.log(txHash)
  } catch (e) {
    console.error(e)
  }
}
```


================================================
File: pages/apis/ckb/sign-raw-tx.md
================================================
# `signRawTransaction`

Open a JoyID app popup window to sign a CKB raw transaction.

## Types

```typescript
function signRawTransaction(
  tx: Transaction,
  signerAddress: string,
  config?: SignConfig
): Promise<Transaction>

interface Transaction {
  cellDeps: CellDep[]
  hash?: Hash
  headerDeps: Hash[]
  inputs: Input[]
  outputs: Output[]
  outputsData: HexString[]
  version: HexNumber
  witnesses: HexString[]
}

interface SignConfig extends PopupConfig {
  /**
   * The name of your app
   */
  name?: string
  /**
   * The logo of your app
   */
  logo?: string
  /**
   * The RPC URL of the ckb node that your app is using
   */
  rpcURL?: string
  /**
   * The network that your app is using, defaults to JoyID testnet
   */
  network?: 'mainnet' | 'testnet'
  /**
   * The URL of JoyID app url that your app is integrated with, defaults to https://app.joyid.dev
   */
  joyidAppURL?: string
  /**
   * The URL of JoyID server url that your app is integrated with
   */
  joyidServerURL?: string
  /**
   * The witnessIndex represents the positions of JoyID cells in inputs, and the default value is an empty array.
   */
  witnessIndexes?: number[]
}

/**
 * Get the subkey unlock from CoTA aggregator to build JoyID witness.
 * @param aggregatorUrl The CoTA aggregator url
 * @param connection The response of JoyID function `connect`
 */
function getSubkeyUnlock(
  aggregatorUrl: string,
  connection: AuthResponseData
): Promise<string>

// Get JoyID contract cell dep
function getJoyIDCellDep(isMainnet: boolean)

// Get JoyID lock script whose args is empty
function getJoyIDLockScript(isMainnet: boolean)

// Get CoTA contract cell dep
// Please ensure that the CoTA cell is the first in cellDeps.
function getCotaCellDep(isMainnet: boolean)

// Get CoTA type script whose args is empty
function getCotaTypeScript(isMainnet: boolean)
```

## Example

### signRawTransaction

```js
import { signRawTransaction, getSubkeyUnlock } from '@joyid/ckb'
import JSBI from 'jsbi'

async function joyidSignRawTransaction() {
  try {
    const signedTx = await signRawTransaction({
      "version": "0x0",
      "cellDeps": [
          {
              "outPoint": {
                  "txHash": "0x4dcf3f3b09efac8995d6cbee87c5345e812d310094651e0c3d9a730f32dc9263",
                  "index": "0x0"
              },
              "depType": "depGroup"
          },
          {
              "outPoint": {
                  "txHash": "0x7bf3899cf41879ed0319bf5312c9db5bf5620fff9ebe59556c261c48f0369054",
                  "index": "0x0"
              },
              "depType": "code"
          }
      ],
      "headerDeps": [],
      "inputs": [
          {
              "previousOutput": {
                  "txHash": "0x62c8488177f17a7868520c8f3f3dbbbfe2753412c23d1f472671c55f32839199",
                  "index": "0x2"
              },
              "since": "0x0"
          }
      ],
      "outputs": [
          {
              "capacity": "0x525433d00",
              "lock": {
                  "codeHash": "0xd23761b364210735c19c60561d213fb3beae2fd6172743719eff6920e020baac",
                  "hashType": "type",
                  "args": "0x0001f21be6c96d2103946d37a1ee882011f7530a92a7"
              },
              "type": {
                  "codeHash": "0x50fdea2d0030a8d0b3d69f883b471cab2a29cae6f01923f19cecac0f27fdaaa6",
                  "hashType": "type",
                  "args": "0xd28f286bd1c2998882656ccaa09b634abc1d14f584b8ad4e8132bdd1b7841c19"
              }
          },
          {
              "capacity": "0x1252e28b50",
              "lock": {
                  "codeHash": "0xd23761b364210735c19c60561d213fb3beae2fd6172743719eff6920e020baac",
                  "hashType": "type",
                  "args": "0x0001f21be6c96d2103946d37a1ee882011f7530a92a7"
              }
          }
      ],
      "outputsData": [
          "0x0814434b42204669737420496e736372697074696f6e04434b4249ac90307abd4a5dc3233fe26661e5f797de2da541bcd0f3b73bccde0ef6978cb10040075af0750700000000000000000000e8764817000000000000000000000000",
          "0x"
      ],
      "witnesses": [
          "0x10000000100000001000000010000000",
          "0x"
      ]
    })
    // send signed tx to blockchain
    const hash = await rpc.sendTransaction(signedTx, 'passthrough')
    console.log(txHash)
  } catch (e) {
    console.error(e)
  }
}
```

### Unlock with Subkey

`getSubkeyUnlock` is used to build JoyID witness with the sub key

```js
import { connect, getSubkeyUnlock, getCotaTypeScript } from '@joyid/ckb'
// "@nervosnetwork/ckb-sdk-utils": "0.109.3",
import { serializeWitnessArgs } from '@nervosnetwork/ckb-sdk-utils';

import { blockchain } from "@ckb-lumos/base"
import { bytes } from "@ckb-lumos/codec"

const config = {
  name: 'Example App',
  logo: 'https://example.com/logo.png',
}
try {
  const connection = await connect(config)

  if (connectData.keyType === 'sub_key') {
    // Build JoyID corresponding witness with subkey unlock entry
    // The aggregator url can be found in the next part of this article
    const unlockEntry = await getSubkeyUnlock("aggregator-url", connection)

    // 1. use serializeWitnessArgs to serialize
    const emptyWitness = {
      lock: '',
      inputType: '',
      outputType: `0x${unlockEntry}`,
    }
    const joyidWitness = serializeWitnessArgs(emptyWitness)

    // 2. you can also use ckb-lumos to serialize
    // const joyidWitness = bytes.hexify(
    //   blockchain.WitnessArgs.pack({
    //     outputType: new Uint8Array(`0x${unlockEntry}`),
    //   })
    // )

    // Get CoTA cell from CKB blockchain and please ensure that the CoTA cell is the first in cellDeps.
    const cotaType = getCotaTypeScript(isMainnet)
    // Get CoTA cell with CKB indexer and the indexer filter is joyid lock script and cota type script
    // The collector can be from https://github.com/nervina-labs/ckb-dex-sdk/blob/master/src/collector/index.ts#L18 or https://github.com/utxostack/rgbpp-sdk/blob/develop/packages/ckb/src/collector/index.ts#L35
    // And you can also define your own collector to collect cells whose lock script and type script are matched to JoyID lock and CoTA type.
    const cotaCells = await collector.getCells({ lock: joyidLock, type: cotaType })
    if (!cotaCells || cotaCells.length === 0) {
      throw new NoCotaCellException("Cota cell doesn't exist")
    }
    const cotaCell = cotaCells[0]
    const cotaCellDep: CKBComponents.CellDep = {
      outPoint: cotaCell.outPoint,
      depType: 'code',
    }
    // Please ensure that the CoTA cell is the first in cellDeps.
    cellDeps = [cotaCellDep, ...cellDeps]
  }
} catch (e) {
  console.error(e)
}

```

### CoTA Aggregator URL

You can use the following public cota aggregator url to fetch subkey unlock entry:

```
testnet:  https://cota.nervina.dev/aggregator

mainnet:  https://cota.nervina.dev/mainnet-aggregator 
```


================================================
File: pages/apis/ckb/sign-tx.md
================================================
# `signTransaction`

Open a JoyID app popup window to sign a CKB transaction.

## Types

```typescript
function signTransaction(
  // The tx that was requested to be signed
  tx: CkbTransactionRequest,
  config?: SignConfig,
): Promise<string>

interface CkbTransactionRequest {
  /**
   * The from ckb address
   */
  from: string
  /**
   * The to ckb address
   */
  to: string
  /**
   * The amount of ckb native token in Shannon
   */
  amount: string
}

interface SignConfig extends PopupConfig {
  /**
   * The name of your app
   */
  name?: string
  /**
   * The logo of your app
   */
  logo?: string
  /**
   * The RPC URL of the ckb node that your app is using
   */
  rpcURL?: string
  /**
   * The network that your app is using, defaults to JoyID testnet
   */
  network?: 'mainnet' | 'testnet'
  /**
   * The URL of JoyID app url that your app is integrated with, defaults to https://app.joyid.dev
   */
  joyidAppURL?: string
  /**
   * The URL of JoyID server url that your app is integrated with
   */
  joyidServerURL?: string
}

interface PopupConfig {
  /**
   * Default is 300s
   */
  timeoutInSeconds?: number
  /**
   * popup instance
   */
  popup?: Window
}

export interface SignCkbTxResponseData {
  /**
   * The CKB transaction
   */
  tx: CKBTransaction
}
```

## Example

```js
import { signTransaction } from '@joyid/ckb'
import JSBI from 'jsbi'

async function joyidSignTransaction() {
  try {
    // send 100 ckb to `ckt1qrfrwcdnvssswdwpn3s9v8fp87emat306ctjwsm3nmlkjg8qyza2cqgqqxv6drphrp47xalweq9pvr6ll3mvkj225quegpcw`
    const signedTx = await signTransaction({
      from: 'ckt1qrfrwcdnvssswdwpn3s9v8fp87emat306ctjwsm3nmlkjg8qyza2cqgqq9t8kvtsy2u2yz6s49r3fzk8dnt2rudy5gg5hfnm',
      to: 'ckt1qrfrwcdnvssswdwpn3s9v8fp87emat306ctjwsm3nmlkjg8qyza2cqgqqxv6drphrp47xalweq9pvr6ll3mvkj225quegpcw',
      value: JSBI.BigInt(100 * 10 ** 8).toString(),
    })
    // send signed tx to blockchain
    const hash = await rpc.sendTransaction(signedTx, 'passthrough')
    console.log(txHash)
  } catch (e) {
    console.error(e)
  }
}
```


================================================
File: pages/apis/ckb/sign.md
================================================
# `signChallenge`

Open a JoyID app popup window to sign message.

## Types

```typescript
function signChallenge(
  // The challenge that was requested to be signed
  challenge: string | Uint8Array,
  // The address of the signer
  signerAddress: string,
  config?: SignConfig,
): Promise<signChallengeResponse>

interface SignConfig extends PopupConfig {
  /**
   * The name of your app
   */
  name?: string
  /**
   * The logo of your app
   */
  logo?: string
  /**
   * The RPC URL of the ckb node that your app is using
   */
  rpcURL?: string
  /**
   * The network that your app is using, defaults to JoyID ckb testnet
   */
  network?: 'mainnet' | 'testnet'
  /**
   * The URL of JoyID app url that your app is integrated with, defaults to https://app.joyid.dev
   */
  joyidAppURL?: string
  /**
   * The URL of JoyID server url that your app is integrated with
   */
  joyidServerURL?: string
}

interface PopupConfig {
  /**
   * Default is 300s
   */
  timeoutInSeconds?: number
  /**
   * popup instance
   */
  popup?: Window
}

interface signChallengeResponse {
  // The public key of the authenticated user
  pubkey: string
  /**
   * The challenge that was requested to be signed
   */
  challenge: string
  /**
   * The message that was signed by the authenticator,
   * Note that the message may not be the original raw message,
   * but is combined with client data and authenticator data
   * according to [WebAuthn Spec](https://www.w3.org/TR/webauthn-2/#sctn-op-get-assertion).
   */
  message: string
  /**
   * The signature of the message that was signed by the authenticator
   */
  signature: string
  /**
   * key type of the authenticated user
   */
  keyType: 'main_key' | 'sub_key' | 'main_session_key' | 'sub_session_key'

  /**
   * The algorithm of the signature.
   * corresponds to the `value` field of the [COSE](https://www.iana.org/assignments/cose/cose.xhtml#algorithms) structure
   */
  alg: number

  /**
   * The attestation of the signature,
   * only available when keyType is `main_session_key` or `sub_session_key`
   */
  attestation?: string
}
```

## Example

```js
import { signChallenge } from '@joyid/ckb'

async function joyidSign() {
  try {
    const res = await signChallenge(
      'Sign this message',
      'ckt1qrfrwcdnvssswdwpn3s9v8fp87emat306ctjwsm3nmlkjg8qyza2cqgqqxv6drphrp47xalweq9pvr6ll3mvkj225quegpcw',
      {
        logo: 'https://example.com/logo.png',
        name: 'Example App',
      },
    )
    console.log(res)
  } catch (e) {
    console.error(e)
  }
}
```

## Details

Note that `challenge` and `message` are two different concepts, in short:

`challenge` is what you as a developer want JoyID to sign.

`message` is what JoyID actually signs, which is a combination of `challenge` and some other data (such as authenticator data, etc.), and `challenge` will be always included in `message`.

For more information, you can check out the [WebAuthn Spec](https://www.w3.org/TR/webauthn-2/#sctn-op-get-assertion).


================================================
File: pages/apis/ethereum-provider/_meta.json
================================================
{
  "ethereum-provider": "EthereumProvider"
}


================================================
File: pages/apis/ethereum-provider/ethereum-provider.md
================================================
# EthereumProvider

`EthereumProvider` implements [EIP-1193 ↗](https://eips.ethereum.org/EIPS/eip-1193) for JoyID.

## Types

- [`EvmConfig`](/apis/evm/init-config#evmconfig)

```ts
import { Chain } from 'viem'

constructor(chains: Chain[], config: EvmConfig)
```

## Usage

Check out [Ethereum Provider Guide](/guide/evm/adapters/ethereum-provider).


================================================
File: pages/apis/ethers/_meta.json
================================================
{
  "provider": "JoyIDProvider",
  "signer": "JoyIDSigner"
}


================================================
File: pages/apis/ethers/provider.md
================================================
# JoyIDProvider

`JoyIDProvider` is a subclass of [`ethers.providers.JsonRpcProvider` ↗](https://docs.ethers.org/v5/api/providers/jsonrpc-provider/), all available methods are listed in the [Ethers.js docs ↗](https://docs.ethers.org/v5/api/providers/jsonrpc-provider/).

## Types

- [`EvmConfig`](/apis/evm/init-config#evmconfig)

```ts
import { providers } from 'ethers'

constructor(
  url?: providers.ConnectionInfo | string,
  network?: providers.Networkish,
  config?: EvmConfig
)
```

## Usage

Check out [Ethers.js Guide](/guide/evm/adapters/ethers).


================================================
File: pages/apis/ethers/signer.md
================================================
# JoyIDSigner

`JoyIDSigner` is a subclass of [`ethers.Signer` ↗](https://docs.ethers.org/v5/api/signer/), all available methods are listed in the [Ethers.js docs ↗](https://docs.ethers.org/v5/api/signer/).

## Types

- [`EvmConfig`](/apis/evm/init-config#evmconfig)

```ts
import { providers } from 'ethers'

constructor(
  provider: providers.Provider,
  connectedAddress: string,
  config?: EvmConfig
)
```

## Usage

Check out [Ethers.js Guide](/guide/evm/adapters/ethers).


================================================
File: pages/apis/evm/_meta.json
================================================
{
  "init-config": "initConfig",
  "connect": "connect",
  "disconnect": "disconnect",
  "get-connected-address": "getConnectedAddress",
  "sign-message": "signMessage",
  "sign-tx": "signTransaction",
  "send-tx": "sendTransaction",
  "sign-typed-data": "signTypedData",
  "redirect-api": "Redirect API"
}


================================================
File: pages/apis/evm/connect.mdx
================================================
# connect

Connect to JoyID wallet and return an ethereum address.

## Types

- [`EvmConfig`](/apis/evm/init-config#evmconfig)

```ts
function connect(config?: EvmConfig): Promise<`0x${string}`>
```

## Example

```js
async function connectOnClick() {
  const address = await connect()
  console.log(`Connected with address ${address}`)
}
```


================================================
File: pages/apis/evm/disconnect.md
================================================
# disconnect

Disconnect JoyID and clear the connection status from local storage.

## Types

```ts
function disconnect(): void
```

## Example

```tsx filename="App.tsx" /disconnect/
import { connect, disconnect } from '@joyid/evm'
export default function App() {
  const [address, setAddress] = React.useState<Address | null>(null);
  const onConnect = async () => {
    try {
      const res = await connect();
      setAddress(res);
    } catch (error) {
      console.log(error);
    }
  };

  return (
    <div id="app">
      {address ? (
        <>
          <h1 className="text-xl mb-4">{`Connected: ${address}`}</h1>
          <button
            className="btn btn-primary"
            onClick={() => {
              disconnect();
              setAddress(null);
            }}
          >
            Disconnect
          </button>
          <div className="divider" />
        </>
      ) : (
        <button className="btn btn-primary" onClick={onConnect}>
          Connect JoyID
        </button>
      )}
    </div>
  );
}
```


================================================
File: pages/apis/evm/get-connected-address.md
================================================
# getConnectedAddress

Get an ethereum address of connected account from local storage.

## Types

```ts
function getConnectedAddress(): `0x${string}` | null
```

## Example

```tsx filename="App.tsx" /getConnectedAddress/
import { connect, disconnect, getConnectedAddress } from '@joyid/evm'
export default function App() {
  const [address, setAddress] = React.useState<Address | null>(getConnectedAddress());
  const onConnect = async () => {
    try {
      const res = await connect();
      setAddress(res);
    } catch (error) {
      console.log(error);
    }
  };

  return (
    <div id="app">
      {address ? (
        <>
          <h1 className="text-xl mb-4">{`Connected: ${address}`}</h1>
          <button
            className="btn btn-primary"
            onClick={() => {
              disconnect();
              setAddress(null);
            }}
          >
            Disconnect
          </button>
          <div className="divider" />
        </>
      ) : (
        <button className="btn btn-primary" onClick={onConnect}>
          Connect JoyID
        </button>
      )}
    </div>
  );
}
```


================================================
File: pages/apis/evm/init-config.mdx
================================================
# initConfig

Config your app name and logo, and the network you want to connect to.

After init the config, all the following functions will use the config as default value:

- [connect()](/apis/evm/connect)
- [signMessage()](/apis/evm/sign-message)
- [signTransaction()](/apis/evm/sign-tx)
- [sendTransaction()](/apis/evm/send-tx)
- [signTypedData()](/apis/evm/sign-typed-data)

## Types

```ts
function initConfig(config?: EvmConfig): EvmConfig
```

### EvmConfig

```ts
interface EvmConfig {
  /**
   * The name of your app
   */
  name?: string
  /**
   * The logo of your app
   */
  logo?: string
  /**
   * The RPC URL of the eth node that your app is using
   */
  rpcURL?: string
  /**
   * The network that your app is using, defaults to Sepolia testnet
   */
  network?: Network
  /**
   * The URL of JoyID app url that your app is integrated with, defaults to https://testnet.joyid.dev
   */
  joyidAppURL?: string
}

interface Network {
  name: string
  chainId: string
}
```

## Example

```js
// in your app entry file
initConfig({
  // your app name
  name: 'EVM demo',
  // your app logo,
  logo: 'https://fav.farm/🆔',
  // optional, config for the network you want to connect to
  network: {
    chainId: 1,
    name: 'Ethereum Mainnet',
  },
  // optional
  rpcURL: 'https://cloudflare-eth.com'
})
```


================================================
File: pages/apis/evm/redirect-api.md
================================================
# Redirect API

## connectWithRedirect

Connect JoyID and redirect to a specified URL. This function has same parameters as [`connect`](/apis/evm/connect) function, except for first parameter is a redirect URL.

```ts
function connectWithRedirect (
  redirectURL: string,
  config?: EvmConfig
): void
```

## connectCallback

Get an ethereum address of redirect URL from `connectWithRedirect` specified URL.

This function accepts one optional url parameter. If url parameter is not specified, it will use `window.location.href` as default.

```ts
function connectCallback (uri?: string): { state?: any; address: string }
```

## signMessageWithRedirect

Sign message and redirect to a specified URL.

This function has same parameters as [`signMessage`](/apis/evm/sign-message) function, except for first parameter is a redirect URL.

```ts
function signMessageWithRedirect (
  redirectURL: string,
  message: string | Uint8Array,
  signerAddress?: string,
  config?: EvmConfig
): void
```

## signMessageCallback

Get signature from `signMessageWithRedirect` specified URL.

This function accepts one optional url parameter. If url parameter is not specified, it will use `window.location.href` as default.

```ts
function signMessageCallback (uri?: string): { state?: any; signature: string }
```

## signTypedDataWithRedirect

Sign typed data and redirect to a specified URL.

This function has same parameters as [`signTypedData`](/apis/evm/sign-typed-data) function, except for first parameter is a redirect URL.

```ts
function signTypedData  (
  redirectURL: string,
  typedData: TypedData,
  signerAddress?: string,
  config?: SignConfig
): Promise<Hex>
```

## signTypedDataCallback

Get signature from `signTypedDataWithRedirect` specified URL.

This function accepts one optional url parameter. If url parameter is not specified, it will use `window.location.href` as default.

```ts
function signTypedDataCallback (uri?: string): { state?: any; signature: string }
```

## signTransactionWithRedirect

Sign transaction and redirect to a specified URL.

This function has same parameters as [`signTransaction`](/apis/evm/sign-tx) function, except for first parameter is a redirect URL.

```ts
function signTransactionWithRedirect (
  redirectURL: string,
  tx: TransactionRequest,
  signerAddress?: string,
  config?: EvmConfig
): void
```

## signTransactionCallback

Get signed transaction from `signTransactionWithRedirect` specified URL.

This function accepts one optional url parameter. If url parameter is not specified, it will use `window.location.href` as default.

```ts
function signTransactionCallback (uri?: string): { state?: any; tx: string }
```

## sendTransactionWithRedirect

Send transaction and redirect to a specified URL.

This function has same parameters as [`sendTransaction`](/apis/evm/send-tx) function, except for first parameter is a redirect URL.

```ts
function sendTransactionWithRedirect (
  redirectURL: string,
  tx: TransactionRequest,
  signerAddress?: string,
  config?: EvmConfig
): void
```

## sendTransactionCallback

Get transaction hash from `sendTransactionWithRedirect` specified URL.

This function accepts one optional url parameter. If url parameter is not specified, it will use `window.location.href` as default.

```ts
function sendTransactionCallback (uri?: string): { state?: any; tx: string }
```

## Usage

Check out the [JoyID Evm Demo ↗](https://github.com/nervina-labs/joyid-evm-demo/) for a full example of how to use Redirect API.


================================================
File: pages/apis/evm/send-tx.mdx
================================================
# sendTransaction

Signs and send `tx`, returning tx hash.

Note that `gasLimit`, `gasPrice`, `maxPriorityFeePerGas`, `maxFeePerGas` is a **string** that can be passed to [`BigInt`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt). eg.

```js
// ✅ valid
const gasPriceString = "9007199254740991"
// ✅ valid
const gasPriceHex = "0x1fffffffffffff"
// ✅ valid
const gasPriceOctal = "0o377777777777777777"
// ❌ invalid
const gasPriceNumber = 9007199254740991
// ❌ invalid
const gasPriceBigInt = 9007199254740991n
// ❌ invalid
const gasPriceBigInt2 = BigInt(9007199254740991)
```

## Types

```ts
function signTransaction(tx: TransactionRequest, signerAddress?: string): Promise<string>

interface TransactionRequest {
  maxPriorityFeePerGas?: string
  maxFeePerGas?: string

  to?: string
  from?: string
  nonce?: number

  gasLimit?: string
  gasPrice?: string

  data?: string
  value?: string
  chainId?: number

  accessList?: AccessList

  customData?: Record<string, any>
  ccipReadEnabled?: boolean
}

type AccessList = Array<{ address: EthAddress; storageKeys: Array<string> }>
```


## Example

```js
import { sendTransaction } from '@joyid/evm'

async function signTransactionOnClick(tx) {
  const txhash = await sendTransaction(tx)
  console.log(txhash)
}


================================================
File: pages/apis/evm/sign-message.mdx
================================================
# signMessage

Signers an [EIP-191](https://eips.ethereum.org/EIPS/eip-191) prefixed personal message. If the message is a string, it is signed as UTF-8 encoded bytes. It is not interpretted as a BytesLike; so the string "0x1234" is signed as six characters, not two bytes.

To sign that example as two bytes, the Uint8Array should be used (i.e. `new Uint8Array([ 0x12, 0x34 ])`).

## Types

```ts
function signMessage(message: string | Uint8Array, signerAddress?: string): Promise<string>
```

## Example

```ts
import { signMessage } from '@joyid/evm'

async function signMessageOnClick() {
  const signature = await signMessage('Hello, world!', '<your connected address>')
  console.log(`Signature: ${signature}`)
}
```


================================================
File: pages/apis/evm/sign-tx.md
================================================
# signTransaction

Signs `tx`, returning the fully signed serialized transaction. Note that `gasLimit`, `gasPrice`, `maxPriorityFeePerGas`, `maxFeePerGas` is a **string** that can be passed to [`BigInt`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt). eg.

```js
// ✅ valid
const gasPriceString = "9007199254740991"
// ✅ valid
const gasPriceHex = "0x1fffffffffffff"
// ✅ valid
const gasPriceOctal = "0o377777777777777777"
// ❌ invalid
const gasPriceNumber = 9007199254740991
// ❌ invalid
const gasPriceBigInt = 9007199254740991n
// ❌ invalid
const gasPriceBigInt2 = BigInt(9007199254740991)
```

## Types

```ts
function signTransaction(tx: TransactionRequest, signerAddress?: string): Promise<string>

interface TransactionRequest {
  maxPriorityFeePerGas?: string
  maxFeePerGas?: string

  to?: string
  from?: string
  nonce?: number

  gasLimit?: string
  gasPrice?: string

  data?: string
  value?: string
  chainId?: number

  accessList?: AccessList

  customData?: Record<string, any>
  ccipReadEnabled?: boolean
}

type AccessList = Array<{ address: EthAddress; storageKeys: Array<string> }>
```

## Example

```js
import { signTransaction } from '@joyid/evm'

async function signTransactionOnClick(tx) {
  const signedTx = await signTransaction(tx)
  await provider.sendTransaction(signedTx)
}
```


================================================
File: pages/apis/evm/sign-typed-data.mdx
================================================
# signTypedData

Signs typed data and calculates an Ethereum-specific signature in [EIP-712](https://eips.ethereum.org/EIPS/eip-712), return a signature hex string.

The `TypedData` struct is defined as [`abitype` ↗](https://abitype.dev/api/types#typeddata).


## Types

```ts
function signTypedData(typedData: TypedData, signerAddress?: string): Promise<string>
```

## Example

```js
import { signTypedData } from '@joyid/evm'

const typedData = {
  domain: {
    name: 'Ether Mail',
    version: '1',
    chainId: 1,
  verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',
  },
  types: {
    Person: [
      { name: 'name', type: 'string' },
      { name: 'wallet', type: 'address' },
    ],
    Mail: [
      { name: 'from', type: 'Person' },
      { name: 'to', type: 'Person' },
      { name: 'contents', type: 'string' },
    ],
  },
  primaryType: 'Mail',
  message: {
    from: {
      name: 'Cow',
      wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',
    },
    to: {
      name: 'Bob',
      wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',
    },
    contents: 'Hello, Bob!',
  },
}

async function signTypedDataOnClick() {
  const signature = await signTypedData(typedData, '<your connected address>')
  console.log(`Signature: ${signature}`)
}
```


================================================
File: pages/apis/nostr/_meta.json
================================================
{
  "nostr": "nostr",
  "init-config": "initConfig",
  "logout": "logout",
  "get-connected-pubkey": "getConnectedPubkey"
}


================================================
File: pages/apis/nostr/get-connected-pubkey.md
================================================
# getConnectedPubkey

Get public key of connected nostr account from local storage.

## Types

```ts
function getConnectedPubkey(): string | null
```


================================================
File: pages/apis/nostr/init-config.md
================================================
# initConfig

Config your app name and logo, and the JoyID wallet URL you want to connect to.

## Types

```ts
function initConfig(config?: DappConfig): DappConfig
```

### DappConfig

```ts
interface DappConfig {
  /**
   * The name of your app
   */
  name?: string
  /**
   * The logo of your app
   */
  logo?: string
  /**
   * The URL of JoyID app url that your app is integrated with, defaults to https://testnet.joyid.dev
   */
  joyidAppURL?: string
}
```


================================================
File: pages/apis/nostr/logout.md
================================================
# logout

Disconnect JoyID and clear the connection status from local storage.

## Types

```ts
function logout(): void
```


================================================
File: pages/apis/nostr/nostr.md
================================================
# nostr

`nostr` implemented [NIP-07](https://github.com/nostr-protocol/nips/blob/master/07.md). The `nostr` object may be made available by web browsers or extensions and websites or web-apps may make use of it after checking its availability.

JoyID has currently only implemented the basic methods of NIP-07: `getPublicKey()` and `signEvent()`.

## Types

```ts
// returns a public key as hex
nostr.getPublicKey(): Promise<string>
// takes an event object, adds `id`, `pubkey` and `sig` and returns it
nostr.signEvent(event: { created_at: number, kind: number, tags: string[][], content: string }): Promise<Event>
```

## Usage

Check out the [NIP-07 Guide](/guide/nostr/nip-07).


================================================
File: pages/apis/public-api/_meta.json
================================================
{
  "jpoints": "JPoints Balance"
}


================================================
File: pages/apis/public-api/jpoints.md
================================================
# Jpoints Balance Query API

JoyID offers a straightforward API endpoint for projects to query their Jpoints balance. This guide explains how to use this interface.

## API Request

To query the balance, you need to make a `curl` request to the following API endpoint:

```bash
curl 'https://api.joy.id/api/v1/quest/points/{address}' \
  -H 'accept: application/json' \
  -H 'origin: https://app.joy.id' \
  -H 'referer: https://app.joy.id/' \
  -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/125.0.0.0 Safari/537.36'
```

Replace **`{address}`** with your actual wallet address. The **`{address}`** can be a BTC, ETH, or CKB address.

## **Request Headers**

The request includes the following headers:

- **`accept`**: Specifies the content type of the server's response, here it is **`application/json`**.
- **`origin`**: Indicates the origin of the request, which is **`https://app.joy.id`** here.
- **`referer`**: Typically used to indicate the page from which the request was linked, which is **`https://app.joy.id/`** here.
- **`user-agent`**: Contains information about the requester, here is an example of a Chrome browser.

## **Response**

A successful response will be a JSON object containing the user's Jpoints balance information.


================================================
File: pages/apis/rainbowkit/_meta.json
================================================
{
  "wallet": "JoyIdWallet",
  "connector": "JoyIdConnector"
}


================================================
File: pages/apis/rainbowkit/connector.md
================================================
# JoyIdConnector

`@joyid/rainbowkit` re-exports `JoyIdConnector` from `@joyid/wagmi`.

See `@joyid/evm`'s [JoyIdConnector](/apis/wagmi/connector) for more details.

## Implementation

```ts
export { JoyIdConnector } from '@joyid/wagmi'
```


================================================
File: pages/apis/rainbowkit/wallet.md
================================================
# JoyIdWallet

`JoyIdWallet` is a [Custom Wallet ↗](https://www.rainbowkit.com/docs/custom-wallets) that can be used with [RainbowKit](https://www.rainbowkit.com/).

Note that `JoyIdWallet` does not need to specify `rpcURL` or `network` in the `EvmConig`, it will automatically handled by RainbowKit according to the `chains` you specified.

## Types

- [`EvmConfig`](/apis/evm/init-config#evmconfig)

```ts
import { Chain } from 'wagmi'
import { Wallet } from '@rainbow-me/rainbowkit'

export interface JoyIdWalletOptions {
  // List of chains to support
  chains: Chain[]
  // JoyID EVM config
  options?: EvmConfig
}

function JoyIdWallet ({
  chains,
  options,
}: JoyIdWalletOptions): Wallet
```

## Usage

Check out [RainbowKit Guide](/guide/evm/adapters/rainbowkit).


================================================
File: pages/apis/wagmi/_meta.json
================================================
{
  "connector": "JoyIdConnector"
}


================================================
File: pages/apis/wagmi/connector.md
================================================
# JoyIdConnector

`JoyIdConnector` is a [Wagmi Connector ↗](https://wagmi.sh/core/config#connectors-optional), it can be used to integrate JoyID into your wagmi-based dApp.

Note that `JoyIdConnector` does not need to specify `rpcURL` or `network` in the `EvmConig`, it will automatically handled by Wagmi according to the `chains` you specified.

## Types

- [`EvmConfig`](/apis/evm/init-config#evmconfig)

```ts
import { Chain } from 'wagmi'

interface JoyIdConnectorOptions {
  // List of chains to support
  chains: Chain[]
  // JoyID EVM config
  options?: EvmConfig
}

constructor({ chains, options }: JoyIdConnectorOptions)
```

## Usage

Check out [Wagmi Guide](/guide/evm/adapters/wagmi).


================================================
File: pages/guide/_meta.json
================================================
{
  "index": "Introduction",
  "public-good": "Public Good",
  "security-model": "Security Model",
  "applications": "Applications",
  "sdk":"Interact with JoyID",
  "evm": "EVM",
  "ckb": "CKB",
  "bitcoin": "Bitcoin",
  "nostr": "Nostr"
}


================================================
File: pages/guide/index.mdx
================================================
# Introduction

JoyID is a web-based wallet solution that supports multiple blockchain networks and platforms and is designed to streamline the user experience for everyday users. Based on the [FIDO Webauthn protocol](https://webauthn.io/) and utilizing [Nervos CKB](https://nervos.org/), users are able to open an account in seconds and manage their wallet using modern security technology such as Face ID and Touch ID. It eliminates the need for passwords or cumbersome mnemonic phrases. JoyID uses multiple devices and cutting edge account recovery methods to ensure all your tokens and NFTs remain secure no matter if you are a first time crypto user, or a battle scarred crypto veteran.

**JoyID is designed to break down the barriers to the mass adoption of crypto wallets, making them truly easy to use and highly secure for all Web2 and Web3 users.**

## Why JoyID?

- **Eliminate Passwords and Mnemonics:** You don't need to provide or remember any sensitive information to access your wallet. There are no passwords, no mnemonics, no emails, and no phone numbers. With JoyID, your devices and biometrics are all that's required.
- **Fully Non-Custodial:** You always have complete control over your private keys and funds. Your wallet remains inaccessible to others without your biometric authentication.
- **Easy Backup and Recovery:** JoyID simplifies account security with multiple backup methods. Options such as using multiple devices, blockchain wallets, social recovery, and passkeys allow for straightforward account recovery, thus eliminating the need for cumbersome mnemonic phrases.
- **Support for Multiple Chains:** JoyID supports an ever-growing list of blockchains, including Bitcoin, Ethereum, Polygon, Solana, and more. Users can manage assets, including tokens and NFTs, across all supported chains.
- **Promote a Public Good:** The JoyID Wallet is based on the JoyID protocol, an open and free standard, reinforcing our commitment to offering a public good for everyone's benefit.


================================================
File: pages/guide/public-good.md
================================================
# Public good

## Vision

The goal of the JoyID protocol is to address the challenges of account creation and usage in the Web3 world (JoyID Wallet is a frontend wallet implementation based on the JoyID protocol). **We firmly believe that a decentralized, privacy-first, and self-sovereign Web3 world belongs not only to technical enthusiasts but to everyone.** JoyID protocol, leveraging hardware encryption chips known as Security Enclaves found ubiquitously in end-user devices and smart contracts on blockchain, offers a user-friendly Web3 account solution that is accessible to all.

**We aspire to establish JoyID protocol as the foundational infrastructure of the Web3 world, serving as a public good for the entire Web3 ecosystem**, and committing to the following core values:

- Independent of any centralized service
- Agnostic to specific Web3 technologies or systems
- Accessible to anyone without the need for permission or fees
- Open for participation in ecosystem with rewards for contributors
- Open-source
- Owned by the community

## Decentralisation

### Interchangeability

The JoyID protocol primarily consists of two technical specifications: **frontend key management** and **on-chain abstract accounts**. The former is responsible for interfacing with the Passkey API of the system and implementing key derivation, while the latter is responsible for enabling decentralized authentication and key exchange among users' multiple devices. Any organization or individual can implement their own JoyID frontend and directly interact with on-chain abstract accounts.

**Frontend applications that comply with the JoyID protocol can mutually authorize each other**, eliminating the need for users to bind to a single service provider or domain. All the necessary user data is stored within smart contracts, thus making **both the business logic and data flow independent of centralized services**.

### Permissionless

JoyID protocol is permissionless, meaning it doesn't require anyone's permission to use. This sets it apart from other solutions that rely on centralized hosting services or contract deployment keys.

### Non-custodian

Private keys are securely stored and processed within the user's device, making them inaccessible to third parties. Users have full ownership and control over their private keys, ensuring control over their decentralized assets, data, and identity.

### Privacy-by-design

The use of the **JoyID protocol does not require users to provide any personal information**, including but not limited to email addresses, phone numbers, credit card, KYC (Know Your Customer) information, and so on.

### Neutrality

JoyID protocol is not limited to any specific blockchain or decentralized technology. It provides fundamental key management services, supporting a wide range of applications and technologies.

## Ecosystem

### Governance

As a collectively owned and community-driven project, governance is of paramount importance. Community governance includes decisions related to trusted wallet frontends, supported blockchains, Web3 protocols, and integrated DeFi services. We emphasize active and transparent community participation in decision-making processes to ensure alignment with our collective vision. Security and risk management strategies are collaboratively developed, and our commitment to community governance drives growth, inclusivity, and adaptability within our project.


### Contribution incentives

Within the JoyID ecosystem, a diverse array of roles plays a pivotal part in shaping its evolution. These roles encompass protocol developers, application integrators, traffic providers, end-users, and more. We are committed to designing a system that **ensures each participant, particularly early contributors, receives proportional rewards commensurate with the project's expansion**. 

In this ecosystem, we prioritize fairness and inclusivity, ensuring that each participant, regardless of their role, enjoys a stake in the project's ongoing development. It is our unwavering commitment to foster an ecosystem where growth is synonymous with rewards, and early adopters are duly acknowledged for their contributions.

### Growth flywheel

In the future, all wallet interfaces, dapps, token issuers, users, different chains or layers, and more will be welcomed as active participants in the JoyID protocol ecosystem. This inclusive approach allows anyone, irrespective of their background, to join and contribute their unique abilities. Together, we will form a dynamic and collaborative ecosystem, resembling a thriving flywheel. From a technical standpoint, the benefits and growth stemming from their contributions will be meticulously quantified. These quantifiable achievements will, in turn, be converted into additional incentives that benefit all stakeholders, fostering a self-reinforcing cycle of growth and innovation. This open and participatory ethos lies at the heart of what drives the realization of this powerful flywheel, creating a space where individual talents and collective efforts converge for the greater good.


================================================
File: pages/guide/sdk.mdx
================================================
## Interact with JoyID

In order to interact with [JoyID App ↗](https://app.joy.id) we provide different packages to meet different requirements.

* `@joyid/ckb`: SDK for manipulating [Nervos CKB ↗](https://www.nervos.org/) assets, including transferring CKB/mNFT/CoTA NFT, signing Raw Transaction, etc.
* `@joyid/evm`: SDK for manipulating [EVM-compatible blockchains ↗](https://blog.thirdweb.com/evm-compatible-blockchains-and-ethereum-virtual-machine/) assets.
* `@joyid/nostr`: [NIP-07 ↗](https://github.com/nostr-protocol/nips/blob/master/07.md) implementation for [Nostr ↗](https://nostr.com/) protocol.
* `@joyid/ethers`: [Ethers.js ↗](https://docs.ethers.io/v5/) implementation for JoyID EVM SDK.
* `@joyid/wagmi`: [Wagmi ↗](https://wagmi.io/) implementation for JoyID EVM SDK.
* `@joyid/rainbowkit`: [RainbowKit ↗](https://www.rainbowkit.com/) implementation for JoyID EVM SDK.
* `@joyid/ethereum-provider`: [EIP-1193 ↗](https://eips.ethereum.org/EIPS/eip-1193) implementation for JoyID EVM SDK.

You can choose the appropriate SDK package according to your application scenario and follow the instructions in the documentation for installation and use. If you need technical support, feel free to contact us in [Discord ↗](https://discord.com/invite/77MyakRKVB).


## Installation

### `@joyid/ckb`

import { PackageManagerTabs } from '@/components/npm-tabs'

<PackageManagerTabs command="install @joyid/ckb" />

### `@joyid/evm`

<PackageManagerTabs command="install @joyid/evm" />

### `@joyid/nostr`

<PackageManagerTabs command="install @joyid/nostr" />

### `@joyid/ethers`

<PackageManagerTabs command="install @joyid/ethers" />

### `@joyid/wagmi`

<PackageManagerTabs command="install @joyid/wagmi" />

### `@joyid/rainbowkit`

<PackageManagerTabs command="install @joyid/rainbowkit" />




================================================
File: pages/guide/security-model.md
================================================
# Security Model

JoyID Wallet is a hybrid wallet, seamlessly blending the strengths of both software and hardware components. While it may not reach the absolute security level of hardware wallets, this strategic fusion empowers us to offer an accessible and reasonably secure decentralized non-custodial wallet for everyday blockchain interactions for everyone.

A key aspect that intrigues many is how we achieve Signature Transformation. Notably, Passkey lacks the common secp256k1 signing capability found in blockchain technology. The secp256k1 signing process involves the Passkey hardware device in generating the r1 signature first. Following this initial step, we conduct additional calculations in a browser environment to derive a stable entropy value from the unchanging part of the r1 algorithm. This entropy value is then used to produce the k1 keys for Ethereum and other blockchain transaction signatures. Throughout this intricate process, we prioritize two primary security concerns. Firstly, while the k1 private key necessitates user biometric authentication for each use, there exists a brief 50ms time window in the browser environment where a potential security risk may arise, hence our classification as a hybrid wallet. Secondly, the r1 to k1 conversion employs a non-standard cryptographic scheme, securely nested within the Passkey architecture. This r1 key remains hidden and is never exposed in any transaction, accessible solely through the user's own biometric information.

Under what circumstances could a hacker potentially compromise JoyID and access a user's assets? For such an occurrence, the hacker would need browser console access to the user's device and the ability to manipulate the user into biometrically authenticating an insecure transaction. The former condition is a demanding prerequisite, requiring remote access to the user's device, the opening of the console, inputting malicious scripts, or guiding the user to manually enter a lengthy malicious script into the browser's address bar. In fact, if a hacker possesses this level of capability, they could potentially manipulate nearly all assets on the user's device.

In summary:

- **Security, Hardware wallet > JoyID Wallet > Software wallet (non-custodial) > Custodial wallet**
- UX friendliness, JoyID Wallet > Custodial wallet > Software wallet (non-custodial) > Hardware wallet

We appreciate your trust and support as we endeavor to provide a secure and convenient wallet solution. Together, we will continue enhancing the security and user experience of JoyID Passkey Wallet.


================================================
File: pages/guide/applications/_meta.json
================================================
{
  "webdapp": "Web App",
  "pwa": "PWA App",
  "native": "Native App",
  "telegram": "Telegram App"
}


================================================
File: pages/guide/applications/native.md
================================================
under construction

================================================
File: pages/guide/applications/pwa.md
================================================
under construction

================================================
File: pages/guide/applications/telegram.md
================================================
# Telegram Apps Integration

## Introduction

JoyID Wallet now extends its support to Telegram, a messaging app with over 800 million global users who are known for their affinity towards cryptocurrencies and decentralized applications. Integrating with Telegram opens up a world of immense growth potential for your application.

## Challenges with Telegram

While Telegram boasts a vast user base, it comes with inherent limitations, particularly concerning wallet functionalities. Telegram's internal bots and mini-apps restrict certain client side capabilities, such as WebSocket and Passkey, which are essential for comprehensive wallet functionality.

## Innovative JoyID Approach

JoyID has devised an innovative solution that allows users to effortlessly create and utilize a non-custodial wallet within the Telegram ecosystem, bridging the mainstream blockchain landscape with the Telegram ecosystem.

![joyid sdk for telegram](./tg-sdk.png)

## Telegram Mini App Resources

Valuable assets for developers and users interested in integrating JoyID into your Telegram Mini Apps.

- [Telegram Bot](https://t.me/JoyIDBot) - A Telegram Bot to showcase how to integrate the [JoyID Passkey Wallet](https://testnet.joyid.dev/) into your telegram mini app in Testnet.
- [Development Document](https://github.com/nervina-labs/joyid-mini-app-demo#readme) - The document to show how to integrate [JoyID Passkey Wallet](https://testnet.joyid.dev/) into your telegram mini app with the [@joyid/miniapp](https://www.npmjs.com/package/@joyid/miniapp) SDK.
- [Demo Github](https://github.com/nervina-labs/joyid-mini-app-demo) - JoyID Telegram Mini App Demo repository.


================================================
File: pages/guide/applications/webdapp.md
================================================
# Web Applications Integration

## Introduction

JoyID offers two distinct methods for web applications to integrate its functionality: **redirect** and **popup**. Each method serves specific use cases, with popup offering a superior desktop experience and redirect being more suitable for mobile devices. Browser restrictions may affect popup usage, with some browsers blocking popups or permitting only one browser tab. Consequently, redirect offers better compatibility, though it presents higher development complexity and parameter-passing limitations. Web developers should choose the invocation method based on their specific use case or dynamically select between the two methods based on the user's browser environment.

### Popup Invocation

Use Case: Popup invocation is ideal for desktop applications where a seamless and responsive user experience is desired.
Benefits: Provides a superior desktop experience with smooth interactions and immediate user feedback.
Considerations: Be aware of browser popup blockers and limitations on the number of open popups.

### Redirect Invocation

Use Case: Redirect invocation is well-suited for mobile applications where user experience is prioritized.
Benefits: Ensures compatibility across various browsers, making it a reliable choice for mobile devices.
Challenges: Developers may face higher development complexity and limitations in passing parameters.

### Dynamic Selection

Scenario: For the best user experience, web applications can dynamically choose between popup and redirect methods based on the user's browser environment.

Implementation: Developers can assess the user's browser type and preferences and select the most appropriate invocation method accordingly.

## In summary

JoyID offers both "popup" and "redirect" methods for web application integration, allowing developers to choose the most suitable approach based on their specific use case. Popup offers an excellent desktop experience but may face browser limitations, while redirect ensures compatibility across browsers, making it a preferred option for mobile applications. For optimal user experience, consider dynamically selecting between the two methods based on the user's browser environment.

By providing these options, JoyID empowers developers to deliver seamless and user-friendly authentication experiences to a wide range of users.

================================================
File: pages/guide/bitcoin/_meta.json
================================================
{
  "bitcoin-sdk": "Bitcoin SDK"
}


================================================
File: pages/guide/bitcoin/bitcoin-sdk.mdx
================================================
# Bitcoin SDK

In this integration guide, we will show you how to connect JoyID, sign message, and sign transaction with `@joyid/bitcoin`. `@joyid/bitcoin` has almost idential API as [UniSat Wallet API](https://docs.unisat.io/dev/unisat-developer-service/unisat-wallet), if you are familiar with UniSat Wallet API, you can easily use `@joyid/bitcoin`.

## Installation

import { PackageManagerTabs } from '@/components/npm-tabs'

<PackageManagerTabs command="install @joyid/bitcoin" />

## Initialization

Before writing business code, you can call the initialization function `initConfig` on the project entry file:

import { FrameworkTabs } from '@/components/framework-tabs'

<FrameworkTabs>
  <FrameworkTabs.React>
```ts filename="main.tsx" /initConfig/
import React from "react";
import ReactDOM from "react-dom/client";
import { initConfig } from "@joyid/bitcoin";
import App from "./App";
import "./index.css";

initConfig({
  // your app name
  name: "JoyID demo",
  // your app logo
  logo: "https://fav.farm/🆔",
  // JoyID app URL, this is for testnet, for mainnet, use "https://app.joy.id"
  joyidAppURL: "https://testnet.joyid.dev",
  // bitcoin address type, p2wpkh or p2tr
  requestAddressType: 'p2tr',
});

ReactDOM.createRoot(document.getElementById("root") as HTMLElement).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
);
```
  </FrameworkTabs.React>
  <FrameworkTabs.Vue>
```ts filename="main.ts" /initConfig/
import { createApp } from "vue";
import "./style.css";
import App from "./App.vue";
import { initConfig } from "@joyid/nostr";

initConfig({
  // your app name
  name: "JoyID demo",
  // your app logo
  logo: "https://fav.farm/🆔",
  // JoyID app URL, this is for testnet, for mainnet, use "https://app.joy.id"
  joyidAppURL: "https://testnet.joyid.dev",
  // bitcoin address type, p2wpkh or p2tr
  requestAddressType: 'p2tr',
});

createApp(App).mount("#app");
```
  </FrameworkTabs.Vue>
</FrameworkTabs>


## Request Bitcoin account

After the initialization is completed, you can call the `requestAccounts()` function to connect to JoyID wallet, and call `getPublickey()` to get the public key of the connected account.

import { Callout } from 'nextra/components';

<Callout type="info" emoji="ℹ️">
After a successful connection, JoyID persists the connection status to the local storage. This means that if your JavaScript code is running in server side, `getPublickey()` will return null.
So you have to make sure that the code is running in the browser, or persists the connection status to the server side by your own.
</Callout>

```ts
import { requestAccounts, getPublickey } from "@joyid/bitcoin";

async function connect() {
  try {
    const [address] = await requestAccounts();
    const publicKey = getPublickey();
    console.log(address, publicKey);
  } catch (error) {
    console.error(error);
  }
}
```

## Sign message

You can call the `signMessage()` function to sign a message with the connected account. The signing type can be `ecdsa` or `bip322-simple`, default is `ecdsa`, return a signature in base64 format.

```ts
import { signMessage } from "@joyid/bitcoin";

async function sign() {
  try {
    const message = "Hello, JoyID!";
    const signature = await signMessage(message);
    console.log(signature);
  } catch (error) {
    console.error(error);
  }
}
```

## Sign transaction

You can call the `signPsbt()` function to sign a transaction with the connected account. The transaction should be a valid bitcoin transaction in hex format.

```ts
import { signPsbt } from "@joyid/bitcoin";

async function sign() {
  const psbt = "..."
  const signedPsbt = await signPsbt(psbt);
  console.log(signedPsbt);
}
```

## API Reference

- [`initConfig`](/apis/bitcoin/init-config)
- [`requestAccounts`](/apis/bitcoin/request-accounts)
- [`getPublickey`](/apis/bitcoin/get-publickey)
- [`signMessage`](/apis/bitcoin/sign-message)
- [`signPsbt`](/apis/bitcoin/sign-psbt)

## Full example

For a complete demo, you may check [GitHub ↗](https://github.com/nervina-labs/joyid-bitcoin-demo) and [JoyID Bitcoin Demo ↗](https://joyid-bitcoin-demo.vercel.app/) .



================================================
File: pages/guide/ckb/_meta.json
================================================
{
  "connect": "Connect",
  "sign-message": "Sign Message",
  "verify-message": "Verify Message",
  "sign-transaction": "Sign Transaction",
  "sign-cota": "Sign Cota NFT Transaction",
  "sign-raw-transaction": "Sign Raw Transaction",
  "smart-contract": "Smart Contract"
}


================================================
File: pages/guide/ckb/connect.mdx
================================================
import { Callout } from 'nextra/components';
import { ClickToActivate } from '@/components/click-to-activate';
import { FrameworkTabs } from '@/components/framework-tabs';

# Connect

In this guide, we will use the `@joyid/ckb` SDK `connect()` function to connect a dapp to the JoyID wallet and Nervos CKB network.

Connecting your dapp to JoyID is always the first step before you can interact with a user's Nervos CKB address. This step must be completed before any other actions can be performed.

Nervos CKB is a layer 1 public blockchain and the foundation of the Nervos Network ecosystem. For more information, please visit the [Nervos Docs](https://docs.nervos.org/) website.

## Initialization

You must always initialize the configuration as the first step. This is done using the `initConfig()` function and is normally done immediately after program entry.

<FrameworkTabs>
<FrameworkTabs.React>
```ts filename="main.tsx" /initConfig/
import React from "react";
import ReactDOM from "react-dom/client";
import { initConfig } from "@joyid/ckb";
import App from "./App";
import "./index.css";

initConfig({
  name: "JoyID demo",
  logo: "https://fav.farm/🆔",
  joyidAppURL: "https://testnet.joyid.dev",
});

ReactDOM.createRoot(document.getElementById("root") as HTMLElement).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
);
```
</FrameworkTabs.React>
<FrameworkTabs.Vue>
```ts filename="main.ts" /initConfig/
import { createApp } from "vue";
import { initConfig } from "@joyid/ckb";
import App from "./App.vue";
import "./style.css";

// Initialize JoyID configuration.
initConfig({
  name: "JoyID demo",
  logo: "https://fav.farm/🆔",
  joyidAppURL: "https://testnet.joyid.dev",
});

createApp(App).mount("#app");
```
</FrameworkTabs.Vue>
</FrameworkTabs>

### Get Started

With the configuration initialized, we're ready to begin adding code to interact with JoyID. Next we add some basic interface code.

<FrameworkTabs>
<FrameworkTabs.React>
```ts filename="App.tsx"
import * as React from 'react';
import './style.css';

export default function App() {
  return (
    <div>
      <h1>Hello JoyID!</h1>
    </div>
  );
}

```
</FrameworkTabs.React>
<FrameworkTabs.Vue>
```vue filename="App.vue"
<template>
  <div id="app">
    <h1>Hello JoyID!</h1>
  </div>
</template>

<script>
export default {
  name: 'App',
}
</script>
```
</FrameworkTabs.Vue>
</FrameworkTabs>

To connect with JoyID, we will add to our interface a `button`, and bind the `onClick` event to call the `connect()` function.

<FrameworkTabs>
<FrameworkTabs.React>
```ts filename="App.tsx" /connect/
import * as React from 'react';
import { connect } from '@joyid/ckb';
import './style.css';

export default function App() {
  const onConnect = async () => {
    try {
      const authData = await connect();
      console.log(`JoyID user info:`, authData);
    } catch (error) {
      console.error(error);
    }
  }

  return (
    <div>
      <h1>Hello JoyID!</h1>
      <button onClick={onConnect}>Connect JoyID</button>
    </div>
  );
}
```
</FrameworkTabs.React>
<FrameworkTabs.Vue>
```vue filename="App.vue" /connect/
<template>
  <div id="app">
    <h1>Hello JoyID!</h1>
    <button @click="connect">Connect JoyID</button>
  </div>
</template>

<script>
import { connect } from '@joyid/ckb';

export default {
  name: 'App',
  methods: {
    async connect() {
      try {
        const authData = await connect();
        console.log(`JoyID user info:`, authData);
      } catch (error) {
        console.error(error);
      }
    },
  },
}
</script>
```
</FrameworkTabs.Vue>
</FrameworkTabs>

After establishing a connection, the `connect()` function will return the user's JoyID information.

```json
{
    "address": "ckt1qrfrwcdnvssswdwpn3s9v8fp87emat306ctjwsm3nmlkjg8qyza2cqgqqx0r8ye9e2hqd7sc9wpxxvlul6ynzltyvqftele3",
    "ethAddress": "0x2b0586bf591CA8e96132646BD17bc86DaDc6D015",
    "keyType": "main_key",
    "alg": -7,
    "nostrPubkey": "399669b4c1802f42e4515104c7b7bcb7d1385ccc0547906cb6d5a8d0cb8d5575",
    "pubkey": "755a1bfa644d55a5914d185ea27c1f67565ccef677fbbb4750551d33f3789e89898a455599164ca2293bef50d2f5424bf97209e661a1e2f636d8e782340ccf15"
}
```

## Try it Out

<ClickToActivate>
  <FrameworkTabs>
    <FrameworkTabs.React>
      <iframe className="sandbox" src="https://stackblitz.com/edit/react-joyid-ckb-connect-hc3kwc?embed=1&file=src%2FApp.tsx&view=preview" />
    </FrameworkTabs.React>
    <FrameworkTabs.Vue>
      <iframe className="sandbox" src="https://stackblitz.com/edit/vue-joyid-ckb-connect-tnr3yj?embed=1&file=src%2FApp.vue&view=preview" />
    </FrameworkTabs.Vue>
  </FrameworkTabs>
</ClickToActivate>


================================================
File: pages/guide/ckb/sign-cota.mdx
================================================
import { Callout } from 'nextra/components';
import { ClickToActivate } from '@/components/click-to-activate';
import { FrameworkTabs } from '@/components/framework-tabs';
import Step1SaveUsersJoyidInfo from './_shared/step-1-save-users-joyid-info.mdx';
import NodeCodeDoesNotBroadcast from './_shared/note-code-does-not-broadcast.mdx';

# Sign CoTA NFT Transaction

In this guide, we will create and sign a transaction to send a CoTA NFT using the `@joyid/ckb` SDK `signCotaNFTTx()` function.

The CoTA (Compact Token Aggregator) protocol is a layer-1.5 account-based non-fungible token and data management solution on Nervos CKB. It manages large data volumes using Sparse Merkle Tree (SMT) encoding. This data is then represented on-chain via a single 32-byte hash, confirming data validity while using very little space. For instance, an unlimited amount of CoTA NFTs can be represented on-chain using just 32 bytes of data per user, leading to significant space savings and consequently lower fees. For additional information on CoTA, please visit the [CoTA Developer Portal](https://www.cotadev.io/).

To sign a transaction and send a CoTA NFT with the user's JoyID session, complete the following steps.

<Step1SaveUsersJoyidInfo />

## Step 2: Claim CoTA NFTs

In order to send a CoTA NFT, you must first have one on your account. The easiest way to get a free NFT on the testnet is to claim one from [Freeminter](https://free.nftbox.me/).

Once you have claimed an NFT, you can view them on the [JoyID Testnet](https://testnet.joyid.dev/) by using the "Collectable" tab. 

If you click on any NFT on the Collectible tab, it will take you to the NFT detail page. The below is an example of what a URL will look like for the details page of an NFT.

`https://testnet.joyid.dev/nft/ffffffff57b5554a76058639db054c2926965e98fdca66fd00000010`

Looking at the last path parameter `ffffffff57b5554a76058639db054c2926965e98fdca66fd00000010`. This is the **TokenKey**, which is the unique ID for the CoTA NFT. We will need this TokenKey to send an NFT.

## Step 3: Sign a CoTA NFT Transaction

Now that we have established a connection, claimed an NFT, and obtained the TokenKey for that NFT, we are ready to proceed. Using the `signCotaNFTTx()` function, we'll create and sign a transaction to transfer the NFT. This involves specifying the recipient's address and the amount to be sent, while the sender's address is automatically retrieved from the previously acquired JoyID information.

<Callout emoji="ℹ️" type="info">
In order to send an NFT you must have a CoTA cell to manage your NFT assets. This allows CoTA to manage the user's SMT data on-chain. The simplest way to do this is to upgrade your JoyID account. You will be prompted to do so on the first time you try to send. This only needs to be done once.
</Callout>

<NodeCodeDoesNotBroadcast />

<FrameworkTabs>
<FrameworkTabs.React>
```js filename="App.tsx" /signCotaNFTTx/
import * as React from 'react';
import { connect, signCotaNFTTx } from '@joyid/ckb';
import './style.css';

export default function App() {
  const [joyidInfo, setJoyidInfo] = React.useState(null);
  const [toAddress, setToAddress] = React.useState('ckt1qrfrwcdnvssswdwpn3s9v8fp87emat306ctjwsm3nmlkjg8qyza2cqgqqxv6drphrp47xalweq9pvr6ll3mvkj225quegpcw');
  // The TokenKey prefix `ffffffff` is optional and it is just an example, you should replace real value with your own TokenKey
  const [tokenKey, setTokenKey] = React.useState('0x003688bb1cba009d89dd3f1c8a6027a0c5851e8600000006');

  const onConnect = async () => {
    try {
      const authData = await connect();
      setJoyidInfo(authData);
    } catch (error) {
      console.error(error);
    }
  }

  const onSign = async () => {
    const signedTx = await signCotaNFTTx({
      to: toAddress,
      from: joyidInfo.address,
      tokenKey,
    });
    console.log('signedTx', signedTx);
    // You can use CKB RPC `sendTransaction` to send the `signedTx` to the blockchain.
  }
  return (
    <div>
      <h1>Hello JoyID!</h1>
      {joyidInfo ? null : <button onClick={onConnect}>Connect JoyID</button>}
      {joyidInfo ? (
        <div>
          <textarea value={toAddress} onChange={e => setToAddress(e.target.value)} />
          <textarea value={tokenKey} onChange={e => setTokenKey(e.target.value)} />
          <button onClick={onSign}>Sign</button>
        </div>
      ) : null}
    </div>
  );
}
```
</FrameworkTabs.React>
<FrameworkTabs.Vue>
```vue filename="App.vue" /signCotaNFTTx/
<template>
  <div id="app">
    <h1>Hello JoyID!</h1>
    <button @click="connect" v-if="!joyidInfo">Connect JoyID</button>
    <div v-else>
      <textarea v-model="toAddress" />
      <textarea v-model="tokenKey" />
      <button @click="sign">Sign</button>
    </div>
  </div>
</template>

<script>
import { connect, signCotaNFTTx } from '@joyid/ckb';

export default {
  name: 'App',
  data() {
    return {
      joyidInfo: null,
      toAddress: 'ckt1qrfrwcdnvssswdwpn3s9v8fp87emat306ctjwsm3nmlkjg8qyza2cqgqqxv6drphrp47xalweq9pvr6ll3mvkj225quegpcw',
      // The TokenKey prefix `ffffffff` is optional and it is just an example, you should replace real value with your own TokenKey
      tokenKey: '0x003688bb1cba009d89dd3f1c8a6027a0c5851e8600000006',
    };
  },
  methods: {
    async connect() {
      try {
        const authData = await connect();
        this.joyidInfo = authData;
      } catch (error) {
        console.error(error);
      }
    },
    async sign() {
      const signedTx = await signCotaNFTTx({
        to: this.toAddress,
        from: this.joyidInfo.address,
        tokenKey: this.tokenKey,
      });
      console.log('signedTx', signedTx);
      // You can use CKB RPC `sendTransaction` to send the `signedTx` to the blockchain.
    },
  },
}
</script>
```
</FrameworkTabs.Vue>
</FrameworkTabs>

<Callout emoji="ℹ️" type="info">
To learn more about the `signCotaNFTTx()` function, please check the [API Reference](/apis/ckb/sign-cota-nft).
</Callout>

## Try it Out

<ClickToActivate>
  <FrameworkTabs>
    <FrameworkTabs.React>
      <iframe className="sandbox" src="https://stackblitz.com/edit/react-joyid-ckb-sign-nft-tx-vrwjjv?embed=1&file=src%2FApp.tsx&view=preview" />
    </FrameworkTabs.React>
    <FrameworkTabs.Vue>
      <iframe className="sandbox" src="https://stackblitz.com/edit/vue-joyid-ckb-sign-nft-tx-zmtnc6?embed=1&file=src%2FApp.vue&view=preview" />
    </FrameworkTabs.Vue>
  </FrameworkTabs>
</ClickToActivate>


================================================
File: pages/guide/ckb/sign-message.mdx
================================================
import { Callout } from 'nextra/components';
import { ClickToActivate } from '@/components/click-to-activate';
import { FrameworkTabs } from '@/components/framework-tabs';
import CalloutChallengeVsMessage from './_shared/callout-challenge-vs-message.mdx';
import Step1SaveUsersJoyidInfo from './_shared/step-1-save-users-joyid-info.mdx';

# Sign Message

In this guide, we will use a JoyID connection to sign a message/challenge using the `@joyid/ckb` SDK `signChallenge()` function.

The most common reason for signing a message is to authorize a transaction. On CKB, the [Cell Model](https://docs.nervos.org/docs/basics/concepts/cell-model) is used for all smart contract transactions. Transactions are typically built using an SDK framework like [Lumos](https://docs.nervos.org/docs/basics/guides/SDK_examples/sdk_examples_lumos). SDKs are available for several languages including [JavaScript](https://docs.nervos.org/docs/basics/guides/SDK_examples/sdk_examples_lumos), [Rust](https://docs.nervos.org/docs/basics/guides/SDK_examples/sdk_examples_rust), [Go](https://docs.nervos.org/docs/basics/guides/SDK_examples/sdk_examples_go), and [Java](https://docs.nervos.org/docs/basics/guides/SDK_examples/sdk_examples_java). To learn how to program smart contracts using the Cell Model, please visit [CKB Academy](https://docs.nervos.org/docs/basics/guides/SDK_examples/sdk_examples_lumos).

<CalloutChallengeVsMessage />

To sign a challenge with the user's JoyID session, complete the following steps.

<Step1SaveUsersJoyidInfo />

## Step 2: Sign a Challenge

The next step after establishing a connection is to call the `signChallenge()` function. To do this, add a `button` with a `click` event. This will sign the challenge text contained in the textarea using the user's JoyID connection.

Note: In order to use the `signChallenge()` function, we must provide the address to sign with. This is why we specifically retained the user's JoyID information after establishing a connection, because it contains the user's address.

<FrameworkTabs>
<FrameworkTabs.React>
```js filename="App.tsx" /signChallenge/
import * as React from 'react';
import { connect, signChallenge } from '@joyid/ckb';
import './style.css';

export default function App() {
  const [joyidInfo, setJoyidInfo] = React.useState(null);
  const [challenge, setChallenge] = React.useState('Sign this for me');

  const onConnect = async () => {
    try {
      const authData = await connect();
      setJoyidInfo(authData);
      console.log(`JoyID user info:`, authData);
    } catch (error) {
      console.error(error);
    }
  }
  const onSign = async () => {
    const res = await signChallenge(challenge, joyidInfo.address);
    if (res) {
      alert('Sign message successful');
      console.log(`Sign message result: ${res}`);
    }
  }
  return (
    <div id="app">
      <h1>Hello JoyID!</h1>
      {joyidInfo ? null : <button onClick={onConnect}>Connect JoyID</button>}
      {joyidInfo ? (
        <div>
          <textarea value={challenge} onChange={e => setChallenge(e.target.value)} />
          <button onClick={onSign}>Sign With JoyID</button>
        </div>
      ) : null}
    </div>
  );
}
```
</FrameworkTabs.React>
<FrameworkTabs.Vue>
```vue filename="App.vue" /signChallenge/
<template>
  <div id="app">
    <h1>Hello JoyID!</h1>
    <button @click="connect" v-if="!joyidInfo">Connect JoyID</button>
    <div v-else>
      <textarea v-model="challenge" />
      <button @click="sign">Sign With JoyID</button>
    </div>
  </div>
</template>

<script>
import { connect, signChallenge } from '@joyid/ckb';

export default {
  name: 'App',
  data() {
    return {
      joyidInfo: null,
      challenge: 'Sign this for me',
    }
  },
  methods: {
    async connect() {
      try {
        const authData = await connect();
        this.joyidInfo = authData;
        console.log(`JoyID user info:`, authData);
      } catch (error) {
        console.error(error);
      }
    },
    async sign() {
      const res = await signChallenge(this.challenge, this.joyidInfo.address)
      if (res) {
        alert('Sign message successful');
        console.log(`Sign message result: ${res}`);
      }
    },
  },
}
</script>
```
</FrameworkTabs.Vue>
</FrameworkTabs>

<Callout emoji="💡">
To learn more about the `signChallenge()` function, please check the [API Reference](/apis/ckb/sign).
</Callout>

## Try it Out

<ClickToActivate>
  <FrameworkTabs>
    <FrameworkTabs.React>
      <iframe className="sandbox" src="https://stackblitz.com/edit/react-joyid-ckb-sign-msg-my8aiy?embed=1&file=src%2FApp.tsx&view=preview" />
    </FrameworkTabs.React>
    <FrameworkTabs.Vue>
      <iframe className="sandbox" src="https://stackblitz.com/edit/vue-joyid-ckb-sign-msg-uhg69m?embed=1&file=src%2FApp.vue&view=preview" />
    </FrameworkTabs.Vue>
  </FrameworkTabs>
</ClickToActivate>

================================================
File: pages/guide/ckb/sign-raw-transaction.mdx
================================================
# Sign Raw Transaction

The `@joyid/ckb` SDK provides the `signRawTransaction` function to sign CKB raw transaction with JoyID Wallet. 

But we DO NOT recommend developers directly use the `signRawTransaction` function, because the JoyID wallet cannot add extra information to the CKB transaction, such as cell deps, etc. Otherwise, it will increase the CKB transaction size, potentially leading to insufficient original CKB transaction fees and causing the transaction to fail. 

Unless you are sufficiently familiar with assembling CKB transactions with JoyID Wallet, we suggest using [lumos](https://lumos-website.vercel.app/) to assemble CKB transaction and the [JoyID Example with Lumos](https://github.com/ckb-js/lumos/tree/develop/examples/joyid) can be helpful for you.

If you are using [ckb-ccc](https://github.com/ckb-ecofund/ccc) to connect JoyID wallet, you can use [ckb-ccc/lumos-patche](https://github.com/ckb-ecofund/ccc/tree/master?tab=readme-ov-file#lumos-patches) and [lumos](https://lumos-website.vercel.app/) to build you DApps.


## SubKey unlock

If you are using the `signRawTransaction` of `@joyid/ckb` to sign CKB transaction, please remember to handle the situation of unlocking transactions with **SubKey**. You can refer to the [SubKey Docs](/apis/ckb/sign-raw-tx#unlock-with-subkey) for specific code and documentation.

Two things you should handle are:
- Fetch subkey unlock entry from CoTA aggregator and append it to the witness, reference: [SubKey Docs](/apis/ckb/sign-raw-tx#unlock-with-subkey)
- Add CoTA cell to the first place of the cellDeps, reference: [SubKey Docs](/apis/ckb/sign-raw-tx#unlock-with-subkey)

================================================
File: pages/guide/ckb/sign-transaction.mdx
================================================
import { Callout } from 'nextra/components';
import { ClickToActivate } from '@/components/click-to-activate';
import { FrameworkTabs } from '@/components/framework-tabs';
import Step1SaveUsersJoyidInfo from './_shared/step-1-save-users-joyid-info.mdx';
import NodeCodeDoesNotBroadcast from './_shared/note-code-does-not-broadcast.mdx';

# Sign Transaction

In this guide, we will create and sign a transaction to send CKB from one address to another using the `@joyid/ckb` SDK `signTransaction()` function.

To sign a transaction and send CKB with the user's JoyID session, complete the following steps.

<Step1SaveUsersJoyidInfo />

## Step 2: Create and Sign a Transaction

The next step after establishing a connection is to call the `signTransaction()` function. We add a few fields to specify the recipient's address and the amount to be sent, while the sender's address is automatically obtained from the JoyID information retrieved through the `connect()` function.

The amount of CKB to send is always specified in a unit of Shannons. One CKB is equal to 100,000,000 Shannons. If you do not have any CKB to send, you can claim some testnet CKB from the [Nervos Testnet Faucet](https://faucet.nervos.org/).

<NodeCodeDoesNotBroadcast />

<FrameworkTabs>
<FrameworkTabs.React>
```js filename="App.tsx" /signTransaction/
import * as React from 'react';
import { connect, signTransaction } from '@joyid/ckb';
import './style.css';

export default function App() {
  const [joyidInfo, setJoyidInfo] = React.useState(null);
  const [toAddress, setToAddress] = React.useState('ckt1qrfrwcdnvssswdwpn3s9v8fp87emat306ctjwsm3nmlkjg8qyza2cqgqqxv6drphrp47xalweq9pvr6ll3mvkj225quegpcw');
  const [amount, setAmount] = React.useState('100');

  const onConnect = async () => {
    try {
      const authData = await connect();
      setJoyidInfo(authData);
    } catch (error) {
      console.error(error);
    }
  }

  const onSign = async () => {
    const signedTx = await signTransaction({
      to: toAddress,
      from: joyidInfo.address,
      amount: BigInt(Number(amount) * 10 ** 8).toString(),
    });
    console.log('signedTx', signedTx);
    // You can use CKB RPC `sendTransaction` to send the `signedTx` to the blockchain.
  }
  return (
    <div>
      <h1>Hello JoyID!</h1>
      {joyidInfo ? null : <button onClick={onConnect}>Connect JoyID</button>}
      {joyidInfo ? (
        <div>
          <textarea value={toAddress} onChange={e => setToAddress(e.target.value)} />
          <textarea value={amount} onChange={e => setAmount(e.target.value)} />
          <button onClick={onSign}>Sign</button>
        </div>
      ) : null}
    </div>
  )
}
```
</FrameworkTabs.React>
<FrameworkTabs.Vue>
```vue filename="App.vue" /signTransaction/
<template>
  <div id="app">
    <h1>Hello JoyID!</h1>
    <button @click="connect" v-if="!joyidInfo">Connect JoyID</button>
    <div v-else>
      <textarea v-model="toAddress" />
      <textarea v-model="amount" />
      <button @click="sign">Sign</button>
    </div>
  </div>
</template>

<script>
import { connect, signTransaction } from '@joyid/ckb';

export default {
  name: 'App',
  data() {
    return {
      joyidInfo: null,
      toAddress: 'ckt1qrfrwcdnvssswdwpn3s9v8fp87emat306ctjwsm3nmlkjg8qyza2cqgqqxv6drphrp47xalweq9pvr6ll3mvkj225quegpcw',
      amount: '100',
    };
  },
  methods: {
    async connect() {
      try {
        const authData = await connect();
        this.joyidInfo = authData;
      } catch (error) {
        console.error(error);
      }
    },
    async sign() {
      const signedTx = await signTransaction({
        to: this.toAddress,
        from: this.joyidInfo.address,
        amount: BigInt(Number(amount) * 10 ** 8).toString(),
      });
      console.log('signedTx', signedTx);
      // You can use CKB RPC `sendTransaction` to send the `signedTx` to the blockchain.
    },
  },
}
</script>
```
</FrameworkTabs.Vue>
</FrameworkTabs>

<Callout emoji="💡">
To learn more about the `signTransaction()` function, please check the [API Reference](/apis/ckb/sign-tx).
</Callout>

## Try it Out

<ClickToActivate>
  <FrameworkTabs>
    <FrameworkTabs.React>
      <iframe className="sandbox" src="https://stackblitz.com/edit/react-joyid-ckb-sign-tx-fhq27x?embed=1&file=src%2FApp.tsx&view=preview" />
    </FrameworkTabs.React>
    <FrameworkTabs.Vue>
      <iframe className="sandbox" src="https://stackblitz.com/edit/vue-joyid-ckb-sign-tx-32ajqc?embed=1&file=src%2FApp.vue&view=preview" />
    </FrameworkTabs.Vue>
  </FrameworkTabs>
</ClickToActivate>


================================================
File: pages/guide/ckb/smart-contract.mdx
================================================
# Smart Contract

## Introduction

JoyID smart contract is based on [Nervos CKB](https://docs.nervos.org/) and provides on-chain Passkey crypto verification for JoyID wallet. JoyID smart contract is a [Lock Script](https://github.com/nervosnetwork/rfcs/blob/master/rfcs/0022-transaction-structure/0022-transaction-structure.md#lock-script) and it will success when the Passkey signature and CKB transaction are valid, otherwise, it will fail.

The JoyID smart contract has not yet undergone a security audit, so it is not open source now.

## Error Codes and Reasons

When the JoyID smart contract verification fails, you will receive an error code. This error code will indicate the cause of the error, which you can use to check and update the CKB transaction accordingly.

The following are the JoyID smart contract common error codes and their corresponding error reasons:

| Error Code |                                                       Reason                                                             |
|------------|--------------------------------------------------------------------------------------------------------------------------|
| 6          | The public key hash parsed from the witness does not match the one requested in the script.                              |
| 7          | The length of the witness is invalid                                                                                     |
| 8          | The unlock mode parsed from the witness is invalid which should be Secp256r1 main key unlock or Secp256r1 sub key unlock |
| 11         | The Secp256r1 signature verification fails, and please check the WitnessArgs.Lock of the corresponding JoyID input       |
| 12         | The calculated challenge which includes the sigHashAll message cannot be found in WebAuthn ClientData of the witness     |
| 13         | The CoTA SMT root parsed from the CoTA cell dep is invalid                                                               |
| 14         | The sub key SMT proof verification fails                                                                                 |
| 21         | The CoTA cell lock script from cell deps does not match.                                                                 |


## JoyID Smart Contract Deployment Information

JoyID smart contract has been deployed on Nervos CKB Mainnet and Testnet and the following are the deployment information:

### Mainnet Deployment

```shell
code_hash: 0xd00c84f0ec8fd441c38bc3f87a371f547190f2fcff88e642bc5bf54b9e318323
hash_type: type

tx_hash: 0xf05188e5f3a6767fc4687faf45ba5f1a6e25d3ada6129dae8722cb282f262493
index: 0x0
dep_type: dep_group
```

### Testnet Deployment

```shell
code_hash: 0xd23761b364210735c19c60561d213fb3beae2fd6172743719eff6920e020baac
hash_type: type

tx_hash: 0x4dcf3f3b09efac8995d6cbee87c5345e812d310094651e0c3d9a730f32dc9263
index: 0x0
dep_type: dep_group
```


================================================
File: pages/guide/ckb/verify-message.mdx
================================================
import { Callout } from 'nextra/components'
import { ClickToActivate } from '@/components/click-to-activate';
import { FrameworkTabs } from '@/components/framework-tabs'
import CalloutChallengeVsMessage from './_shared/callout-challenge-vs-message.mdx';

# Verify Signature

In this guide, we will verify a signature using the `@joyid/ckb` SDK `verifySignature()` function.

After signing a challenge with `signChallenge()`, a JSON object is returned which includes the properties `challenge`, `message` and `signature`. This JSON object can be used to verify the signature using `verifySignature()`.

<CalloutChallengeVsMessage />

There are two steps to verify a signature:

1. Verify the message that contains the challenge that you requested to sign.
2. Verify the signature that is signed by the credential.

```js
import { signChallenge, verifySignature } from '@joyid/ckb';

const data = await signChallenge(quest);
const result = await verifySignature(data);
alert(result); // true or false
```

## Try it Out

<ClickToActivate>
  <FrameworkTabs>
    <FrameworkTabs.React>
      <iframe className="sandbox" src="https://stackblitz.com/edit/react-joyid-ckb-sign-msg-my8aiy?embed=1&file=src%2FApp.tsx&view=preview" />
    </FrameworkTabs.React>
    <FrameworkTabs.Vue>
      <iframe className="sandbox" src="https://stackblitz.com/edit/vue-joyid-ckb-sign-msg-uhg69m?embed=1&file=src%2FApp.vue&view=preview" />
    </FrameworkTabs.Vue>
  </FrameworkTabs>
</ClickToActivate>


================================================
File: pages/guide/ckb/_shared/callout-challenge-vs-message.mdx
================================================
import { Callout } from 'nextra/components';

<Callout emoji="ℹ️" type="info">
Understanding the difference between a `challenge` and a `message`.

A `challenge` is what you as a developer need JoyID to sign.
A `message` is the piece of data that JoyID actually signs. A `message` is a combination of a `challenge` and some other data needed to complete the process, such as authenticator data, etc. The `challenge` is always included within the `message`.

For more information, you can check out the [WebAuthn Spec](https://www.w3.org/TR/webauthn-2/#sctn-op-get-assertion).
</Callout>


================================================
File: pages/guide/ckb/_shared/note-code-does-not-broadcast.mdx
================================================
Note: The code below will create a signed transaction, but it does not broadcast it to the network. To do so you must use an RPC call to a CKB node. For more information on setting up a local node or using a public community node, please visit the [Nervos Docs Site](https://docs.nervos.org/).


================================================
File: pages/guide/ckb/_shared/step-1-save-users-joyid-info.mdx
================================================
import { FrameworkTabs } from '@/components/framework-tabs';

## Step 1: Save the User's JoyID Information

In the [connect guide](/guide/ckb/connect), we established a connection with JoyID and obtained the user's JoyID information. It's essential to retain this information so it can be used in the signing process later on. There are many ways this can be done. Below, we demonstrate two common methods: using a state variable in a React component and employing the Vuex store in a Vue app.

<FrameworkTabs>
<FrameworkTabs.React>
```ts filename="App.tsx" /connect/
import * as React from 'react';
import { connect } from '@joyid/ckb';
import './style.css';

export default function App() {
  const [joyidInfo, setJoyidInfo] = React.useState(null);

  const onConnect = async () => {
    try {
      const authData = await connect();
      setJoyidInfo(authData);
      console.log(`JoyID user info:`, authData);
    } catch (error) {
      console.error(error);
    }
  }

  return (
    <div>
      <h1>Hello JoyID!</h1>
      <button onClick={onConnect}>Connect JoyID</button>
    </div>
  );
}
```
</FrameworkTabs.React>
<FrameworkTabs.Vue>
```vue filename="App.vue" /connect/
<template>
  <div id="app">
    <h1>Hello JoyID!</h1>
    <button @click="connect">Connect JoyID</button>
  </div>
</template>

<script>
import { connect } from '@joyid/ckb';

export default {
  name: 'App',
  data() {
    return {
      joyidInfo: null,
    }
  },
  methods: {
    async connect() {
      try {
        const authData = await connect();
        this.joyidInfo = authData;
        console.log(`JoyID user info:`, authData);
      } catch (error) {
        console.error(error);
      }
    },
  },
}
```
</FrameworkTabs.Vue>
</FrameworkTabs>


================================================
File: pages/guide/evm/_meta.json
================================================
{
  "connect": "Connect",
  "sign-message": "Sign Message",
  "sign-typed-data": "Sign Typed Data",
  "send-transaction": "Send Transaction",
  "manage-network": "Manage Network",
  "web2-login": "Web2 Login",
  "evm-aa": "EVM AA",
  "adapters": "Adapters"
}


================================================
File: pages/guide/evm/connect.mdx
================================================
# Connect

Connect your dapp with the JoyID which enables your dapp to interact with its users' EVM accounts. JoyID Supports any [EVM-compatible blockchains ↗](https://blog.thirdweb.com/evm-compatible-blockchains-and-ethereum-virtual-machine/), such as Ethereum, Polygon, and more.

In this integration guide, we will use `joyid/evm` SDK to connect to JoyID wallet with [Ethereum Sepolia testnet ↗](https://sepolia.etherscan.io/). `@joyid/evm` is a universal SDK, which you can pair with any Ethereum SDK you like, such as `Wagmi`, `Ethers.js`, `viem`.

## Installation

import { PackageManagerTabs } from '@/components/npm-tabs'

<PackageManagerTabs command="install @joyid/evm" />


## Initialization

Before writing business code, you can call the initialization function `initConfig` on the project entry file:

<Callout type="info">
The `joyidAppURL` parameter of `initConfig()` is the JoyID App URL that your app will connect to.
  - Testnet: https://testnet.joyid.dev
  - Mainnet: https://app.joy.id
</Callout>

import { FrameworkTabs } from '@/components/framework-tabs'

<FrameworkTabs>
  <FrameworkTabs.React>
```ts filename="main.tsx" /initConfig/
import React from "react";
import ReactDOM from "react-dom/client";
import { initConfig } from "@joyid/evm";
import App from "./App";
import "./index.css";

initConfig({
  // name of your app
  name: "JoyID demo",
  // logo of your app
  logo: "https://fav.farm/🆔",
  // JoyID app url that your app is integrated with
  joyidAppURL: "https://testnet.joyid.dev",
});
ReactDOM.createRoot(document.getElementById("root") as HTMLElement).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
);
```
  </FrameworkTabs.React>
  <FrameworkTabs.Vue>
```ts filename="main.ts" /initConfig/
import { createApp } from "vue";
import "./style.css";
import App from "./App.vue";
import { initConfig } from "@joyid/evm";

initConfig({
  // name of your app
  name: "JoyID demo",
  // logo of your app
  logo: "https://fav.farm/🆔",
  // JoyID app url that your app is integrated with
  joyidAppURL: "https://testnet.joyid.dev",
});

createApp(App).mount("#app");
```
  </FrameworkTabs.Vue>
</FrameworkTabs>

## Connect to JoyID

After initialization, you can call the `connect` function to connect to JoyID. The `connect` function returns a `Promise`, which will be resolved to a EVM address when the connection is successful.

import { Callout } from 'nextra/components'

<Callout emoji="💡">
After a successful connection, JoyID persists the connection status to the local storage.
</Callout>

<FrameworkTabs>
  <FrameworkTabs.React>
```tsx filename="App.tsx" /connect/
import { connect } from '@joyid/evm'
export default function App() {
  const [address, setAddress] = React.useState<Address | undefined>();
  const onConnect = async () => {
    try {
      const res = await connect();
      setAddress(res);
    } catch (error) {
      console.log(error);
    }
  };

  return (
    <div id="app">
      <button className="btn btn-primary" onClick={onConnect}>
        Connect JoyID
      </button>
    </div>
  );
}
```
  </FrameworkTabs.React>
  <FrameworkTabs.Vue>
```vue filename="App.vue" /connect/
<template>
  <div id="app">
    <button class="btn btn-primary" @click="onConnect">
      Connect JoyID
    </button>
  </div>
</template>

<script lang="ts">
import { ref } from "vue";
import { connect } from "@joyid/evm";

export default {
  setup() {
    const address = ref(null);

    const onConnect = async () => {
      try {
        const res = await connect();
        address.value = res;
      } catch (error) {
        console.error(error);
      }
    };

    return { address, onConnect };
  },
};
</script>
```
  </FrameworkTabs.Vue>
</FrameworkTabs>

## Disconnect

You can call the `disconnect` function to disconnect from JoyID. `disconnect` function clear the connection status from local storage.


<FrameworkTabs>
  <FrameworkTabs.React>
```tsx filename="App.tsx" /disconnect/
import { connect, disconnect } from '@joyid/evm'
export default function App() {
  const [address, setAddress] = React.useState<Address | null>(null);
  const onConnect = async () => {
    try {
      const res = await connect();
      setAddress(res);
    } catch (error) {
      console.log(error);
    }
  };

  return (
    <div id="app">
      {address ? (
        <>
          <h1 className="text-xl mb-4">{`Connected: ${address}`}</h1>
          <button
            className="btn btn-primary"
            onClick={() => {
              disconnect();
              setAddress(null);
            }}
          >
            Disconnect
          </button>
          <div className="divider" />
        </>
      ) : (
        <button className="btn btn-primary" onClick={onConnect}>
          Connect JoyID
        </button>
      )}
    </div>
  );
}
```
  </FrameworkTabs.React>
  <FrameworkTabs.Vue>
```vue filename="App.vue" /disconnect/
<template>
  <div id="app">
    <div v-if="address">
      <h1 class="text-xl mb-4">Connected: {{ address }}</h1>
      <button class="btn btn-primary" @click="logout">Disconnect</button>
      <div class="divider"></div>
    </div>
    <button v-else class="btn btn-primary" @click="onConnect">
      Connect JoyID
    </button>
  </div>
</template>

<script lang="ts">
import { ref } from "vue";
import { connect, disconnect, getConnectedAddress } from "@joyid/evm";

export default {
  setup() {
    const address = ref(null);

    const onConnect = async () => {
      try {
        const res = await connect();
        address.value = res;
      } catch (error) {
        console.error(error);
      }
    };

    const logout = () => {
      disconnect();
      address.value = null;
    };

    return { address, onConnect, logout };
  },
};
</script>
```
  </FrameworkTabs.Vue>
</FrameworkTabs>


## Get connected account

After connecting to JoyID, user may refresh the page or close the browser. You can call the `getConnectedAddress` function to get the connected account, `getConnectedAddress` function get the connected account from local storage.


<FrameworkTabs>
  <FrameworkTabs.React>
```tsx filename="App.tsx" /getConnectedAddress/
import { connect, disconnect, getConnectedAddress } from '@joyid/evm'
export default function App() {
  const [address, setAddress] = React.useState<Address | null>(getConnectedAddress());
  const onConnect = async () => {
    try {
      const res = await connect();
      setAddress(res);
    } catch (error) {
      console.log(error);
    }
  };

  return (
    <div id="app">
      {address ? (
        <>
          <h1 className="text-xl mb-4">{`Connected: ${address}`}</h1>
          <button
            className="btn btn-primary"
            onClick={() => {
              disconnect();
              setAddress(null);
            }}
          >
            Disconnect
          </button>
          <div className="divider" />
        </>
      ) : (
        <button className="btn btn-primary" onClick={onConnect}>
          Connect JoyID
        </button>
      )}
    </div>
  );
}
```
  </FrameworkTabs.React>
  <FrameworkTabs.Vue>
```vue filename="App.vue" /getConnectedAddress/
<template>
  <div id="app">
    <div v-if="address">
      <h1 class="text-xl mb-4">Connected: {{ address }}</h1>
      <button class="btn btn-primary" @click="logout">Disconnect</button>
      <div class="divider"></div>
    </div>
    <button v-else class="btn btn-primary" @click="onConnect">
      Connect JoyID
    </button>
  </div>
</template>

<script lang="ts">
import { ref } from "vue";
import { connect, disconnect, getConnectedAddress } from "@joyid/evm";

export default {
  setup() {
    const address = ref(getConnectedAddress());

    const onConnect = async () => {
      try {
        const res = await connect();
        address.value = res;
      } catch (error) {
        console.error(error);
      }
    };

    const logout = () => {
      disconnect();
      address.value = null;
    };

    return { address, onConnect, logout };
  },
};
</script>
```
  </FrameworkTabs.Vue>
</FrameworkTabs>

## API reference

- [initConfig](/apis/evm/init-config)
- [connect](/apis/evm/connect)
- [disconnect](/apis/evm/disconnect)
- [getConnectedAddress](/apis/evm/get-connected-address)

## Try it out

<FrameworkTabs>
  <FrameworkTabs.React>
    <iframe className="sandbox" src="https://codesandbox.io/p/sandbox/react-joyid-evm-send-transaction-forked-9fsjhx?file=%2Fsrc%2FApp.tsx%3A119%2C28&embed=1" ></iframe>
  </FrameworkTabs.React>
  <FrameworkTabs.Vue>
    <iframe className="sandbox" src="https://codesandbox.io/p/sandbox/vue-joyid-evm-send-transaction-forked-yymhh2?file=%2Fsrc%2FApp.vue%3A1%2C1-48%2C1&embed=1&view=preview" ></iframe>
  </FrameworkTabs.Vue>
</FrameworkTabs>


================================================
File: pages/guide/evm/evm-aa.mdx
================================================
# EVM AA(Account Abstraction)

JoyID EVM AA allow you to create EVM-compatible AA(Account Abstraction) wallets easily for your users with JoyID Passkey Wallet. You can use JoyIDSigner to generate an Ethereum provider with `@joyid/evm` SDK quickly.

[ZeroDev](https://docs.zerodev.app/) is an embedded wallet powered by account abstraction (AA) and you can use ZeroDev or other AA service providers to create AA wallets or session keys with JoyID Wallet. 

## Installation

import { PackageManagerTabs } from '@/components/npm-tabs'

<PackageManagerTabs command="install @joyid/evm" />


## Initialization

Before writing business code, you can call the initialization function `initConfig` on the project entry file:

<Callout type="info">
The `joyidAppURL` parameter of `initConfig()` is the JoyID App URL that your app will connect to.
  - Testnet: https://testnet.joyid.dev
  - Mainnet: https://app.joy.id
</Callout>

import { FrameworkTabs } from '@/components/framework-tabs'

<FrameworkTabs>
  <FrameworkTabs.React>
```ts filename="main.tsx" /initConfig/
import React from "react";
import ReactDOM from "react-dom/client";
import { initConfig } from "@joyid/evm";
import App from "./App";
import "./index.css";

initConfig({
  // name of your app
  name: "JoyID demo",
  // logo of your app
  logo: "https://fav.farm/🆔",
  // JoyID app url that your app is integrated with
  joyidAppURL: "https://testnet.joyid.dev",
});
ReactDOM.createRoot(document.getElementById("root") as HTMLElement).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
);
```
  </FrameworkTabs.React>
  <FrameworkTabs.Vue>
```ts filename="main.ts" /initConfig/
import { createApp } from "vue";
import "./style.css";
import App from "./App.vue";
import { initConfig } from "@joyid/evm";

initConfig({
  // name of your app
  name: "JoyID demo",
  // logo of your app
  logo: "https://fav.farm/🆔",
  // JoyID app url that your app is integrated with
  joyidAppURL: "https://testnet.joyid.dev",
});

createApp(App).mount("#app");
```
  </FrameworkTabs.Vue>
</FrameworkTabs>

## Connect to JoyID

After initialization, you can call the `connect` function to connect to JoyID. The `connect` function returns a `Promise`, which will be resolved to a EVM address when the connection is successful.

import { Callout } from 'nextra/components'

<Callout emoji="💡">
After a successful connection, JoyID persists the connection status to the local storage.
</Callout>

<FrameworkTabs>
  <FrameworkTabs.React>
```tsx filename="App.tsx" /connect/
import { connect } from '@joyid/evm'
export default function App() {
  const [address, setAddress] = React.useState<Address | undefined>();
  const onConnect = async () => {
    try {
      const res = await connect();
      setAddress(res);
    } catch (error) {
      console.log(error);
    }
  };

  return (
    <div id="app">
      <button className="btn btn-primary" onClick={onConnect}>
        Connect JoyID
      </button>
    </div>
  );
}
```
  </FrameworkTabs.React>
  <FrameworkTabs.Vue>
```vue filename="App.vue" /connect/
<template>
  <div id="app">
    <button class="btn btn-primary" @click="onConnect">
      Connect JoyID
    </button>
  </div>
</template>

<script lang="ts">
import { ref } from "vue";
import { connect } from "@joyid/evm";

export default {
  setup() {
    const address = ref(null);

    const onConnect = async () => {
      try {
        const res = await connect();
        address.value = res;
      } catch (error) {
        console.error(error);
      }
    };

    return { address, onConnect };
  },
};
</script>
```
  </FrameworkTabs.Vue>
</FrameworkTabs>

## Create AA wallets

You can easily create AA wallets with JoyID Ethereum address and JoyIDSigner.

<Callout emoji="💡">
Note that to using EVM AA, you need to import function from **`@joyid/evm/aa`** instead of **`@joyid/evm`**.
</Callout>

<FrameworkTabs>
  <FrameworkTabs.React>
```tsx filename="App.tsx" /connect/
import { JoyIDSigner } from "@joyid/evm/aa";
import { ECDSAProvider } from "@zerodev/sdk";
import { Hex } from "viem";

const initAAProvider = async (ethAddress: Hex) => {
  return await ECDSAProvider.init({
    projectId: ZERO_DEV_PROJECT_ID,
    owner: new JoyIDSigner(ethAddress),
  });
};

export default function App() {
  const [address, setAddress] = React.useState<Address | undefined>();
  const [aaAddress, setAaAddress] = React.useState<Address | undefined>();

  const onConnect = async () => {
    try {
      const res = await connect();
      setAddress(res);
    } catch (error) {
      console.log(error);
    }
  };
  
  useEffect(() => {
    initAAProvider(address as Hex).then(setProvider)
  }, [ethAddress]); 

  const createAAWallet = async () => {
    const aaAddr = await provider?.getAddress();
    updateAaAddress(aaAddr);
  };

  return (
    <div id="app">
      <button className="btn btn-primary" onClick={onConnect}>
        Connect JoyID
      </button>

      {address && (
        <button className="btn btn-primary" onClick={createAAWallet}>
          Create AA Account
        </button>

        {aaAddress && <div>{`AA Address: ${aaAddress}`}</div>}
      )}
    </div>
  );
}
```
  </FrameworkTabs.React>
  <FrameworkTabs.Vue>
```vue filename="App.vue" /connect/
<template>
  <div id="app">
    <button class="btn btn-primary" @click="onConnect">
      Connect JoyID
    </button>

    <div v-if="address" class="w-full">
      <button className="btn btn-primary" click="createAAWallet">
        Create AA Account
      </button>

       <div v-if="aaAddress" class="w-full">
          <span>"aaAddress"</span>
       </div>
    </div>
  </div>
</template>

<script lang="ts">
import { JoyIDSigner } from "@joyid/evm/aa";
import { ECDSAProvider } from "@zerodev/sdk";
import { Hex } from "viem";

export default {
  setup() {
    const address = ref(null);
    const provider = ref(null);
    const aaAddress = ref(null);

    const onConnect = async () => {
      try {
        const res = await connect();
        address.value = res;

        provider.value = await ECDSAProvider.init({
          projectId: ZERO_DEV_PROJECT_ID,
          owner: new JoyIDSigner(res),
        });
      } catch (error) {
        console.error(error);
      }
    };

    const createAAWallet = async () => {
      aaAddress.value = await provider.value.getAddress();
    };

    return { address, onConnect, aaAddress, createAAWallet };
  },
};
</script>
```
  </FrameworkTabs.Vue>
</FrameworkTabs>

## Try it out

For a complete demo, you may want to check [GitHub ↗](https://github.com/nervina-labs/joyid-evm-aa-demo) and [Live Demo ↗](https://joyid-evm-aa-demo.vercel.app/).


================================================
File: pages/guide/evm/manage-network.mdx
================================================
# Manage network

JoyID is an EVM compatible wallet that supports multiple networks, user or developer can add custom networks or switch to other network in JoyID.

## Add custom network

To add a custom network, you need to provide following information:

```ts
interface EvmChainParameter {
  chainId: number
  name?: string
  nativeCurrency?: {
    name: string
    symbol: string
    decimals: number
  }
  rpcUrls?: readonly string[]
  blockExplorerUrls?: string[]
}
```

Then pass the parameter to `initConfig` method:

```js
import { initConfig } from '@joyid/evm'

initConfig({
  network: {
    chainId: 128,
    name: 'Huobi ECO Chain',
    nativeCurrency: {
      name: 'Huobi ECO Chain Native Token',
      symbol: 'HT',
      decimals: 18
    },
    rpcUrls: ['https://http-mainnet.hecochain.com'],
    blockExplorerUrls: ['https://scan.hecochain.com']
  }
})
```

And when next JoyID interaction(like connect, sign message/typed data/tx) happens, a prompt will show up to ask user to approve to add the new network. If the network is added previously, the prompt will not show up.

Note that in the `EvmChainParameter`, only `chainId` is required, if other fields are not provided, JoyID will find the information from [Ethereum Chainlist](https://github.com/ethereum-lists/chains). If you want to add a network that is not in the Chainlist, or add custom RPC url, you need to provide all the information.

import { Callout } from 'nextra/components'

<Callout type="info">
If you are using our EVM SDK adapter, like `@joyid/ethers`, `@joyid/wagmi`, `@joyid/rainbowkit`, you don't need to do anything, the adapter will do it automatically.
</Callout>


## Switch network

To switch network, you need to call `initConfig` method, and pass the `chainId` of the network you want to switch to:

```js
import { initConfig } from '@joyid/evm'

initConfig({
  network: {
    // switch to Ethereum mainnet
    chainId: 1,
  }
})
```

JoyID will not show a prompt to ask user to approve the switch, but if the network is not added previously, JoyID will show a prompt to ask user to approve to add the new network.

<Callout type="info">
If you are using our EVM SDK adapter, like `@joyid/ethers`, `@joyid/wagmi`, `@joyid/rainbowkit`, you don't need to do anything, the adapter will do it automatically.
</Callout>


## Why not provide a specific API to add/switch network?

### User Experience

JoyID is a web-based wallet, which means that every time Dapp interacts with JoyID, it pops up or redirect to JoyID web page where the user performs an action, then the web page closes and Dapp gets the result of the user's action. Specifically: If Dapp needs to add a network to a new user, in a plugin-based wallet, the user needs to perform three actions:

1. Allow connection
2. Allow the network to be added
3. Allow network switching

If JoyID do the same thing, the user would have to make THREE popups or THREE redirect, which would seriously damage the user experience. So we simplify the process of adding/switching networks, only need the user to open the JoyID webpage once, to complete add network and perform authorization operations.

### Developer Experience

Most Dapps that interact with JoyID use Popup to open JoyID page, but Popup can only be triggered by real user behavior, so calling the `connect` and `switchNetwork` methods consecutively in a single function will cause the second method to fail:

```js
function onClickConnectWallet() {
  const address = await connect()
  // this won't work, browser will block the popup
  const network = await addNetwork({
    // network info
  })
}
```

If we had provided `addNetwork` or `switchNetwork` methods, the user would have needed to bind an `onClick` event for each action, which would have made the developer's code complex and would have increased the user's cost of operation.

In addition, our earlier versions of JoyID did not allow developers to add custom networks, and JoyID SDK did not provide `addNetwork` or `switchNetwork` methods. In order to be compatible with earlier versions of JoyID, we will not add these methods to increase the cost of migration for developers.

So for early developers of JoyID, you can add support for custom networks even if you don't update the JoyID SDK version.


## Try it out

You can try it out in our [JoyID EVM Demo](https://joyid-evm-demo.vercel.app/), select `BNB` or `AVAX` then connect/sign message/typed data/tx to see what happens.


================================================
File: pages/guide/evm/send-transaction.mdx
================================================
# Send Transaction

You can send a transaction to the network by calling the `sendTransaction` method. This method takes a `TransactionRequest` as a parameter.

Note that `rpcURL` field must be set in the `initConfig` method, if your connected network is not Ethereum or Polygon.


import { FrameworkTabs } from '@/components/framework-tabs'

<FrameworkTabs>
  <FrameworkTabs.React>
```tsx filename="SignMessage.tsx" /sendTransaction/
import { Address, parseEther } from 'viem'
import { sendTransaction } from '@joyid/evm';

interface Props {
  address: Address | null;
}

const SendTransaction = ({ address }: Props) => {
  const [toAddress, setToAddress] = React.useState(
    "0xA6eBeCE9938C3e1757bE3024D2296666d6F8Fc49",
  );
  const [amount, setAmount] = React.useState("0.01");
  const onSign = async () => {
    const value = parseEther(amount);
    const txhash = await sendTransaction(
      {
        to: toAddress,
        value: value.toString(),
      },
      address!,
    );
    alert(`tx hash: ${txhash}`);
  };
  return address ? (
    <div className="w-full">
      <h2 className="mb-4 text-lg text-center">Send Transaction</h2>
      <label className="label">To Address:</label>
      <input
        className="input input-bordered w-full mb-4"
        value={toAddress}
        onChange={(e) => setToAddress(e.target.value)}
      />
      <label className="label">Amount:</label>
      <input
        className="input input-bordered w-full mb-4"
        value={amount}
        onChange={(e) => setAmount(e.target.value)}
      />
      <button className="btn btn-primary" onClick={onSign}>
        Send
      </button>
      <div className="divider"></div>
    </div>
  ) : null;
};
```
  </FrameworkTabs.React>
  <FrameworkTabs.Vue>
```vue filename="SendTransaction.vue" /sendTransaction/
<template>
  <div v-if="address" class="w-full">
    <h2 class="mb-4 text-lg text-center">Send Transaction</h2>
    <label class="label">To Address:</label>
    <input class="input input-bordered w-full mb-4" v-model="toAddress" />
    <label class="label">Amount:</label>
    <input class="input input-bordered w-full mb-4" v-model="amount" />
    <button class="btn btn-primary" @click="onSign">Send</button>
    <div class="divider"></div>
  </div>
</template>

<script lang="ts">
import { ref, toRefs } from "vue";
import { parseEther } from "viem";
import { sendTransaction } from "@joyid/evm";

export default {
  props: ["address"],
  setup(props) {
    const { address } = toRefs(props);
    const toAddress = ref("0xA6eBeCE9938C3e1757bE3024D2296666d6F8Fc49");
    const amount = ref("0.01");

    const onSign = async () => {
      const value = parseEther(amount.value);
      const txhash = await sendTransaction(
        {
          to: toAddress.value,
          value: value.toString(),
        },
        address.value,
      );
      alert(`tx hash: ${txhash}`);
    };

    return { address, toAddress, amount, onSign };
  },
};
</script>

```
  </FrameworkTabs.Vue>
</FrameworkTabs>

## Sign Transaction

If you prefer to sign a transaction but not send it to the network, you can use the `signTransaction` method. `signTransaction` method takes a `TransactionRequest` as a parameter and returns a signed serialized transaction.

```tsx filename="SignTransaction.tsx" /signTransaction/
import { signTransaction } from '@joyid/evm'

function signTx(address) {
  const tx = await signTransaction(
    {
      to: '0xA6eBeCE9938C3e1757bE3024D2296666d6F8Fc49',
      value: '10000000000000000',
    },
    address,
  )
  // you can call rpc method `eth_sendRawTransaction` to send the transaction to the network:
  // await walletClient.sendRawTransaction(tx)
}
```

## API Reference

- [sendTransaction](/apis/evm/send-tx)
- [signTransaction](/apis/evm/sign-tx)

## Try it out

<FrameworkTabs>
  <FrameworkTabs.React>
    <iframe className="sandbox" src="https://codesandbox.io/p/sandbox/react-joyid-evm-send-transaction-83hjjy?file=%2Fsrc%2FApp.tsx%3A12%2C22&embed=1" ></iframe>
  </FrameworkTabs.React>
  <FrameworkTabs.Vue>
    <iframe className="sandbox" src="https://codesandbox.io/p/sandbox/vue-joyid-evm-send-transaction-8tp5dz?file=%2Fsrc%2FApp.tsx%3A12%2C22&embed=1" ></iframe>
  </FrameworkTabs.Vue>
</FrameworkTabs>


================================================
File: pages/guide/evm/sign-message.mdx
================================================
# Sign Message

JoyID implements the [EIP-191 ↗](https://eips.ethereum.org/EIPS/eip-191) standard for signing messages. This allows for a more secure way of signing messages, as it prevents the user from signing a message that they did not intend to sign.

## Sign text message

You can sign a message using the `signMessage` method. This method takes a `string` or `bytes` as a parameter and returns a hex-encoded signature.

import { FrameworkTabs } from '@/components/framework-tabs'

<FrameworkTabs>
  <FrameworkTabs.React>
```tsx filename="SignMessage.tsx" /signMessage/
import { Address } from 'viem'
import { signMessage } from '@joyid/evm';

interface Props {
  address: Address | null;
}

const SignMessage = ({ address }: Props) => {
  const [message, setMessage] = React.useState("Hello world");
  const [signature, setSignature] = React.useState<Address>("0x");
  const onSign = async () => {
    const sig = await signMessage(message, address!);
    setSignature(sig);
  };

  return address ? (
    <div className="w-full">
      <h2 className="mb-4 text-lg text-center">Sign Message</h2>
      <label className="label">Message:</label>
      <input
        className="input input-bordered w-full mb-4"
        value={message}
        onChange={(e) => setMessage(e.target.value)}
      />
      <label className="label">Signature:</label>
      <textarea
        className="textarea textarea-bordered w-full mb-4"
        placeholder="Signature"
        value={signature}
        disabled
      ></textarea>

      <button className="btn btn-primary mb-4 mr-4" onClick={onSign}>
        Sign
      </button>

      <div className="divider"></div>
    </div>
  ) : null;
};
```
  </FrameworkTabs.React>
  <FrameworkTabs.Vue>
```vue filename="SignMessage.vue" /signMessage/
<template>
  <div v-if="address" class="w-full">
    <h2 class="mb-4 text-lg text-center">Sign Message</h2>
    <label class="label">Message:</label>
    <input class="input input-bordered w-full mb-4" v-model="message" />
    <label class="label">Signature:</label>
    <textarea
      class="textarea textarea-bordered w-full mb-4"
      placeholder="Signature"
      v-model="signature"
      disabled
    ></textarea>

    <button class="btn btn-primary mb-4 mr-4" @click="onSign">Sign</button>

    <div class="divider"></div>
  </div>
</template>

<script lang="ts">
import { ref, toRefs } from "vue";
import { signMessage } from "@joyid/evm";
import { Hex } from "viem";

export default {
  props: ["address"],
  setup(props) {
    const { address } = toRefs(props);
    const message = ref("Hello world");
    const signature = ref<Hex>("0x");

    const onSign = async () => {
      const sig = await signMessage(message.value, address.value);
      signature.value = sig;
    };

    const onVerify = async () => {
      try {
        const res = await verifyMessage({
          message: message.value,
          signature: signature.value,
          address: address.value,
        });
        alert(res);
      } catch (error) {
        alert(error.message);
      }
    };

    return { address, message, signature, onSign, onVerify };
  },
};
</script>
```
  </FrameworkTabs.Vue>
</FrameworkTabs>

## Sign bytes message

Note that the `signMessage` method also accepts a `bytes` parameter. This allows you to sign any arbitrary data.  If the message is a string, it is signed as UTF-8 encoded bytes. It is not interpretted as a BytesLike; so the string "0x1234" is signed as six characters, not two bytes.

To sign that example as two bytes, the `Uint8Array` should be used (i.e. `new Uint8Array([ 0x12, 0x34 ])`).

If your message is a hex string, you should convert it to a `Uint8Array`.

```ts /signMessage/
import { toBytes } from 'viem'
import { signMessage } from '@joyid/evm'

function signHexMessage(message: string, address: Address) {
  // message is a hex string, like "0x1234"
  const bytes = toBytes(message);
  return signMessage(bytes, address);
}


function signBytesMessage(message: Uint8Array, address: Address) {
  // message is a Uint8Array, just pass it through
  return signMessage(message, address);
}
```


## Verify Message

Since the message is signed using the EIP-191 standard, it can be verified using any EIP-191 compliant library.

import { Tabs } from 'nextra/components'


<Tabs items={['Ethers.js', 'Viem']}>
  <Tabs.Tab>
```ts /verifyMessage/
import { verifyMessage } from 'ethers/lib/utils'

function verify(message: string, address: string) {
  const signature = await signMessage(message, address);
  const res = verifyMessage(message, signature);
}
```
  </Tabs.Tab>
  <Tabs.Tab>
```ts /verifyMessage/
import { verifyMessage } from 'viem'

function verify(message: string, address: string) {
  const signature = await signMessage(message, address);
  const res = verifyMessage({
    message,
    signature,
    address,
  });
}
```
  </Tabs.Tab>
</Tabs>

## API Reference

- [`signMessage`](/apis/evm/sign-message)

## Try it out

<FrameworkTabs>
  <FrameworkTabs.React>
    <iframe className="sandbox" src="https://codesandbox.io/p/sandbox/react-joyid-evm-connect-forked-cxwyrj?file=%2Fsrc%2FApp.tsx%3A12%2C22&embed=1" ></iframe>
  </FrameworkTabs.React>
  <FrameworkTabs.Vue>
    <iframe className="sandbox" src="https://codesandbox.io/p/sandbox/vue-joyid-evm-connect-forked-yf8gfm?file=%2Fsrc%2Fstyle.css%3A12%2C1-13%2C1&embed=1" ></iframe>
  </FrameworkTabs.Vue>
</FrameworkTabs>


================================================
File: pages/guide/evm/sign-typed-data.mdx
================================================
# Sign Typed data

JoyID implements the [EIP-712 ↗](https://eips.ethereum.org/EIPS/eip-712) standard for typed data signing. This allows users to sign a message that is human readable and can be verified on-chain. The `TypedData` struct is serialized and hashed to create the message that is signed.

The `TypedData` struct is defined as [`abitype` ↗](https://abitype.dev/api/types#typeddata).

## Signing

You can sign a `TypedData` struct using the `signTypedData` function. This function takes a `TypedData` struct and returns a hex-encoded signature.

import { FrameworkTabs } from '@/components/framework-tabs'

<FrameworkTabs>
  <FrameworkTabs.React>
```tsx filename="SignTypedData.tsx" /signTypedData/
import * as React from "react";
import { verifyTypedData, Hex } from "viem";
import { signTypedData } from "@joyid/evm";
import { sepolia } from "viem/chains";

const buildTypedData = (chainId: number) => {
  return {
    domain: {
      name: "Ether Mail",
      version: "1",
      chainId,
      verifyingContract: "0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC",
    },
    types: {
      Person: [
        { name: "name", type: "string" },
        { name: "wallet", type: "address" },
      ],
      Mail: [
        { name: "from", type: "Person" },
        { name: "to", type: "Person" },
        { name: "contents", type: "string" },
      ],
    },
    primaryType: "Mail",
    message: {
      from: {
        name: "Cow",
        wallet: "0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826",
      },
      to: {
        name: "Bob",
        wallet: "0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB",
      },
      contents: "Hello, Bob!",
    },
  } as const;
};

export const SignTypedData = ({ address }: { address: Hex | null }) => {
  const [signature, setSignature] = React.useState<Hex>("0x");
  const chainId = sepolia.id;
  const typedData = buildTypedData(chainId);
  const onSign = async () => {
    const sig = await signTypedData(typedData, address!);
    setSignature(sig);
  };
  const onVerify = async () => {
    try {
      const res = await verifyTypedData({
        ...typedData,
        address: address!,
        signature,
      });
      alert(res);
    } catch (error) {
      alert(error.message);
    }
  };
  return address ? (
    <div className="w-full">
      <h2 className="mb-4 text-lg text-center">Sign Type Data</h2>
      <label className="label">Signature:</label>
      <textarea
        className="textarea textarea-bordered w-full mb-4"
        placeholder="Signature"
        value={signature}
        disabled
      ></textarea>

      <button className="btn btn-primary mb-4 mr-4" onClick={onSign}>
        Sign
      </button>

      <button className="btn btn-primary btn-outline mb-4" onClick={onVerify}>
        Verify
      </button>

      <div className="divider"></div>
    </div>
  ) : null;
};

```
  </FrameworkTabs.React>
  <FrameworkTabs.Vue>
```vue filename="SignTypedData.vue" /signTypedData/
<template>
  <div v-if="address" class="w-full">
    <h2 class="mb-4 text-lg text-center">Sign Type Data</h2>
    <label class="label">Signature:</label>
    <textarea
      class="textarea textarea-bordered w-full mb-4"
      placeholder="Signature"
      v-model="signature"
      disabled
    ></textarea>

    <button class="btn btn-primary mb-4 mr-4" @click="onSign">Sign</button>

    <button class="btn btn-primary btn-outline mb-4" @click="onVerify">
      Verify
    </button>

    <div class="divider"></div>
  </div>
</template>

<script lang="ts">
import { ref, toRefs, defineComponent } from "vue";
import { sepolia } from "viem/chains";
import { signTypedData } from "@joyid/evm";
import { verifyTypedData } from "viem";

function buildTypedData(chainId: number) {
  return {
    domain: {
      name: "Ether Mail",
      version: "1",
      chainId,
      verifyingContract: "0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC",
    },
    types: {
      Person: [
        { name: "name", type: "string" },
        { name: "wallet", type: "address" },
      ],
      Mail: [
        { name: "from", type: "Person" },
        { name: "to", type: "Person" },
        { name: "contents", type: "string" },
      ],
    },
    primaryType: "Mail",
    message: {
      from: {
        name: "Cow",
        wallet: "0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826",
      },
      to: {
        name: "Bob",
        wallet: "0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB",
      },
      contents: "Hello, Bob!",
    },
  };
}

export default defineComponent({
  props: ["address"],
  setup(props) {
    const chainId = sepolia.id;
    const typedData = buildTypedData(chainId);
    const signature = ref("0x");

    const onSign = async () => {
      const sig = await signTypedData(typedData, props.address);
      signature.value = sig;
    };

    const onVerify = async () => {
      try {
        const res = await verifyTypedData({
          ...typedData,
          address: props.address,
          signature: signature.value,
        });
        alert(res);
      } catch (error) {
        alert(error.message);
      }
    };

    return { signature, onSign, onVerify };
  },
});
</script>
```
  </FrameworkTabs.Vue>
</FrameworkTabs>


## Verify Typed Data

Since the `TypedData` is signed using the EIP-712 standard, it can be verified using any EIP-712 compliant library.

import { Tabs } from 'nextra/components'


<Tabs items={['Ethers.js', 'Viem']}>
  <Tabs.Tab>
```ts /verifyTypedData/
import { verifyTypedData } from 'ethers/lib/utils'
import { signTypedData } from '@joyid/evm'

function buildTypedData(chainId: number) {
  return {
    domain: {
      name: "Ether Mail",
      version: "1",
      chainId,
      verifyingContract: "0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC",
    },
    types: {
      Person: [
        { name: "name", type: "string" },
        { name: "wallet", type: "address" },
      ],
      Mail: [
        { name: "from", type: "Person" },
        { name: "to", type: "Person" },
        { name: "contents", type: "string" },
      ],
    },
    primaryType: "Mail",
    message: {
      from: {
        name: "Cow",
        wallet: "0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826",
      },
      to: {
        name: "Bob",
        wallet: "0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB",
      },
      contents: "Hello, Bob!",
    },
  };
}

const typedData = buildTypedData(1)

function verify(address: string) {
  const signature = await signTypedData(typedData, address);
  const res = verifyTypedData(
    typedData.domain,
    typedData.types,
    typedData.message,
    signature,
  )
}
```
  </Tabs.Tab>
  <Tabs.Tab>
```ts /verifyTypedData/
import { verifyTypedData } from 'viem'
import { signTypedData } from '@joyid/evm'

function buildTypedData(chainId: number) {
  return {
    domain: {
      name: "Ether Mail",
      version: "1",
      chainId,
      verifyingContract: "0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC",
    },
    types: {
      Person: [
        { name: "name", type: "string" },
        { name: "wallet", type: "address" },
      ],
      Mail: [
        { name: "from", type: "Person" },
        { name: "to", type: "Person" },
        { name: "contents", type: "string" },
      ],
    },
    primaryType: "Mail",
    message: {
      from: {
        name: "Cow",
        wallet: "0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826",
      },
      to: {
        name: "Bob",
        wallet: "0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB",
      },
      contents: "Hello, Bob!",
    },
  };
}

const typedData = buildTypedData(1)

function verify(address: string) {
  const signature = await signTypedData(typedData, address);
  const res = verifyTypedData({
    ...typedData,
    address,
    signature,
  });
}
```
  </Tabs.Tab>
</Tabs>

## API Reference

- [`signTypedData`](/apis/evm/sign-typed-data)

## Try it out

<FrameworkTabs>
  <FrameworkTabs.React>
    <iframe className="sandbox" src="https://codesandbox.io/p/sandbox/react-joyid-evm-sign-typed-data-3xq4h8?file=%2Fsrc%2Fsign-typed-data.tsx%3A16%2C25&embed=1" ></iframe>
  </FrameworkTabs.React>
  <FrameworkTabs.Vue>
    <iframe className="sandbox" src="https://codesandbox.io/p/sandbox/vue-joyid-evm-sign-typed-data-khlyxk?file=%2Fsrc%2FApp.vue%3A16%2C1&embed=1" ></iframe>
  </FrameworkTabs.Vue>
</FrameworkTabs>


================================================
File: pages/guide/evm/web2-login.mdx
================================================
# Web2 Login

JoyID Web2 login allow you to login to your website using JoyID account. It is a simple and secure way to login to your website without the need to remember password.

## Installation

import { PackageManagerTabs } from '@/components/npm-tabs'

<PackageManagerTabs command="install @joyid/evm" />


## Initialization

Before writing business code, you can call the initialization function `initConfig` on the project entry file. `initConfig` function take a configuration object as parameter. The configuration object has the following properties:

- `backgroundImage`: Background image that will be shown on JoyID app, this parameter is followed by the [CSS background property ↗](https://developer.mozilla.org/en-US/docs/Web/CSS/background)
- `joyidAppURL`: JoyID app url that your app is integrated with

<Callout type="info">
The `joyidAppURL` parameter of `initConfig()` is the JoyID App URL that your app will connect to.
  - Testnet: https://testnet.joyid.dev
  - Mainnet: https://app.joy.id
</Callout>

import { Callout } from 'nextra/components'

<Callout emoji="💡">
Note that to using Web2 login, you need to import function from **`@joyid/evm/web2login`** instead of **`@joyid/evm`**.
</Callout>

import { FrameworkTabs } from '@/components/framework-tabs'

<FrameworkTabs>
  <FrameworkTabs.React>
```ts filename="main.tsx" /initConfig/
import React from "react";
import ReactDOM from "react-dom/client";
import { initConfig } from "@joyid/evm/web2login";
import App from "./App";
import "./index.css";

initConfig({
  // background image that will be shown on JoyID app
  // this parameter is followed by the CSS background property
  // ref: https://developer.mozilla.org/en-US/docs/Web/CSS/background
  backgroundImage: 'center center / cover no-repeat url("https://images.unsplash.com/photo-1601314167099-232775b3d6fd?q=80&w=2072&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D")',
  // JoyID app url that your app is integrated with
  joyidAppURL: "https://testnet.joyid.dev",
});
ReactDOM.createRoot(document.getElementById("root") as HTMLElement).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
);
```
  </FrameworkTabs.React>
  <FrameworkTabs.Vue>
```ts filename="main.ts" /initConfig/
import { createApp } from "vue";
import "./style.css";
import App from "./App.vue";
import { initConfig } from "@joyid/evm/web2login";

initConfig({
  // background image that will be shown on JoyID app
  // this parameter is followed by the CSS background property
  // ref: https://developer.mozilla.org/en-US/docs/Web/CSS/background
  // JoyID app url that your app is integrated with
  joyidAppURL: "https://testnet.joyid.dev",
});

createApp(App).mount("#app");
```
  </FrameworkTabs.Vue>
</FrameworkTabs>

## Connect to JoyID

After initialization, you can call the `connect` function to connect to JoyID. The `connect` function returns a `Promise`, which will be resolved to `uid` and `entropy` when the connection is successful.

-  `uid`: This is a unique identifier specific to each user.
-  `entropy`: The `entropy` value remains the same every time the user logs in.

The `connect` function takes an optional `uid` parameter. If `uid` is provided, JoyID will use this specified `uid` to sign and return the corresponding `entropy`.

Otherwise, if no `uid` is provided, JoyID will prompt the user either to create an account or to login with an existing one, then sign and returning the `entropy`.

<FrameworkTabs>
  <FrameworkTabs.React>
```tsx filename="App.tsx" /connect/
import { connect } from '@joyid/evm/web2login'
export default function App() {
  const [response, setResponse] = React.useState();
  const onConnect = async () => {
    try {
      const res = await connect(/* uid is optional */);
      setResponse(res);
    } catch (error) {
      console.log(error);
    }
  };

  return (
    <div id="app">
      <button className="btn btn-primary" onClick={onConnect}>
        Connect JoyID
      </button>
    </div>
  );
}
```
  </FrameworkTabs.React>
  <FrameworkTabs.Vue>
```vue filename="App.vue" /connect/
<template>
  <div id="app">
    <button class="btn btn-primary" @click="onConnect">
      Connect JoyID
    </button>
  </div>
</template>

<script lang="ts">
import { ref } from "vue";
import { connect } from "@joyid/evm/web2login";

export default {
  setup() {
    const response = ref(null);

    const onConnect = async () => {
      try {
        const res = await connect(/* uid is optional */);
        response.value = res;
      } catch (error) {
        console.error(error);
      }
    };

    return { response, onConnect };
  },
};
</script>
```
  </FrameworkTabs.Vue>
</FrameworkTabs>


## Try it out

For a complete demo, you may want to check [GitHub ↗](https://github.com/nervina-labs/joyid-evm-web2login-demo) and [Live Demo ↗](https://joyid-evm-web2login-demo.vercel.app/).


================================================
File: pages/guide/evm/adapters/_meta.json
================================================
{
  "wagmi": "Wagmi",
  "wagmi-v1": {
    "display": "hidden"
  },
  "rainbowkit": "RainbowKit",
  "rainbowkit-v1": {
    "display": "hidden"
  },
  "ethers": "Ethers.js",
  "ethereum-provider": "Ethereum Provider"
}


================================================
File: pages/guide/evm/adapters/ethereum-provider.mdx
================================================
# Ethereum Provider

JoyID Ethereum Provider implements [EIP-1193 ↗](https://eips.ethereum.org/EIPS/eip-1193) for JoyID, which is a standard interface for Ethereum providers. This allows JoyID to be compatible with any Ethereum provider that implements this standard.

If you want to use JoyID, but JoyID SDK does not support your library/provider for now, you can use this package to create a custom provider for JoyID.

import { Callout } from 'nextra/components'

## Installation

`@joyid/ethereum-provider` has a peer dependency on `viem`, you must have `viem` installed.

import { PackageManagerTabs } from '@/components/npm-tabs'

<PackageManagerTabs command="install @joyid/ethereum-provider viem" />

## Usage

There are a wide range of uses for the Ethereum Provider, we'll just provide some ideas, using it in a production environment requires more rigorous code than the following demo.

### Ethers.js v6 Provider

```ts
import { BrowserProvider } from 'ethers'
import { Chain } from 'viem'
import { EthereumProvider, EvmConfig } from '@joyid/ethereum-provider'

function createJoyIDProvider(chains: Chain[], config: EvmConfig) {
  const ethereum = new EthereumProvider(chains, joyidConfig)
  const provider = new BrowserProvider(ethereum)
  return provider
}
```

<Callout type="warning" emoji="⚠️">
Note that in the example above, we have `ethers` and `viem` installed as dependencies, which may hurt your bundle size.
</Callout>


### Hijack MetaMask or any Ethereum browser provider

```ts
import type { Chain } from 'viem'
import { EthereumProvider, EvmConfig } from '@joyid/ethereum-provider'

function hijackMetaMask(chains: Chain[], config: EvmConfig) {
  const ethereum = new EthereumProvider(chains, joyidConfig)
  ethereum.isMetaMask = true
  setInterval(() => {
    if (window.ethereum) {
      window.ethereum = ethereum
    }
  }, 100)
}
```



================================================
File: pages/guide/evm/adapters/ethers.mdx
================================================
# Ethers.js

[Ethers.js ↗](https://github.com/ethers-io/ethers.js) is a complete and compact library for interacting with the Ethereum Blockchain and its ecosystem. JoyID can be used with Ethers.js as a Provider or a Signer to interact with the Ethereum Blockchain by using the `@joyid/ethers` package.

import { Callout } from 'nextra/components'

<Callout type="warning" emoji="⚠️">
  `@joyid/ethers` only supports Ethers.js v5. If you are using Ethers.js v6, you may check [Ethereum Provider](/guide/evm/adapters/ethereum-provider#ethersjs-v6-provider) for more information.
</Callout>

## Installation

Since `@joyid/ethers` has a peer dependency on `ethers`, you must have `ethers` installed.


import { PackageManagerTabs } from '@/components/npm-tabs'

<PackageManagerTabs command="install @joyid/ethers ethers@5" />


## Usage

`@joyid/ethers` exports a `JoyIDProvider` and a `JoyIDSigner` that can be used with Ethers.js. `JoyIDProvider` is a subclass of [`ethers.providers.JsonRpcProvider` ↗](https://docs.ethers.org/v5/api/providers/jsonrpc-provider/) and `JoyIDSigner` is a subclass of [`ethers.Signer` ↗](https://docs.ethers.org/v5/api/signer/).

import { Steps } from 'nextra/components'


<Steps>
### Connect to JoyID

You may check the [Connect](/guide/evm/connect) for more information on how to connect to JoyID. Instead of importing `connect` from `@joyid/evm`, you should import it  directly from `@joyid/ethers`.

### Create your provider

<Callout type="info">
The `joyidAppURL` parameter is the JoyID App URL that your app will connect to.
  - Testnet: https://testnet.joyid.dev
  - Mainnet: https://app.joy.id
</Callout>

```ts filename="provider.ts"  /JoyIDProvider/
import { JoyIDProvider } from '@joyid/ethers'

export function createProvider() {
  const rpcURL = 'https://ethereum-sepolia.blockpi.network/v1/rpc/public'
  const network = {
    name: 'Sepolia',
    chainId: 11155111,
  }
  const joyidConfig = {
    rpcURL,
    network,
    // name of your app
    name: "JoyID demo",
    // logo of your app
    logo: "https://fav.farm/🆔",
    // JoyID app url that your app is integrated with
    joyidAppURL: "https://testnet.joyid.dev",
  }
  return new JoyIDProvider(
    rpcURL,
    network,
    joyidConfig
  )
}
```

### Use provider to interact with the blockchain

```ts
import { createProvider } from './provider'

// provider is a subclass of ethers.providers.JsonRpcProvider
// more information: https://docs.ethers.io/v5/api/providers/jsonrpc-provider/
const provider = createProvider()
return provider.getBalance(address)
```

### Use signer to sign message/transactions


```ts
import { createProvider } from './provider'

const provider = createProvider()
const signer = provider.getSigner()
const message = 'Hello JoyID!'
// signer is a subclass of ethers.Signer
// more information: https://docs.ethers.io/v5/api/signer/
const signature = await signer.signMessage(message)
```

</Steps>


## Caveats

Since Sign Typed Data is experimental in Ethers.js v5, you may check [Sign Typed Data](/guide/evm/sign-typed-data) for more information on how to sign typed data. Instead of importing `signTypedData` from `@joyid/evm`, you should import it  directly from `@joyid/ethers`.


## Demo

For a complete demo, you may check [GitHub ↗](https://github.com/nervina-labs/joyid-evm-demo/tree/ethers) and [JoyID Ethers.js Demo ↗](https://joyid-evm-demo-git-ethers-nervina.vercel.app/) .


================================================
File: pages/guide/evm/adapters/rainbowkit-v1.mdx
================================================
# RainbowKit

[RainbowKit ↗](https://www.rainbowkit.com/) is a React library that makes it easy to add wallet connection to your dapp. It's intuitive, responsive and customizable. JoyID can be used as a [Custom Wallet ↗](https://www.rainbowkit.com/docs/custom-wallets) for RainbowKit by using `@joyid/rainbowkit` package.

## Installation

Since `@joyid/rainbowkit` has a peer dependency on `@rainbow-me/rainbowkit`, and `@rainbow-me/rainbowkit` has a peer dependency on `viem` and `wagmi`, you must have `wagmi`, `viem` and `@rainbow-me/rainbowkit` installed.

import { PackageManagerTabs } from '@/components/npm-tabs'

<PackageManagerTabs command="install @joyid/rainbowkit@0.1.1 @rainbow-me/rainbowkit@1 wagmi@1 viem@1" />

## Usage

Use JoyID with RainbowKit is easy than you think, just need to import `JoyIdWallet` from `@joyid/rainbowkit` and pass it to `wallets` in `connectorsForWallets` function.

import { Callout } from 'nextra/components'

<Callout type="info">
The `joyidAppURL` parameter is the JoyID App URL that your app will connect to.
  - Testnet: https://testnet.joyid.dev
  - Mainnet: https://app.joy.id
</Callout>

```tsx filename="provider.tsx" /JoyIdWallet/
import { WagmiConfig, createConfig, configureChains } from 'wagmi';
import { publicProvider } from 'wagmi/providers/public';
import { sepolia, polygonMumbai } from 'wagmi/chains';
import {
    connectorsForWallets,
    RainbowKitProvider,
} from '@rainbow-me/rainbowkit';
import { JoyIdWallet } from '@joyid/rainbowkit'
import { injectedWallet, coinbaseWallet } from '@rainbow-me/rainbowkit/wallets';
import '@rainbow-me/rainbowkit/styles.css';

export const { chains, publicClient } = configureChains(
    [sepolia, polygonMumbai],
    [publicProvider()]
);

const connectors = connectorsForWallets([
    {
        groupName: 'Recommended',
        wallets: [
            JoyIdWallet({
                chains,
                options: {
                  // name of your app
                  name: "JoyID demo",
                  // logo of your app
                  logo: "https://fav.farm/🆔",
                  // JoyID app url that your app is integrated with
                  joyidAppURL: "https://testnet.joyid.dev",
                },
            }),
            injectedWallet({ chains, shimDisconnect: true }),
            coinbaseWallet({ chains, appName: 'JoyID Demo' }),
            // rainbowWallet({ chains, shimDisconnect: true }),
        ],
    },
]);

const config = createConfig({
    autoConnect: true,
    publicClient,
    connectors,
});

export const Provider: React.FC<React.PropsWithChildren> = ({ children }) => {
    return (
        <WagmiConfig config={config}>
            <RainbowKitProvider chains={chains}>{children}</RainbowKitProvider>
        </WagmiConfig>
    );
};
```

## Demo

For a complete demo, you may check [GitHub ↗](https://github.com/nervina-labs/joyid-rainbow-kit-demo) and [JoyID RainbowKit Demo ↗](https://joyid-rainbow-kit-demo.vercel.app/) .


================================================
File: pages/guide/evm/adapters/rainbowkit.mdx
================================================
# RainbowKit

[RainbowKit ↗](https://www.rainbowkit.com/) is a React library that makes it easy to add wallet connection to your dapp. It's intuitive, responsive and customizable. JoyID can be used as a [Custom Wallet ↗](https://www.rainbowkit.com/docs/custom-wallets) for RainbowKit by using `@joyid/rainbowkit` package.

import { Callout } from 'nextra/components'

## Installation

<Callout type="info">
This document is about RainbowKit V2. If you want to learn about RainbowKit V1, please check out [this document](./rainbowkit-v1).
</Callout>


Since `@joyid/rainbowkit` has a peer dependency on `@rainbow-me/rainbowkit`, and `@rainbow-me/rainbowkit` has a peer dependency on `viem` and `wagmi`, you must have `wagmi`, `viem` and `@rainbow-me/rainbowkit` installed.

import { PackageManagerTabs } from '@/components/npm-tabs'

<PackageManagerTabs command="install @joyid/rainbowkit@2 @rainbow-me/rainbowkit@2 wagmi@2 viem@2" />

With Wagmi v2, TanStack Query is now a required peer dependency.

Install it with the following command:

<PackageManagerTabs command="install @tanstack/react-query" />

## Usage

Use JoyID with RainbowKit is easy than you think, just need to import `JoyIdWallet` from `@joyid/rainbowkit` and pass it to `wallets` in `connectorsForWallets` function.


<Callout type="info">
The `joyidAppURL` parameter is the JoyID App URL that your app will connect to.
  - Testnet: https://testnet.joyid.dev
  - Mainnet: https://app.joy.id
</Callout>

```tsx filename="provider.tsx" /createJoyIdWallet/
import React from 'react'
import { http, WagmiProvider, createConfig } from 'wagmi'
import { QueryClient, QueryClientProvider } from '@tanstack/react-query'
import { sepolia, polygonAmoy, opBNBTestnet } from 'wagmi/chains'
import {
  connectorsForWallets,
  RainbowKitProvider,
} from '@rainbow-me/rainbowkit'
import { createJoyIdWallet } from '@joyid/rainbowkit'
import { injectedWallet, coinbaseWallet } from '@rainbow-me/rainbowkit/wallets'
import '@rainbow-me/rainbowkit/styles.css'

const joyidWallet = createJoyIdWallet({
  // name of your app
  name: 'JoyID Rainbowkit demo',
  // logo of your app
  logo: 'https://fav.farm/🆔',
  // JoyID app url that your app is integrated with
  joyidAppURL: 'https://testnet.joyid.dev',
})

const connectors = connectorsForWallets(
  [
    {
      groupName: 'Recommended',
      wallets: [joyidWallet, injectedWallet, coinbaseWallet],
    },
  ],
  {
    appName: 'JoyID RainbowKit demo',
    // for walletconnect
    projectId: 'YOUR_PROJECT_ID',
  }
)

const config = createConfig({
  chains: [sepolia, polygonAmoy, opBNBTestnet],
  transports: {
    [sepolia.id]: http(),
    [polygonAmoy.id]: http(),
    [opBNBTestnet.id]: http(),
  },
  connectors,
})

export const Provider: React.FC<React.PropsWithChildren<any>> = ({
  children,
}) => {
  const queryClient = new QueryClient()
  return (
    <WagmiProvider config={config}>
      <QueryClientProvider client={queryClient}>
        <RainbowKitProvider>{children}</RainbowKitProvider>
      </QueryClientProvider>
    </WagmiProvider>
  )
}
```

## Live Demo

<br />

import { Sandbox } from '@/components/sandbox'
import { useData } from 'nextra/data'

export async function getStaticProps() {
  const { promises: fs } = require('fs')
  const path = require('path')
  const filePaths = ['sandboxes/rainbowkit/App.tsx', 'sandboxes/rainbowkit/index.tsx', 'sandboxes/rainbowkit/provider.tsx', 'sandboxes/rainbowkit/typedData.tsx']
  const [appTsxFile, indexTsxFile, providerTsxFile, typedDataTsxFile] = await Promise.all(
    filePaths.map((file) => fs.readFile(path.resolve(process.cwd(), file), 'utf8'))
  )
  return {
    props: {
      ssg: {
        appTsxFile,
        indexTsxFile,
        providerTsxFile,
        typedDataTsxFile,
      }
    },
  }
}

export function ReactSandBox() {
  const { appTsxFile, indexTsxFile, providerTsxFile, typedDataTsxFile } = useData()
  return <Sandbox
    template="react"
    id="rainbowkit-demo"
    documentTitle="JoyID RainbowKit Demo"
    dependencies={{
      "@joyid/rainbowkit": "2.0.0",
      "@rainbow-me/rainbowkit": "2.1.1",
      "@tanstack/react-query": "^5.39.0",
      "viem": "2.10.11",
      "wagmi": "2.9.7",
    }}
    initConfigPackage="@joyid/rainbowkit"
    files={{
      'provider.tsx': providerTsxFile,
      'index.tsx': indexTsxFile,
      'typedData.tsx': typedDataTsxFile,
      'App.tsx': appTsxFile,
    }}
    options={{
      activeFile: 'provider.tsx'
    }}
  />
}

<ReactSandBox />


================================================
File: pages/guide/evm/adapters/wagmi-v1.mdx
================================================
# Wagmi

[Wagmi ↗](https://wagmi.sh/) is a collection of React Hooks containing everything you need to start working with Ethereum. wagmi makes it easy to "Connect Wallet," display ENS and balance information, sign messages, interact with contracts, and much more — all with caching, request deduplication, and persistence.

JoyID can be used with wagmi as a [Wagmi Connector ↗](https://wagmi.sh/core/config#connectors-optional) by using the `@joyid/wagmi` package.

## Installation

Since `@joyid/wagmi` has a peer dependency on `wagmi`, and `wagmi` has a peer dependency on `viem`, you must have `wagmi` and `viem` installed.

import { PackageManagerTabs } from '@/components/npm-tabs'

<PackageManagerTabs command="install @joyid/wagmi@0.1.0 wagmi@1 viem@1" />


## Usage

Use JoyID with Wagmi is easy than you think, just need to create a new instance of `JoyIdConnector` and pass it to `WagmiConfig` component.

import { Callout } from 'nextra/components'

<Callout type="info">
The `joyidAppURL` parameter is the JoyID App URL that your app will connect to.
  - Testnet: https://testnet.joyid.dev
  - Mainnet: https://app.joy.id
</Callout>

```tsx filename="provider.tsx" /JoyIdConnector/
import * as React from "react";
import { WagmiConfig, createConfig, configureChains } from "wagmi";
import { publicProvider } from "wagmi/providers/public";
import { sepolia, polygonMumbai } from "wagmi/chains";
import { JoyIdConnector } from "@joyid/wagmi";

export const { chains, publicClient } = configureChains(
  [sepolia, polygonMumbai],
  [publicProvider()],
);

export const joyidConnector = new JoyIdConnector({
  chains,
  options: {
    // name of your app
    name: "JoyID demo",
    // logo of your app
    logo: "https://fav.farm/🆔",
    // JoyID app url that your app is integrated with
    joyidAppURL: "https://testnet.joyid.dev",
  },
});

const config = createConfig({
  autoConnect: true,
  publicClient,
  connectors: [joyidConnector],
});

export const Provider: React.FC<React.PropsWithChildren> = ({ children }) => {
  return <WagmiConfig config={config}>{children}</WagmiConfig>;
};
```


### Try it out

{<iframe style={{ marginTop: '2rem' }} className="sandbox" src="https://codesandbox.io/p/sandbox/joyid-wagmi-demo-2y6lv4?file=%2Fsrc%2FApp.tsx%3A14%2C18&embed=1"></iframe>}


================================================
File: pages/guide/evm/adapters/wagmi.mdx
================================================
# Wagmi

[Wagmi ↗](https://wagmi.sh/) is a collection of React Hooks containing everything you need to start working with Ethereum. wagmi makes it easy to "Connect Wallet," display ENS and balance information, sign messages, interact with contracts, and much more — all with caching, request deduplication, and persistence.

JoyID can be used with wagmi as a [Wagmi Connector ↗](https://wagmi.sh/core/config#connectors-optional) by using the `@joyid/wagmi` package.

import { Callout } from 'nextra/components'

## Installation

<Callout type="info">
This document is about Wagmi V2. If you want to learn about Wagmi V1, please check out [this document](./wagmi-v1).
</Callout>

Since `@joyid/wagmi` has a peer dependency on `wagmi`, and `wagmi` has a peer dependency on `viem`, you must have `wagmi` and `viem` installed.

import { PackageManagerTabs } from '@/components/npm-tabs'

<PackageManagerTabs command="install @joyid/wagmi@2 wagmi@2 viem@2" />

With Wagmi v2, TanStack Query is now a required peer dependency.

Install it with the following command:

<PackageManagerTabs command="install @tanstack/react-query" />

## Usage

Use JoyID with Wagmi is easy than you think, just need to create a new instance of `JoyIdConnector` and pass it to `WagmiConfig` component.

<Callout type="info">
The `joyidAppURL` parameter is the JoyID App URL that your app will connect to.
  - Testnet: https://testnet.joyid.dev
  - Mainnet: https://app.joy.id
</Callout>

```tsx filename="provider.tsx" /joyidConnector/
import React from 'react'
import { http, WagmiProvider, createConfig } from 'wagmi'
import { QueryClient, QueryClientProvider } from '@tanstack/react-query'
import { sepolia } from 'wagmi/chains'
import { joyidConnector } from '@joyid/wagmi'

const config = createConfig({
  chains: [sepolia],
  transports: {
    [sepolia.id]: http(),
  },
  connectors: [
    joyidConnector({
      // name of your app
      name: 'JoyID Rainbowkit demo',
      // logo of your app
      logo: 'https://fav.farm/🆔',
      // JoyID app url that your app is integrated with
      joyidAppURL: 'https://testnet.joyid.dev',
    }),
  ],
})

export const Provider: React.FC<React.PropsWithChildren<any>> = ({
  children,
}) => {
  const queryClient = new QueryClient()
  return (
    <WagmiProvider config={config}>
      <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>
    </WagmiProvider>
  )
}
```


### Live Demo

<br />

import { Sandbox } from '@/components/sandbox'
import { useData } from 'nextra/data'

export async function getStaticProps() {
  const { promises: fs } = require('fs')
  const path = require('path')
  const filePaths = ['sandboxes/wagmi/App.tsx', 'sandboxes/wagmi/index.tsx', 'sandboxes/wagmi/provider.tsx', 'sandboxes/wagmi/typedData.tsx']
  const [appTsxFile, indexTsxFile, providerTsxFile, typedDataTsxFile] = await Promise.all(
    filePaths.map((file) => fs.readFile(path.resolve(process.cwd(), file), 'utf8'))
  )
  return {
    props: {
      ssg: {
        appTsxFile,
        indexTsxFile,
        providerTsxFile,
        typedDataTsxFile,
      }
    },
  }
}

export function ReactSandBox() {
  const { appTsxFile, indexTsxFile, providerTsxFile, typedDataTsxFile } = useData()
  return <Sandbox
    template="react"
    id="wagmi-demo"
    documentTitle="JoyID Wagmi Demo"
    dependencies={{
      "@joyid/wagmi": "2.0.0",
      "@rainbow-me/rainbowkit": "2.1.1",
      "@tanstack/react-query": "^5.39.0",
      "viem": "2.10.11",
      "wagmi": "2.9.7",
    }}
    initConfigPackage="@joyid/wagmi"
    files={{
      'provider.tsx': providerTsxFile,
      'index.tsx': indexTsxFile,
      'typedData.tsx': typedDataTsxFile,
      'App.tsx': appTsxFile,
    }}
    options={{
      activeFile: 'provider.tsx'
    }}
  />
}

<ReactSandBox />


================================================
File: pages/guide/nostr/_meta.json
================================================
{
  "nip-07": "NIP-07"
}


================================================
File: pages/guide/nostr/nip-07.mdx
================================================
## NIP-07

In this integration guide, we will use `joyid/nostr` SDK to connect to JoyID wallet with [NIP-07 ↗](https://github.com/nostr-protocol/nips/blob/master/07.md) protocol. NIP-07 is a simple protocol that allows a dapp to connect to a wallet and request a signature from the wallet.

import { Callout } from 'nextra/components'

<Callout type="error" emoji="️🚫">
JoyID has currently only implemented the basic methods of NIP-07: `getPublicKey()` and `signEvent()`. It has not yet implemented [NIP-04](https://github.com/nostr-protocol/nips/blob/master/04.md), which means that `encrypt()`, `decrypt()` cannot be used.
</Callout>

## Installation

import { PackageManagerTabs } from '@/components/npm-tabs'

<PackageManagerTabs command="install @joyid/nostr" />

## Initialization

Before writing business code, you can call the initialization function `initConfig` on the project entry file:

import { FrameworkTabs } from '@/components/framework-tabs'

<FrameworkTabs>
  <FrameworkTabs.React>
```ts filename="main.tsx" /initConfig/
import React from "react";
import ReactDOM from "react-dom/client";
import { initConfig } from "@joyid/nostr";
import App from "./App";
import "./index.css";

initConfig({
  name: "JoyID demo",
  logo: "https://fav.farm/🆔",
  joyidAppURL: "https://testnet.joyid.dev",
});

ReactDOM.createRoot(document.getElementById("root") as HTMLElement).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
);
```
  </FrameworkTabs.React>
  <FrameworkTabs.Vue>
```ts filename="main.ts" /initConfig/
import { createApp } from "vue";
import "./style.css";
import App from "./App.vue";
import { initConfig } from "@joyid/nostr";

initConfig({
  name: "JoyID demo",
  logo: "https://fav.farm/🆔",
  joyidAppURL: "https://testnet.joyid.dev",
});

createApp(App).mount("#app");
```
  </FrameworkTabs.Vue>
</FrameworkTabs>


## Get Nostr public key from JoyID

After the initialization is completed, you can call the `nostr.getPublicKey()` function to connect to JoyID wallet:

<Callout emoji="💡">
After a successful connection, JoyID persists the connection status to the local storage.
</Callout>

<FrameworkTabs>
  <FrameworkTabs.React>
```tsx filename="App.tsx" /nostr.getPublicKey/
import { nostr } from '@joyid/nostr'

export default function App() {
  const [pubkey, setPubkey] = React.useState<string | null>();
  const onConnect = async () => {
    try {
      const res = await nostr.getPublicKey();
      setPubkey(res);
    } catch (error) {
      console.log(error);
    }
  };

  return (
    <div id="app">
      <button className="btn btn-primary" onClick={onConnect}>
        Connect JoyID
      </button>
    </div>
  );
}
```
  </FrameworkTabs.React>
  <FrameworkTabs.Vue>
```vue filename="App.vue" /nostr.getPublicKey/
<template>
  <div id="app">
    <button class="btn btn-primary" @click="onConnect">Connect JoyID</button>
  </div>
</template>

<script>
import { ref } from 'vue'
import { nostr } from '@joyid/nostr'

export default {
  setup() {
    const pubkey = ref(null)

    const onConnect = async () => {
      try {
        const res = await nostr.getPublicKey();
        pubkey.value = res
      } catch (error) {
        console.log(error)
      }
    }

    return {
      pubkey,
      onConnect,
    }
  },
}
</script>
```
  </FrameworkTabs.Vue>
</FrameworkTabs>



## Logout

You can call the `logout` function to disconnect from JoyID. `logout` function clear the connection status from local storage.

<FrameworkTabs>
  <FrameworkTabs.React>
```tsx filename="App.tsx" /logout/
import { nostr, logout } from '@joyid/nostr'

export default function App() {
  const [pubkey, setPubkey] = React.useState<string | null>();
  const onConnect = async () => {
    try {
      const res = await nostr.getPublicKey();
      setPubkey(res);
    } catch (error) {
      console.log(error);
    }
  };

  return (
    <div id="app">
      {pubkey ? (
        <>
          <h1 className="text-xl mb-4">{`Connected: ${address}`}</h1>
          <button
            className="btn btn-primary"
            onClick={() => {
              logout();
              setPubkey(null);
            }}
          >
            Logout
          </button>
          <div className="divider" />
        </>
      ) : (
        <button className="btn btn-primary" onClick={onConnect}>
          Connect JoyID
        </button>
      )}
    </div>
  );
}
```
  </FrameworkTabs.React>
  <FrameworkTabs.Vue>
```vue filename="App.vue" /logout/
<template>
  <div id="app">
    <button class="btn btn-primary" v-if="!pubkey" @click="onConnect">
      Connect JoyID
    </button>
    <div v-else>
      <h1 class="text-xl mb-4">{{`Connected: ${pubkey}`}}</h1>
      <button class="btn btn-primary" @click="onLogout">Logout</button>
    </div>
  </div>
</template>

<script>
import { ref } from 'vue'
import { nostr, logout } from '@joyid/nostr'

export default {
  setup() {
    const pubkey = ref(null)

    const onConnect = async () => {
      try {
        const res = await nostr.getPublicKey();
        pubkey.value = res
      } catch (error) {
        console.log(error)
      }
    }

    const onLogout = () => {
      logout();
      pubkey.value = null;
    }

    return {
      pubkey,
      onConnect,
      onLogout,
    }
  },
}
</script>
```
  </FrameworkTabs.Vue>
</FrameworkTabs>


## Get connected pubkey

After connecting to JoyID, user may refresh the page or close the browser. You can call the `getConnectedPubkey` function to get the connected pubkey, `getConnectedPubkey` function get the connected pubkey from local storage.

<FrameworkTabs>
  <FrameworkTabs.React>
```tsx filename="App.tsx" /getConnectedPubkey/
import { nostr, logout, getConnectedPubkey } from '@joyid/nostr'
export default function App() {
  const [pubkey, setPubkey] = React.useState<string | null>(
    getConnectedPubkey(),
  );
  const onConnect = async () => {
    try {
      const res = await nostr.getPublicKey();
      setPubkey(res);
    } catch (error) {
      console.log(error);
    }
  };

  return (
    <div id="app">
      {pubkey ? (
        <>
          <h1 className="text-xl mb-4">{`Connected: ${pubkey}`}</h1>
          <button
            className="btn btn-primary"
            onClick={() => {
              logout();
              setPubkey(null);
            }}
          >
            Disconnect
          </button>
          <div className="divider" />
        </>
      ) : (
        <button className="btn btn-primary" onClick={onConnect}>
          Connect JoyID
        </button>
      )}
    </div>
  );
}
```
  </FrameworkTabs.React>
  <FrameworkTabs.Vue>
```vue filename="App.vue" /getConnectedPubkey/
<template>
  <div id="app">
    <button v-if="!pubkey" class="btn btn-primary" @click="onConnect">
      Connect JoyID
    </button>
    <div v-else>
      <h1 class="text-xl mb-4">{{`Connected: ${pubkey}`}}</h1>
      <button class="btn btn-primary" @click="onLogout">Disconnect</button>
    </div>
  </div>
</template>

<script>
import { ref, onMounted } from 'vue'
import { nostr, logout, getConnectedPubkey } from '@joyid/nostr'

export default {
  setup() {
    const pubkey = ref(getConnectedPubkey())

    const onConnect = async () => {
      try {
        const res = await nostr.getPublicKey();
        pubkey.value = res
      } catch (error) {
        console.log(error)
      }
    }

    const onLogout = () => {
      logout();
      pubkey.value = null;
    }

    return {
      pubkey,
      onConnect,
      onLogout,
    }
  },
}
</script>
```
  </FrameworkTabs.Vue>
</FrameworkTabs>

## Sign Event

After connecting to JoyID, you can call the `nostr.signEvent` function to sign the event. The `nostr.signEvent` function will open the JoyID app and wait for the user to confirm the signature.

<FrameworkTabs>
  <FrameworkTabs.React>

```tsx filename="SignEvent.tsx" /nostr.signEvent/
import { nostr, Event } from "@joyid/nostr";
import { getBlankEvent, verifySignature } from "nostr-tools";
interface Props {
  address: string | null;
}

const blankEvent = getBlankEvent() as Event<number>;

blankEvent.content = Math.random().toString();

const SignEvent = ({ address }: Props) => {
  const [event, setEvent] = React.useState<Event>(blankEvent);
  const onSign = async () => {
    const signedEvent = await nostr.signEvent(blankEvent);
    setEvent(signedEvent);
  };
  const onVerify = async () => {
    try {
      const res = verifySignature(event);
      alert(res);
    } catch (error) {
      alert(error.message);
    }
  };
  return address ? (
    <div className="w-full">
      <h2 className="mb-4 text-lg text-center">Sign Event</h2>
      <label className="label">Event:</label>
      <textarea
        className="textarea textarea-bordered w-full h-60 mb-4"
        placeholder="Signature"
        value={JSON.stringify(event, null, 4)}
        disabled
      ></textarea>

      <button className="btn btn-primary mb-4 mr-4" onClick={onSign}>
        Sign
      </button>

      <button className="btn btn-primary btn-outline mb-4" onClick={onVerify}>
        Verify
      </button>

      <div className="divider"></div>
    </div>
  ) : null;
};
```
  </FrameworkTabs.React>
  <FrameworkTabs.Vue>
```vue filename="SignEvent.vue" /nostr.signEvent/
<template>
  <div v-if="address" class="w-full">
    <h2 class="mb-4 text-lg text-center">Sign Event</h2>
    <label class="label">Event:</label>
    <textarea class="textarea textarea-bordered w-full h-60 mb-4" placeholder="Signature" v-model="event" disabled></textarea>
    <button class="btn btn-primary mb-4 mr-4" @click="onSign">Sign</button>
    <button class="btn btn-primary btn-outline mb-4" @click="onVerify">Verify</button>

    <div class="divider"></div>
  </div>
</template>

<script lang="ts">
import { ref } from 'vue'
import { nostr, Event } from '@joyid/nostr'
import { getBlankEvent, verifySignature } from 'nostr-tools'

const blankEvent = getBlankEvent() as Event<number>;
blankEvent.content = Math.random().toString();

export default {
  props: ["address"],
  setup() {
    const event = ref(blankEvent);

    const onSign = async () => {
      const signedEvent = await nostr.signEvent(blankEvent);
      event.value = signedEvent;
    };

    const onVerify = async () => {
      try {
        const res = verifySignature(event.value);
        alert(res);
      } catch (error) {
        alert(error.message);
      }
    };

    return {
      event,
      onSign,
      onVerify,
    };
  },
}
</script>
```
  </FrameworkTabs.Vue>
</FrameworkTabs>


## Try it out

import { Sandbox } from '@/components/sandbox'
import { useData } from 'nextra/data'

export async function getStaticProps() {
  const { promises: fs } = require('fs')
  const path = require('path')
  const filePaths = ['sandboxes/nostr/App.tsx', 'sandboxes/nostr/SignEvent.vue', 'sandboxes/nostr/App.vue']
  const [appTsxFile, signEventVueFile, appVueFile] = await Promise.all(
    filePaths.map((file) => fs.readFile(path.resolve(process.cwd(), file), 'utf8'))
  )
  return {
    props: {
      ssg: {
        appTsxFile,
        signEventVueFile,
        appVueFile,
      }
    },
  }
}

export function ReactSandBox() {
  const { appTsxFile } = useData()
  return <Sandbox
    template="react"
    dependencies={{
      "@joyid/nostr": "0.1.2",
      "nostr-tools": "1.17.0",
    }}
    initConfigPackage="@joyid/nostr"
    files={{
      'App.tsx': appTsxFile,
    }}
  />
}

export function VueSandBox() {
  const { appVueFile, signEventVueFile } = useData()
  return <Sandbox
    template="vue"
    dependencies={{
      "@joyid/nostr": "0.1.2",
      "nostr-tools": "1.17.0",
    }}
    initConfigPackage="@joyid/nostr"
    files={{
      'src/App.vue': appVueFile,
      'src/SignEvent.vue': signEventVueFile,
    }}
  />
}

<FrameworkTabs>
  <FrameworkTabs.React>
    <ReactSandBox />
  </FrameworkTabs.React>
  <FrameworkTabs.Vue>
    <VueSandBox />
  </FrameworkTabs.Vue>
</FrameworkTabs>



================================================
File: sandboxes/package.json
================================================
{
  "name": "sandboxes",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@joyid/nostr": "^0.1.2",
    "@joyid/rainbowkit": "2.0.0-alpha.0",
    "@joyid/wagmi": "2.0.0-alpha.0",
    "@rainbow-me/rainbowkit": "2.1.1",
    "@tanstack/react-query": "^5.39.0",
    "nostr-tools": "1.17.0",
    "react": "^18.3.1",
    "viem": "2.10.11",
    "vue": "^3.4.27",
    "wagmi": "2.9.7"
  }
}


================================================
File: sandboxes/pnpm-lock.yaml
================================================
lockfileVersion: '6.1'

settings:
  autoInstallPeers: true
  excludeLinksFromLockfile: false

dependencies:
  '@joyid/nostr':
    specifier: ^0.1.2
    version: 0.1.2
  '@joyid/rainbowkit':
    specifier: 2.0.0-alpha.0
    version: 2.0.0-alpha.0(@rainbow-me/rainbowkit@2.1.1)(viem@2.10.11)(wagmi@2.9.7)
  '@joyid/wagmi':
    specifier: 2.0.0-alpha.0
    version: 2.0.0-alpha.0(viem@2.10.11)(wagmi@2.9.7)
  '@rainbow-me/rainbowkit':
    specifier: 2.1.1
    version: 2.1.1(@tanstack/react-query@5.40.0)(react-dom@18.3.1)(react@18.3.1)(viem@2.10.11)(wagmi@2.9.7)
  '@tanstack/react-query':
    specifier: ^5.39.0
    version: 5.40.0(react@18.3.1)
  nostr-tools:
    specifier: 1.17.0
    version: 1.17.0
  react:
    specifier: ^18.3.1
    version: 18.3.1
  viem:
    specifier: 2.10.11
    version: 2.10.11
  vue:
    specifier: ^3.4.27
    version: 3.4.27
  wagmi:
    specifier: 2.9.7
    version: 2.9.7(@tanstack/react-query@5.40.0)(react-dom@18.3.1)(react-i18next@13.5.0)(react-native@0.74.1)(react@18.3.1)(viem@2.10.11)

packages:

  /@adraffy/ens-normalize@1.10.0:
    resolution: {integrity: sha512-nA9XHtlAkYfJxY7bce8DcN7eKxWWCWkU+1GR9d+U6MbNpfwQp8TI7vqOsBsMcHoT4mBu2kypKoSKnghEzOOq5Q==}
    dev: false

  /@ampproject/remapping@2.3.0:
    resolution: {integrity: sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==}
    engines: {node: '>=6.0.0'}
    dependencies:
      '@jridgewell/gen-mapping': 0.3.5
      '@jridgewell/trace-mapping': 0.3.25
    dev: false

  /@babel/code-frame@7.24.6:
    resolution: {integrity: sha512-ZJhac6FkEd1yhG2AHOmfcXG4ceoLltoCVJjN5XsWN9BifBQr+cHJbWi0h68HZuSORq+3WtJ2z0hwF2NG1b5kcA==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@babel/highlight': 7.24.6
      picocolors: 1.0.1
    dev: false

  /@babel/compat-data@7.24.6:
    resolution: {integrity: sha512-aC2DGhBq5eEdyXWqrDInSqQjO0k8xtPRf5YylULqx8MCd6jBtzqfta/3ETMRpuKIc5hyswfO80ObyA1MvkCcUQ==}
    engines: {node: '>=6.9.0'}
    dev: false

  /@babel/core@7.24.6:
    resolution: {integrity: sha512-qAHSfAdVyFmIvl0VHELib8xar7ONuSHrE2hLnsaWkYNTI68dmi1x8GYDhJjMI/e7XWal9QBlZkwbOnkcw7Z8gQ==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@ampproject/remapping': 2.3.0
      '@babel/code-frame': 7.24.6
      '@babel/generator': 7.24.6
      '@babel/helper-compilation-targets': 7.24.6
      '@babel/helper-module-transforms': 7.24.6(@babel/core@7.24.6)
      '@babel/helpers': 7.24.6
      '@babel/parser': 7.24.6
      '@babel/template': 7.24.6
      '@babel/traverse': 7.24.6
      '@babel/types': 7.24.6
      convert-source-map: 2.0.0
      debug: 4.3.4
      gensync: 1.0.0-beta.2
      json5: 2.2.3
      semver: 6.3.1
    transitivePeerDependencies:
      - supports-color
    dev: false

  /@babel/generator@7.24.6:
    resolution: {integrity: sha512-S7m4eNa6YAPJRHmKsLHIDJhNAGNKoWNiWefz1MBbpnt8g9lvMDl1hir4P9bo/57bQEmuwEhnRU/AMWsD0G/Fbg==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@babel/types': 7.24.6
      '@jridgewell/gen-mapping': 0.3.5
      '@jridgewell/trace-mapping': 0.3.25
      jsesc: 2.5.2
    dev: false

  /@babel/helper-annotate-as-pure@7.24.6:
    resolution: {integrity: sha512-DitEzDfOMnd13kZnDqns1ccmftwJTS9DMkyn9pYTxulS7bZxUxpMly3Nf23QQ6NwA4UB8lAqjbqWtyvElEMAkg==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@babel/types': 7.24.6
    dev: false

  /@babel/helper-builder-binary-assignment-operator-visitor@7.24.6:
    resolution: {integrity: sha512-+wnfqc5uHiMYtvRX7qu80Toef8BXeh4HHR1SPeonGb1SKPniNEd4a/nlaJJMv/OIEYvIVavvo0yR7u10Gqz0Iw==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@babel/types': 7.24.6
    dev: false

  /@babel/helper-compilation-targets@7.24.6:
    resolution: {integrity: sha512-VZQ57UsDGlX/5fFA7GkVPplZhHsVc+vuErWgdOiysI9Ksnw0Pbbd6pnPiR/mmJyKHgyIW0c7KT32gmhiF+cirg==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@babel/compat-data': 7.24.6
      '@babel/helper-validator-option': 7.24.6
      browserslist: 4.23.0
      lru-cache: 5.1.1
      semver: 6.3.1
    dev: false

  /@babel/helper-create-class-features-plugin@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-djsosdPJVZE6Vsw3kk7IPRWethP94WHGOhQTc67SNXE0ZzMhHgALw8iGmYS0TD1bbMM0VDROy43od7/hN6WYcA==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-annotate-as-pure': 7.24.6
      '@babel/helper-environment-visitor': 7.24.6
      '@babel/helper-function-name': 7.24.6
      '@babel/helper-member-expression-to-functions': 7.24.6
      '@babel/helper-optimise-call-expression': 7.24.6
      '@babel/helper-replace-supers': 7.24.6(@babel/core@7.24.6)
      '@babel/helper-skip-transparent-expression-wrappers': 7.24.6
      '@babel/helper-split-export-declaration': 7.24.6
      semver: 6.3.1
    dev: false

  /@babel/helper-create-regexp-features-plugin@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-C875lFBIWWwyv6MHZUG9HmRrlTDgOsLWZfYR0nW69gaKJNe0/Mpxx5r0EID2ZdHQkdUmQo2t0uNckTL08/1BgA==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-annotate-as-pure': 7.24.6
      regexpu-core: 5.3.2
      semver: 6.3.1
    dev: false

  /@babel/helper-define-polyfill-provider@0.6.2(@babel/core@7.24.6):
    resolution: {integrity: sha512-LV76g+C502biUK6AyZ3LK10vDpDyCzZnhZFXkH1L75zHPj68+qc8Zfpx2th+gzwA2MzyK+1g/3EPl62yFnVttQ==}
    peerDependencies:
      '@babel/core': ^7.4.0 || ^8.0.0-0 <8.0.0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-compilation-targets': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
      debug: 4.3.4
      lodash.debounce: 4.0.8
      resolve: 1.22.8
    transitivePeerDependencies:
      - supports-color
    dev: false

  /@babel/helper-environment-visitor@7.24.6:
    resolution: {integrity: sha512-Y50Cg3k0LKLMjxdPjIl40SdJgMB85iXn27Vk/qbHZCFx/o5XO3PSnpi675h1KEmmDb6OFArfd5SCQEQ5Q4H88g==}
    engines: {node: '>=6.9.0'}
    dev: false

  /@babel/helper-function-name@7.24.6:
    resolution: {integrity: sha512-xpeLqeeRkbxhnYimfr2PC+iA0Q7ljX/d1eZ9/inYbmfG2jpl8Lu3DyXvpOAnrS5kxkfOWJjioIMQsaMBXFI05w==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@babel/template': 7.24.6
      '@babel/types': 7.24.6
    dev: false

  /@babel/helper-hoist-variables@7.24.6:
    resolution: {integrity: sha512-SF/EMrC3OD7dSta1bLJIlrsVxwtd0UpjRJqLno6125epQMJ/kyFmpTT4pbvPbdQHzCHg+biQ7Syo8lnDtbR+uA==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@babel/types': 7.24.6
    dev: false

  /@babel/helper-member-expression-to-functions@7.24.6:
    resolution: {integrity: sha512-OTsCufZTxDUsv2/eDXanw/mUZHWOxSbEmC3pP8cgjcy5rgeVPWWMStnv274DV60JtHxTk0adT0QrCzC4M9NWGg==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@babel/types': 7.24.6
    dev: false

  /@babel/helper-module-imports@7.24.6:
    resolution: {integrity: sha512-a26dmxFJBF62rRO9mmpgrfTLsAuyHk4e1hKTUkD/fcMfynt8gvEKwQPQDVxWhca8dHoDck+55DFt42zV0QMw5g==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@babel/types': 7.24.6
    dev: false

  /@babel/helper-module-transforms@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-Y/YMPm83mV2HJTbX1Qh2sjgjqcacvOlhbzdCCsSlblOKjSYmQqEbO6rUniWQyRo9ncyfjT8hnUjlG06RXDEmcA==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-environment-visitor': 7.24.6
      '@babel/helper-module-imports': 7.24.6
      '@babel/helper-simple-access': 7.24.6
      '@babel/helper-split-export-declaration': 7.24.6
      '@babel/helper-validator-identifier': 7.24.6
    dev: false

  /@babel/helper-optimise-call-expression@7.24.6:
    resolution: {integrity: sha512-3SFDJRbx7KuPRl8XDUr8O7GAEB8iGyWPjLKJh/ywP/Iy9WOmEfMrsWbaZpvBu2HSYn4KQygIsz0O7m8y10ncMA==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@babel/types': 7.24.6
    dev: false

  /@babel/helper-plugin-utils@7.24.6:
    resolution: {integrity: sha512-MZG/JcWfxybKwsA9N9PmtF2lOSFSEMVCpIRrbxccZFLJPrJciJdG/UhSh5W96GEteJI2ARqm5UAHxISwRDLSNg==}
    engines: {node: '>=6.9.0'}
    dev: false

  /@babel/helper-remap-async-to-generator@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-1Qursq9ArRZPAMOZf/nuzVW8HgJLkTB9y9LfP4lW2MVp4e9WkLJDovfKBxoDcCk6VuzIxyqWHyBoaCtSRP10yg==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-annotate-as-pure': 7.24.6
      '@babel/helper-environment-visitor': 7.24.6
      '@babel/helper-wrap-function': 7.24.6
    dev: false

  /@babel/helper-replace-supers@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-mRhfPwDqDpba8o1F8ESxsEkJMQkUF8ZIWrAc0FtWhxnjfextxMWxr22RtFizxxSYLjVHDeMgVsRq8BBZR2ikJQ==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-environment-visitor': 7.24.6
      '@babel/helper-member-expression-to-functions': 7.24.6
      '@babel/helper-optimise-call-expression': 7.24.6
    dev: false

  /@babel/helper-simple-access@7.24.6:
    resolution: {integrity: sha512-nZzcMMD4ZhmB35MOOzQuiGO5RzL6tJbsT37Zx8M5L/i9KSrukGXWTjLe1knIbb/RmxoJE9GON9soq0c0VEMM5g==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@babel/types': 7.24.6
    dev: false

  /@babel/helper-skip-transparent-expression-wrappers@7.24.6:
    resolution: {integrity: sha512-jhbbkK3IUKc4T43WadP96a27oYti9gEf1LdyGSP2rHGH77kwLwfhO7TgwnWvxxQVmke0ImmCSS47vcuxEMGD3Q==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@babel/types': 7.24.6
    dev: false

  /@babel/helper-split-export-declaration@7.24.6:
    resolution: {integrity: sha512-CvLSkwXGWnYlF9+J3iZUvwgAxKiYzK3BWuo+mLzD/MDGOZDj7Gq8+hqaOkMxmJwmlv0iu86uH5fdADd9Hxkymw==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@babel/types': 7.24.6
    dev: false

  /@babel/helper-string-parser@7.24.6:
    resolution: {integrity: sha512-WdJjwMEkmBicq5T9fm/cHND3+UlFa2Yj8ALLgmoSQAJZysYbBjw+azChSGPN4DSPLXOcooGRvDwZWMcF/mLO2Q==}
    engines: {node: '>=6.9.0'}
    dev: false

  /@babel/helper-validator-identifier@7.24.6:
    resolution: {integrity: sha512-4yA7s865JHaqUdRbnaxarZREuPTHrjpDT+pXoAZ1yhyo6uFnIEpS8VMu16siFOHDpZNKYv5BObhsB//ycbICyw==}
    engines: {node: '>=6.9.0'}
    dev: false

  /@babel/helper-validator-option@7.24.6:
    resolution: {integrity: sha512-Jktc8KkF3zIkePb48QO+IapbXlSapOW9S+ogZZkcO6bABgYAxtZcjZ/O005111YLf+j4M84uEgwYoidDkXbCkQ==}
    engines: {node: '>=6.9.0'}
    dev: false

  /@babel/helper-wrap-function@7.24.6:
    resolution: {integrity: sha512-f1JLrlw/jbiNfxvdrfBgio/gRBk3yTAEJWirpAkiJG2Hb22E7cEYKHWo0dFPTv/niPovzIdPdEDetrv6tC6gPQ==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@babel/helper-function-name': 7.24.6
      '@babel/template': 7.24.6
      '@babel/types': 7.24.6
    dev: false

  /@babel/helpers@7.24.6:
    resolution: {integrity: sha512-V2PI+NqnyFu1i0GyTd/O/cTpxzQCYioSkUIRmgo7gFEHKKCg5w46+r/A6WeUR1+P3TeQ49dspGPNd/E3n9AnnA==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@babel/template': 7.24.6
      '@babel/types': 7.24.6
    dev: false

  /@babel/highlight@7.24.6:
    resolution: {integrity: sha512-2YnuOp4HAk2BsBrJJvYCbItHx0zWscI1C3zgWkz+wDyD9I7GIVrfnLyrR4Y1VR+7p+chAEcrgRQYZAGIKMV7vQ==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@babel/helper-validator-identifier': 7.24.6
      chalk: 2.4.2
      js-tokens: 4.0.0
      picocolors: 1.0.1
    dev: false

  /@babel/parser@7.24.6:
    resolution: {integrity: sha512-eNZXdfU35nJC2h24RznROuOpO94h6x8sg9ju0tT9biNtLZ2vuP8SduLqqV+/8+cebSLV9SJEAN5Z3zQbJG/M+Q==}
    engines: {node: '>=6.0.0'}
    hasBin: true
    dependencies:
      '@babel/types': 7.24.6
    dev: false

  /@babel/plugin-bugfix-firefox-class-in-computed-class-key@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-bYndrJ6Ph6Ar+GaB5VAc0JPoP80bQCm4qon6JEzXfRl5QZyQ8Ur1K6k7htxWmPA5z+k7JQvaMUrtXlqclWYzKw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-environment-visitor': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-iVuhb6poq5ikqRq2XWU6OQ+R5o9wF+r/or9CeUyovgptz0UlnK4/seOQ1Istu/XybYjAhQv1FRSSfHHufIku5Q==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-c8TER5xMDYzzFcGqOEp9l4hvB7dcbhcGjcLVwxWfe4P5DOafdwjsBJZKsmv+o3aXh7NhopvayQIovHrh2zSRUQ==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.13.0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
      '@babel/helper-skip-transparent-expression-wrappers': 7.24.6
      '@babel/plugin-transform-optional-chaining': 7.24.6(@babel/core@7.24.6)
    dev: false

  /@babel/plugin-bugfix-v8-static-class-fields-redefine-readonly@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-z8zEjYmwBUHN/pCF3NuWBhHQjJCrd33qAi8MgANfMrAvn72k2cImT8VjK9LJFu4ysOLJqhfkYYb3MvwANRUNZQ==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-environment-visitor': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-proposal-async-generator-functions@7.20.7(@babel/core@7.24.6):
    resolution: {integrity: sha512-xMbiLsn/8RK7Wq7VeVytytS2L6qE69bXPB10YCmMdDZbKF4okCqY74pI/jJQ/8U0b/F6NrT2+14b8/P9/3AMGA==}
    engines: {node: '>=6.9.0'}
    deprecated: This proposal has been merged to the ECMAScript standard and thus this plugin is no longer maintained. Please use @babel/plugin-transform-async-generator-functions instead.
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-environment-visitor': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
      '@babel/helper-remap-async-to-generator': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-syntax-async-generators': 7.8.4(@babel/core@7.24.6)
    dev: false

  /@babel/plugin-proposal-class-properties@7.18.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-cumfXOF0+nzZrrN8Rf0t7M+tF6sZc7vhQwYQck9q1/5w2OExlD+b4v4RpMJFaV1Z7WcDRgO6FqvxqxGlwo+RHQ==}
    engines: {node: '>=6.9.0'}
    deprecated: This proposal has been merged to the ECMAScript standard and thus this plugin is no longer maintained. Please use @babel/plugin-transform-class-properties instead.
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-create-class-features-plugin': 7.24.6(@babel/core@7.24.6)
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-proposal-export-default-from@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-qPPDbYs9j5IArMFqYi85QxatHURSzRyskKpIbjrVoVglDuGdhu1s7UTCmXvP/qR2aHa3EdJ8X3iZvQAHjmdHUw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
      '@babel/plugin-syntax-export-default-from': 7.24.6(@babel/core@7.24.6)
    dev: false

  /@babel/plugin-proposal-logical-assignment-operators@7.20.7(@babel/core@7.24.6):
    resolution: {integrity: sha512-y7C7cZgpMIjWlKE5T7eJwp+tnRYM89HmRvWM5EQuB5BoHEONjmQ8lSNmBUwOyy/GFRsohJED51YBF79hE1djug==}
    engines: {node: '>=6.9.0'}
    deprecated: This proposal has been merged to the ECMAScript standard and thus this plugin is no longer maintained. Please use @babel/plugin-transform-logical-assignment-operators instead.
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
      '@babel/plugin-syntax-logical-assignment-operators': 7.10.4(@babel/core@7.24.6)
    dev: false

  /@babel/plugin-proposal-nullish-coalescing-operator@7.18.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-wQxQzxYeJqHcfppzBDnm1yAY0jSRkUXR2z8RePZYrKwMKgMlE8+Z6LUno+bd6LvbGh8Gltvy74+9pIYkr+XkKA==}
    engines: {node: '>=6.9.0'}
    deprecated: This proposal has been merged to the ECMAScript standard and thus this plugin is no longer maintained. Please use @babel/plugin-transform-nullish-coalescing-operator instead.
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
      '@babel/plugin-syntax-nullish-coalescing-operator': 7.8.3(@babel/core@7.24.6)
    dev: false

  /@babel/plugin-proposal-numeric-separator@7.18.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-ozlZFogPqoLm8WBr5Z8UckIoE4YQ5KESVcNudyXOR8uqIkliTEgJ3RoketfG6pmzLdeZF0H/wjE9/cCEitBl7Q==}
    engines: {node: '>=6.9.0'}
    deprecated: This proposal has been merged to the ECMAScript standard and thus this plugin is no longer maintained. Please use @babel/plugin-transform-numeric-separator instead.
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
      '@babel/plugin-syntax-numeric-separator': 7.10.4(@babel/core@7.24.6)
    dev: false

  /@babel/plugin-proposal-object-rest-spread@7.20.7(@babel/core@7.24.6):
    resolution: {integrity: sha512-d2S98yCiLxDVmBmE8UjGcfPvNEUbA1U5q5WxaWFUGRzJSVAZqm5W6MbPct0jxnegUZ0niLeNX+IOzEs7wYg9Dg==}
    engines: {node: '>=6.9.0'}
    deprecated: This proposal has been merged to the ECMAScript standard and thus this plugin is no longer maintained. Please use @babel/plugin-transform-object-rest-spread instead.
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/compat-data': 7.24.6
      '@babel/core': 7.24.6
      '@babel/helper-compilation-targets': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
      '@babel/plugin-syntax-object-rest-spread': 7.8.3(@babel/core@7.24.6)
      '@babel/plugin-transform-parameters': 7.24.6(@babel/core@7.24.6)
    dev: false

  /@babel/plugin-proposal-optional-catch-binding@7.18.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-Q40HEhs9DJQyaZfUjjn6vE8Cv4GmMHCYuMGIWUnlxH6400VGxOuwWsPt4FxXxJkC/5eOzgn0z21M9gMT4MOhbw==}
    engines: {node: '>=6.9.0'}
    deprecated: This proposal has been merged to the ECMAScript standard and thus this plugin is no longer maintained. Please use @babel/plugin-transform-optional-catch-binding instead.
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
      '@babel/plugin-syntax-optional-catch-binding': 7.8.3(@babel/core@7.24.6)
    dev: false

  /@babel/plugin-proposal-optional-chaining@7.21.0(@babel/core@7.24.6):
    resolution: {integrity: sha512-p4zeefM72gpmEe2fkUr/OnOXpWEf8nAgk7ZYVqqfFiyIG7oFfVZcCrU64hWn5xp4tQ9LkV4bTIa5rD0KANpKNA==}
    engines: {node: '>=6.9.0'}
    deprecated: This proposal has been merged to the ECMAScript standard and thus this plugin is no longer maintained. Please use @babel/plugin-transform-optional-chaining instead.
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
      '@babel/helper-skip-transparent-expression-wrappers': 7.24.6
      '@babel/plugin-syntax-optional-chaining': 7.8.3(@babel/core@7.24.6)
    dev: false

  /@babel/plugin-proposal-private-property-in-object@7.21.0-placeholder-for-preset-env.2(@babel/core@7.24.6):
    resolution: {integrity: sha512-SOSkfJDddaM7mak6cPEpswyTRnuRltl429hMraQEglW+OkovnCzsiszTmsrlY//qLFjCpQDFRvjdm2wA5pPm9w==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
    dev: false

  /@babel/plugin-syntax-async-generators@7.8.4(@babel/core@7.24.6):
    resolution: {integrity: sha512-tycmZxkGfZaxhMRbXlPXuVFpdWlXpir2W4AMhSJgRKzk/eDlIXOhb2LHWoLpDF7TEHylV5zNhykX6KAgHJmTNw==}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-syntax-class-properties@7.12.13(@babel/core@7.24.6):
    resolution: {integrity: sha512-fm4idjKla0YahUNgFNLCB0qySdsoPiZP3iQE3rky0mBUtMZ23yDJ9SJdg6dXTSDnulOVqiF3Hgr9nbXvXTQZYA==}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-syntax-class-static-block@7.14.5(@babel/core@7.24.6):
    resolution: {integrity: sha512-b+YyPmr6ldyNnM6sqYeMWE+bgJcJpO6yS4QD7ymxgH34GBPNDM/THBh8iunyvKIZztiwLH4CJZ0RxTk9emgpjw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-syntax-dynamic-import@7.8.3(@babel/core@7.24.6):
    resolution: {integrity: sha512-5gdGbFon+PszYzqs83S3E5mpi7/y/8M9eC90MRTZfduQOYW76ig6SOSPNe41IG5LoP3FGBn2N0RjVDSQiS94kQ==}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-syntax-export-default-from@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-Nzl7kZ4tjOM2LJpejBMPwZs7OJfc26++2HsMQuSrw6gxpqXGtZZ3Rj4Zt4Qm7vulMZL2gHIGGc2stnlQnHQCqA==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-syntax-export-namespace-from@7.8.3(@babel/core@7.24.6):
    resolution: {integrity: sha512-MXf5laXo6c1IbEbegDmzGPwGNTsHZmEy6QGznu5Sh2UCWvueywb2ee+CCE4zQiZstxU9BMoQO9i6zUFSY0Kj0Q==}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-syntax-flow@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-gNkksSdV8RbsCoHF9sjVYrHfYACMl/8U32UfUhJ9+84/ASXw8dlx+eHyyF0m6ncQJ9IBSxfuCkB36GJqYdXTOA==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-syntax-import-assertions@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-BE6o2BogJKJImTmGpkmOic4V0hlRRxVtzqxiSPa8TIFxyhi4EFjHm08nq1M4STK4RytuLMgnSz0/wfflvGFNOg==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-syntax-import-attributes@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-D+CfsVZousPXIdudSII7RGy52+dYRtbyKAZcvtQKq/NpsivyMVduepzcLqG5pMBugtMdedxdC8Ramdpcne9ZWQ==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-syntax-import-meta@7.10.4(@babel/core@7.24.6):
    resolution: {integrity: sha512-Yqfm+XDx0+Prh3VSeEQCPU81yC+JWZ2pDPFSS4ZdpfZhp4MkFMaDC1UqseovEKwSUpnIL7+vK+Clp7bfh0iD7g==}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-syntax-json-strings@7.8.3(@babel/core@7.24.6):
    resolution: {integrity: sha512-lY6kdGpWHvjoe2vk4WrAapEuBR69EMxZl+RoGRhrFGNYVK8mOPAW8VfbT/ZgrFbXlDNiiaxQnAtgVCZ6jv30EA==}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-syntax-jsx@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-lWfvAIFNWMlCsU0DRUun2GpFwZdGTukLaHJqRh1JRb80NdAP5Sb1HDHB5X9P9OtgZHQl089UzQkpYlBq2VTPRw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-syntax-logical-assignment-operators@7.10.4(@babel/core@7.24.6):
    resolution: {integrity: sha512-d8waShlpFDinQ5MtvGU9xDAOzKH47+FFoney2baFIoMr952hKOLp1HR7VszoZvOsV/4+RRszNY7D17ba0te0ig==}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-syntax-nullish-coalescing-operator@7.8.3(@babel/core@7.24.6):
    resolution: {integrity: sha512-aSff4zPII1u2QD7y+F8oDsz19ew4IGEJg9SVW+bqwpwtfFleiQDMdzA/R+UlWDzfnHFCxxleFT0PMIrR36XLNQ==}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-syntax-numeric-separator@7.10.4(@babel/core@7.24.6):
    resolution: {integrity: sha512-9H6YdfkcK/uOnY/K7/aA2xpzaAgkQn37yzWUMRK7OaPOqOpGS1+n0H5hxT9AUw9EsSjPW8SVyMJwYRtWs3X3ug==}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-syntax-object-rest-spread@7.8.3(@babel/core@7.24.6):
    resolution: {integrity: sha512-XoqMijGZb9y3y2XskN+P1wUGiVwWZ5JmoDRwx5+3GmEplNyVM2s2Dg8ILFQm8rWM48orGy5YpI5Bl8U1y7ydlA==}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-syntax-optional-catch-binding@7.8.3(@babel/core@7.24.6):
    resolution: {integrity: sha512-6VPD0Pc1lpTqw0aKoeRTMiB+kWhAoT24PA+ksWSBrFtl5SIRVpZlwN3NNPQjehA2E/91FV3RjLWoVTglWcSV3Q==}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-syntax-optional-chaining@7.8.3(@babel/core@7.24.6):
    resolution: {integrity: sha512-KoK9ErH1MBlCPxV0VANkXW2/dw4vlbGDrFgz8bmUsBGYkFRcbRwMh6cIJubdPrkxRwuGdtCk0v/wPTKbQgBjkg==}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-syntax-private-property-in-object@7.14.5(@babel/core@7.24.6):
    resolution: {integrity: sha512-0wVnp9dxJ72ZUJDV27ZfbSj6iHLoytYZmh3rFcxNnvsJF3ktkzLDZPy/mA17HGsaQT3/DQsWYX1f1QGWkCoVUg==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-syntax-top-level-await@7.14.5(@babel/core@7.24.6):
    resolution: {integrity: sha512-hx++upLv5U1rgYfwe1xBQUhRmU41NEvpUvrp8jkrSCdvGSnM5/qdRMtylJ6PG5OFkBaHkbTAKTnd3/YyESRHFw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-syntax-typescript@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-TzCtxGgVTEJWWwcYwQhCIQ6WaKlo80/B+Onsk4RRCcYqpYGFcG9etPW94VToGte5AAcxRrhjPUFvUS3Y2qKi4A==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-syntax-unicode-sets-regex@7.18.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-727YkEAPwSIQTv5im8QHz3upqp92JTWhidIC81Tdx4VJYIte/VndKf1qKrfnnhPLiPghStWfvC/iFaMCQu7Nqg==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-create-regexp-features-plugin': 7.24.6(@babel/core@7.24.6)
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-transform-arrow-functions@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-jSSSDt4ZidNMggcLx8SaKsbGNEfIl0PHx/4mFEulorE7bpYLbN0d3pDW3eJ7Y5Z3yPhy3L3NaPCYyTUY7TuugQ==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-transform-async-generator-functions@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-VEP2o4iR2DqQU6KPgizTW2mnMx6BG5b5O9iQdrW9HesLkv8GIA8x2daXBQxw1MrsIkFQGA/iJ204CKoQ8UcnAA==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-environment-visitor': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
      '@babel/helper-remap-async-to-generator': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-syntax-async-generators': 7.8.4(@babel/core@7.24.6)
    dev: false

  /@babel/plugin-transform-async-to-generator@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-NTBA2SioI3OsHeIn6sQmhvXleSl9T70YY/hostQLveWs0ic+qvbA3fa0kwAwQ0OA/XGaAerNZRQGJyRfhbJK4g==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-module-imports': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
      '@babel/helper-remap-async-to-generator': 7.24.6(@babel/core@7.24.6)
    dev: false

  /@babel/plugin-transform-block-scoped-functions@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-XNW7jolYHW9CwORrZgA/97tL/k05qe/HL0z/qqJq1mdWhwwCM6D4BJBV7wAz9HgFziN5dTOG31znkVIzwxv+vw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-transform-block-scoping@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-S/t1Xh4ehW7sGA7c1j/hiOBLnEYCp/c2sEG4ZkL8kI1xX9tW2pqJTCHKtdhe/jHKt8nG0pFCrDHUXd4DvjHS9w==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-transform-class-properties@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-j6dZ0Z2Z2slWLR3kt9aOmSIrBvnntWjMDN/TVcMPxhXMLmJVqX605CBRlcGI4b32GMbfifTEsdEjGjiE+j/c3A==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-create-class-features-plugin': 7.24.6(@babel/core@7.24.6)
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-transform-class-static-block@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-1QSRfoPI9RoLRa8Mnakc6v3e0gJxiZQTYrMfLn+mD0sz5+ndSzwymp2hDcYJTyT0MOn0yuWzj8phlIvO72gTHA==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.12.0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-create-class-features-plugin': 7.24.6(@babel/core@7.24.6)
      '@babel/helper-plugin-utils': 7.24.6
      '@babel/plugin-syntax-class-static-block': 7.14.5(@babel/core@7.24.6)
    dev: false

  /@babel/plugin-transform-classes@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-+fN+NO2gh8JtRmDSOB6gaCVo36ha8kfCW1nMq2Gc0DABln0VcHN4PrALDvF5/diLzIRKptC7z/d7Lp64zk92Fg==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-annotate-as-pure': 7.24.6
      '@babel/helper-compilation-targets': 7.24.6
      '@babel/helper-environment-visitor': 7.24.6
      '@babel/helper-function-name': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
      '@babel/helper-replace-supers': 7.24.6(@babel/core@7.24.6)
      '@babel/helper-split-export-declaration': 7.24.6
      globals: 11.12.0
    dev: false

  /@babel/plugin-transform-computed-properties@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-cRzPobcfRP0ZtuIEkA8QzghoUpSB3X3qSH5W2+FzG+VjWbJXExtx0nbRqwumdBN1x/ot2SlTNQLfBCnPdzp6kg==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
      '@babel/template': 7.24.6
    dev: false

  /@babel/plugin-transform-destructuring@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-YLW6AE5LQpk5npNXL7i/O+U9CE4XsBCuRPgyjl1EICZYKmcitV+ayuuUGMJm2lC1WWjXYszeTnIxF/dq/GhIZQ==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-transform-dotall-regex@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-rCXPnSEKvkm/EjzOtLoGvKseK+dS4kZwx1HexO3BtRtgL0fQ34awHn34aeSHuXtZY2F8a1X8xqBBPRtOxDVmcA==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-create-regexp-features-plugin': 7.24.6(@babel/core@7.24.6)
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-transform-duplicate-keys@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-/8Odwp/aVkZwPFJMllSbawhDAO3UJi65foB00HYnK/uXvvCPm0TAXSByjz1mpRmp0q6oX2SIxpkUOpPFHk7FLA==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-transform-dynamic-import@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-vpq8SSLRTBLOHUZHSnBqVo0AKX3PBaoPs2vVzYVWslXDTDIpwAcCDtfhUcHSQQoYoUvcFPTdC8TZYXu9ZnLT/w==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
      '@babel/plugin-syntax-dynamic-import': 7.8.3(@babel/core@7.24.6)
    dev: false

  /@babel/plugin-transform-exponentiation-operator@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-EemYpHtmz0lHE7hxxxYEuTYOOBZ43WkDgZ4arQ4r+VX9QHuNZC+WH3wUWmRNvR8ECpTRne29aZV6XO22qpOtdA==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-builder-binary-assignment-operator-visitor': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-transform-export-namespace-from@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-inXaTM1SVrIxCkIJ5gqWiozHfFMStuGbGJAxZFBoHcRRdDP0ySLb3jH6JOwmfiinPwyMZqMBX+7NBDCO4z0NSA==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
      '@babel/plugin-syntax-export-namespace-from': 7.8.3(@babel/core@7.24.6)
    dev: false

  /@babel/plugin-transform-flow-strip-types@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-1l8b24NoCpaQ13Vi6FtLG1nv6kNoi8PWvQb1AYO7GHZDpFfBYc3lbXArx1lP2KRt8b4pej1eWc/zrRmsQTfOdQ==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
      '@babel/plugin-syntax-flow': 7.24.6(@babel/core@7.24.6)
    dev: false

  /@babel/plugin-transform-for-of@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-n3Sf72TnqK4nw/jziSqEl1qaWPbCRw2CziHH+jdRYvw4J6yeCzsj4jdw8hIntOEeDGTmHVe2w4MVL44PN0GMzg==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
      '@babel/helper-skip-transparent-expression-wrappers': 7.24.6
    dev: false

  /@babel/plugin-transform-function-name@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-sOajCu6V0P1KPljWHKiDq6ymgqB+vfo3isUS4McqW1DZtvSVU2v/wuMhmRmkg3sFoq6GMaUUf8W4WtoSLkOV/Q==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-compilation-targets': 7.24.6
      '@babel/helper-function-name': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-transform-json-strings@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-Uvgd9p2gUnzYJxVdBLcU0KurF8aVhkmVyMKW4MIY1/BByvs3EBpv45q01o7pRTVmTvtQq5zDlytP3dcUgm7v9w==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
      '@babel/plugin-syntax-json-strings': 7.8.3(@babel/core@7.24.6)
    dev: false

  /@babel/plugin-transform-literals@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-f2wHfR2HF6yMj+y+/y07+SLqnOSwRp8KYLpQKOzS58XLVlULhXbiYcygfXQxJlMbhII9+yXDwOUFLf60/TL5tw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-transform-logical-assignment-operators@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-EKaWvnezBCMkRIHxMJSIIylzhqK09YpiJtDbr2wsXTwnO0TxyjMUkaw4RlFIZMIS0iDj0KyIg7H7XCguHu/YDA==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
      '@babel/plugin-syntax-logical-assignment-operators': 7.10.4(@babel/core@7.24.6)
    dev: false

  /@babel/plugin-transform-member-expression-literals@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-9g8iV146szUo5GWgXpRbq/GALTnY+WnNuRTuRHWWFfWGbP9ukRL0aO/jpu9dmOPikclkxnNsjY8/gsWl6bmZJQ==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-transform-modules-amd@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-eAGogjZgcwqAxhyFgqghvoHRr+EYRQPFjUXrTYKBRb5qPnAVxOOglaxc4/byHqjvq/bqO2F3/CGwTHsgKJYHhQ==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-module-transforms': 7.24.6(@babel/core@7.24.6)
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-transform-modules-commonjs@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-JEV8l3MHdmmdb7S7Cmx6rbNEjRCgTQMZxllveHO0mx6uiclB0NflCawlQQ6+o5ZrwjUBYPzHm2XoK4wqGVUFuw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-module-transforms': 7.24.6(@babel/core@7.24.6)
      '@babel/helper-plugin-utils': 7.24.6
      '@babel/helper-simple-access': 7.24.6
    dev: false

  /@babel/plugin-transform-modules-systemjs@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-xg1Z0J5JVYxtpX954XqaaAT6NpAY6LtZXvYFCJmGFJWwtlz2EmJoR8LycFRGNE8dBKizGWkGQZGegtkV8y8s+w==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-hoist-variables': 7.24.6
      '@babel/helper-module-transforms': 7.24.6(@babel/core@7.24.6)
      '@babel/helper-plugin-utils': 7.24.6
      '@babel/helper-validator-identifier': 7.24.6
    dev: false

  /@babel/plugin-transform-modules-umd@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-esRCC/KsSEUvrSjv5rFYnjZI6qv4R1e/iHQrqwbZIoRJqk7xCvEUiN7L1XrmW5QSmQe3n1XD88wbgDTWLbVSyg==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-module-transforms': 7.24.6(@babel/core@7.24.6)
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-transform-named-capturing-groups-regex@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-6DneiCiu91wm3YiNIGDWZsl6GfTTbspuj/toTEqLh9d4cx50UIzSdg+T96p8DuT7aJOBRhFyaE9ZvTHkXrXr6Q==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-create-regexp-features-plugin': 7.24.6(@babel/core@7.24.6)
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-transform-new-target@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-f8liz9JG2Va8A4J5ZBuaSdwfPqN6axfWRK+y66fjKYbwf9VBLuq4WxtinhJhvp1w6lamKUwLG0slK2RxqFgvHA==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-transform-nullish-coalescing-operator@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-+QlAiZBMsBK5NqrBWFXCYeXyiU1y7BQ/OYaiPAcQJMomn5Tyg+r5WuVtyEuvTbpV7L25ZSLfE+2E9ywj4FD48A==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
      '@babel/plugin-syntax-nullish-coalescing-operator': 7.8.3(@babel/core@7.24.6)
    dev: false

  /@babel/plugin-transform-numeric-separator@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-6voawq8T25Jvvnc4/rXcWZQKKxUNZcKMS8ZNrjxQqoRFernJJKjE3s18Qo6VFaatG5aiX5JV1oPD7DbJhn0a4Q==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
      '@babel/plugin-syntax-numeric-separator': 7.10.4(@babel/core@7.24.6)
    dev: false

  /@babel/plugin-transform-object-rest-spread@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-OKmi5wiMoRW5Smttne7BwHM8s/fb5JFs+bVGNSeHWzwZkWXWValR1M30jyXo1s/RaqgwwhEC62u4rFH/FBcBPg==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-compilation-targets': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
      '@babel/plugin-syntax-object-rest-spread': 7.8.3(@babel/core@7.24.6)
      '@babel/plugin-transform-parameters': 7.24.6(@babel/core@7.24.6)
    dev: false

  /@babel/plugin-transform-object-super@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-N/C76ihFKlZgKfdkEYKtaRUtXZAgK7sOY4h2qrbVbVTXPrKGIi8aww5WGe/+Wmg8onn8sr2ut6FXlsbu/j6JHg==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
      '@babel/helper-replace-supers': 7.24.6(@babel/core@7.24.6)
    dev: false

  /@babel/plugin-transform-optional-catch-binding@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-L5pZ+b3O1mSzJ71HmxSCmTVd03VOT2GXOigug6vDYJzE5awLI7P1g0wFcdmGuwSDSrQ0L2rDOe/hHws8J1rv3w==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
      '@babel/plugin-syntax-optional-catch-binding': 7.8.3(@babel/core@7.24.6)
    dev: false

  /@babel/plugin-transform-optional-chaining@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-cHbqF6l1QP11OkYTYQ+hhVx1E017O5ZcSPXk9oODpqhcAD1htsWG2NpHrrhthEO2qZomLK0FXS+u7NfrkF5aOQ==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
      '@babel/helper-skip-transparent-expression-wrappers': 7.24.6
      '@babel/plugin-syntax-optional-chaining': 7.8.3(@babel/core@7.24.6)
    dev: false

  /@babel/plugin-transform-parameters@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-ST7guE8vLV+vI70wmAxuZpIKzVjvFX9Qs8bl5w6tN/6gOypPWUmMQL2p7LJz5E63vEGrDhAiYetniJFyBH1RkA==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-transform-private-methods@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-T9LtDI0BgwXOzyXrvgLTT8DFjCC/XgWLjflczTLXyvxbnSR/gpv0hbmzlHE/kmh9nOvlygbamLKRo6Op4yB6aw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-create-class-features-plugin': 7.24.6(@babel/core@7.24.6)
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-transform-private-property-in-object@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-Qu/ypFxCY5NkAnEhCF86Mvg3NSabKsh/TPpBVswEdkGl7+FbsYHy1ziRqJpwGH4thBdQHh8zx+z7vMYmcJ7iaQ==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-annotate-as-pure': 7.24.6
      '@babel/helper-create-class-features-plugin': 7.24.6(@babel/core@7.24.6)
      '@babel/helper-plugin-utils': 7.24.6
      '@babel/plugin-syntax-private-property-in-object': 7.14.5(@babel/core@7.24.6)
    dev: false

  /@babel/plugin-transform-property-literals@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-oARaglxhRsN18OYsnPTpb8TcKQWDYNsPNmTnx5++WOAsUJ0cSC/FZVlIJCKvPbU4yn/UXsS0551CFKJhN0CaMw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-transform-react-display-name@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-/3iiEEHDsJuj9QU09gbyWGSUxDboFcD7Nj6dnHIlboWSodxXAoaY/zlNMHeYAC0WsERMqgO9a7UaM77CsYgWcg==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-transform-react-jsx-self@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-FfZfHXtQ5jYPQsCRyLpOv2GeLIIJhs8aydpNh39vRDjhD411XcfWDni5i7OjP/Rs8GAtTn7sWFFELJSHqkIxYg==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-transform-react-jsx-source@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-BQTBCXmFRreU3oTUXcGKuPOfXAGb1liNY4AvvFKsOBAJ89RKcTsIrSsnMYkj59fNa66OFKnSa4AJZfy5Y4B9WA==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-transform-react-jsx@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-pCtPHhpRZHfwdA5G1Gpk5mIzMA99hv0R8S/Ket50Rw+S+8hkt3wBWqdqHaPw0CuUYxdshUgsPiLQ5fAs4ASMhw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-annotate-as-pure': 7.24.6
      '@babel/helper-module-imports': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
      '@babel/plugin-syntax-jsx': 7.24.6(@babel/core@7.24.6)
      '@babel/types': 7.24.6
    dev: false

  /@babel/plugin-transform-regenerator@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-SMDxO95I8WXRtXhTAc8t/NFQUT7VYbIWwJCJgEli9ml4MhqUMh4S6hxgH6SmAC3eAQNWCDJFxcFeEt9w2sDdXg==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
      regenerator-transform: 0.15.2
    dev: false

  /@babel/plugin-transform-reserved-words@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-DcrgFXRRlK64dGE0ZFBPD5egM2uM8mgfrvTMOSB2yKzOtjpGegVYkzh3s1zZg1bBck3nkXiaOamJUqK3Syk+4A==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-transform-runtime@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-W3gQydMb0SY99y/2lV0Okx2xg/8KzmZLQsLaiCmwNRl1kKomz14VurEm+2TossUb+sRvBCnGe+wx8KtIgDtBbQ==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-module-imports': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
      babel-plugin-polyfill-corejs2: 0.4.11(@babel/core@7.24.6)
      babel-plugin-polyfill-corejs3: 0.10.4(@babel/core@7.24.6)
      babel-plugin-polyfill-regenerator: 0.6.2(@babel/core@7.24.6)
      semver: 6.3.1
    transitivePeerDependencies:
      - supports-color
    dev: false

  /@babel/plugin-transform-shorthand-properties@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-xnEUvHSMr9eOWS5Al2YPfc32ten7CXdH7Zwyyk7IqITg4nX61oHj+GxpNvl+y5JHjfN3KXE2IV55wAWowBYMVw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-transform-spread@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-h/2j7oIUDjS+ULsIrNZ6/TKG97FgmEk1PXryk/HQq6op4XUUUwif2f69fJrzK0wza2zjCS1xhXmouACaWV5uPA==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
      '@babel/helper-skip-transparent-expression-wrappers': 7.24.6
    dev: false

  /@babel/plugin-transform-sticky-regex@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-fN8OcTLfGmYv7FnDrsjodYBo1DhPL3Pze/9mIIE2MGCT1KgADYIOD7rEglpLHZj8PZlC/JFX5WcD+85FLAQusw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-transform-template-literals@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-BJbEqJIcKwrqUP+KfUIkxz3q8VzXe2R8Wv8TaNgO1cx+nNavxn/2+H8kp9tgFSOL6wYPPEgFvU6IKS4qoGqhmg==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-transform-typeof-symbol@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-IshCXQ+G9JIFJI7bUpxTE/oA2lgVLAIK8q1KdJNoPXOpvRaNjMySGuvLfBw/Xi2/1lLo953uE8hyYSDW3TSYig==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-transform-typescript@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-H0i+hDLmaYYSt6KU9cZE0gb3Cbssa/oxWis7PX4ofQzbvsfix9Lbh8SRk7LCPDlLWJHUiFeHU0qRRpF/4Zv7mQ==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-annotate-as-pure': 7.24.6
      '@babel/helper-create-class-features-plugin': 7.24.6(@babel/core@7.24.6)
      '@babel/helper-plugin-utils': 7.24.6
      '@babel/plugin-syntax-typescript': 7.24.6(@babel/core@7.24.6)
    dev: false

  /@babel/plugin-transform-unicode-escapes@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-bKl3xxcPbkQQo5eX9LjjDpU2xYHeEeNQbOhj0iPvetSzA+Tu9q/o5lujF4Sek60CM6MgYvOS/DJuwGbiEYAnLw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-transform-unicode-property-regex@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-8EIgImzVUxy15cZiPii9GvLZwsy7Vxc+8meSlR3cXFmBIl5W5Tn9LGBf7CDKkHj4uVfNXCJB8RsVfnmY61iedA==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-create-regexp-features-plugin': 7.24.6(@babel/core@7.24.6)
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-transform-unicode-regex@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-pssN6ExsvxaKU638qcWb81RrvvgZom3jDgU/r5xFZ7TONkZGFf4MhI2ltMb8OcQWhHyxgIavEU+hgqtbKOmsPA==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-create-regexp-features-plugin': 7.24.6(@babel/core@7.24.6)
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/plugin-transform-unicode-sets-regex@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-quiMsb28oXWIDK0gXLALOJRXLgICLiulqdZGOaPPd0vRT7fQp74NtdADAVu+D8s00C+0Xs0MxVP0VKF/sZEUgw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-create-regexp-features-plugin': 7.24.6(@babel/core@7.24.6)
      '@babel/helper-plugin-utils': 7.24.6
    dev: false

  /@babel/preset-env@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-CrxEAvN7VxfjOG8JNF2Y/eMqMJbZPZ185amwGUBp8D9USK90xQmv7dLdFSa+VbD7fdIqcy/Mfv7WtzG8+/qxKg==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/compat-data': 7.24.6
      '@babel/core': 7.24.6
      '@babel/helper-compilation-targets': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
      '@babel/helper-validator-option': 7.24.6
      '@babel/plugin-bugfix-firefox-class-in-computed-class-key': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-bugfix-v8-static-class-fields-redefine-readonly': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-proposal-private-property-in-object': 7.21.0-placeholder-for-preset-env.2(@babel/core@7.24.6)
      '@babel/plugin-syntax-async-generators': 7.8.4(@babel/core@7.24.6)
      '@babel/plugin-syntax-class-properties': 7.12.13(@babel/core@7.24.6)
      '@babel/plugin-syntax-class-static-block': 7.14.5(@babel/core@7.24.6)
      '@babel/plugin-syntax-dynamic-import': 7.8.3(@babel/core@7.24.6)
      '@babel/plugin-syntax-export-namespace-from': 7.8.3(@babel/core@7.24.6)
      '@babel/plugin-syntax-import-assertions': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-syntax-import-attributes': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-syntax-import-meta': 7.10.4(@babel/core@7.24.6)
      '@babel/plugin-syntax-json-strings': 7.8.3(@babel/core@7.24.6)
      '@babel/plugin-syntax-logical-assignment-operators': 7.10.4(@babel/core@7.24.6)
      '@babel/plugin-syntax-nullish-coalescing-operator': 7.8.3(@babel/core@7.24.6)
      '@babel/plugin-syntax-numeric-separator': 7.10.4(@babel/core@7.24.6)
      '@babel/plugin-syntax-object-rest-spread': 7.8.3(@babel/core@7.24.6)
      '@babel/plugin-syntax-optional-catch-binding': 7.8.3(@babel/core@7.24.6)
      '@babel/plugin-syntax-optional-chaining': 7.8.3(@babel/core@7.24.6)
      '@babel/plugin-syntax-private-property-in-object': 7.14.5(@babel/core@7.24.6)
      '@babel/plugin-syntax-top-level-await': 7.14.5(@babel/core@7.24.6)
      '@babel/plugin-syntax-unicode-sets-regex': 7.18.6(@babel/core@7.24.6)
      '@babel/plugin-transform-arrow-functions': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-async-generator-functions': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-async-to-generator': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-block-scoped-functions': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-block-scoping': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-class-properties': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-class-static-block': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-classes': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-computed-properties': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-destructuring': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-dotall-regex': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-duplicate-keys': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-dynamic-import': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-exponentiation-operator': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-export-namespace-from': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-for-of': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-function-name': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-json-strings': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-literals': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-logical-assignment-operators': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-member-expression-literals': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-modules-amd': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-modules-commonjs': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-modules-systemjs': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-modules-umd': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-named-capturing-groups-regex': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-new-target': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-nullish-coalescing-operator': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-numeric-separator': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-object-rest-spread': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-object-super': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-optional-catch-binding': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-optional-chaining': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-parameters': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-private-methods': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-private-property-in-object': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-property-literals': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-regenerator': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-reserved-words': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-shorthand-properties': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-spread': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-sticky-regex': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-template-literals': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-typeof-symbol': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-unicode-escapes': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-unicode-property-regex': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-unicode-regex': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-unicode-sets-regex': 7.24.6(@babel/core@7.24.6)
      '@babel/preset-modules': 0.1.6-no-external-plugins(@babel/core@7.24.6)
      babel-plugin-polyfill-corejs2: 0.4.11(@babel/core@7.24.6)
      babel-plugin-polyfill-corejs3: 0.10.4(@babel/core@7.24.6)
      babel-plugin-polyfill-regenerator: 0.6.2(@babel/core@7.24.6)
      core-js-compat: 3.37.1
      semver: 6.3.1
    transitivePeerDependencies:
      - supports-color
    dev: false

  /@babel/preset-flow@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-huoe0T1Qs9fQhMWbmqE/NHUeZbqmHDsN6n/jYvPcUUHfuKiPV32C9i8tDhMbQ1DEKTjbBP7Rjm3nSLwlB2X05g==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
      '@babel/helper-validator-option': 7.24.6
      '@babel/plugin-transform-flow-strip-types': 7.24.6(@babel/core@7.24.6)
    dev: false

  /@babel/preset-modules@0.1.6-no-external-plugins(@babel/core@7.24.6):
    resolution: {integrity: sha512-HrcgcIESLm9aIR842yhJ5RWan/gebQUJ6E/E5+rf0y9o6oj7w0Br+sWuL6kEQ/o/AdfvR1Je9jG18/gnpwjEyA==}
    peerDependencies:
      '@babel/core': ^7.0.0-0 || ^8.0.0-0 <8.0.0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
      '@babel/types': 7.24.6
      esutils: 2.0.3
    dev: false

  /@babel/preset-typescript@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-U10aHPDnokCFRXgyT/MaIRTivUu2K/mu0vJlwRS9LxJmJet+PFQNKpggPyFCUtC6zWSBPjvxjnpNkAn3Uw2m5w==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-plugin-utils': 7.24.6
      '@babel/helper-validator-option': 7.24.6
      '@babel/plugin-syntax-jsx': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-modules-commonjs': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-typescript': 7.24.6(@babel/core@7.24.6)
    dev: false

  /@babel/register@7.24.6(@babel/core@7.24.6):
    resolution: {integrity: sha512-WSuFCc2wCqMeXkz/i3yfAAsxwWflEgbVkZzivgAmXl/MxrXeoYFZOOPllbC8R8WTF7u61wSRQtDVZ1879cdu6w==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
      clone-deep: 4.0.1
      find-cache-dir: 2.1.0
      make-dir: 2.1.0
      pirates: 4.0.6
      source-map-support: 0.5.21
    dev: false

  /@babel/regjsgen@0.8.0:
    resolution: {integrity: sha512-x/rqGMdzj+fWZvCOYForTghzbtqPDZ5gPwaoNGHdgDfF2QA/XZbCBp4Moo5scrkAMPhB7z26XM/AaHuIJdgauA==}
    dev: false

  /@babel/runtime@7.24.6:
    resolution: {integrity: sha512-Ja18XcETdEl5mzzACGd+DKgaGJzPTCow7EglgwTmHdwokzDFYh/MHua6lU6DV/hjF2IaOJ4oX2nqnjG7RElKOw==}
    engines: {node: '>=6.9.0'}
    dependencies:
      regenerator-runtime: 0.14.1
    dev: false

  /@babel/template@7.24.6:
    resolution: {integrity: sha512-3vgazJlLwNXi9jhrR1ef8qiB65L1RK90+lEQwv4OxveHnqC3BfmnHdgySwRLzf6akhlOYenT+b7AfWq+a//AHw==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@babel/code-frame': 7.24.6
      '@babel/parser': 7.24.6
      '@babel/types': 7.24.6
    dev: false

  /@babel/traverse@7.24.6:
    resolution: {integrity: sha512-OsNjaJwT9Zn8ozxcfoBc+RaHdj3gFmCmYoQLUII1o6ZrUwku0BMg80FoOTPx+Gi6XhcQxAYE4xyjPTo4SxEQqw==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@babel/code-frame': 7.24.6
      '@babel/generator': 7.24.6
      '@babel/helper-environment-visitor': 7.24.6
      '@babel/helper-function-name': 7.24.6
      '@babel/helper-hoist-variables': 7.24.6
      '@babel/helper-split-export-declaration': 7.24.6
      '@babel/parser': 7.24.6
      '@babel/types': 7.24.6
      debug: 4.3.4
      globals: 11.12.0
    transitivePeerDependencies:
      - supports-color
    dev: false

  /@babel/types@7.24.6:
    resolution: {integrity: sha512-WaMsgi6Q8zMgMth93GvWPXkhAIEobfsIkLTacoVZoK1J0CevIPGYY2Vo5YvJGqyHqXM6P4ppOYGsIRU8MM9pFQ==}
    engines: {node: '>=6.9.0'}
    dependencies:
      '@babel/helper-string-parser': 7.24.6
      '@babel/helper-validator-identifier': 7.24.6
      to-fast-properties: 2.0.0
    dev: false

  /@coinbase/wallet-sdk@3.9.3:
    resolution: {integrity: sha512-N/A2DRIf0Y3PHc1XAMvbBUu4zisna6qAdqABMZwBMNEfWrXpAwx16pZGkYCLGE+Rvv1edbcB2LYDRnACNcmCiw==}
    dependencies:
      bn.js: 5.2.1
      buffer: 6.0.3
      clsx: 1.2.1
      eth-block-tracker: 7.1.0
      eth-json-rpc-filters: 6.0.1
      eventemitter3: 5.0.1
      keccak: 3.0.4
      preact: 10.22.0
      sha.js: 2.4.11
    transitivePeerDependencies:
      - supports-color
    dev: false

  /@coinbase/wallet-sdk@4.0.2:
    resolution: {integrity: sha512-WMUeFbtS0rn8zavjAmNhFWq1r3TV7E5KuSij1Sar0/XuOC+nhj96uqSlIApAHdhuScoKZBq39VYsAQCHzOC6/w==}
    dependencies:
      buffer: 6.0.3
      clsx: 1.2.1
      eventemitter3: 5.0.1
      keccak: 3.0.4
      preact: 10.22.0
      sha.js: 2.4.11
    dev: false

  /@emotion/hash@0.9.1:
    resolution: {integrity: sha512-gJB6HLm5rYwSLI6PQa+X1t5CFGrv1J1TWG+sOyMCeKz2ojaj6Fnl/rZEspogG+cvqbt4AE/2eIyD2QfLKTBNlQ==}
    dev: false

  /@ethereumjs/common@3.2.0:
    resolution: {integrity: sha512-pksvzI0VyLgmuEF2FA/JR/4/y6hcPq8OUail3/AvycBaW1d5VSauOZzqGvJ3RTmR4MU35lWE8KseKOsEhrFRBA==}
    dependencies:
      '@ethereumjs/util': 8.1.0
      crc-32: 1.2.2
    dev: false

  /@ethereumjs/rlp@4.0.1:
    resolution: {integrity: sha512-tqsQiBQDQdmPWE1xkkBq4rlSW5QZpLOUJ5RJh2/9fug+q9tnUhuZoVLk7s0scUIKTOzEtR72DFBXI4WiZcMpvw==}
    engines: {node: '>=14'}
    hasBin: true
    dev: false

  /@ethereumjs/tx@4.2.0:
    resolution: {integrity: sha512-1nc6VO4jtFd172BbSnTnDQVr9IYBFl1y4xPzZdtkrkKIncBCkdbgfdRV+MiTkJYAtTxvV12GRZLqBFT1PNK6Yw==}
    engines: {node: '>=14'}
    dependencies:
      '@ethereumjs/common': 3.2.0
      '@ethereumjs/rlp': 4.0.1
      '@ethereumjs/util': 8.1.0
      ethereum-cryptography: 2.1.3
    dev: false

  /@ethereumjs/util@8.1.0:
    resolution: {integrity: sha512-zQ0IqbdX8FZ9aw11vP+dZkKDkS+kgIvQPHnSAXzP9pLu+Rfu3D3XEeLbicvoXJTYnhZiPmsZUxgdzXwNKxRPbA==}
    engines: {node: '>=14'}
    dependencies:
      '@ethereumjs/rlp': 4.0.1
      ethereum-cryptography: 2.1.3
      micro-ftch: 0.3.1
    dev: false

  /@hapi/hoek@9.3.0:
    resolution: {integrity: sha512-/c6rf4UJlmHlC9b5BaNvzAcFv7HZ2QHaV0D4/HNlBdvFnvQq8RI4kYdhyPCl7Xj+oWvTWQ8ujhqS53LIgAe6KQ==}
    dev: false

  /@hapi/topo@5.1.0:
    resolution: {integrity: sha512-foQZKJig7Ob0BMAYBfcJk8d77QtOe7Wo4ox7ff1lQYoNNAb6jwcY1ncdoy2e9wQZzvNy7ODZCYJkK8kzmcAnAg==}
    dependencies:
      '@hapi/hoek': 9.3.0
    dev: false

  /@isaacs/ttlcache@1.4.1:
    resolution: {integrity: sha512-RQgQ4uQ+pLbqXfOmieB91ejmLwvSgv9nLx6sT6sD83s7umBypgg+OIBOBbEUiJXrfpnp9j0mRhYYdzp9uqq3lA==}
    engines: {node: '>=12'}
    dev: false

  /@jest/create-cache-key-function@29.7.0:
    resolution: {integrity: sha512-4QqS3LY5PBmTRHj9sAg1HLoPzqAI0uOX6wI/TRqHIcOxlFidy6YEmCQJk6FSZjNLGCeubDMfmkWL+qaLKhSGQA==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
    dependencies:
      '@jest/types': 29.6.3
    dev: false

  /@jest/environment@29.7.0:
    resolution: {integrity: sha512-aQIfHDq33ExsN4jP1NWGXhxgQ/wixs60gDiKO+XVMd8Mn0NWPWgc34ZQDTb2jKaUWQ7MuwoitXAsN2XVXNMpAw==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
    dependencies:
      '@jest/fake-timers': 29.7.0
      '@jest/types': 29.6.3
      '@types/node': 20.12.12
      jest-mock: 29.7.0
    dev: false

  /@jest/fake-timers@29.7.0:
    resolution: {integrity: sha512-q4DH1Ha4TTFPdxLsqDXK1d3+ioSL7yL5oCMJZgDYm6i+6CygW5E5xVr/D1HdsGxjt1ZWSfUAs9OxSB/BNelWrQ==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
    dependencies:
      '@jest/types': 29.6.3
      '@sinonjs/fake-timers': 10.3.0
      '@types/node': 20.12.12
      jest-message-util: 29.7.0
      jest-mock: 29.7.0
      jest-util: 29.7.0
    dev: false

  /@jest/schemas@29.6.3:
    resolution: {integrity: sha512-mo5j5X+jIZmJQveBKeS/clAueipV7KgiX1vMgCxam1RNYiqE1w62n0/tJJnHtjW8ZHcQco5gY85jA3mi0L+nSA==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
    dependencies:
      '@sinclair/typebox': 0.27.8
    dev: false

  /@jest/types@26.6.2:
    resolution: {integrity: sha512-fC6QCp7Sc5sX6g8Tvbmj4XUTbyrik0akgRy03yjXbQaBWWNWGE7SGtJk98m0N8nzegD/7SggrUlivxo5ax4KWQ==}
    engines: {node: '>= 10.14.2'}
    dependencies:
      '@types/istanbul-lib-coverage': 2.0.6
      '@types/istanbul-reports': 3.0.4
      '@types/node': 20.12.12
      '@types/yargs': 15.0.19
      chalk: 4.1.2
    dev: false

  /@jest/types@29.6.3:
    resolution: {integrity: sha512-u3UPsIilWKOM3F9CXtrG8LEJmNxwoCQC/XVj4IKYXvvpx7QIi/Kg1LI5uDmDpKlac62NUtX7eLjRh+jVZcLOzw==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
    dependencies:
      '@jest/schemas': 29.6.3
      '@types/istanbul-lib-coverage': 2.0.6
      '@types/istanbul-reports': 3.0.4
      '@types/node': 20.12.12
      '@types/yargs': 17.0.32
      chalk: 4.1.2
    dev: false

  /@joyid/ethereum-provider@1.0.0-alpha.0(viem@2.10.11):
    resolution: {integrity: sha512-J0wXCiCZ5jKhg5ql89mO23DguvrOpzQaXvjpuGEOQNE3TVX/21FIUGzWY9mrted+nBzbvewjDuZJcAXKQQVDPg==}
    peerDependencies:
      viem: 2.x
    dependencies:
      '@joyid/evm': 0.3.0-beta.1
      eventemitter3: 5.0.1
      viem: 2.10.11
    dev: false

  /@joyid/evm@0.3.0-beta.1:
    resolution: {integrity: sha512-okExQ/jFzy0iD5ec1u/nq6q7SHTvMw1LB0M6QoL+L8awxlocPpeNV7ZZIRy1+l6VSpiz2Zt3sSdM5HX+9w/ymA==}
    dev: false

  /@joyid/nostr@0.1.2:
    resolution: {integrity: sha512-2ZPCmUPzWY1HdOoJaLWZREwk/hXmqy6bkBQO4GBEQbbWU8BqIQ/tRTiRS5zMPGFFowUS7Hw1muqw0KE5AAaURg==}
    dev: false

  /@joyid/rainbowkit@2.0.0-alpha.0(@rainbow-me/rainbowkit@2.1.1)(viem@2.10.11)(wagmi@2.9.7):
    resolution: {integrity: sha512-Y2yAq7J8rCwIpb0HMsAYKKLXZt76jBUHOjZLBwSKgiVZAjJO7dMIkqu3M4kwDm9NegZn1BtRFur91TdXm5HBEA==}
    peerDependencies:
      '@rainbow-me/rainbowkit': 2.x
      viem: 2.x
      wagmi: 2.x
    dependencies:
      '@joyid/wagmi': 2.0.0-alpha.0(viem@2.10.11)(wagmi@2.9.7)
      '@rainbow-me/rainbowkit': 2.1.1(@tanstack/react-query@5.40.0)(react-dom@18.3.1)(react@18.3.1)(viem@2.10.11)(wagmi@2.9.7)
      viem: 2.10.11
      wagmi: 2.9.7(@tanstack/react-query@5.40.0)(react-dom@18.3.1)(react-i18next@13.5.0)(react-native@0.74.1)(react@18.3.1)(viem@2.10.11)
    dev: false

  /@joyid/wagmi@2.0.0-alpha.0(viem@2.10.11)(wagmi@2.9.7):
    resolution: {integrity: sha512-A7sciX9Wct/e+hu8oFv3RR+estX10fdy5SLPSuNhXTqG9yQ8l/ouEEdvwrY+XvK30e0YMRyEk53Fs7KswkPpmQ==}
    peerDependencies:
      viem: 2.x
      wagmi: 2.x
    dependencies:
      '@joyid/ethereum-provider': 1.0.0-alpha.0(viem@2.10.11)
      viem: 2.10.11
      wagmi: 2.9.7(@tanstack/react-query@5.40.0)(react-dom@18.3.1)(react-i18next@13.5.0)(react-native@0.74.1)(react@18.3.1)(viem@2.10.11)
    dev: false

  /@jridgewell/gen-mapping@0.3.5:
    resolution: {integrity: sha512-IzL8ZoEDIBRWEzlCcRhOaCupYyN5gdIK+Q6fbFdPDg6HqX6jpkItn7DFIpW9LQzXG6Df9sA7+OKnq0qlz/GaQg==}
    engines: {node: '>=6.0.0'}
    dependencies:
      '@jridgewell/set-array': 1.2.1
      '@jridgewell/sourcemap-codec': 1.4.15
      '@jridgewell/trace-mapping': 0.3.25
    dev: false

  /@jridgewell/resolve-uri@3.1.2:
    resolution: {integrity: sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==}
    engines: {node: '>=6.0.0'}
    dev: false

  /@jridgewell/set-array@1.2.1:
    resolution: {integrity: sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==}
    engines: {node: '>=6.0.0'}
    dev: false

  /@jridgewell/source-map@0.3.6:
    resolution: {integrity: sha512-1ZJTZebgqllO79ue2bm3rIGud/bOe0pP5BjSRCRxxYkEZS8STV7zN84UBbiYu7jy+eCKSnVIUgoWWE/tt+shMQ==}
    dependencies:
      '@jridgewell/gen-mapping': 0.3.5
      '@jridgewell/trace-mapping': 0.3.25
    dev: false

  /@jridgewell/sourcemap-codec@1.4.15:
    resolution: {integrity: sha512-eF2rxCRulEKXHTRiDrDy6erMYWqNw4LPdQ8UQA4huuxaQsVeRPFl2oM8oDGxMFhJUWZf9McpLtJasDDZb/Bpeg==}
    dev: false

  /@jridgewell/trace-mapping@0.3.25:
    resolution: {integrity: sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==}
    dependencies:
      '@jridgewell/resolve-uri': 3.1.2
      '@jridgewell/sourcemap-codec': 1.4.15
    dev: false

  /@lit-labs/ssr-dom-shim@1.2.0:
    resolution: {integrity: sha512-yWJKmpGE6lUURKAaIltoPIE/wrbY3TEkqQt+X0m+7fQNnAv0keydnYvbiJFP1PnMhizmIWRWOG5KLhYyc/xl+g==}
    dev: false

  /@lit/reactive-element@1.6.3:
    resolution: {integrity: sha512-QuTgnG52Poic7uM1AN5yJ09QMe0O28e10XzSvWDz02TJiiKee4stsiownEIadWm8nYzyDAyT+gKzUoZmiWQtsQ==}
    dependencies:
      '@lit-labs/ssr-dom-shim': 1.2.0
    dev: false

  /@metamask/eth-json-rpc-provider@1.0.1:
    resolution: {integrity: sha512-whiUMPlAOrVGmX8aKYVPvlKyG4CpQXiNNyt74vE1xb5sPvmx5oA7B/kOi/JdBvhGQq97U1/AVdXEdk2zkP8qyA==}
    engines: {node: '>=14.0.0'}
    dependencies:
      '@metamask/json-rpc-engine': 7.3.3
      '@metamask/safe-event-emitter': 3.1.1
      '@metamask/utils': 5.0.2
    transitivePeerDependencies:
      - supports-color
    dev: false

  /@metamask/json-rpc-engine@7.3.3:
    resolution: {integrity: sha512-dwZPq8wx9yV3IX2caLi9q9xZBw2XeIoYqdyihDDDpuHVCEiqadJLwqM3zy+uwf6F1QYQ65A8aOMQg1Uw7LMLNg==}
    engines: {node: '>=16.0.0'}
    dependencies:
      '@metamask/rpc-errors': 6.2.1
      '@metamask/safe-event-emitter': 3.1.1
      '@metamask/utils': 8.4.0
    transitivePeerDependencies:
      - supports-color
    dev: false

  /@metamask/json-rpc-middleware-stream@6.0.2:
    resolution: {integrity: sha512-jtyx3PRfc1kqoLpYveIVQNwsxYKefc64/LCl9h9Da1m3nUKEvypbYuXSIwi237qvOjKmNHQKsDOZg6f4uBf62Q==}
    engines: {node: '>=16.0.0'}
    dependencies:
      '@metamask/json-rpc-engine': 7.3.3
      '@metamask/safe-event-emitter': 3.1.1
      '@metamask/utils': 8.4.0
      readable-stream: 3.6.2
    transitivePeerDependencies:
      - supports-color
    dev: false

  /@metamask/object-multiplex@2.0.0:
    resolution: {integrity: sha512-+ItrieVZie3j2LfYE0QkdW3dsEMfMEp419IGx1zyeLqjRZ14iQUPRO0H6CGgfAAoC0x6k2PfCAGRwJUA9BMrqA==}
    engines: {node: ^16.20 || ^18.16 || >=20}
    dependencies:
      once: 1.4.0
      readable-stream: 3.6.2
    dev: false

  /@metamask/onboarding@1.0.1:
    resolution: {integrity: sha512-FqHhAsCI+Vacx2qa5mAFcWNSrTcVGMNjzxVgaX8ECSny/BJ9/vgXP9V7WF/8vb9DltPeQkxr+Fnfmm6GHfmdTQ==}
    dependencies:
      bowser: 2.11.0
    dev: false

  /@metamask/providers@15.0.0:
    resolution: {integrity: sha512-FXvL1NQNl6I7fMOJTfQYcBlBZ33vSlm6w80cMpmn8sJh0Lb7wcBpe02UwBsNlARnI+Qsr26XeDs6WHUHQh8CuA==}
    engines: {node: ^18.18 || >=20}
    dependencies:
      '@metamask/json-rpc-engine': 7.3.3
      '@metamask/json-rpc-middleware-stream': 6.0.2
      '@metamask/object-multiplex': 2.0.0
      '@metamask/rpc-errors': 6.2.1
      '@metamask/safe-event-emitter': 3.1.1
      '@metamask/utils': 8.4.0
      detect-browser: 5.3.0
      extension-port-stream: 3.0.0
      fast-deep-equal: 3.1.3
      is-stream: 2.0.1
      readable-stream: 3.6.2
      webextension-polyfill: 0.10.0
    transitivePeerDependencies:
      - supports-color
    dev: false

  /@metamask/rpc-errors@6.2.1:
    resolution: {integrity: sha512-VTgWkjWLzb0nupkFl1duQi9Mk8TGT9rsdnQg6DeRrYEFxtFOh0IF8nAwxM/4GWqDl6uIB06lqUBgUrAVWl62Bw==}
    engines: {node: '>=16.0.0'}
    dependencies:
      '@metamask/utils': 8.4.0
      fast-safe-stringify: 2.1.1
    transitivePeerDependencies:
      - supports-color
    dev: false

  /@metamask/safe-event-emitter@2.0.0:
    resolution: {integrity: sha512-/kSXhY692qiV1MXu6EeOZvg5nECLclxNXcKCxJ3cXQgYuRymRHpdx/t7JXfsK+JLjwA1e1c1/SBrlQYpusC29Q==}
    dev: false

  /@metamask/safe-event-emitter@3.1.1:
    resolution: {integrity: sha512-ihb3B0T/wJm1eUuArYP4lCTSEoZsClHhuWyfo/kMX3m/odpqNcPfsz5O2A3NT7dXCAgWPGDQGPqygCpgeniKMw==}
    engines: {node: '>=12.0.0'}
    dev: false

  /@metamask/sdk-communication-layer@0.20.2(cross-fetch@4.0.0)(eciesjs@0.3.18)(eventemitter2@6.4.9)(readable-stream@3.6.2)(socket.io-client@4.7.5):
    resolution: {integrity: sha512-TN+whYbCClFSkx52Ild1RcjoRyz8YZgwNvZeooIcZIvCfBM6U9W5273KGiY7WLc/oO4KKmFk17d7vMO4gNvhhw==}
    peerDependencies:
      cross-fetch: ^3.1.5
      eciesjs: ^0.3.16
      eventemitter2: ^6.4.7
      readable-stream: ^3.6.2
      socket.io-client: ^4.5.1
    dependencies:
      bufferutil: 4.0.8
      cross-fetch: 4.0.0
      date-fns: 2.30.0
      debug: 4.3.4
      eciesjs: 0.3.18
      eventemitter2: 6.4.9
      readable-stream: 3.6.2
      socket.io-client: 4.7.5
      utf-8-validate: 6.0.4
      uuid: 8.3.2
    transitivePeerDependencies:
      - supports-color
    dev: false

  /@metamask/sdk-install-modal-web@0.20.2(i18next@22.5.1)(react-dom@18.3.1)(react-i18next@13.5.0)(react-native@0.74.1)(react@18.3.1):
    resolution: {integrity: sha512-0QiaZhV15AGdN1zU2jfTI32eC3YkwEpzDfR9+oiZ9bd2G72c6lYBhTsmDGUd01aP6A+bqJR5PjI8Wh2AWtoLeA==}
    peerDependencies:
      i18next: 22.5.1
      react: ^18.2.0
      react-dom: ^18.2.0
      react-i18next: ^13.2.2
      react-native: '*'
    peerDependenciesMeta:
      react:
        optional: true
      react-dom:
        optional: true
      react-native:
        optional: true
    dependencies:
      i18next: 22.5.1
      qr-code-styling: 1.6.0-rc.1
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
      react-i18next: 13.5.0(i18next@23.11.5)(react-dom@18.3.1)(react-native@0.74.1)(react@18.3.1)
      react-native: 0.74.1(@babel/core@7.24.6)(@babel/preset-env@7.24.6)(react@18.3.1)
    dev: false

  /@metamask/sdk@0.20.3(react-dom@18.3.1)(react-i18next@13.5.0)(react-native@0.74.1)(react@18.3.1):
    resolution: {integrity: sha512-HZ9NwA+LxiXzuy0YWbWsuD4xejQtp85bhcCAf8UgpA/0dOyF3RS4dKDdBBXSyRgk3RWPjeJgHxioaH4CmBmiRA==}
    peerDependencies:
      react: ^18.2.0
      react-dom: ^18.2.0
    peerDependenciesMeta:
      react:
        optional: true
      react-dom:
        optional: true
    dependencies:
      '@metamask/onboarding': 1.0.1
      '@metamask/providers': 15.0.0
      '@metamask/sdk-communication-layer': 0.20.2(cross-fetch@4.0.0)(eciesjs@0.3.18)(eventemitter2@6.4.9)(readable-stream@3.6.2)(socket.io-client@4.7.5)
      '@metamask/sdk-install-modal-web': 0.20.2(i18next@22.5.1)(react-dom@18.3.1)(react-i18next@13.5.0)(react-native@0.74.1)(react@18.3.1)
      '@types/dom-screen-wake-lock': 1.0.3
      bowser: 2.11.0
      cross-fetch: 4.0.0
      debug: 4.3.4
      eciesjs: 0.3.18
      eth-rpc-errors: 4.0.3
      eventemitter2: 6.4.9
      i18next: 22.5.1
      i18next-browser-languagedetector: 7.1.0
      obj-multiplex: 1.0.0
      pump: 3.0.0
      qrcode-terminal-nooctal: 0.12.1
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
      react-native-webview: 11.26.1(react-native@0.74.1)(react@18.3.1)
      readable-stream: 3.6.2
      rollup-plugin-visualizer: 5.12.0
      socket.io-client: 4.7.5
      util: 0.12.5
      uuid: 8.3.2
    transitivePeerDependencies:
      - bufferutil
      - encoding
      - react-i18next
      - react-native
      - rollup
      - supports-color
      - utf-8-validate
    dev: false

  /@metamask/utils@5.0.2:
    resolution: {integrity: sha512-yfmE79bRQtnMzarnKfX7AEJBwFTxvTyw3nBQlu/5rmGXrjAeAMltoGxO62TFurxrQAFMNa/fEjIHNvungZp0+g==}
    engines: {node: '>=14.0.0'}
    dependencies:
      '@ethereumjs/tx': 4.2.0
      '@types/debug': 4.1.12
      debug: 4.3.4
      semver: 7.6.2
      superstruct: 1.0.4
    transitivePeerDependencies:
      - supports-color
    dev: false

  /@metamask/utils@8.4.0:
    resolution: {integrity: sha512-dbIc3C7alOe0agCuBHM1h71UaEaEqOk2W8rAtEn8QGz4haH2Qq7MoK6i7v2guzvkJVVh79c+QCzIqphC3KvrJg==}
    engines: {node: '>=16.0.0'}
    dependencies:
      '@ethereumjs/tx': 4.2.0
      '@noble/hashes': 1.4.0
      '@scure/base': 1.1.6
      '@types/debug': 4.1.12
      debug: 4.3.4
      pony-cause: 2.1.11
      semver: 7.6.2
      superstruct: 1.0.4
      uuid: 9.0.1
    transitivePeerDependencies:
      - supports-color
    dev: false

  /@motionone/animation@10.17.0:
    resolution: {integrity: sha512-ANfIN9+iq1kGgsZxs+Nz96uiNcPLGTXwfNo2Xz/fcJXniPYpaz/Uyrfa+7I5BPLxCP82sh7quVDudf1GABqHbg==}
    dependencies:
      '@motionone/easing': 10.17.0
      '@motionone/types': 10.17.0
      '@motionone/utils': 10.17.0
      tslib: 2.6.2
    dev: false

  /@motionone/dom@10.17.0:
    resolution: {integrity: sha512-cMm33swRlCX/qOPHWGbIlCl0K9Uwi6X5RiL8Ma6OrlJ/TP7Q+Np5GE4xcZkFptysFjMTi4zcZzpnNQGQ5D6M0Q==}
    dependencies:
      '@motionone/animation': 10.17.0
      '@motionone/generators': 10.17.0
      '@motionone/types': 10.17.0
      '@motionone/utils': 10.17.0
      hey-listen: 1.0.8
      tslib: 2.6.2
    dev: false

  /@motionone/easing@10.17.0:
    resolution: {integrity: sha512-Bxe2wSuLu/qxqW4rBFS5m9tMLOw+QBh8v5A7Z5k4Ul4sTj5jAOfZG5R0bn5ywmk+Fs92Ij1feZ5pmC4TeXA8Tg==}
    dependencies:
      '@motionone/utils': 10.17.0
      tslib: 2.6.2
    dev: false

  /@motionone/generators@10.17.0:
    resolution: {integrity: sha512-T6Uo5bDHrZWhIfxG/2Aut7qyWQyJIWehk6OB4qNvr/jwA/SRmixwbd7SOrxZi1z5rH3LIeFFBKK1xHnSbGPZSQ==}
    dependencies:
      '@motionone/types': 10.17.0
      '@motionone/utils': 10.17.0
      tslib: 2.6.2
    dev: false

  /@motionone/svelte@10.16.4:
    resolution: {integrity: sha512-zRVqk20lD1xqe+yEDZhMYgftsuHc25+9JSo+r0a0OWUJFocjSV9D/+UGhX4xgJsuwB9acPzXLr20w40VnY2PQA==}
    dependencies:
      '@motionone/dom': 10.17.0
      tslib: 2.6.2
    dev: false

  /@motionone/types@10.17.0:
    resolution: {integrity: sha512-EgeeqOZVdRUTEHq95Z3t8Rsirc7chN5xFAPMYFobx8TPubkEfRSm5xihmMUkbaR2ErKJTUw3347QDPTHIW12IA==}
    dev: false

  /@motionone/utils@10.17.0:
    resolution: {integrity: sha512-bGwrki4896apMWIj9yp5rAS2m0xyhxblg6gTB/leWDPt+pb410W8lYWsxyurX+DH+gO1zsQsfx2su/c1/LtTpg==}
    dependencies:
      '@motionone/types': 10.17.0
      hey-listen: 1.0.8
      tslib: 2.6.2
    dev: false

  /@motionone/vue@10.16.4:
    resolution: {integrity: sha512-z10PF9JV6SbjFq+/rYabM+8CVlMokgl8RFGvieSGNTmrkQanfHn+15XBrhG3BgUfvmTeSeyShfOHpG0i9zEdcg==}
    deprecated: Motion One for Vue is deprecated. Use Oku Motion instead https://oku-ui.com/motion
    dependencies:
      '@motionone/dom': 10.17.0
      tslib: 2.6.2
    dev: false

  /@noble/ciphers@0.2.0:
    resolution: {integrity: sha512-6YBxJDAapHSdd3bLDv6x2wRPwq4QFMUaB3HvljNBUTThDd12eSm7/3F+2lnfzx2jvM+S6Nsy0jEt9QbPqSwqRw==}
    dev: false

  /@noble/curves@1.1.0:
    resolution: {integrity: sha512-091oBExgENk/kGj3AZmtBDMpxQPDtxQABR2B9lb1JbVTs6ytdzZNwvhxQ4MWasRNEzlbEH8jCWFCwhF/Obj5AA==}
    dependencies:
      '@noble/hashes': 1.3.1
    dev: false

  /@noble/curves@1.2.0:
    resolution: {integrity: sha512-oYclrNgRaM9SsBUBVbb8M6DTV7ZHRTKugureoYEncY5c65HOmRzvSiTE3y5CYaPYJA/GVkrhXEoF0M3Ya9PMnw==}
    dependencies:
      '@noble/hashes': 1.3.2
    dev: false

  /@noble/curves@1.3.0:
    resolution: {integrity: sha512-t01iSXPuN+Eqzb4eBX0S5oubSqXbK/xXa1Ne18Hj8f9pStxztHCE2gfboSp/dZRLSqfuLpRK2nDXDK+W9puocA==}
    dependencies:
      '@noble/hashes': 1.3.3
    dev: false

  /@noble/hashes@1.3.1:
    resolution: {integrity: sha512-EbqwksQwz9xDRGfDST86whPBgM65E0OH/pCgqW0GBVzO22bNE+NuIbeTb714+IfSjU3aRk47EUvXIb5bTsenKA==}
    engines: {node: '>= 16'}
    dev: false

  /@noble/hashes@1.3.2:
    resolution: {integrity: sha512-MVC8EAQp7MvEcm30KWENFjgR+Mkmf+D189XJTkFIlwohU5hcBbn1ZkKq7KVTi2Hme3PMGF390DaL52beVrIihQ==}
    engines: {node: '>= 16'}
    dev: false

  /@noble/hashes@1.3.3:
    resolution: {integrity: sha512-V7/fPHgl+jsVPXqqeOzT8egNj2iBIVt+ECeMMG8TdcnTikP3oaBtUVqpT/gYCR68aEBJSF+XbYUxStjbFMqIIA==}
    engines: {node: '>= 16'}
    dev: false

  /@noble/hashes@1.4.0:
    resolution: {integrity: sha512-V1JJ1WTRUqHHrOSh597hURcMqVKVGL/ea3kv0gSnEdsEZ0/+VyPghM1lMNGc00z7CIQorSvbKpuJkxvuHbvdbg==}
    engines: {node: '>= 16'}
    dev: false

  /@nodelib/fs.scandir@2.1.5:
    resolution: {integrity: sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==}
    engines: {node: '>= 8'}
    dependencies:
      '@nodelib/fs.stat': 2.0.5
      run-parallel: 1.2.0
    dev: false

  /@nodelib/fs.stat@2.0.5:
    resolution: {integrity: sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==}
    engines: {node: '>= 8'}
    dev: false

  /@nodelib/fs.walk@1.2.8:
    resolution: {integrity: sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==}
    engines: {node: '>= 8'}
    dependencies:
      '@nodelib/fs.scandir': 2.1.5
      fastq: 1.17.1
    dev: false

  /@parcel/watcher-android-arm64@2.4.1:
    resolution: {integrity: sha512-LOi/WTbbh3aTn2RYddrO8pnapixAziFl6SMxHM69r3tvdSm94JtCenaKgk1GRg5FJ5wpMCpHeW+7yqPlvZv7kg==}
    engines: {node: '>= 10.0.0'}
    cpu: [arm64]
    os: [android]
    requiresBuild: true
    dev: false
    optional: true

  /@parcel/watcher-darwin-arm64@2.4.1:
    resolution: {integrity: sha512-ln41eihm5YXIY043vBrrHfn94SIBlqOWmoROhsMVTSXGh0QahKGy77tfEywQ7v3NywyxBBkGIfrWRHm0hsKtzA==}
    engines: {node: '>= 10.0.0'}
    cpu: [arm64]
    os: [darwin]
    requiresBuild: true
    dev: false
    optional: true

  /@parcel/watcher-darwin-x64@2.4.1:
    resolution: {integrity: sha512-yrw81BRLjjtHyDu7J61oPuSoeYWR3lDElcPGJyOvIXmor6DEo7/G2u1o7I38cwlcoBHQFULqF6nesIX3tsEXMg==}
    engines: {node: '>= 10.0.0'}
    cpu: [x64]
    os: [darwin]
    requiresBuild: true
    dev: false
    optional: true

  /@parcel/watcher-freebsd-x64@2.4.1:
    resolution: {integrity: sha512-TJa3Pex/gX3CWIx/Co8k+ykNdDCLx+TuZj3f3h7eOjgpdKM+Mnix37RYsYU4LHhiYJz3DK5nFCCra81p6g050w==}
    engines: {node: '>= 10.0.0'}
    cpu: [x64]
    os: [freebsd]
    requiresBuild: true
    dev: false
    optional: true

  /@parcel/watcher-linux-arm-glibc@2.4.1:
    resolution: {integrity: sha512-4rVYDlsMEYfa537BRXxJ5UF4ddNwnr2/1O4MHM5PjI9cvV2qymvhwZSFgXqbS8YoTk5i/JR0L0JDs69BUn45YA==}
    engines: {node: '>= 10.0.0'}
    cpu: [arm]
    os: [linux]
    requiresBuild: true
    dev: false
    optional: true

  /@parcel/watcher-linux-arm64-glibc@2.4.1:
    resolution: {integrity: sha512-BJ7mH985OADVLpbrzCLgrJ3TOpiZggE9FMblfO65PlOCdG++xJpKUJ0Aol74ZUIYfb8WsRlUdgrZxKkz3zXWYA==}
    engines: {node: '>= 10.0.0'}
    cpu: [arm64]
    os: [linux]
    requiresBuild: true
    dev: false
    optional: true

  /@parcel/watcher-linux-arm64-musl@2.4.1:
    resolution: {integrity: sha512-p4Xb7JGq3MLgAfYhslU2SjoV9G0kI0Xry0kuxeG/41UfpjHGOhv7UoUDAz/jb1u2elbhazy4rRBL8PegPJFBhA==}
    engines: {node: '>= 10.0.0'}
    cpu: [arm64]
    os: [linux]
    requiresBuild: true
    dev: false
    optional: true

  /@parcel/watcher-linux-x64-glibc@2.4.1:
    resolution: {integrity: sha512-s9O3fByZ/2pyYDPoLM6zt92yu6P4E39a03zvO0qCHOTjxmt3GHRMLuRZEWhWLASTMSrrnVNWdVI/+pUElJBBBg==}
    engines: {node: '>= 10.0.0'}
    cpu: [x64]
    os: [linux]
    requiresBuild: true
    dev: false
    optional: true

  /@parcel/watcher-linux-x64-musl@2.4.1:
    resolution: {integrity: sha512-L2nZTYR1myLNST0O632g0Dx9LyMNHrn6TOt76sYxWLdff3cB22/GZX2UPtJnaqQPdCRoszoY5rcOj4oMTtp5fQ==}
    engines: {node: '>= 10.0.0'}
    cpu: [x64]
    os: [linux]
    requiresBuild: true
    dev: false
    optional: true

  /@parcel/watcher-wasm@2.4.1:
    resolution: {integrity: sha512-/ZR0RxqxU/xxDGzbzosMjh4W6NdYFMqq2nvo2b8SLi7rsl/4jkL8S5stIikorNkdR50oVDvqb/3JT05WM+CRRA==}
    engines: {node: '>= 10.0.0'}
    dependencies:
      is-glob: 4.0.3
      micromatch: 4.0.7
      napi-wasm: 1.1.0
    dev: false
    bundledDependencies:
      - napi-wasm

  /@parcel/watcher-win32-arm64@2.4.1:
    resolution: {integrity: sha512-Uq2BPp5GWhrq/lcuItCHoqxjULU1QYEcyjSO5jqqOK8RNFDBQnenMMx4gAl3v8GiWa59E9+uDM7yZ6LxwUIfRg==}
    engines: {node: '>= 10.0.0'}
    cpu: [arm64]
    os: [win32]
    requiresBuild: true
    dev: false
    optional: true

  /@parcel/watcher-win32-ia32@2.4.1:
    resolution: {integrity: sha512-maNRit5QQV2kgHFSYwftmPBxiuK5u4DXjbXx7q6eKjq5dsLXZ4FJiVvlcw35QXzk0KrUecJmuVFbj4uV9oYrcw==}
    engines: {node: '>= 10.0.0'}
    cpu: [ia32]
    os: [win32]
    requiresBuild: true
    dev: false
    optional: true

  /@parcel/watcher-win32-x64@2.4.1:
    resolution: {integrity: sha512-+DvS92F9ezicfswqrvIRM2njcYJbd5mb9CUgtrHCHmvn7pPPa+nMDRu1o1bYYz/l5IB2NVGNJWiH7h1E58IF2A==}
    engines: {node: '>= 10.0.0'}
    cpu: [x64]
    os: [win32]
    requiresBuild: true
    dev: false
    optional: true

  /@parcel/watcher@2.4.1:
    resolution: {integrity: sha512-HNjmfLQEVRZmHRET336f20H/8kOozUGwk7yajvsonjNxbj2wBTK1WsQuHkD5yYh9RxFGL2EyDHryOihOwUoKDA==}
    engines: {node: '>= 10.0.0'}
    dependencies:
      detect-libc: 1.0.3
      is-glob: 4.0.3
      micromatch: 4.0.7
      node-addon-api: 7.1.0
    optionalDependencies:
      '@parcel/watcher-android-arm64': 2.4.1
      '@parcel/watcher-darwin-arm64': 2.4.1
      '@parcel/watcher-darwin-x64': 2.4.1
      '@parcel/watcher-freebsd-x64': 2.4.1
      '@parcel/watcher-linux-arm-glibc': 2.4.1
      '@parcel/watcher-linux-arm64-glibc': 2.4.1
      '@parcel/watcher-linux-arm64-musl': 2.4.1
      '@parcel/watcher-linux-x64-glibc': 2.4.1
      '@parcel/watcher-linux-x64-musl': 2.4.1
      '@parcel/watcher-win32-arm64': 2.4.1
      '@parcel/watcher-win32-ia32': 2.4.1
      '@parcel/watcher-win32-x64': 2.4.1
    dev: false

  /@rainbow-me/rainbowkit@2.1.1(@tanstack/react-query@5.40.0)(react-dom@18.3.1)(react@18.3.1)(viem@2.10.11)(wagmi@2.9.7):
    resolution: {integrity: sha512-iOn4m1CTv+ezzYpiA4QU+v6JFB94NY6h5ohpQi3Qt/qZXdHzp3NAKUrESQ10kFx2Xc4px80PKdggeES0UPZw0A==}
    engines: {node: '>=12.4'}
    peerDependencies:
      '@tanstack/react-query': '>=5.0.0'
      react: '>=18'
      react-dom: '>=18'
      viem: 2.x
      wagmi: ^2.9.0
    dependencies:
      '@tanstack/react-query': 5.40.0(react@18.3.1)
      '@vanilla-extract/css': 1.14.0
      '@vanilla-extract/dynamic': 2.1.0
      '@vanilla-extract/sprinkles': 1.6.1(@vanilla-extract/css@1.14.0)
      clsx: 2.1.0
      qrcode: 1.5.3
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
      react-remove-scroll: 2.5.7(react@18.3.1)
      ua-parser-js: 1.0.37
      viem: 2.10.11
      wagmi: 2.9.7(@tanstack/react-query@5.40.0)(react-dom@18.3.1)(react-i18next@13.5.0)(react-native@0.74.1)(react@18.3.1)(viem@2.10.11)
    transitivePeerDependencies:
      - '@types/react'
    dev: false

  /@react-native-community/cli-clean@13.6.6:
    resolution: {integrity: sha512-cBwJTwl0NyeA4nyMxbhkWZhxtILYkbU3TW3k8AXLg+iGphe0zikYMGB3T+haTvTc6alTyEFwPbimk9bGIqkjAQ==}
    dependencies:
      '@react-native-community/cli-tools': 13.6.6
      chalk: 4.1.2
      execa: 5.1.1
      fast-glob: 3.3.2
    transitivePeerDependencies:
      - encoding
    dev: false

  /@react-native-community/cli-config@13.6.6:
    resolution: {integrity: sha512-mbG425zCKr8JZhv/j11382arezwS/70juWMsn8j2lmrGTrP1cUdW0MF15CCIFtJsqyK3Qs+FTmqttRpq81QfSg==}
    dependencies:
      '@react-native-community/cli-tools': 13.6.6
      chalk: 4.1.2
      cosmiconfig: 5.2.1
      deepmerge: 4.3.1
      fast-glob: 3.3.2
      joi: 17.13.1
    transitivePeerDependencies:
      - encoding
    dev: false

  /@react-native-community/cli-debugger-ui@13.6.6:
    resolution: {integrity: sha512-Vv9u6eS4vKSDAvdhA0OiQHoA7y39fiPIgJ6biT32tN4avHDtxlc6TWZGiqv7g98SBvDWvoVAmdPLcRf3kU+c8g==}
    dependencies:
      serve-static: 1.15.0
    transitivePeerDependencies:
      - supports-color
    dev: false

  /@react-native-community/cli-doctor@13.6.6:
    resolution: {integrity: sha512-TWZb5g6EmQe2Ua2TEWNmyaEayvlWH4GmdD9ZC+p8EpKFpB1NpDGMK6sXbpb42TDvwZg5s4TDRplK0PBEA/SVDg==}
    dependencies:
      '@react-native-community/cli-config': 13.6.6
      '@react-native-community/cli-platform-android': 13.6.6
      '@react-native-community/cli-platform-apple': 13.6.6
      '@react-native-community/cli-platform-ios': 13.6.6
      '@react-native-community/cli-tools': 13.6.6
      chalk: 4.1.2
      command-exists: 1.2.9
      deepmerge: 4.3.1
      envinfo: 7.13.0
      execa: 5.1.1
      hermes-profile-transformer: 0.0.6
      node-stream-zip: 1.15.0
      ora: 5.4.1
      semver: 7.6.2
      strip-ansi: 5.2.0
      wcwidth: 1.0.1
      yaml: 2.4.2
    transitivePeerDependencies:
      - encoding
    dev: false

  /@react-native-community/cli-hermes@13.6.6:
    resolution: {integrity: sha512-La5Ie+NGaRl3klei6WxKoOxmCUSGGxpOk6vU5pEGf0/O7ky+Ay0io+zXYUZqlNMi/cGpO7ZUijakBYOB/uyuFg==}
    dependencies:
      '@react-native-community/cli-platform-android': 13.6.6
      '@react-native-community/cli-tools': 13.6.6
      chalk: 4.1.2
      hermes-profile-transformer: 0.0.6
    transitivePeerDependencies:
      - encoding
    dev: false

  /@react-native-community/cli-platform-android@13.6.6:
    resolution: {integrity: sha512-/tMwkBeNxh84syiSwNlYtmUz/Ppc+HfKtdopL/5RB+fd3SV1/5/NPNjMlyLNgFKnpxvKCInQ7dnl6jGHJjeHjg==}
    dependencies:
      '@react-native-community/cli-tools': 13.6.6
      chalk: 4.1.2
      execa: 5.1.1
      fast-glob: 3.3.2
      fast-xml-parser: 4.4.0
      logkitty: 0.7.1
    transitivePeerDependencies:
      - encoding
    dev: false

  /@react-native-community/cli-platform-apple@13.6.6:
    resolution: {integrity: sha512-bOmSSwoqNNT3AmCRZXEMYKz1Jf1l2F86Nhs7qBcXdY/sGiJ+Flng564LOqvdAlVLTbkgz47KjNKCS2pP4Jg0Mg==}
    dependencies:
      '@react-native-community/cli-tools': 13.6.6
      chalk: 4.1.2
      execa: 5.1.1
      fast-glob: 3.3.2
      fast-xml-parser: 4.4.0
      ora: 5.4.1
    transitivePeerDependencies:
      - encoding
    dev: false

  /@react-native-community/cli-platform-ios@13.6.6:
    resolution: {integrity: sha512-vjDnRwhlSN5ryqKTas6/DPkxuouuyFBAqAROH4FR1cspTbn6v78JTZKDmtQy9JMMo7N5vZj1kASU5vbFep9IOQ==}
    dependencies:
      '@react-native-community/cli-platform-apple': 13.6.6
    transitivePeerDependencies:
      - encoding
    dev: false

  /@react-native-community/cli-server-api@13.6.6:
    resolution: {integrity: sha512-ZtCXxoFlM7oDv3iZ3wsrT3SamhtUJuIkX2WePLPlN5bcbq7zimbPm2lHyicNJtpcGQ5ymsgpUWPCNZsWQhXBqQ==}
    dependencies:
      '@react-native-community/cli-debugger-ui': 13.6.6
      '@react-native-community/cli-tools': 13.6.6
      compression: 1.7.4
      connect: 3.7.0
      errorhandler: 1.5.1
      nocache: 3.0.4
      pretty-format: 26.6.2
      serve-static: 1.15.0
      ws: 6.2.2
    transitivePeerDependencies:
      - bufferutil
      - encoding
      - supports-color
      - utf-8-validate
    dev: false

  /@react-native-community/cli-tools@13.6.6:
    resolution: {integrity: sha512-ptOnn4AJczY5njvbdK91k4hcYazDnGtEPrqIwEI+k/CTBHNdb27Rsm2OZ7ye6f7otLBqF8gj/hK6QzJs8CEMgw==}
    dependencies:
      appdirsjs: 1.2.7
      chalk: 4.1.2
      execa: 5.1.1
      find-up: 5.0.0
      mime: 2.6.0
      node-fetch: 2.7.0
      open: 6.4.0
      ora: 5.4.1
      semver: 7.6.2
      shell-quote: 1.8.1
      sudo-prompt: 9.2.1
    transitivePeerDependencies:
      - encoding
    dev: false

  /@react-native-community/cli-types@13.6.6:
    resolution: {integrity: sha512-733iaYzlmvNK7XYbnWlMjdE+2k0hlTBJW071af/xb6Bs+hbJqBP9c03FZuYH2hFFwDDntwj05bkri/P7VgSxug==}
    dependencies:
      joi: 17.13.1
    dev: false

  /@react-native-community/cli@13.6.6:
    resolution: {integrity: sha512-IqclB7VQ84ye8Fcs89HOpOscY4284VZg2pojHNl8H0Lzd4DadXJWQoxC7zWm8v2f8eyeX2kdhxp2ETD5tceIgA==}
    engines: {node: '>=18'}
    hasBin: true
    dependencies:
      '@react-native-community/cli-clean': 13.6.6
      '@react-native-community/cli-config': 13.6.6
      '@react-native-community/cli-debugger-ui': 13.6.6
      '@react-native-community/cli-doctor': 13.6.6
      '@react-native-community/cli-hermes': 13.6.6
      '@react-native-community/cli-server-api': 13.6.6
      '@react-native-community/cli-tools': 13.6.6
      '@react-native-community/cli-types': 13.6.6
      chalk: 4.1.2
      commander: 9.5.0
      deepmerge: 4.3.1
      execa: 5.1.1
      find-up: 4.1.0
      fs-extra: 8.1.0
      graceful-fs: 4.2.11
      prompts: 2.4.2
      semver: 7.6.2
    transitivePeerDependencies:
      - bufferutil
      - encoding
      - supports-color
      - utf-8-validate
    dev: false

  /@react-native/assets-registry@0.74.83:
    resolution: {integrity: sha512-2vkLMVnp+YTZYTNSDIBZojSsjz8sl5PscP3j4GcV6idD8V978SZfwFlk8K0ti0BzRs11mzL0Pj17km597S/eTQ==}
    engines: {node: '>=18'}
    dev: false

  /@react-native/babel-plugin-codegen@0.74.83(@babel/preset-env@7.24.6):
    resolution: {integrity: sha512-+S0st3t4Ro00bi9gjT1jnK8qTFOU+CwmziA7U9odKyWrCoRJrgmrvogq/Dr1YXlpFxexiGIupGut1VHxr+fxJA==}
    engines: {node: '>=18'}
    dependencies:
      '@react-native/codegen': 0.74.83(@babel/preset-env@7.24.6)
    transitivePeerDependencies:
      - '@babel/preset-env'
      - supports-color
    dev: false

  /@react-native/babel-preset@0.74.83(@babel/core@7.24.6)(@babel/preset-env@7.24.6):
    resolution: {integrity: sha512-KJuu3XyVh3qgyUer+rEqh9a/JoUxsDOzkJNfRpDyXiAyjDRoVch60X/Xa/NcEQ93iCVHAWs0yQ+XGNGIBCYE6g==}
    engines: {node: '>=18'}
    peerDependencies:
      '@babel/core': '*'
    dependencies:
      '@babel/core': 7.24.6
      '@babel/plugin-proposal-async-generator-functions': 7.20.7(@babel/core@7.24.6)
      '@babel/plugin-proposal-class-properties': 7.18.6(@babel/core@7.24.6)
      '@babel/plugin-proposal-export-default-from': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-proposal-logical-assignment-operators': 7.20.7(@babel/core@7.24.6)
      '@babel/plugin-proposal-nullish-coalescing-operator': 7.18.6(@babel/core@7.24.6)
      '@babel/plugin-proposal-numeric-separator': 7.18.6(@babel/core@7.24.6)
      '@babel/plugin-proposal-object-rest-spread': 7.20.7(@babel/core@7.24.6)
      '@babel/plugin-proposal-optional-catch-binding': 7.18.6(@babel/core@7.24.6)
      '@babel/plugin-proposal-optional-chaining': 7.21.0(@babel/core@7.24.6)
      '@babel/plugin-syntax-dynamic-import': 7.8.3(@babel/core@7.24.6)
      '@babel/plugin-syntax-export-default-from': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-syntax-flow': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-syntax-nullish-coalescing-operator': 7.8.3(@babel/core@7.24.6)
      '@babel/plugin-syntax-optional-chaining': 7.8.3(@babel/core@7.24.6)
      '@babel/plugin-transform-arrow-functions': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-async-to-generator': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-block-scoping': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-classes': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-computed-properties': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-destructuring': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-flow-strip-types': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-function-name': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-literals': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-modules-commonjs': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-named-capturing-groups-regex': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-parameters': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-private-methods': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-private-property-in-object': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-react-display-name': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-react-jsx': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-react-jsx-self': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-react-jsx-source': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-runtime': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-shorthand-properties': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-spread': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-sticky-regex': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-typescript': 7.24.6(@babel/core@7.24.6)
      '@babel/plugin-transform-unicode-regex': 7.24.6(@babel/core@7.24.6)
      '@babel/template': 7.24.6
      '@react-native/babel-plugin-codegen': 0.74.83(@babel/preset-env@7.24.6)
      babel-plugin-transform-flow-enums: 0.0.2(@babel/core@7.24.6)
      react-refresh: 0.14.2
    transitivePeerDependencies:
      - '@babel/preset-env'
      - supports-color
    dev: false

  /@react-native/codegen@0.74.83(@babel/preset-env@7.24.6):
    resolution: {integrity: sha512-GgvgHS3Aa2J8/mp1uC/zU8HuTh8ZT5jz7a4mVMWPw7+rGyv70Ba8uOVBq6UH2Q08o617IATYc+0HfyzAfm4n0w==}
    engines: {node: '>=18'}
    peerDependencies:
      '@babel/preset-env': ^7.1.6
    dependencies:
      '@babel/parser': 7.24.6
      '@babel/preset-env': 7.24.6(@babel/core@7.24.6)
      glob: 7.2.3
      hermes-parser: 0.19.1
      invariant: 2.2.4
      jscodeshift: 0.14.0(@babel/preset-env@7.24.6)
      mkdirp: 0.5.6
      nullthrows: 1.1.1
    transitivePeerDependencies:
      - supports-color
    dev: false

  /@react-native/community-cli-plugin@0.74.83(@babel/core@7.24.6)(@babel/preset-env@7.24.6):
    resolution: {integrity: sha512-7GAFjFOg1mFSj8bnFNQS4u8u7+QtrEeflUIDVZGEfBZQ3wMNI5ycBzbBGycsZYiq00Xvoc6eKFC7kvIaqeJpUQ==}
    engines: {node: '>=18'}
    dependencies:
      '@react-native-community/cli-server-api': 13.6.6
      '@react-native-community/cli-tools': 13.6.6
      '@react-native/dev-middleware': 0.74.83
      '@react-native/metro-babel-transformer': 0.74.83(@babel/core@7.24.6)(@babel/preset-env@7.24.6)
      chalk: 4.1.2
      execa: 5.1.1
      metro: 0.80.9
      metro-config: 0.80.9
      metro-core: 0.80.9
      node-fetch: 2.7.0
      querystring: 0.2.1
      readline: 1.3.0
    transitivePeerDependencies:
      - '@babel/core'
      - '@babel/preset-env'
      - bufferutil
      - encoding
      - supports-color
      - utf-8-validate
    dev: false

  /@react-native/debugger-frontend@0.74.83:
    resolution: {integrity: sha512-RGQlVUegBRxAUF9c1ss1ssaHZh6CO+7awgtI9sDeU0PzDZY/40ImoPD5m0o0SI6nXoVzbPtcMGzU+VO590pRfA==}
    engines: {node: '>=18'}
    dev: false

  /@react-native/dev-middleware@0.74.83:
    resolution: {integrity: sha512-UH8iriqnf7N4Hpi20D7M2FdvSANwTVStwFCSD7VMU9agJX88Yk0D1T6Meh2RMhUu4kY2bv8sTkNRm7LmxvZqgA==}
    engines: {node: '>=18'}
    dependencies:
      '@isaacs/ttlcache': 1.4.1
      '@react-native/debugger-frontend': 0.74.83
      '@rnx-kit/chromium-edge-launcher': 1.0.0
      chrome-launcher: 0.15.2
      connect: 3.7.0
      debug: 2.6.9
      node-fetch: 2.7.0
      nullthrows: 1.1.1
      open: 7.4.2
      selfsigned: 2.4.1
      serve-static: 1.15.0
      temp-dir: 2.0.0
      ws: 6.2.2
    transitivePeerDependencies:
      - bufferutil
      - encoding
      - supports-color
      - utf-8-validate
    dev: false

  /@react-native/gradle-plugin@0.74.83:
    resolution: {integrity: sha512-Pw2BWVyOHoBuJVKxGVYF6/GSZRf6+v1Ygc+ULGz5t20N8qzRWPa2fRZWqoxsN7TkNLPsECYY8gooOl7okOcPAQ==}
    engines: {node: '>=18'}
    dev: false

  /@react-native/js-polyfills@0.74.83:
    resolution: {integrity: sha512-/t74n8r6wFhw4JEoOj3bN71N1NDLqaawB75uKAsSjeCwIR9AfCxlzZG0etsXtOexkY9KMeZIQ7YwRPqUdNXuqw==}
    engines: {node: '>=18'}
    dev: false

  /@react-native/metro-babel-transformer@0.74.83(@babel/core@7.24.6)(@babel/preset-env@7.24.6):
    resolution: {integrity: sha512-hGdx5N8diu8y+GW/ED39vTZa9Jx1di2ZZ0aapbhH4egN1agIAusj5jXTccfNBwwWF93aJ5oVbRzfteZgjbutKg==}
    engines: {node: '>=18'}
    peerDependencies:
      '@babel/core': '*'
    dependencies:
      '@babel/core': 7.24.6
      '@react-native/babel-preset': 0.74.83(@babel/core@7.24.6)(@babel/preset-env@7.24.6)
      hermes-parser: 0.19.1
      nullthrows: 1.1.1
    transitivePeerDependencies:
      - '@babel/preset-env'
      - supports-color
    dev: false

  /@react-native/normalize-colors@0.74.83:
    resolution: {integrity: sha512-jhCY95gRDE44qYawWVvhTjTplW1g+JtKTKM3f8xYT1dJtJ8QWv+gqEtKcfmOHfDkSDaMKG0AGBaDTSK8GXLH8Q==}
    dev: false

  /@react-native/virtualized-lists@0.74.83(react-native@0.74.1)(react@18.3.1):
    resolution: {integrity: sha512-rmaLeE34rj7py4FxTod7iMTC7BAsm+HrGA8WxYmEJeyTV7WSaxAkosKoYBz8038mOiwnG9VwA/7FrB6bEQvn1A==}
    engines: {node: '>=18'}
    peerDependencies:
      '@types/react': ^18.2.6
      react: '*'
      react-native: '*'
    peerDependenciesMeta:
      '@types/react':
        optional: true
    dependencies:
      invariant: 2.2.4
      nullthrows: 1.1.1
      react: 18.3.1
      react-native: 0.74.1(@babel/core@7.24.6)(@babel/preset-env@7.24.6)(react@18.3.1)
    dev: false

  /@rnx-kit/chromium-edge-launcher@1.0.0:
    resolution: {integrity: sha512-lzD84av1ZQhYUS+jsGqJiCMaJO2dn9u+RTT9n9q6D3SaKVwWqv+7AoRKqBu19bkwyE+iFRl1ymr40QS90jVFYg==}
    engines: {node: '>=14.15'}
    dependencies:
      '@types/node': 18.19.33
      escape-string-regexp: 4.0.0
      is-wsl: 2.2.0
      lighthouse-logger: 1.4.2
      mkdirp: 1.0.4
      rimraf: 3.0.2
    transitivePeerDependencies:
      - supports-color
    dev: false

  /@safe-global/safe-apps-provider@0.18.1:
    resolution: {integrity: sha512-V4a05A3EgJcriqtDoJklDz1BOinWhC6P0hjUSxshA4KOZM7rGPCTto/usXs09zr1vvL28evl/NldSTv97j2bmg==}
    dependencies:
      '@safe-global/safe-apps-sdk': 8.1.0
      events: 3.3.0
    transitivePeerDependencies:
      - bufferutil
      - typescript
      - utf-8-validate
      - zod
    dev: false

  /@safe-global/safe-apps-sdk@8.1.0:
    resolution: {integrity: sha512-XJbEPuaVc7b9n23MqlF6c+ToYIS3f7P2Sel8f3cSBQ9WORE4xrSuvhMpK9fDSFqJ7by/brc+rmJR/5HViRr0/w==}
    dependencies:
      '@safe-global/safe-gateway-typescript-sdk': 3.21.1
      viem: 1.21.4
    transitivePeerDependencies:
      - bufferutil
      - typescript
      - utf-8-validate
      - zod
    dev: false

  /@safe-global/safe-gateway-typescript-sdk@3.21.1:
    resolution: {integrity: sha512-7nakIjcRSs6781LkizYpIfXh1DYlkUDqyALciqz/BjFU/S97sVjZdL4cuKsG9NEarytE+f6p0Qbq2Bo1aocVUA==}
    engines: {node: '>=16'}
    dev: false

  /@scure/base@1.1.1:
    resolution: {integrity: sha512-ZxOhsSyxYwLJj3pLZCefNitxsj093tb2vq90mp2txoYeBqbcjDjqFhyM8eUjq/uFm6zJ+mUuqxlS2FkuSY1MTA==}
    dev: false

  /@scure/base@1.1.6:
    resolution: {integrity: sha512-ok9AWwhcgYuGG3Zfhyqg+zwl+Wn5uE+dwC0NV/2qQkx4dABbb/bx96vWu8NSj+BNjjSjno+JRYRjle1jV08k3g==}
    dev: false

  /@scure/bip32@1.3.1:
    resolution: {integrity: sha512-osvveYtyzdEVbt3OfwwXFr4P2iVBL5u1Q3q4ONBfDY/UpOuXmOlbgwc1xECEboY8wIays8Yt6onaWMUdUbfl0A==}
    dependencies:
      '@noble/curves': 1.1.0
      '@noble/hashes': 1.3.3
      '@scure/base': 1.1.6
    dev: false

  /@scure/bip32@1.3.2:
    resolution: {integrity: sha512-N1ZhksgwD3OBlwTv3R6KFEcPojl/W4ElJOeCZdi+vuI5QmTFwLq3OFf2zd2ROpKvxFdgZ6hUpb0dx9bVNEwYCA==}
    dependencies:
      '@noble/curves': 1.2.0
      '@noble/hashes': 1.3.3
      '@scure/base': 1.1.6
    dev: false

  /@scure/bip32@1.3.3:
    resolution: {integrity: sha512-LJaN3HwRbfQK0X1xFSi0Q9amqOgzQnnDngIt+ZlsBC3Bm7/nE7K0kwshZHyaru79yIVRv/e1mQAjZyuZG6jOFQ==}
    dependencies:
      '@noble/curves': 1.3.0
      '@noble/hashes': 1.3.3
      '@scure/base': 1.1.6
    dev: false

  /@scure/bip39@1.2.1:
    resolution: {integrity: sha512-Z3/Fsz1yr904dduJD0NpiyRHhRYHdcnyh73FZWiV+/qhWi83wNJ3NWolYqCEN+ZWsUz2TWwajJggcRE9r1zUYg==}
    dependencies:
      '@noble/hashes': 1.3.3
      '@scure/base': 1.1.6
    dev: false

  /@scure/bip39@1.2.2:
    resolution: {integrity: sha512-HYf9TUXG80beW+hGAt3TRM8wU6pQoYur9iNypTROm42dorCGmLnFe3eWjz3gOq6G62H2WRh0FCzAR1PI+29zIA==}
    dependencies:
      '@noble/hashes': 1.3.3
      '@scure/base': 1.1.6
    dev: false

  /@sideway/address@4.1.5:
    resolution: {integrity: sha512-IqO/DUQHUkPeixNQ8n0JA6102hT9CmaljNTPmQ1u8MEhBo/R4Q8eKLN/vGZxuebwOroDB4cbpjheD4+/sKFK4Q==}
    dependencies:
      '@hapi/hoek': 9.3.0
    dev: false

  /@sideway/formula@3.0.1:
    resolution: {integrity: sha512-/poHZJJVjx3L+zVD6g9KgHfYnb443oi7wLu/XKojDviHy6HOEOA6z1Trk5aR1dGcmPenJEgb2sK2I80LeS3MIg==}
    dev: false

  /@sideway/pinpoint@2.0.0:
    resolution: {integrity: sha512-RNiOoTPkptFtSVzQevY/yWtZwf/RxyVnPy/OcA9HBM3MlGDnBEYL5B41H0MTn0Uec8Hi+2qUtTfG2WWZBmMejQ==}
    dev: false

  /@sinclair/typebox@0.27.8:
    resolution: {integrity: sha512-+Fj43pSMwJs4KRrH/938Uf+uAELIgVBmQzg/q1YG10djyfA3TnrU8N8XzqCh/okZdszqBQTZf96idMfE5lnwTA==}
    dev: false

  /@sinonjs/commons@3.0.1:
    resolution: {integrity: sha512-K3mCHKQ9sVh8o1C9cxkwxaOmXoAMlDxC1mYyHrjqOWEcBjYr76t96zL2zlj5dUGZ3HSw240X1qgH3Mjf1yJWpQ==}
    dependencies:
      type-detect: 4.0.8
    dev: false

  /@sinonjs/fake-timers@10.3.0:
    resolution: {integrity: sha512-V4BG07kuYSUkTCSBHG8G8TNhM+F19jXFWnQtzj+we8DrkpSBCee9Z3Ms8yiGer/dlmhe35/Xdgyo3/0rQKg7YA==}
    dependencies:
      '@sinonjs/commons': 3.0.1
    dev: false

  /@socket.io/component-emitter@3.1.2:
    resolution: {integrity: sha512-9BCxFwvbGg/RsZK9tjXd8s4UcwR0MWeFQ1XEKIQVVvAGJyINdrqKMcTRyLoK8Rse1GjzLV9cwjWV1olXRWEXVA==}
    dev: false

  /@stablelib/aead@1.0.1:
    resolution: {integrity: sha512-q39ik6sxGHewqtO0nP4BuSe3db5G1fEJE8ukvngS2gLkBXyy6E7pLubhbYgnkDFv6V8cWaxcE4Xn0t6LWcJkyg==}
    dev: false

  /@stablelib/binary@1.0.1:
    resolution: {integrity: sha512-ClJWvmL6UBM/wjkvv/7m5VP3GMr9t0osr4yVgLZsLCOz4hGN9gIAFEqnJ0TsSMAN+n840nf2cHZnA5/KFqHC7Q==}
    dependencies:
      '@stablelib/int': 1.0.1
    dev: false

  /@stablelib/bytes@1.0.1:
    resolution: {integrity: sha512-Kre4Y4kdwuqL8BR2E9hV/R5sOrUj6NanZaZis0V6lX5yzqC3hBuVSDXUIBqQv/sCpmuWRiHLwqiT1pqqjuBXoQ==}
    dev: false

  /@stablelib/chacha20poly1305@1.0.1:
    resolution: {integrity: sha512-MmViqnqHd1ymwjOQfghRKw2R/jMIGT3wySN7cthjXCBdO+qErNPUBnRzqNpnvIwg7JBCg3LdeCZZO4de/yEhVA==}
    dependencies:
      '@stablelib/aead': 1.0.1
      '@stablelib/binary': 1.0.1
      '@stablelib/chacha': 1.0.1
      '@stablelib/constant-time': 1.0.1
      '@stablelib/poly1305': 1.0.1
      '@stablelib/wipe': 1.0.1
    dev: false

  /@stablelib/chacha@1.0.1:
    resolution: {integrity: sha512-Pmlrswzr0pBzDofdFuVe1q7KdsHKhhU24e8gkEwnTGOmlC7PADzLVxGdn2PoNVBBabdg0l/IfLKg6sHAbTQugg==}
    dependencies:
      '@stablelib/binary': 1.0.1
      '@stablelib/wipe': 1.0.1
    dev: false

  /@stablelib/constant-time@1.0.1:
    resolution: {integrity: sha512-tNOs3uD0vSJcK6z1fvef4Y+buN7DXhzHDPqRLSXUel1UfqMB1PWNsnnAezrKfEwTLpN0cGH2p9NNjs6IqeD0eg==}
    dev: false

  /@stablelib/ed25519@1.0.3:
    resolution: {integrity: sha512-puIMWaX9QlRsbhxfDc5i+mNPMY+0TmQEskunY1rZEBPi1acBCVQAhnsk/1Hk50DGPtVsZtAWQg4NHGlVaO9Hqg==}
    dependencies:
      '@stablelib/random': 1.0.2
      '@stablelib/sha512': 1.0.1
      '@stablelib/wipe': 1.0.1
    dev: false

  /@stablelib/hash@1.0.1:
    resolution: {integrity: sha512-eTPJc/stDkdtOcrNMZ6mcMK1e6yBbqRBaNW55XA1jU8w/7QdnCF0CmMmOD1m7VSkBR44PWrMHU2l6r8YEQHMgg==}
    dev: false

  /@stablelib/hkdf@1.0.1:
    resolution: {integrity: sha512-SBEHYE16ZXlHuaW5RcGk533YlBj4grMeg5TooN80W3NpcHRtLZLLXvKyX0qcRFxf+BGDobJLnwkvgEwHIDBR6g==}
    dependencies:
      '@stablelib/hash': 1.0.1
      '@stablelib/hmac': 1.0.1
      '@stablelib/wipe': 1.0.1
    dev: false

  /@stablelib/hmac@1.0.1:
    resolution: {integrity: sha512-V2APD9NSnhVpV/QMYgCVMIYKiYG6LSqw1S65wxVoirhU/51ACio6D4yDVSwMzuTJXWZoVHbDdINioBwKy5kVmA==}
    dependencies:
      '@stablelib/constant-time': 1.0.1
      '@stablelib/hash': 1.0.1
      '@stablelib/wipe': 1.0.1
    dev: false

  /@stablelib/int@1.0.1:
    resolution: {integrity: sha512-byr69X/sDtDiIjIV6m4roLVWnNNlRGzsvxw+agj8CIEazqWGOQp2dTYgQhtyVXV9wpO6WyXRQUzLV/JRNumT2w==}
    dev: false

  /@stablelib/keyagreement@1.0.1:
    resolution: {integrity: sha512-VKL6xBwgJnI6l1jKrBAfn265cspaWBPAPEc62VBQrWHLqVgNRE09gQ/AnOEyKUWrrqfD+xSQ3u42gJjLDdMDQg==}
    dependencies:
      '@stablelib/bytes': 1.0.1
    dev: false

  /@stablelib/poly1305@1.0.1:
    resolution: {integrity: sha512-1HlG3oTSuQDOhSnLwJRKeTRSAdFNVB/1djy2ZbS35rBSJ/PFqx9cf9qatinWghC2UbfOYD8AcrtbUQl8WoxabA==}
    dependencies:
      '@stablelib/constant-time': 1.0.1
      '@stablelib/wipe': 1.0.1
    dev: false

  /@stablelib/random@1.0.2:
    resolution: {integrity: sha512-rIsE83Xpb7clHPVRlBj8qNe5L8ISQOzjghYQm/dZ7VaM2KHYwMW5adjQjrzTZCchFnNCNhkwtnOBa9HTMJCI8w==}
    dependencies:
      '@stablelib/binary': 1.0.1
      '@stablelib/wipe': 1.0.1
    dev: false

  /@stablelib/sha256@1.0.1:
    resolution: {integrity: sha512-GIIH3e6KH+91FqGV42Kcj71Uefd/QEe7Dy42sBTeqppXV95ggCcxLTk39bEr+lZfJmp+ghsR07J++ORkRELsBQ==}
    dependencies:
      '@stablelib/binary': 1.0.1
      '@stablelib/hash': 1.0.1
      '@stablelib/wipe': 1.0.1
    dev: false

  /@stablelib/sha512@1.0.1:
    resolution: {integrity: sha512-13gl/iawHV9zvDKciLo1fQ8Bgn2Pvf7OV6amaRVKiq3pjQ3UmEpXxWiAfV8tYjUpeZroBxtyrwtdooQT/i3hzw==}
    dependencies:
      '@stablelib/binary': 1.0.1
      '@stablelib/hash': 1.0.1
      '@stablelib/wipe': 1.0.1
    dev: false

  /@stablelib/wipe@1.0.1:
    resolution: {integrity: sha512-WfqfX/eXGiAd3RJe4VU2snh/ZPwtSjLG4ynQ/vYzvghTh7dHFcI1wl+nrkWG6lGhukOxOsUHfv8dUXr58D0ayg==}
    dev: false

  /@stablelib/x25519@1.0.3:
    resolution: {integrity: sha512-KnTbKmUhPhHavzobclVJQG5kuivH+qDLpe84iRqX3CLrKp881cF160JvXJ+hjn1aMyCwYOKeIZefIH/P5cJoRw==}
    dependencies:
      '@stablelib/keyagreement': 1.0.1
      '@stablelib/random': 1.0.2
      '@stablelib/wipe': 1.0.1
    dev: false

  /@tanstack/query-core@5.40.0:
    resolution: {integrity: sha512-eD8K8jsOIq0Z5u/QbvOmfvKKE/XC39jA7yv4hgpl/1SRiU+J8QCIwgM/mEHuunQsL87dcvnHqSVLmf9pD4CiaA==}
    dev: false

  /@tanstack/react-query@5.40.0(react@18.3.1):
    resolution: {integrity: sha512-iv/W0Axc4aXhFzkrByToE1JQqayxTPNotCoSCnarR/A1vDIHaoKpg7FTIfP3Ev2mbKn1yrxq0ZKYUdLEJxs6Tg==}
    peerDependencies:
      react: ^18.0.0
    dependencies:
      '@tanstack/query-core': 5.40.0
      react: 18.3.1
    dev: false

  /@types/debug@4.1.12:
    resolution: {integrity: sha512-vIChWdVG3LG1SMxEvI/AK+FWJthlrqlTu7fbrlywTkkaONwk/UAGaULXRlf8vkzFBLVm0zkMdCquhL5aOjhXPQ==}
    dependencies:
      '@types/ms': 0.7.34
    dev: false

  /@types/dom-screen-wake-lock@1.0.3:
    resolution: {integrity: sha512-3Iten7X3Zgwvk6kh6/NRdwN7WbZ760YgFCsF5AxDifltUQzW1RaW+WRmcVtgwFzLjaNu64H+0MPJ13yRa8g3Dw==}
    dev: false

  /@types/istanbul-lib-coverage@2.0.6:
    resolution: {integrity: sha512-2QF/t/auWm0lsy8XtKVPG19v3sSOQlJe/YHZgfjb/KBBHOGSV+J2q/S671rcq9uTBrLAXmZpqJiaQbMT+zNU1w==}
    dev: false

  /@types/istanbul-lib-report@3.0.3:
    resolution: {integrity: sha512-NQn7AHQnk/RSLOxrBbGyJM/aVQ+pjj5HCgasFxc0K/KhoATfQ/47AyUl15I2yBUpihjmas+a+VJBOqecrFH+uA==}
    dependencies:
      '@types/istanbul-lib-coverage': 2.0.6
    dev: false

  /@types/istanbul-reports@3.0.4:
    resolution: {integrity: sha512-pk2B1NWalF9toCRu6gjBzR69syFjP4Od8WRAX+0mmf9lAjCRicLOWc+ZrxZHx/0XRjotgkF9t6iaMJ+aXcOdZQ==}
    dependencies:
      '@types/istanbul-lib-report': 3.0.3
    dev: false

  /@types/ms@0.7.34:
    resolution: {integrity: sha512-nG96G3Wp6acyAgJqGasjODb+acrI7KltPiRxzHPXnP3NgI28bpQDRv53olbqGXbfcgF5aiiHmO3xpwEpS5Ld9g==}
    dev: false

  /@types/node-forge@1.3.11:
    resolution: {integrity: sha512-FQx220y22OKNTqaByeBGqHWYz4cl94tpcxeFdvBo3wjG6XPBuZ0BNgNZRV5J5TFmmcsJ4IzsLkmGRiQbnYsBEQ==}
    dependencies:
      '@types/node': 20.12.12
    dev: false

  /@types/node@18.19.33:
    resolution: {integrity: sha512-NR9+KrpSajr2qBVp/Yt5TU/rp+b5Mayi3+OlMlcg2cVCfRmcG5PWZ7S4+MG9PZ5gWBoc9Pd0BKSRViuBCRPu0A==}
    dependencies:
      undici-types: 5.26.5
    dev: false

  /@types/node@20.12.12:
    resolution: {integrity: sha512-eWLDGF/FOSPtAvEqeRAQ4C8LSA7M1I7i0ky1I8U7kD1J5ITyW3AsRhQrKVoWf5pFKZ2kILsEGJhsI9r93PYnOw==}
    dependencies:
      undici-types: 5.26.5
    dev: false

  /@types/secp256k1@4.0.6:
    resolution: {integrity: sha512-hHxJU6PAEUn0TP4S/ZOzuTUvJWuZ6eIKeNKb5RBpODvSl6hp1Wrw4s7ATY50rklRCScUDpHzVA/DQdSjJ3UoYQ==}
    dependencies:
      '@types/node': 20.12.12
    dev: false

  /@types/stack-utils@2.0.3:
    resolution: {integrity: sha512-9aEbYZ3TbYMznPdcdr3SmIrLXwC/AKZXQeCf9Pgao5CKb8CyHuEX5jzWPTkvregvhRJHcpRO6BFoGW9ycaOkYw==}
    dev: false

  /@types/trusted-types@2.0.7:
    resolution: {integrity: sha512-ScaPdn1dQczgbl0QFTeTOmVHFULt394XJgOQNoyVhZ6r2vLnMLJfBPd53SB52T/3G36VI1/g2MZaX0cwDuXsfw==}
    dev: false

  /@types/yargs-parser@21.0.3:
    resolution: {integrity: sha512-I4q9QU9MQv4oEOz4tAHJtNz1cwuLxn2F3xcc2iV5WdqLPpUnj30aUuxt1mAxYTG+oe8CZMV/+6rU4S4gRDzqtQ==}
    dev: false

  /@types/yargs@15.0.19:
    resolution: {integrity: sha512-2XUaGVmyQjgyAZldf0D0c14vvo/yv0MhQBSTJcejMMaitsn3nxCB6TmH4G0ZQf+uxROOa9mpanoSm8h6SG/1ZA==}
    dependencies:
      '@types/yargs-parser': 21.0.3
    dev: false

  /@types/yargs@17.0.32:
    resolution: {integrity: sha512-xQ67Yc/laOG5uMfX/093MRlGGCIBzZMarVa+gfNKJxWAIgykYpVGkBdbqEzGDDfCrVUj6Hiff4mTZ5BA6TmAog==}
    dependencies:
      '@types/yargs-parser': 21.0.3
    dev: false

  /@vanilla-extract/css@1.14.0:
    resolution: {integrity: sha512-rYfm7JciWZ8PFzBM/HDiE2GLnKI3xJ6/vdmVJ5BSgcCZ5CxRlM9Cjqclni9lGzF3eMOijnUhCd/KV8TOzyzbMA==}
    dependencies:
      '@emotion/hash': 0.9.1
      '@vanilla-extract/private': 1.0.5
      chalk: 4.1.2
      css-what: 6.1.0
      cssesc: 3.0.0
      csstype: 3.1.3
      deep-object-diff: 1.1.9
      deepmerge: 4.3.1
      media-query-parser: 2.0.2
      modern-ahocorasick: 1.0.1
      outdent: 0.8.0
    dev: false

  /@vanilla-extract/dynamic@2.1.0:
    resolution: {integrity: sha512-8zl0IgBYRtgD1h+56Zu13wHTiMTJSVEa4F7RWX9vTB/5Xe2KtjoiqApy/szHPVFA56c+ex6A4GpCQjT1bKXbYw==}
    dependencies:
      '@vanilla-extract/private': 1.0.5
    dev: false

  /@vanilla-extract/private@1.0.5:
    resolution: {integrity: sha512-6YXeOEKYTA3UV+RC8DeAjFk+/okoNz/h88R+McnzA2zpaVqTR/Ep+vszkWYlGBcMNO7vEkqbq5nT/JMMvhi+tw==}
    dev: false

  /@vanilla-extract/sprinkles@1.6.1(@vanilla-extract/css@1.14.0):
    resolution: {integrity: sha512-N/RGKwGAAidBupZ436RpuweRQHEFGU+mvAqBo8PRMAjJEmHoPDttV8RObaMLrJHWLqvX+XUMinHUnD0hFRQISw==}
    peerDependencies:
      '@vanilla-extract/css': ^1.0.0
    dependencies:
      '@vanilla-extract/css': 1.14.0
    dev: false

  /@vue/compiler-core@3.4.27:
    resolution: {integrity: sha512-E+RyqY24KnyDXsCuQrI+mlcdW3ALND6U7Gqa/+bVwbcpcR3BRRIckFoz7Qyd4TTlnugtwuI7YgjbvsLmxb+yvg==}
    dependencies:
      '@babel/parser': 7.24.6
      '@vue/shared': 3.4.27
      entities: 4.5.0
      estree-walker: 2.0.2
      source-map-js: 1.2.0
    dev: false

  /@vue/compiler-dom@3.4.27:
    resolution: {integrity: sha512-kUTvochG/oVgE1w5ViSr3KUBh9X7CWirebA3bezTbB5ZKBQZwR2Mwj9uoSKRMFcz4gSMzzLXBPD6KpCLb9nvWw==}
    dependencies:
      '@vue/compiler-core': 3.4.27
      '@vue/shared': 3.4.27
    dev: false

  /@vue/compiler-sfc@3.4.27:
    resolution: {integrity: sha512-nDwntUEADssW8e0rrmE0+OrONwmRlegDA1pD6QhVeXxjIytV03yDqTey9SBDiALsvAd5U4ZrEKbMyVXhX6mCGA==}
    dependencies:
      '@babel/parser': 7.24.6
      '@vue/compiler-core': 3.4.27
      '@vue/compiler-dom': 3.4.27
      '@vue/compiler-ssr': 3.4.27
      '@vue/shared': 3.4.27
      estree-walker: 2.0.2
      magic-string: 0.30.10
      postcss: 8.4.38
      source-map-js: 1.2.0
    dev: false

  /@vue/compiler-ssr@3.4.27:
    resolution: {integrity: sha512-CVRzSJIltzMG5FcidsW0jKNQnNRYC8bT21VegyMMtHmhW3UOI7knmUehzswXLrExDLE6lQCZdrhD4ogI7c+vuw==}
    dependencies:
      '@vue/compiler-dom': 3.4.27
      '@vue/shared': 3.4.27
    dev: false

  /@vue/reactivity@3.4.27:
    resolution: {integrity: sha512-kK0g4NknW6JX2yySLpsm2jlunZJl2/RJGZ0H9ddHdfBVHcNzxmQ0sS0b09ipmBoQpY8JM2KmUw+a6sO8Zo+zIA==}
    dependencies:
      '@vue/shared': 3.4.27
    dev: false

  /@vue/runtime-core@3.4.27:
    resolution: {integrity: sha512-7aYA9GEbOOdviqVvcuweTLe5Za4qBZkUY7SvET6vE8kyypxVgaT1ixHLg4urtOlrApdgcdgHoTZCUuTGap/5WA==}
    dependencies:
      '@vue/reactivity': 3.4.27
      '@vue/shared': 3.4.27
    dev: false

  /@vue/runtime-dom@3.4.27:
    resolution: {integrity: sha512-ScOmP70/3NPM+TW9hvVAz6VWWtZJqkbdf7w6ySsws+EsqtHvkhxaWLecrTorFxsawelM5Ys9FnDEMt6BPBDS0Q==}
    dependencies:
      '@vue/runtime-core': 3.4.27
      '@vue/shared': 3.4.27
      csstype: 3.1.3
    dev: false

  /@vue/server-renderer@3.4.27(vue@3.4.27):
    resolution: {integrity: sha512-dlAMEuvmeA3rJsOMJ2J1kXU7o7pOxgsNHVr9K8hB3ImIkSuBrIdy0vF66h8gf8Tuinf1TK3mPAz2+2sqyf3KzA==}
    peerDependencies:
      vue: 3.4.27
    dependencies:
      '@vue/compiler-ssr': 3.4.27
      '@vue/shared': 3.4.27
      vue: 3.4.27
    dev: false

  /@vue/shared@3.4.27:
    resolution: {integrity: sha512-DL3NmY2OFlqmYYrzp39yi3LDkKxa5vZVwxWdQ3rG0ekuWscHraeIbnI8t+aZK7qhYqEqWKTUdijadunb9pnrgA==}
    dev: false

  /@wagmi/connectors@5.0.6(@wagmi/core@2.10.4)(react-dom@18.3.1)(react-i18next@13.5.0)(react-native@0.74.1)(react@18.3.1)(viem@2.10.11):
    resolution: {integrity: sha512-eyn2pw9QBKfvNOVZis72GqZw4neo7Ktut7Jt4NSiR/umncWJKpKrni3exLHAJw2+mDTDWtUTHs9YL56ov2tWLw==}
    peerDependencies:
      '@wagmi/core': 2.10.4
      typescript: '>=5.0.4'
      viem: 2.x
    peerDependenciesMeta:
      typescript:
        optional: true
    dependencies:
      '@coinbase/wallet-sdk': 4.0.2
      '@metamask/sdk': 0.20.3(react-dom@18.3.1)(react-i18next@13.5.0)(react-native@0.74.1)(react@18.3.1)
      '@safe-global/safe-apps-provider': 0.18.1
      '@safe-global/safe-apps-sdk': 8.1.0
      '@wagmi/core': 2.10.4(react@18.3.1)(viem@2.10.11)
      '@walletconnect/ethereum-provider': 2.13.0(react@18.3.1)
      '@walletconnect/modal': 2.6.2(react@18.3.1)
      cbw-sdk: /@coinbase/wallet-sdk@3.9.3
      viem: 2.10.11
    transitivePeerDependencies:
      - '@azure/app-configuration'
      - '@azure/cosmos'
      - '@azure/data-tables'
      - '@azure/identity'
      - '@azure/keyvault-secrets'
      - '@azure/storage-blob'
      - '@capacitor/preferences'
      - '@netlify/blobs'
      - '@planetscale/database'
      - '@react-native-async-storage/async-storage'
      - '@types/react'
      - '@upstash/redis'
      - '@vercel/kv'
      - bufferutil
      - encoding
      - ioredis
      - react
      - react-dom
      - react-i18next
      - react-native
      - rollup
      - supports-color
      - uWebSockets.js
      - utf-8-validate
      - zod
    dev: false

  /@wagmi/core@2.10.4(react@18.3.1)(viem@2.10.11):
    resolution: {integrity: sha512-X/PW4zckkSQ/y4LwkQ5cwLKv551I6kVorH3VsTQghxYt0Vj9K5/XhCCRQg5Q200u6fiUCJ+2WjpmhZu3XYNU9w==}
    peerDependencies:
      '@tanstack/query-core': '>=5.0.0'
      typescript: '>=5.0.4'
      viem: 2.x
    peerDependenciesMeta:
      '@tanstack/query-core':
        optional: true
      typescript:
        optional: true
    dependencies:
      eventemitter3: 5.0.1
      mipd: 0.0.5
      viem: 2.10.11
      zustand: 4.4.1(react@18.3.1)
    transitivePeerDependencies:
      - '@types/react'
      - bufferutil
      - immer
      - react
      - utf-8-validate
      - zod
    dev: false

  /@walletconnect/core@2.13.0:
    resolution: {integrity: sha512-blDuZxQenjeXcVJvHxPznTNl6c/2DO4VNrFnus+qHmO6OtT5lZRowdMtlCaCNb1q0OxzgrmBDcTOCbFcCpio/g==}
    dependencies:
      '@walletconnect/heartbeat': 1.2.2
      '@walletconnect/jsonrpc-provider': 1.0.14
      '@walletconnect/jsonrpc-types': 1.0.4
      '@walletconnect/jsonrpc-utils': 1.0.8
      '@walletconnect/jsonrpc-ws-connection': 1.0.14
      '@walletconnect/keyvaluestorage': 1.1.1
      '@walletconnect/logger': 2.1.2
      '@walletconnect/relay-api': 1.0.10
      '@walletconnect/relay-auth': 1.0.4
      '@walletconnect/safe-json': 1.0.2
      '@walletconnect/time': 1.0.2
      '@walletconnect/types': 2.13.0
      '@walletconnect/utils': 2.13.0
      events: 3.3.0
      isomorphic-unfetch: 3.1.0
      lodash.isequal: 4.5.0
      uint8arrays: 3.1.0
    transitivePeerDependencies:
      - '@azure/app-configuration'
      - '@azure/cosmos'
      - '@azure/data-tables'
      - '@azure/identity'
      - '@azure/keyvault-secrets'
      - '@azure/storage-blob'
      - '@capacitor/preferences'
      - '@netlify/blobs'
      - '@planetscale/database'
      - '@react-native-async-storage/async-storage'
      - '@upstash/redis'
      - '@vercel/kv'
      - bufferutil
      - encoding
      - ioredis
      - uWebSockets.js
      - utf-8-validate
    dev: false

  /@walletconnect/environment@1.0.1:
    resolution: {integrity: sha512-T426LLZtHj8e8rYnKfzsw1aG6+M0BT1ZxayMdv/p8yM0MU+eJDISqNY3/bccxRr4LrF9csq02Rhqt08Ibl0VRg==}
    dependencies:
      tslib: 1.14.1
    dev: false

  /@walletconnect/ethereum-provider@2.13.0(react@18.3.1):
    resolution: {integrity: sha512-dnpW8mmLpWl1AZUYGYZpaAfGw1HFkL0WSlhk5xekx3IJJKn4pLacX2QeIOo0iNkzNQxZfux1AK4Grl1DvtzZEA==}
    dependencies:
      '@walletconnect/jsonrpc-http-connection': 1.0.8
      '@walletconnect/jsonrpc-provider': 1.0.14
      '@walletconnect/jsonrpc-types': 1.0.4
      '@walletconnect/jsonrpc-utils': 1.0.8
      '@walletconnect/modal': 2.6.2(react@18.3.1)
      '@walletconnect/sign-client': 2.13.0
      '@walletconnect/types': 2.13.0
      '@walletconnect/universal-provider': 2.13.0
      '@walletconnect/utils': 2.13.0
      events: 3.3.0
    transitivePeerDependencies:
      - '@azure/app-configuration'
      - '@azure/cosmos'
      - '@azure/data-tables'
      - '@azure/identity'
      - '@azure/keyvault-secrets'
      - '@azure/storage-blob'
      - '@capacitor/preferences'
      - '@netlify/blobs'
      - '@planetscale/database'
      - '@react-native-async-storage/async-storage'
      - '@types/react'
      - '@upstash/redis'
      - '@vercel/kv'
      - bufferutil
      - encoding
      - ioredis
      - react
      - uWebSockets.js
      - utf-8-validate
    dev: false

  /@walletconnect/events@1.0.1:
    resolution: {integrity: sha512-NPTqaoi0oPBVNuLv7qPaJazmGHs5JGyO8eEAk5VGKmJzDR7AHzD4k6ilox5kxk1iwiOnFopBOOMLs86Oa76HpQ==}
    dependencies:
      keyvaluestorage-interface: 1.0.0
      tslib: 1.14.1
    dev: false

  /@walletconnect/heartbeat@1.2.2:
    resolution: {integrity: sha512-uASiRmC5MwhuRuf05vq4AT48Pq8RMi876zV8rr8cV969uTOzWdB/k+Lj5yI2PBtB1bGQisGen7MM1GcZlQTBXw==}
    dependencies:
      '@walletconnect/events': 1.0.1
      '@walletconnect/time': 1.0.2
      events: 3.3.0
    dev: false

  /@walletconnect/jsonrpc-http-connection@1.0.8:
    resolution: {integrity: sha512-+B7cRuaxijLeFDJUq5hAzNyef3e3tBDIxyaCNmFtjwnod5AGis3RToNqzFU33vpVcxFhofkpE7Cx+5MYejbMGw==}
    dependencies:
      '@walletconnect/jsonrpc-utils': 1.0.8
      '@walletconnect/safe-json': 1.0.2
      cross-fetch: 3.1.8
      events: 3.3.0
    transitivePeerDependencies:
      - encoding
    dev: false

  /@walletconnect/jsonrpc-provider@1.0.14:
    resolution: {integrity: sha512-rtsNY1XqHvWj0EtITNeuf8PHMvlCLiS3EjQL+WOkxEOA4KPxsohFnBDeyPYiNm4ZvkQdLnece36opYidmtbmow==}
    dependencies:
      '@walletconnect/jsonrpc-utils': 1.0.8
      '@walletconnect/safe-json': 1.0.2
      events: 3.3.0
    dev: false

  /@walletconnect/jsonrpc-types@1.0.4:
    resolution: {integrity: sha512-P6679fG/M+wuWg9TY8mh6xFSdYnFyFjwFelxyISxMDrlbXokorEVXYOxiqEbrU3x1BmBoCAJJ+vtEaEoMlpCBQ==}
    dependencies:
      events: 3.3.0
      keyvaluestorage-interface: 1.0.0
    dev: false

  /@walletconnect/jsonrpc-utils@1.0.8:
    resolution: {integrity: sha512-vdeb03bD8VzJUL6ZtzRYsFMq1eZQcM3EAzT0a3st59dyLfJ0wq+tKMpmGH7HlB7waD858UWgfIcudbPFsbzVdw==}
    dependencies:
      '@walletconnect/environment': 1.0.1
      '@walletconnect/jsonrpc-types': 1.0.4
      tslib: 1.14.1
    dev: false

  /@walletconnect/jsonrpc-ws-connection@1.0.14:
    resolution: {integrity: sha512-Jsl6fC55AYcbkNVkwNM6Jo+ufsuCQRqViOQ8ZBPH9pRREHH9welbBiszuTLqEJiQcO/6XfFDl6bzCJIkrEi8XA==}
    dependencies:
      '@walletconnect/jsonrpc-utils': 1.0.8
      '@walletconnect/safe-json': 1.0.2
      events: 3.3.0
      ws: 7.5.9
    transitivePeerDependencies:
      - bufferutil
      - utf-8-validate
    dev: false

  /@walletconnect/keyvaluestorage@1.1.1:
    resolution: {integrity: sha512-V7ZQq2+mSxAq7MrRqDxanTzu2RcElfK1PfNYiaVnJgJ7Q7G7hTVwF8voIBx92qsRyGHZihrwNPHuZd1aKkd0rA==}
    peerDependencies:
      '@react-native-async-storage/async-storage': 1.x
    peerDependenciesMeta:
      '@react-native-async-storage/async-storage':
        optional: true
    dependencies:
      '@walletconnect/safe-json': 1.0.2
      idb-keyval: 6.2.1
      unstorage: 1.10.2(idb-keyval@6.2.1)
    transitivePeerDependencies:
      - '@azure/app-configuration'
      - '@azure/cosmos'
      - '@azure/data-tables'
      - '@azure/identity'
      - '@azure/keyvault-secrets'
      - '@azure/storage-blob'
      - '@capacitor/preferences'
      - '@netlify/blobs'
      - '@planetscale/database'
      - '@upstash/redis'
      - '@vercel/kv'
      - ioredis
      - uWebSockets.js
    dev: false

  /@walletconnect/logger@2.1.2:
    resolution: {integrity: sha512-aAb28I3S6pYXZHQm5ESB+V6rDqIYfsnHaQyzFbwUUBFY4H0OXx/YtTl8lvhUNhMMfb9UxbwEBS253TlXUYJWSw==}
    dependencies:
      '@walletconnect/safe-json': 1.0.2
      pino: 7.11.0
    dev: false

  /@walletconnect/modal-core@2.6.2(react@18.3.1):
    resolution: {integrity: sha512-cv8ibvdOJQv2B+nyxP9IIFdxvQznMz8OOr/oR/AaUZym4hjXNL/l1a2UlSQBXrVjo3xxbouMxLb3kBsHoYP2CA==}
    dependencies:
      valtio: 1.11.2(react@18.3.1)
    transitivePeerDependencies:
      - '@types/react'
      - react
    dev: false

  /@walletconnect/modal-ui@2.6.2(react@18.3.1):
    resolution: {integrity: sha512-rbdstM1HPGvr7jprQkyPggX7rP4XiCG85ZA+zWBEX0dVQg8PpAgRUqpeub4xQKDgY7pY/xLRXSiCVdWGqvG2HA==}
    dependencies:
      '@walletconnect/modal-core': 2.6.2(react@18.3.1)
      lit: 2.8.0
      motion: 10.16.2
      qrcode: 1.5.3
    transitivePeerDependencies:
      - '@types/react'
      - react
    dev: false

  /@walletconnect/modal@2.6.2(react@18.3.1):
    resolution: {integrity: sha512-eFopgKi8AjKf/0U4SemvcYw9zlLpx9njVN8sf6DAkowC2Md0gPU/UNEbH1Wwj407pEKnEds98pKWib1NN1ACoA==}
    dependencies:
      '@walletconnect/modal-core': 2.6.2(react@18.3.1)
      '@walletconnect/modal-ui': 2.6.2(react@18.3.1)
    transitivePeerDependencies:
      - '@types/react'
      - react
    dev: false

  /@walletconnect/relay-api@1.0.10:
    resolution: {integrity: sha512-tqrdd4zU9VBNqUaXXQASaexklv6A54yEyQQEXYOCr+Jz8Ket0dmPBDyg19LVSNUN2cipAghQc45/KVmfFJ0cYw==}
    dependencies:
      '@walletconnect/jsonrpc-types': 1.0.4
    dev: false

  /@walletconnect/relay-auth@1.0.4:
    resolution: {integrity: sha512-kKJcS6+WxYq5kshpPaxGHdwf5y98ZwbfuS4EE/NkQzqrDFm5Cj+dP8LofzWvjrrLkZq7Afy7WrQMXdLy8Sx7HQ==}
    dependencies:
      '@stablelib/ed25519': 1.0.3
      '@stablelib/random': 1.0.2
      '@walletconnect/safe-json': 1.0.2
      '@walletconnect/time': 1.0.2
      tslib: 1.14.1
      uint8arrays: 3.1.0
    dev: false

  /@walletconnect/safe-json@1.0.2:
    resolution: {integrity: sha512-Ogb7I27kZ3LPC3ibn8ldyUr5544t3/STow9+lzz7Sfo808YD7SBWk7SAsdBFlYgP2zDRy2hS3sKRcuSRM0OTmA==}
    dependencies:
      tslib: 1.14.1
    dev: false

  /@walletconnect/sign-client@2.13.0:
    resolution: {integrity: sha512-En7KSvNUlQFx20IsYGsFgkNJ2lpvDvRsSFOT5PTdGskwCkUfOpB33SQJ6nCrN19gyoKPNvWg80Cy6MJI0TjNYA==}
    dependencies:
      '@walletconnect/core': 2.13.0
      '@walletconnect/events': 1.0.1
      '@walletconnect/heartbeat': 1.2.2
      '@walletconnect/jsonrpc-utils': 1.0.8
      '@walletconnect/logger': 2.1.2
      '@walletconnect/time': 1.0.2
      '@walletconnect/types': 2.13.0
      '@walletconnect/utils': 2.13.0
      events: 3.3.0
    transitivePeerDependencies:
      - '@azure/app-configuration'
      - '@azure/cosmos'
      - '@azure/data-tables'
      - '@azure/identity'
      - '@azure/keyvault-secrets'
      - '@azure/storage-blob'
      - '@capacitor/preferences'
      - '@netlify/blobs'
      - '@planetscale/database'
      - '@react-native-async-storage/async-storage'
      - '@upstash/redis'
      - '@vercel/kv'
      - bufferutil
      - encoding
      - ioredis
      - uWebSockets.js
      - utf-8-validate
    dev: false

  /@walletconnect/time@1.0.2:
    resolution: {integrity: sha512-uzdd9woDcJ1AaBZRhqy5rNC9laqWGErfc4dxA9a87mPdKOgWMD85mcFo9dIYIts/Jwocfwn07EC6EzclKubk/g==}
    dependencies:
      tslib: 1.14.1
    dev: false

  /@walletconnect/types@2.13.0:
    resolution: {integrity: sha512-MWaVT0FkZwzYbD3tvk8F+2qpPlz1LUSWHuqbINUtMXnSzJtXN49Y99fR7FuBhNFtDalfuWsEK17GrNA+KnAsPQ==}
    dependencies:
      '@walletconnect/events': 1.0.1
      '@walletconnect/heartbeat': 1.2.2
      '@walletconnect/jsonrpc-types': 1.0.4
      '@walletconnect/keyvaluestorage': 1.1.1
      '@walletconnect/logger': 2.1.2
      events: 3.3.0
    transitivePeerDependencies:
      - '@azure/app-configuration'
      - '@azure/cosmos'
      - '@azure/data-tables'
      - '@azure/identity'
      - '@azure/keyvault-secrets'
      - '@azure/storage-blob'
      - '@capacitor/preferences'
      - '@netlify/blobs'
      - '@planetscale/database'
      - '@react-native-async-storage/async-storage'
      - '@upstash/redis'
      - '@vercel/kv'
      - ioredis
      - uWebSockets.js
    dev: false

  /@walletconnect/universal-provider@2.13.0:
    resolution: {integrity: sha512-B5QvO8pnk5Bqn4aIt0OukGEQn2Auk9VbHfhQb9cGwgmSCd1GlprX/Qblu4gyT5+TjHMb1Gz5UssUaZWTWbDhBg==}
    dependencies:
      '@walletconnect/jsonrpc-http-connection': 1.0.8
      '@walletconnect/jsonrpc-provider': 1.0.14
      '@walletconnect/jsonrpc-types': 1.0.4
      '@walletconnect/jsonrpc-utils': 1.0.8
      '@walletconnect/logger': 2.1.2
      '@walletconnect/sign-client': 2.13.0
      '@walletconnect/types': 2.13.0
      '@walletconnect/utils': 2.13.0
      events: 3.3.0
    transitivePeerDependencies:
      - '@azure/app-configuration'
      - '@azure/cosmos'
      - '@azure/data-tables'
      - '@azure/identity'
      - '@azure/keyvault-secrets'
      - '@azure/storage-blob'
      - '@capacitor/preferences'
      - '@netlify/blobs'
      - '@planetscale/database'
      - '@react-native-async-storage/async-storage'
      - '@upstash/redis'
      - '@vercel/kv'
      - bufferutil
      - encoding
      - ioredis
      - uWebSockets.js
      - utf-8-validate
    dev: false

  /@walletconnect/utils@2.13.0:
    resolution: {integrity: sha512-q1eDCsRHj5iLe7fF8RroGoPZpdo2CYMZzQSrw1iqL+2+GOeqapxxuJ1vaJkmDUkwgklfB22ufqG6KQnz78sD4w==}
    dependencies:
      '@stablelib/chacha20poly1305': 1.0.1
      '@stablelib/hkdf': 1.0.1
      '@stablelib/random': 1.0.2
      '@stablelib/sha256': 1.0.1
      '@stablelib/x25519': 1.0.3
      '@walletconnect/relay-api': 1.0.10
      '@walletconnect/safe-json': 1.0.2
      '@walletconnect/time': 1.0.2
      '@walletconnect/types': 2.13.0
      '@walletconnect/window-getters': 1.0.1
      '@walletconnect/window-metadata': 1.0.1
      detect-browser: 5.3.0
      query-string: 7.1.3
      uint8arrays: 3.1.0
    transitivePeerDependencies:
      - '@azure/app-configuration'
      - '@azure/cosmos'
      - '@azure/data-tables'
      - '@azure/identity'
      - '@azure/keyvault-secrets'
      - '@azure/storage-blob'
      - '@capacitor/preferences'
      - '@netlify/blobs'
      - '@planetscale/database'
      - '@react-native-async-storage/async-storage'
      - '@upstash/redis'
      - '@vercel/kv'
      - ioredis
      - uWebSockets.js
    dev: false

  /@walletconnect/window-getters@1.0.1:
    resolution: {integrity: sha512-vHp+HqzGxORPAN8gY03qnbTMnhqIwjeRJNOMOAzePRg4xVEEE2WvYsI9G2NMjOknA8hnuYbU3/hwLcKbjhc8+Q==}
    dependencies:
      tslib: 1.14.1
    dev: false

  /@walletconnect/window-metadata@1.0.1:
    resolution: {integrity: sha512-9koTqyGrM2cqFRW517BPY/iEtUDx2r1+Pwwu5m7sJ7ka79wi3EyqhqcICk/yDmv6jAS1rjKgTKXlEhanYjijcA==}
    dependencies:
      '@walletconnect/window-getters': 1.0.1
      tslib: 1.14.1
    dev: false

  /abitype@0.9.8:
    resolution: {integrity: sha512-puLifILdm+8sjyss4S+fsUN09obiT1g2YW6CtcQF+QDzxR0euzgEB29MZujC6zMk2a6SVmtttq1fc6+YFA7WYQ==}
    peerDependencies:
      typescript: '>=5.0.4'
      zod: ^3 >=3.19.1
    peerDependenciesMeta:
      typescript:
        optional: true
      zod:
        optional: true
    dev: false

  /abitype@1.0.0:
    resolution: {integrity: sha512-NMeMah//6bJ56H5XRj8QCV4AwuW6hB6zqz2LnhhLdcWVQOsXki6/Pn3APeqxCma62nXIcmZWdu1DlHWS74umVQ==}
    peerDependencies:
      typescript: '>=5.0.4'
      zod: ^3 >=3.22.0
    peerDependenciesMeta:
      typescript:
        optional: true
      zod:
        optional: true
    dev: false

  /abort-controller@3.0.0:
    resolution: {integrity: sha512-h8lQ8tacZYnR3vNQTgibj+tODHI5/+l06Au2Pcriv/Gmet0eaj4TwWH41sO9wnHDiQsEj19q0drzdWdeAHtweg==}
    engines: {node: '>=6.5'}
    dependencies:
      event-target-shim: 5.0.1
    dev: false

  /accepts@1.3.8:
    resolution: {integrity: sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==}
    engines: {node: '>= 0.6'}
    dependencies:
      mime-types: 2.1.35
      negotiator: 0.6.3
    dev: false

  /acorn@8.11.3:
    resolution: {integrity: sha512-Y9rRfJG5jcKOE0CLisYbojUjIrIEE7AGMzA/Sm4BslANhbS+cDMpgBdcPT91oJ7OuJ9hYJBx59RjbhxVnrF8Xg==}
    engines: {node: '>=0.4.0'}
    hasBin: true
    dev: false

  /anser@1.4.10:
    resolution: {integrity: sha512-hCv9AqTQ8ycjpSd3upOJd7vFwW1JaoYQ7tpham03GJ1ca8/65rqn0RpaWpItOAd6ylW9wAw6luXYPJIyPFVOww==}
    dev: false

  /ansi-fragments@0.2.1:
    resolution: {integrity: sha512-DykbNHxuXQwUDRv5ibc2b0x7uw7wmwOGLBUd5RmaQ5z8Lhx19vwvKV+FAsM5rEA6dEcHxX+/Ad5s9eF2k2bB+w==}
    dependencies:
      colorette: 1.4.0
      slice-ansi: 2.1.0
      strip-ansi: 5.2.0
    dev: false

  /ansi-regex@4.1.1:
    resolution: {integrity: sha512-ILlv4k/3f6vfQ4OoP2AGvirOktlQ98ZEL1k9FaQjxa3L1abBgbuTDAdPOpvbGncC0BTVQrl+OM8xZGK6tWXt7g==}
    engines: {node: '>=6'}
    dev: false

  /ansi-regex@5.0.1:
    resolution: {integrity: sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==}
    engines: {node: '>=8'}
    dev: false

  /ansi-styles@3.2.1:
    resolution: {integrity: sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==}
    engines: {node: '>=4'}
    dependencies:
      color-convert: 1.9.3
    dev: false

  /ansi-styles@4.3.0:
    resolution: {integrity: sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==}
    engines: {node: '>=8'}
    dependencies:
      color-convert: 2.0.1
    dev: false

  /ansi-styles@5.2.0:
    resolution: {integrity: sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==}
    engines: {node: '>=10'}
    dev: false

  /anymatch@3.1.3:
    resolution: {integrity: sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==}
    engines: {node: '>= 8'}
    dependencies:
      normalize-path: 3.0.0
      picomatch: 2.3.1
    dev: false

  /appdirsjs@1.2.7:
    resolution: {integrity: sha512-Quji6+8kLBC3NnBeo14nPDq0+2jUs5s3/xEye+udFHumHhRk4M7aAMXp/PBJqkKYGuuyR9M/6Dq7d2AViiGmhw==}
    dev: false

  /argparse@1.0.10:
    resolution: {integrity: sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==}
    dependencies:
      sprintf-js: 1.0.3
    dev: false

  /asap@2.0.6:
    resolution: {integrity: sha512-BSHWgDSAiKs50o2Re8ppvp3seVHXSRM44cdSsT9FfNEUUZLOGWVCsiWaRPWM1Znn+mqZ1OfVZ3z3DWEzSp7hRA==}
    dev: false

  /ast-types@0.15.2:
    resolution: {integrity: sha512-c27loCv9QkZinsa5ProX751khO9DJl/AcB5c2KNtA6NRvHKS0PgLfcftz72KVq504vB0Gku5s2kUZzDBvQWvHg==}
    engines: {node: '>=4'}
    dependencies:
      tslib: 2.6.2
    dev: false

  /astral-regex@1.0.0:
    resolution: {integrity: sha512-+Ryf6g3BKoRc7jfp7ad8tM4TtMiaWvbF/1/sQcZPkkS7ag3D5nMBCe2UfOTONtAkaG0tO0ij3C5Lwmf1EiyjHg==}
    engines: {node: '>=4'}
    dev: false

  /async-limiter@1.0.1:
    resolution: {integrity: sha512-csOlWGAcRFJaI6m+F2WKdnMKr4HhdhFVBk0H/QbJFMCr+uO2kwohwXQPxw/9OCxp05r5ghVBFSyioixx3gfkNQ==}
    dev: false

  /async-mutex@0.2.6:
    resolution: {integrity: sha512-Hs4R+4SPgamu6rSGW8C7cV9gaWUKEHykfzCCvIRuaVv636Ju10ZdeUbvb4TBEW0INuq2DHZqXbK4Nd3yG4RaRw==}
    dependencies:
      tslib: 2.6.2
    dev: false

  /atomic-sleep@1.0.0:
    resolution: {integrity: sha512-kNOjDqAh7px0XWNI+4QbzoiR/nTkHAWNud2uvnJquD1/x5a7EQZMJT0AczqK0Qn67oY/TTQ1LbUKajZpp3I9tQ==}
    engines: {node: '>=8.0.0'}
    dev: false

  /available-typed-arrays@1.0.7:
    resolution: {integrity: sha512-wvUjBtSGN7+7SjNpq/9M2Tg350UZD3q62IFZLbRAR1bSMlCo1ZaeW+BJ+D090e4hIIZLBcTDWe4Mh4jvUDajzQ==}
    engines: {node: '>= 0.4'}
    dependencies:
      possible-typed-array-names: 1.0.0
    dev: false

  /babel-core@7.0.0-bridge.0(@babel/core@7.24.6):
    resolution: {integrity: sha512-poPX9mZH/5CSanm50Q+1toVci6pv5KSRv/5TWCwtzQS5XEwn40BcCrgIeMFWP9CKKIniKXNxoIOnOq4VVlGXhg==}
    peerDependencies:
      '@babel/core': ^7.0.0-0
    dependencies:
      '@babel/core': 7.24.6
    dev: false

  /babel-plugin-polyfill-corejs2@0.4.11(@babel/core@7.24.6):
    resolution: {integrity: sha512-sMEJ27L0gRHShOh5G54uAAPaiCOygY/5ratXuiyb2G46FmlSpc9eFCzYVyDiPxfNbwzA7mYahmjQc5q+CZQ09Q==}
    peerDependencies:
      '@babel/core': ^7.4.0 || ^8.0.0-0 <8.0.0
    dependencies:
      '@babel/compat-data': 7.24.6
      '@babel/core': 7.24.6
      '@babel/helper-define-polyfill-provider': 0.6.2(@babel/core@7.24.6)
      semver: 6.3.1
    transitivePeerDependencies:
      - supports-color
    dev: false

  /babel-plugin-polyfill-corejs3@0.10.4(@babel/core@7.24.6):
    resolution: {integrity: sha512-25J6I8NGfa5YkCDogHRID3fVCadIR8/pGl1/spvCkzb6lVn6SR3ojpx9nOn9iEBcUsjY24AmdKm5khcfKdylcg==}
    peerDependencies:
      '@babel/core': ^7.4.0 || ^8.0.0-0 <8.0.0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-define-polyfill-provider': 0.6.2(@babel/core@7.24.6)
      core-js-compat: 3.37.1
    transitivePeerDependencies:
      - supports-color
    dev: false

  /babel-plugin-polyfill-regenerator@0.6.2(@babel/core@7.24.6):
    resolution: {integrity: sha512-2R25rQZWP63nGwaAswvDazbPXfrM3HwVoBXK6HcqeKrSrL/JqcC/rDcf95l4r7LXLyxDXc8uQDa064GubtCABg==}
    peerDependencies:
      '@babel/core': ^7.4.0 || ^8.0.0-0 <8.0.0
    dependencies:
      '@babel/core': 7.24.6
      '@babel/helper-define-polyfill-provider': 0.6.2(@babel/core@7.24.6)
    transitivePeerDependencies:
      - supports-color
    dev: false

  /babel-plugin-transform-flow-enums@0.0.2(@babel/core@7.24.6):
    resolution: {integrity: sha512-g4aaCrDDOsWjbm0PUUeVnkcVd6AKJsVc/MbnPhEotEpkeJQP6b8nzewohQi7+QS8UyPehOhGWn0nOwjvWpmMvQ==}
    dependencies:
      '@babel/plugin-syntax-flow': 7.24.6(@babel/core@7.24.6)
    transitivePeerDependencies:
      - '@babel/core'
    dev: false

  /balanced-match@1.0.2:
    resolution: {integrity: sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==}
    dev: false

  /base64-js@1.5.1:
    resolution: {integrity: sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==}
    dev: false

  /binary-extensions@2.3.0:
    resolution: {integrity: sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==}
    engines: {node: '>=8'}
    dev: false

  /bl@4.1.0:
    resolution: {integrity: sha512-1W07cM9gS6DcLperZfFSj+bWLtaPGSOHWhPiGzXmvVJbRLdG82sH/Kn8EtW1VqWVA54AKf2h5k5BbnIbwF3h6w==}
    dependencies:
      buffer: 5.7.1
      inherits: 2.0.4
      readable-stream: 3.6.2
    dev: false

  /bn.js@4.12.0:
    resolution: {integrity: sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA==}
    dev: false

  /bn.js@5.2.1:
    resolution: {integrity: sha512-eXRvHzWyYPBuB4NBy0cmYQjGitUrtqwbvlzP3G6VFnNRbsZQIxQ10PbKKHt8gZ/HW/D/747aDl+QkDqg3KQLMQ==}
    dev: false

  /bowser@2.11.0:
    resolution: {integrity: sha512-AlcaJBi/pqqJBIQ8U9Mcpc9i8Aqxn88Skv5d+xBX006BY5u8N3mGLHa5Lgppa7L/HfwgwLgZ6NYs+Ag6uUmJRA==}
    dev: false

  /brace-expansion@1.1.11:
    resolution: {integrity: sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==}
    dependencies:
      balanced-match: 1.0.2
      concat-map: 0.0.1
    dev: false

  /braces@3.0.3:
    resolution: {integrity: sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==}
    engines: {node: '>=8'}
    dependencies:
      fill-range: 7.1.1
    dev: false

  /brorand@1.1.0:
    resolution: {integrity: sha512-cKV8tMCEpQs4hK/ik71d6LrPOnpkpGBR0wzxqr68g2m/LB2GxVYQroAjMJZRVM1Y4BCjCKc3vAamxSzOY2RP+w==}
    dev: false

  /browserslist@4.23.0:
    resolution: {integrity: sha512-QW8HiM1shhT2GuzkvklfjcKDiWFXHOeFCIA/huJPwHsslwcydgk7X+z2zXpEijP98UCY7HbubZt5J2Zgvf0CaQ==}
    engines: {node: ^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7}
    hasBin: true
    dependencies:
      caniuse-lite: 1.0.30001623
      electron-to-chromium: 1.4.783
      node-releases: 2.0.14
      update-browserslist-db: 1.0.16(browserslist@4.23.0)
    dev: false

  /bser@2.1.1:
    resolution: {integrity: sha512-gQxTNE/GAfIIrmHLUE3oJyp5FO6HRBfhjnw4/wMmA63ZGDJnWBmgY/lyQBpnDUkGmAhbSe39tx2d/iTOAfglwQ==}
    dependencies:
      node-int64: 0.4.0
    dev: false

  /buffer-from@1.1.2:
    resolution: {integrity: sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==}
    dev: false

  /buffer@5.7.1:
    resolution: {integrity: sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==}
    dependencies:
      base64-js: 1.5.1
      ieee754: 1.2.1
    dev: false

  /buffer@6.0.3:
    resolution: {integrity: sha512-FTiCpNxtwiZZHEZbcbTIcZjERVICn9yq/pDFkTl95/AxzD1naBctN7YO68riM/gLSDY7sdrMby8hofADYuuqOA==}
    dependencies:
      base64-js: 1.5.1
      ieee754: 1.2.1
    dev: false

  /bufferutil@4.0.8:
    resolution: {integrity: sha512-4T53u4PdgsXqKaIctwF8ifXlRTTmEPJ8iEPWFdGZvcf7sbwYo6FKFEX9eNNAnzFZ7EzJAQ3CJeOtCRA4rDp7Pw==}
    engines: {node: '>=6.14.2'}
    requiresBuild: true
    dependencies:
      node-gyp-build: 4.8.1
    dev: false

  /bytes@3.0.0:
    resolution: {integrity: sha512-pMhOfFDPiv9t5jjIXkHosWmkSyQbvsgEVNkz0ERHbuLh2T/7j4Mqqpz523Fe8MVY89KC6Sh/QfS2sM+SjgFDcw==}
    engines: {node: '>= 0.8'}
    dev: false

  /call-bind@1.0.7:
    resolution: {integrity: sha512-GHTSNSYICQ7scH7sZ+M2rFopRoLh8t2bLSW6BbgrtLsahOIB5iyAVJf9GjWK3cYTDaMj4XdBpM1cA6pIS0Kv2w==}
    engines: {node: '>= 0.4'}
    dependencies:
      es-define-property: 1.0.0
      es-errors: 1.3.0
      function-bind: 1.1.2
      get-intrinsic: 1.2.4
      set-function-length: 1.2.2
    dev: false

  /caller-callsite@2.0.0:
    resolution: {integrity: sha512-JuG3qI4QOftFsZyOn1qq87fq5grLIyk1JYd5lJmdA+fG7aQ9pA/i3JIJGcO3q0MrRcHlOt1U+ZeHW8Dq9axALQ==}
    engines: {node: '>=4'}
    dependencies:
      callsites: 2.0.0
    dev: false

  /caller-path@2.0.0:
    resolution: {integrity: sha512-MCL3sf6nCSXOwCTzvPKhN18TU7AHTvdtam8DAogxcrJ8Rjfbbg7Lgng64H9Iy+vUV6VGFClN/TyxBkAebLRR4A==}
    engines: {node: '>=4'}
    dependencies:
      caller-callsite: 2.0.0
    dev: false

  /callsites@2.0.0:
    resolution: {integrity: sha512-ksWePWBloaWPxJYQ8TL0JHvtci6G5QTKwQ95RcWAa/lzoAKuAOflGdAK92hpHXjkwb8zLxoLNUoNYZgVsaJzvQ==}
    engines: {node: '>=4'}
    dev: false

  /camelcase@5.3.1:
    resolution: {integrity: sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==}
    engines: {node: '>=6'}
    dev: false

  /camelcase@6.3.0:
    resolution: {integrity: sha512-Gmy6FhYlCY7uOElZUSbxo2UCDH8owEk996gkbrpsgGtrJLM3J7jGxl9Ic7Qwwj4ivOE5AWZWRMecDdF7hqGjFA==}
    engines: {node: '>=10'}
    dev: false

  /caniuse-lite@1.0.30001623:
    resolution: {integrity: sha512-X/XhAVKlpIxWPpgRTnlgZssJrF0m6YtRA0QDWgsBNT12uZM6LPRydR7ip405Y3t1LamD8cP2TZFEDZFBf5ApcA==}
    dev: false

  /chalk@2.4.2:
    resolution: {integrity: sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==}
    engines: {node: '>=4'}
    dependencies:
      ansi-styles: 3.2.1
      escape-string-regexp: 1.0.5
      supports-color: 5.5.0
    dev: false

  /chalk@4.1.2:
    resolution: {integrity: sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==}
    engines: {node: '>=10'}
    dependencies:
      ansi-styles: 4.3.0
      supports-color: 7.2.0
    dev: false

  /chokidar@3.6.0:
    resolution: {integrity: sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==}
    engines: {node: '>= 8.10.0'}
    dependencies:
      anymatch: 3.1.3
      braces: 3.0.3
      glob-parent: 5.1.2
      is-binary-path: 2.1.0
      is-glob: 4.0.3
      normalize-path: 3.0.0
      readdirp: 3.6.0
    optionalDependencies:
      fsevents: 2.3.3
    dev: false

  /chrome-launcher@0.15.2:
    resolution: {integrity: sha512-zdLEwNo3aUVzIhKhTtXfxhdvZhUghrnmkvcAq2NoDd+LeOHKf03H5jwZ8T/STsAlzyALkBVK552iaG1fGf1xVQ==}
    engines: {node: '>=12.13.0'}
    hasBin: true
    dependencies:
      '@types/node': 20.12.12
      escape-string-regexp: 4.0.0
      is-wsl: 2.2.0
      lighthouse-logger: 1.4.2
    transitivePeerDependencies:
      - supports-color
    dev: false

  /ci-info@2.0.0:
    resolution: {integrity: sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1/Z8wZzYPxqUrXeBboCQ==}
    dev: false

  /ci-info@3.9.0:
    resolution: {integrity: sha512-NIxF55hv4nSqQswkAeiOi1r83xy8JldOFDTWiug55KBu9Jnblncd2U6ViHmYgHf01TPZS77NJBhBMKdWj9HQMQ==}
    engines: {node: '>=8'}
    dev: false

  /citty@0.1.6:
    resolution: {integrity: sha512-tskPPKEs8D2KPafUypv2gxwJP8h/OaJmC82QQGGDQcHvXX43xF2VDACcJVmZ0EuSxkpO9Kc4MlrA3q0+FG58AQ==}
    dependencies:
      consola: 3.2.3
    dev: false

  /cli-cursor@3.1.0:
    resolution: {integrity: sha512-I/zHAwsKf9FqGoXM4WWRACob9+SNukZTd94DWF57E4toouRulbCxcUh6RKUEOQlYTHJnzkPMySvPNaaSLNfLZw==}
    engines: {node: '>=8'}
    dependencies:
      restore-cursor: 3.1.0
    dev: false

  /cli-spinners@2.9.2:
    resolution: {integrity: sha512-ywqV+5MmyL4E7ybXgKys4DugZbX0FC6LnwrhjuykIjnK9k8OQacQ7axGKnjDXWNhns0xot3bZI5h55H8yo9cJg==}
    engines: {node: '>=6'}
    dev: false

  /clipboardy@4.0.0:
    resolution: {integrity: sha512-5mOlNS0mhX0707P2I0aZ2V/cmHUEO/fL7VFLqszkhUsxt7RwnmrInf/eEQKlf5GzvYeHIjT+Ov1HRfNmymlG0w==}
    engines: {node: '>=18'}
    dependencies:
      execa: 8.0.1
      is-wsl: 3.1.0
      is64bit: 2.0.0
    dev: false

  /cliui@6.0.0:
    resolution: {integrity: sha512-t6wbgtoCXvAzst7QgXxJYqPt0usEfbgQdftEPbLL/cvv6HPE5VgvqCuAIDR0NgU52ds6rFwqrgakNLrHEjCbrQ==}
    dependencies:
      string-width: 4.2.3
      strip-ansi: 6.0.1
      wrap-ansi: 6.2.0
    dev: false

  /cliui@8.0.1:
    resolution: {integrity: sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==}
    engines: {node: '>=12'}
    dependencies:
      string-width: 4.2.3
      strip-ansi: 6.0.1
      wrap-ansi: 7.0.0
    dev: false

  /clone-deep@4.0.1:
    resolution: {integrity: sha512-neHB9xuzh/wk0dIHweyAXv2aPGZIVk3pLMe+/RNzINf17fe0OG96QroktYAUm7SM1PBnzTabaLboqqxDyMU+SQ==}
    engines: {node: '>=6'}
    dependencies:
      is-plain-object: 2.0.4
      kind-of: 6.0.3
      shallow-clone: 3.0.1
    dev: false

  /clone@1.0.4:
    resolution: {integrity: sha512-JQHZ2QMW6l3aH/j6xCqQThY/9OH4D/9ls34cgkUBiEeocRTU04tHfKPBsUK1PqZCUQM7GiA0IIXJSuXHI64Kbg==}
    engines: {node: '>=0.8'}
    dev: false

  /clsx@1.2.1:
    resolution: {integrity: sha512-EcR6r5a8bj6pu3ycsa/E/cKVGuTgZJZdsyUYHOksG/UHIiKfjxzRxYJpyVBwYaQeOvghal9fcc4PidlgzugAQg==}
    engines: {node: '>=6'}
    dev: false

  /clsx@2.1.0:
    resolution: {integrity: sha512-m3iNNWpd9rl3jvvcBnu70ylMdrXt8Vlq4HYadnU5fwcOtvkSQWPmj7amUcDT2qYI7risszBjI5AUIUox9D16pg==}
    engines: {node: '>=6'}
    dev: false

  /color-convert@1.9.3:
    resolution: {integrity: sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==}
    dependencies:
      color-name: 1.1.3
    dev: false

  /color-convert@2.0.1:
    resolution: {integrity: sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==}
    engines: {node: '>=7.0.0'}
    dependencies:
      color-name: 1.1.4
    dev: false

  /color-name@1.1.3:
    resolution: {integrity: sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==}
    dev: false

  /color-name@1.1.4:
    resolution: {integrity: sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==}
    dev: false

  /colorette@1.4.0:
    resolution: {integrity: sha512-Y2oEozpomLn7Q3HFP7dpww7AtMJplbM9lGZP6RDfHqmbeRjiwRg4n6VM6j4KLmRke85uWEI7JqF17f3pqdRA0g==}
    dev: false

  /command-exists@1.2.9:
    resolution: {integrity: sha512-LTQ/SGc+s0Xc0Fu5WaKnR0YiygZkm9eKFvyS+fRsU7/ZWFF8ykFM6Pc9aCVf1+xasOOZpO3BAVgVrKvsqKHV7w==}
    dev: false

  /commander@2.20.3:
    resolution: {integrity: sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==}
    dev: false

  /commander@9.5.0:
    resolution: {integrity: sha512-KRs7WVDKg86PWiuAqhDrAQnTXZKraVcCc6vFdL14qrZ/DcWwuRo7VoiYXalXO7S5GKpqYiVEwCbgFDfxNHKJBQ==}
    engines: {node: ^12.20.0 || >=14}
    dev: false

  /commondir@1.0.1:
    resolution: {integrity: sha512-W9pAhw0ja1Edb5GVdIF1mjZw/ASI0AlShXM83UUGe2DVr5TdAPEA1OA8m/g8zWp9x6On7gqufY+FatDbC3MDQg==}
    dev: false

  /compressible@2.0.18:
    resolution: {integrity: sha512-AF3r7P5dWxL8MxyITRMlORQNaOA2IkAFaTr4k7BUumjPtRpGDTZpl0Pb1XCO6JeDCBdp126Cgs9sMxqSjgYyRg==}
    engines: {node: '>= 0.6'}
    dependencies:
      mime-db: 1.52.0
    dev: false

  /compression@1.7.4:
    resolution: {integrity: sha512-jaSIDzP9pZVS4ZfQ+TzvtiWhdpFhE2RDHz8QJkpX9SIpLq88VueF5jJw6t+6CUQcAoA6t+x89MLrWAqpfDE8iQ==}
    engines: {node: '>= 0.8.0'}
    dependencies:
      accepts: 1.3.8
      bytes: 3.0.0
      compressible: 2.0.18
      debug: 2.6.9
      on-headers: 1.0.2
      safe-buffer: 5.1.2
      vary: 1.1.2
    transitivePeerDependencies:
      - supports-color
    dev: false

  /concat-map@0.0.1:
    resolution: {integrity: sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==}
    dev: false

  /confbox@0.1.7:
    resolution: {integrity: sha512-uJcB/FKZtBMCJpK8MQji6bJHgu1tixKPxRLeGkNzBoOZzpnZUJm0jm2/sBDWcuBx1dYgxV4JU+g5hmNxCyAmdA==}
    dev: false

  /connect@3.7.0:
    resolution: {integrity: sha512-ZqRXc+tZukToSNmh5C2iWMSoV3X1YUcPbqEM4DkEG5tNQXrQUZCNVGGv3IuicnkMtPfGf3Xtp8WCXs295iQ1pQ==}
    engines: {node: '>= 0.10.0'}
    dependencies:
      debug: 2.6.9
      finalhandler: 1.1.2
      parseurl: 1.3.3
      utils-merge: 1.0.1
    transitivePeerDependencies:
      - supports-color
    dev: false

  /consola@3.2.3:
    resolution: {integrity: sha512-I5qxpzLv+sJhTVEoLYNcTW+bThDCPsit0vLNKShZx6rLtpilNpmmeTPaeqJb9ZE9dV3DGaeby6Vuhrw38WjeyQ==}
    engines: {node: ^14.18.0 || >=16.10.0}
    dev: false

  /convert-source-map@2.0.0:
    resolution: {integrity: sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==}
    dev: false

  /cookie-es@1.1.0:
    resolution: {integrity: sha512-L2rLOcK0wzWSfSDA33YR+PUHDG10a8px7rUHKWbGLP4YfbsMed2KFUw5fczvDPbT98DDe3LEzviswl810apTEw==}
    dev: false

  /core-js-compat@3.37.1:
    resolution: {integrity: sha512-9TNiImhKvQqSUkOvk/mMRZzOANTiEVC7WaBNhHcKM7x+/5E1l5NvsysR19zuDQScE8k+kfQXWRN3AtS/eOSHpg==}
    dependencies:
      browserslist: 4.23.0
    dev: false

  /core-util-is@1.0.3:
    resolution: {integrity: sha512-ZQBvi1DcpJ4GDqanjucZ2Hj3wEO5pZDS89BWbkcrvdxksJorwUDDZamX9ldFkp9aw2lmBDLgkObEA4DWNJ9FYQ==}
    dev: false

  /cosmiconfig@5.2.1:
    resolution: {integrity: sha512-H65gsXo1SKjf8zmrJ67eJk8aIRKV5ff2D4uKZIBZShbhGSpEmsQOPW/SKMKYhSTrqR7ufy6RP69rPogdaPh/kA==}
    engines: {node: '>=4'}
    dependencies:
      import-fresh: 2.0.0
      is-directory: 0.3.1
      js-yaml: 3.14.1
      parse-json: 4.0.0
    dev: false

  /crc-32@1.2.2:
    resolution: {integrity: sha512-ROmzCKrTnOwybPcJApAA6WBWij23HVfGVNKqqrZpuyZOHqK2CwHSvpGuyt/UNNvaIjEd8X5IFGp4Mh+Ie1IHJQ==}
    engines: {node: '>=0.8'}
    hasBin: true
    dev: false

  /cross-fetch@3.1.8:
    resolution: {integrity: sha512-cvA+JwZoU0Xq+h6WkMvAUqPEYy92Obet6UdKLfW60qn99ftItKjB5T+BkyWOFWe2pUyfQ+IJHmpOTznqk1M6Kg==}
    dependencies:
      node-fetch: 2.7.0
    transitivePeerDependencies:
      - encoding
    dev: false

  /cross-fetch@4.0.0:
    resolution: {integrity: sha512-e4a5N8lVvuLgAWgnCrLr2PP0YyDOTHa9H/Rj54dirp61qXnNq46m82bRhNqIA5VccJtWBvPTFRV3TtvHUKPB1g==}
    dependencies:
      node-fetch: 2.7.0
    transitivePeerDependencies:
      - encoding
    dev: false

  /cross-spawn@7.0.3:
    resolution: {integrity: sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==}
    engines: {node: '>= 8'}
    dependencies:
      path-key: 3.1.1
      shebang-command: 2.0.0
      which: 2.0.2
    dev: false

  /crossws@0.2.4:
    resolution: {integrity: sha512-DAxroI2uSOgUKLz00NX6A8U/8EE3SZHmIND+10jkVSaypvyt57J5JEOxAQOL6lQxyzi/wZbTIwssU1uy69h5Vg==}
    peerDependencies:
      uWebSockets.js: '*'
    peerDependenciesMeta:
      uWebSockets.js:
        optional: true
    dev: false

  /css-what@6.1.0:
    resolution: {integrity: sha512-HTUrgRJ7r4dsZKU6GjmpfRK1O76h97Z8MfS1G0FozR+oF2kG6Vfe8JE6zwrkbxigziPHinCJ+gCPjA9EaBDtRw==}
    engines: {node: '>= 6'}
    dev: false

  /cssesc@3.0.0:
    resolution: {integrity: sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==}
    engines: {node: '>=4'}
    hasBin: true
    dev: false

  /csstype@3.1.3:
    resolution: {integrity: sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==}
    dev: false

  /date-fns@2.30.0:
    resolution: {integrity: sha512-fnULvOpxnC5/Vg3NCiWelDsLiUc9bRwAPs/+LfTLNvetFCtCTN+yQz15C/fs4AwX1R9K5GLtLfn8QW+dWisaAw==}
    engines: {node: '>=0.11'}
    dependencies:
      '@babel/runtime': 7.24.6
    dev: false

  /dayjs@1.11.11:
    resolution: {integrity: sha512-okzr3f11N6WuqYtZSvm+F776mB41wRZMhKP+hc34YdW+KmtYYK9iqvHSwo2k9FEH3fhGXvOPV6yz2IcSrfRUDg==}
    dev: false

  /debug@2.6.9:
    resolution: {integrity: sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==}
    peerDependencies:
      supports-color: '*'
    peerDependenciesMeta:
      supports-color:
        optional: true
    dependencies:
      ms: 2.0.0
    dev: false

  /debug@4.3.4:
    resolution: {integrity: sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==}
    engines: {node: '>=6.0'}
    peerDependencies:
      supports-color: '*'
    peerDependenciesMeta:
      supports-color:
        optional: true
    dependencies:
      ms: 2.1.2
    dev: false

  /decamelize@1.2.0:
    resolution: {integrity: sha512-z2S+W9X73hAUUki+N+9Za2lBlun89zigOyGrsax+KUQ6wKW4ZoWpEYBkGhQjwAjjDCkWxhY0VKEhk8wzY7F5cA==}
    engines: {node: '>=0.10.0'}
    dev: false

  /decode-uri-component@0.2.2:
    resolution: {integrity: sha512-FqUYQ+8o158GyGTrMFJms9qh3CqTKvAqgqsTnkLI8sKu0028orqBhxNMFkFen0zGyg6epACD32pjVk58ngIErQ==}
    engines: {node: '>=0.10'}
    dev: false

  /deep-object-diff@1.1.9:
    resolution: {integrity: sha512-Rn+RuwkmkDwCi2/oXOFS9Gsr5lJZu/yTGpK7wAaAIE75CC+LCGEZHpY6VQJa/RoJcrmaA/docWJZvYohlNkWPA==}
    dev: false

  /deepmerge@4.3.1:
    resolution: {integrity: sha512-3sUqbMEc77XqpdNO7FRyRog+eW3ph+GYCbj+rK+uYyRMuwsVy0rMiVtPn+QJlKFvWP/1PYpapqYn0Me2knFn+A==}
    engines: {node: '>=0.10.0'}
    dev: false

  /defaults@1.0.4:
    resolution: {integrity: sha512-eFuaLoy/Rxalv2kr+lqMlUnrDWV+3j4pljOIJgLIhI058IQfWJ7vXhyEIHu+HtC738klGALYxOKDO0bQP3tg8A==}
    dependencies:
      clone: 1.0.4
    dev: false

  /define-data-property@1.1.4:
    resolution: {integrity: sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==}
    engines: {node: '>= 0.4'}
    dependencies:
      es-define-property: 1.0.0
      es-errors: 1.3.0
      gopd: 1.0.1
    dev: false

  /define-lazy-prop@2.0.0:
    resolution: {integrity: sha512-Ds09qNh8yw3khSjiJjiUInaGX9xlqZDY7JVryGxdxV7NPeuqQfplOpQ66yJFZut3jLa5zOwkXw1g9EI2uKh4Og==}
    engines: {node: '>=8'}
    dev: false

  /defu@6.1.4:
    resolution: {integrity: sha512-mEQCMmwJu317oSz8CwdIOdwf3xMif1ttiM8LTufzc3g6kR+9Pe236twL8j3IYT1F7GfRgGcW6MWxzZjLIkuHIg==}
    dev: false

  /denodeify@1.2.1:
    resolution: {integrity: sha512-KNTihKNmQENUZeKu5fzfpzRqR5S2VMp4gl9RFHiWzj9DfvYQPMJ6XHKNaQxaGCXwPk6y9yme3aUoaiAe+KX+vg==}
    dev: false

  /depd@2.0.0:
    resolution: {integrity: sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==}
    engines: {node: '>= 0.8'}
    dev: false

  /destr@2.0.3:
    resolution: {integrity: sha512-2N3BOUU4gYMpTP24s5rF5iP7BDr7uNTCs4ozw3kf/eKfvWSIu93GEBi5m427YoyJoeOzQ5smuu4nNAPGb8idSQ==}
    dev: false

  /destroy@1.2.0:
    resolution: {integrity: sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==}
    engines: {node: '>= 0.8', npm: 1.2.8000 || >= 1.4.16}
    dev: false

  /detect-browser@5.3.0:
    resolution: {integrity: sha512-53rsFbGdwMwlF7qvCt0ypLM5V5/Mbl0szB7GPN8y9NCcbknYOeVVXdrXEq+90IwAfrrzt6Hd+u2E2ntakICU8w==}
    dev: false

  /detect-libc@1.0.3:
    resolution: {integrity: sha512-pGjwhsmsp4kL2RTz08wcOlGN83otlqHeD/Z5T8GXZB+/YcpQ/dgo+lbU8ZsGxV0HIvqqxo9l7mqYwyYMD9bKDg==}
    engines: {node: '>=0.10'}
    hasBin: true
    dev: false

  /detect-node-es@1.1.0:
    resolution: {integrity: sha512-ypdmJU/TbBby2Dxibuv7ZLW3Bs1QEmM7nHjEANfohJLvE0XVujisn1qPJcZxg+qDucsr+bP6fLD1rPS3AhJ7EQ==}
    dev: false

  /dijkstrajs@1.0.3:
    resolution: {integrity: sha512-qiSlmBq9+BCdCA/L46dw8Uy93mloxsPSbwnm5yrKn2vMPiy8KyAskTF6zuV/j5BMsmOGZDPs7KjU+mjb670kfA==}
    dev: false

  /duplexify@4.1.3:
    resolution: {integrity: sha512-M3BmBhwJRZsSx38lZyhE53Csddgzl5R7xGJNk7CVddZD6CcmwMCH8J+7AprIrQKH7TonKxaCjcv27Qmf+sQ+oA==}
    dependencies:
      end-of-stream: 1.4.4
      inherits: 2.0.4
      readable-stream: 3.6.2
      stream-shift: 1.0.3
    dev: false

  /eciesjs@0.3.18:
    resolution: {integrity: sha512-RQhegEtLSyIiGJmFTZfvCTHER/fymipXFVx6OwSRYD6hOuy+6Kjpk0dGvIfP9kxn/smBpxQy71uxpGO406ITCw==}
    dependencies:
      '@types/secp256k1': 4.0.6
      futoin-hkdf: 1.5.3
      secp256k1: 5.0.0
    dev: false

  /ee-first@1.1.1:
    resolution: {integrity: sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==}
    dev: false

  /electron-to-chromium@1.4.783:
    resolution: {integrity: sha512-bT0jEz/Xz1fahQpbZ1D7LgmPYZ3iHVY39NcWWro1+hA2IvjiPeaXtfSqrQ+nXjApMvQRE2ASt1itSLRrebHMRQ==}
    dev: false

  /elliptic@6.5.5:
    resolution: {integrity: sha512-7EjbcmUm17NQFu4Pmgmq2olYMj8nwMnpcddByChSUjArp8F5DQWcIcpriwO4ZToLNAJig0yiyjswfyGNje/ixw==}
    dependencies:
      bn.js: 4.12.0
      brorand: 1.1.0
      hash.js: 1.1.7
      hmac-drbg: 1.0.1
      inherits: 2.0.4
      minimalistic-assert: 1.0.1
      minimalistic-crypto-utils: 1.0.1
    dev: false

  /emoji-regex@8.0.0:
    resolution: {integrity: sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==}
    dev: false

  /encode-utf8@1.0.3:
    resolution: {integrity: sha512-ucAnuBEhUK4boH2HjVYG5Q2mQyPorvv0u/ocS+zhdw0S8AlHYY+GOFhP1Gio5z4icpP2ivFSvhtFjQi8+T9ppw==}
    dev: false

  /encodeurl@1.0.2:
    resolution: {integrity: sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==}
    engines: {node: '>= 0.8'}
    dev: false

  /end-of-stream@1.4.4:
    resolution: {integrity: sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==}
    dependencies:
      once: 1.4.0
    dev: false

  /engine.io-client@6.5.3:
    resolution: {integrity: sha512-9Z0qLB0NIisTRt1DZ/8U2k12RJn8yls/nXMZLn+/N8hANT3TcYjKFKcwbw5zFQiN4NTde3TSY9zb79e1ij6j9Q==}
    dependencies:
      '@socket.io/component-emitter': 3.1.2
      debug: 4.3.4
      engine.io-parser: 5.2.2
      ws: 8.11.0
      xmlhttprequest-ssl: 2.0.0
    transitivePeerDependencies:
      - bufferutil
      - supports-color
      - utf-8-validate
    dev: false

  /engine.io-parser@5.2.2:
    resolution: {integrity: sha512-RcyUFKA93/CXH20l4SoVvzZfrSDMOTUS3bWVpTt2FuFP+XYrL8i8oonHP7WInRyVHXh0n/ORtoeiE1os+8qkSw==}
    engines: {node: '>=10.0.0'}
    dev: false

  /entities@4.5.0:
    resolution: {integrity: sha512-V0hjH4dGPh9Ao5p0MoRY6BVqtwCjhz6vI5LT8AJ55H+4g9/4vbHx1I54fS0XuclLhDHArPQCiMjDxjaL8fPxhw==}
    engines: {node: '>=0.12'}
    dev: false

  /envinfo@7.13.0:
    resolution: {integrity: sha512-cvcaMr7KqXVh4nyzGTVqTum+gAiL265x5jUWQIDLq//zOGbW+gSW/C+OWLleY/rs9Qole6AZLMXPbtIFQbqu+Q==}
    engines: {node: '>=4'}
    hasBin: true
    dev: false

  /error-ex@1.3.2:
    resolution: {integrity: sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==}
    dependencies:
      is-arrayish: 0.2.1
    dev: false

  /error-stack-parser@2.1.4:
    resolution: {integrity: sha512-Sk5V6wVazPhq5MhpO+AUxJn5x7XSXGl1R93Vn7i+zS15KDVxQijejNCrz8340/2bgLBjR9GtEG8ZVKONDjcqGQ==}
    dependencies:
      stackframe: 1.3.4
    dev: false

  /errorhandler@1.5.1:
    resolution: {integrity: sha512-rcOwbfvP1WTViVoUjcfZicVzjhjTuhSMntHh6mW3IrEiyE6mJyXvsToJUJGlGlw/2xU9P5whlWNGlIDVeCiT4A==}
    engines: {node: '>= 0.8'}
    dependencies:
      accepts: 1.3.8
      escape-html: 1.0.3
    dev: false

  /es-define-property@1.0.0:
    resolution: {integrity: sha512-jxayLKShrEqqzJ0eumQbVhTYQM27CfT1T35+gCgDFoL82JLsXqTJ76zv6A0YLOgEnLUMvLzsDsGIrl8NFpT2gQ==}
    engines: {node: '>= 0.4'}
    dependencies:
      get-intrinsic: 1.2.4
    dev: false

  /es-errors@1.3.0:
    resolution: {integrity: sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==}
    engines: {node: '>= 0.4'}
    dev: false

  /escalade@3.1.2:
    resolution: {integrity: sha512-ErCHMCae19vR8vQGe50xIsVomy19rg6gFu3+r3jkEO46suLMWBksvVyoGgQV+jOfl84ZSOSlmv6Gxa89PmTGmA==}
    engines: {node: '>=6'}
    dev: false

  /escape-html@1.0.3:
    resolution: {integrity: sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==}
    dev: false

  /escape-string-regexp@1.0.5:
    resolution: {integrity: sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==}
    engines: {node: '>=0.8.0'}
    dev: false

  /escape-string-regexp@2.0.0:
    resolution: {integrity: sha512-UpzcLCXolUWcNu5HtVMHYdXJjArjsF9C0aNnquZYY4uW/Vu0miy5YoWvbV345HauVvcAUnpRuhMMcqTcGOY2+w==}
    engines: {node: '>=8'}
    dev: false

  /escape-string-regexp@4.0.0:
    resolution: {integrity: sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==}
    engines: {node: '>=10'}
    dev: false

  /esprima@4.0.1:
    resolution: {integrity: sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==}
    engines: {node: '>=4'}
    hasBin: true
    dev: false

  /estree-walker@2.0.2:
    resolution: {integrity: sha512-Rfkk/Mp/DL7JVje3u18FxFujQlTNR2q6QfMSMB7AvCBx91NGj/ba3kCfza0f6dVDbw7YlRf/nDrn7pQrCCyQ/w==}
    dev: false

  /esutils@2.0.3:
    resolution: {integrity: sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==}
    engines: {node: '>=0.10.0'}
    dev: false

  /etag@1.8.1:
    resolution: {integrity: sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==}
    engines: {node: '>= 0.6'}
    dev: false

  /eth-block-tracker@7.1.0:
    resolution: {integrity: sha512-8YdplnuE1IK4xfqpf4iU7oBxnOYAc35934o083G8ao+8WM8QQtt/mVlAY6yIAdY1eMeLqg4Z//PZjJGmWGPMRg==}
    engines: {node: '>=14.0.0'}
    dependencies:
      '@metamask/eth-json-rpc-provider': 1.0.1
      '@metamask/safe-event-emitter': 3.1.1
      '@metamask/utils': 5.0.2
      json-rpc-random-id: 1.0.1
      pify: 3.0.0
    transitivePeerDependencies:
      - supports-color
    dev: false

  /eth-json-rpc-filters@6.0.1:
    resolution: {integrity: sha512-ITJTvqoCw6OVMLs7pI8f4gG92n/St6x80ACtHodeS+IXmO0w+t1T5OOzfSt7KLSMLRkVUoexV7tztLgDxg+iig==}
    engines: {node: '>=14.0.0'}
    dependencies:
      '@metamask/safe-event-emitter': 3.1.1
      async-mutex: 0.2.6
      eth-query: 2.1.2
      json-rpc-engine: 6.1.0
      pify: 5.0.0
    dev: false

  /eth-query@2.1.2:
    resolution: {integrity: sha512-srES0ZcvwkR/wd5OQBRA1bIJMww1skfGS0s8wlwK3/oNP4+wnds60krvu5R1QbpRQjMmpG5OMIWro5s7gvDPsA==}
    dependencies:
      json-rpc-random-id: 1.0.1
      xtend: 4.0.2
    dev: false

  /eth-rpc-errors@4.0.3:
    resolution: {integrity: sha512-Z3ymjopaoft7JDoxZcEb3pwdGh7yiYMhOwm2doUt6ASXlMavpNlK6Cre0+IMl2VSGyEU9rkiperQhp5iRxn5Pg==}
    dependencies:
      fast-safe-stringify: 2.1.1
    dev: false

  /ethereum-cryptography@2.1.3:
    resolution: {integrity: sha512-BlwbIL7/P45W8FGW2r7LGuvoEZ+7PWsniMvQ4p5s2xCyw9tmaDlpfsN9HjAucbF+t/qpVHwZUisgfK24TCW8aA==}
    dependencies:
      '@noble/curves': 1.3.0
      '@noble/hashes': 1.3.3
      '@scure/bip32': 1.3.3
      '@scure/bip39': 1.2.2
    dev: false

  /event-target-shim@5.0.1:
    resolution: {integrity: sha512-i/2XbnSz/uxRCU6+NdVJgKWDTM427+MqYbkQzD321DuCQJUqOuJKIA0IM2+W2xtYHdKOmZ4dR6fExsd4SXL+WQ==}
    engines: {node: '>=6'}
    dev: false

  /eventemitter2@6.4.9:
    resolution: {integrity: sha512-JEPTiaOt9f04oa6NOkc4aH+nVp5I3wEjpHbIPqfgCdD5v5bUzy7xQqwcVO2aDQgOWhI28da57HksMrzK9HlRxg==}
    dev: false

  /eventemitter3@5.0.1:
    resolution: {integrity: sha512-GWkBvjiSZK87ELrYOSESUYeVIc9mvLLf/nXalMOS5dYrgZq9o5OVkbZAVM06CVxYsCwH9BDZFPlQTlPA1j4ahA==}
    dev: false

  /events@3.3.0:
    resolution: {integrity: sha512-mQw+2fkQbALzQ7V0MY0IqdnXNOeTtP4r0lN9z7AAawCXgqea7bDii20AYrIBrFd/Hx0M2Ocz6S111CaFkUcb0Q==}
    engines: {node: '>=0.8.x'}
    dev: false

  /execa@5.1.1:
    resolution: {integrity: sha512-8uSpZZocAZRBAPIEINJj3Lo9HyGitllczc27Eh5YYojjMFMn8yHMDMaUHE2Jqfq05D/wucwI4JGURyXt1vchyg==}
    engines: {node: '>=10'}
    dependencies:
      cross-spawn: 7.0.3
      get-stream: 6.0.1
      human-signals: 2.1.0
      is-stream: 2.0.1
      merge-stream: 2.0.0
      npm-run-path: 4.0.1
      onetime: 5.1.2
      signal-exit: 3.0.7
      strip-final-newline: 2.0.0
    dev: false

  /execa@8.0.1:
    resolution: {integrity: sha512-VyhnebXciFV2DESc+p6B+y0LjSm0krU4OgJN44qFAhBY0TJ+1V61tYD2+wHusZ6F9n5K+vl8k0sTy7PEfV4qpg==}
    engines: {node: '>=16.17'}
    dependencies:
      cross-spawn: 7.0.3
      get-stream: 8.0.1
      human-signals: 5.0.0
      is-stream: 3.0.0
      merge-stream: 2.0.0
      npm-run-path: 5.3.0
      onetime: 6.0.0
      signal-exit: 4.1.0
      strip-final-newline: 3.0.0
    dev: false

  /extension-port-stream@3.0.0:
    resolution: {integrity: sha512-an2S5quJMiy5bnZKEf6AkfH/7r8CzHvhchU40gxN+OM6HPhe7Z9T1FUychcf2M9PpPOO0Hf7BAEfJkw2TDIBDw==}
    engines: {node: '>=12.0.0'}
    dependencies:
      readable-stream: 3.6.2
      webextension-polyfill: 0.10.0
    dev: false

  /fast-deep-equal@3.1.3:
    resolution: {integrity: sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==}
    dev: false

  /fast-glob@3.3.2:
    resolution: {integrity: sha512-oX2ruAFQwf/Orj8m737Y5adxDQO0LAB7/S5MnxCdTNDd4p6BsyIVsv9JQsATbTSq8KHRpLwIHbVlUNatxd+1Ow==}
    engines: {node: '>=8.6.0'}
    dependencies:
      '@nodelib/fs.stat': 2.0.5
      '@nodelib/fs.walk': 1.2.8
      glob-parent: 5.1.2
      merge2: 1.4.1
      micromatch: 4.0.7
    dev: false

  /fast-redact@3.5.0:
    resolution: {integrity: sha512-dwsoQlS7h9hMeYUq1W++23NDcBLV4KqONnITDV9DjfS3q1SgDGVrBdvvTLUotWtPSD7asWDV9/CmsZPy8Hf70A==}
    engines: {node: '>=6'}
    dev: false

  /fast-safe-stringify@2.1.1:
    resolution: {integrity: sha512-W+KJc2dmILlPplD/H4K9l9LcAHAfPtP6BY84uVLXQ6Evcz9Lcg33Y2z1IVblT6xdY54PXYVHEv+0Wpq8Io6zkA==}
    dev: false

  /fast-xml-parser@4.4.0:
    resolution: {integrity: sha512-kLY3jFlwIYwBNDojclKsNAC12sfD6NwW74QB2CoNGPvtVxjliYehVunB3HYyNi+n4Tt1dAcgwYvmKF/Z18flqg==}
    hasBin: true
    dependencies:
      strnum: 1.0.5
    dev: false

  /fastq@1.17.1:
    resolution: {integrity: sha512-sRVD3lWVIXWg6By68ZN7vho9a1pQcN/WBFaAAsDDFzlJjvoGx0P8z7V1t72grFJfJhu3YPZBuu25f7Kaw2jN1w==}
    dependencies:
      reusify: 1.0.4
    dev: false

  /fb-watchman@2.0.2:
    resolution: {integrity: sha512-p5161BqbuCaSnB8jIbzQHOlpgsPmK5rJVDfDKO91Axs5NC1uu3HRQm6wt9cd9/+GtQQIO53JdGXXoyDpTAsgYA==}
    dependencies:
      bser: 2.1.1
    dev: false

  /fill-range@7.1.1:
    resolution: {integrity: sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==}
    engines: {node: '>=8'}
    dependencies:
      to-regex-range: 5.0.1
    dev: false

  /filter-obj@1.1.0:
    resolution: {integrity: sha512-8rXg1ZnX7xzy2NGDVkBVaAy+lSlPNwad13BtgSlLuxfIslyt5Vg64U7tFcCt4WS1R0hvtnQybT/IyCkGZ3DpXQ==}
    engines: {node: '>=0.10.0'}
    dev: false

  /finalhandler@1.1.2:
    resolution: {integrity: sha512-aAWcW57uxVNrQZqFXjITpW3sIUQmHGG3qSb9mUah9MgMC4NeWhNOlNjXEYq3HjRAvL6arUviZGGJsBg6z0zsWA==}
    engines: {node: '>= 0.8'}
    dependencies:
      debug: 2.6.9
      encodeurl: 1.0.2
      escape-html: 1.0.3
      on-finished: 2.3.0
      parseurl: 1.3.3
      statuses: 1.5.0
      unpipe: 1.0.0
    transitivePeerDependencies:
      - supports-color
    dev: false

  /find-cache-dir@2.1.0:
    resolution: {integrity: sha512-Tq6PixE0w/VMFfCgbONnkiQIVol/JJL7nRMi20fqzA4NRs9AfeqMGeRdPi3wIhYkxjeBaWh2rxwapn5Tu3IqOQ==}
    engines: {node: '>=6'}
    dependencies:
      commondir: 1.0.1
      make-dir: 2.1.0
      pkg-dir: 3.0.0
    dev: false

  /find-up@3.0.0:
    resolution: {integrity: sha512-1yD6RmLI1XBfxugvORwlck6f75tYL+iR0jqwsOrOxMZyGYqUuDhJ0l4AXdO1iX/FTs9cBAMEk1gWSEx1kSbylg==}
    engines: {node: '>=6'}
    dependencies:
      locate-path: 3.0.0
    dev: false

  /find-up@4.1.0:
    resolution: {integrity: sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==}
    engines: {node: '>=8'}
    dependencies:
      locate-path: 5.0.0
      path-exists: 4.0.0
    dev: false

  /find-up@5.0.0:
    resolution: {integrity: sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==}
    engines: {node: '>=10'}
    dependencies:
      locate-path: 6.0.0
      path-exists: 4.0.0
    dev: false

  /flow-enums-runtime@0.0.6:
    resolution: {integrity: sha512-3PYnM29RFXwvAN6Pc/scUfkI7RwhQ/xqyLUyPNlXUp9S40zI8nup9tUSrTLSVnWGBN38FNiGWbwZOB6uR4OGdw==}
    dev: false

  /flow-parser@0.236.0:
    resolution: {integrity: sha512-0OEk9Gr+Yj7wjDW2KgaNYUypKau71jAfFyeLQF5iVtxqc6uJHag/MT7pmaEApf4qM7u86DkBcd4ualddYMfbLw==}
    engines: {node: '>=0.4.0'}
    dev: false

  /for-each@0.3.3:
    resolution: {integrity: sha512-jqYfLp7mo9vIyQf8ykW2v7A+2N4QjeCeI5+Dz9XraiO1ign81wjiH7Fb9vSOWvQfNtmSa4H2RoQTrrXivdUZmw==}
    dependencies:
      is-callable: 1.2.7
    dev: false

  /fresh@0.5.2:
    resolution: {integrity: sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q==}
    engines: {node: '>= 0.6'}
    dev: false

  /fs-extra@8.1.0:
    resolution: {integrity: sha512-yhlQgA6mnOJUKOsRUFsgJdQCvkKhcz8tlZG5HBQfReYZy46OwLcY+Zia0mtdHsOo9y/hP+CxMN0TU9QxoOtG4g==}
    engines: {node: '>=6 <7 || >=8'}
    dependencies:
      graceful-fs: 4.2.11
      jsonfile: 4.0.0
      universalify: 0.1.2
    dev: false

  /fs.realpath@1.0.0:
    resolution: {integrity: sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==}
    dev: false

  /fsevents@2.3.3:
    resolution: {integrity: sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==}
    engines: {node: ^8.16.0 || ^10.6.0 || >=11.0.0}
    os: [darwin]
    requiresBuild: true
    dev: false
    optional: true

  /function-bind@1.1.2:
    resolution: {integrity: sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==}
    dev: false

  /futoin-hkdf@1.5.3:
    resolution: {integrity: sha512-SewY5KdMpaoCeh7jachEWFsh1nNlaDjNHZXWqL5IGwtpEYHTgkr2+AMCgNwKWkcc0wpSYrZfR7he4WdmHFtDxQ==}
    engines: {node: '>=8'}
    dev: false

  /gensync@1.0.0-beta.2:
    resolution: {integrity: sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==}
    engines: {node: '>=6.9.0'}
    dev: false

  /get-caller-file@2.0.5:
    resolution: {integrity: sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==}
    engines: {node: 6.* || 8.* || >= 10.*}
    dev: false

  /get-intrinsic@1.2.4:
    resolution: {integrity: sha512-5uYhsJH8VJBTv7oslg4BznJYhDoRI6waYCxMmCdnTrcCrHA/fCFKoTFz2JKKE0HdDFUF7/oQuhzumXJK7paBRQ==}
    engines: {node: '>= 0.4'}
    dependencies:
      es-errors: 1.3.0
      function-bind: 1.1.2
      has-proto: 1.0.3
      has-symbols: 1.0.3
      hasown: 2.0.2
    dev: false

  /get-nonce@1.0.1:
    resolution: {integrity: sha512-FJhYRoDaiatfEkUK8HKlicmu/3SGFD51q3itKDGoSTysQJBnfOcxU5GxnhE1E6soB76MbT0MBtnKJuXyAx+96Q==}
    engines: {node: '>=6'}
    dev: false

  /get-port-please@3.1.2:
    resolution: {integrity: sha512-Gxc29eLs1fbn6LQ4jSU4vXjlwyZhF5HsGuMAa7gqBP4Rw4yxxltyDUuF5MBclFzDTXO+ACchGQoeela4DSfzdQ==}
    dev: false

  /get-stream@6.0.1:
    resolution: {integrity: sha512-ts6Wi+2j3jQjqi70w5AlN8DFnkSwC+MqmxEzdEALB2qXZYV3X/b1CTfgPLGJNMeAWxdPfU8FO1ms3NUfaHCPYg==}
    engines: {node: '>=10'}
    dev: false

  /get-stream@8.0.1:
    resolution: {integrity: sha512-VaUJspBffn/LMCJVoMvSAdmscJyS1auj5Zulnn5UoYcY531UWmdwhRWkcGKnGU93m5HSXP9LP2usOryrBtQowA==}
    engines: {node: '>=16'}
    dev: false

  /glob-parent@5.1.2:
    resolution: {integrity: sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==}
    engines: {node: '>= 6'}
    dependencies:
      is-glob: 4.0.3
    dev: false

  /glob@7.2.3:
    resolution: {integrity: sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==}
    deprecated: Glob versions prior to v9 are no longer supported
    dependencies:
      fs.realpath: 1.0.0
      inflight: 1.0.6
      inherits: 2.0.4
      minimatch: 3.1.2
      once: 1.4.0
      path-is-absolute: 1.0.1
    dev: false

  /globals@11.12.0:
    resolution: {integrity: sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==}
    engines: {node: '>=4'}
    dev: false

  /gopd@1.0.1:
    resolution: {integrity: sha512-d65bNlIadxvpb/A2abVdlqKqV563juRnZ1Wtk6s1sIR8uNsXR70xqIzVqxVf1eTqDunwT2MkczEeaezCKTZhwA==}
    dependencies:
      get-intrinsic: 1.2.4
    dev: false

  /graceful-fs@4.2.11:
    resolution: {integrity: sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==}
    dev: false

  /h3@1.11.1:
    resolution: {integrity: sha512-AbaH6IDnZN6nmbnJOH72y3c5Wwh9P97soSVdGSBbcDACRdkC0FEWf25pzx4f/NuOCK6quHmW18yF2Wx+G4Zi1A==}
    dependencies:
      cookie-es: 1.1.0
      crossws: 0.2.4
      defu: 6.1.4
      destr: 2.0.3
      iron-webcrypto: 1.2.1
      ohash: 1.1.3
      radix3: 1.1.2
      ufo: 1.5.3
      uncrypto: 0.1.3
      unenv: 1.9.0
    transitivePeerDependencies:
      - uWebSockets.js
    dev: false

  /has-flag@3.0.0:
    resolution: {integrity: sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==}
    engines: {node: '>=4'}
    dev: false

  /has-flag@4.0.0:
    resolution: {integrity: sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==}
    engines: {node: '>=8'}
    dev: false

  /has-property-descriptors@1.0.2:
    resolution: {integrity: sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==}
    dependencies:
      es-define-property: 1.0.0
    dev: false

  /has-proto@1.0.3:
    resolution: {integrity: sha512-SJ1amZAJUiZS+PhsVLf5tGydlaVB8EdFpaSO4gmiUKUOxk8qzn5AIy4ZeJUmh22znIdk/uMAUT2pl3FxzVUH+Q==}
    engines: {node: '>= 0.4'}
    dev: false

  /has-symbols@1.0.3:
    resolution: {integrity: sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A==}
    engines: {node: '>= 0.4'}
    dev: false

  /has-tostringtag@1.0.2:
    resolution: {integrity: sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==}
    engines: {node: '>= 0.4'}
    dependencies:
      has-symbols: 1.0.3
    dev: false

  /hash.js@1.1.7:
    resolution: {integrity: sha512-taOaskGt4z4SOANNseOviYDvjEJinIkRgmp7LbKP2YTTmVxWBl87s/uzK9r+44BclBSp2X7K1hqeNfz9JbBeXA==}
    dependencies:
      inherits: 2.0.4
      minimalistic-assert: 1.0.1
    dev: false

  /hasown@2.0.2:
    resolution: {integrity: sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==}
    engines: {node: '>= 0.4'}
    dependencies:
      function-bind: 1.1.2
    dev: false

  /hermes-estree@0.19.1:
    resolution: {integrity: sha512-daLGV3Q2MKk8w4evNMKwS8zBE/rcpA800nu1Q5kM08IKijoSnPe9Uo1iIxzPKRkn95IxxsgBMPeYHt3VG4ej2g==}
    dev: false

  /hermes-estree@0.20.1:
    resolution: {integrity: sha512-SQpZK4BzR48kuOg0v4pb3EAGNclzIlqMj3Opu/mu7bbAoFw6oig6cEt/RAi0zTFW/iW6Iz9X9ggGuZTAZ/yZHg==}
    dev: false

  /hermes-parser@0.19.1:
    resolution: {integrity: sha512-Vp+bXzxYJWrpEuJ/vXxUsLnt0+y4q9zyi4zUlkLqD8FKv4LjIfOvP69R/9Lty3dCyKh0E2BU7Eypqr63/rKT/A==}
    dependencies:
      hermes-estree: 0.19.1
    dev: false

  /hermes-parser@0.20.1:
    resolution: {integrity: sha512-BL5P83cwCogI8D7rrDCgsFY0tdYUtmFP9XaXtl2IQjC+2Xo+4okjfXintlTxcIwl4qeGddEl28Z11kbVIw0aNA==}
    dependencies:
      hermes-estree: 0.20.1
    dev: false

  /hermes-profile-transformer@0.0.6:
    resolution: {integrity: sha512-cnN7bQUm65UWOy6cbGcCcZ3rpwW8Q/j4OP5aWRhEry4Z2t2aR1cjrbp0BS+KiBN0smvP1caBgAuxutvyvJILzQ==}
    engines: {node: '>=8'}
    dependencies:
      source-map: 0.7.4
    dev: false

  /hey-listen@1.0.8:
    resolution: {integrity: sha512-COpmrF2NOg4TBWUJ5UVyaCU2A88wEMkUPK4hNqyCkqHbxT92BbvfjoSozkAIIm6XhicGlJHhFdullInrdhwU8Q==}
    dev: false

  /hmac-drbg@1.0.1:
    resolution: {integrity: sha512-Tti3gMqLdZfhOQY1Mzf/AanLiqh1WTiJgEj26ZuYQ9fbkLomzGchCws4FyrSd4VkpBfiNhaE1On+lOz894jvXg==}
    dependencies:
      hash.js: 1.1.7
      minimalistic-assert: 1.0.1
      minimalistic-crypto-utils: 1.0.1
    dev: false

  /html-parse-stringify@3.0.1:
    resolution: {integrity: sha512-KknJ50kTInJ7qIScF3jeaFRpMpE8/lfiTdzf/twXyPBLAGrLRTmkz3AdTnKeh40X8k9L2fdYwEp/42WGXIRGcg==}
    dependencies:
      void-elements: 3.1.0
    dev: false

  /http-errors@2.0.0:
    resolution: {integrity: sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==}
    engines: {node: '>= 0.8'}
    dependencies:
      depd: 2.0.0
      inherits: 2.0.4
      setprototypeof: 1.2.0
      statuses: 2.0.1
      toidentifier: 1.0.1
    dev: false

  /http-shutdown@1.2.2:
    resolution: {integrity: sha512-S9wWkJ/VSY9/k4qcjG318bqJNruzE4HySUhFYknwmu6LBP97KLLfwNf+n4V1BHurvFNkSKLFnK/RsuUnRTf9Vw==}
    engines: {iojs: '>= 1.0.0', node: '>= 0.12.0'}
    dev: false

  /human-signals@2.1.0:
    resolution: {integrity: sha512-B4FFZ6q/T2jhhksgkbEW3HBvWIfDW85snkQgawt07S7J5QXTk6BkNV+0yAeZrM5QpMAdYlocGoljn0sJ/WQkFw==}
    engines: {node: '>=10.17.0'}
    dev: false

  /human-signals@5.0.0:
    resolution: {integrity: sha512-AXcZb6vzzrFAUE61HnN4mpLqd/cSIwNQjtNWR0euPm6y0iqx3G4gOXaIDdtdDwZmhwe82LA6+zinmW4UBWVePQ==}
    engines: {node: '>=16.17.0'}
    dev: false

  /i18next-browser-languagedetector@7.1.0:
    resolution: {integrity: sha512-cr2k7u1XJJ4HTOjM9GyOMtbOA47RtUoWRAtt52z43r3AoMs2StYKyjS3URPhzHaf+mn10hY9dZWamga5WPQjhA==}
    dependencies:
      '@babel/runtime': 7.24.6
    dev: false

  /i18next@22.5.1:
    resolution: {integrity: sha512-8TGPgM3pAD+VRsMtUMNknRz3kzqwp/gPALrWMsDnmC1mKqJwpWyooQRLMcbTwq8z8YwSmuj+ZYvc+xCuEpkssA==}
    dependencies:
      '@babel/runtime': 7.24.6
    dev: false

  /i18next@23.11.5:
    resolution: {integrity: sha512-41pvpVbW9rhZPk5xjCX2TPJi2861LEig/YRhUkY+1FQ2IQPS0bKUDYnEqY8XPPbB48h1uIwLnP9iiEfuSl20CA==}
    dependencies:
      '@babel/runtime': 7.24.6
    dev: false

  /idb-keyval@6.2.1:
    resolution: {integrity: sha512-8Sb3veuYCyrZL+VBt9LJfZjLUPWVvqn8tG28VqYNFCo43KHcKuq+b4EiXGeuaLAQWL2YmyDgMp2aSpH9JHsEQg==}
    dev: false

  /ieee754@1.2.1:
    resolution: {integrity: sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA==}
    dev: false

  /image-size@1.1.1:
    resolution: {integrity: sha512-541xKlUw6jr/6gGuk92F+mYM5zaFAc5ahphvkqvNe2bQ6gVBkd6bfrmVJ2t4KDAfikAYZyIqTnktX3i6/aQDrQ==}
    engines: {node: '>=16.x'}
    hasBin: true
    dependencies:
      queue: 6.0.2
    dev: false

  /import-fresh@2.0.0:
    resolution: {integrity: sha512-eZ5H8rcgYazHbKC3PG4ClHNykCSxtAhxSSEM+2mb+7evD2CKF5V7c0dNum7AdpDh0ZdICwZY9sRSn8f+KH96sg==}
    engines: {node: '>=4'}
    dependencies:
      caller-path: 2.0.0
      resolve-from: 3.0.0
    dev: false

  /imurmurhash@0.1.4:
    resolution: {integrity: sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==}
    engines: {node: '>=0.8.19'}
    dev: false

  /inflight@1.0.6:
    resolution: {integrity: sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==}
    deprecated: This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.
    dependencies:
      once: 1.4.0
      wrappy: 1.0.2
    dev: false

  /inherits@2.0.4:
    resolution: {integrity: sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==}
    dev: false

  /invariant@2.2.4:
    resolution: {integrity: sha512-phJfQVBuaJM5raOpJjSfkiD6BpbCE4Ns//LaXl6wGYtUBY83nWS6Rf9tXm2e8VaK60JEjYldbPif/A2B1C2gNA==}
    dependencies:
      loose-envify: 1.4.0
    dev: false

  /iron-webcrypto@1.2.1:
    resolution: {integrity: sha512-feOM6FaSr6rEABp/eDfVseKyTMDt+KGpeB35SkVn9Tyn0CqvVsY3EwI0v5i8nMHyJnzCIQf7nsy3p41TPkJZhg==}
    dev: false

  /is-arguments@1.1.1:
    resolution: {integrity: sha512-8Q7EARjzEnKpt/PCD7e1cgUS0a6X8u5tdSiMqXhojOdoV9TsMsiO+9VLC5vAmO8N7/GmXn7yjR8qnA6bVAEzfA==}
    engines: {node: '>= 0.4'}
    dependencies:
      call-bind: 1.0.7
      has-tostringtag: 1.0.2
    dev: false

  /is-arrayish@0.2.1:
    resolution: {integrity: sha512-zz06S8t0ozoDXMG+ube26zeCTNXcKIPJZJi8hBrF4idCLms4CG9QtK7qBl1boi5ODzFpjswb5JPmHCbMpjaYzg==}
    dev: false

  /is-binary-path@2.1.0:
    resolution: {integrity: sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==}
    engines: {node: '>=8'}
    dependencies:
      binary-extensions: 2.3.0
    dev: false

  /is-callable@1.2.7:
    resolution: {integrity: sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==}
    engines: {node: '>= 0.4'}
    dev: false

  /is-core-module@2.13.1:
    resolution: {integrity: sha512-hHrIjvZsftOsvKSn2TRYl63zvxsgE0K+0mYMoH6gD4omR5IWB2KynivBQczo3+wF1cCkjzvptnI9Q0sPU66ilw==}
    dependencies:
      hasown: 2.0.2
    dev: false

  /is-directory@0.3.1:
    resolution: {integrity: sha512-yVChGzahRFvbkscn2MlwGismPO12i9+znNruC5gVEntG3qu0xQMzsGg/JFbrsqDOHtHFPci+V5aP5T9I+yeKqw==}
    engines: {node: '>=0.10.0'}
    dev: false

  /is-docker@2.2.1:
    resolution: {integrity: sha512-F+i2BKsFrH66iaUFc0woD8sLy8getkwTwtOBjvs56Cx4CgJDeKQeqfz8wAYiSb8JOprWhHH5p77PbmYCvvUuXQ==}
    engines: {node: '>=8'}
    hasBin: true
    dev: false

  /is-docker@3.0.0:
    resolution: {integrity: sha512-eljcgEDlEns/7AXFosB5K/2nCM4P7FQPkGc/DWLy5rmFEWvZayGrik1d9/QIY5nJ4f9YsVvBkA6kJpHn9rISdQ==}
    engines: {node: ^12.20.0 || ^14.13.1 || >=16.0.0}
    hasBin: true
    dev: false

  /is-extglob@2.1.1:
    resolution: {integrity: sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==}
    engines: {node: '>=0.10.0'}
    dev: false

  /is-fullwidth-code-point@2.0.0:
    resolution: {integrity: sha512-VHskAKYM8RfSFXwee5t5cbN5PZeq1Wrh6qd5bkyiXIf6UQcN6w/A0eXM9r6t8d+GYOh+o6ZhiEnb88LN/Y8m2w==}
    engines: {node: '>=4'}
    dev: false

  /is-fullwidth-code-point@3.0.0:
    resolution: {integrity: sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==}
    engines: {node: '>=8'}
    dev: false

  /is-generator-function@1.0.10:
    resolution: {integrity: sha512-jsEjy9l3yiXEQ+PsXdmBwEPcOxaXWLspKdplFUVI9vq1iZgIekeC0L167qeu86czQaxed3q/Uzuw0swL0irL8A==}
    engines: {node: '>= 0.4'}
    dependencies:
      has-tostringtag: 1.0.2
    dev: false

  /is-glob@4.0.3:
    resolution: {integrity: sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==}
    engines: {node: '>=0.10.0'}
    dependencies:
      is-extglob: 2.1.1
    dev: false

  /is-inside-container@1.0.0:
    resolution: {integrity: sha512-KIYLCCJghfHZxqjYBE7rEy0OBuTd5xCHS7tHVgvCLkx7StIoaxwNW3hCALgEUjFfeRk+MG/Qxmp/vtETEF3tRA==}
    engines: {node: '>=14.16'}
    hasBin: true
    dependencies:
      is-docker: 3.0.0
    dev: false

  /is-interactive@1.0.0:
    resolution: {integrity: sha512-2HvIEKRoqS62guEC+qBjpvRubdX910WCMuJTZ+I9yvqKU2/12eSL549HMwtabb4oupdj2sMP50k+XJfB/8JE6w==}
    engines: {node: '>=8'}
    dev: false

  /is-number@7.0.0:
    resolution: {integrity: sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==}
    engines: {node: '>=0.12.0'}
    dev: false

  /is-plain-object@2.0.4:
    resolution: {integrity: sha512-h5PpgXkWitc38BBMYawTYMWJHFZJVnBquFE57xFpjB8pJFiF6gZ+bU+WyI/yqXiFR5mdLsgYNaPe8uao6Uv9Og==}
    engines: {node: '>=0.10.0'}
    dependencies:
      isobject: 3.0.1
    dev: false

  /is-stream@2.0.1:
    resolution: {integrity: sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg==}
    engines: {node: '>=8'}
    dev: false

  /is-stream@3.0.0:
    resolution: {integrity: sha512-LnQR4bZ9IADDRSkvpqMGvt/tEJWclzklNgSw48V5EAaAeDd6qGvN8ei6k5p0tvxSR171VmGyHuTiAOfxAbr8kA==}
    engines: {node: ^12.20.0 || ^14.13.1 || >=16.0.0}
    dev: false

  /is-typed-array@1.1.13:
    resolution: {integrity: sha512-uZ25/bUAlUY5fR4OKT4rZQEBrzQWYV9ZJYGGsUmEJ6thodVJ1HX64ePQ6Z0qPWP+m+Uq6e9UugrE38jeYsDSMw==}
    engines: {node: '>= 0.4'}
    dependencies:
      which-typed-array: 1.1.15
    dev: false

  /is-unicode-supported@0.1.0:
    resolution: {integrity: sha512-knxG2q4UC3u8stRGyAVJCOdxFmv5DZiRcdlIaAQXAbSfJya+OhopNotLQrstBhququ4ZpuKbDc/8S6mgXgPFPw==}
    engines: {node: '>=10'}
    dev: false

  /is-wsl@1.1.0:
    resolution: {integrity: sha512-gfygJYZ2gLTDlmbWMI0CE2MwnFzSN/2SZfkMlItC4K/JBlsWVDB0bO6XhqcY13YXE7iMcAJnzTCJjPiTeJJ0Mw==}
    engines: {node: '>=4'}
    dev: false

  /is-wsl@2.2.0:
    resolution: {integrity: sha512-fKzAra0rGJUUBwGBgNkHZuToZcn+TtXHpeCgmkMJMMYx1sQDYaCSyjJBSCa2nH1DGm7s3n1oBnohoVTBaN7Lww==}
    engines: {node: '>=8'}
    dependencies:
      is-docker: 2.2.1
    dev: false

  /is-wsl@3.1.0:
    resolution: {integrity: sha512-UcVfVfaK4Sc4m7X3dUSoHoozQGBEFeDC+zVo06t98xe8CzHSZZBekNXH+tu0NalHolcJ/QAGqS46Hef7QXBIMw==}
    engines: {node: '>=16'}
    dependencies:
      is-inside-container: 1.0.0
    dev: false

  /is64bit@2.0.0:
    resolution: {integrity: sha512-jv+8jaWCl0g2lSBkNSVXdzfBA0npK1HGC2KtWM9FumFRoGS94g3NbCCLVnCYHLjp4GrW2KZeeSTMo5ddtznmGw==}
    engines: {node: '>=18'}
    dependencies:
      system-architecture: 0.1.0
    dev: false

  /isarray@1.0.0:
    resolution: {integrity: sha512-VLghIWNM6ELQzo7zwmcg0NmTVyWKYjvIeM83yjp0wRDTmUnrM678fQbcKBo6n2CJEF0szoG//ytg+TKla89ALQ==}
    dev: false

  /isexe@2.0.0:
    resolution: {integrity: sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==}
    dev: false

  /isobject@3.0.1:
    resolution: {integrity: sha512-WhB9zCku7EGTj/HQQRz5aUQEUeoQZH2bWcltRErOpymJ4boYE6wL9Tbr23krRPSZ+C5zqNSrSw+Cc7sZZ4b7vg==}
    engines: {node: '>=0.10.0'}
    dev: false

  /isomorphic-unfetch@3.1.0:
    resolution: {integrity: sha512-geDJjpoZ8N0kWexiwkX8F9NkTsXhetLPVbZFQ+JTW239QNOwvB0gniuR1Wc6f0AMTn7/mFGyXvHTifrCp/GH8Q==}
    dependencies:
      node-fetch: 2.7.0
      unfetch: 4.2.0
    transitivePeerDependencies:
      - encoding
    dev: false

  /isows@1.0.3(ws@8.13.0):
    resolution: {integrity: sha512-2cKei4vlmg2cxEjm3wVSqn8pcoRF/LX/wpifuuNquFO4SQmPwarClT+SUCA2lt+l581tTeZIPIZuIDo2jWN1fg==}
    peerDependencies:
      ws: '*'
    dependencies:
      ws: 8.13.0
    dev: false

  /isows@1.0.4(ws@8.13.0):
    resolution: {integrity: sha512-hEzjY+x9u9hPmBom9IIAqdJCwNLax+xrPb51vEPpERoFlIxgmZcHzsT5jKG06nvInKOBGvReAVz80Umed5CczQ==}
    peerDependencies:
      ws: '*'
    dependencies:
      ws: 8.13.0
    dev: false

  /jest-environment-node@29.7.0:
    resolution: {integrity: sha512-DOSwCRqXirTOyheM+4d5YZOrWcdu0LNZ87ewUoywbcb2XR4wKgqiG8vNeYwhjFMbEkfju7wx2GYH0P2gevGvFw==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
    dependencies:
      '@jest/environment': 29.7.0
      '@jest/fake-timers': 29.7.0
      '@jest/types': 29.6.3
      '@types/node': 20.12.12
      jest-mock: 29.7.0
      jest-util: 29.7.0
    dev: false

  /jest-get-type@29.6.3:
    resolution: {integrity: sha512-zrteXnqYxfQh7l5FHyL38jL39di8H8rHoecLH3JNxH3BwOrBsNeabdap5e0I23lD4HHI8W5VFBZqG4Eaq5LNcw==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
    dev: false

  /jest-message-util@29.7.0:
    resolution: {integrity: sha512-GBEV4GRADeP+qtB2+6u61stea8mGcOT4mCtrYISZwfu9/ISHFJ/5zOMXYbpBE9RsS5+Gb63DW4FgmnKJ79Kf6w==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
    dependencies:
      '@babel/code-frame': 7.24.6
      '@jest/types': 29.6.3
      '@types/stack-utils': 2.0.3
      chalk: 4.1.2
      graceful-fs: 4.2.11
      micromatch: 4.0.7
      pretty-format: 29.7.0
      slash: 3.0.0
      stack-utils: 2.0.6
    dev: false

  /jest-mock@29.7.0:
    resolution: {integrity: sha512-ITOMZn+UkYS4ZFh83xYAOzWStloNzJFO2s8DWrE4lhtGD+AorgnbkiKERe4wQVBydIGPx059g6riW5Btp6Llnw==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
    dependencies:
      '@jest/types': 29.6.3
      '@types/node': 20.12.12
      jest-util: 29.7.0
    dev: false

  /jest-util@29.7.0:
    resolution: {integrity: sha512-z6EbKajIpqGKU56y5KBUgy1dt1ihhQJgWzUlZHArA/+X2ad7Cb5iF+AK1EWVL/Bo7Rz9uurpqw6SiBCefUbCGA==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
    dependencies:
      '@jest/types': 29.6.3
      '@types/node': 20.12.12
      chalk: 4.1.2
      ci-info: 3.9.0
      graceful-fs: 4.2.11
      picomatch: 2.3.1
    dev: false

  /jest-validate@29.7.0:
    resolution: {integrity: sha512-ZB7wHqaRGVw/9hST/OuFUReG7M8vKeq0/J2egIGLdvjHCmYqGARhzXmtgi+gVeZ5uXFF219aOc3Ls2yLg27tkw==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
    dependencies:
      '@jest/types': 29.6.3
      camelcase: 6.3.0
      chalk: 4.1.2
      jest-get-type: 29.6.3
      leven: 3.1.0
      pretty-format: 29.7.0
    dev: false

  /jest-worker@29.7.0:
    resolution: {integrity: sha512-eIz2msL/EzL9UFTFFx7jBTkeZfku0yUAyZZZmJ93H2TYEiroIx2PQjEXcwYtYl8zXCxb+PAmA2hLIt/6ZEkPHw==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
    dependencies:
      '@types/node': 20.12.12
      jest-util: 29.7.0
      merge-stream: 2.0.0
      supports-color: 8.1.1
    dev: false

  /jiti@1.21.0:
    resolution: {integrity: sha512-gFqAIbuKyyso/3G2qhiO2OM6shY6EPP/R0+mkDbyspxKazh8BXDC5FiFsUjlczgdNz/vfra0da2y+aHrusLG/Q==}
    hasBin: true
    dev: false

  /joi@17.13.1:
    resolution: {integrity: sha512-vaBlIKCyo4FCUtCm7Eu4QZd/q02bWcxfUO6YSXAZOWF6gzcLBeba8kwotUdYJjDLW8Cz8RywsSOqiNJZW0mNvg==}
    dependencies:
      '@hapi/hoek': 9.3.0
      '@hapi/topo': 5.1.0
      '@sideway/address': 4.1.5
      '@sideway/formula': 3.0.1
      '@sideway/pinpoint': 2.0.0
    dev: false

  /js-tokens@4.0.0:
    resolution: {integrity: sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==}
    dev: false

  /js-yaml@3.14.1:
    resolution: {integrity: sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==}
    hasBin: true
    dependencies:
      argparse: 1.0.10
      esprima: 4.0.1
    dev: false

  /jsc-android@250231.0.0:
    resolution: {integrity: sha512-rS46PvsjYmdmuz1OAWXY/1kCYG7pnf1TBqeTiOJr1iDz7s5DLxxC9n/ZMknLDxzYzNVfI7R95MH10emSSG1Wuw==}
    dev: false

  /jsc-safe-url@0.2.4:
    resolution: {integrity: sha512-0wM3YBWtYePOjfyXQH5MWQ8H7sdk5EXSwZvmSLKk2RboVQ2Bu239jycHDz5J/8Blf3K0Qnoy2b6xD+z10MFB+Q==}
    dev: false

  /jscodeshift@0.14.0(@babel/preset-env@7.24.6):
    resolution: {integrity: sha512-7eCC1knD7bLUPuSCwXsMZUH51O8jIcoVyKtI6P0XM0IVzlGjckPy3FIwQlorzbN0Sg79oK+RlohN32Mqf/lrYA==}
    hasBin: true
    peerDependencies:
      '@babel/preset-env': ^7.1.6
    dependencies:
      '@babel/core': 7.24.6
      '@babel/parser': 7.24.6
      '@babel/plugin-proposal-class-properties': 7.18.6(@babel/core@7.24.6)
      '@babel/plugin-proposal-nullish-coalescing-operator': 7.18.6(@babel/core@7.24.6)
      '@babel/plugin-proposal-optional-chaining': 7.21.0(@babel/core@7.24.6)
      '@babel/plugin-transform-modules-commonjs': 7.24.6(@babel/core@7.24.6)
      '@babel/preset-env': 7.24.6(@babel/core@7.24.6)
      '@babel/preset-flow': 7.24.6(@babel/core@7.24.6)
      '@babel/preset-typescript': 7.24.6(@babel/core@7.24.6)
      '@babel/register': 7.24.6(@babel/core@7.24.6)
      babel-core: 7.0.0-bridge.0(@babel/core@7.24.6)
      chalk: 4.1.2
      flow-parser: 0.236.0
      graceful-fs: 4.2.11
      micromatch: 4.0.7
      neo-async: 2.6.2
      node-dir: 0.1.17
      recast: 0.21.5
      temp: 0.8.4
      write-file-atomic: 2.4.3
    transitivePeerDependencies:
      - supports-color
    dev: false

  /jsesc@0.5.0:
    resolution: {integrity: sha512-uZz5UnB7u4T9LvwmFqXii7pZSouaRPorGs5who1Ip7VO0wxanFvBL7GkM6dTHlgX+jhBApRetaWpnDabOeTcnA==}
    hasBin: true
    dev: false

  /jsesc@2.5.2:
    resolution: {integrity: sha512-OYu7XEzjkCQ3C5Ps3QIZsQfNpqoJyZZA99wd9aWd05NCtC5pWOkShK2mkL6HXQR6/Cy2lbNdPlZBpuQHXE63gA==}
    engines: {node: '>=4'}
    hasBin: true
    dev: false

  /json-parse-better-errors@1.0.2:
    resolution: {integrity: sha512-mrqyZKfX5EhL7hvqcV6WG1yYjnjeuYDzDhhcAAUrq8Po85NBQBJP+ZDUT75qZQ98IkUoBqdkExkukOU7Ts2wrw==}
    dev: false

  /json-rpc-engine@6.1.0:
    resolution: {integrity: sha512-NEdLrtrq1jUZyfjkr9OCz9EzCNhnRyWtt1PAnvnhwy6e8XETS0Dtc+ZNCO2gvuAoKsIn2+vCSowXTYE4CkgnAQ==}
    engines: {node: '>=10.0.0'}
    dependencies:
      '@metamask/safe-event-emitter': 2.0.0
      eth-rpc-errors: 4.0.3
    dev: false

  /json-rpc-random-id@1.0.1:
    resolution: {integrity: sha512-RJ9YYNCkhVDBuP4zN5BBtYAzEl03yq/jIIsyif0JY9qyJuQQZNeDK7anAPKKlyEtLSj2s8h6hNh2F8zO5q7ScA==}
    dev: false

  /json5@2.2.3:
    resolution: {integrity: sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==}
    engines: {node: '>=6'}
    hasBin: true
    dev: false

  /jsonfile@4.0.0:
    resolution: {integrity: sha512-m6F1R3z8jjlf2imQHS2Qez5sjKWQzbuuhuJ/FKYFRZvPE3PuHcSMVZzfsLhGVOkfd20obL5SWEBew5ShlquNxg==}
    optionalDependencies:
      graceful-fs: 4.2.11
    dev: false

  /keccak@3.0.4:
    resolution: {integrity: sha512-3vKuW0jV8J3XNTzvfyicFR5qvxrSAGl7KIhvgOu5cmWwM7tZRj3fMbj/pfIf4be7aznbc+prBWGjywox/g2Y6Q==}
    engines: {node: '>=10.0.0'}
    requiresBuild: true
    dependencies:
      node-addon-api: 2.0.2
      node-gyp-build: 4.8.1
      readable-stream: 3.6.2
    dev: false

  /keyvaluestorage-interface@1.0.0:
    resolution: {integrity: sha512-8t6Q3TclQ4uZynJY9IGr2+SsIGwK9JHcO6ootkHCGA0CrQCRy+VkouYNO2xicET6b9al7QKzpebNow+gkpCL8g==}
    dev: false

  /kind-of@6.0.3:
    resolution: {integrity: sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw==}
    engines: {node: '>=0.10.0'}
    dev: false

  /kleur@3.0.3:
    resolution: {integrity: sha512-eTIzlVOSUR+JxdDFepEYcBMtZ9Qqdef+rnzWdRZuMbOywu5tO2w2N7rqjoANZ5k9vywhL6Br1VRjUIgTQx4E8w==}
    engines: {node: '>=6'}
    dev: false

  /leven@3.1.0:
    resolution: {integrity: sha512-qsda+H8jTaUaN/x5vzW2rzc+8Rw4TAQ/4KjB46IwK5VH+IlVeeeje/EoZRpiXvIqjFgK84QffqPztGI3VBLG1A==}
    engines: {node: '>=6'}
    dev: false

  /lighthouse-logger@1.4.2:
    resolution: {integrity: sha512-gPWxznF6TKmUHrOQjlVo2UbaL2EJ71mb2CCeRs/2qBpi4L/g4LUVc9+3lKQ6DTUZwJswfM7ainGrLO1+fOqa2g==}
    dependencies:
      debug: 2.6.9
      marky: 1.2.5
    transitivePeerDependencies:
      - supports-color
    dev: false

  /listhen@1.7.2:
    resolution: {integrity: sha512-7/HamOm5YD9Wb7CFgAZkKgVPA96WwhcTQoqtm2VTZGVbVVn3IWKRBTgrU7cchA3Q8k9iCsG8Osoi9GX4JsGM9g==}
    hasBin: true
    dependencies:
      '@parcel/watcher': 2.4.1
      '@parcel/watcher-wasm': 2.4.1
      citty: 0.1.6
      clipboardy: 4.0.0
      consola: 3.2.3
      crossws: 0.2.4
      defu: 6.1.4
      get-port-please: 3.1.2
      h3: 1.11.1
      http-shutdown: 1.2.2
      jiti: 1.21.0
      mlly: 1.7.0
      node-forge: 1.3.1
      pathe: 1.1.2
      std-env: 3.7.0
      ufo: 1.5.3
      untun: 0.1.3
      uqr: 0.1.2
    transitivePeerDependencies:
      - uWebSockets.js
    dev: false

  /lit-element@3.3.3:
    resolution: {integrity: sha512-XbeRxmTHubXENkV4h8RIPyr8lXc+Ff28rkcQzw3G6up2xg5E8Zu1IgOWIwBLEQsu3cOVFqdYwiVi0hv0SlpqUA==}
    dependencies:
      '@lit-labs/ssr-dom-shim': 1.2.0
      '@lit/reactive-element': 1.6.3
      lit-html: 2.8.0
    dev: false

  /lit-html@2.8.0:
    resolution: {integrity: sha512-o9t+MQM3P4y7M7yNzqAyjp7z+mQGa4NS4CxiyLqFPyFWyc4O+nodLrkrxSaCTrla6M5YOLaT3RpbbqjszB5g3Q==}
    dependencies:
      '@types/trusted-types': 2.0.7
    dev: false

  /lit@2.8.0:
    resolution: {integrity: sha512-4Sc3OFX9QHOJaHbmTMk28SYgVxLN3ePDjg7hofEft2zWlehFL3LiAuapWc4U/kYwMYJSh2hTCPZ6/LIC7ii0MA==}
    dependencies:
      '@lit/reactive-element': 1.6.3
      lit-element: 3.3.3
      lit-html: 2.8.0
    dev: false

  /locate-path@3.0.0:
    resolution: {integrity: sha512-7AO748wWnIhNqAuaty2ZWHkQHRSNfPVIsPIfwEOWO22AmaoVrWavlOcMR5nzTLNYvp36X220/maaRsrec1G65A==}
    engines: {node: '>=6'}
    dependencies:
      p-locate: 3.0.0
      path-exists: 3.0.0
    dev: false

  /locate-path@5.0.0:
    resolution: {integrity: sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==}
    engines: {node: '>=8'}
    dependencies:
      p-locate: 4.1.0
    dev: false

  /locate-path@6.0.0:
    resolution: {integrity: sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==}
    engines: {node: '>=10'}
    dependencies:
      p-locate: 5.0.0
    dev: false

  /lodash.debounce@4.0.8:
    resolution: {integrity: sha512-FT1yDzDYEoYWhnSGnpE/4Kj1fLZkDFyqRb7fNt6FdYOSxlUWAtp42Eh6Wb0rGIv/m9Bgo7x4GhQbm5Ys4SG5ow==}
    dev: false

  /lodash.isequal@4.5.0:
    resolution: {integrity: sha512-pDo3lu8Jhfjqls6GkMgpahsF9kCyayhgykjyLMNFTKWrpVdAQtYyB4muAMWozBB4ig/dtWAmsMxLEI8wuz+DYQ==}
    dev: false

  /lodash.throttle@4.1.1:
    resolution: {integrity: sha512-wIkUCfVKpVsWo3JSZlc+8MB5it+2AN5W8J7YVMST30UrvcQNZ1Okbj+rbVniijTWE6FGYy4XJq/rHkas8qJMLQ==}
    dev: false

  /log-symbols@4.1.0:
    resolution: {integrity: sha512-8XPvpAA8uyhfteu8pIvQxpJZ7SYYdpUivZpGy6sFsBuKRY/7rQGavedeB8aK+Zkyq6upMFVL/9AW6vOYzfRyLg==}
    engines: {node: '>=10'}
    dependencies:
      chalk: 4.1.2
      is-unicode-supported: 0.1.0
    dev: false

  /logkitty@0.7.1:
    resolution: {integrity: sha512-/3ER20CTTbahrCrpYfPn7Xavv9diBROZpoXGVZDWMw4b/X4uuUwAC0ki85tgsdMRONURyIJbcOvS94QsUBYPbQ==}
    hasBin: true
    dependencies:
      ansi-fragments: 0.2.1
      dayjs: 1.11.11
      yargs: 15.4.1
    dev: false

  /loose-envify@1.4.0:
    resolution: {integrity: sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==}
    hasBin: true
    dependencies:
      js-tokens: 4.0.0
    dev: false

  /lru-cache@10.2.2:
    resolution: {integrity: sha512-9hp3Vp2/hFQUiIwKo8XCeFVnrg8Pk3TYNPIR7tJADKi5YfcF7vEaK7avFHTlSy3kOKYaJQaalfEo6YuXdceBOQ==}
    engines: {node: 14 || >=16.14}
    dev: false

  /lru-cache@5.1.1:
    resolution: {integrity: sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==}
    dependencies:
      yallist: 3.1.1
    dev: false

  /magic-string@0.30.10:
    resolution: {integrity: sha512-iIRwTIf0QKV3UAnYK4PU8uiEc4SRh5jX0mwpIwETPpHdhVM4f53RSwS/vXvN1JhGX+Cs7B8qIq3d6AH49O5fAQ==}
    dependencies:
      '@jridgewell/sourcemap-codec': 1.4.15
    dev: false

  /make-dir@2.1.0:
    resolution: {integrity: sha512-LS9X+dc8KLxXCb8dni79fLIIUA5VyZoyjSMCwTluaXA0o27cCK0bhXkpgw+sTXVpPy/lSO57ilRixqk0vDmtRA==}
    engines: {node: '>=6'}
    dependencies:
      pify: 4.0.1
      semver: 5.7.2
    dev: false

  /makeerror@1.0.12:
    resolution: {integrity: sha512-JmqCvUhmt43madlpFzG4BQzG2Z3m6tvQDNKdClZnO3VbIudJYmxsT0FNJMeiB2+JTSlTQTSbU8QdesVmwJcmLg==}
    dependencies:
      tmpl: 1.0.5
    dev: false

  /marky@1.2.5:
    resolution: {integrity: sha512-q9JtQJKjpsVxCRVgQ+WapguSbKC3SQ5HEzFGPAJMStgh3QjCawp00UKv3MTTAArTmGmmPUvllHZoNbZ3gs0I+Q==}
    dev: false

  /media-query-parser@2.0.2:
    resolution: {integrity: sha512-1N4qp+jE0pL5Xv4uEcwVUhIkwdUO3S/9gML90nqKA7v7FcOS5vUtatfzok9S9U1EJU8dHWlcv95WLnKmmxZI9w==}
    dependencies:
      '@babel/runtime': 7.24.6
    dev: false

  /memoize-one@5.2.1:
    resolution: {integrity: sha512-zYiwtZUcYyXKo/np96AGZAckk+FWWsUdJ3cHGGmld7+AhvcWmQyGCYUh1hc4Q/pkOhb65dQR/pqCyK0cOaHz4Q==}
    dev: false

  /merge-stream@2.0.0:
    resolution: {integrity: sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==}
    dev: false

  /merge2@1.4.1:
    resolution: {integrity: sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==}
    engines: {node: '>= 8'}
    dev: false

  /metro-babel-transformer@0.80.9:
    resolution: {integrity: sha512-d76BSm64KZam1nifRZlNJmtwIgAeZhZG3fi3K+EmPOlrR8rDtBxQHDSN3fSGeNB9CirdTyabTMQCkCup6BXFSQ==}
    engines: {node: '>=18'}
    dependencies:
      '@babel/core': 7.24.6
      hermes-parser: 0.20.1
      nullthrows: 1.1.1
    transitivePeerDependencies:
      - supports-color
    dev: false

  /metro-cache-key@0.80.9:
    resolution: {integrity: sha512-hRcYGhEiWIdM87hU0fBlcGr+tHDEAT+7LYNCW89p5JhErFt/QaAkVx4fb5bW3YtXGv5BTV7AspWPERoIb99CXg==}
    engines: {node: '>=18'}
    dev: false

  /metro-cache@0.80.9:
    resolution: {integrity: sha512-ujEdSI43QwI+Dj2xuNax8LMo8UgKuXJEdxJkzGPU6iIx42nYa1byQ+aADv/iPh5sh5a//h5FopraW5voXSgm2w==}
    engines: {node: '>=18'}
    dependencies:
      metro-core: 0.80.9
      rimraf: 3.0.2
    dev: false

  /metro-config@0.80.9:
    resolution: {integrity: sha512-28wW7CqS3eJrunRGnsibWldqgwRP9ywBEf7kg+uzUHkSFJNKPM1K3UNSngHmH0EZjomizqQA2Zi6/y6VdZMolg==}
    engines: {node: '>=18'}
    dependencies:
      connect: 3.7.0
      cosmiconfig: 5.2.1
      jest-validate: 29.7.0
      metro: 0.80.9
      metro-cache: 0.80.9
      metro-core: 0.80.9
      metro-runtime: 0.80.9
    transitivePeerDependencies:
      - bufferutil
      - encoding
      - supports-color
      - utf-8-validate
    dev: false

  /metro-core@0.80.9:
    resolution: {integrity: sha512-tbltWQn+XTdULkGdzHIxlxk4SdnKxttvQQV3wpqqFbHDteR4gwCyTR2RyYJvxgU7HELfHtrVbqgqAdlPByUSbg==}
    engines: {node: '>=18'}
    dependencies:
      lodash.throttle: 4.1.1
      metro-resolver: 0.80.9
    dev: false

  /metro-file-map@0.80.9:
    resolution: {integrity: sha512-sBUjVtQMHagItJH/wGU9sn3k2u0nrCl0CdR4SFMO1tksXLKbkigyQx4cbpcyPVOAmGTVuy3jyvBlELaGCAhplQ==}
    engines: {node: '>=18'}
    dependencies:
      anymatch: 3.1.3
      debug: 2.6.9
      fb-watchman: 2.0.2
      graceful-fs: 4.2.11
      invariant: 2.2.4
      jest-worker: 29.7.0
      micromatch: 4.0.7
      node-abort-controller: 3.1.1
      nullthrows: 1.1.1
      walker: 1.0.8
    optionalDependencies:
      fsevents: 2.3.3
    transitivePeerDependencies:
      - supports-color
    dev: false

  /metro-minify-terser@0.80.9:
    resolution: {integrity: sha512-FEeCeFbkvvPuhjixZ1FYrXtO0araTpV6UbcnGgDUpH7s7eR5FG/PiJz3TsuuPP/HwCK19cZtQydcA2QrCw446A==}
    engines: {node: '>=18'}
    dependencies:
      terser: 5.31.0
    dev: false

  /metro-resolver@0.80.9:
    resolution: {integrity: sha512-wAPIjkN59BQN6gocVsAvvpZ1+LQkkqUaswlT++cJafE/e54GoVkMNCmrR4BsgQHr9DknZ5Um/nKueeN7kaEz9w==}
    engines: {node: '>=18'}
    dev: false

  /metro-runtime@0.80.9:
    resolution: {integrity: sha512-8PTVIgrVcyU+X/rVCy/9yxNlvXsBCk5JwwkbAm/Dm+Abo6NBGtNjWF0M1Xo/NWCb4phamNWcD7cHdR91HhbJvg==}
    engines: {node: '>=18'}
    dependencies:
      '@babel/runtime': 7.24.6
    dev: false

  /metro-source-map@0.80.9:
    resolution: {integrity: sha512-RMn+XS4VTJIwMPOUSj61xlxgBvPeY4G6s5uIn6kt6HB6A/k9ekhr65UkkDD7WzHYs3a9o869qU8tvOZvqeQzgw==}
    engines: {node: '>=18'}
    dependencies:
      '@babel/traverse': 7.24.6
      '@babel/types': 7.24.6
      invariant: 2.2.4
      metro-symbolicate: 0.80.9
      nullthrows: 1.1.1
      ob1: 0.80.9
      source-map: 0.5.7
      vlq: 1.0.1
    transitivePeerDependencies:
      - supports-color
    dev: false

  /metro-symbolicate@0.80.9:
    resolution: {integrity: sha512-Ykae12rdqSs98hg41RKEToojuIW85wNdmSe/eHUgMkzbvCFNVgcC0w3dKZEhSsqQOXapXRlLtHkaHLil0UD/EA==}
    engines: {node: '>=18'}
    hasBin: true
    dependencies:
      invariant: 2.2.4
      metro-source-map: 0.80.9
      nullthrows: 1.1.1
      source-map: 0.5.7
      through2: 2.0.5
      vlq: 1.0.1
    transitivePeerDependencies:
      - supports-color
    dev: false

  /metro-transform-plugins@0.80.9:
    resolution: {integrity: sha512-UlDk/uc8UdfLNJhPbF3tvwajyuuygBcyp+yBuS/q0z3QSuN/EbLllY3rK8OTD9n4h00qZ/qgxGv/lMFJkwP4vg==}
    engines: {node: '>=18'}
    dependencies:
      '@babel/core': 7.24.6
      '@babel/generator': 7.24.6
      '@babel/template': 7.24.6
      '@babel/traverse': 7.24.6
      nullthrows: 1.1.1
    transitivePeerDependencies:
      - supports-color
    dev: false

  /metro-transform-worker@0.80.9:
    resolution: {integrity: sha512-c/IrzMUVnI0hSVVit4TXzt3A1GiUltGVlzCmLJWxNrBGHGrJhvgePj38+GXl1Xf4Fd4vx6qLUkKMQ3ux73bFLQ==}
    engines: {node: '>=18'}
    dependencies:
      '@babel/core': 7.24.6
      '@babel/generator': 7.24.6
      '@babel/parser': 7.24.6
      '@babel/types': 7.24.6
      metro: 0.80.9
      metro-babel-transformer: 0.80.9
      metro-cache: 0.80.9
      metro-cache-key: 0.80.9
      metro-minify-terser: 0.80.9
      metro-source-map: 0.80.9
      metro-transform-plugins: 0.80.9
      nullthrows: 1.1.1
    transitivePeerDependencies:
      - bufferutil
      - encoding
      - supports-color
      - utf-8-validate
    dev: false

  /metro@0.80.9:
    resolution: {integrity: sha512-Bc57Xf3GO2Xe4UWQsBj/oW6YfLPABEu8jfDVDiNmJvoQW4CO34oDPuYKe4KlXzXhcuNsqOtSxpbjCRRVjhhREg==}
    engines: {node: '>=18'}
    hasBin: true
    dependencies:
      '@babel/code-frame': 7.24.6
      '@babel/core': 7.24.6
      '@babel/generator': 7.24.6
      '@babel/parser': 7.24.6
      '@babel/template': 7.24.6
      '@babel/traverse': 7.24.6
      '@babel/types': 7.24.6
      accepts: 1.3.8
      chalk: 4.1.2
      ci-info: 2.0.0
      connect: 3.7.0
      debug: 2.6.9
      denodeify: 1.2.1
      error-stack-parser: 2.1.4
      graceful-fs: 4.2.11
      hermes-parser: 0.20.1
      image-size: 1.1.1
      invariant: 2.2.4
      jest-worker: 29.7.0
      jsc-safe-url: 0.2.4
      lodash.throttle: 4.1.1
      metro-babel-transformer: 0.80.9
      metro-cache: 0.80.9
      metro-cache-key: 0.80.9
      metro-config: 0.80.9
      metro-core: 0.80.9
      metro-file-map: 0.80.9
      metro-resolver: 0.80.9
      metro-runtime: 0.80.9
      metro-source-map: 0.80.9
      metro-symbolicate: 0.80.9
      metro-transform-plugins: 0.80.9
      metro-transform-worker: 0.80.9
      mime-types: 2.1.35
      node-fetch: 2.7.0
      nullthrows: 1.1.1
      rimraf: 3.0.2
      serialize-error: 2.1.0
      source-map: 0.5.7
      strip-ansi: 6.0.1
      throat: 5.0.0
      ws: 7.5.9
      yargs: 17.7.2
    transitivePeerDependencies:
      - bufferutil
      - encoding
      - supports-color
      - utf-8-validate
    dev: false

  /micro-ftch@0.3.1:
    resolution: {integrity: sha512-/0LLxhzP0tfiR5hcQebtudP56gUurs2CLkGarnCiB/OqEyUFQ6U3paQi/tgLv0hBJYt2rnr9MNpxz4fiiugstg==}
    dev: false

  /micromatch@4.0.7:
    resolution: {integrity: sha512-LPP/3KorzCwBxfeUuZmaR6bG2kdeHSbe0P2tY3FLRU4vYrjYz5hI4QZwV0njUx3jeuKe67YukQ1LSPZBKDqO/Q==}
    engines: {node: '>=8.6'}
    dependencies:
      braces: 3.0.3
      picomatch: 2.3.1
    dev: false

  /mime-db@1.52.0:
    resolution: {integrity: sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==}
    engines: {node: '>= 0.6'}
    dev: false

  /mime-types@2.1.35:
    resolution: {integrity: sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==}
    engines: {node: '>= 0.6'}
    dependencies:
      mime-db: 1.52.0
    dev: false

  /mime@1.6.0:
    resolution: {integrity: sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==}
    engines: {node: '>=4'}
    hasBin: true
    dev: false

  /mime@2.6.0:
    resolution: {integrity: sha512-USPkMeET31rOMiarsBNIHZKLGgvKc/LrjofAnBlOttf5ajRvqiRA8QsenbcooctK6d6Ts6aqZXBA+XbkKthiQg==}
    engines: {node: '>=4.0.0'}
    hasBin: true
    dev: false

  /mime@3.0.0:
    resolution: {integrity: sha512-jSCU7/VB1loIWBZe14aEYHU/+1UMEHoaO7qxCOVJOw9GgH72VAWppxNcjU+x9a2k3GSIBXNKxXQFqRvvZ7vr3A==}
    engines: {node: '>=10.0.0'}
    hasBin: true
    dev: false

  /mimic-fn@2.1.0:
    resolution: {integrity: sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==}
    engines: {node: '>=6'}
    dev: false

  /mimic-fn@4.0.0:
    resolution: {integrity: sha512-vqiC06CuhBTUdZH+RYl8sFrL096vA45Ok5ISO6sE/Mr1jRbGH4Csnhi8f3wKVl7x8mO4Au7Ir9D3Oyv1VYMFJw==}
    engines: {node: '>=12'}
    dev: false

  /minimalistic-assert@1.0.1:
    resolution: {integrity: sha512-UtJcAD4yEaGtjPezWuO9wC4nwUnVH/8/Im3yEHQP4b67cXlD/Qr9hdITCU1xDbSEXg2XKNaP8jsReV7vQd00/A==}
    dev: false

  /minimalistic-crypto-utils@1.0.1:
    resolution: {integrity: sha512-JIYlbt6g8i5jKfJ3xz7rF0LXmv2TkDxBLUkiBeZ7bAx4GnnNMr8xFpGnOxn6GhTEHx3SjRrZEoU+j04prX1ktg==}
    dev: false

  /minimatch@3.1.2:
    resolution: {integrity: sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==}
    dependencies:
      brace-expansion: 1.1.11
    dev: false

  /minimist@1.2.8:
    resolution: {integrity: sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==}
    dev: false

  /mipd@0.0.5:
    resolution: {integrity: sha512-gbKA784D2WKb5H/GtqEv+Ofd1S9Zj+Z/PGDIl1u1QAbswkxD28BQ5bSXQxkeBzPBABg1iDSbiwGG1XqlOxRspA==}
    peerDependencies:
      typescript: '>=5.0.4'
    peerDependenciesMeta:
      typescript:
        optional: true
    dependencies:
      viem: 1.21.4
    transitivePeerDependencies:
      - bufferutil
      - utf-8-validate
      - zod
    dev: false

  /mkdirp@0.5.6:
    resolution: {integrity: sha512-FP+p8RB8OWpF3YZBCrP5gtADmtXApB5AMLn+vdyA+PyxCjrCs00mjyUozssO33cwDeT3wNGdLxJ5M//YqtHAJw==}
    hasBin: true
    dependencies:
      minimist: 1.2.8
    dev: false

  /mkdirp@1.0.4:
    resolution: {integrity: sha512-vVqVZQyf3WLx2Shd0qJ9xuvqgAyKPLAiqITEtqW0oIUjzo3PePDd6fW9iFz30ef7Ysp/oiWqbhszeGWW2T6Gzw==}
    engines: {node: '>=10'}
    hasBin: true
    dev: false

  /mlly@1.7.0:
    resolution: {integrity: sha512-U9SDaXGEREBYQgfejV97coK0UL1r+qnF2SyO9A3qcI8MzKnsIFKHNVEkrDyNncQTKQQumsasmeq84eNMdBfsNQ==}
    dependencies:
      acorn: 8.11.3
      pathe: 1.1.2
      pkg-types: 1.1.1
      ufo: 1.5.3
    dev: false

  /modern-ahocorasick@1.0.1:
    resolution: {integrity: sha512-yoe+JbhTClckZ67b2itRtistFKf8yPYelHLc7e5xAwtNAXxM6wJTUx2C7QeVSJFDzKT7bCIFyBVybPMKvmB9AA==}
    dev: false

  /motion@10.16.2:
    resolution: {integrity: sha512-p+PurYqfUdcJZvtnmAqu5fJgV2kR0uLFQuBKtLeFVTrYEVllI99tiOTSefVNYuip9ELTEkepIIDftNdze76NAQ==}
    dependencies:
      '@motionone/animation': 10.17.0
      '@motionone/dom': 10.17.0
      '@motionone/svelte': 10.16.4
      '@motionone/types': 10.17.0
      '@motionone/utils': 10.17.0
      '@motionone/vue': 10.16.4
    dev: false

  /mri@1.2.0:
    resolution: {integrity: sha512-tzzskb3bG8LvYGFF/mDTpq3jpI6Q9wc3LEmBaghu+DdCssd1FakN7Bc0hVNmEyGq1bq3RgfkCb3cmQLpNPOroA==}
    engines: {node: '>=4'}
    dev: false

  /ms@2.0.0:
    resolution: {integrity: sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==}
    dev: false

  /ms@2.1.2:
    resolution: {integrity: sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==}
    dev: false

  /ms@2.1.3:
    resolution: {integrity: sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==}
    dev: false

  /multiformats@9.9.0:
    resolution: {integrity: sha512-HoMUjhH9T8DDBNT+6xzkrd9ga/XiBI4xLr58LJACwK6G3HTOPeMz4nB4KJs33L2BelrIJa7P0VuNaVF3hMYfjg==}
    dev: false

  /nanoid@3.3.7:
    resolution: {integrity: sha512-eSRppjcPIatRIMC1U6UngP8XFcz8MQWGQdt1MTBQ7NaAmvXDfvNxbvWV3x2y6CdEUciCSsDHDQZbhYaB8QEo2g==}
    engines: {node: ^10 || ^12 || ^13.7 || ^14 || >=15.0.1}
    hasBin: true
    dev: false

  /napi-wasm@1.1.0:
    resolution: {integrity: sha512-lHwIAJbmLSjF9VDRm9GoVOy9AGp3aIvkjv+Kvz9h16QR3uSVYH78PNQUnT2U4X53mhlnV2M7wrhibQ3GHicDmg==}
    dev: false

  /negotiator@0.6.3:
    resolution: {integrity: sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==}
    engines: {node: '>= 0.6'}
    dev: false

  /neo-async@2.6.2:
    resolution: {integrity: sha512-Yd3UES5mWCSqR+qNT93S3UoYUkqAZ9lLg8a7g9rimsWmYGK8cVToA4/sF3RrshdyV3sAGMXVUmpMYOw+dLpOuw==}
    dev: false

  /nocache@3.0.4:
    resolution: {integrity: sha512-WDD0bdg9mbq6F4mRxEYcPWwfA1vxd0mrvKOyxI7Xj/atfRHVeutzuWByG//jfm4uPzp0y4Kj051EORCBSQMycw==}
    engines: {node: '>=12.0.0'}
    dev: false

  /node-abort-controller@3.1.1:
    resolution: {integrity: sha512-AGK2yQKIjRuqnc6VkX2Xj5d+QW8xZ87pa1UK6yA6ouUyuxfHuMP6umE5QK7UmTeOAymo+Zx1Fxiuw9rVx8taHQ==}
    dev: false

  /node-addon-api@2.0.2:
    resolution: {integrity: sha512-Ntyt4AIXyaLIuMHF6IOoTakB3K+RWxwtsHNRxllEoA6vPwP9o4866g6YWDLUdnucilZhmkxiHwHr11gAENw+QA==}
    dev: false

  /node-addon-api@5.1.0:
    resolution: {integrity: sha512-eh0GgfEkpnoWDq+VY8OyvYhFEzBk6jIYbRKdIlyTiAXIVJ8PyBaKb0rp7oDtoddbdoHWhq8wwr+XZ81F1rpNdA==}
    dev: false

  /node-addon-api@7.1.0:
    resolution: {integrity: sha512-mNcltoe1R8o7STTegSOHdnJNN7s5EUvhoS7ShnTHDyOSd+8H+UdWODq6qSv67PjC8Zc5JRT8+oLAMCr0SIXw7g==}
    engines: {node: ^16 || ^18 || >= 20}
    dev: false

  /node-dir@0.1.17:
    resolution: {integrity: sha512-tmPX422rYgofd4epzrNoOXiE8XFZYOcCq1vD7MAXCDO+O+zndlA2ztdKKMa+EeuBG5tHETpr4ml4RGgpqDCCAg==}
    engines: {node: '>= 0.10.5'}
    dependencies:
      minimatch: 3.1.2
    dev: false

  /node-fetch-native@1.6.4:
    resolution: {integrity: sha512-IhOigYzAKHd244OC0JIMIUrjzctirCmPkaIfhDeGcEETWof5zKYUW7e7MYvChGWh/4CJeXEgsRyGzuF334rOOQ==}
    dev: false

  /node-fetch@2.7.0:
    resolution: {integrity: sha512-c4FRfUm/dbcWZ7U+1Wq0AwCyFL+3nt2bEw05wfxSz+DWpWsitgmSgYmy2dQdWyKC1694ELPqMs/YzUSNozLt8A==}
    engines: {node: 4.x || >=6.0.0}
    peerDependencies:
      encoding: ^0.1.0
    peerDependenciesMeta:
      encoding:
        optional: true
    dependencies:
      whatwg-url: 5.0.0
    dev: false

  /node-forge@1.3.1:
    resolution: {integrity: sha512-dPEtOeMvF9VMcYV/1Wb8CPoVAXtp6MKMlcbAt4ddqmGqUJ6fQZFXkNZNkNlfevtNkGtaSoXf/vNNNSvgrdXwtA==}
    engines: {node: '>= 6.13.0'}
    dev: false

  /node-gyp-build@4.8.1:
    resolution: {integrity: sha512-OSs33Z9yWr148JZcbZd5WiAXhh/n9z8TxQcdMhIOlpN9AhWpLfvVFO73+m77bBABQMaY9XSvIa+qk0jlI7Gcaw==}
    hasBin: true
    dev: false

  /node-int64@0.4.0:
    resolution: {integrity: sha512-O5lz91xSOeoXP6DulyHfllpq+Eg00MWitZIbtPfoSEvqIHdl5gfcY6hYzDWnj0qD5tz52PI08u9qUvSVeUBeHw==}
    dev: false

  /node-releases@2.0.14:
    resolution: {integrity: sha512-y10wOWt8yZpqXmOgRo77WaHEmhYQYGNA6y421PKsKYWEK8aW+cqAphborZDhqfyKrbZEN92CN1X2KbafY2s7Yw==}
    dev: false

  /node-stream-zip@1.15.0:
    resolution: {integrity: sha512-LN4fydt9TqhZhThkZIVQnF9cwjU3qmUH9h78Mx/K7d3VvfRqqwthLwJEUOEL0QPZ0XQmNN7be5Ggit5+4dq3Bw==}
    engines: {node: '>=0.12.0'}
    dev: false

  /normalize-path@3.0.0:
    resolution: {integrity: sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==}
    engines: {node: '>=0.10.0'}
    dev: false

  /nostr-tools@1.17.0:
    resolution: {integrity: sha512-LZmR8GEWKZeElbFV5Xte75dOeE9EFUW/QLI1Ncn3JKn0kFddDKEfBbFN8Mu4TMs+L4HR/WTPha2l+PPuRnJcMw==}
    peerDependencies:
      typescript: '>=5.0.0'
    peerDependenciesMeta:
      typescript:
        optional: true
    dependencies:
      '@noble/ciphers': 0.2.0
      '@noble/curves': 1.1.0
      '@noble/hashes': 1.3.1
      '@scure/base': 1.1.1
      '@scure/bip32': 1.3.1
      '@scure/bip39': 1.2.1
    dev: false

  /npm-run-path@4.0.1:
    resolution: {integrity: sha512-S48WzZW777zhNIrn7gxOlISNAqi9ZC/uQFnRdbeIHhZhCA6UqpkOT8T1G7BvfdgP4Er8gF4sUbaS0i7QvIfCWw==}
    engines: {node: '>=8'}
    dependencies:
      path-key: 3.1.1
    dev: false

  /npm-run-path@5.3.0:
    resolution: {integrity: sha512-ppwTtiJZq0O/ai0z7yfudtBpWIoxM8yE6nHi1X47eFR2EWORqfbu6CnPlNsjeN683eT0qG6H/Pyf9fCcvjnnnQ==}
    engines: {node: ^12.20.0 || ^14.13.1 || >=16.0.0}
    dependencies:
      path-key: 4.0.0
    dev: false

  /nullthrows@1.1.1:
    resolution: {integrity: sha512-2vPPEi+Z7WqML2jZYddDIfy5Dqb0r2fze2zTxNNknZaFpVHU3mFB3R+DWeJWGVx0ecvttSGlJTI+WG+8Z4cDWw==}
    dev: false

  /ob1@0.80.9:
    resolution: {integrity: sha512-v9yOxowkZbxWhKOaaTyLjIm1aLy4ebMNcSn4NYJKOAI/Qv+SkfEfszpLr2GIxsccmb2Y2HA9qtsqiIJ80ucpVA==}
    engines: {node: '>=18'}
    dev: false

  /obj-multiplex@1.0.0:
    resolution: {integrity: sha512-0GNJAOsHoBHeNTvl5Vt6IWnpUEcc3uSRxzBri7EDyIcMgYvnY2JL2qdeV5zTMjWQX5OHcD5amcW2HFfDh0gjIA==}
    dependencies:
      end-of-stream: 1.4.4
      once: 1.4.0
      readable-stream: 2.3.8
    dev: false

  /object-assign@4.1.1:
    resolution: {integrity: sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==}
    engines: {node: '>=0.10.0'}
    dev: false

  /ofetch@1.3.4:
    resolution: {integrity: sha512-KLIET85ik3vhEfS+3fDlc/BAZiAp+43QEC/yCo5zkNoY2YaKvNkOaFr/6wCFgFH1kuYQM5pMNi0Tg8koiIemtw==}
    dependencies:
      destr: 2.0.3
      node-fetch-native: 1.6.4
      ufo: 1.5.3
    dev: false

  /ohash@1.1.3:
    resolution: {integrity: sha512-zuHHiGTYTA1sYJ/wZN+t5HKZaH23i4yI1HMwbuXm24Nid7Dv0KcuRlKoNKS9UNfAVSBlnGLcuQrnOKWOZoEGaw==}
    dev: false

  /on-exit-leak-free@0.2.0:
    resolution: {integrity: sha512-dqaz3u44QbRXQooZLTUKU41ZrzYrcvLISVgbrzbyCMxpmSLJvZ3ZamIJIZ29P6OhZIkNIQKosdeM6t1LYbA9hg==}
    dev: false

  /on-finished@2.3.0:
    resolution: {integrity: sha512-ikqdkGAAyf/X/gPhXGvfgAytDZtDbr+bkNUJ0N9h5MI/dmdgCs3l6hoHrcUv41sRKew3jIwrp4qQDXiK99Utww==}
    engines: {node: '>= 0.8'}
    dependencies:
      ee-first: 1.1.1
    dev: false

  /on-finished@2.4.1:
    resolution: {integrity: sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==}
    engines: {node: '>= 0.8'}
    dependencies:
      ee-first: 1.1.1
    dev: false

  /on-headers@1.0.2:
    resolution: {integrity: sha512-pZAE+FJLoyITytdqK0U5s+FIpjN0JP3OzFi/u8Rx+EV5/W+JTWGXG8xFzevE7AjBfDqHv/8vL8qQsIhHnqRkrA==}
    engines: {node: '>= 0.8'}
    dev: false

  /once@1.4.0:
    resolution: {integrity: sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==}
    dependencies:
      wrappy: 1.0.2
    dev: false

  /onetime@5.1.2:
    resolution: {integrity: sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==}
    engines: {node: '>=6'}
    dependencies:
      mimic-fn: 2.1.0
    dev: false

  /onetime@6.0.0:
    resolution: {integrity: sha512-1FlR+gjXK7X+AsAHso35MnyN5KqGwJRi/31ft6x0M194ht7S+rWAvd7PHss9xSKMzE0asv1pyIHaJYq+BbacAQ==}
    engines: {node: '>=12'}
    dependencies:
      mimic-fn: 4.0.0
    dev: false

  /open@6.4.0:
    resolution: {integrity: sha512-IFenVPgF70fSm1keSd2iDBIDIBZkroLeuffXq+wKTzTJlBpesFWojV9lb8mzOfaAzM1sr7HQHuO0vtV0zYekGg==}
    engines: {node: '>=8'}
    dependencies:
      is-wsl: 1.1.0
    dev: false

  /open@7.4.2:
    resolution: {integrity: sha512-MVHddDVweXZF3awtlAS+6pgKLlm/JgxZ90+/NBurBoQctVOOB/zDdVjcyPzQ+0laDGbsWgrRkflI65sQeOgT9Q==}
    engines: {node: '>=8'}
    dependencies:
      is-docker: 2.2.1
      is-wsl: 2.2.0
    dev: false

  /open@8.4.2:
    resolution: {integrity: sha512-7x81NCL719oNbsq/3mh+hVrAWmFuEYUqrq/Iw3kUzH8ReypT9QQ0BLoJS7/G9k6N81XjW4qHWtjWwe/9eLy1EQ==}
    engines: {node: '>=12'}
    dependencies:
      define-lazy-prop: 2.0.0
      is-docker: 2.2.1
      is-wsl: 2.2.0
    dev: false

  /ora@5.4.1:
    resolution: {integrity: sha512-5b6Y85tPxZZ7QytO+BQzysW31HJku27cRIlkbAXaNx+BdcVi+LlRFmVXzeF6a7JCwJpyw5c4b+YSVImQIrBpuQ==}
    engines: {node: '>=10'}
    dependencies:
      bl: 4.1.0
      chalk: 4.1.2
      cli-cursor: 3.1.0
      cli-spinners: 2.9.2
      is-interactive: 1.0.0
      is-unicode-supported: 0.1.0
      log-symbols: 4.1.0
      strip-ansi: 6.0.1
      wcwidth: 1.0.1
    dev: false

  /outdent@0.8.0:
    resolution: {integrity: sha512-KiOAIsdpUTcAXuykya5fnVVT+/5uS0Q1mrkRHcF89tpieSmY33O/tmc54CqwA+bfhbtEfZUNLHaPUiB9X3jt1A==}
    dev: false

  /p-limit@2.3.0:
    resolution: {integrity: sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==}
    engines: {node: '>=6'}
    dependencies:
      p-try: 2.2.0
    dev: false

  /p-limit@3.1.0:
    resolution: {integrity: sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==}
    engines: {node: '>=10'}
    dependencies:
      yocto-queue: 0.1.0
    dev: false

  /p-locate@3.0.0:
    resolution: {integrity: sha512-x+12w/To+4GFfgJhBEpiDcLozRJGegY+Ei7/z0tSLkMmxGZNybVMSfWj9aJn8Z5Fc7dBUNJOOVgPv2H7IwulSQ==}
    engines: {node: '>=6'}
    dependencies:
      p-limit: 2.3.0
    dev: false

  /p-locate@4.1.0:
    resolution: {integrity: sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==}
    engines: {node: '>=8'}
    dependencies:
      p-limit: 2.3.0
    dev: false

  /p-locate@5.0.0:
    resolution: {integrity: sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==}
    engines: {node: '>=10'}
    dependencies:
      p-limit: 3.1.0
    dev: false

  /p-try@2.2.0:
    resolution: {integrity: sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==}
    engines: {node: '>=6'}
    dev: false

  /parse-json@4.0.0:
    resolution: {integrity: sha512-aOIos8bujGN93/8Ox/jPLh7RwVnPEysynVFE+fQZyg6jKELEHwzgKdLRFHUgXJL6kylijVSBC4BvN9OmsB48Rw==}
    engines: {node: '>=4'}
    dependencies:
      error-ex: 1.3.2
      json-parse-better-errors: 1.0.2
    dev: false

  /parseurl@1.3.3:
    resolution: {integrity: sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==}
    engines: {node: '>= 0.8'}
    dev: false

  /path-exists@3.0.0:
    resolution: {integrity: sha512-bpC7GYwiDYQ4wYLe+FA8lhRjhQCMcQGuSgGGqDkg/QerRWw9CmGRT0iSOVRSZJ29NMLZgIzqaljJ63oaL4NIJQ==}
    engines: {node: '>=4'}
    dev: false

  /path-exists@4.0.0:
    resolution: {integrity: sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==}
    engines: {node: '>=8'}
    dev: false

  /path-is-absolute@1.0.1:
    resolution: {integrity: sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==}
    engines: {node: '>=0.10.0'}
    dev: false

  /path-key@3.1.1:
    resolution: {integrity: sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==}
    engines: {node: '>=8'}
    dev: false

  /path-key@4.0.0:
    resolution: {integrity: sha512-haREypq7xkM7ErfgIyA0z+Bj4AGKlMSdlQE2jvJo6huWD1EdkKYV+G/T4nq0YEF2vgTT8kqMFKo1uHn950r4SQ==}
    engines: {node: '>=12'}
    dev: false

  /path-parse@1.0.7:
    resolution: {integrity: sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==}
    dev: false

  /pathe@1.1.2:
    resolution: {integrity: sha512-whLdWMYL2TwI08hn8/ZqAbrVemu0LNaNNJZX73O6qaIdCTfXutsLhMkjdENX0qhsQ9uIimo4/aQOmXkoon2nDQ==}
    dev: false

  /picocolors@1.0.1:
    resolution: {integrity: sha512-anP1Z8qwhkbmu7MFP5iTt+wQKXgwzf7zTyGlcdzabySa9vd0Xt392U0rVmz9poOaBj0uHJKyyo9/upk0HrEQew==}
    dev: false

  /picomatch@2.3.1:
    resolution: {integrity: sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==}
    engines: {node: '>=8.6'}
    dev: false

  /pify@3.0.0:
    resolution: {integrity: sha512-C3FsVNH1udSEX48gGX1xfvwTWfsYWj5U+8/uK15BGzIGrKoUpghX8hWZwa/OFnakBiiVNmBvemTJR5mcy7iPcg==}
    engines: {node: '>=4'}
    dev: false

  /pify@4.0.1:
    resolution: {integrity: sha512-uB80kBFb/tfd68bVleG9T5GGsGPjJrLAUpR5PZIrhBnIaRTQRjqdJSsIKkOP6OAIFbj7GOrcudc5pNjZ+geV2g==}
    engines: {node: '>=6'}
    dev: false

  /pify@5.0.0:
    resolution: {integrity: sha512-eW/gHNMlxdSP6dmG6uJip6FXN0EQBwm2clYYd8Wul42Cwu/DK8HEftzsapcNdYe2MfLiIwZqsDk2RDEsTE79hA==}
    engines: {node: '>=10'}
    dev: false

  /pino-abstract-transport@0.5.0:
    resolution: {integrity: sha512-+KAgmVeqXYbTtU2FScx1XS3kNyfZ5TrXY07V96QnUSFqo2gAqlvmaxH67Lj7SWazqsMabf+58ctdTcBgnOLUOQ==}
    dependencies:
      duplexify: 4.1.3
      split2: 4.2.0
    dev: false

  /pino-std-serializers@4.0.0:
    resolution: {integrity: sha512-cK0pekc1Kjy5w9V2/n+8MkZwusa6EyyxfeQCB799CQRhRt/CqYKiWs5adeu8Shve2ZNffvfC/7J64A2PJo1W/Q==}
    dev: false

  /pino@7.11.0:
    resolution: {integrity: sha512-dMACeu63HtRLmCG8VKdy4cShCPKaYDR4youZqoSWLxl5Gu99HUw8bw75thbPv9Nip+H+QYX8o3ZJbTdVZZ2TVg==}
    hasBin: true
    dependencies:
      atomic-sleep: 1.0.0
      fast-redact: 3.5.0
      on-exit-leak-free: 0.2.0
      pino-abstract-transport: 0.5.0
      pino-std-serializers: 4.0.0
      process-warning: 1.0.0
      quick-format-unescaped: 4.0.4
      real-require: 0.1.0
      safe-stable-stringify: 2.4.3
      sonic-boom: 2.8.0
      thread-stream: 0.15.2
    dev: false

  /pirates@4.0.6:
    resolution: {integrity: sha512-saLsH7WeYYPiD25LDuLRRY/i+6HaPYr6G1OUlN39otzkSTxKnubR9RTxS3/Kk50s1g2JTgFwWQDQyplC5/SHZg==}
    engines: {node: '>= 6'}
    dev: false

  /pkg-dir@3.0.0:
    resolution: {integrity: sha512-/E57AYkoeQ25qkxMj5PBOVgF8Kiu/h7cYS30Z5+R7WaiCCBfLq58ZI/dSeaEKb9WVJV5n/03QwrN3IeWIFllvw==}
    engines: {node: '>=6'}
    dependencies:
      find-up: 3.0.0
    dev: false

  /pkg-types@1.1.1:
    resolution: {integrity: sha512-ko14TjmDuQJ14zsotODv7dBlwxKhUKQEhuhmbqo1uCi9BB0Z2alo/wAXg6q1dTR5TyuqYyWhjtfe/Tsh+X28jQ==}
    dependencies:
      confbox: 0.1.7
      mlly: 1.7.0
      pathe: 1.1.2
    dev: false

  /pngjs@5.0.0:
    resolution: {integrity: sha512-40QW5YalBNfQo5yRYmiw7Yz6TKKVr3h6970B2YE+3fQpsWcrbj1PzJgxeJ19DRQjhMbKPIuMY8rFaXc8moolVw==}
    engines: {node: '>=10.13.0'}
    dev: false

  /pony-cause@2.1.11:
    resolution: {integrity: sha512-M7LhCsdNbNgiLYiP4WjsfLUuFmCfnjdF6jKe2R9NKl4WFN+HZPGHJZ9lnLP7f9ZnKe3U9nuWD0szirmj+migUg==}
    engines: {node: '>=12.0.0'}
    dev: false

  /possible-typed-array-names@1.0.0:
    resolution: {integrity: sha512-d7Uw+eZoloe0EHDIYoe+bQ5WXnGMOpmiZFTuMWCwpjzzkL2nTjcKiAk4hh8TjnGye2TwWOk3UXucZ+3rbmBa8Q==}
    engines: {node: '>= 0.4'}
    dev: false

  /postcss@8.4.38:
    resolution: {integrity: sha512-Wglpdk03BSfXkHoQa3b/oulrotAkwrlLDRSOb9D0bN86FdRyE9lppSp33aHNPgBa0JKCoB+drFLZkQoRRYae5A==}
    engines: {node: ^10 || ^12 || >=14}
    dependencies:
      nanoid: 3.3.7
      picocolors: 1.0.1
      source-map-js: 1.2.0
    dev: false

  /preact@10.22.0:
    resolution: {integrity: sha512-RRurnSjJPj4rp5K6XoP45Ui33ncb7e4H7WiOHVpjbkvqvA3U+N8Z6Qbo0AE6leGYBV66n8EhEaFixvIu3SkxFw==}
    dev: false

  /pretty-format@26.6.2:
    resolution: {integrity: sha512-7AeGuCYNGmycyQbCqd/3PWH4eOoX/OiCa0uphp57NVTeAGdJGaAliecxwBDHYQCIvrW7aDBZCYeNTP/WX69mkg==}
    engines: {node: '>= 10'}
    dependencies:
      '@jest/types': 26.6.2
      ansi-regex: 5.0.1
      ansi-styles: 4.3.0
      react-is: 17.0.2
    dev: false

  /pretty-format@29.7.0:
    resolution: {integrity: sha512-Pdlw/oPxN+aXdmM9R00JVC9WVFoCLTKJvDVLgmJ+qAffBMxsV85l/Lu7sNx4zSzPyoL2euImuEwHhOXdEgNFZQ==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
    dependencies:
      '@jest/schemas': 29.6.3
      ansi-styles: 5.2.0
      react-is: 18.3.1
    dev: false

  /process-nextick-args@2.0.1:
    resolution: {integrity: sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag==}
    dev: false

  /process-warning@1.0.0:
    resolution: {integrity: sha512-du4wfLyj4yCZq1VupnVSZmRsPJsNuxoDQFdCFHLaYiEbFBD7QE0a+I4D7hOxrVnh78QE/YipFAj9lXHiXocV+Q==}
    dev: false

  /promise@8.3.0:
    resolution: {integrity: sha512-rZPNPKTOYVNEEKFaq1HqTgOwZD+4/YHS5ukLzQCypkj+OkYx7iv0mA91lJlpPPZ8vMau3IIGj5Qlwrx+8iiSmg==}
    dependencies:
      asap: 2.0.6
    dev: false

  /prompts@2.4.2:
    resolution: {integrity: sha512-NxNv/kLguCA7p3jE8oL2aEBsrJWgAakBpgmgK6lpPWV+WuOmY6r2/zbAVnP+T8bQlA0nzHXSJSJW0Hq7ylaD2Q==}
    engines: {node: '>= 6'}
    dependencies:
      kleur: 3.0.3
      sisteransi: 1.0.5
    dev: false

  /proxy-compare@2.5.1:
    resolution: {integrity: sha512-oyfc0Tx87Cpwva5ZXezSp5V9vht1c7dZBhvuV/y3ctkgMVUmiAGDVeeB0dKhGSyT0v1ZTEQYpe/RXlBVBNuCLA==}
    dev: false

  /pump@3.0.0:
    resolution: {integrity: sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==}
    dependencies:
      end-of-stream: 1.4.4
      once: 1.4.0
    dev: false

  /qr-code-styling@1.6.0-rc.1:
    resolution: {integrity: sha512-ModRIiW6oUnsP18QzrRYZSc/CFKFKIdj7pUs57AEVH20ajlglRpN3HukjHk0UbNMTlKGuaYl7Gt6/O5Gg2NU2Q==}
    dependencies:
      qrcode-generator: 1.4.4
    dev: false

  /qrcode-generator@1.4.4:
    resolution: {integrity: sha512-HM7yY8O2ilqhmULxGMpcHSF1EhJJ9yBj8gvDEuZ6M+KGJ0YY2hKpnXvRD+hZPLrDVck3ExIGhmPtSdcjC+guuw==}
    dev: false

  /qrcode-terminal-nooctal@0.12.1:
    resolution: {integrity: sha512-jy/kkD0iIMDjTucB+5T6KBsnirlhegDH47vHgrj5MejchSQmi/EAMM0xMFeePgV9CJkkAapNakpVUWYgHvtdKg==}
    hasBin: true
    dev: false

  /qrcode@1.5.3:
    resolution: {integrity: sha512-puyri6ApkEHYiVl4CFzo1tDkAZ+ATcnbJrJ6RiBM1Fhctdn/ix9MTE3hRph33omisEbC/2fcfemsseiKgBPKZg==}
    engines: {node: '>=10.13.0'}
    hasBin: true
    dependencies:
      dijkstrajs: 1.0.3
      encode-utf8: 1.0.3
      pngjs: 5.0.0
      yargs: 15.4.1
    dev: false

  /query-string@7.1.3:
    resolution: {integrity: sha512-hh2WYhq4fi8+b+/2Kg9CEge4fDPvHS534aOOvOZeQ3+Vf2mCFsaFBYj0i+iXcAq6I9Vzp5fjMFBlONvayDC1qg==}
    engines: {node: '>=6'}
    dependencies:
      decode-uri-component: 0.2.2
      filter-obj: 1.1.0
      split-on-first: 1.1.0
      strict-uri-encode: 2.0.0
    dev: false

  /querystring@0.2.1:
    resolution: {integrity: sha512-wkvS7mL/JMugcup3/rMitHmd9ecIGd2lhFhK9N3UUQ450h66d1r3Y9nvXzQAW1Lq+wyx61k/1pfKS5KuKiyEbg==}
    engines: {node: '>=0.4.x'}
    deprecated: The querystring API is considered Legacy. new code should use the URLSearchParams API instead.
    dev: false

  /queue-microtask@1.2.3:
    resolution: {integrity: sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==}
    dev: false

  /queue@6.0.2:
    resolution: {integrity: sha512-iHZWu+q3IdFZFX36ro/lKBkSvfkztY5Y7HMiPlOUjhupPcG2JMfst2KKEpu5XndviX/3UhFbRngUPNKtgvtZiA==}
    dependencies:
      inherits: 2.0.4
    dev: false

  /quick-format-unescaped@4.0.4:
    resolution: {integrity: sha512-tYC1Q1hgyRuHgloV/YXs2w15unPVh8qfu/qCTfhTYamaw7fyhumKa2yGpdSo87vY32rIclj+4fWYQXUMs9EHvg==}
    dev: false

  /radix3@1.1.2:
    resolution: {integrity: sha512-b484I/7b8rDEdSDKckSSBA8knMpcdsXudlE/LNL639wFoHKwLbEkQFZHWEYwDC0wa0FKUcCY+GAF73Z7wxNVFA==}
    dev: false

  /range-parser@1.2.1:
    resolution: {integrity: sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==}
    engines: {node: '>= 0.6'}
    dev: false

  /react-devtools-core@5.2.0:
    resolution: {integrity: sha512-vZK+/gvxxsieAoAyYaiRIVFxlajb7KXhgBDV7OsoMzaAE+IqGpoxusBjIgq5ibqA2IloKu0p9n7tE68z1xs18A==}
    dependencies:
      shell-quote: 1.8.1
      ws: 7.5.9
    transitivePeerDependencies:
      - bufferutil
      - utf-8-validate
    dev: false

  /react-dom@18.3.1(react@18.3.1):
    resolution: {integrity: sha512-5m4nQKp+rZRb09LNH59GM4BxTh9251/ylbKIbpe7TpGxfJ+9kv6BLkLBXIjjspbgbnIBNqlI23tRnTWT0snUIw==}
    peerDependencies:
      react: ^18.3.1
    dependencies:
      loose-envify: 1.4.0
      react: 18.3.1
      scheduler: 0.23.2
    dev: false

  /react-i18next@13.5.0(i18next@23.11.5)(react-dom@18.3.1)(react-native@0.74.1)(react@18.3.1):
    resolution: {integrity: sha512-CFJ5NDGJ2MUyBohEHxljOq/39NQ972rh1ajnadG9BjTk+UXbHLq4z5DKEbEQBDoIhUmmbuS/fIMJKo6VOax1HA==}
    peerDependencies:
      i18next: '>= 23.2.3'
      react: '>= 16.8.0'
      react-dom: '*'
      react-native: '*'
    peerDependenciesMeta:
      react-dom:
        optional: true
      react-native:
        optional: true
    dependencies:
      '@babel/runtime': 7.24.6
      html-parse-stringify: 3.0.1
      i18next: 23.11.5
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
      react-native: 0.74.1(@babel/core@7.24.6)(@babel/preset-env@7.24.6)(react@18.3.1)
    dev: false

  /react-is@17.0.2:
    resolution: {integrity: sha512-w2GsyukL62IJnlaff/nRegPQR94C/XXamvMWmSHRJ4y7Ts/4ocGRmTHvOs8PSE6pB3dWOrD/nueuU5sduBsQ4w==}
    dev: false

  /react-is@18.3.1:
    resolution: {integrity: sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==}
    dev: false

  /react-native-webview@11.26.1(react-native@0.74.1)(react@18.3.1):
    resolution: {integrity: sha512-hC7BkxOpf+z0UKhxFSFTPAM4shQzYmZHoELa6/8a/MspcjEP7ukYKpuSUTLDywQditT8yI9idfcKvfZDKQExGw==}
    peerDependencies:
      react: '*'
      react-native: '*'
    dependencies:
      escape-string-regexp: 2.0.0
      invariant: 2.2.4
      react: 18.3.1
      react-native: 0.74.1(@babel/core@7.24.6)(@babel/preset-env@7.24.6)(react@18.3.1)
    dev: false

  /react-native@0.74.1(@babel/core@7.24.6)(@babel/preset-env@7.24.6)(react@18.3.1):
    resolution: {integrity: sha512-0H2XpmghwOtfPpM2LKqHIN7gxy+7G/r1hwJHKLV6uoyXGC/gCojRtoo5NqyKrWpFC8cqyT6wTYCLuG7CxEKilg==}
    engines: {node: '>=18'}
    hasBin: true
    peerDependencies:
      '@types/react': ^18.2.6
      react: 18.2.0
    peerDependenciesMeta:
      '@types/react':
        optional: true
    dependencies:
      '@jest/create-cache-key-function': 29.7.0
      '@react-native-community/cli': 13.6.6
      '@react-native-community/cli-platform-android': 13.6.6
      '@react-native-community/cli-platform-ios': 13.6.6
      '@react-native/assets-registry': 0.74.83
      '@react-native/codegen': 0.74.83(@babel/preset-env@7.24.6)
      '@react-native/community-cli-plugin': 0.74.83(@babel/core@7.24.6)(@babel/preset-env@7.24.6)
      '@react-native/gradle-plugin': 0.74.83
      '@react-native/js-polyfills': 0.74.83
      '@react-native/normalize-colors': 0.74.83
      '@react-native/virtualized-lists': 0.74.83(react-native@0.74.1)(react@18.3.1)
      abort-controller: 3.0.0
      anser: 1.4.10
      ansi-regex: 5.0.1
      base64-js: 1.5.1
      chalk: 4.1.2
      event-target-shim: 5.0.1
      flow-enums-runtime: 0.0.6
      invariant: 2.2.4
      jest-environment-node: 29.7.0
      jsc-android: 250231.0.0
      memoize-one: 5.2.1
      metro-runtime: 0.80.9
      metro-source-map: 0.80.9
      mkdirp: 0.5.6
      nullthrows: 1.1.1
      pretty-format: 26.6.2
      promise: 8.3.0
      react: 18.3.1
      react-devtools-core: 5.2.0
      react-refresh: 0.14.2
      react-shallow-renderer: 16.15.0(react@18.3.1)
      regenerator-runtime: 0.13.11
      scheduler: 0.24.0-canary-efb381bbf-20230505
      stacktrace-parser: 0.1.10
      whatwg-fetch: 3.6.20
      ws: 6.2.2
      yargs: 17.7.2
    transitivePeerDependencies:
      - '@babel/core'
      - '@babel/preset-env'
      - bufferutil
      - encoding
      - supports-color
      - utf-8-validate
    dev: false

  /react-refresh@0.14.2:
    resolution: {integrity: sha512-jCvmsr+1IUSMUyzOkRcvnVbX3ZYC6g9TDrDbFuFmRDq7PD4yaGbLKNQL6k2jnArV8hjYxh7hVhAZB6s9HDGpZA==}
    engines: {node: '>=0.10.0'}
    dev: false

  /react-remove-scroll-bar@2.3.6(react@18.3.1):
    resolution: {integrity: sha512-DtSYaao4mBmX+HDo5YWYdBWQwYIQQshUV/dVxFxK+KM26Wjwp1gZ6rv6OC3oujI6Bfu6Xyg3TwK533AQutsn/g==}
    engines: {node: '>=10'}
    peerDependencies:
      '@types/react': ^16.8.0 || ^17.0.0 || ^18.0.0
      react: ^16.8.0 || ^17.0.0 || ^18.0.0
    peerDependenciesMeta:
      '@types/react':
        optional: true
    dependencies:
      react: 18.3.1
      react-style-singleton: 2.2.1(react@18.3.1)
      tslib: 2.6.2
    dev: false

  /react-remove-scroll@2.5.7(react@18.3.1):
    resolution: {integrity: sha512-FnrTWO4L7/Bhhf3CYBNArEG/yROV0tKmTv7/3h9QCFvH6sndeFf1wPqOcbFVu5VAulS5dV1wGT3GZZ/1GawqiA==}
    engines: {node: '>=10'}
    peerDependencies:
      '@types/react': ^16.8.0 || ^17.0.0 || ^18.0.0
      react: ^16.8.0 || ^17.0.0 || ^18.0.0
    peerDependenciesMeta:
      '@types/react':
        optional: true
    dependencies:
      react: 18.3.1
      react-remove-scroll-bar: 2.3.6(react@18.3.1)
      react-style-singleton: 2.2.1(react@18.3.1)
      tslib: 2.6.2
      use-callback-ref: 1.3.2(react@18.3.1)
      use-sidecar: 1.1.2(react@18.3.1)
    dev: false

  /react-shallow-renderer@16.15.0(react@18.3.1):
    resolution: {integrity: sha512-oScf2FqQ9LFVQgA73vr86xl2NaOIX73rh+YFqcOp68CWj56tSfgtGKrEbyhCj0rSijyG9M1CYprTh39fBi5hzA==}
    peerDependencies:
      react: ^16.0.0 || ^17.0.0 || ^18.0.0
    dependencies:
      object-assign: 4.1.1
      react: 18.3.1
      react-is: 18.3.1
    dev: false

  /react-style-singleton@2.2.1(react@18.3.1):
    resolution: {integrity: sha512-ZWj0fHEMyWkHzKYUr2Bs/4zU6XLmq9HsgBURm7g5pAVfyn49DgUiNgY2d4lXRlYSiCif9YBGpQleewkcqddc7g==}
    engines: {node: '>=10'}
    peerDependencies:
      '@types/react': ^16.8.0 || ^17.0.0 || ^18.0.0
      react: ^16.8.0 || ^17.0.0 || ^18.0.0
    peerDependenciesMeta:
      '@types/react':
        optional: true
    dependencies:
      get-nonce: 1.0.1
      invariant: 2.2.4
      react: 18.3.1
      tslib: 2.6.2
    dev: false

  /react@18.3.1:
    resolution: {integrity: sha512-wS+hAgJShR0KhEvPJArfuPVN1+Hz1t0Y6n5jLrGQbkb4urgPE/0Rve+1kMB1v/oWgHgm4WIcV+i7F2pTVj+2iQ==}
    engines: {node: '>=0.10.0'}
    dependencies:
      loose-envify: 1.4.0
    dev: false

  /readable-stream@2.3.8:
    resolution: {integrity: sha512-8p0AUk4XODgIewSi0l8Epjs+EVnWiK7NoDIEGU0HhE7+ZyY8D1IMY7odu5lRrFXGg71L15KG8QrPmum45RTtdA==}
    dependencies:
      core-util-is: 1.0.3
      inherits: 2.0.4
      isarray: 1.0.0
      process-nextick-args: 2.0.1
      safe-buffer: 5.1.2
      string_decoder: 1.1.1
      util-deprecate: 1.0.2
    dev: false

  /readable-stream@3.6.2:
    resolution: {integrity: sha512-9u/sniCrY3D5WdsERHzHE4G2YCXqoG5FTHUiCC4SIbr6XcLZBY05ya9EKjYek9O5xOAwjGq+1JdGBAS7Q9ScoA==}
    engines: {node: '>= 6'}
    dependencies:
      inherits: 2.0.4
      string_decoder: 1.3.0
      util-deprecate: 1.0.2
    dev: false

  /readdirp@3.6.0:
    resolution: {integrity: sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==}
    engines: {node: '>=8.10.0'}
    dependencies:
      picomatch: 2.3.1
    dev: false

  /readline@1.3.0:
    resolution: {integrity: sha512-k2d6ACCkiNYz222Fs/iNze30rRJ1iIicW7JuX/7/cozvih6YCkFZH+J6mAFDVgv0dRBaAyr4jDqC95R2y4IADg==}
    dev: false

  /real-require@0.1.0:
    resolution: {integrity: sha512-r/H9MzAWtrv8aSVjPCMFpDMl5q66GqtmmRkRjpHTsp4zBAa+snZyiQNlMONiUmEJcsnaw0wCauJ2GWODr/aFkg==}
    engines: {node: '>= 12.13.0'}
    dev: false

  /recast@0.21.5:
    resolution: {integrity: sha512-hjMmLaUXAm1hIuTqOdeYObMslq/q+Xff6QE3Y2P+uoHAg2nmVlLBps2hzh1UJDdMtDTMXOFewK6ky51JQIeECg==}
    engines: {node: '>= 4'}
    dependencies:
      ast-types: 0.15.2
      esprima: 4.0.1
      source-map: 0.6.1
      tslib: 2.6.2
    dev: false

  /regenerate-unicode-properties@10.1.1:
    resolution: {integrity: sha512-X007RyZLsCJVVrjgEFVpLUTZwyOZk3oiL75ZcuYjlIWd6rNJtOjkBwQc5AsRrpbKVkxN6sklw/k/9m2jJYOf8Q==}
    engines: {node: '>=4'}
    dependencies:
      regenerate: 1.4.2
    dev: false

  /regenerate@1.4.2:
    resolution: {integrity: sha512-zrceR/XhGYU/d/opr2EKO7aRHUeiBI8qjtfHqADTwZd6Szfy16la6kqD0MIUs5z5hx6AaKa+PixpPrR289+I0A==}
    dev: false

  /regenerator-runtime@0.13.11:
    resolution: {integrity: sha512-kY1AZVr2Ra+t+piVaJ4gxaFaReZVH40AKNo7UCX6W+dEwBo/2oZJzqfuN1qLq1oL45o56cPaTXELwrTh8Fpggg==}
    dev: false

  /regenerator-runtime@0.14.1:
    resolution: {integrity: sha512-dYnhHh0nJoMfnkZs6GmmhFknAGRrLznOu5nc9ML+EJxGvrx6H7teuevqVqCuPcPK//3eDrrjQhehXVx9cnkGdw==}
    dev: false

  /regenerator-transform@0.15.2:
    resolution: {integrity: sha512-hfMp2BoF0qOk3uc5V20ALGDS2ddjQaLrdl7xrGXvAIow7qeWRM2VA2HuCHkUKk9slq3VwEwLNK3DFBqDfPGYtg==}
    dependencies:
      '@babel/runtime': 7.24.6
    dev: false

  /regexpu-core@5.3.2:
    resolution: {integrity: sha512-RAM5FlZz+Lhmo7db9L298p2vHP5ZywrVXmVXpmAD9GuL5MPH6t9ROw1iA/wfHkQ76Qe7AaPF0nGuim96/IrQMQ==}
    engines: {node: '>=4'}
    dependencies:
      '@babel/regjsgen': 0.8.0
      regenerate: 1.4.2
      regenerate-unicode-properties: 10.1.1
      regjsparser: 0.9.1
      unicode-match-property-ecmascript: 2.0.0
      unicode-match-property-value-ecmascript: 2.1.0
    dev: false

  /regjsparser@0.9.1:
    resolution: {integrity: sha512-dQUtn90WanSNl+7mQKcXAgZxvUe7Z0SqXlgzv0za4LwiUhyzBC58yQO3liFoUgu8GiJVInAhJjkj1N0EtQ5nkQ==}
    hasBin: true
    dependencies:
      jsesc: 0.5.0
    dev: false

  /require-directory@2.1.1:
    resolution: {integrity: sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==}
    engines: {node: '>=0.10.0'}
    dev: false

  /require-main-filename@2.0.0:
    resolution: {integrity: sha512-NKN5kMDylKuldxYLSUfrbo5Tuzh4hd+2E8NPPX02mZtn1VuREQToYe/ZdlJy+J3uCpfaiGF05e7B8W0iXbQHmg==}
    dev: false

  /resolve-from@3.0.0:
    resolution: {integrity: sha512-GnlH6vxLymXJNMBo7XP1fJIzBFbdYt49CuTwmB/6N53t+kMPRMFKz783LlQ4tv28XoQfMWinAJX6WCGf2IlaIw==}
    engines: {node: '>=4'}
    dev: false

  /resolve@1.22.8:
    resolution: {integrity: sha512-oKWePCxqpd6FlLvGV1VU0x7bkPmmCNolxzjMf4NczoDnQcIWrAF+cPtZn5i6n+RfD2d9i0tzpKnG6Yk168yIyw==}
    hasBin: true
    dependencies:
      is-core-module: 2.13.1
      path-parse: 1.0.7
      supports-preserve-symlinks-flag: 1.0.0
    dev: false

  /restore-cursor@3.1.0:
    resolution: {integrity: sha512-l+sSefzHpj5qimhFSE5a8nufZYAM3sBSVMAPtYkmC+4EH2anSGaEMXSD0izRQbu9nfyQ9y5JrVmp7E8oZrUjvA==}
    engines: {node: '>=8'}
    dependencies:
      onetime: 5.1.2
      signal-exit: 3.0.7
    dev: false

  /reusify@1.0.4:
    resolution: {integrity: sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==}
    engines: {iojs: '>=1.0.0', node: '>=0.10.0'}
    dev: false

  /rimraf@2.6.3:
    resolution: {integrity: sha512-mwqeW5XsA2qAejG46gYdENaxXjx9onRNCfn7L0duuP4hCuTIi/QO7PDK07KJfp1d+izWPrzEJDcSqBa0OZQriA==}
    deprecated: Rimraf versions prior to v4 are no longer supported
    hasBin: true
    dependencies:
      glob: 7.2.3
    dev: false

  /rimraf@3.0.2:
    resolution: {integrity: sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==}
    deprecated: Rimraf versions prior to v4 are no longer supported
    hasBin: true
    dependencies:
      glob: 7.2.3
    dev: false

  /rollup-plugin-visualizer@5.12.0:
    resolution: {integrity: sha512-8/NU9jXcHRs7Nnj07PF2o4gjxmm9lXIrZ8r175bT9dK8qoLlvKTwRMArRCMgpMGlq8CTLugRvEmyMeMXIU2pNQ==}
    engines: {node: '>=14'}
    hasBin: true
    peerDependencies:
      rollup: 2.x || 3.x || 4.x
    peerDependenciesMeta:
      rollup:
        optional: true
    dependencies:
      open: 8.4.2
      picomatch: 2.3.1
      source-map: 0.7.4
      yargs: 17.7.2
    dev: false

  /run-parallel@1.2.0:
    resolution: {integrity: sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==}
    dependencies:
      queue-microtask: 1.2.3
    dev: false

  /safe-buffer@5.1.2:
    resolution: {integrity: sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==}
    dev: false

  /safe-buffer@5.2.1:
    resolution: {integrity: sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==}
    dev: false

  /safe-stable-stringify@2.4.3:
    resolution: {integrity: sha512-e2bDA2WJT0wxseVd4lsDP4+3ONX6HpMXQa1ZhFQ7SU+GjvORCmShbCMltrtIDfkYhVHrOcPtj+KhmDBdPdZD1g==}
    engines: {node: '>=10'}
    dev: false

  /scheduler@0.23.2:
    resolution: {integrity: sha512-UOShsPwz7NrMUqhR6t0hWjFduvOzbtv7toDH1/hIrfRNIDBnnBWd0CwJTGvTpngVlmwGCdP9/Zl/tVrDqcuYzQ==}
    dependencies:
      loose-envify: 1.4.0
    dev: false

  /scheduler@0.24.0-canary-efb381bbf-20230505:
    resolution: {integrity: sha512-ABvovCDe/k9IluqSh4/ISoq8tIJnW8euVAWYt5j/bg6dRnqwQwiGO1F/V4AyK96NGF/FB04FhOUDuWj8IKfABA==}
    dependencies:
      loose-envify: 1.4.0
    dev: false

  /secp256k1@5.0.0:
    resolution: {integrity: sha512-TKWX8xvoGHrxVdqbYeZM9w+izTF4b9z3NhSaDkdn81btvuh+ivbIMGT/zQvDtTFWhRlThpoz6LEYTr7n8A5GcA==}
    engines: {node: '>=14.0.0'}
    requiresBuild: true
    dependencies:
      elliptic: 6.5.5
      node-addon-api: 5.1.0
      node-gyp-build: 4.8.1
    dev: false

  /selfsigned@2.4.1:
    resolution: {integrity: sha512-th5B4L2U+eGLq1TVh7zNRGBapioSORUeymIydxgFpwww9d2qyKvtuPU2jJuHvYAwwqi2Y596QBL3eEqcPEYL8Q==}
    engines: {node: '>=10'}
    dependencies:
      '@types/node-forge': 1.3.11
      node-forge: 1.3.1
    dev: false

  /semver@5.7.2:
    resolution: {integrity: sha512-cBznnQ9KjJqU67B52RMC65CMarK2600WFnbkcaiwWq3xy/5haFJlshgnpjovMVJ+Hff49d8GEn0b87C5pDQ10g==}
    hasBin: true
    dev: false

  /semver@6.3.1:
    resolution: {integrity: sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==}
    hasBin: true
    dev: false

  /semver@7.6.2:
    resolution: {integrity: sha512-FNAIBWCx9qcRhoHcgcJ0gvU7SN1lYU2ZXuSfl04bSC5OpvDHFyJCjdNHomPXxjQlCBU67YW64PzY7/VIEH7F2w==}
    engines: {node: '>=10'}
    hasBin: true
    dev: false

  /send@0.18.0:
    resolution: {integrity: sha512-qqWzuOjSFOuqPjFe4NOsMLafToQQwBSOEpS+FwEt3A2V3vKubTquT3vmLTQpFgMXp8AlFWFuP1qKaJZOtPpVXg==}
    engines: {node: '>= 0.8.0'}
    dependencies:
      debug: 2.6.9
      depd: 2.0.0
      destroy: 1.2.0
      encodeurl: 1.0.2
      escape-html: 1.0.3
      etag: 1.8.1
      fresh: 0.5.2
      http-errors: 2.0.0
      mime: 1.6.0
      ms: 2.1.3
      on-finished: 2.4.1
      range-parser: 1.2.1
      statuses: 2.0.1
    transitivePeerDependencies:
      - supports-color
    dev: false

  /serialize-error@2.1.0:
    resolution: {integrity: sha512-ghgmKt5o4Tly5yEG/UJp8qTd0AN7Xalw4XBtDEKP655B699qMEtra1WlXeE6WIvdEG481JvRxULKsInq/iNysw==}
    engines: {node: '>=0.10.0'}
    dev: false

  /serve-static@1.15.0:
    resolution: {integrity: sha512-XGuRDNjXUijsUL0vl6nSD7cwURuzEgglbOaFuZM9g3kwDXOWVTck0jLzjPzGD+TazWbboZYu52/9/XPdUgne9g==}
    engines: {node: '>= 0.8.0'}
    dependencies:
      encodeurl: 1.0.2
      escape-html: 1.0.3
      parseurl: 1.3.3
      send: 0.18.0
    transitivePeerDependencies:
      - supports-color
    dev: false

  /set-blocking@2.0.0:
    resolution: {integrity: sha512-KiKBS8AnWGEyLzofFfmvKwpdPzqiy16LvQfK3yv/fVH7Bj13/wl3JSR1J+rfgRE9q7xUJK4qvgS8raSOeLUehw==}
    dev: false

  /set-function-length@1.2.2:
    resolution: {integrity: sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==}
    engines: {node: '>= 0.4'}
    dependencies:
      define-data-property: 1.1.4
      es-errors: 1.3.0
      function-bind: 1.1.2
      get-intrinsic: 1.2.4
      gopd: 1.0.1
      has-property-descriptors: 1.0.2
    dev: false

  /setprototypeof@1.2.0:
    resolution: {integrity: sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==}
    dev: false

  /sha.js@2.4.11:
    resolution: {integrity: sha512-QMEp5B7cftE7APOjk5Y6xgrbWu+WkLVQwk8JNjZ8nKRciZaByEW6MubieAiToS7+dwvrjGhH8jRXz3MVd0AYqQ==}
    hasBin: true
    dependencies:
      inherits: 2.0.4
      safe-buffer: 5.2.1
    dev: false

  /shallow-clone@3.0.1:
    resolution: {integrity: sha512-/6KqX+GVUdqPuPPd2LxDDxzX6CAbjJehAAOKlNpqqUpAqPM6HeL8f+o3a+JsyGjn2lv0WY8UsTgUJjU9Ok55NA==}
    engines: {node: '>=8'}
    dependencies:
      kind-of: 6.0.3
    dev: false

  /shebang-command@2.0.0:
    resolution: {integrity: sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==}
    engines: {node: '>=8'}
    dependencies:
      shebang-regex: 3.0.0
    dev: false

  /shebang-regex@3.0.0:
    resolution: {integrity: sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==}
    engines: {node: '>=8'}
    dev: false

  /shell-quote@1.8.1:
    resolution: {integrity: sha512-6j1W9l1iAs/4xYBI1SYOVZyFcCis9b4KCLQ8fgAGG07QvzaRLVVRQvAy85yNmmZSjYjg4MWh4gNvlPujU/5LpA==}
    dev: false

  /signal-exit@3.0.7:
    resolution: {integrity: sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ==}
    dev: false

  /signal-exit@4.1.0:
    resolution: {integrity: sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==}
    engines: {node: '>=14'}
    dev: false

  /sisteransi@1.0.5:
    resolution: {integrity: sha512-bLGGlR1QxBcynn2d5YmDX4MGjlZvy2MRBDRNHLJ8VI6l6+9FUiyTFNJ0IveOSP0bcXgVDPRcfGqA0pjaqUpfVg==}
    dev: false

  /slash@3.0.0:
    resolution: {integrity: sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==}
    engines: {node: '>=8'}
    dev: false

  /slice-ansi@2.1.0:
    resolution: {integrity: sha512-Qu+VC3EwYLldKa1fCxuuvULvSJOKEgk9pi8dZeCVK7TqBfUNTH4sFkk4joj8afVSfAYgJoSOetjx9QWOJ5mYoQ==}
    engines: {node: '>=6'}
    dependencies:
      ansi-styles: 3.2.1
      astral-regex: 1.0.0
      is-fullwidth-code-point: 2.0.0
    dev: false

  /socket.io-client@4.7.5:
    resolution: {integrity: sha512-sJ/tqHOCe7Z50JCBCXrsY3I2k03iOiUe+tj1OmKeD2lXPiGH/RUCdTZFoqVyN7l1MnpIzPrGtLcijffmeouNlQ==}
    engines: {node: '>=10.0.0'}
    dependencies:
      '@socket.io/component-emitter': 3.1.2
      debug: 4.3.4
      engine.io-client: 6.5.3
      socket.io-parser: 4.2.4
    transitivePeerDependencies:
      - bufferutil
      - supports-color
      - utf-8-validate
    dev: false

  /socket.io-parser@4.2.4:
    resolution: {integrity: sha512-/GbIKmo8ioc+NIWIhwdecY0ge+qVBSMdgxGygevmdHj24bsfgtCmcUUcQ5ZzcylGFHsN3k4HB4Cgkl96KVnuew==}
    engines: {node: '>=10.0.0'}
    dependencies:
      '@socket.io/component-emitter': 3.1.2
      debug: 4.3.4
    transitivePeerDependencies:
      - supports-color
    dev: false

  /sonic-boom@2.8.0:
    resolution: {integrity: sha512-kuonw1YOYYNOve5iHdSahXPOK49GqwA+LZhI6Wz/l0rP57iKyXXIHaRagOBHAPmGwJC6od2Z9zgvZ5loSgMlVg==}
    dependencies:
      atomic-sleep: 1.0.0
    dev: false

  /source-map-js@1.2.0:
    resolution: {integrity: sha512-itJW8lvSA0TXEphiRoawsCksnlf8SyvmFzIhltqAHluXd88pkCd+cXJVHTDwdCr0IzwptSm035IHQktUu1QUMg==}
    engines: {node: '>=0.10.0'}
    dev: false

  /source-map-support@0.5.21:
    resolution: {integrity: sha512-uBHU3L3czsIyYXKX88fdrGovxdSCoTGDRZ6SYXtSRxLZUzHg5P/66Ht6uoUlHu9EZod+inXhKo3qQgwXUT/y1w==}
    dependencies:
      buffer-from: 1.1.2
      source-map: 0.6.1
    dev: false

  /source-map@0.5.7:
    resolution: {integrity: sha512-LbrmJOMUSdEVxIKvdcJzQC+nQhe8FUZQTXQy6+I75skNgn3OoQ0DZA8YnFa7gp8tqtL3KPf1kmo0R5DoApeSGQ==}
    engines: {node: '>=0.10.0'}
    dev: false

  /source-map@0.6.1:
    resolution: {integrity: sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==}
    engines: {node: '>=0.10.0'}
    dev: false

  /source-map@0.7.4:
    resolution: {integrity: sha512-l3BikUxvPOcn5E74dZiq5BGsTb5yEwhaTSzccU6t4sDOH8NWJCstKO5QT2CvtFoK6F0saL7p9xHAqHOlCPJygA==}
    engines: {node: '>= 8'}
    dev: false

  /split-on-first@1.1.0:
    resolution: {integrity: sha512-43ZssAJaMusuKWL8sKUBQXHWOpq8d6CfN/u1p4gUzfJkM05C8rxTmYrkIPTXapZpORA6LkkzcUulJ8FqA7Uudw==}
    engines: {node: '>=6'}
    dev: false

  /split2@4.2.0:
    resolution: {integrity: sha512-UcjcJOWknrNkF6PLX83qcHM6KHgVKNkV62Y8a5uYDVv9ydGQVwAHMKqHdJje1VTWpljG0WYpCDhrCdAOYH4TWg==}
    engines: {node: '>= 10.x'}
    dev: false

  /sprintf-js@1.0.3:
    resolution: {integrity: sha512-D9cPgkvLlV3t3IzL0D0YLvGA9Ahk4PcvVwUbN0dSGr1aP0Nrt4AEnTUbuGvquEC0mA64Gqt1fzirlRs5ibXx8g==}
    dev: false

  /stack-utils@2.0.6:
    resolution: {integrity: sha512-XlkWvfIm6RmsWtNJx+uqtKLS8eqFbxUg0ZzLXqY0caEy9l7hruX8IpiDnjsLavoBgqCCR71TqWO8MaXYheJ3RQ==}
    engines: {node: '>=10'}
    dependencies:
      escape-string-regexp: 2.0.0
    dev: false

  /stackframe@1.3.4:
    resolution: {integrity: sha512-oeVtt7eWQS+Na6F//S4kJ2K2VbRlS9D43mAlMyVpVWovy9o+jfgH8O9agzANzaiLjclA0oYzUXEM4PurhSUChw==}
    dev: false

  /stacktrace-parser@0.1.10:
    resolution: {integrity: sha512-KJP1OCML99+8fhOHxwwzyWrlUuVX5GQ0ZpJTd1DFXhdkrvg1szxfHhawXUZ3g9TkXORQd4/WG68jMlQZ2p8wlg==}
    engines: {node: '>=6'}
    dependencies:
      type-fest: 0.7.1
    dev: false

  /statuses@1.5.0:
    resolution: {integrity: sha512-OpZ3zP+jT1PI7I8nemJX4AKmAX070ZkYPVWV/AaKTJl+tXCTGyVdC1a4SL8RUQYEwk/f34ZX8UTykN68FwrqAA==}
    engines: {node: '>= 0.6'}
    dev: false

  /statuses@2.0.1:
    resolution: {integrity: sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==}
    engines: {node: '>= 0.8'}
    dev: false

  /std-env@3.7.0:
    resolution: {integrity: sha512-JPbdCEQLj1w5GilpiHAx3qJvFndqybBysA3qUOnznweH4QbNYUsW/ea8QzSrnh0vNsezMMw5bcVool8lM0gwzg==}
    dev: false

  /stream-shift@1.0.3:
    resolution: {integrity: sha512-76ORR0DO1o1hlKwTbi/DM3EXWGf3ZJYO8cXX5RJwnul2DEg2oyoZyjLNoQM8WsvZiFKCRfC1O0J7iCvie3RZmQ==}
    dev: false

  /strict-uri-encode@2.0.0:
    resolution: {integrity: sha512-QwiXZgpRcKkhTj2Scnn++4PKtWsH0kpzZ62L2R6c/LUVYv7hVnZqcg2+sMuT6R7Jusu1vviK/MFsu6kNJfWlEQ==}
    engines: {node: '>=4'}
    dev: false

  /string-width@4.2.3:
    resolution: {integrity: sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==}
    engines: {node: '>=8'}
    dependencies:
      emoji-regex: 8.0.0
      is-fullwidth-code-point: 3.0.0
      strip-ansi: 6.0.1
    dev: false

  /string_decoder@1.1.1:
    resolution: {integrity: sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==}
    dependencies:
      safe-buffer: 5.1.2
    dev: false

  /string_decoder@1.3.0:
    resolution: {integrity: sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==}
    dependencies:
      safe-buffer: 5.2.1
    dev: false

  /strip-ansi@5.2.0:
    resolution: {integrity: sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==}
    engines: {node: '>=6'}
    dependencies:
      ansi-regex: 4.1.1
    dev: false

  /strip-ansi@6.0.1:
    resolution: {integrity: sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==}
    engines: {node: '>=8'}
    dependencies:
      ansi-regex: 5.0.1
    dev: false

  /strip-final-newline@2.0.0:
    resolution: {integrity: sha512-BrpvfNAE3dcvq7ll3xVumzjKjZQ5tI1sEUIKr3Uoks0XUl45St3FlatVqef9prk4jRDzhW6WZg+3bk93y6pLjA==}
    engines: {node: '>=6'}
    dev: false

  /strip-final-newline@3.0.0:
    resolution: {integrity: sha512-dOESqjYr96iWYylGObzd39EuNTa5VJxyvVAEm5Jnh7KGo75V43Hk1odPQkNDyXNmUR6k+gEiDVXnjB8HJ3crXw==}
    engines: {node: '>=12'}
    dev: false

  /strnum@1.0.5:
    resolution: {integrity: sha512-J8bbNyKKXl5qYcR36TIO8W3mVGVHrmmxsd5PAItGkmyzwJvybiw2IVq5nqd0i4LSNSkB/sx9VHllbfFdr9k1JA==}
    dev: false

  /sudo-prompt@9.2.1:
    resolution: {integrity: sha512-Mu7R0g4ig9TUuGSxJavny5Rv0egCEtpZRNMrZaYS1vxkiIxGiGUwoezU3LazIQ+KE04hTrTfNPgxU5gzi7F5Pw==}
    dev: false

  /superstruct@1.0.4:
    resolution: {integrity: sha512-7JpaAoX2NGyoFlI9NBh66BQXGONc+uE+MRS5i2iOBKuS4e+ccgMDjATgZldkah+33DakBxDHiss9kvUcGAO8UQ==}
    engines: {node: '>=14.0.0'}
    dev: false

  /supports-color@5.5.0:
    resolution: {integrity: sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==}
    engines: {node: '>=4'}
    dependencies:
      has-flag: 3.0.0
    dev: false

  /supports-color@7.2.0:
    resolution: {integrity: sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==}
    engines: {node: '>=8'}
    dependencies:
      has-flag: 4.0.0
    dev: false

  /supports-color@8.1.1:
    resolution: {integrity: sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q==}
    engines: {node: '>=10'}
    dependencies:
      has-flag: 4.0.0
    dev: false

  /supports-preserve-symlinks-flag@1.0.0:
    resolution: {integrity: sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==}
    engines: {node: '>= 0.4'}
    dev: false

  /system-architecture@0.1.0:
    resolution: {integrity: sha512-ulAk51I9UVUyJgxlv9M6lFot2WP3e7t8Kz9+IS6D4rVba1tR9kON+Ey69f+1R4Q8cd45Lod6a4IcJIxnzGc/zA==}
    engines: {node: '>=18'}
    dev: false

  /temp-dir@2.0.0:
    resolution: {integrity: sha512-aoBAniQmmwtcKp/7BzsH8Cxzv8OL736p7v1ihGb5e9DJ9kTwGWHrQrVB5+lfVDzfGrdRzXch+ig7LHaY1JTOrg==}
    engines: {node: '>=8'}
    dev: false

  /temp@0.8.4:
    resolution: {integrity: sha512-s0ZZzd0BzYv5tLSptZooSjK8oj6C+c19p7Vqta9+6NPOf7r+fxq0cJe6/oN4LTC79sy5NY8ucOJNgwsKCSbfqg==}
    engines: {node: '>=6.0.0'}
    dependencies:
      rimraf: 2.6.3
    dev: false

  /terser@5.31.0:
    resolution: {integrity: sha512-Q1JFAoUKE5IMfI4Z/lkE/E6+SwgzO+x4tq4v1AyBLRj8VSYvRO6A/rQrPg1yud4g0En9EKI1TvFRF2tQFcoUkg==}
    engines: {node: '>=10'}
    hasBin: true
    dependencies:
      '@jridgewell/source-map': 0.3.6
      acorn: 8.11.3
      commander: 2.20.3
      source-map-support: 0.5.21
    dev: false

  /thread-stream@0.15.2:
    resolution: {integrity: sha512-UkEhKIg2pD+fjkHQKyJO3yoIvAP3N6RlNFt2dUhcS1FGvCD1cQa1M/PGknCLFIyZdtJOWQjejp7bdNqmN7zwdA==}
    dependencies:
      real-require: 0.1.0
    dev: false

  /throat@5.0.0:
    resolution: {integrity: sha512-fcwX4mndzpLQKBS1DVYhGAcYaYt7vsHNIvQV+WXMvnow5cgjPphq5CaayLaGsjRdSCKZFNGt7/GYAuXaNOiYCA==}
    dev: false

  /through2@2.0.5:
    resolution: {integrity: sha512-/mrRod8xqpA+IHSLyGCQ2s8SPHiCDEeQJSep1jqLYeEUClOFG2Qsh+4FU6G9VeqpZnGW/Su8LQGc4YKni5rYSQ==}
    dependencies:
      readable-stream: 2.3.8
      xtend: 4.0.2
    dev: false

  /tmpl@1.0.5:
    resolution: {integrity: sha512-3f0uOEAQwIqGuWW2MVzYg8fV/QNnc/IpuJNG837rLuczAaLVHslWHZQj4IGiEl5Hs3kkbhwL9Ab7Hrsmuj+Smw==}
    dev: false

  /to-fast-properties@2.0.0:
    resolution: {integrity: sha512-/OaKK0xYrs3DmxRYqL/yDc+FxFUVYhDlXMhRmv3z915w2HF1tnN1omB354j8VUGO/hbRzyD6Y3sA7v7GS/ceog==}
    engines: {node: '>=4'}
    dev: false

  /to-regex-range@5.0.1:
    resolution: {integrity: sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==}
    engines: {node: '>=8.0'}
    dependencies:
      is-number: 7.0.0
    dev: false

  /toidentifier@1.0.1:
    resolution: {integrity: sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==}
    engines: {node: '>=0.6'}
    dev: false

  /tr46@0.0.3:
    resolution: {integrity: sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw==}
    dev: false

  /tslib@1.14.1:
    resolution: {integrity: sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg==}
    dev: false

  /tslib@2.6.2:
    resolution: {integrity: sha512-AEYxH93jGFPn/a2iVAwW87VuUIkR1FVUKB77NwMF7nBTDkDrrT/Hpt/IrCJ0QXhW27jTBDcf5ZY7w6RiqTMw2Q==}
    dev: false

  /type-detect@4.0.8:
    resolution: {integrity: sha512-0fr/mIH1dlO+x7TlcMy+bIDqKPsw/70tVyeHW787goQjhmqaZe10uwLujubK9q9Lg6Fiho1KUKDYz0Z7k7g5/g==}
    engines: {node: '>=4'}
    dev: false

  /type-fest@0.7.1:
    resolution: {integrity: sha512-Ne2YiiGN8bmrmJJEuTWTLJR32nh/JdL1+PSicowtNb0WFpn59GK8/lfD61bVtzguz7b3PBt74nxpv/Pw5po5Rg==}
    engines: {node: '>=8'}
    dev: false

  /ua-parser-js@1.0.37:
    resolution: {integrity: sha512-bhTyI94tZofjo+Dn8SN6Zv8nBDvyXTymAdM3LDI/0IboIUwTu1rEhW7v2TfiVsoYWgkQ4kOVqnI8APUFbIQIFQ==}
    dev: false

  /ufo@1.5.3:
    resolution: {integrity: sha512-Y7HYmWaFwPUmkoQCUIAYpKqkOf+SbVj/2fJJZ4RJMCfZp0rTGwRbzQD+HghfnhKOjL9E01okqz+ncJskGYfBNw==}
    dev: false

  /uint8arrays@3.1.0:
    resolution: {integrity: sha512-ei5rfKtoRO8OyOIor2Rz5fhzjThwIHJZ3uyDPnDHTXbP0aMQ1RN/6AI5B5d9dBxJOU+BvOAk7ZQ1xphsX8Lrog==}
    dependencies:
      multiformats: 9.9.0
    dev: false

  /uncrypto@0.1.3:
    resolution: {integrity: sha512-Ql87qFHB3s/De2ClA9e0gsnS6zXG27SkTiSJwjCc9MebbfapQfuPzumMIUMi38ezPZVNFcHI9sUIepeQfw8J8Q==}
    dev: false

  /undici-types@5.26.5:
    resolution: {integrity: sha512-JlCMO+ehdEIKqlFxk6IfVoAUVmgz7cU7zD/h9XZ0qzeosSHmUJVOzSQvvYSYWXkFXC+IfLKSIffhv0sVZup6pA==}
    dev: false

  /unenv@1.9.0:
    resolution: {integrity: sha512-QKnFNznRxmbOF1hDgzpqrlIf6NC5sbZ2OJ+5Wl3OX8uM+LUJXbj4TXvLJCtwbPTmbMHCLIz6JLKNinNsMShK9g==}
    dependencies:
      consola: 3.2.3
      defu: 6.1.4
      mime: 3.0.0
      node-fetch-native: 1.6.4
      pathe: 1.1.2
    dev: false

  /unfetch@4.2.0:
    resolution: {integrity: sha512-F9p7yYCn6cIW9El1zi0HI6vqpeIvBsr3dSuRO6Xuppb1u5rXpCPmMvLSyECLhybr9isec8Ohl0hPekMVrEinDA==}
    dev: false

  /unicode-canonical-property-names-ecmascript@2.0.0:
    resolution: {integrity: sha512-yY5PpDlfVIU5+y/BSCxAJRBIS1Zc2dDG3Ujq+sR0U+JjUevW2JhocOF+soROYDSaAezOzOKuyyixhD6mBknSmQ==}
    engines: {node: '>=4'}
    dev: false

  /unicode-match-property-ecmascript@2.0.0:
    resolution: {integrity: sha512-5kaZCrbp5mmbz5ulBkDkbY0SsPOjKqVS35VpL9ulMPfSl0J0Xsm+9Evphv9CoIZFwre7aJoa94AY6seMKGVN5Q==}
    engines: {node: '>=4'}
    dependencies:
      unicode-canonical-property-names-ecmascript: 2.0.0
      unicode-property-aliases-ecmascript: 2.1.0
    dev: false

  /unicode-match-property-value-ecmascript@2.1.0:
    resolution: {integrity: sha512-qxkjQt6qjg/mYscYMC0XKRn3Rh0wFPlfxB0xkt9CfyTvpX1Ra0+rAmdX2QyAobptSEvuy4RtpPRui6XkV+8wjA==}
    engines: {node: '>=4'}
    dev: false

  /unicode-property-aliases-ecmascript@2.1.0:
    resolution: {integrity: sha512-6t3foTQI9qne+OZoVQB/8x8rk2k1eVy1gRXhV3oFQ5T6R1dqQ1xtin3XqSlx3+ATBkliTaR/hHyJBm+LVPNM8w==}
    engines: {node: '>=4'}
    dev: false

  /universalify@0.1.2:
    resolution: {integrity: sha512-rBJeI5CXAlmy1pV+617WB9J63U6XcazHHF2f2dbJix4XzpUF0RS3Zbj0FGIOCAva5P/d/GBOYaACQ1w+0azUkg==}
    engines: {node: '>= 4.0.0'}
    dev: false

  /unpipe@1.0.0:
    resolution: {integrity: sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==}
    engines: {node: '>= 0.8'}
    dev: false

  /unstorage@1.10.2(idb-keyval@6.2.1):
    resolution: {integrity: sha512-cULBcwDqrS8UhlIysUJs2Dk0Mmt8h7B0E6mtR+relW9nZvsf/u4SkAYyNliPiPW7XtFNb5u3IUMkxGxFTTRTgQ==}
    peerDependencies:
      '@azure/app-configuration': ^1.5.0
      '@azure/cosmos': ^4.0.0
      '@azure/data-tables': ^13.2.2
      '@azure/identity': ^4.0.1
      '@azure/keyvault-secrets': ^4.8.0
      '@azure/storage-blob': ^12.17.0
      '@capacitor/preferences': ^5.0.7
      '@netlify/blobs': ^6.5.0 || ^7.0.0
      '@planetscale/database': ^1.16.0
      '@upstash/redis': ^1.28.4
      '@vercel/kv': ^1.0.1
      idb-keyval: ^6.2.1
      ioredis: ^5.3.2
    peerDependenciesMeta:
      '@azure/app-configuration':
        optional: true
      '@azure/cosmos':
        optional: true
      '@azure/data-tables':
        optional: true
      '@azure/identity':
        optional: true
      '@azure/keyvault-secrets':
        optional: true
      '@azure/storage-blob':
        optional: true
      '@capacitor/preferences':
        optional: true
      '@netlify/blobs':
        optional: true
      '@planetscale/database':
        optional: true
      '@upstash/redis':
        optional: true
      '@vercel/kv':
        optional: true
      idb-keyval:
        optional: true
      ioredis:
        optional: true
    dependencies:
      anymatch: 3.1.3
      chokidar: 3.6.0
      destr: 2.0.3
      h3: 1.11.1
      idb-keyval: 6.2.1
      listhen: 1.7.2
      lru-cache: 10.2.2
      mri: 1.2.0
      node-fetch-native: 1.6.4
      ofetch: 1.3.4
      ufo: 1.5.3
    transitivePeerDependencies:
      - uWebSockets.js
    dev: false

  /untun@0.1.3:
    resolution: {integrity: sha512-4luGP9LMYszMRZwsvyUd9MrxgEGZdZuZgpVQHEEX0lCYFESasVRvZd0EYpCkOIbJKHMuv0LskpXc/8Un+MJzEQ==}
    hasBin: true
    dependencies:
      citty: 0.1.6
      consola: 3.2.3
      pathe: 1.1.2
    dev: false

  /update-browserslist-db@1.0.16(browserslist@4.23.0):
    resolution: {integrity: sha512-KVbTxlBYlckhF5wgfyZXTWnMn7MMZjMu9XG8bPlliUOP9ThaF4QnhP8qrjrH7DRzHfSk0oQv1wToW+iA5GajEQ==}
    hasBin: true
    peerDependencies:
      browserslist: '>= 4.21.0'
    dependencies:
      browserslist: 4.23.0
      escalade: 3.1.2
      picocolors: 1.0.1
    dev: false

  /uqr@0.1.2:
    resolution: {integrity: sha512-MJu7ypHq6QasgF5YRTjqscSzQp/W11zoUk6kvmlH+fmWEs63Y0Eib13hYFwAzagRJcVY8WVnlV+eBDUGMJ5IbA==}
    dev: false

  /use-callback-ref@1.3.2(react@18.3.1):
    resolution: {integrity: sha512-elOQwe6Q8gqZgDA8mrh44qRTQqpIHDcZ3hXTLjBe1i4ph8XpNJnO+aQf3NaG+lriLopI4HMx9VjQLfPQ6vhnoA==}
    engines: {node: '>=10'}
    peerDependencies:
      '@types/react': ^16.8.0 || ^17.0.0 || ^18.0.0
      react: ^16.8.0 || ^17.0.0 || ^18.0.0
    peerDependenciesMeta:
      '@types/react':
        optional: true
    dependencies:
      react: 18.3.1
      tslib: 2.6.2
    dev: false

  /use-sidecar@1.1.2(react@18.3.1):
    resolution: {integrity: sha512-epTbsLuzZ7lPClpz2TyryBfztm7m+28DlEv2ZCQ3MDr5ssiwyOwGH/e5F9CkfWjJ1t4clvI58yF822/GUkjjhw==}
    engines: {node: '>=10'}
    peerDependencies:
      '@types/react': ^16.9.0 || ^17.0.0 || ^18.0.0
      react: ^16.8.0 || ^17.0.0 || ^18.0.0
    peerDependenciesMeta:
      '@types/react':
        optional: true
    dependencies:
      detect-node-es: 1.1.0
      react: 18.3.1
      tslib: 2.6.2
    dev: false

  /use-sync-external-store@1.2.0(react@18.3.1):
    resolution: {integrity: sha512-eEgnFxGQ1Ife9bzYs6VLi8/4X6CObHMw9Qr9tPY43iKwsPw8xE8+EFsf/2cFZ5S3esXgpWgtSCtLNS41F+sKPA==}
    peerDependencies:
      react: ^16.8.0 || ^17.0.0 || ^18.0.0
    dependencies:
      react: 18.3.1
    dev: false

  /utf-8-validate@6.0.4:
    resolution: {integrity: sha512-xu9GQDeFp+eZ6LnCywXN/zBancWvOpUMzgjLPSjy4BRHSmTelvn2E0DG0o1sTiw5hkCKBHo8rwSKncfRfv2EEQ==}
    engines: {node: '>=6.14.2'}
    requiresBuild: true
    dependencies:
      node-gyp-build: 4.8.1
    dev: false

  /util-deprecate@1.0.2:
    resolution: {integrity: sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==}
    dev: false

  /util@0.12.5:
    resolution: {integrity: sha512-kZf/K6hEIrWHI6XqOFUiiMa+79wE/D8Q+NCNAWclkyg3b4d2k7s0QGepNjiABc+aR3N1PAyHL7p6UcLY6LmrnA==}
    dependencies:
      inherits: 2.0.4
      is-arguments: 1.1.1
      is-generator-function: 1.0.10
      is-typed-array: 1.1.13
      which-typed-array: 1.1.15
    dev: false

  /utils-merge@1.0.1:
    resolution: {integrity: sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA==}
    engines: {node: '>= 0.4.0'}
    dev: false

  /uuid@8.3.2:
    resolution: {integrity: sha512-+NYs2QeMWy+GWFOEm9xnn6HCDp0l7QBD7ml8zLUmJ+93Q5NF0NocErnwkTkXVFNiX3/fpC6afS8Dhb/gz7R7eg==}
    hasBin: true
    dev: false

  /uuid@9.0.1:
    resolution: {integrity: sha512-b+1eJOlsR9K8HJpow9Ok3fiWOWSIcIzXodvv0rQjVoOVNpWMpxf1wZNpt4y9h10odCNrqnYp1OBzRktckBe3sA==}
    hasBin: true
    dev: false

  /valtio@1.11.2(react@18.3.1):
    resolution: {integrity: sha512-1XfIxnUXzyswPAPXo1P3Pdx2mq/pIqZICkWN60Hby0d9Iqb+MEIpqgYVlbflvHdrp2YR/q3jyKWRPJJ100yxaw==}
    engines: {node: '>=12.20.0'}
    peerDependencies:
      '@types/react': '>=16.8'
      react: '>=16.8'
    peerDependenciesMeta:
      '@types/react':
        optional: true
      react:
        optional: true
    dependencies:
      proxy-compare: 2.5.1
      react: 18.3.1
      use-sync-external-store: 1.2.0(react@18.3.1)
    dev: false

  /vary@1.1.2:
    resolution: {integrity: sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==}
    engines: {node: '>= 0.8'}
    dev: false

  /viem@1.21.4:
    resolution: {integrity: sha512-BNVYdSaUjeS2zKQgPs+49e5JKocfo60Ib2yiXOWBT6LuVxY1I/6fFX3waEtpXvL1Xn4qu+BVitVtMh9lyThyhQ==}
    peerDependencies:
      typescript: '>=5.0.4'
    peerDependenciesMeta:
      typescript:
        optional: true
    dependencies:
      '@adraffy/ens-normalize': 1.10.0
      '@noble/curves': 1.2.0
      '@noble/hashes': 1.3.2
      '@scure/bip32': 1.3.2
      '@scure/bip39': 1.2.1
      abitype: 0.9.8
      isows: 1.0.3(ws@8.13.0)
      ws: 8.13.0
    transitivePeerDependencies:
      - bufferutil
      - utf-8-validate
      - zod
    dev: false

  /viem@2.10.11:
    resolution: {integrity: sha512-V+y+INWpprABSAf35b2SwqCA97WUyhgtmoPPae6jN1yo+V7tNXg3rUvRukT1/9CD9f8QnhfpiZXkVSgtXbINRg==}
    peerDependencies:
      typescript: '>=5.0.4'
    peerDependenciesMeta:
      typescript:
        optional: true
    dependencies:
      '@adraffy/ens-normalize': 1.10.0
      '@noble/curves': 1.2.0
      '@noble/hashes': 1.3.2
      '@scure/bip32': 1.3.2
      '@scure/bip39': 1.2.1
      abitype: 1.0.0
      isows: 1.0.4(ws@8.13.0)
      ws: 8.13.0
    transitivePeerDependencies:
      - bufferutil
      - utf-8-validate
      - zod
    dev: false

  /vlq@1.0.1:
    resolution: {integrity: sha512-gQpnTgkubC6hQgdIcRdYGDSDc+SaujOdyesZQMv6JlfQee/9Mp0Qhnys6WxDWvQnL5WZdT7o2Ul187aSt0Rq+w==}
    dev: false

  /void-elements@3.1.0:
    resolution: {integrity: sha512-Dhxzh5HZuiHQhbvTW9AMetFfBHDMYpo23Uo9btPXgdYP+3T5S+p+jgNy7spra+veYhBP2dCSgxR/i2Y02h5/6w==}
    engines: {node: '>=0.10.0'}
    dev: false

  /vue@3.4.27:
    resolution: {integrity: sha512-8s/56uK6r01r1icG/aEOHqyMVxd1bkYcSe9j8HcKtr/xTOFWvnzIVTehNW+5Yt89f+DLBe4A569pnZLS5HzAMA==}
    peerDependencies:
      typescript: '*'
    peerDependenciesMeta:
      typescript:
        optional: true
    dependencies:
      '@vue/compiler-dom': 3.4.27
      '@vue/compiler-sfc': 3.4.27
      '@vue/runtime-dom': 3.4.27
      '@vue/server-renderer': 3.4.27(vue@3.4.27)
      '@vue/shared': 3.4.27
    dev: false

  /wagmi@2.9.7(@tanstack/react-query@5.40.0)(react-dom@18.3.1)(react-i18next@13.5.0)(react-native@0.74.1)(react@18.3.1)(viem@2.10.11):
    resolution: {integrity: sha512-IZ9Npgs9Te12kdrWousnYJfjzl3JaiyAarXGxJOdEiLB2eia8mMacob4XExg3Mn538ZP9ufsg7VAgWnGaK74lw==}
    peerDependencies:
      '@tanstack/react-query': '>=5.0.0'
      react: '>=18'
      typescript: '>=5.0.4'
      viem: 2.x
    peerDependenciesMeta:
      typescript:
        optional: true
    dependencies:
      '@tanstack/react-query': 5.40.0(react@18.3.1)
      '@wagmi/connectors': 5.0.6(@wagmi/core@2.10.4)(react-dom@18.3.1)(react-i18next@13.5.0)(react-native@0.74.1)(react@18.3.1)(viem@2.10.11)
      '@wagmi/core': 2.10.4(react@18.3.1)(viem@2.10.11)
      react: 18.3.1
      use-sync-external-store: 1.2.0(react@18.3.1)
      viem: 2.10.11
    transitivePeerDependencies:
      - '@azure/app-configuration'
      - '@azure/cosmos'
      - '@azure/data-tables'
      - '@azure/identity'
      - '@azure/keyvault-secrets'
      - '@azure/storage-blob'
      - '@capacitor/preferences'
      - '@netlify/blobs'
      - '@planetscale/database'
      - '@react-native-async-storage/async-storage'
      - '@tanstack/query-core'
      - '@types/react'
      - '@upstash/redis'
      - '@vercel/kv'
      - bufferutil
      - encoding
      - immer
      - ioredis
      - react-dom
      - react-i18next
      - react-native
      - rollup
      - supports-color
      - uWebSockets.js
      - utf-8-validate
      - zod
    dev: false

  /walker@1.0.8:
    resolution: {integrity: sha512-ts/8E8l5b7kY0vlWLewOkDXMmPdLcVV4GmOQLyxuSswIJsweeFZtAsMF7k1Nszz+TYBQrlYRmzOnr398y1JemQ==}
    dependencies:
      makeerror: 1.0.12
    dev: false

  /wcwidth@1.0.1:
    resolution: {integrity: sha512-XHPEwS0q6TaxcvG85+8EYkbiCux2XtWG2mkc47Ng2A77BQu9+DqIOJldST4HgPkuea7dvKSj5VgX3P1d4rW8Tg==}
    dependencies:
      defaults: 1.0.4
    dev: false

  /webextension-polyfill@0.10.0:
    resolution: {integrity: sha512-c5s35LgVa5tFaHhrZDnr3FpQpjj1BB+RXhLTYUxGqBVN460HkbM8TBtEqdXWbpTKfzwCcjAZVF7zXCYSKtcp9g==}
    dev: false

  /webidl-conversions@3.0.1:
    resolution: {integrity: sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ==}
    dev: false

  /whatwg-fetch@3.6.20:
    resolution: {integrity: sha512-EqhiFU6daOA8kpjOWTL0olhVOF3i7OrFzSYiGsEMB8GcXS+RrzauAERX65xMeNWVqxA6HXH2m69Z9LaKKdisfg==}
    dev: false

  /whatwg-url@5.0.0:
    resolution: {integrity: sha512-saE57nupxk6v3HY35+jzBwYa0rKSy0XR8JSxZPwgLr7ys0IBzhGviA1/TUGJLmSVqs8pb9AnvICXEuOHLprYTw==}
    dependencies:
      tr46: 0.0.3
      webidl-conversions: 3.0.1
    dev: false

  /which-module@2.0.1:
    resolution: {integrity: sha512-iBdZ57RDvnOR9AGBhML2vFZf7h8vmBjhoaZqODJBFWHVtKkDmKuHai3cx5PgVMrX5YDNp27AofYbAwctSS+vhQ==}
    dev: false

  /which-typed-array@1.1.15:
    resolution: {integrity: sha512-oV0jmFtUky6CXfkqehVvBP/LSWJ2sy4vWMioiENyJLePrBO/yKyV9OyJySfAKosh+RYkIl5zJCNZ8/4JncrpdA==}
    engines: {node: '>= 0.4'}
    dependencies:
      available-typed-arrays: 1.0.7
      call-bind: 1.0.7
      for-each: 0.3.3
      gopd: 1.0.1
      has-tostringtag: 1.0.2
    dev: false

  /which@2.0.2:
    resolution: {integrity: sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==}
    engines: {node: '>= 8'}
    hasBin: true
    dependencies:
      isexe: 2.0.0
    dev: false

  /wrap-ansi@6.2.0:
    resolution: {integrity: sha512-r6lPcBGxZXlIcymEu7InxDMhdW0KDxpLgoFLcguasxCaJ/SOIZwINatK9KY/tf+ZrlywOKU0UDj3ATXUBfxJXA==}
    engines: {node: '>=8'}
    dependencies:
      ansi-styles: 4.3.0
      string-width: 4.2.3
      strip-ansi: 6.0.1
    dev: false

  /wrap-ansi@7.0.0:
    resolution: {integrity: sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==}
    engines: {node: '>=10'}
    dependencies:
      ansi-styles: 4.3.0
      string-width: 4.2.3
      strip-ansi: 6.0.1
    dev: false

  /wrappy@1.0.2:
    resolution: {integrity: sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==}
    dev: false

  /write-file-atomic@2.4.3:
    resolution: {integrity: sha512-GaETH5wwsX+GcnzhPgKcKjJ6M2Cq3/iZp1WyY/X1CSqrW+jVNM9Y7D8EC2sM4ZG/V8wZlSniJnCKWPmBYAucRQ==}
    dependencies:
      graceful-fs: 4.2.11
      imurmurhash: 0.1.4
      signal-exit: 3.0.7
    dev: false

  /ws@6.2.2:
    resolution: {integrity: sha512-zmhltoSR8u1cnDsD43TX59mzoMZsLKqUweyYBAIvTngR3shc0W6aOZylZmq/7hqyVxPdi+5Ud2QInblgyE72fw==}
    peerDependencies:
      bufferutil: ^4.0.1
      utf-8-validate: ^5.0.2
    peerDependenciesMeta:
      bufferutil:
        optional: true
      utf-8-validate:
        optional: true
    dependencies:
      async-limiter: 1.0.1
    dev: false

  /ws@7.5.9:
    resolution: {integrity: sha512-F+P9Jil7UiSKSkppIiD94dN07AwvFixvLIj1Og1Rl9GGMuNipJnV9JzjD6XuqmAeiswGvUmNLjr5cFuXwNS77Q==}
    engines: {node: '>=8.3.0'}
    peerDependencies:
      bufferutil: ^4.0.1
      utf-8-validate: ^5.0.2
    peerDependenciesMeta:
      bufferutil:
        optional: true
      utf-8-validate:
        optional: true
    dev: false

  /ws@8.11.0:
    resolution: {integrity: sha512-HPG3wQd9sNQoT9xHyNCXoDUa+Xw/VevmY9FoHyQ+g+rrMn4j6FB4np7Z0OhdTgjx6MgQLK7jwSy1YecU1+4Asg==}
    engines: {node: '>=10.0.0'}
    peerDependencies:
      bufferutil: ^4.0.1
      utf-8-validate: ^5.0.2
    peerDependenciesMeta:
      bufferutil:
        optional: true
      utf-8-validate:
        optional: true
    dev: false

  /ws@8.13.0:
    resolution: {integrity: sha512-x9vcZYTrFPC7aSIbj7sRCYo7L/Xb8Iy+pW0ng0wt2vCJv7M9HOMy0UoN3rr+IFC7hb7vXoqS+P9ktyLLLhO+LA==}
    engines: {node: '>=10.0.0'}
    peerDependencies:
      bufferutil: ^4.0.1
      utf-8-validate: '>=5.0.2'
    peerDependenciesMeta:
      bufferutil:
        optional: true
      utf-8-validate:
        optional: true
    dev: false

  /xmlhttprequest-ssl@2.0.0:
    resolution: {integrity: sha512-QKxVRxiRACQcVuQEYFsI1hhkrMlrXHPegbbd1yn9UHOmRxY+si12nQYzri3vbzt8VdTTRviqcKxcyllFas5z2A==}
    engines: {node: '>=0.4.0'}
    dev: false

  /xtend@4.0.2:
    resolution: {integrity: sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==}
    engines: {node: '>=0.4'}
    dev: false

  /y18n@4.0.3:
    resolution: {integrity: sha512-JKhqTOwSrqNA1NY5lSztJ1GrBiUodLMmIZuLiDaMRJ+itFd+ABVE8XBjOvIWL+rSqNDC74LCSFmlb/U4UZ4hJQ==}
    dev: false

  /y18n@5.0.8:
    resolution: {integrity: sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==}
    engines: {node: '>=10'}
    dev: false

  /yallist@3.1.1:
    resolution: {integrity: sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==}
    dev: false

  /yaml@2.4.2:
    resolution: {integrity: sha512-B3VqDZ+JAg1nZpaEmWtTXUlBneoGx6CPM9b0TENK6aoSu5t73dItudwdgmi6tHlIZZId4dZ9skcAQ2UbcyAeVA==}
    engines: {node: '>= 14'}
    hasBin: true
    dev: false

  /yargs-parser@18.1.3:
    resolution: {integrity: sha512-o50j0JeToy/4K6OZcaQmW6lyXXKhq7csREXcDwk2omFPJEwUNOVtJKvmDr9EI1fAJZUyZcRF7kxGBWmRXudrCQ==}
    engines: {node: '>=6'}
    dependencies:
      camelcase: 5.3.1
      decamelize: 1.2.0
    dev: false

  /yargs-parser@21.1.1:
    resolution: {integrity: sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==}
    engines: {node: '>=12'}
    dev: false

  /yargs@15.4.1:
    resolution: {integrity: sha512-aePbxDmcYW++PaqBsJ+HYUFwCdv4LVvdnhBy78E57PIor8/OVvhMrADFFEDh8DHDFRv/O9i3lPhsENjO7QX0+A==}
    engines: {node: '>=8'}
    dependencies:
      cliui: 6.0.0
      decamelize: 1.2.0
      find-up: 4.1.0
      get-caller-file: 2.0.5
      require-directory: 2.1.1
      require-main-filename: 2.0.0
      set-blocking: 2.0.0
      string-width: 4.2.3
      which-module: 2.0.1
      y18n: 4.0.3
      yargs-parser: 18.1.3
    dev: false

  /yargs@17.7.2:
    resolution: {integrity: sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==}
    engines: {node: '>=12'}
    dependencies:
      cliui: 8.0.1
      escalade: 3.1.2
      get-caller-file: 2.0.5
      require-directory: 2.1.1
      string-width: 4.2.3
      y18n: 5.0.8
      yargs-parser: 21.1.1
    dev: false

  /yocto-queue@0.1.0:
    resolution: {integrity: sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==}
    engines: {node: '>=10'}
    dev: false

  /zustand@4.4.1(react@18.3.1):
    resolution: {integrity: sha512-QCPfstAS4EBiTQzlaGP1gmorkh/UL1Leaj2tdj+zZCZ/9bm0WS7sI2wnfD5lpOszFqWJ1DcPnGoY8RDL61uokw==}
    engines: {node: '>=12.7.0'}
    peerDependencies:
      '@types/react': '>=16.8'
      immer: '>=9.0'
      react: '>=16.8'
    peerDependenciesMeta:
      '@types/react':
        optional: true
      immer:
        optional: true
      react:
        optional: true
    dependencies:
      react: 18.3.1
      use-sync-external-store: 1.2.0(react@18.3.1)
    dev: false


================================================
File: sandboxes/.gitignore
================================================
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.js

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# local env files
.env*.local

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts


================================================
File: sandboxes/nostr/App.tsx
================================================
import * as React from 'react'
import { nostr, logout, Event, getConnectedPubkey } from '@joyid/nostr'
// @ts-ignore
import { getBlankEvent, verifySignature } from 'nostr-tools'

interface Props {
  pubkey: string | null
}

const blankEvent = getBlankEvent() as Event<number>

blankEvent.content = Math.random().toString()

const SignEvent = ({ pubkey }: Props) => {
  const [event, setEvent] = React.useState<Event>(blankEvent)
  const onSign = async () => {
    const signedEvent = await nostr.signEvent(blankEvent)
    setEvent(signedEvent)
  }
  const onVerify = async () => {
    try {
      const res = verifySignature(event)
      alert(res)
    } catch (error: any) {
      alert(error.message)
    }
  }
  return pubkey ? (
    <div className="w-full">
      <h2 className="mb-4 text-lg text-center">Sign Event</h2>
      <label className="label">Event:</label>
      <textarea
        className="textarea textarea-bordered w-full h-60 mb-4"
        placeholder="Signature"
        value={JSON.stringify(event, null, 4)}
        disabled></textarea>

      <button className="btn btn-primary mb-4 mr-4" onClick={onSign}>
        Sign
      </button>

      <button className="btn btn-primary btn-outline mb-4" onClick={onVerify}>
        Verify
      </button>

      <div className="divider"></div>
    </div>
  ) : null
}

export default function App() {
  const [pubkey, setPubkey] = React.useState<string | null>(
    getConnectedPubkey()
  )
  const onConnect = async () => {
    try {
      const res = await nostr.getPublicKey()
      setPubkey(res)
    } catch (error) {
      console.log(error)
    }
  }

  return (
    <div id="app">
      {pubkey ? (
        <>
          <h1 className="text-xl mb-4">Connected: {pubkey}</h1>
          <button
            className="btn btn-primary"
            onClick={() => {
              logout()
              setPubkey(null)
            }}>
            Disconnect
          </button>
          <div className="divider" />
        </>
      ) : (
        <button className="btn btn-primary" onClick={onConnect}>
          Connect JoyID
        </button>
      )}
      {pubkey ? <SignEvent pubkey={pubkey} /> : null}
    </div>
  )
}


================================================
File: sandboxes/nostr/App.vue
================================================
<template>
  <div id="app">
    <div v-if="pubkey">
      <h1 class="text-xl mb-4">Connected: {{ pubkey }}</h1>
      <button class="btn btn-primary" @click="disconnect">Disconnect</button>
      <div class="divider" />
      <SignEvent :address="pubkey" />
    </div>
    <button v-else class="btn btn-primary" @click="onConnect">
      Connect JoyID
    </button>
  </div>
</template>

<script lang="ts">
import { ref } from "vue";
import { nostr, logout, getConnectedPubkey } from "@joyid/nostr";
import SignEvent from "./SignEvent.vue";

export default {
  components: { SignEvent },
  setup() {
    const pubkey = ref<string | null>(getConnectedPubkey());

    const onConnect = async () => {
      try {
        const res = await nostr.getPublicKey();
        pubkey.value = res;
      } catch (error) {
        console.log(error);
      }
    };

    const disconnect = () => {
      logout();
      pubkey.value = null;
    };

    return { pubkey, onConnect, disconnect };
  },
};
</script>


================================================
File: sandboxes/nostr/SignEvent.vue
================================================
<template>
  <div v-if="address" class="w-full">
    <h2 class="mb-4 text-lg text-center">Sign Event</h2>
    <label class="label">Event:</label>
    <textarea class="textarea textarea-bordered w-full h-60 mb-4" placeholder="Signature"
      :value="JSON.stringify(event, null, 4)" disabled></textarea>
    <button class="btn btn-primary mb-4 mr-4" @click="onSign">Sign</button>
    <button class="btn btn-primary btn-outline mb-4" @click="onVerify">Verify</button>
    <div class="divider"></div>
  </div>
</template>

<script>
import { ref, defineComponent } from "vue";
import { nostr } from "@joyid/nostr";
import { getBlankEvent, verifySignature } from "nostr-tools";

const blankEvent = getBlankEvent();
blankEvent.content = Math.random().toString();

export default defineComponent({
  props: {
    address: {
      type: String,
      default: null,
    },
  },
  setup() {
    const event = ref(blankEvent);

    const onSign = async () => {
      const signedEvent = await nostr.signEvent(blankEvent);
      event.value = signedEvent;
    };

    const onVerify = async () => {
      try {
        const res = verifySignature(event.value);
        alert(res);
      } catch (error) {
        alert(error.message);
      }
    };

    return { event, onSign, onVerify };
  },
});
</script>


================================================
File: sandboxes/rainbowkit/App.tsx
================================================
import * as React from 'react'
import { verifyMessage, parseEther, Hex } from 'viem'
import { useAccount, useSendTransaction, useSignMessage } from 'wagmi'
import { ConnectButton } from '@rainbow-me/rainbowkit'
import { SignTypedData } from './typedData'

const SignMessage = ({ address }: { address?: Hex }) => {
  const [message, setMessage] = React.useState('Hello world')
  const [signature, setSignature] = React.useState<Hex>('0x')
  const { signMessageAsync } = useSignMessage()
  const onSign = async () => {
    const sig = await signMessageAsync({
      message,
    })
    setSignature(sig)
  }
  const onVerify = async () => {
    try {
      const res = await verifyMessage({
        message,
        signature,
        address: address!,
      })
      alert(res)
    } catch (error) {
      alert(JSON.stringify(error))
    }
  }
  return address ? (
    <div className="w-full">
      <h2 className="mb-4 text-lg text-center">Sign Message</h2>
      <label className="label">Message:</label>
      <input
        className="input input-bordered w-full mb-4"
        value={message}
        onChange={(e) => setMessage(e.target.value)}
      />
      <label className="label">Signature:</label>
      <textarea
        className="textarea textarea-bordered w-full mb-4"
        placeholder="Signature"
        value={signature}
        disabled></textarea>

      <button className="btn btn-primary mb-4 mr-4" onClick={onSign}>
        Sign
      </button>

      <button className="btn btn-primary btn-outline mb-4" onClick={onVerify}>
        Verify
      </button>

      <div className="divider"></div>
    </div>
  ) : null
}

const SendTransaction = ({ address }: { address?: Hex }) => {
  const [toAddress, setToAddress] = React.useState<Hex>(
    '0xA6eBeCE9938C3e1757bE3024D2296666d6F8Fc49'
  )
  const [amount, setAmount] = React.useState('0.01')
  const { sendTransactionAsync } = useSendTransaction()
  const onSign = async () => {
    const signedTx = await sendTransactionAsync({
      to: toAddress,
      value: parseEther(amount),
      account: address,
    })
    alert(`tx hash: ${signedTx}`)
  }
  return address ? (
    <div className="w-full">
      <h2 className="mb-4 text-lg text-center">Send Transaction</h2>
      <label className="label">To Address:</label>
      <input
        className="input input-bordered w-full mb-4"
        value={toAddress}
        onChange={(e) => setToAddress(e.target.value as Hex)}
      />
      <label className="label">Amount:</label>
      <input
        className="input input-bordered w-full mb-4"
        value={amount}
        onChange={(e) => setAmount(e.target.value)}
      />
      <button className="btn btn-primary" onClick={onSign}>
        Send
      </button>
      <div className="divider"></div>
    </div>
  ) : null
}

export function App() {
  const { address } = useAccount()
  return (
    <div id="app">
      <ConnectButton />
      <div className="divider"></div>
      <SignMessage address={address} />
      <SendTransaction address={address} />
      <SignTypedData address={address} />
    </div>
  )
}


================================================
File: sandboxes/rainbowkit/index.tsx
================================================
import React from 'react'
import ReactDOM from 'react-dom/client'
import { App } from './App'
import { Provider } from './provider'
import './styles.css'

ReactDOM.createRoot(document.getElementById('root')!).render(
  <React.StrictMode>
    <Provider>
      <App />
    </Provider>
  </React.StrictMode>
)


================================================
File: sandboxes/rainbowkit/provider.tsx
================================================
import React from 'react'
import { http, WagmiProvider, createConfig } from 'wagmi'
import { QueryClient, QueryClientProvider } from '@tanstack/react-query'
import { sepolia, polygonAmoy, opBNBTestnet } from 'wagmi/chains'
import {
  connectorsForWallets,
  RainbowKitProvider,
} from '@rainbow-me/rainbowkit'
import { createJoyIdWallet } from '@joyid/rainbowkit'
import { injectedWallet, coinbaseWallet } from '@rainbow-me/rainbowkit/wallets'
import '@rainbow-me/rainbowkit/styles.css'

const joyidWallet = createJoyIdWallet({
  // name of your app
  name: 'JoyID Rainbowkit demo',
  // logo of your app
  logo: 'https://fav.farm/🆔',
  // JoyID app url that your app is integrated with
  joyidAppURL: 'https://testnet.joyid.dev',
})

const connectors = connectorsForWallets(
  [
    {
      groupName: 'Recommended',
      wallets: [joyidWallet, injectedWallet, coinbaseWallet],
    },
  ],
  {
    appName: 'JoyID RainbowKit demo',
    // for walletconnect
    projectId: 'YOUR_PROJECT_ID',
  }
)

const config = createConfig({
  chains: [sepolia, polygonAmoy, opBNBTestnet],
  transports: {
    [sepolia.id]: http(),
    [polygonAmoy.id]: http(),
    [opBNBTestnet.id]: http(),
  },
  connectors,
})

export const Provider: React.FC<React.PropsWithChildren<any>> = ({
  children,
}) => {
  const queryClient = new QueryClient()
  return (
    <WagmiProvider config={config}>
      <QueryClientProvider client={queryClient}>
        <RainbowKitProvider>{children}</RainbowKitProvider>
      </QueryClientProvider>
    </WagmiProvider>
  )
}


================================================
File: sandboxes/rainbowkit/typedData.tsx
================================================
import * as React from 'react'
import { verifyTypedData, Hex } from 'viem'
import { useChainId, useSignTypedData } from 'wagmi'

const buildTypedData = (chainId: number) => {
  return {
    domain: {
      name: 'Ether Mail',
      version: '1',
      chainId,
      verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',
    },
    types: {
      Person: [
        { name: 'name', type: 'string' },
        { name: 'wallet', type: 'address' },
      ],
      Mail: [
        { name: 'from', type: 'Person' },
        { name: 'to', type: 'Person' },
        { name: 'contents', type: 'string' },
      ],
    },
    primaryType: 'Mail',
    message: {
      from: {
        name: 'Cow',
        wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',
      },
      to: {
        name: 'Bob',
        wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',
      },
      contents: 'Hello, Bob!',
    },
  } as const
}

export const SignTypedData = ({ address }: { address?: Hex }) => {
  const [signature, setSignature] = React.useState<Hex>('0x')
  const { signTypedDataAsync } = useSignTypedData()
  const chainId = useChainId()
  const typedData = buildTypedData(chainId)
  const onSign = async () => {
    const sig = await signTypedDataAsync(typedData)
    setSignature(sig)
  }
  const onVerify = async () => {
    try {
      const res = await verifyTypedData({
        ...typedData,
        address: address!,
        signature,
      })
      alert(res)
    } catch (error: any) {
      alert(error.message)
    }
  }
  return address ? (
    <div className="w-full">
      <h2 className="mb-4 text-lg text-center">Sign Type Data</h2>
      <label className="label">Signature:</label>
      <textarea
        className="textarea textarea-bordered w-full mb-4"
        placeholder="Signature"
        value={signature}
        disabled></textarea>

      <button className="btn btn-primary mb-4 mr-4" onClick={onSign}>
        Sign
      </button>

      <button className="btn btn-primary btn-outline mb-4" onClick={onVerify}>
        Verify
      </button>

      <div className="divider"></div>
    </div>
  ) : null
}


================================================
File: sandboxes/wagmi/App.tsx
================================================
import * as React from 'react'
import { verifyMessage, parseEther, Hex } from 'viem'
import {
  useAccount,
  useConnect,
  useDisconnect,
  useSendTransaction,
  useSignMessage,
} from 'wagmi'
import { SignTypedData } from './typedData'

const SignMessage = ({ address }: { address?: Hex }) => {
  const [message, setMessage] = React.useState('Hello world')
  const [signature, setSignature] = React.useState<Hex>('0x')
  const { signMessageAsync } = useSignMessage()
  const onSign = async () => {
    const sig = await signMessageAsync({
      message,
    })
    setSignature(sig)
  }
  const onVerify = async () => {
    try {
      const res = await verifyMessage({
        message,
        signature,
        address: address!,
      })
      alert(res)
    } catch (error) {
      alert(JSON.stringify(error))
    }
  }
  return address ? (
    <div className="w-full">
      <h2 className="mb-4 text-lg text-center">Sign Message</h2>
      <label className="label">Message:</label>
      <input
        className="input input-bordered w-full mb-4"
        value={message}
        onChange={(e) => setMessage(e.target.value)}
      />
      <label className="label">Signature:</label>
      <textarea
        className="textarea textarea-bordered w-full mb-4"
        placeholder="Signature"
        value={signature}
        disabled></textarea>

      <button className="btn btn-primary mb-4 mr-4" onClick={onSign}>
        Sign
      </button>

      <button className="btn btn-primary btn-outline mb-4" onClick={onVerify}>
        Verify
      </button>

      <div className="divider"></div>
    </div>
  ) : null
}

const SendTransaction = ({ address }: { address?: Hex }) => {
  const [toAddress, setToAddress] = React.useState<Hex>(
    '0xA6eBeCE9938C3e1757bE3024D2296666d6F8Fc49'
  )
  const [amount, setAmount] = React.useState('0.01')
  const { sendTransactionAsync } = useSendTransaction()
  const onSign = async () => {
    const signedTx = await sendTransactionAsync({
      to: toAddress,
      value: parseEther(amount),
      account: address,
    })
    alert(`tx hash: ${signedTx}`)
  }
  return address ? (
    <div className="w-full">
      <h2 className="mb-4 text-lg text-center">Send Transaction</h2>
      <label className="label">To Address:</label>
      <input
        className="input input-bordered w-full mb-4"
        value={toAddress}
        onChange={(e) => setToAddress(e.target.value as Hex)}
      />
      <label className="label">Amount:</label>
      <input
        className="input input-bordered w-full mb-4"
        value={amount}
        onChange={(e) => setAmount(e.target.value)}
      />
      <button className="btn btn-primary" onClick={onSign}>
        Send
      </button>
      <div className="divider"></div>
    </div>
  ) : null
}

export function App() {
  const { address, status } = useAccount()
  const { connect, connectors } = useConnect()
  const connecting = status === 'connecting' || status === 'reconnecting'
  const { disconnect } = useDisconnect()
  return (
    <div id="app">
      {address ? (
        <>
          <h1 className="text-xl mb-4">{`Connected: ${address}`}</h1>
          <button className="btn btn-primary" onClick={() => disconnect()}>
            Disconnect
          </button>
          <div className="divider" />
        </>
      ) : (
        <button
          className="btn btn-primary"
          disabled={connecting}
          onClick={() =>
            connect({
              connector: connectors[0],
            })
          }>
          {connecting ? (
            <span className="loading loading-spinner"></span>
          ) : null}
          Connect JoyID
        </button>
      )}
      <div className="divider"></div>
      <SignMessage address={address} />
      <SendTransaction address={address} />
      <SignTypedData address={address} />
    </div>
  )
}


================================================
File: sandboxes/wagmi/index.tsx
================================================
import React from 'react'
import ReactDOM from 'react-dom/client'
import { App } from './App'
import { Provider } from './provider'
import './styles.css'

ReactDOM.createRoot(document.getElementById('root')!).render(
  <React.StrictMode>
    <Provider>
      <App />
    </Provider>
  </React.StrictMode>
)


================================================
File: sandboxes/wagmi/provider.tsx
================================================
import React from 'react'
import { http, WagmiProvider, createConfig } from 'wagmi'
import { QueryClient, QueryClientProvider } from '@tanstack/react-query'
import { sepolia, polygonAmoy, opBNBTestnet } from 'wagmi/chains'
import { joyidConnector } from '@joyid/wagmi'

const config = createConfig({
  chains: [sepolia, polygonAmoy, opBNBTestnet],
  transports: {
    [sepolia.id]: http(),
    [polygonAmoy.id]: http(),
    [opBNBTestnet.id]: http(),
  },
  connectors: [
    joyidConnector({
      // name of your app
      name: 'JoyID Rainbowkit demo',
      // logo of your app
      logo: 'https://fav.farm/🆔',
      // JoyID app url that your app is integrated with
      joyidAppURL: 'https://testnet.joyid.dev',
    }),
  ],
})

export const Provider: React.FC<React.PropsWithChildren<any>> = ({
  children,
}) => {
  const queryClient = new QueryClient()
  return (
    <WagmiProvider config={config}>
      <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>
    </WagmiProvider>
  )
}


================================================
File: sandboxes/wagmi/typedData.tsx
================================================
import * as React from 'react'
import { verifyTypedData, Hex } from 'viem'
import { useChainId, useSignTypedData } from 'wagmi'

const buildTypedData = (chainId: number) => {
  return {
    domain: {
      name: 'Ether Mail',
      version: '1',
      chainId,
      verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',
    },
    types: {
      Person: [
        { name: 'name', type: 'string' },
        { name: 'wallet', type: 'address' },
      ],
      Mail: [
        { name: 'from', type: 'Person' },
        { name: 'to', type: 'Person' },
        { name: 'contents', type: 'string' },
      ],
    },
    primaryType: 'Mail',
    message: {
      from: {
        name: 'Cow',
        wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',
      },
      to: {
        name: 'Bob',
        wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',
      },
      contents: 'Hello, Bob!',
    },
  } as const
}

export const SignTypedData = ({ address }: { address?: Hex }) => {
  const [signature, setSignature] = React.useState<Hex>('0x')
  const { signTypedDataAsync } = useSignTypedData()
  const chainId = useChainId()
  const typedData = buildTypedData(chainId)
  const onSign = async () => {
    const sig = await signTypedDataAsync(typedData)
    setSignature(sig)
  }
  const onVerify = async () => {
    try {
      const res = await verifyTypedData({
        ...typedData,
        address: address!,
        signature,
      })
      alert(res)
    } catch (error: any) {
      alert(error.message)
    }
  }
  return address ? (
    <div className="w-full">
      <h2 className="mb-4 text-lg text-center">Sign Type Data</h2>
      <label className="label">Signature:</label>
      <textarea
        className="textarea textarea-bordered w-full mb-4"
        placeholder="Signature"
        value={signature}
        disabled></textarea>

      <button className="btn btn-primary mb-4 mr-4" onClick={onSign}>
        Sign
      </button>

      <button className="btn btn-primary btn-outline mb-4" onClick={onVerify}>
        Verify
      </button>

      <div className="divider"></div>
    </div>
  ) : null
}


================================================
File: styles/globals.css
================================================
@tailwind base;
@tailwind components;
@tailwind utilities;

html.light nav {
  color: rgb(15 23 42);
}

html.light .bg-base-100 {
  background-color: #fff;
}

iframe.sandbox {
  width: 100%;
  min-height: 500px;
}


